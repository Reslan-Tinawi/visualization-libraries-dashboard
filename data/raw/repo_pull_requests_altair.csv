index,id,number,repo_id,created_at,closed_at,state,title,body,total_comments,total_commits,labels
0,705695231,2486,42757577,2021-08-06 19:16:47,2021-08-06 20:16:00,closed,Fix minor typo in installation docs,,1,1,[]
1,695192184,2480,42757577,2021-07-22 13:38:15,2021-08-02 18:54:24,closed,DOC: add `mark_trail` to user guide's list of marks,"I hope I'm not missing anything obvious, but it seems trail mark is missing from the [list of marks in the user guide](https://altair-viz.github.io/user_guide/marks.html).",1,1,[]
2,645302244,2466,42757577,2021-05-16 11:30:14,,open,fix: remove webdriver default argument to save,This PR addresses https://github.com/altair-viz/altair_saver/issues/72,0,2,[]
3,612840509,2454,42757577,2021-04-10 05:43:03,,open,Adding 2 examples on using custom svg shapes,"Last year I was able to get some cool graphs using custom SVG shapes with @jakevdp 's help. I eventually ended up emulating a lot of cool graphs and put them on my project website: https://armsp.github.io/covidviz/

This is a PR that adds simplified examples of just the maps with custom SVG markers.

## Example 1: custom_svg_mark_geospatial.py
This example shows how to use custom SVG shapes as marks on Geospatial plots.   

_Since the data for this plot is not available in vega-datasets, you'd have to download the data hosted on my personal repo_ - https://github.com/armsp/datasets/blob/master/covid_cases_april_6.csv

## Example 2: interactive_time_series_geospatial_chart.py
This example shows how to use range slider that lets you choose a day which is used by the selection to select data only for that day to visualize surge in per-capita cases of covid-19. The marks are custom SVG shapes (a vertical line) on a geospatial plot (it looks like a bar plot on a map). Slide the slider knob to see how the selection changes the data and hence the plot.   

_Since the data for this plot is not available in vega-datasets, you'd have to download the data hosted on my personal repo_ - https://github.com/armsp/datasets/blob/master/past_2_weeks_per_capita.csv

## Some Issues
There are some [guidelines](https://github.com/altair-viz/altair/blob/master/CONTRIBUTING.md#adding-examples) on things to take care of when adding examples. Unfortunately I have broken a few of them. I do not know the best way to fix them. So I am hoping that the maintainers would guide me on the best possible way to fix them so that the PR is in a state that can be merged for the next release cycle.

Things I believe I have not followed -
1. The data for the `states` base layer is requested from the CDN providers for us-atlas project : *external calls to data*
2. The data for plots is hosted on my personal repo : *external calls to data*
3. I am not sure of the category of the first plot - `maps` OR `other charts`
",1,2,[]
4,611934324,2452,42757577,2021-04-08 21:02:20,,open,fixed typo in transform_filter documentation ,"There is a a typo in the [documentation](https://altair-viz.github.io/user_guide/transform/filter.html#user-guide-filter-transform) for `.filter_transform()` as  mentioned in #2434, where the description of a chart doesn't match the specification. 

The specification states ""here we plot US population distributions for all data except the years 1950-1960..."", but the code removes the years 1900-1950 with following filter:

```python
.transform_filter(
    {'not': alt.FieldRangePredicate(field='year', range=[1900, 1950])}
)
```

At first, I had fixed the typo by changing the text to say ""1900-1950"".  But for some reason, I decided it seemed more reasonable to remove the years 1950-1960 rather than 1900-1950. 

",0,2,[]
5,608572556,2445,42757577,2021-04-04 16:25:58,2021-04-04 16:59:23,closed,Add Hexbin Example to docs,"I like to use hexbin charts, and thought it would be nice to include a example to altair's documentation. Please feel free to review and eventually correct or extend my contribution, if you think it is worth merging with your master branch.

As always, thank you for your great work!",1,1,[]
6,601783366,2433,42757577,2021-03-26 17:09:52,,open,Information about accessing local files,A small change to the docs.,0,1,[]
7,579589005,2420,42757577,2021-02-24 20:29:17,2021-02-24 21:20:32,closed,fix typos in Contributing.md,I fixed a few typos in Contributing.md. ,1,1,[]
8,579398672,2419,42757577,2021-02-24 15:39:33,,open,fix histograms,Implements solution discussed in issue #2411 (based on https://github.com/vega/vega-lite/issues/5403) for the examples [Layered Histogram](https://altair-viz.github.io/gallery/layered_histogram.html) and [Facetted Scatterplot with marginal histograms](https://altair-viz.github.io/gallery/scatter_marginal_hist.html). ,2,3,[]
9,578790389,2417,42757577,2021-02-23 22:12:47,2021-02-23 22:28:39,closed,Add issue templates,"Here is a suggestion for what the issue templates could look like.
",0,1,[]
10,577962567,2415,42757577,2021-02-22 21:45:59,,open,Update resource section,"Somehow I missed that this section already existed when opening #2414. It was quite out of date, so I removed packages that haven't seen updates in a few years and added new ones as well a section on the learning resources. I also attempted to make this more discoverable by adding links from the Overview and Gallery pages.

close #2414 ",8,3,[]
11,576684084,2410,42757577,2021-02-19 19:58:36,2021-02-20 16:54:17,closed,Prevent marks from extending beyond the chart area in error bar example,"This is a fix to [the simple error bar example](https://altair-viz.github.io/gallery/simple_scatter_with_errorbars.html). Currently the marks extend beyond chart area, like this:

![image](https://user-images.githubusercontent.com/4560057/108554413-e828eb00-72a8-11eb-86dd-24fd68e4afdc.png)

This changes it to:

![image](https://user-images.githubusercontent.com/4560057/108554376-d8110b80-72a8-11eb-9104-b9b140a145e9.png)

Btw, I started trying to help out with some of the support related aspect by replying to Altair questions here and on SO, please let me know if you generally prefer to reply yourself instead.

I can also go through the GitHub issues and ping the authors to close the ones that are resolved (or close them myself if you would be ok with that), but since this would generate quite some noise in your inbox, I thought I would ask first if you would like me to do that or not.
",11,1,[]
12,571199236,2404,42757577,2021-02-10 15:43:02,2021-02-10 18:15:32,closed,Use colors specified in line_scale,This change will use the colors specified in `line_scale`. Previously `line_scale` was never used.,1,1,[]
13,570835719,2403,42757577,2021-02-10 05:38:42,2021-02-10 19:46:32,closed,Avoid confusing Python by returning generic objects for magic attributes.,"As reported in #2402 , we recently came up against an issue whereby Altair charts could not be deep-copied. The issue is that in three locations a `__getattr__` method is implemented in such a way that it returns a object for any named attribute. This is usually helpful, but it sometimes confuses Python when it coincides with a Python ""magic"" method/attribute (which are always of form `__<name>__`; and in this case in particular, `__deepcopy__` is looked up but then doesn't behave in the way `copy.deepcopy` expects.

This patch causes Altair to avoid returning generic objects as attributes for Python magic names, fixing this (and other similar) issue(s).

closes #2402 ",2,1,[]
14,570477414,2401,42757577,2021-02-09 17:37:45,2021-02-09 21:25:06,closed,Correct boxplot example to reflect title,"If you prefer I can change the title instead, but currently it does not match with the example code. I think it is more useful to see the non-default behavior and expanded a bit on the note regarding the default, but up to you.",1,1,[]
15,568104421,2400,42757577,2021-02-05 05:40:12,2021-02-05 18:49:59,closed,Force double_precision=15 in utils.data:_data_to_json_string,"Leaving it implied at pandas' [default of 10](https://github.com/pandas-dev/pandas/blob/5d65e0a3092f3c30169d0c0a3d0227e985104a56/pandas/io/json/_json.py#L55) makes the altair_data_server that uses this method drop numbers between 9.999e-16 and 5e-11, leading to unexpected and imo bad behavior like in https://github.com/altair-viz/altair_data_server/issues/45.",1,1,[]
16,567912219,2399,42757577,2021-02-04 20:59:30,,open,support serializing nullable float data,"Fixes #2398. 
This PR introduces support for serialising pandas nullable data types for float data (`Float32Dtype` and `Float64Dtype`) that were [introduced](https://pandas.pydata.org/pandas-docs/dev/whatsnew/v1.2.0.html#experimental-nullable-data-types-for-float-data) in pandas 1.2.0.

```python
import pandas as pd
import altair as alt

df = pd.DataFrame({'x': [1, 2, 3, 4, 5, 6, 7], 'y': [10, 30, None, 15, None, 40, 20]}, 
                  dtype=pd.Float32Dtype()) # pd.Float64Dtype()

alt.Chart(df).mark_line(point=True).encode(x='x', y='y')
```
<img width=""153"" alt=""image"" src=""https://user-images.githubusercontent.com/5186265/106954489-2adcb600-6734-11eb-8303-6ebf7b45dc70.png"">
",2,2,[]
17,564706558,2397,42757577,2021-01-31 18:42:24,2021-02-08 22:32:18,closed,add comet chart example,Here's the example resulting from https://github.com/altair-viz/altair/issues/2395.,2,1,[]
18,553531754,2386,42757577,2021-01-12 15:11:05,2021-01-12 16:59:03,closed,Add white background to cars.png to support dark mode Github,"cars.png is not legible when using Github in dark mode because the background is transparent. Here is a screenshot of the diff when pointing README.md to https://raw.githubusercontent.com/jonathangjertsen/altair/master/images/cars.png instead of https://raw.githubusercontent.com/altair-viz/altair/master/images/cars.png:

![Capture](https://user-images.githubusercontent.com/7355797/104332408-6fd44a80-54f0-11eb-961c-944c015b7f98.PNG)

There may be other images with the same issue in the docs etc, I haven't checked.",1,2,[]
19,544631466,2375,42757577,2020-12-23 07:52:36,2020-12-23 17:19:52,closed,Docs: Flip extent='max-min' to extent='min-max',"Fixed a small mistake in user_guide/marks

- extent='max-min' is not a valid argument -> Changed to extent='min-max'",1,1,[]
20,529795834,2355,42757577,2020-11-30 20:34:56,2020-12-01 00:37:55,closed,allow Paths in save(),Fixes #2354,2,2,[]
21,526687339,2346,42757577,2020-11-24 18:50:51,2020-11-24 21:28:07,closed,Fix typo in getting_started/starting.rst,,1,1,[]
22,520638950,2338,42757577,2020-11-13 15:12:39,,open,Corrected field names to allow example to work,Field names in the code had character '_' while the field names in the data uses a space character causing a mismatch and the example did not show correct data.,0,1,[]
23,517866558,2334,42757577,2020-11-09 16:01:55,2021-02-10 15:33:11,closed,Use `line_scale` to set customized colors,`line_scale` was defined but never used in the chart. The PR looks large since the file is reformatted using black. The only actual change is to add `scale=line_scale` to `alt.Color`.,4,4,[]
24,505389823,2320,42757577,2020-10-18 04:49:35,2020-10-19 22:33:11,closed,Remove redundant column name,I don't think this is needed is it? It seems to work for me without the column name.,1,1,[]
25,504615916,2319,42757577,2020-10-16 06:21:05,2020-10-16 14:33:27,closed,Create HelloWorld,,0,1,['invalid']
26,500258199,2313,42757577,2020-10-09 00:04:40,2020-10-09 00:34:14,closed,Update renderer descriptions for 4.0 and fix mimebundle typo,"This is based of my understanding of [your comment here](https://github.com/altair-viz/altair/issues/2311#issuecomment-705877316) and issue https://github.com/altair-viz/altair/issues/2234. If `'colab'` is the same as `'html'` I can change to reflect that.

close https://github.com/altair-viz/altair/issues/2234 ",1,1,[]
27,499557991,2310,42757577,2020-10-07 22:49:08,,open,Update URLs and field names to match the new vega weather datasets,This fixes the broken weather sections in the docs mentioned in https://github.com/altair-viz/altair/issues/2213. I upated based on my understanding of https://github.com/altair-viz/vega_datasets/pull/40.,4,1,[]
28,497442604,2307,42757577,2020-10-04 14:28:17,,open,Improved Docs,,0,1,[]
29,497314224,2306,42757577,2020-10-03 17:55:12,,open,Added altair_saver to doc/requirements.txt,Building the docs requires the `altair_saver` package. PR adds it as a requirement to `doc/requirements.txt`. I think there's an argument for adding it to `requirements_dev.txt` instead/as well since non doc-specific contributions might require new documentation.,0,2,[]
30,495468947,2305,42757577,2020-09-30 12:21:28,2020-10-23 16:17:20,closed,Switch to non-deprecated methods in sphinx extension,"The methods ```add_stylesheet``` and ```add_javascript``` in sphinx are deprecated and have started to give warnings. Using Sphinx version 3.2.1 I get:

```../.tox/run/lib/python3.7/site-packages/altair/sphinxext/altairplot.py:327: RemovedInSphinx40Warning: The app.add_stylesheet() is deprecated. Please use app.add_css_file() instead.
  app.add_stylesheet(""altair-plot.css"")
../.tox/run/lib/python3.7/site-packages/altair/sphinxext/altairplot.py:307: RemovedInSphinx40Warning: The app.add_javascript() is deprecated. Please use app.add_js_file() instead.
  app.add_javascript(app.config.altairplot_vega_js_url)
../.tox/run/lib/python3.7/site-packages/altair/sphinxext/altairplot.py:308: RemovedInSphinx40Warning: The app.add_javascript() is deprecated. Please use app.add_js_file() instead.
  app.add_javascript(app.config.altairplot_vegalite_js_url)
../.tox/run/lib/python3.7/site-packages/altair/sphinxext/altairplot.py:309: RemovedInSphinx40Warning: The app.add_javascript() is deprecated. Please use app.add_js_file() instead.
  app.add_javascript(app.config.altairplot_vegaembed_js_url)
```

This PR will switch to using the new methods. See sphinx documentation for info on methods and deprecation: https://www.sphinx-doc.org/en/master/extdev/appapi.html",3,1,[]
31,488956848,2293,42757577,2020-09-17 22:08:21,2020-09-17 22:20:10,closed,maint: black formatting,"I noticed #2292 failed due to formatting errors. 

I simply ran `black .` on the root directory, and it reformatted a few files. ",1,1,[]
32,488949818,2292,42757577,2020-09-17 21:49:15,,open,docs: add youtube videos to docs,"I wanted to embed some YouTube videos into the docs (#667) similar to what was done in the [Jupyter Lab docs](https://jupyterlab.readthedocs.io/en/latest/getting_started/overview.html). I have grabbed the custom CSS from the [Jupyter Lab repo](https://github.com/jupyterlab/jupyterlab/blob/9e980648319ad0a5252195e3639a69a294624785/docs/source/_static/custom.css) on GitHub, and slightly repurposed it. 

I've added my three videos in appropriate places in the docs as well. 
- [What is Altair?](https://youtu.be/AAuPPorsmJc) in the [Altair Internals](https://altair-viz.github.io/user_guide/internals.html) section
- [Altair's Visualization Grammar](https://youtu.be/U7w1XumKK60) in the [Overview](https://altair-viz.github.io/getting_started/overview.html) section
- [Altair's Data Types](https://youtu.be/LSEPyCqjoAg) in the [Encoding Data Types](https://altair-viz.github.io/user_guide/encoding.html#encoding-data-types) section

I tested a build of the docs and things are looking good.
",0,1,[]
33,482263888,2283,42757577,2020-09-08 19:57:28,2020-09-08 23:21:00,closed,Changed Altair version to 4,I've updated the Altair version the note is referring to.,1,1,[]
34,476593517,2273,42757577,2020-08-31 22:51:33,2020-09-01 18:50:11,closed,docs: fix indentation in readme,,1,1,[]
35,472023690,2267,42757577,2020-08-22 19:05:14,,open,Add some examples,"I've implemented the following two examples from Vega-Lite gallery

1. faceted bullet chart

![image](https://user-images.githubusercontent.com/7944978/90963712-0e183300-e4b2-11ea-92cd-715c72e1b07f.png)

2. layered bar chart of weekly weather

![image](https://user-images.githubusercontent.com/7944978/90963730-3011b580-e4b2-11ea-8b7a-f1c8d774f2b1.png)

and this sleek neon plot I came across online, originally done using matplotlib

![image](https://user-images.githubusercontent.com/7944978/90963760-90a0f280-e4b2-11ea-8a44-92a6ff6b7f22.png)
",1,4,[]
36,468362736,2262,42757577,2020-08-15 20:41:06,,open,fix: remove duplicate /,"Right now, the generated html contains double `/`.

<img width=""721"" alt=""Screen Shot 2020-08-15 at 13 39 13"" src=""https://user-images.githubusercontent.com/589034/90321256-ed257000-defc-11ea-8579-49a63500e88b.png"">
",0,1,[]
37,451423505,2242,42757577,2020-07-17 20:10:08,,open,Add new implementation of horizon graph,"I was interested in the horizon graph paper but the implementation on the altair website didn't include the negative offset parts as in the paper. So I implemented that myself!

Only change is to the code in the example. It generates a set of random sine wave data visualizations stacked together to show how you can scan across a number of horizon graphs to increase data density.

Apologies if the style isn't quite correct - I'm learning altair myself at the moment (and enjoying it so far!).
",1,1,[]
38,451380024,2241,42757577,2020-07-17 19:14:03,,open,Fixed movie dataset columns in examples and docs,"Hey, awesome library! 

I updated a few of the broken examples and docs mentioned here https://github.com/altair-viz/altair/issues/2213#issuecomment-651164633 (that use the movie dataset).

I wasn't able to build the docs locally so I looked them over in a jupyter notebook using `altair=4.1.0` and `vega_datasets=0.8.0` and they looked fine.

I started looking at `altair/examples/multiple_interactions.py` as well but I ran into this upstream issue https://github.com/vega/vega-lite/issues/4870 so I left it alone",2,1,[]
39,446990857,2233,42757577,2020-07-09 17:16:34,2020-07-10 20:27:08,closed,Ecosystem: gif,Adding gif to the source Ecosystem instead of generated docs,2,2,[]
40,446591848,2231,42757577,2020-07-09 03:19:01,,open,Iris to penguins,"Maybe someone is already working on this, but to help with #2213 I found it fun to rewrite three of the (currently broken) compound chart documentation sections using the new penguins dataset instead of iris.

I used the mapping
```python
{
    ""sepalLength"": ""Beak Length (mm)"",
    ""sepalWidth"": ""Beak Depth (mm)"",
    ""petalLength"": ""Flipper Length (mm)"",
    ""petalWidth"": ""Body Mass (g)"",
    ""species"": ""Species"",
}
```
since this seemed more or less faithful to the patterns in iris. I also chose to un-anchor the scales from zero since the penguin means are not very close to zero.

![visualization](https://user-images.githubusercontent.com/1120261/86992450-583d9300-c156-11ea-9885-2db8dbca472b.png)

While working on this, I found it useful to make a [modified version](https://github.com/eitanlees/vega_datasets/compare/update-to-vega-datasets-v2...baldwint:altair-doc-shim) of `vega_datasets` that retains some of the older datasets so that the docs can build without failing on examples that haven't been updated yet.",1,3,[]
41,439726258,2221,42757577,2020-06-25 06:56:33,2021-02-24 09:32:08,closed,Broader data support in Chart,"I use Altair pretty much exclusively as a visualization library. One action that comes up moderately often is having to cast things to a DataFrame before Altair will accept them. For me, a nice feature would be to have broader support for different data types in `Chart`.

* I've implemented this support for `pd.Series`, allowing rug plots, histograms, etc. without the call to `to_frame()`.
* I plan on experimenting with pure Python data types. I know we can pass a `Data` object, but this is still mystical to me. Maybe all that comes out of this is some updates to the documentation.
* I tend to make good use of pandas multiindex functionality. I'm a bit mystified why having a multiindex in the index raises an error: it gets dropped anyway in the call `to_records`. Is there any specific reason for that?
* On the subject of indices, maybe we could make sure the index data gets preserved. For instance, currently it is quite a lot of lines to make a density plot of categorical variable. It would be quite nice to just type `alt.Chart(df.column.value_counts(normalize=True)).mark_bar().encode(x=""index"", y=""column"")` instead of having to reset the index and rename the column before passing it into `Chart`.

Let me know what you think!",1,7,[]
42,436798995,2212,42757577,2020-06-18 22:47:28,2020-06-18 22:59:19,closed,compound chart changes due to movies dataset column name change,movies dataset column names have changed to remove the _ replaced by spaces. So the user guide compound chart is not rendering correctly.,1,1,[]
43,433158105,2205,42757577,2020-06-11 15:25:13,2020-06-11 18:12:06,closed,Update encoding guide table,Resolves #2202 as well as fills in some more examples. ,1,1,[]
44,424007135,2179,42757577,2020-05-27 17:36:01,2020-05-27 17:43:51,closed,Typo correction (density),Tiny fix: denity -> density .,1,1,[]
45,422512330,2171,42757577,2020-05-25 02:22:50,2020-05-25 20:25:43,closed,CI: Fix flake8 import issue,Getting some CI failures on a couple PRs which I think this fixes,2,1,[]
46,422510496,2170,42757577,2020-05-25 02:12:55,2020-09-22 21:13:32,closed,Don't cast pandas.Categorical to object,"I think the pandas bug mentioned in this comment is fixed so it may be possible to skip the conversion to object entirely

https://github.com/altair-viz/altair/issues/245#issuecomment-633165346",2,3,[]
47,422503907,2169,42757577,2020-05-25 01:33:02,2020-09-22 21:13:37,closed,CLN: Use f-strings over format,"I'm not sure if this project prefers f-strings, but if so here's a PR to use those instead of format in a few places. Also fixes a typo in the contributing guidelines.",1,7,[]
48,415194236,2145,42757577,2020-05-08 11:46:19,,open,Fix some code quality and bug-risk issues,"- Fix dangerous default argument
- Remove unnecessary comprehension
- Remove assert statement from non test files

---

Find the other issues found here - [https://deepsource.io/gh/pnijhara/altair/issues/?category=recommended](https://deepsource.io/gh/pnijhara/altair/issues/?category=recommended)

This PR also adds `.deepsource.toml` configuration file to run DeepSource analysis on the repo with. Upon enabling DeepSource, the analysis will run on every PR and commit to detect 560+ types of issues in the changes — including bug risks, anti-patterns, security vulnerabilities, etc.

To enable DeepSource analysis after merging this PR, please follow these steps:

1. [Signup](https://deepsource.io/signup/) on DeepSource with your GitHub account and grant access to this repo.
2. Activate analysis on this repo [here](http://deepsource.io/gh/altair-viz/altair).

You can also look at the [docs](https://deepsource.io/docs/guides/quickstart.html) for more details. Do let me know if I can be of any help!",0,2,[]
49,413303400,2135,42757577,2020-05-05 04:46:15,2020-05-05 13:39:41,closed,Typo correction in scatter_linked_table,"Since the contents of this repository are automatically generated, I hope this is the correct place to make this change.",1,1,[]
50,410734985,2120,42757577,2020-04-29 14:04:25,2020-04-29 14:24:01,closed,BUG: fix to_dict() for nested selections,,0,1,[]
51,406809108,2106,42757577,2020-04-21 17:39:50,2020-04-24 04:42:49,closed,"DOC: Update ""Line Chart with Points"" example.","This is a PR to fix #2100.
I couldn't dare to add second chart as it seems that only one per example is desired. So I decided to update text description. I hope that is OK.",1,1,[]
52,405598314,2099,42757577,2020-04-19 03:37:11,2020-04-19 03:55:18,closed,Fix item access for expressions,See #2096,0,1,[]
53,405156653,2095,42757577,2020-04-17 14:11:58,2020-04-17 19:02:16,closed,Fixed citation,"The citation suggestion was missing volume, number, and pages. I
adjusted according to: https://joss.theoj.org/papers/10.21105/joss.01057#

PCCP was complaining about the lack page or volume number.",3,1,[]
54,404747264,2093,42757577,2020-04-16 21:23:49,2020-04-16 21:48:04,closed,DOC: tiny update,"The mentioned example is no longer a good example (due to a Vega-Lite update). Thus, the link was removed.",1,1,[]
55,402952626,2091,42757577,2020-04-14 03:46:07,2020-04-18 17:41:42,closed,Added example of a cumulative line chart,"```python
import altair as alt
from vega_datasets import data

source = data.wheat()

alt.Chart(source).mark_line().transform_window(
    # Sort the data chronologically in this case
    sort=[{'field': 'year'}],
    # Include all previous records before the current record and none after
    frame=[None, 0],
    # What we want to add up
    cumulative_wheat='sum(wheat)',
).encode(
    x='year:O',
    # Plot the calculated field created by the transformation
    y='cumulative_wheat:Q'
).properties(width=600)
```

![visualization (6)](https://user-images.githubusercontent.com/9993/79183957-caa50e00-7dc7-11ea-8f7f-0d19d4dc444d.png)
",1,6,[]
56,402688681,2088,42757577,2020-04-13 15:10:08,2020-04-14 03:47:58,closed,Added example of bar chart with rolling mean,"```python
import altair as alt
from vega_datasets import data

source = data.wheat()

bar = alt.Chart(source).mark_bar().encode(
    x='year:O',
    y='wheat:Q'
)

line = alt.Chart(source).mark_line(color='red').transform_window(
    # The field to average
    rolling_mean='mean(wheat)',
    # The number of values before and after the current value to include.
    frame=[-9, 0]
).encode(
    x='year:O',
    y='rolling_mean:Q'
)

(bar + line).properties(width=600)
```

![visualization (5)](https://user-images.githubusercontent.com/9993/79131881-2dfa5600-7d5e-11ea-985a-d376deaf2921.png)
",1,2,[]
57,402679399,2087,42757577,2020-04-13 14:50:13,2020-04-14 03:48:53,closed,Added example with line chart on a logarithmic scale,"A new line chart example that shows how to set [a log scale](https://en.wikipedia.org/wiki/Logarithmic_scale).

```python
import altair as alt
from vega_datasets import data

source = data.population()

alt.Chart(source).mark_line().encode(
    x='year:O',
    y=alt.Y(
        'sum(people)',
        scale=alt.Scale(type=""log"")  # Here the scale is applied
    )
)
```

![visualization (4)](https://user-images.githubusercontent.com/9993/79130149-52a0fe80-7d5b-11ea-8734-bac08d8d5892.png)
",1,1,[]
58,401884308,2080,42757577,2020-04-10 12:09:38,2020-04-10 13:00:18,closed,DOC: tiny language fix,,1,1,[]
59,401881683,2079,42757577,2020-04-10 12:00:33,2020-04-10 13:00:45,closed,DOC: bump copyright year,,1,1,[]
60,401352310,2076,42757577,2020-04-09 10:49:47,2020-04-09 12:22:13,closed,DOC: tiny update,Update reflecting the change in behavior in a recent vega-lite update.,1,1,[]
61,401080981,2074,42757577,2020-04-08 21:06:52,2020-04-08 23:38:27,closed,DOC: tiny updates,,1,1,[]
62,399967553,2072,42757577,2020-04-07 00:08:42,2020-04-07 00:25:32,closed,DOC: improve selection binding examples,,0,2,[]
63,398805391,2069,42757577,2020-04-04 23:00:21,2020-04-05 04:14:15,closed,DOC: tiny update,,4,1,[]
64,398467396,2063,42757577,2020-04-04 04:34:19,2020-04-04 05:10:37,closed,BUG: support pdf format in chart.save,Fixes #2062 ,2,1,[]
65,396775923,2056,42757577,2020-04-01 05:52:50,2020-04-01 06:01:59,closed,MAINT: add build-system to pyproject.toml,,0,1,[]
66,396348710,2055,42757577,2020-03-31 13:48:18,2020-03-31 14:09:54,closed,TST: use fixture to detect altair_saver,,0,1,[]
67,396321536,2054,42757577,2020-03-31 13:05:08,2020-03-31 13:46:15,closed,MAINT: split doc build and test in github CI,"These are long testing steps, so it makes more sense to do them in parallel.",0,2,[]
68,396312479,2053,42757577,2020-03-31 12:49:55,2020-03-31 13:03:43,closed,MAINT: remove altair_viewer dev install from CI scripts,"With the [0.3 release](https://github.com/altair-viz/altair_viewer/releases/tag/v0.3.0), this is no longer necessary",0,1,[]
69,395270690,2049,42757577,2020-03-29 15:31:04,2020-03-29 15:45:24,closed,MAINT: pin pandas to 0.18 or later (fixes #1777),,0,1,[]
70,394524922,2043,42757577,2020-03-27 03:06:52,2020-03-27 03:27:30,closed,MAINT: provide default values for _repr_mimebundle_ include/exclude,"Some non-standard Python kernels fail to pass ``include`` and ``exclude`` arguments when calling ``_repr_mimebundle_``. This causes issues like https://github.com/altair-viz/altair/issues/2042

This PR should fix the problem, without causing side-effects for standard kernels.",0,1,[]
71,392693463,2038,42757577,2020-03-23 23:27:31,2020-03-23 23:56:35,closed,Add an example showing how to create a minimap,"Implements what was discussed here: https://github.com/altair-viz/altair/issues/2037

I think this is a useful recipe for large time-series data -- if you only have one view, you kind of need to choose between having enough detail and having enough context.",1,1,[]
72,392411013,2035,42757577,2020-03-23 14:13:10,2020-03-23 16:21:49,closed,MAINT: add doctest to github actions,,0,1,[]
73,392402703,2034,42757577,2020-03-23 13:58:25,2020-03-23 14:11:06,closed,MAINT: deprecate alt.curry and alt.pipe,"These are functions from ``toolz`` that are exposed in altair's top-level namespace. This PR marks those functions deprecated, so that they can be removed in a future release.",0,1,[]
74,391917273,2029,42757577,2020-03-21 21:14:10,2020-03-21 21:17:13,closed,DOC: fix default theme example output,,0,1,[]
75,391874524,2028,42757577,2020-03-21 15:41:55,2020-03-21 16:31:37,closed,TST: add render test for all examples,This ensures that the examples do not lead to javascript errors.,0,1,[]
76,391869391,2027,42757577,2020-03-21 14:58:02,2020-03-21 21:40:43,closed,MAINT: add documentation build github action,,0,1,[]
77,391855469,2026,42757577,2020-03-21 12:54:24,2020-03-21 13:19:27,closed,DOC: make displaying docs more clear,,0,1,[]
78,385278158,2007,42757577,2020-03-08 15:17:03,2020-03-08 15:22:02,closed,Remove some old Py3 compatibility code,,0,2,[]
79,384846786,2005,42757577,2020-03-06 14:21:51,2020-03-06 14:24:25,closed,TST: re-enable mimebundle test,Fixed by altair_saver 0.2.0,0,1,[]
80,381550328,1998,42757577,2020-02-28 19:14:24,2020-02-28 19:17:37,closed,MAINT: error on flake8 issues,,0,1,[]
81,380643733,1995,42757577,2020-02-27 05:21:36,2020-02-27 05:27:18,closed,MAINT: flake8 check on all but examples & generated files,Also move flake8 check from Travis to lint github action.,0,1,[]
82,380028650,1992,42757577,2020-02-26 06:14:19,2020-02-26 06:17:51,closed,MAINT: bump minimum Python version to 3.6,"Following [NEP 29](https://numpy.org/neps/nep-0029-deprecation_policy.html)

This will also unblock a number of nice features, such as f-strings, type hints, code formatting with black, etc.",0,1,[]
83,380020415,1991,42757577,2020-02-26 05:45:03,2020-02-27 03:28:12,closed,Add Black formatting for most files,"This adds a reformat step to ``make test``, as well as a format github action.

This initial commit leaves out ``altair/examples`` (because we want to keep our examples formatted as-is), and also leaves out ``altair/vegalite``, and ``altair/vega`` for now. As we think more deeply about how to handle auto-generated code, we may add these last two to the mix.",3,3,[]
84,380006136,1990,42757577,2020-02-26 04:49:30,2020-03-29 15:21:40,closed,WIP: Update to Vega-Lite 4.8,Tests will not pass until VL 4.8 is part of altair_viewer.,1,4,[]
85,380003994,1989,42757577,2020-02-26 04:40:46,2020-02-26 04:44:40,closed,Cleanup: use deprecation utils for all deprecation warnings,,0,1,[]
86,379930578,1988,42757577,2020-02-26 01:06:51,2020-02-26 04:29:49,closed,ENH: add show() method & references to altair_viewer,"This removes references to the vegascope project in favor of the altair_viewer project, which we have more control over (usage of vegascope around altair package updates has been a challenge in the past)

This also deprecates the ``chart.serve()`` method, because the code in altair_viewer is much more robust and better tested.",0,1,[]
87,379356170,1986,42757577,2020-02-25 04:16:18,2020-02-26 04:32:59,closed,BUG: html renderer: support multiple views in JupyterLab,"Fixes #1984 

The fallback after ``getPreviousElementSibling`` is because in classic Notebook, the script is executed with ``""<head>""`` as the parent node, so the div cannot be located in this manner.

I've tested this in JupyterLab (with multiple views), Jupyter Notebook, Colab, and nbconvert HTML, all work correctly.

@jasongrout, please let me know if you see any issues with this.",0,1,[]
88,379260939,1985,42757577,2020-02-24 22:20:41,2020-02-26 22:07:56,closed,Add a convenience method for tooltips,"Hello, I thought it would be nice to have a simple method that adds a tooltip with all variables, as I find myself doing this fairly frequently. The new method I am suggesting is based on Chart.interactive(). I have only used pandas DataFrames, so that is the only one I added for now. Let me know what you think.",2,2,[]
89,378736011,1983,42757577,2020-02-23 18:30:59,2020-02-23 19:38:21,closed,DOC: fix vconcat example on compound charts guide,I found another place where the interval selection bug (https://github.com/altair-viz/altair/pull/1907) occurred. ,1,1,[]
90,378711155,1982,42757577,2020-02-23 14:22:31,2020-02-23 14:28:17,closed,BUG: fix schema from_dict for schema instance,This issue was uncovered when trying to update to vega-lite > 4.0,0,1,[]
91,378635561,1981,42757577,2020-02-22 21:56:22,2020-02-23 13:28:38,closed,TST: fix unintentionally overwritten test,This would have been caught by an automated flake checker.,0,2,[]
92,376200904,1975,42757577,2020-02-17 15:38:01,2020-02-17 16:27:32,closed,DOC: Scale resolve edits,Add the dual y axis example to the scale resolve user guide ,2,4,[]
93,376200279,1974,42757577,2020-02-17 15:36:42,2020-02-17 15:41:45,closed,FIX: change datum repr to fix doc build,discussed in https://github.com/altair-viz/altair/issues/1972,1,1,[]
94,373707384,1962,42757577,2020-02-11 15:00:52,2020-02-11 17:30:16,closed,DOC: add dual y axis example,"![visualization (53)](https://user-images.githubusercontent.com/2041969/74248289-5bbb1400-4cb5-11ea-9eb9-4ace4becb9a8.png)
",2,1,[]
95,372850461,1958,42757577,2020-02-09 17:04:28,2020-02-09 22:55:21,closed,BUG: fix schema validation error in Python 3.8,Fixes #1935 ,0,1,[]
96,372589512,1956,42757577,2020-02-07 20:34:13,2020-02-08 15:59:38,closed,MAINT: simplify generated schema definitions,"I was looking through the schema generation code and realized that all schema objects share the same root schema, so it's less duplicative to implement it via inheritance.

This should have no user-visible impact.",0,1,[]
97,372437404,1955,42757577,2020-02-07 14:26:09,2020-02-08 15:40:32,closed,DOC: add scatter with loess example,"![visualization (50)](https://user-images.githubusercontent.com/2041969/74037119-a07c3d80-498b-11ea-8218-a7ef57bfdc19.png)

I thought an example of adding multiple grouped LOESS lines to a scatter plot could be a useful addition to the docs.",8,3,[]
98,370593722,1946,42757577,2020-02-04 00:49:32,2020-02-04 00:57:49,closed,MAINT: call url decode definition names,"Fixes https://github.com/vega/vega-lite/issues/5838

Tested by running ``python tools/generate_schema_wrapper.py`` and seeing no change for vega-lite v4.0.0, and by running the same command with v4.1.1 and seeing that it executes without failure.",0,1,[]
99,370102788,1945,42757577,2020-02-03 03:36:09,,open,Example of a correlation map,"Here's a PR of a correlation map that my students (@vcuspinera and @AndresPitta) created.

the output of this example is

![visualization-15](https://user-images.githubusercontent.com/2507459/73623699-c2279e80-45f2-11ea-89d1-0b33abdf02a1.png)

Not sure if this is something worth adding to the examples and admittedly this is similar to the [Layered heat map with text example](https://altair-viz.github.io/gallery/layered_heatmap_text.html).

I think it would be worth adding if I could show only half of the correlation matrix like this example from [here](http://www.sthda.com/english/wiki/ggplot2-quick-correlation-matrix-heatmap-r-software-and-data-visualization)
![ggplot2-correlation-matrix-heatmap-add-correlation-coefficients-1](https://user-images.githubusercontent.com/2507459/73623818-33ffe800-45f3-11ea-8471-2290d2864cae.png)

",8,4,[]
100,369911926,1943,42757577,2020-02-01 15:59:10,2020-02-02 04:01:45,closed,ENH: use altair_saver for image export,"Fixes #1876

- [x] implementation
- [x] tests
- [x] docs",0,2,[]
101,365237390,1924,42757577,2020-01-21 10:48:08,2020-01-31 13:44:41,closed,Nullable integers and string dtype,"Add support for the new dtypes in `utils.sanitize_dataframe` to solve #1922

- [nullable integer datatype](https://pandas.pydata.org/pandas-docs/version/0.25/whatsnew/v0.24.0.html#optional-integer-na-support) 
- [dedicated string dtype](https://pandas.pydata.org/pandas-docs/version/1.0.0/whatsnew/v1.0.0.html#dedicated-string-data-type)

",3,5,[]
102,362398755,1915,42757577,2020-01-14 01:17:56,2020-01-14 01:44:27,closed,DOC: use URL for flights dataset,example datasets should all be offline for testing purposes.,0,1,[]
103,362397228,1914,42757577,2020-01-14 01:12:33,2020-01-14 01:15:03,closed,ENH: support numpy types within chart specifications,Fixes #1909,0,1,[]
104,362290944,1913,42757577,2020-01-13 19:50:00,2020-01-13 21:37:15,closed,Fix broken test: test_api.test_save(),"All test conditions of vegalite/v4/test_api/test_save were previously failing when run. Determined that an open file descriptor automatically returned by tempfile.mkstemp() was blocking read/write access to temp file in question, preventing test from running nominally.

Added line to immediately close the file descriptor to resolve this; afterward all tests in vegalite/v4/test_api.py run and passed.",2,1,[]
105,362288833,1912,42757577,2020-01-13 19:44:35,2020-01-13 21:36:40,closed,Fixed test_save by closing file descriptor,"All test conditions of vegalite/v3/test_api/test_save were previously failing when run. Determined that an open file descriptor automatically returned by tempfile.mkstemp() was blocking read/write access to temp file in question, preventing test from running nominally.

Added line to immediately close the file descriptor to resolve this; afterward all tests in vegalite/v3/test_api.py run and passed.",1,1,[]
106,361680364,1910,42757577,2020-01-11 01:36:54,2020-01-11 19:48:38,closed,add Urban Institute theme,"PR merged
https://github.com/vega/vega-themes/pull/64",1,1,[]
107,360645982,1907,42757577,2020-01-08 20:43:12,2020-01-08 21:58:47,closed,DOC: Fix interval selection bug,closes #1906 ,1,1,[]
108,359704630,1901,42757577,2020-01-06 20:38:18,2020-01-07 00:48:52,closed,customization example - how to remove axis labels,"When plots have categorical data on one or both axis, and when there are a lot of categories, the axis labels may not be useful.  So this is an easy way to remove them.

For this example, I'm just using the same plot from the above example.  If this is too contrived an example, I could come up with something more reasonable.

#1899 ",1,1,[]
109,359219327,1898,42757577,2020-01-04 14:45:43,2020-01-04 14:50:05,closed,Add CI via github actions,,0,1,[]
110,359218908,1897,42757577,2020-01-04 14:39:57,2020-01-04 14:46:29,closed,MAINT: add testing via github actions,,1,1,[]
111,358811977,1893,42757577,2020-01-02 22:13:17,2020-01-02 22:16:30,closed,Fix typo in available time units doc,Changed yearmonthdatehoursseconds to yearmonthdatehours**minutes**seconds,1,1,[]
112,357369832,1889,42757577,2019-12-28 01:42:12,2019-12-28 01:46:32,closed,MAINT: setup.cfg: build wheels only for py3,,0,1,[]
113,357089581,1888,42757577,2019-12-27 00:07:05,2019-12-27 00:12:24,closed,BUG: use unique chart div ID for HTML renderer,Fixes #1886,0,1,[]
114,357089129,1887,42757577,2019-12-27 00:03:24,2019-12-27 00:06:33,closed,DOC: update saving docs,,0,1,[]
115,353237809,1875,42757577,2019-12-15 04:09:43,2019-12-15 04:16:19,closed,MAINT: fix type annotations in plugin_registry,,0,1,[]
116,353221142,1874,42757577,2019-12-14 23:04:11,2019-12-15 01:12:24,closed,DOC: update candlestick example to use ohlc dataset,I think this example is much better now. ,2,1,[]
117,352919775,1872,42757577,2019-12-13 14:54:32,2019-12-13 21:08:55,closed,Allow JSON data transformer to specify custom URL path,"See #1867

Tested locally - works in both JupyterLab and Jupyter notebook.",0,1,[]
118,352903619,1871,42757577,2019-12-13 14:15:51,2019-12-13 14:19:54,closed,DOC: fix wording in display section,,0,1,[]
119,352449308,1869,42757577,2019-12-12 14:42:04,2019-12-12 14:57:33,closed,DOC: add area chart with gradient fill example,I noticed we didn't have a gradient fill example. ,1,1,[]
120,352031804,1868,42757577,2019-12-11 17:30:16,2019-12-11 18:14:23,closed,DOC: fix candlestick example,"Something caught my eye today while browsing the website this morning

![Screen Shot 2019-12-11 at 11 59 16 AM](https://user-images.githubusercontent.com/2041969/70643747-8b936000-1c0f-11ea-87c6-d37ae9fa0eba.png)

I think the candlestick example is incorrect. 

![visualization (31)](https://user-images.githubusercontent.com/2041969/70643756-8fbf7d80-1c0f-11ea-963b-69b3a376d928.png)

I wasn't quite sure why, but changing the encoding type from temporal `T` to ordinal `O` and removing the scale seemed to fix things. A few other cosmetic details were also changed

![visualization (32)](https://user-images.githubusercontent.com/2041969/70643760-92ba6e00-1c0f-11ea-9995-6c67f1b353fe.png)

I am still unsure why the temporal encoding doesn't work. I tried `mark_bar(align='center')` but that didn't help.

A related issue is I don't like having to include the data. I might submit a PR to include an ""Open High Low Close"" data set into [vega-datasets](https://github.com/vega/vega-datasets) as it is a common dataset format. 
",4,1,[]
121,351676536,1866,42757577,2019-12-11 01:06:03,2019-12-11 01:14:38,closed,DOC: add section on image mark,"This re-adds the image mark example from #1866 that was removed due to https://github.com/vega/vega/issues/2238 preventing the docs from building.

If the image is in the docs rather than the gallery, no thumbnail is required.

CC @eitanlees ",0,1,[]
122,351585498,1865,42757577,2019-12-10 20:18:28,2019-12-10 21:10:57,closed,DOC: add more sorting documentation,,2,2,[]
123,351539013,1864,42757577,2019-12-10 18:47:18,2019-12-10 18:52:06,closed,DOC: refactor some examples which use EncodingSortField,"I read in `changes.rst` that now you can sort by an encoding channel directly. I thought a few of the examples could be refactored to reflect this. 

Note there were two places where I couldn't replace `EncodingSortField`

- in `beckers_barley_trellis_plot.py` it didn't seem to work with the row encoding. 
- in `sorted_error_bars_with_ci.py` I had trouble because the x encoding was being used twice. 

After going through this process I think the sorting documentation could use an update. Maybe I will make an issue.  ",4,1,[]
124,351494970,1863,42757577,2019-12-10 16:56:44,2019-12-10 19:21:31,closed,DOC: add section on customizing chart size,,1,1,[]
125,351434227,1862,42757577,2019-12-10 14:57:11,2019-12-10 14:59:27,closed,DOC: add responsive histogram example,,0,1,[]
126,351423334,1861,42757577,2019-12-10 14:36:11,2019-12-10 14:41:04,closed,DOC: update changelog for v4.0,,0,1,[]
127,351421077,1860,42757577,2019-12-10 14:31:49,2019-12-10 14:34:53,closed,DOC: add rounded bar example,,0,1,[]
128,351420610,1859,42757577,2019-12-10 14:30:55,2019-12-10 14:33:46,closed,DOC: split transform docs into individual pages,The single page was getting far too large.,0,1,[]
129,351062346,1858,42757577,2019-12-09 21:06:17,2019-12-09 21:54:30,closed,"V4: update install, display, and troubleshooting docs","Fixes #1802, #1841",0,1,[]
130,350899871,1857,42757577,2019-12-09 18:55:42,2019-12-09 18:58:47,closed,V4: fix some examples,"Includes updating the violin plot example to use density transform.

Additionally, remove the ``scatter_image_marks`` example because gallery thumbnails cannot be generated due to https://github.com/vega/vega/issues/2238",0,2,[]
131,350447285,1856,42757577,2019-12-08 19:46:03,2019-12-08 20:21:07,closed,Update the release notes to reflect the new release file format,Make sure the release notes are updated with the new doc format for releases.,1,1,[]
132,350436475,1855,42757577,2019-12-08 17:44:53,2019-12-08 17:49:11,closed,Add the changes file into the documentation,See #1853 for discussion on this request.,1,3,[]
133,350328349,1852,42757577,2019-12-07 17:11:08,2019-12-07 17:15:54,closed,MAINT: fix auto-generated description of empty schemas,"Fixes #1847 

Write unit tests, people.",0,1,[]
134,350291620,1851,42757577,2019-12-07 08:42:38,2019-12-07 15:01:39,closed,Apply orientation to geometry column,Small code fix in example code,1,1,[]
135,350281850,1850,42757577,2019-12-07 06:13:38,2019-12-07 06:15:56,closed,DOC: add interactive legend example,"Adapted from the [vega-lite example](https://vega.github.io/vega-lite/docs/bind.html#legend-binding)

![Demo](https://user-images.githubusercontent.com/111269/70266866-2a244a80-1752-11ea-9c07-0b0105630989.gif)",0,1,[]
136,350280568,1848,42757577,2019-12-07 05:54:17,2019-12-07 05:56:49,closed,MAINT: update wrappers to Vega-Lite 4.0.0; Vega 5.9.0,,0,1,[]
137,349962523,1846,42757577,2019-12-06 13:29:45,2019-12-06 14:50:33,closed,DOC: add pivot/tooltip demo,See an interactive version of the new chart [here](https://vega.github.io/editor/#/url/vega-lite/N4KABGBEDGD2B2AzAlgc0gLjMSA3ZApgO6bYwIAuy8ArrDQM4DqyAJhQBakAsADLwBooceFVr0GACQJoOFUgGZ+AX2UDwUADYBDAJ4EATqQDaGiKAiWoAW20GA1qUibqBSOqsRIBeHFbV0LAtPLzhNWCMgyApdAAc3LEh4WGtqbU13KBQCTVYnBl1rACNYDLUzT0gAD1IcGPinCgJrWIj0zMhs3KdWbSbIcpCvXVrouISoAEcabVFkCj7kXDchTsJuxNiDZGg3ZQqIfatBy2CrSFsHJ1bqeQ9Knz8A2oPLcnDIsnqJpJS0jNWXTyiQKxVKA3uIWqo2+jWarQM7UB62BUF6-ROUJGUVhiWmsyoCyoyw6QOu212A1emLeFER8AYiAi1hMOBQmianxwDByBGgVAQ+V5-IivAATAAOAbKAC6FRpZzel0ciQMNE0K1e3l8sH88EC2FeXlgsW00Hm2MNQzeIn8Avgo1w6RoE14ADoFKseRr+chBSDhRRRZKIUa3k7NC7SLwwzTzkHSlRYiYw+Yxg08TM5kSlissiinABBQsABQAMqHrWncVMs4TFiTkTlUZBCwBZABaADlK1W6uMnPjsw282tm04AOIAeSnE971v7GdrBPmI9JBcSAEkAEJt+dDRc-If14mjsmJNsAZQAYgAVKnWmWQyo1HEDxJNFptAH58eJdF7NSz5eN6fL2i81qQKBIoGOKUpBKmUA1lBAQau4iFjrkDAmJAAGQE+GHwAQdgEAw8hYHSLrAZU-o2BIBCwMsRjUec8IxE4yREehVbCBqdhONY9H0PIsZAVqdKzIyzKspAsRLLA5FQKCJQ-ngzo-FsOyjqgBj0LERSWsYuF9G4MqyvKGgEV46LaKMNAGBk-59NoAD0ZGwNA9gMG60AMLgvaQAAJAw0AcM0tmJHIFCxAwGAuS5yyoNobqoPMHA0EUbp+m5oXhQlBBJQAtC4TQJdwbrurwhVFAQCxugAjGKboAFYMIKIDKEAA),0,1,[]
138,349286420,1844,42757577,2019-12-05 06:59:06,2019-12-05 13:19:44,closed,Fix simple typo: packge -> package,"Closes #1843

",1,1,[]
139,349206490,1842,42757577,2019-12-05 01:15:46,2019-12-05 01:19:35,closed,schemapi: use first class match rather than last.,Fixes #1837,0,1,[]
140,348935419,1839,42757577,2019-12-04 15:02:37,2019-12-04 15:08:27,closed,BUG: fix LookupData.to_dict bug (Fixes #1836),,0,1,[]
141,348512769,1833,42757577,2019-12-03 19:37:22,2019-12-03 20:00:29,closed,Deprecation Warning Cleanup,"Cleaned up a few deprecation warnings I found when running `pytest`.

Specifically:
1. Added a `Loader` parameter when loading `yaml`
2. Changed `getargspec` to `getfullargspec` and the `keywords` attribute to `varkw`
3. Changed `import collections` to `from collections.abc import Mapping` and modified the corresponding `Mapping` calls.",1,3,[]
142,348403610,1832,42757577,2019-12-03 15:45:42,2019-12-03 18:40:19,closed,DOC: add poly fit example with regression,"In light of the new transformations I have revisited some of the examples. Here I have added a new example based on the Polynomial Fit Plot. 

The only difference in the output is that there is no legend. ",3,3,[]
143,347967327,1831,42757577,2019-12-02 20:39:48,2019-12-02 21:46:35,closed,DOC: add qq example,,1,1,[]
144,347967195,1830,42757577,2019-12-02 20:39:29,2019-12-02 21:47:10,closed,DOC: add image mark example,I added an example and also edited the table on the marks page to link to it,1,1,[]
145,347966831,1829,42757577,2019-12-02 20:38:41,2019-12-02 23:29:36,closed,DOC: add density examples,,1,3,[]
146,347890772,1828,42757577,2019-12-02 18:52:07,2019-12-02 18:54:44,closed,DOC: fix typo in transform guide,Found a small typo while reading over the new transform docs,3,1,[]
147,347853621,1827,42757577,2019-12-02 18:20:52,2019-12-02 18:24:43,closed,DOC: Fix wilkinson link,I noticed the link in the wilkinson example wasn't properly formatted. ,1,1,[]
148,347361730,1825,42757577,2019-12-01 19:26:54,2019-12-02 03:07:41,closed,V4: Document new transforms,"- [x] Density
- [x] Loess
- [x] Pivot
- [x] Quantile
- [x] Regression",0,3,[]
149,347271592,1824,42757577,2019-12-01 00:10:03,2019-12-01 00:12:52,closed,DOC: update docs for V4 changes,"Still need to add sections on new transforms, etc. Will do that as another PR.",1,2,[]
150,347233289,1823,42757577,2019-11-30 15:26:32,2019-11-30 15:29:22,closed,V4: add new transform methods,,0,1,[]
151,347087291,1822,42757577,2019-11-29 15:18:37,2019-11-29 16:00:07,closed,V4: make HTML renderer the default,"This makes the html renderer the default. I have tested this in Jupyter Notebook, JupyterLab, nbconvert, and nbviewer. It should also work properly in hosted notebooks like zeppelin, colab, kaggle, and databricks.

The former default renderer now can be enabled using ``alt.renderers.enable('mimetype')`` (or equivalently, ``'jupyterlab'`` or ``'nteract'``.",0,1,[]
152,346765336,1819,42757577,2019-11-28 16:02:17,2019-11-28 16:05:39,closed,Bump vega wrappers to v5.8.1,,0,1,[]
153,346537915,1818,42757577,2019-11-28 06:12:21,2019-11-29 05:50:24,closed,ENH: add basic Vega-Lite 4 wrappers,,1,11,[]
154,346479804,1814,42757577,2019-11-28 01:06:11,2019-11-28 01:10:56,closed,MAINT: remove vegalite.v2 and vega.v4 wrappers,,0,1,[]
155,346314070,1813,42757577,2019-11-27 15:58:57,2019-11-27 16:06:12,closed,Remove Python 2 support,,1,3,[]
156,346062438,1811,42757577,2019-11-27 05:43:13,2019-11-27 05:45:56,closed,clean up universal HTML,"Tested changes on classic notebook, JupyterLab, nbconvert, and Colab",0,1,[]
157,345530790,1808,42757577,2019-11-26 04:16:19,2019-11-26 04:20:07,closed,DOC: update changelog for 3.3 release,,0,1,[]
158,344909395,1805,42757577,2019-11-24 13:54:57,2019-11-24 13:57:48,closed,ENH: support pickle and copy in schemapi,Replaces #1706; fixes #1681,0,5,[]
159,344778200,1803,42757577,2019-11-23 05:27:18,2019-11-23 06:22:13,closed,Internal: add inheritance structure to core classes,"The set of schema definitions in Vega-Lite have a hierarchical structure, but up until now Altair's class structure constructed from them has been flat. This PR uses the structure declared by the schema definitions to infer a hierarchical structure for the classes, which simplifies instances of type checking within the API code.",0,3,[]
160,342152104,1794,42757577,2019-11-18 13:21:29,2019-11-18 13:42:23,closed,BUG: LayerChart.add_selection: apply selection only to first layer,Fixes #1792,0,1,[]
161,341977198,1793,42757577,2019-11-18 05:50:10,2019-11-21 17:31:01,closed,ENH: add universal HTML renderer,"This adds the ``html`` renderer to Altair. If you use
```python
alt.renderers.enable('html')
```
The chart will render correctly, with the correct versions of Vega/Vega-Lite/Vega-Embed, in a variety of frontends.

I have tested that this renderer displays charts correctly in Jupyter Notebook, JupyterLab, Colab, Kaggle, nbviewer, and nbconvert HTML, without the need for any separately installed frontend extensions.

The downside is that unlike the vega labextension and nbextension the HTML renderer loads JS resources from the web, and so it cannot be used offline.",3,3,[]
162,339245144,1782,42757577,2019-11-11 04:08:42,2019-11-11 14:39:02,closed,Proposed fix for #1781,I've also needed to tweak `altairgallery.py` to finish validation.  Probably Windows specific.,1,2,[]
163,338934076,1779,42757577,2019-11-09 03:39:37,2019-11-09 03:45:33,closed,shuning3 world scatterplot,I created a scatterplot of airports around the world. The file is named `DSCI531_Bonus.py`.,0,2,[]
164,338786915,1777,42757577,2019-11-08 17:48:03,2020-03-29 15:45:25,closed,Add minimum version to pandas to account for dependency on RangeIndex,"This commit pins the minimum supported version of pandas to be 23.4.
Currently there is a hard dependency on pandas.RangeIndex in /altair/utils/core.py:179, and version 23.4 is the earliest pandas version that I was able to find online documented with that feature.
Note that I did not do an exhaustive search over pandas versions so this limit could be moved lower on a more thorough search. Alternatively, it might need to be moved higher as I did no testing beyond the features we use in our product.
Testing should probably be done for other unpinned libraries as well as it is doubtful that early versions of those libraries would be able to run Altair.",4,1,[]
165,335534716,1764,42757577,2019-11-01 17:34:59,2019-11-01 17:54:03,closed,DOC: Fix typos in user guide,Addresses #1760 ,1,1,[]
166,334413848,1762,42757577,2019-10-30 17:38:47,2019-10-31 03:42:02,closed,Missing character in util-core doc,"Hi,

I'm not sure if this really counts as a typo. While reading through the source code I noticed this tiny missing "">"" in a function docstring. Turns out it's the only occurrence of its kind in the whole codebase.

Hope this helps!",1,1,[]
167,334410721,1761,42757577,2019-10-30 17:33:07,2019-10-31 06:15:47,closed,Add example - Cumulative count,"Hi.

I was looking to plot a cumulative count axis and only found a Vega example, so I thought I might as well PR a simple adaptation.

Hope this helps! Thank you.",1,2,[]
168,333272422,1756,42757577,2019-10-28 18:56:21,2019-10-30 03:11:15,closed,Update install instructions to include Vega,"A few of my students had trouble installing altair and getting plots to show up because `vega` wasn't included as a required package. This was the case in jupyterlab. Folks on jupyter seemed to be fine. 

Request adding this to the documentation",7,1,[]
169,332728835,1753,42757577,2019-10-26 02:47:04,2019-10-26 04:11:04,closed,Fixes minor typos in getting_started guides,,1,1,[]
170,332049842,1751,42757577,2019-10-24 13:30:13,2019-11-23 17:00:52,closed,BUG: fix issue with count() in joinaggregate,Fixes #1750 ,0,1,[]
171,331670214,1748,42757577,2019-10-23 17:53:30,2019-10-23 19:04:05,closed,queue 18135,this code is for queue,1,1,[]
172,331606723,1746,42757577,2019-10-23 15:24:44,2019-10-23 16:47:13,closed,Grammar mistakes corrected successfully,,1,1,[]
173,330350039,1742,42757577,2019-10-21 11:13:11,2019-10-21 16:22:52,closed,"fix typos in the ""Customizing Visualizations"" doc chapter","Hello,
This PR contains minor edits in the  ""Customizing Visualizations"" doc chapter (doc/user_guide/customization.rst).

First typo was a `:ref:` nested in an italic markup that didn't render. Proposed solution: paragraph erased and merged with the similar one at the end of the section.

Second typo was a missing space in an `.. altair-plot::` directive which prevented the plot to get rendered.

Finally, I've added a small enumeration to introduce the three subsection on configuration (global, local, and encoding channels). This is not related to the typos.
",2,1,[]
174,329978816,1740,42757577,2019-10-19 03:44:44,2019-10-19 04:04:55,closed,MAINT: add support & testing under Python 3.8,,0,1,[]
175,323956592,1717,42757577,2019-10-02 21:39:19,2019-10-02 22:08:53,closed,ENH: update properties in project shorthand,This PR aligns the possible property options in the api function `project()` with the `Projection` class from the Vega-lite schema.,1,1,[]
176,323919998,1716,42757577,2019-10-02 19:59:59,2019-10-02 21:03:19,closed,ENH: Recommit removed commits #1707,"This PR recommit the commits from #1707 which accidentally were removed in https://github.com/altair-viz/altair/pull/1714.

 ",2,1,[]
177,323478076,1714,42757577,2019-10-01 21:10:09,2019-10-01 21:30:45,closed,ENH: add datatype geojson,"This PR adds the `:G` option for `geojson` data type. As was found out in https://github.com/altair-viz/altair/issues/1711 this was missing in Altair.

With this PR the following example (part of this PR) will work:

```python
import altair as alt
from vega_datasets import data

states = alt.topo_feature(data.us_10m.url, 'states')
source = data.income.url

alt.Chart(source).mark_geoshape().encode(
    shape='geo:G',
    color='pct:Q',
    tooltip=['name:N', 'pct:Q'],
    facet='group:N'
).transform_lookup(
    lookup='id',
    from_=alt.LookupData(data=states, key='id'),
    as_='geo'
).properties(
    width=300,
    height=175,
    columns=2
).project(
    type='albersUsa'
)
```

<img width=""694"" alt=""image"" src=""https://user-images.githubusercontent.com/5186265/65999828-7dea8d00-e49e-11e9-8dff-97f6a2d16584.png"">
",2,7,[]
178,322419570,1712,42757577,2019-09-28 14:56:41,2019-09-28 15:23:00,closed,Update beckers_barley_trellis_plot.py,"Replaces the broken link to ""The Morris Mistake"" explanation with a working one.",1,1,[]
179,321741408,1707,42757577,2019-09-26 14:11:12,2019-10-01 21:30:47,closed,BUG: composing multiple selections,"This PR has still some issues, but it adds some documentation + inline example to compose multiple selections as discussed in https://github.com/altair-viz/altair/issues/1704.

I tried to emulate the Vega-Lite example from [here](https://vega.github.io/vega-lite/docs/selection.html#compose), but preferred to hold the ctrl-key or shift-key to separately initiate the selections.

I don't know how to make the following Vega-Lite example with bitwise operators work in Altair:
```
""selection"": {""not"": {""and"": [""alex"", ""morgan""]}}
```
I tried some (eg. `~alex & ~morgan` and `~[alex & morgan]`), but got none working.",6,3,[]
180,321666910,1706,42757577,2019-09-26 11:12:27,2019-11-24 13:58:12,closed,BUG: infinite recursion when using pickle or copy,Fixes issue #1681,6,4,[]
181,318247581,1697,42757577,2019-09-17 09:34:51,2019-09-17 14:27:20,closed,DOC: Update transform.rst,Update incorrect labels.,1,1,[]
182,318143886,1695,42757577,2019-09-17 03:28:14,2019-09-17 05:18:32,closed,Fix a typo,,1,1,[]
183,315602481,1690,42757577,2019-09-09 15:56:44,2019-09-09 16:54:16,closed,DOC: Add map example with data generators,,1,1,[]
184,315602281,1689,42757577,2019-09-09 15:56:13,2019-09-16 18:24:40,closed,DOC: add line chart with sequence generator example,,4,2,[]
185,315091145,1687,42757577,2019-09-06 19:49:40,2019-09-07 16:47:24,closed,DOC: add stroke to graticule example,,2,1,[]
186,315090460,1686,42757577,2019-09-06 19:47:22,2019-09-07 20:50:47,closed,Add API wrapper for sphere generator,I noticed the sphere generator was missing from the data gen wrappers. ,4,4,[]
187,313623341,1685,42757577,2019-09-03 14:34:45,2019-09-03 16:34:54,closed,DOC: add example of wilkinson dot plot,,1,1,[]
188,311110516,1677,42757577,2019-08-26 21:54:00,2019-08-27 02:30:12,closed,raise on plotting attempt,addressing https://github.com/altair-viz/altair_pandas/issues/2,6,1,[]
189,309239599,1667,42757577,2019-08-20 21:32:51,2019-09-06 13:32:58,closed,Add API wrappers for data generators,"Fixes #1660 

cc/@jheer how does this API look to you?",0,2,[]
190,308391872,1664,42757577,2019-08-18 20:33:47,2019-08-29 21:07:28,closed,accept __geo_interface__ attribute as data,"I'm not sure if I've understood you correctly here: https://github.com/altair-viz/altair/issues/588#issuecomment-522193822

But in this PR I tried to integrate serialising data objects with a `__geo_interface__` attribute.
And it worked OK for Python packages that deal with geographical data types that support the `__geo_interface__`. I tried the packages `shapely`, `pyshp`, `geojson`, `geopandas`.

It works for:
* `InlineData`
* `json` data transformer and
*  `data_server` data transformer.

See animated gif:
![ezgif com-optimize-2](https://user-images.githubusercontent.com/5186265/63229978-e6d7b780-c206-11e9-906f-a38a8813b489.gif)

After I got this working, I compared it to https://github.com/altair-viz/altair/pull/818/files, but the idea is very much the same. Maybe @iliatimofeev can shed a light on this proof of concept as well.",15,10,[]
191,305480502,1646,42757577,2019-08-08 09:09:55,2019-08-08 12:47:48,closed,Fix sentence in faq,Small change to docs,0,1,[]
192,305258329,1645,42757577,2019-08-07 17:57:24,2019-08-07 19:19:51,closed,Update crossfilter to gray/blue scheme,Same as in https://vega.github.io/editor/#/examples/vega-lite/interactive_layered_crossfilter,1,1,[]
193,305104027,1643,42757577,2019-08-07 11:26:40,2019-09-26 11:17:25,closed,BUG: Charts serialized as dict/json should be equivalent to original …,…instance,3,1,[]
194,304089823,1641,42757577,2019-08-04 19:31:07,2019-08-05 18:01:42,closed,Test resolve() and facet() methods,Addresses part of #1637,0,3,[]
195,304011340,1639,42757577,2019-08-03 16:38:32,2019-08-03 19:20:31,closed,DOC: add some docs for resolve(),Addresses part of #1637,0,1,[]
196,303797629,1636,42757577,2019-08-02 13:54:48,2019-08-02 14:26:02,closed,Fix facet() and resolve() methods,"- remove ``resolve_*`` methods from non-compound chart
- add ``facet()`` method to all top-level charts

This more closely matches what is allowed by the schema.",1,2,[]
197,303197427,1634,42757577,2019-08-01 03:05:33,2019-08-01 03:20:31,closed,MAINT: clean up html generation code,,0,2,[]
198,301389663,1629,42757577,2019-07-26 04:18:29,,open,WIP: add method-based attribute setting to encoding classes,"Do not merge until Altair 4.0.

This is a new prototype of how to set encoding attributes via methods rather than arguments. So rather than
```python
alt.Chart(data).mark_point().encode(
    alt.X('column:Q', axis=alt.Axis(None), scale=alt.Scale(zero=False), title='my title'),
    alt.Color('color:N', legend=alt.Legend(orient='bottom'), scale=alt.Scale(scheme='viridis'))
)
```
you could instead do
```python
alt.Chart(data).mark_point().encode(
    alt.X('column:Q').axis(None).scale(zero=False).title('my title'),
    alt.Color('color:N').legend(orient='bottom').scale(scheme='viridis')
)
```
note that the old way still works as well.

The tradeoff is that attributes of encoding classes can no longer be accessed directly via ``getattr``, but this was not a very common pattern anyway.

Still TODO:
- [ ] add useful documentation and keyword argument completion for these functions.
- [ ] tests ensuring equivalence of old and new syntax.

If you'd like to try this in its current state, you can run
```
pip install git+https://github.com/jakevdp/altair.git@attr-access
```",24,1,[]
199,301325301,1627,42757577,2019-07-25 21:58:04,2019-07-25 22:13:05,closed,Cleanup: remove unused utility submodule,,0,1,[]
200,301323858,1626,42757577,2019-07-25 21:52:35,2019-07-25 21:55:11,closed,MAINT: upgrade to Vega-Lite 3.4,,0,1,[]
201,301146526,1625,42757577,2019-07-25 13:33:49,2019-07-25 13:37:31,closed,MAINT: unpin docutils in dev requirements,"0.15.1 was released, so it should work properly now.",0,1,[]
202,300936258,1624,42757577,2019-07-25 00:06:26,2019-07-25 00:13:01,closed,MAINT: clean up channel to_dict(),Should not change anything from the user's perspective.,0,1,[]
203,300560305,1623,42757577,2019-07-24 05:01:16,2019-07-24 05:05:24,closed,MAINT: pin docutils in py2 to fix tests,,0,1,[]
204,300558166,1622,42757577,2019-07-24 04:47:16,2019-07-24 05:45:36,closed,MAINT: generalize schemapi from_dict,This is a cleanup to enable functionality needed for refactoring the channel API.,0,4,[]
205,300324344,1620,42757577,2019-07-23 14:28:44,2019-08-01 02:34:56,closed,Support Altair in Apache Zeppelin,"This PR is to support Altair in Apache Zeppelin. I create a new render for Zeppelin. The changes I made in HTMLTemplate is especially for Zeppelin. Without this change. The rendering only works for the time, afterwards, I will get js error of `el is already defined`.

Here's the screenshot in Zeppelin.

![image](https://user-images.githubusercontent.com/164491/61719422-74a2bd00-ad97-11e9-846e-e7781b6ee494.png)
",11,3,[]
206,297426515,1611,42757577,2019-07-14 20:44:10,2019-07-14 20:50:01,closed,BUG: make infer_dtype utility work with pandas 0.20,"Currently Altair's type inference fails with pandas version 0.20.X (it works with older or newer versions)

Confirmed that this fix works with all pandas versions back to at least 0.14.X (and probably further, but I didn't check): https://colab.research.google.com/drive/1SaigNiN-W8DY54zzKoou0cPc5XvjxMSt#scrollTo=UyS-QGDzIQCL

Replaces #1610",0,1,[]
207,297411267,1610,42757577,2019-07-14 16:45:28,2019-07-14 20:46:18,closed,Set minimum pandas version.,"If you have an old pandas installed, plots just fail with `infer_dtype() takes no keyword arguments`.

The `skipna` arg was added in pandas `0.21.0`. 

ref:  https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.api.types.infer_dtype.html",4,1,[]
208,297340206,1609,42757577,2019-07-13 19:02:25,2019-07-18 01:28:19,closed, MAINT: update changelog for 3.2 release,,0,2,[]
209,296871397,1607,42757577,2019-07-12 00:18:12,2019-07-12 02:11:14,closed,BUG: fix top-level add_selection methods & remove LayerChart mark methods,Fixes #1605,0,1,[]
210,294913228,1599,42757577,2019-07-05 15:19:18,2019-07-07 13:47:20,closed,ENH: add selector value access for expressions,"Addresses #1013 

This PR adds the ability to access selector values within filter & condition expressions; for example:
```python
import altair as alt
import pandas as pd
import numpy as np

df = pd.DataFrame({
    'xval': range(100),
    'yval': np.random.randn(100).cumsum()
})

slider = alt.binding_range(min=0, max=100, step=1, name='cutoff')
selector = alt.selection_single(fields=['cutoff'], bind=slider, init={'cutoff': 50})

alt.Chart(df).mark_point().encode(
    x='xval',
    y='yval',
    color=alt.condition(alt.datum.xval < selector.cutoff, alt.value('red'), alt.value('blue'))
).add_selection(
    selector
)
```
<img width=""512"" alt=""Screen Shot 2019-07-05 at 8 18 50 AM"" src=""https://user-images.githubusercontent.com/781659/60731901-8d892280-9efd-11e9-8790-e7cedefc7508.png"">
",1,2,[]
211,294424505,1597,42757577,2019-07-04 05:36:45,2019-07-04 06:15:14,closed,BUG: fix encoding channel argument parsing,fixes #1573,0,3,[]
212,293477943,1589,42757577,2019-07-01 19:59:43,2019-07-01 20:11:50,closed,DOC: use fold transform in polyfit example,,0,1,[]
213,293410465,1587,42757577,2019-07-01 16:16:41,2019-07-01 17:09:33,closed,BUG: properly propagate context in multiply-specified encodings,Fixes #1586,2,2,[]
214,292639337,1584,42757577,2019-06-27 23:40:48,2019-06-28 00:03:27,closed,DOC: Add example for World Cup rankings with window transformation.,From Vega-Lite examples: https://vega.github.io/vega-lite/examples/window_rank.html,2,2,[]
215,292622227,1583,42757577,2019-06-27 22:14:01,2019-06-27 22:59:09,closed,DOC: Add example for Connections Among U.S. Airports Interactive,"From the Vega-Lite examples: https://vega.github.io/vega-lite/examples/airport_connections.html

NOTE: I can't seem to get the tooltip to work on the points layer like in the Vega-Lite Example.",1,3,[]
216,292585676,1582,42757577,2019-06-27 20:12:20,2019-06-27 22:25:43,closed,DOC: Add example for Top-K with Others.,"Implementation of Top-K with Others [Example](https://vega.github.io/vega-lite/examples/window_top_k_others.html) from Vega-Lite website. Uses aggregate, window, and calculate transformations.",2,2,[]
217,290417403,1572,42757577,2019-06-20 23:56:05,2019-06-21 04:58:56,closed,Truncate top-level chart repr,"Any time there is a rendering error Jupyter defaults to printing the chart repr. This can sometimes be _very_ long, and obscure the actual error. This change suppresses the full chart repr.",1,1,[]
218,289713563,1568,42757577,2019-06-19 13:45:45,2019-06-19 15:30:07,closed,DOC: missing quote in codeblock of saving charts,,1,1,[]
219,288888066,1566,42757577,2019-06-17 15:02:14,2019-06-17 15:21:44,closed,DOC: Add gif to README,,1,1,[]
220,287852940,1561,42757577,2019-06-13 10:06:30,2019-06-13 16:24:00,closed,Update saving_charts.rst,add a few lines how `embed_options` can be used to change the vegaEmbed rendering to `svg`,1,1,[]
221,287141648,1559,42757577,2019-06-11 15:21:07,2019-06-11 15:27:06,closed,MAINT: fix deprecation warning in sphinxext,,0,1,[]
222,287118125,1558,42757577,2019-06-11 14:29:03,2019-06-11 15:19:04,closed,DOC: Add details on example contribution,"I added some instructions on contributing examples to the project. 

Addresses part of https://github.com/altair-viz/altair/issues/1554 ",3,2,[]
223,285544588,1551,42757577,2019-06-05 20:47:34,2019-06-05 22:14:56,closed,DOC: Change detail encoding example,The [Selection Detail Example](https://altair-viz.github.io/gallery/select_detail.html#gallery-select-detail) does not actually use the detail encoding so I changed the example to [Ranged Dot Plot](https://altair-viz.github.io/gallery/ranged_dot_plot.html) which does. ,1,1,[]
224,284607077,1548,42757577,2019-06-03 15:06:22,2019-06-13 16:28:24,closed,Added an example of the default modified boxplot,I just found out that the new boxplot mark creates a modified boxplot by default.  I have added a separate example for this default behavior.  Let me know if you would like me to make any changes.,7,7,[]
225,284307283,1546,42757577,2019-06-02 00:44:10,2019-06-02 00:49:09,closed,DOC: minor style fixes to some examples,,0,1,[]
226,284148762,1544,42757577,2019-05-31 18:26:37,2019-06-01 15:07:28,closed,MAINT: update to Vega-Lite 3.3.0,,1,3,[]
227,284075391,1543,42757577,2019-05-31 14:42:32,2019-05-31 14:47:35,closed,BUG: fix #1541: deserialization bug in schemapi,,0,1,[]
228,283870559,1542,42757577,2019-05-31 02:00:15,2019-05-31 14:48:41,closed,Clarify that vega needs to be installed for server as well,"I propose to add the following note in ""Quick Start: Altair + Notebook"" section:

> If you have multiple Python environments, you need to install the
> vega package in the Python environment that runs ipykernel *and*
> the Python environment that runs the Jupyter Notebook server.  You
> only need to install Altair in the Python environment that runs
> ipykernel.",1,2,[]
229,283687613,1540,42757577,2019-05-30 14:56:29,2019-05-30 17:19:22,closed,DOC: Add rolling mean scatter plot example,"I thought a nice addition to the examples would be one where a rolling mean is overlaid with a scatter plot, often used when visualizing dense time series. 

![visualization (4)](https://user-images.githubusercontent.com/2041969/58641546-679eab80-82c9-11e9-9617-be68060efb78.png)
",4,1,[]
230,283506549,1539,42757577,2019-05-30 03:52:50,2019-05-30 03:59:32,closed,ENH: support vega-themes,"This PR adds support for vega themes. For example:
```python
import altair as alt
alt.themes.enable('dark')

from vega_datasets import data
cars = data.cars()

alt.Chart(cars).mark_point().encode(
    x='Horsepower',
    y='Miles_per_Gallon',
    color='Origin',
).interactive()
```
![visualization - 2019-05-29T205206 398](https://user-images.githubusercontent.com/781659/58607230-a003a280-8253-11e9-8723-76f0ff7930b2.png)

This requires your frontend to use the most recent release of vega-embed.

Fixes #781 
",1,1,[]
231,283088494,1538,42757577,2019-05-29 04:25:14,2019-05-29 06:14:37,closed,Add disable_maxrows function & make serve() and save() respect data_transformer,Fixes #1537,0,1,[]
232,282206932,1535,42757577,2019-05-25 05:21:25,2019-05-25 14:34:41,closed,ENH: add saner warnings when trying to layer un-layerable charts,Addresses part of #1500,0,1,[]
233,282026983,1533,42757577,2019-05-24 13:56:03,2019-05-24 15:11:41,closed,fixed incorrect command in documentation - user_guide/saving_charts.rst,issue #1530,1,1,[]
234,281634034,1527,42757577,2019-05-23 14:15:49,2019-05-23 14:27:55,closed,Use mark_area in ridgeline plot example,"As discussed in #1524, using `mark_area` instead of `mark_line` ensures that the fill is between the line and the x-axis.",1,1,[]
235,281010995,1525,42757577,2019-05-22 02:27:31,2019-05-22 02:33:25,closed,BUG: make it possible to pass data as a property,,0,1,[]
236,280578501,1521,42757577,2019-05-20 23:51:49,2019-05-22 02:57:21,closed,ENH: move layer & concat chart data to the top level when possible.,"Addresses one part of #1500.

The enhancement here is that now you can do something like this:
```python
base = alt.Chart(df).encode(
    x='x', 
    y='y'
)
alt.layer(
    base.mark_point(),
    base.mark_line()
).facet(
    'category'
)
```
Previously, you had to do
```python
base = alt.Chart().encode(
    x='x', 
    y='y'
)
alt.layer(
    base.mark_point(),
    base.mark_line()
).facet(
    'category',
    data=df
)
```
or else the ``facet()`` would lead to an obscure error about missing data. With this change, both these options work correctly.",1,4,[]
237,280571476,1520,42757577,2019-05-20 23:12:15,2019-05-24 04:29:29,closed,Violin plot (a kind of),"Violinplot
---------

This example shows how to make a king of a Violinplot.

![visualization - 2019-05-21T021104 068](https://user-images.githubusercontent.com/11561581/58057538-e5e2ab80-7b6d-11e9-9f99-7646399f056f.png)
",3,4,[]
238,280521861,1519,42757577,2019-05-20 19:57:58,2019-05-21 00:01:46,closed,It ridgeline example,"Ridgeline plot (Joyplot) Example
--------------------------------
A [Ridgeline plot](https://serialmentor.com/blog/2017/9/15/goodbye-joyplots) chart is a chart that lets you visualize distribution of a numeric value for 
several groups.

Such a chart can be created in Altair by first transforming the data into a suitable representation.
![visualization - 2019-05-20T225810 490](https://user-images.githubusercontent.com/11561581/58048176-ce49f980-7b52-11e9-9467-bec561e4082c.png)
",3,4,[]
239,280005818,1517,42757577,2019-05-17 19:25:32,2019-05-20 19:16:50,closed,It stripplot example,"![visualization - 2019-05-17T222608 137](https://user-images.githubusercontent.com/11561581/57951496-e28fbb80-78f2-11e9-97b9-afab66352807.png)
Analog of https://seaborn.pydata.org/generated/seaborn.stripplot.html",1,5,[]
240,279238543,1509,42757577,2019-05-15 19:47:28,2019-05-15 19:59:07,closed,DOC: add non-notebook environments to display troubleshooting doc,Would have been helpful to the user who asked this question: https://stackoverflow.com/questions/56152270/python-3-6-altair-chart-prints-object-not-graph,0,1,[]
241,278889208,1508,42757577,2019-05-14 23:44:22,2019-05-15 04:15:51,closed,MAINT: Avoid deep copies whenever possible,,0,3,[]
242,278756284,1507,42757577,2019-05-14 16:17:09,2019-05-14 16:32:49,closed,MAINT: remove vega v3; update vega v5 to 5.4.0,No effect on the main API.,0,2,[]
243,278097531,1505,42757577,2019-05-13 01:27:53,2019-08-02 14:27:27,closed,Include chart from simple_scatter_large_square.py,"Include chart from altair/examples/simple_scatter_large_square.py
It is linked with pull request #1504",1,1,[]
244,278096939,1504,42757577,2019-05-13 01:21:36,2019-05-14 04:33:14,closed,Create simple_scatter_large_square.py,The example could be used in Mark example for mark_square() in https://github.com/altair-viz/altair/blob/master/doc/user_guide/marks.rst#marks,2,1,[]
245,277525256,1497,42757577,2019-05-09 19:51:15,2019-05-09 19:56:20,closed,BUG: fix wrapped facet implementation,,0,1,[]
246,277483038,1493,42757577,2019-05-09 17:36:06,2019-05-09 17:38:55,closed,ENH: add support for wrapped repeat,Fixes #1478,0,1,[]
247,277443854,1492,42757577,2019-05-09 15:37:30,2019-05-09 15:51:00,closed,DOC: mention jupyterlab pre-release in troubleshooting docs,,2,1,[]
248,277228874,1489,42757577,2019-05-09 02:58:55,2019-05-09 03:01:40,closed,DOC: add fold transform discussion to data pivoting section,"Fixes #1488 

Tested with local doc build.",0,1,[]
249,277049844,1487,42757577,2019-05-08 15:40:08,2019-05-08 15:46:00,closed,DOC: add more complete discussion of using Altair outside notebooks,Fixes #1484,0,1,[]
250,276679280,1482,42757577,2019-05-07 16:47:04,2019-05-07 16:50:09,closed,DOC: fix some typos in selection binding section,,0,1,[]
251,276421898,1480,42757577,2019-05-07 02:57:54,2019-05-08 02:46:43,closed,MAINT: fix spelling of several new encoding channels,,2,3,[]
252,276361644,1477,42757577,2019-05-06 22:05:45,2019-05-07 02:20:10,closed,Wrapped facet operator,fixes #1470 ,0,4,[]
253,276310870,1476,42757577,2019-05-06 19:51:02,2019-05-06 20:03:11,closed,ENH: add mark_*() methods to layer charts,"In Altair 3, layered charts can have their own marks which are inherited by all layers.

This PR adds ``mark_*()`` methods to the layered chart to make this easier to use.",0,2,[]
254,276009913,1472,42757577,2019-05-05 16:45:43,2019-05-06 17:50:32,closed,DOC: update jupyterlab display docs,,0,1,[]
255,274755026,1463,42757577,2019-04-30 14:28:18,2019-05-02 20:57:05,closed,Create brushing scatter plot to show data on a table example,Create an Altair implementation of the Vega-Lite example [Brushing Scatter Plot to show data on a table](https://vega.github.io/vega-lite/examples/brush_table.html).,8,4,[]
256,274591157,1461,42757577,2019-04-30 04:01:24,2019-04-30 04:39:28,closed,MAINT: update vega & vega-embed versions for v3 display,,0,1,[]
257,273777423,1458,42757577,2019-04-26 06:34:57,2019-04-26 15:25:09,closed,MAINT: make tooltips opt-in,"In Vega-Lite 2, tooltips would only be added to a chart if they were specifically listed in encodings.
Vega-Lite 3 changed this so that tooltips are shown unless explicitly disabled.

This uses a new theme argument (equivalent to ``chart.configure_mark(tooltip=None)``) to restore the previous behavior, in which tooltips are opt-in rather than opt-out.",0,1,[]
258,273373114,1457,42757577,2019-04-25 04:33:14,2019-04-25 04:36:16,closed,DOC: update examples for Altair 3,"Lots of minor stuff:

- formatting
- cleanups
- using compound marks
- changing color schemes in some cases
- disabling tooltips in some cases
- renaming for consistency
- making charts fit on the rendered page
- removing some redundant or unclear examples
- etc.",0,1,[]
259,272974353,1455,42757577,2019-04-24 04:53:01,2019-04-24 04:57:25,closed,MAINT: cleanup selection impl,,0,1,[]
260,272964532,1454,42757577,2019-04-24 03:44:30,2019-04-24 03:58:53,closed,BUG: fix Selection counter issue,"The selection counter was not being properly incremented, breaking charts with multiple selectors.",0,2,[]
261,272806879,1453,42757577,2019-04-23 16:33:35,2019-04-23 16:34:14,closed,DOC: add schematables to transform docs,,0,1,[]
262,272782727,1452,42757577,2019-04-23 15:29:26,2019-04-23 16:32:04,closed,DOC: add stack transform documentation,,0,2,[]
263,272515466,1449,42757577,2019-04-22 21:46:40,2019-04-23 19:46:31,closed,DOC: add example of stacked text annotations,"Fixes #1147
![visualization (73)](https://user-images.githubusercontent.com/781659/56534066-c70cdd00-650d-11e9-840c-dbfbde49d981.png)
",0,1,[]
264,272510928,1448,42757577,2019-04-22 21:29:01,2019-04-24 01:50:08,closed,DOC: add wrapped facet example,"@palewire - does this look OK to you?

![visualization (74)](https://user-images.githubusercontent.com/781659/56534102-d8ee8000-650d-11e9-9cc6-0bf1f86cf400.png)
",0,1,[]
265,272428772,1447,42757577,2019-04-22 16:53:52,2019-04-22 16:58:08,closed,MAINT: update vegalite->3.2.1 & vega->5.3.5,,1,1,[]
266,272425158,1446,42757577,2019-04-22 16:40:14,2019-04-22 16:45:13,closed,DOC: add docs for sample transform,,0,1,[]
267,272209504,1444,42757577,2019-04-21 11:21:43,2019-12-05 01:11:52,closed,MAINT: regen FUNCTION_LISTING from vega source,"Semi-manually regenerated from https://github.com/vega/vega/blob/master/docs/docs/expressions.md

Fixes #1411 

Thoughts: 
* No idea how to exhaustively test this
* Don't know if there's a less manual way of doing this --- I literally did some regex and hand-editing to generate the new strings",7,10,[]
268,272208132,1443,42757577,2019-04-21 10:50:24,2019-04-23 16:31:50,closed,MAINT: Fix some minor nits,"Mostly a test that I've got the dev env set up correctly, but whilst I'm there...
* Some pep8 violations
* Some deprecation warnings that show up in py.test",4,1,[]
269,272113897,1442,42757577,2019-04-19 23:28:27,2019-04-22 16:25:06,closed,DOC: add docs for joinaggregate transform,,0,1,[]
270,272062147,1441,42757577,2019-04-19 18:27:49,2019-04-19 18:31:30,closed,DOC: add narrative docs of impute transform,,0,1,[]
271,271906006,1440,42757577,2019-04-19 05:01:12,2019-04-19 14:49:21,closed,DOC: add narrative docs for fold transform,,0,1,[]
272,271763320,1439,42757577,2019-04-18 16:53:59,2019-04-18 19:12:09,closed,DOC: add documentation of flatten transform,,0,1,[]
273,271540152,1438,42757577,2019-04-18 03:48:43,2019-04-18 04:01:38,closed,MAINT: add immediate validation of chart properties,This makes errors clearer when assigning properties.,0,1,[]
274,271448866,1437,42757577,2019-04-17 20:00:49,2019-04-17 21:44:40,closed,DOC: minor doc fixes for Altair 3,,1,3,[]
275,271444812,1436,42757577,2019-04-17 19:47:25,2019-04-17 19:59:23,closed,vegalite 3 fixes,Fixes for a few issues encountered while trying to build the docs.,0,3,[]
276,270362450,1435,42757577,2019-04-15 03:51:32,2019-04-15 04:01:21,closed,MAINT: update to Vega-Lite 3.2,,0,1,[]
277,270251790,1433,42757577,2019-04-13 20:19:38,2019-04-15 03:48:31,closed,Clean up alt.selection (fixes #1431),"This cleans up the syntax of ``alt.selection_*()``. The main effects are

- you no longer need to use ``selection.ref()`` when referencing the selection (e.g. as a scale domain). Concretely, if ``selection=alt.selection_interval()`` then ``alt.Scale(domain=selection.ref())`` can now be written ``alt.Scale(domain=selection)``.
- it's no longer possible to pass a selection directly as a property; it must be passed via the ``add_selection`` function
- it's no longer possible to use the addition operator to combine two selections; so, rather than ``chart.properties(selection=sel1+sel2)``, we instead do ``chart.add_selection(sel1, sel2)``.",1,4,[]
278,269400329,1427,42757577,2019-04-11 02:34:16,2019-04-11 02:37:23,closed,Doc updates for Altair 3,A few miscellaneous things,0,3,[]
279,269281606,1424,42757577,2019-04-10 18:41:32,2019-04-10 21:27:53,closed,Specify vega==1.4.0 in notebook installation instructions,"I found that altair looks for vega in the entrypoint 'altair.vegalite.v2.renderer' (implying it doesn't support vegalite v3), but the PyPI package vega now puts its entrypoint in 'altair.vegalite.v3.renderer' in all version starting at 2.0.0 (see [ipyvega commit](https://github.com/vega/ipyvega/commit/d01f00217f0166ef9b304d195bea17c4bd844d41#diff-2eeaed663bd0d25b7e608891384b7298R37)).
So to use altair in a Jupyter notebook, we must specify an older version of vega. Otherwise `alt.renderers.enable('notebook')` fails with a message saying that vega cannot be found.

(We should probably update the error message as well.)",1,1,[]
280,267491489,1417,42757577,2019-04-04 15:05:57,2019-04-04 15:10:44,closed,MAINT: add convenience methods to SchemaBase,This has no impact on the typical user; these are methods I wish had existed when I was developing altair-transform.,0,1,[]
281,266391879,1414,42757577,2019-04-01 20:31:21,2019-04-01 20:49:50,closed,MAINT: update to Vega-Lite 3.1.0,,0,2,[]
282,266276252,1413,42757577,2019-04-01 14:50:31,2019-04-01 14:53:17,closed,DOC: add initialization to binding examples,,0,1,[]
283,266036162,1412,42757577,2019-03-31 18:57:58,2019-03-31 19:34:20,closed,Update saving_charts.rst,It's not obvious how to save with Firefox (kept getting a missing chromedriver error.) Pulled this tidbit from the code. ,2,1,[]
284,266024820,1410,42757577,2019-03-31 16:08:54,2019-03-31 16:45:24,closed,example of wrapped facet,"Replicate of https://vega.github.io/vega-lite/docs/facet.html#facet-full to demo `columns` usage.  It's very similar from the original barley trellis plot, but the `columns` documentation is not ready now, so this example might be helpful.  Let me know if any modification is preferred to make it more useful.
![image](https://user-images.githubusercontent.com/7856031/55291458-b785f280-53ac-11e9-8e92-08d6030d94e3.png)
",1,1,[]
285,265968797,1409,42757577,2019-03-30 21:13:48,2019-03-31 13:38:11,closed,add example for normalized parallel coordinates,"Add example for normalized parallel coordinates to demo `.transform_joinaggregate()` usage:
![image](https://user-images.githubusercontent.com/7856031/55281720-11d07600-530f-11e9-96ae-e84439433bc5.png)
",3,3,[]
286,265922795,1407,42757577,2019-03-30 07:44:12,2019-03-31 18:50:25,closed,add example for points overlay on maps,"I cannot find a complete fit dataset from vega-dataset, so I have to do a little by of transformation to demonstrate this example

![image](https://user-images.githubusercontent.com/18221871/55273160-76d19f00-5302-11e9-8c76-d14acc570044.png)

#1366 ",6,4,[]
287,265493637,1405,42757577,2019-03-28 20:34:20,2019-03-28 22:59:05,closed,MAINT: Add data.json to doc ignore,Addresses #1404 ,1,1,[]
288,265418357,1402,42757577,2019-03-28 16:50:05,2019-03-28 16:58:50,closed,MAINT: update clean-generated in DOC makefile,cc @eitanlees ,2,1,[]
289,265379331,1401,42757577,2019-03-28 15:18:08,2019-03-28 16:59:05,closed,DOC: add all encodings to tables,,0,1,[]
290,265191546,1399,42757577,2019-03-28 05:26:50,2019-03-31 13:38:49,closed,ENH: Add William Playfair Wheat and Wages example,"![image](https://user-images.githubusercontent.com/3757165/55132348-1b5bb180-5148-11e9-835b-cb3f775a815b.png)
",4,2,[]
291,265183932,1398,42757577,2019-03-28 04:35:37,2019-03-28 05:06:01,closed,DOC: add CI error band example,,0,1,[]
292,265179212,1397,42757577,2019-03-28 04:03:08,2019-03-28 05:05:48,closed,DOC: update sphinx docs for Altair 3,"Lots of small changes due to renaming of internal objects.

Also updated property tables for marks and encodings.",3,2,[]
293,265142110,1396,42757577,2019-03-28 00:01:16,2019-03-28 02:49:11,closed,ENH: Add Error Bars with Standard Deviation example,Using the new error bar mark to show the standard deviation.,1,1,[]
294,265115485,1394,42757577,2019-03-27 21:54:31,2019-03-27 22:20:45,closed,Vega-Lite 3.0.3,"Main fix is ability to use ``""repeat""`` in addition to ``""row""`` and ``""column""`` in ``alt.repeat``.",0,4,[]
295,265021247,1391,42757577,2019-03-27 17:07:08,2019-08-02 14:28:08,closed,ENH: Add Tukey Box Plot (1.5 IQR) example,"![image](https://user-images.githubusercontent.com/3757165/55096911-cc2e6600-50e0-11e9-8bcb-5a0650f06c15.png)
",6,1,[]
296,264952409,1390,42757577,2019-03-27 14:30:10,2019-03-27 14:53:41,closed,DOC: update parallel coordinates chart,Use the fold transform rather than pre-preocessing the data.,0,1,[]
297,264949817,1389,42757577,2019-03-27 14:24:28,2019-03-27 14:54:06,closed,DOC: use boxplot mark for boxplot example,,0,1,[]
298,264557481,1388,42757577,2019-03-26 14:57:34,2019-03-26 15:07:42,closed,Make Altair default to using vega-lite 3,Also bump VL version to 3.0.2,1,2,[]
299,264556276,1387,42757577,2019-03-26 14:54:56,2019-03-26 16:42:34,closed,Add transform methods for Vega-Lite 3 transforms,,0,4,[]
300,264373554,1386,42757577,2019-03-26 04:56:36,2019-03-26 05:00:20,closed,ENH: add VegaLite 3 ConcatChart,General concat chart that supports wrapping.,0,1,[]
301,264363276,1385,42757577,2019-03-26 03:47:21,2019-03-26 04:20:46,closed,Vega-Lite 3 Update,"- Update VL3 schema to 3.0.0
- Allow tooltip encoding to be null
- Add compound marks",0,4,[]
302,263841270,1384,42757577,2019-03-23 15:49:02,2019-03-23 15:53:12,closed,BUG: fix parsing of 'count()' as window op,,0,1,[]
303,263807741,1383,42757577,2019-03-23 04:02:14,2019-03-23 04:06:17,closed,Add basic Vega-Lite v3 wrappers,"This doesn't change any of the public API, but adds Python wrappers for Vega-Lite version 3.0.0rc13. They can be used as follows:
```python
import altair.vegalite.v3 as alt
```
and then use ``alt`` as normal. Currently all examples in the gallery work correctly with v3.",1,5,[]
304,263747239,1382,42757577,2019-03-22 20:09:28,2019-03-22 20:24:14,closed,Example of scatter plot with linked layered histogram,As mentioned in https://github.com/altair-viz/altair/issues/1376 . Hopefully might be useful to some people.,1,3,[]
305,263739657,1381,42757577,2019-03-22 19:40:10,2019-03-22 20:24:26,closed,"MAINT: remove vega.v2, update vega.v4, add vega.v5",This doesn't affect the vega-lite wrappers or the main Altair API.,0,1,[]
306,263735901,1380,42757577,2019-03-22 19:26:03,2019-03-22 19:35:12,closed,MAINT: update tools for compatibility with vega 5 & vegalite 3,"By design, this is a no-op for the current vega/vega-lite versions.",0,1,[]
307,262808211,1377,42757577,2019-03-20 10:40:08,2019-03-20 14:24:12,closed,Adding example of sorted error bars plot.,"An adaptation of the https://github.com/altair-viz/altair/blob/master/altair/examples/error_bars_with_ci.py file. It took me a while to figure out how to do this, so figured I would submit it for others' benefit. 

I tried to stick to the style of the original file, but let me know if that is too many strangely placed parentheses.",1,1,[]
308,262259568,1373,42757577,2019-03-18 23:16:46,2019-03-19 15:35:33,closed,Create grouped_bar_chart_with_error_bars.py,"As mentioned in https://github.com/altair-viz/altair/issues/1362 . I have included a change of title, in order to suppress the CIs showing up in the title. However, this may not fit with the style of the examples, so that might need a change.",1,2,[]
309,261767462,1372,42757577,2019-03-16 11:57:45,2019-03-16 15:23:46,closed,DOC: update ecosystem,"Hi, I updated broken links in the ecosystem documentation page.

I also wanted to mention https://github.com/Kitware/seaborn_altair but it is very similar to https://github.com/PythonCharmers/starborn (authors have discussed joining forces in [here](https://github.com/PythonCharmers/starborn/issues/1)).",1,1,[]
310,259638148,1364,42757577,2019-03-08 23:26:20,2019-03-08 23:55:34,closed,example using selection for mark_area,Moving this from issues to an example of how to use interval section with `mark_area`.,1,1,[]
311,258010812,1359,42757577,2019-03-04 16:39:06,2019-03-04 16:52:10,closed,DOC: add warning about CSV data transformer,Help users avoid hitting things like #1358,0,1,[]
312,256846869,1352,42757577,2019-02-27 21:30:12,2019-02-27 22:15:46,closed,MAINT: fix travis issue with jsonschema,jsonschema's 3.0 release introduces an incompatibility with the pytest version installed by default on travis. This should fix the issue.,0,1,[]
313,255970206,1350,42757577,2019-02-25 17:01:49,2019-02-25 17:09:47,closed,DOC: better configuration examples,,0,3,[]
314,255717952,1349,42757577,2019-02-24 22:24:26,2019-02-24 22:30:37,closed,DOC: add missing sections on configure_header and configure_title,,0,1,[]
315,255555660,1347,42757577,2019-02-22 22:42:27,2019-02-23 01:35:57,closed,Update binder to launch in JupyterLab,,1,1,[]
316,255129881,1346,42757577,2019-02-21 18:15:00,2019-02-21 18:32:38,closed,DOC: update faq to mention altair_data_server,,1,1,[]
317,255114780,1345,42757577,2019-02-21 17:26:26,2019-02-21 17:31:46,closed,DOC: use README for pypi description,,0,2,[]
318,255100700,1344,42757577,2019-02-21 16:47:09,2019-02-21 17:19:15,closed,spelling,"Whoops ... A bit too early, sorry.",1,1,[]
319,255062051,1343,42757577,2019-02-21 15:09:43,2019-02-21 16:24:47,closed,add borderless example,Closes #1342,1,1,[]
320,251012794,1324,42757577,2019-02-07 07:11:49,2019-02-10 20:03:41,closed,DOC: Add window transform example,"This example shows that aggregation functions aren't only for aggregate transforms. By using two aggregation functions within a window transform we are able to compute z-scores within a calculate transform.

See also: https://vega-js.slack.com/archives/C0NG6SXFX/p1548451285140300",3,7,[]
321,249736322,1320,42757577,2019-02-01 21:09:31,2019-02-01 23:06:25,closed,Improve documentation for window transform? #1301,"This is my attempt to address #1301. Although it's not comprehensive, I hope that is a foundation for future improvements.

There are two substantive commits. One replaces the window transform example (see issue and commit for my rationale). The second adds a table of window transform aggregation functions, from the Vega-Lite documentation.

Whilst I'd like to keep chipping away at #1301, I feel that it's better to open many smaller PRs early, rather than one large PR late. Doing so will also help me determine whether my writing/formatting style is consistent (or at least consistent enough) with other Altair committers.",5,7,[]
322,249439701,1319,42757577,2019-01-31 23:38:29,2019-01-31 23:41:19,closed,MAINT: fix flake8 errors in type comments,"In the most recent version of flake8, typing comments are flake-checked, so we need to update this here.",0,1,[]
323,249437065,1318,42757577,2019-01-31 23:25:34,2019-01-31 23:47:36,closed,MAINT: Add typing package version to requirements.txt,Fixes #1317,0,2,[]
324,248219669,1315,42757577,2019-01-28 17:12:42,2019-01-29 02:36:45,closed,BUG: specify skipna in infer_dtypes (fixes #1314),,0,1,[]
325,247893313,1312,42757577,2019-01-26 14:46:36,2019-02-11 19:13:41,closed,added top k items,"Adding sorting of 10 items of long list of items.

As mentioned in 
https://github.com/altair-viz/altair/issues/1306
and in notebook example:
https://github.com/altair-viz/altair_notebooks/pull/20",13,26,[]
326,246078987,1303,42757577,2019-01-20 00:07:43,2019-01-20 02:53:20,closed,DOC: correct spelling errors,A couple of spelling errors (and a typo) I noticed when reading the documentation. I've prefixed the summary with _DOC_ because that seems to be a repository convention.,1,1,[]
327,244565491,1297,42757577,2019-01-14 19:50:15,2019-01-14 20:09:15,closed,DOC: Really move Seattle weather heatmap example into case studies,I think a mistake was made in #1286 where the weather heat map was moved to the line chart section instead of the case studies. ,1,1,[]
328,243153508,1290,42757577,2019-01-08 23:08:08,2019-01-14 20:49:38,closed,Add example for alternate axes scale.,Fixes altair-viz/altair#1283,2,3,[]
329,242878757,1289,42757577,2019-01-08 07:23:26,2019-01-14 20:50:38,closed,DOC: Simple Isotype grid example,"Mirrors a [Vega-Lite example](https://vega.github.io/vega-lite/examples/isotype_grid.html) upstream.

![visualization 2](https://user-images.githubusercontent.com/9993/50815775-351cf380-12d3-11e9-9a69-86d11e30feab.png)

```python
import altair as alt
import pandas as pd

data = pd.DataFrame([dict(id=i) for i in range(1, 101)])

alt.Chart(data).transform_calculate(
    col=""ceil (datum.id/10)""
).transform_calculate(
    row=""datum.id - datum.col*10""
).mark_point(filled=True, size=50).encode(
    x=alt.X(""col:O"", axis=None),
    y=alt.Y(""row:O"", axis=None),
    shape=alt.ShapeValue(""M1.7 -1.7h-0.8c0.3 -0.2 0.6 -0.5 0.6 -0.9c0 -0.6 -0.4 -1 -1 -1c-0.6 0 -1 0.4 -1 1c0 0.4 0.2 0.7 0.6 0.9h-0.8c-0.4 0 -0.7 0.3 -0.7 0.6v1.9c0 0.3 0.3 0.6 0.6 0.6h0.2c0 0 0 0.1 0 0.1v1.9c0 0.3 0.2 0.6 0.3 0.6h1.3c0.2 0 0.3 -0.3 0.3 -0.6v-1.8c0 0 0 -0.1 0 -0.1h0.2c0.3 0 0.6 -0.3 0.6 -0.6v-2c0.2 -0.3 -0.1 -0.6 -0.4 -0.6z"")
).properties(width=400, height=400).configure_view(strokeWidth=0)
```",7,5,[]
330,242877959,1288,42757577,2019-01-08 07:18:56,,open,DOC: Isotype grid case study,"Inspired by a Vega-Lite example, I took a run at creating a case study example of an isotype grid. I couldn't quite get the legend nailed, but before I obsessed over it I thought I'd offer it as a draft to see if you thought it would ever merit inclusion.

![screenshot from 2019-01-07 23-16-42](https://user-images.githubusercontent.com/9993/50815602-91cbde80-12d2-11e9-994f-0aa44b4a59de.png)

```python
import altair as alt
from vega_datasets import data

source = data.la_riots()

# Sort by the key field
source = source.sort_values(""race"")

# Add an incremental id to the data
source['id'] = source.reset_index().index + 1

alt.Chart(
    source,
    title=""L.A. Riots Deaths by Race""
).transform_calculate(
    col=""ceil(datum.id/10)""
).transform_calculate(
    row=""datum.id - datum.col*10""
).mark_point(filled=True, size=90).encode(
    x=alt.X(""col:O"", axis=None),
    y=alt.Y(""row:O"", axis=None),
    shape=alt.ShapeValue(""M1.7 -1.7h-0.8c0.3 -0.2 0.6 -0.5 0.6 -0.9c0 -0.6 -0.4 -1 -1 -1c-0.6 0 -1 0.4 -1 1c0 0.4 0.2 0.7 0.6 0.9h-0.8c-0.4 0 -0.7 0.3 -0.7 0.6v1.9c0 0.3 0.3 0.6 0.6 0.6h0.2c0 0 0 0.1 0 0.1v1.9c0 0.3 0.2 0.6 0.3 0.6h1.3c0.2 0 0.3 -0.3 0.3 -0.6v-1.8c0 0 0 -0.1 0 -0.1h0.2c0.3 0 0.6 -0.3 0.6 -0.6v-2c0.2 -0.3 -0.1 -0.6 -0.4 -0.6z""),
    color=alt.Color(
        ""race:N"",
        legend=alt.Legend(title="""", padding=30)
    )
).properties(
    width=400,
    height=400
).configure_view(strokeWidth=0)
```",2,4,[]
331,242869596,1287,42757577,2019-01-08 06:28:48,2019-01-08 16:26:29,closed,DOC: Simplified trail chart and moved it into line charts section,This has been regrouped to match how Vega-Lite's docs are setup.,1,1,[]
332,242868660,1286,42757577,2019-01-08 06:22:45,2019-01-08 16:25:51,closed,DOC: Moved Seattle weather heatmap example into case studies,This is really more of a fully featured case study than a simple example of an individual charting feature,1,2,[]
333,242554991,1285,42757577,2019-01-07 05:15:03,2019-01-07 20:12:34,closed,DOC: Added CO2 Concentration case study,"Working backward from the [Vega-Lite docs](https://vega.github.io/vega-lite/examples/layer_line_co2_concentration.html), I recreated an example of Gregor Aisch's CO2 chart.

I suspect you might have thoughts about how to best format the window function. It was a first time writing one so I'm sure there is room for improvement.

![visualization](https://user-images.githubusercontent.com/9993/50750105-13027300-11f8-11e9-8875-054487e05290.png)

```python
import altair as alt
from vega_datasets import data

source = data.co2_concentration()

base = alt.Chart(
    source,
    title=""Carbon Dioxide in the Atmosphere""
).transform_calculate(
    year=""year(datum.Date)""
).transform_calculate(
    decade=""floor(datum.year / 10)""
).transform_calculate(
    scaled_date=""(datum.year % 10) + (month(datum.Date)/12)""
).transform_window(
    window=[
        {'op': 'first_value', 'as': 'first_date', 'field': 'scaled_date'},
        {'op': 'last_value', 'as': 'last_date', 'field': 'scaled_date'}
    ],
    sort=[
        {""field"": ""scaled_date"", ""order"": ""ascending""},
        {""field"": ""scaled_date"", ""order"": ""ascending""}
    ],
    groupby=[""decade""],
    frame=[None, None]
).transform_calculate(
  end=""datum.first_date === datum.scaled_date ? 'first' : datum.last_date === datum.scaled_date ? 'last' : null""
).encode(
    x=alt.X(
        ""scaled_date:Q"",
        axis=alt.Axis(title=""Year into Decade"", tickCount=11)
    ),
    y=alt.Y(
        ""CO2:Q"",
        title=""CO2 concentration in ppm"",
        scale=alt.Scale(zero=False)
    )
)

line = base.mark_line().encode(
    color=alt.Color(
        ""decade:O"",
        scale=alt.Scale(scheme=""magma""),
        legend=None
    )
)

start_year = base.transform_filter(
  {""field"": ""end"", ""equal"": ""first""}
).mark_text(baseline=""top"").encode(text=""year:N"")

end_year = base.transform_filter(
  {""field"": ""end"", ""equal"": ""last""}
).mark_text(baseline=""bottom"").encode(text=""year:N"")

(line + start_year + end_year).configure_text(
    align=""left"",
    dx=1,
    dy=3
).properties(width=600, height=375)
```",2,3,[]
334,242534294,1284,42757577,2019-01-07 01:51:24,,open,DOC: Added new line chart examples with points over the series,"I've added three new line chart examples lifted from the ones upstream in the Vega Lite docs. In the interest of uniformity, I've also modified the multi-series example and ensured that the three new ones have a matching dataset.

If you like these, I'll make some more line charts change soon so we can give it the same attention we recently gave the bar charts.",1,5,[]
335,240293731,1275,42757577,2018-12-20 20:33:26,2018-12-20 22:18:43,closed,MAINT: make docstring rewriting robust to nonexistent docstrings,Addresses #1274,0,1,[]
336,238839555,1271,42757577,2018-12-14 20:54:02,2018-12-14 21:22:08,closed,Isotype emoji,Add isotype emoji plot (Similar to https://vega.github.io/vega-lite/examples/isotype_bar_chart_emoji.html),0,2,[]
337,237556094,1267,42757577,2018-12-11 05:36:25,2018-12-11 05:49:27,closed,DOC: add documentation of color scale=None,,0,2,[]
338,237505019,1266,42757577,2018-12-10 23:46:17,2018-12-11 01:52:02,closed,Fix typo in title,Closes altair-viz/altair-viz.github.io#16,1,1,[]
339,237433210,1265,42757577,2018-12-10 19:10:17,2018-12-10 19:18:59,closed,DOC: ensure examples run offline,fixes #1264 ,0,2,[]
340,237171199,1261,42757577,2018-12-10 00:50:52,2018-12-10 16:36:20,closed,[Paper] Add missing author to paper,The [corresponding archive](https://zenodo.org/record/2030098) has already been updated.,1,1,[]
341,237149474,1260,42757577,2018-12-09 18:54:36,2018-12-10 16:35:56,closed,Add bibtex for citing the paper,,1,2,[]
342,237043850,1259,42757577,2018-12-08 04:12:43,2018-12-08 04:17:45,closed,DOC: change axis=Axis(title=title) to title=title,"Instead of setting encoding titles like this:
```python
x=alt.X('x', axis=alt.Axis(title='title'))
```
we should set them like this:
```python
x=alt.X('x', title='title')
```",1,1,[]
343,236967205,1258,42757577,2018-12-07 19:17:30,2018-12-07 21:25:33,closed,[Paper] Fix reference format,Applying https://github.com/openjournals/joss-reviews/issues/1057#issuecomment-445330891,0,1,[]
344,236943479,1257,42757577,2018-12-07 17:41:22,2019-01-08 06:09:38,closed,DOC: Example syntax cleanup,,2,2,[]
345,236942641,1256,42757577,2018-12-07 17:37:51,2018-12-08 03:06:37,closed,Does this need to be RST?,,1,1,[]
346,236925059,1254,42757577,2018-12-07 16:34:32,2018-12-07 16:38:18,closed,DOC: use local wheat dataset in examples,Requires vega-datasets v0.7 for offline testing,0,1,[]
347,235999354,1252,42757577,2018-12-04 23:47:35,2018-12-04 23:50:17,closed,MAINT: improve embedOpt testing,Replaces #1251,0,1,[]
348,235980481,1251,42757577,2018-12-04 22:22:15,2018-12-05 06:01:04,closed,ENH: set defaultStyle to True by default in HTML output,"This means that the actions menu appears in the upper-right corner rather than as text links below the chart. Note that this also affects the Colab and Kaggle renderers.

cc/ @domoritz ",13,3,[]
349,235926972,1249,42757577,2018-12-04 19:14:17,2019-03-23 04:05:52,closed,WIP: Support Vega-Lite 3,"This PR generates the low-level API for Vega-Lite 3. Once we release Altair 2.3 (#1216), this can be merged, and then we can iterate on higher-level APIs for new transforms & other features.

Replaces #1095 

Note: this involves very little new hand-written code: everything under ``altair/vegalite/v3`` is generated by the following commands:
```
$ python tools/generate_schema_interface.py
$ cp altair/vegalite/v2/*.py altair/vegalite/v3
```",2,1,[]
350,235920699,1248,42757577,2018-12-04 18:53:19,2018-12-04 18:55:42,closed,MAINT: Fix schemapi issue with non-object schema defs,preparation for vega-lite 3 (no user-facing changes),0,2,[]
351,235916436,1247,42757577,2018-12-04 18:39:05,2018-12-04 18:42:03,closed,Cleanup: streamline code generation,No user-facing changes... this is preparation for an easier upgrade to vega-lite 3.,0,1,[]
352,235228135,1244,42757577,2018-12-02 00:18:33,2018-12-03 15:37:35,closed,DOC: Bar chart with sorted segments example,,1,1,[]
353,235201048,1243,42757577,2018-12-01 16:00:46,2018-12-01 20:50:59,closed,DOC: Cleaned up trellis scatter example,"The current example is too wide and breaks out of the template. I'd also like to try to gradually standardize this section of examples to use a common local dataset. Cars seems like a good one we're already using in other examples, and it fits pretty well here. ",1,1,[]
354,235008700,1241,42757577,2018-11-30 14:40:48,2018-11-30 16:11:56,closed,DOC: Relabel line chart variable,I was a little confused by the labels used on the simple line chart example. The label was `'sin(x)'` but then the equation was `sin(x / 5)`. I think it would make more sense just to have `'x'` and `'f(x)'` as labels. I modified the other example where this occurs. ,1,1,[]
355,234846530,1240,42757577,2018-11-30 01:54:22,2018-12-03 15:41:54,closed,DOC: Standardized grouped bar chart example,"* Substituted dataset common to bar examples
* Reduced code complexity
* Fixed ""too wide"" bug
* Added more docs
* Added second horizontal version of the example",5,10,[]
356,234693895,1239,42757577,2018-11-29 16:04:26,2018-11-29 17:22:31,closed,DOC: Replace link of pdvega repo,pdvega is no under altair-viz. The old link was not working anymore.,1,1,[]
357,234503631,1238,42757577,2018-11-29 04:14:22,2018-11-29 15:34:46,closed,DOC: Change grouped bar chart example,I changed the grouped bar chart example as requested in https://github.com/altair-viz/altair/issues/1236 also I moved the previous grouped bar chart example to the case studies section. ,2,2,[]
358,234425770,1237,42757577,2018-11-28 21:13:11,2018-12-03 15:43:02,closed,Add example of custom data transformer to docs,"The example shows how the json data transformer can be used to store the
data files in a separate directory.",1,1,[]
359,233991003,1234,42757577,2018-11-27 17:05:50,2018-11-27 17:56:06,closed,DOC: Moved Gantt chart into the other category,,1,1,[]
360,233948322,1233,42757577,2018-11-27 15:12:58,2018-11-27 17:55:38,closed,DOC: Simplified layered bar chart example,,1,1,[]
361,233683582,1231,42757577,2018-11-26 20:17:20,2018-11-26 21:41:08,closed,DOC: Added more fully developed us_employment case study,"I'm still not sure how to get the January bar on the left to start exactly where I'd like it, but here's a run at further developing this new dataset into a case study example.

![visualization 4](https://user-images.githubusercontent.com/9993/49039616-2213f100-f175-11e8-8be0-7fe75d11984b.png)

```python
import altair as alt
import pandas as pd
from vega_datasets import data

source = data.us_employment()
presidents = pd.DataFrame([
    {
        ""start"": ""2006-01-01"",
        ""end"": ""2009-01-19"",
        ""president"": ""Bush""
    },
    {
        ""start"": ""2009-01-20"",
        ""end"": ""2015-12-31"",
        ""president"": ""Obama""
    }
])

bars = alt.Chart(source, title=""The U.S. employment crash during the Great Recession"").mark_bar().encode(
    x=alt.X(""month:T"", axis=alt.Axis(title="""")),
    y=alt.Y(""nonfarm_change:Q"", axis=alt.Axis(title=""Change in non-farm employment (in thousands)"")),
    color=alt.condition(
        alt.datum.nonfarm_change > 0,
        alt.value(""steelblue""),
        alt.value(""orange"")
    )
)

rule = alt.Chart(presidents).mark_rule(
  color=""black"",
  strokeWidth=2
).encode(
  x='end:T'
).transform_filter(alt.datum.president == ""Bush"")

text = alt.Chart(presidents).mark_text(
    align='left',
    baseline='middle',
    dx=7,
    dy=-135,
    size=11
).encode(
    x='start:T',
    x2='end:T',
    text='president',
    color=alt.value('#000000')
)

(bars + rule + text).properties(width=600)
```",4,4,[]
362,233407677,1230,42757577,2018-11-25 23:11:05,2018-11-26 17:10:36,closed,DOC: Change the default category to Other Charts,"I tried a fresh doc build to see all of the changes that have happened recently. It threw a `keyerror: 'General'` when running `altairgallery.py`

I poked around to try to figure out what was going on. It seems that when populating the examples the default category was 'general' but that category has since been abandoned. 

I changed the default to be 'other charts' which fixed the error when building the docs. 

Not sure if that is the best solution but it's a start. ",1,1,[]
363,233389976,1229,42757577,2018-11-25 17:52:37,2018-11-26 17:11:00,closed,DOC: Fixed shorthand mistake in barley plot,This is my oversight. Sorry.,1,1,[]
364,233350040,1228,42757577,2018-11-25 01:31:00,2018-11-25 15:50:01,closed,[Paper] Fix format,,0,1,[]
365,233342197,1226,42757577,2018-11-24 21:53:59,2018-11-25 16:06:30,closed,DOC: Improved barley case study,"Here's how Becker published [his own version of the trellis chart](https://hci.stanford.edu/courses/cs448b/papers/becker-trellis-jcgs.pdf).

![screenshot from 2018-11-24 13-52-17](https://user-images.githubusercontent.com/9993/48973248-2fec3980-eff0-11e8-96bd-e1e72ca451b5.png)

I've modified our case study to bring it more in line.

```python
import altair as alt
from vega_datasets import data

source = data.barley()

alt.Chart(source, title=""The Morris Mistake"").mark_point().encode(
    alt.X(
        'yield',
        scale=alt.Scale(zero=False),
        axis=alt.Axis(grid=False, title=""Barley Yield (bushels/acre)"")
    ),
    alt.Y(
        'variety',
        sort=alt.EncodingSortField(field='yield', op='sum', order='descending'),
        scale=alt.Scale(rangeStep=20),
        axis=alt.Axis(title="""", grid=True)
    ),
    color=alt.Color('year:N', legend=alt.Legend(title=""Year"")),
    row=alt.Row(
        'site',
        title="""",
        sort=alt.EncodingSortField(field='yield', op='sum', order='descending'),
    )
)
```
![visualization 3](https://user-images.githubusercontent.com/9993/48973294-13043600-eff1-11e8-9a0d-7d8e2c678de7.png)
",1,5,[]
366,233328930,1225,42757577,2018-11-24 16:49:14,2018-11-25 16:06:06,closed,DOC: Added case study with Iowa electricity data,,1,2,[]
367,233326953,1224,42757577,2018-11-24 16:08:00,2018-11-25 16:04:29,closed,DOC: Standardize the horizontal bar chart example,"I changed the horizontal bar chart example to bring it inline with recent edits to other bar charts, and clarify its documentation and mission. ",1,1,[]
368,233262739,1223,42757577,2018-11-23 18:24:57,2018-11-24 14:40:21,closed,DOC: Expanded sorted bar chart example with docs and a dataset,,1,1,[]
369,233024610,1222,42757577,2018-11-22 15:59:46,2018-11-24 14:38:09,closed,DOC: Another chart that should find a home outside the bars,"For now, let's put it in other",1,1,[]
370,232876076,1220,42757577,2018-11-22 06:54:57,2018-11-22 14:43:07,closed,DOC: Reorg box and whisker,"IMHO, this is not a traditional box chart and should ultimately be filed elsewhere. For the time being, it can live in the other charts section ",1,1,[]
371,232856026,1219,42757577,2018-11-22 04:20:49,2018-11-22 05:26:46,closed,DOC: Standardized bar chart with mean overlay example,Another case of standardizing a bar chart example to use William Playfair's classic wheat data. ,1,1,[]
372,232855125,1218,42757577,2018-11-22 04:12:41,2018-11-22 05:25:25,closed,DOC: Standardized layered bar chart with dual axis example,"Converted another bar chart to use William Playfair's wheat dataset. I think this change is especially fitting because the Playfair original it is drawn from was also on a dual axis.

![](https://vignette.wikia.nocookie.net/wam/images/e/ee/William-playfair-wheat-original.jpg/revision/latest?cb=20141014165055)

```python
import altair as alt
from vega_datasets import data

source = data.wheat.url

base = alt.Chart(source).encode(x='year:O')

bar = base.mark_bar().encode(y='wheat:Q')

line =  base.mark_line(color='red').encode(
    y='wages:Q'
)

(bar + line).properties(width=600)
```
![download 1](https://user-images.githubusercontent.com/9993/48881413-313c1d00-edca-11e8-8445-b6142a405ce0.png)
",1,2,[]
373,232854193,1217,42757577,2018-11-22 04:03:41,2018-11-22 05:24:44,closed,DOC: Standardize bar chat with labels example to use source consistent with other examples,"Another step toward standardizing our bar chart examples. Since William Playfair is such an important innovator in the history of the bar chart, it only seems fitting to use his dataset. ",1,1,[]
374,232791912,1215,42757577,2018-11-21 20:36:48,2018-11-21 21:01:11,closed,Remove duplicative simple scatter example,See #1210,0,2,[]
375,232753805,1214,42757577,2018-11-21 17:57:10,2018-11-21 20:32:59,closed,DOC: Regroup error bars chart in the example gallery,"IMHO, this is a not a traditional bar chart. Grouping it where we have it now has the potential to confuse readers. ",1,1,[]
376,232731267,1213,42757577,2018-11-21 16:42:17,2018-11-21 20:31:49,closed,DOC: Standardize highlighted bar chart examples,"Our highlighted bar chart examples are drastically different. Just as we improved our stacked bar examples by switching to a standard data source, I've done the same here. I've also cleaned up the titles and docs to bring them more into line. ",1,4,[]
377,232696407,1212,42757577,2018-11-21 15:05:35,2018-11-21 20:30:38,closed,"DOC: Tidy up line chart with points example, move it down the gallery","IMHO, the simple charts section at the top should only have one very basic example per chart type. Everything else should go below in the sections dedicated to each chart type. ",1,1,[]
378,232695054,1211,42757577,2018-11-21 15:01:42,2018-11-21 20:29:41,closed,DOC: Cleaned up simple strip plot example's docs,,1,1,[]
379,232545289,1207,42757577,2018-11-21 05:44:21,2018-11-21 20:29:12,closed,DOC: Add example of bar chart with negative values,"![visualization 1](https://user-images.githubusercontent.com/9993/48821166-09d34a80-ed0d-11e8-9939-a9a3f3241b7a.png)

```python
import altair as alt

source = ""https://raw.githubusercontent.com/datadesk/vega-datasets/gh-pages/data/us-employment.csv""

alt.Chart(source).mark_bar().encode(
    x=""month:T"",
    y=""nonfarm_change:Q"",
    color=alt.condition(
        alt.datum.nonfarm_change > 0,
        alt.value(""steelblue""),  # The positive color
        alt.value(""orange"")  # The negative color
    )
).properties(width=600)
```

This should not be merged until the next version of `vega_datasets` is released and the source line can be updated as follows:

```python
from vega_datasets import data

source = data.us_unemployment()
```",2,3,[]
380,232198274,1204,42757577,2018-11-20 05:42:07,2018-11-20 16:33:14,closed,ENH: add renderer set_embed_options() method,"This adds a renderer method that makes it easier for the user to correctly specify options for vega-embed. Instead of, for example,
```python
alt.renderers.enable(embed_options={'renderer': 'svg', 'actions': False})
```
with this PR you can do
```
alt.renderers.set_embed_options(renderer='svg', actions=False)
```
with tab completion for the available options.",0,2,[]
381,232186371,1203,42757577,2018-11-20 04:07:51,2018-11-20 04:11:43,closed,MAINT: move all examples to top level,Addresses #1193,0,1,[]
382,231720741,1201,42757577,2018-11-17 10:40:41,2018-11-19 17:49:39,closed,DOC: fix typo in user guide,Small typo Additinoally -> Additionally,1,1,[]
383,231239179,1198,42757577,2018-11-15 15:40:18,2018-11-24 11:02:41,closed,fix data imports in the documentation in order to (partially) fix #1199 and #986,"Currently, the documentation samples are broken:
- I added a fix via calling the data directly and not via the external JSON. However, this has inferior performance if I understand it correctly.
- other solutions might be discussed in #1199

example link for the broken documentation:
https://altair-viz.github.io/user_guide/compound_charts.html
",2,2,[]
384,231073004,1197,42757577,2018-11-15 05:29:14,2018-11-15 15:13:40,closed,JOSS paper: fix multiple citation,"Commas separate an optional locator while semicolons separate distinct
references.  This is best documentation I'm aware of:

https://rmarkdown.rstudio.com/authoring_bibliographies_and_citations.html#citation_syntax

The previous formatting was incorrect:
![a](https://user-images.githubusercontent.com/3303/48532191-93da6980-e85c-11e8-90da-36a6f0ee572c.png)
",0,1,[]
385,230926791,1196,42757577,2018-11-14 17:52:53,2018-11-14 19:04:05,closed,Fix the test notebooks,"The notebooks were using an undefined `vegalite` property. The Vega-Lite 1 notebook used the v2 api. 
",6,2,[]
386,230714853,1195,42757577,2018-11-14 05:29:25,2018-11-14 15:29:59,closed,JOSS paper/bib: minor edits,"A trivial grammar fix and some mildly pedantic bib fixes. Capitalization of proper nouns in titles and `@inproceedings` `booktitle` is necessary when using pandoc-citeproc (or biber, but not classic bibtex). I also populated additional fields (some used by APA style) for [this paper](https://dl.acm.org/citation.cfm?id=3025768).",2,2,[]
387,230258553,1194,42757577,2018-11-12 20:27:05,2018-11-12 22:08:20,closed,Paper review updates,In response to https://github.com/openjournals/joss-reviews/issues/1057#issuecomment-437718892,1,2,[]
388,229159298,1192,42757577,2018-11-07 20:32:18,2018-11-07 21:34:06,closed,DOC: fix example title,Fixes #1191,0,1,[]
389,228781051,1190,42757577,2018-11-06 17:52:54,2020-03-29 15:43:42,closed,Added gitter badge.,I took the liberty of creating a gitter community for the project. IDK if people really use gitter nowadays but I've found it helpful from time to time.,7,1,[]
390,227592142,1185,42757577,2018-11-01 11:41:04,2018-11-01 22:09:24,closed,"""typing"" package apparently creates issues if installed on Python3.7+",see  https://ci.appveyor.com/project/ericpre/hyperspy-bundle/builds/19660402/job/gs9l31okjhplckur,3,1,[]
391,226288498,1182,42757577,2018-10-27 11:39:45,2018-11-12 16:31:23,closed,update troubleshooting guide for empty charts caused by adblocker,This would have helped me in this situation.,7,2,[]
392,224192682,1175,42757577,2018-10-19 07:21:53,2018-10-23 17:27:29,closed,Paper: Remove word,,0,1,[]
393,224101196,1174,42757577,2018-10-18 21:13:32,2018-10-18 23:29:37,closed,Paper: Capitalize CHI,,0,1,[]
394,223981294,1173,42757577,2018-10-18 14:34:59,2018-10-18 21:12:46,closed,Paper: Capitalization in references,,0,2,[]
395,223969400,1172,42757577,2018-10-18 14:03:44,2018-10-18 23:29:07,closed,Paper: clickable link to contributors,,0,1,[]
396,223945549,1171,42757577,2018-10-18 12:56:25,2018-10-18 13:38:53,closed,Bibtex changes to improve JOSS paper formatting,/ cc https://github.com/openjournals/joss-reviews/issues/1024#issuecomment-430900825,0,1,[]
397,223847852,1170,42757577,2018-10-18 07:14:03,2018-10-18 13:39:33,closed,Paper: add missing @,,0,1,[]
398,223779234,1169,42757577,2018-10-17 23:04:24,2018-10-18 00:36:48,closed,Paper: fix bib author format,,0,1,[]
399,223144775,1167,42757577,2018-10-16 07:40:32,2018-10-17 17:20:09,closed,Paper: Add references section,See https://github.com/openjournals/joss-reviews/issues/1024,0,1,[]
400,223063681,1166,42757577,2018-10-15 22:36:00,2018-10-17 17:19:50,closed,Paper: Capitalize title,,0,1,[]
401,222684351,1164,42757577,2018-10-14 00:15:42,2018-11-12 22:28:56,closed,DOC: Standardize the creation of compound charts in examples,"The example gallery includes a variety of different ways for layering marks on top of each other. It would be nice if they all did the same way so that n00bs don't get confused and to popularize what we think are the best practices in chart assembly.

I took a pass at the ones I could spot to try to get them all on the same page. Take a look. ",3,5,[]
402,222672262,1163,42757577,2018-10-13 19:59:26,2018-10-15 17:07:19,closed,DOC: Removed pandas and numpy imports from examples,"A number of examples are cluttered by pandas and numpy imports at the top. I have removed them. In their place you will find references to the libraries via the `alt` variable. For instance, this:

```python
import pandas as pd

source = pd.DataFrame([whatever])
```

Has been replaced by:

```python
source = alt.pd([whatever])
```

I propose this change because it seems to me that pandas and numpy usage in the examples is primarily to generate test data. For that reason, including pandas code only distracts the user from the core purpose of the example, demonstrating Altair configuration options. Therefore, the less we see of it the better. ",2,1,[]
403,222671398,1162,42757577,2018-10-13 19:42:38,2018-10-15 15:37:25,closed,DOC: Trimmed slope_graph.py example,"The method for handling the x-axis layout offered by the Slope Graph example can be improved, I think, but substituting our handy dandy shorthand. ",1,1,[]
404,222669260,1161,42757577,2018-10-13 19:05:28,2018-11-12 16:27:48,closed,DOC: Standardize data import style and variable names,"Our examples have evolved to have a number of different styles for importing and naming data from `vega_datasets`. To avoid confusion and make life easier for the n00bs, I've attempted to standardize them here.  The style I'm aiming for is:

```python
from vega_datasets import data

source = data.whatever_dataset()
```

An obvious exception are examples with multiple datasets, where I think more descriptive variable names are called for.  I didn't change those. ",8,10,[]
405,222666246,1160,42757577,2018-10-13 18:11:36,2018-10-13 18:44:41,closed,Removed datum imports from example gallery,"A handful of examples in the gallery used imports like this:

```python
from altair.expr import datum
```

I changed them to use `alt.datum` instead.

I propose this patch because I think it will reduce the number of imports newbies need to learn and enforce consistency in our examples, which is a good thing in itself. ",1,1,[]
406,222662315,1159,42757577,2018-10-13 17:02:19,2018-10-15 15:28:43,closed,DOC: Create Filled Step Chart example,"One chart variation I find myself making occasionally is a step chart with its area filled in. I've added one as an example in this patch by making a few modifications to the existing step chart example. 

![visualization](https://user-images.githubusercontent.com/9993/46907908-07d8c900-cecf-11e8-8706-1d9c4a29fa55.png)

",4,3,[]
407,221187473,1156,42757577,2018-10-08 17:14:12,2018-10-08 20:54:13,closed,allow other transformers to work when saving to other formats,"The changes the logic so that if you have registered a custom data_transformer - you will still be able to save the plot to the allowed formats (png, html etc...).

I ran into this when using gpdvega, I would get this error when saving to other formats:
```
TypeError: Object of type 'Polygon' is not JSON serializable
```

With this logic change - I can now save using another registered data_transformer.",4,3,[]
408,219167339,1149,42757577,2018-09-29 20:12:15,2018-10-01 22:47:13,closed,DOC: add sorted bar chart example,I thought an example of a sorted bar chart would be a good addition to the examples. ,2,1,[]
409,217126801,1143,42757577,2018-09-20 22:41:23,2018-09-22 14:18:26,closed,Update test_predicates to include field predicates,This should address #1140.,3,2,[]
410,215146337,1134,42757577,2018-09-13 02:22:10,2018-09-13 02:57:53,closed, add python2 support for saving a chart as png ,"simple fix to all saving png files in python 2.7 per https://github.com/altair-viz/altair/issues/994
",1,2,[]
411,214492223,1131,42757577,2018-09-11 02:06:13,,open,Example of a waterfall chart,"Inspired in the Gantt chart example I created a waterfall chart: 
![image](https://user-images.githubusercontent.com/1595942/45374070-0b6eec80-b5bf-11e8-81b4-c2a01b95e139.png)
Let me know if you think it is a relevant example.

",6,4,[]
412,213161938,1127,42757577,2018-09-05 03:49:10,2019-11-23 16:52:52,closed,ENH: add nbviewer renderer,,2,2,[]
413,212609036,1125,42757577,2018-09-02 19:59:09,2018-09-03 13:23:35,closed,Document customizing colors,"closes #268 

I wasn't sure exactly which section to put this in, let me know if it needs moved",1,1,[]
414,212311813,1123,42757577,2018-08-31 08:36:17,2018-09-04 15:54:45,closed,Refactor HTML output methods,"- adds ``alt.Chart.to_html()`` method
- adds Kaggle renderer, and refactors Colab renderer
- adds ability to specify whether html output is full or partial, as well as whether or not it uses require.js
- adds ``jinja2`` to the core requirements for better HTML templating",2,6,[]
415,211879227,1122,42757577,2018-08-29 20:35:35,,open,README to show how to edit the documentation,Unsolicited lessons learned from updating the altair documentation.,3,6,[]
416,211022685,1120,42757577,2018-08-27 07:02:45,2018-08-27 19:17:59,closed,Upgrade Python syntax with pyupgrade,https://github.com/asottile/pyupgrade is a tool to automatically upgrade syntax for newer versions of Python.,4,1,[]
417,210911822,1118,42757577,2018-08-25 17:01:11,2018-08-26 18:40:29,closed,DOC: add weather heatmap example,Added the [Annual Weather Heatmap](https://vega.github.io/vega-lite/examples/rect_heatmap_weather.html) example from the vega-lite examples page. ,3,2,[]
418,210575133,1113,42757577,2018-08-23 21:02:11,2018-08-29 20:27:28,closed,Binding documentation,"This pull request is to facilitate discussion of the binding documentation for which documentation help was requested in #1060 


this has been my approach: 

- [x] With adding input elements and bindings the page should just be called `interactions`. 
- [x] Add simple dropdown example
- [x] add an example using filter
- [x] enumerate all of the avail input elements. 
- [x] bind to  ""scales"" magic for panning and zooming
- [x] headers are all out of wack
- [x] spelling and proofread 

I am attaching a small screen recording of the two examples: 


![binding_small](https://user-images.githubusercontent.com/20745904/44551801-3370db80-a6f6-11e8-8183-f9d451a25490.gif)


Opening the PR for general feedback I don't think its ready but I need some ideas on next steps. 


",16,12,[]
419,210563701,1112,42757577,2018-08-23 20:16:30,2018-08-23 21:06:52,closed,Add link to altair slack,I'm not sure what you think is the right role of the slack channel but I thought it would be good to have the link in the readme. ,1,1,[]
420,209928477,1109,42757577,2018-08-21 19:17:22,,open,Example of a chart with named thresholds,Follow up of #1067,6,1,[]
421,209864780,1107,42757577,2018-08-21 15:23:09,2018-08-30 00:01:45,closed,Appropriately handle non-string column names,Replaces #899,1,2,[]
422,208961178,1103,42757577,2018-08-16 19:31:18,2018-08-16 20:19:43,closed,MAINT: allow user to set library versions in chart.save(),,0,1,[]
423,208745433,1100,42757577,2018-08-16 04:57:04,2018-08-16 15:42:24,closed,Add Altair ecosystem page to docs,"See #1090 for initial discussion. 

This PR is an initial draft of the **Altair Ecosystem** page. Here is an image showing what the page looks like:

<img width=""876"" alt=""ecosystem"" src=""https://user-images.githubusercontent.com/2791223/44189034-014bf200-a0d6-11e8-8fb6-17fb307b44ba.png"">

",3,1,[]
424,208696560,1097,42757577,2018-08-15 22:15:31,2018-08-16 16:45:26,closed,BUG: include schemas in package data,"Because of an oversight, ``altair/vega/v4/schema/vega-schema.json`` was not included in the version 2.2 package release. This PR fixes that, and should prevent this mistake in the future.",1,1,[]
425,208633786,1095,42757577,2018-08-15 17:54:23,2018-11-12 19:14:42,closed,WIP: Update to Vega-Lite 3.0,"~~Current blocker is the fact that VL 3.0 somewhere uses a list of schemas within an ``items`` argument for a ``type: 'array'``. This is not supported by schemapi, so the code cannot be generated.~~

~~I'm looking into the best way to fix this... it's a bit delicate because it breaks the fundamental (incorrect) assumption in schemapi that every schema argument is a dict.~~

Update: fixed it!",3,9,[]
426,208603008,1094,42757577,2018-08-15 15:50:32,2018-08-15 16:34:50,closed,DOC: fix stray admonition in altairplot sphinx extension,,0,1,[]
427,208468496,1093,42757577,2018-08-15 04:08:36,2018-08-15 15:12:07,closed,typo fix,,1,1,[]
428,208458764,1092,42757577,2018-08-15 02:33:35,2018-08-15 16:43:39,closed,BUG: preserve format and name keywords when consolidating InlineData,fixes #1091,0,1,[]
429,208168726,1089,42757577,2018-08-14 04:56:41,2018-08-14 05:00:48,closed,DOC: more clarification in the date/timezone section,,0,1,[]
430,208165788,1088,42757577,2018-08-14 04:28:38,2018-08-14 04:54:57,closed,BUG: apply embed options in sphinx altairplot directive,,0,1,[]
431,208096040,1087,42757577,2018-08-13 20:35:41,2018-08-13 21:12:03,closed,DOC: add discussion of dates & times in Altair,,1,3,[]
432,208049056,1085,42757577,2018-08-13 17:30:28,2018-08-13 17:35:50,closed,DOC: add example of href encoding,,0,1,[]
433,207720199,1082,42757577,2018-08-10 20:55:55,2018-08-10 21:06:32,closed,DOC: add SortField to sort documentation,,0,1,[]
434,207707446,1081,42757577,2018-08-10 19:53:22,2018-08-10 19:57:45,closed,DOC: add discussion of consolidate_datasets,,0,1,[]
435,207678232,1080,42757577,2018-08-10 17:40:35,2018-08-10 17:47:48,closed,DOC: add documentation of fields and encodings in selections,,0,1,[]
436,207656889,1079,42757577,2018-08-10 16:05:16,2018-08-10 17:00:01,closed,DOC: add discussion of index data,,0,2,[]
437,207599633,1078,42757577,2018-08-10 12:38:37,2018-08-10 13:51:32,closed,ADD: Trellis Area Sort Chart Example,"Example of Trellis Area Chart with sort order.

```python
import altair as alt
from altair.expr import datum
from vega_datasets import data


alt.Chart(data.stocks.url).transform_filter(
    datum.symbol != 'GOOG'
).mark_area().encode(
    x='date:T',
    y='price:Q',
    color='symbol:N',
    row=alt.Row('symbol:N', sort=['MSFT', 'AAPL', 'IBM', 'AMZN']
    )
).properties(height=50, width=400)
```
![image](https://user-images.githubusercontent.com/3757165/43958239-56d8af04-9cc8-11e8-94b5-e994eec5e9d1.png)
",1,1,[]
438,207446761,1076,42757577,2018-08-09 21:18:03,2018-08-10 13:24:11,closed,Docs regarding width of bar marks,Includes explanation and some examples as discussed in here https://github.com/altair-viz/altair/issues/1050,2,3,[]
439,207431930,1075,42757577,2018-08-09 20:20:56,2018-08-09 20:38:02,closed,BUG: fix selection predicates in filter_transform,Fixes #1072,0,2,[]
440,206524387,1069,42757577,2018-08-06 21:41:24,2018-08-10 20:10:56,closed,Documentation of Sorting Columns and Legends,"This branch adds a ""Sorting Legends and Axes"" section to the user guide. This is one of the to-dos in issue #1060  and was raised in #1059. 

The documentation adds two examples that show the various ways to sort [`ascending`,`descending`] and specifying an explicit order as well. 

![sortexample](https://user-images.githubusercontent.com/20745904/43742415-db6ff6ae-999f-11e8-82b4-0eeec7f776c5.png)

In addition, the same example is expanded adding a color legend and sorting that as well. hope this helps. 

I will try to grab one of the other to-dos in #1060 as well. ",9,3,[]
441,205839830,1066,42757577,2018-08-02 19:38:29,2018-08-03 02:09:18,closed,MAINT: make doc build work without selenium,,0,1,[]
442,205245535,1063,42757577,2018-07-31 21:19:24,2018-08-02 04:17:54,closed,DOC: use autosummary to clean up API docs,"The API.html file was becoming quite large (3.8MB in master). This PR uses sphinx autosummary to split the API docs between multiple files, with a nice table summary in the index.",1,6,[]
443,205245061,1062,42757577,2018-07-31 21:17:42,2018-07-31 21:55:39,closed,DOC: add documentation of internal details + some doc cleanup,,0,5,[]
444,204875481,1058,42757577,2018-07-30 17:29:03,2018-07-30 17:48:17,closed,DOC: document inherited members in API.rst,Fixes #1056,0,1,[]
445,204594536,1053,42757577,2018-07-28 14:05:45,2018-07-28 18:19:56,closed,Use ISO format for dates to prevent timezone issues,"Fixes #1027 

@palewire – please confirm that this fixes your issue! I've run your example from #1027 with this change, and it seems to be working as expected:
```python
import pandas as pd
import altair as alt
df = pd.read_json(""https://raw.githubusercontent.com/datadesk/cpi/master/notebooks/last_13.json"", dtype={""date_label"": pd.np.datetime64})

alt.Chart(df).mark_bar().encode(
    x=alt.X(""date:O"", timeUnit=""yearmonth"", axis=alt.Axis(format=""%b %y"")),
    y=""pct_change_rounded:Q""
)
```
![visualization 28](https://user-images.githubusercontent.com/781659/43357325-8d4f5a5e-9234-11e8-9742-0188555447da.png)
",30,1,[]
446,204221235,1046,42757577,2018-07-26 18:00:31,2018-07-26 18:12:49,closed,Enable dataset consolidation by default,Addresses #981,1,2,[]
447,203029624,1037,42757577,2018-07-21 22:25:14,2018-07-25 15:42:49,closed,doc format  #935 ,"fix #935 doc format
*  **Key issues**
   1. Rich link format in vega-lite schema descriptions 
    2. Multiple paragraphs and list items in description 
*  **Affected components**
   1. `.. altair-object-table::` directive
   2.  API Reference generated from schema wrappers docstrings
*  **Results**
   1.  see it on [my temporal fork](https://iliatimofeev.github.io/altair-viz.github.io/) 
   2.  images
## Key issues
Schema descriptions have rich `markdown` format that difficult to translate into `rst` format of `Altair` documentation. 
#### 1. Rich link format in vega-lite schema descriptions 
According to vega-lite contributing guidelines
~~~markdown
- Wrap properties (`key`) with back ticks.
- Wrap values with back ticks for numbers and booleans (e.g., `5`, `true`) 
and wrap string values with both back ticks and double quotes (`""red""`).
~~~
I count not find any reStructuredText syntax to express that  formatting in link declaration.  

#### 2. Multiple paragraphs and list items in description 
From vega-lite [scale.html#range](https://vega.github.io/vega-lite/docs/scale.html#range)
![image](https://user-images.githubusercontent.com/11561581/43041014-ce6101fa-8d5c-11e8-8856-9ab6da311199.png)


## Affected components

#### 1. `.. altair-object-table::` directive 
Generates tables from descriptions in user guide part of documentation. Updated in https://github.com/altair-viz/altair/pull/1037/commits/1157b7e329162265a10978006c5ee31feee9f47b

New version generates tables directly as `docutils.nodes` tree and uses recommended by `Sphinx` `recommonmark` parser for description string parsing.
#### 2.  API Reference generated from schema wrappers docstrings
`SchemaGenerator` and `CodeSnippet` and `indent_docstring` generates docstrings from schema descriptions. Updated in https://github.com/altair-viz/altair/pull/1037/commits/d302c374402c81d4b79d837455ba0a25492ca180
New version removes incompatible formatting from link definitions. Splits description strings into lines and preserves correct indentation for lists while wrapping text into docstring.    
## Results
Tested and build with 
~~~
Sphinx 1.7.5 
sphinx-rtd-theme 0.4.0
recommonmark 0.4.0
~~~

#### New `altair-object-table`
from [encoding.html#encoding-channel-options](https://iliatimofeev.github.io/altair-viz.github.io/user_guide/encoding.html#encoding-channel-options)
![image](https://user-images.githubusercontent.com/11561581/43040848-9f9bb496-8d57-11e8-9c6d-b0e09add6c6a.png)
#### New API Reference 
from [API.html#altair.LayerChart](https://altair-viz.github.io/user_guide/API.html#altair.LayerChart)
![image](https://user-images.githubusercontent.com/11561581/43040860-4a486470-8d58-11e8-9252-75c5733be8c4.png) **Note:** `Sphinx 1.7.5` do not show table of attributes (it is a table but  css settings from template hides it) I've tested it with simple docstrings it always looks this way.




",6,16,[]
448,202221696,1031,42757577,2018-07-18 11:27:23,2018-07-18 14:42:28,closed,CLN: Fix typo in user guide doc,,1,1,[]
449,201949569,1028,42757577,2018-07-17 13:54:19,2018-07-17 14:41:12,closed,CLN: Fix typos from docs,,1,2,[]
450,201772199,1026,42757577,2018-07-16 22:00:40,2018-07-17 14:43:08,closed,DOC: Standardized stacked bar examples,"I've standardized three of the stacked bar chart examples so they use the same the dataset and similar, stripped down configurations. I believe this will make it easier for beginners to grok. ",1,1,[]
451,201771421,1025,42757577,2018-07-16 21:56:46,2018-07-26 14:57:37,closed,feat(save): Change save to work offline,"Does this by saving the appropriate *.js to a js folder when the schema
is generated. Packages these with pip to enable there use locally.

It might be better to get these sources from an already installed dependency as @jakevdp suggested but I haven't figured that out yet.

Addresses #1023 ",4,1,[]
452,201465206,1020,42757577,2018-07-14 19:14:54,2018-07-16 15:30:24,closed,REF: stem and leaf example with better pandas,"Larges two changes to stem and leaf plot example

- Compact random data construction, stem and leaf using string methods
- Use pandas cumcount instead of apply",1,1,[]
453,201440689,1019,42757577,2018-07-14 07:34:07,2018-08-14 18:32:29,closed,DOC: Use relative links for images,"Earlier image links were talking `/`  root path. This pull request changes it to use relative URLs, making the docs work locally, or as under subdirectory of a website as well.",3,1,[]
454,201084193,1017,42757577,2018-07-12 18:16:52,2018-07-13 18:13:22,closed,ADD: Isotype visualization example,"Isotype Visualization example. Credits to @chanwutk vega-lite reference.

![image](https://user-images.githubusercontent.com/3757165/42651692-c19a3f4e-862d-11e8-910b-0824a9f44686.png)

```python
df =  pd.DataFrame([
      {'country': 'Great Britain', 'animal': 'cattle', 'col': 3},
      {'country': 'Great Britain', 'animal': 'cattle', 'col': 2},
      {'country': 'Great Britain', 'animal': 'cattle', 'col': 1},
      {'country': 'Great Britain', 'animal': 'pigs', 'col': 2},
      {'country': 'Great Britain', 'animal': 'pigs', 'col': 1},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 10},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 9},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 8},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 7},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 6},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 5},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 4},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 3},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 2},
      {'country': 'Great Britain', 'animal': 'sheep', 'col': 1},
      {'country': 'United States', 'animal': 'cattle', 'col': 9},
      {'country': 'United States', 'animal': 'cattle', 'col': 8},
      {'country': 'United States', 'animal': 'cattle', 'col': 7},
      {'country': 'United States', 'animal': 'cattle', 'col': 6},
      {'country': 'United States', 'animal': 'cattle', 'col': 5},
      {'country': 'United States', 'animal': 'cattle', 'col': 4},
      {'country': 'United States', 'animal': 'cattle', 'col': 3},
      {'country': 'United States', 'animal': 'cattle', 'col': 2},
      {'country': 'United States', 'animal': 'cattle', 'col': 1},
      {'country': 'United States', 'animal': 'pigs', 'col': 6},
      {'country': 'United States', 'animal': 'pigs', 'col': 5},
      {'country': 'United States', 'animal': 'pigs', 'col': 4},
      {'country': 'United States', 'animal': 'pigs', 'col': 3},
      {'country': 'United States', 'animal': 'pigs', 'col': 2},
      {'country': 'United States', 'animal': 'pigs', 'col': 1},
      {'country': 'United States', 'animal': 'sheep', 'col': 7},
      {'country': 'United States', 'animal': 'sheep', 'col': 6},
      {'country': 'United States', 'animal': 'sheep', 'col': 5},
      {'country': 'United States', 'animal': 'sheep', 'col': 4},
      {'country': 'United States', 'animal': 'sheep', 'col': 3},
      {'country': 'United States', 'animal': 'sheep', 'col': 2},
      {'country': 'United States', 'animal': 'sheep', 'col': 1}
    ])

domains = ['person', 'cattle', 'pigs', 'sheep']

shape_scale = alt.Scale(
    domain=domains,
    range=[
        'M1.7 -1.7h-0.8c0.3 -0.2 0.6 -0.5 0.6 -0.9c0 -0.6 -0.4 -1 -1 -1c-0.6 0 -1 0.4 -1 1c0 0.4 0.2 0.7 0.6 0.9h-0.8c-0.4 0 -0.7 0.3 -0.7 0.6v1.9c0 0.3 0.3 0.6 0.6 0.6h0.2c0 0 0 0.1 0 0.1v1.9c0 0.3 0.2 0.6 0.3 0.6h1.3c0.2 0 0.3 -0.3 0.3 -0.6v-1.8c0 0 0 -0.1 0 -0.1h0.2c0.3 0 0.6 -0.3 0.6 -0.6v-2c0.2 -0.3 -0.1 -0.6 -0.4 -0.6z',
        'M4 -2c0 0 0.9 -0.7 1.1 -0.8c0.1 -0.1 -0.1 0.5 -0.3 0.7c-0.2 0.2 1.1 1.1 1.1 1.2c0 0.2 -0.2 0.8 -0.4 0.7c-0.1 0 -0.8 -0.3 -1.3 -0.2c-0.5 0.1 -1.3 1.6 -1.5 2c-0.3 0.4 -0.6 0.4 -0.6 0.4c0 0.1 0.3 1.7 0.4 1.8c0.1 0.1 -0.4 0.1 -0.5 0c0 0 -0.6 -1.9 -0.6 -1.9c-0.1 0 -0.3 -0.1 -0.3 -0.1c0 0.1 -0.5 1.4 -0.4 1.6c0.1 0.2 0.1 0.3 0.1 0.3c0 0 -0.4 0 -0.4 0c0 0 -0.2 -0.1 -0.1 -0.3c0 -0.2 0.3 -1.7 0.3 -1.7c0 0 -2.8 -0.9 -2.9 -0.8c-0.2 0.1 -0.4 0.6 -0.4 1c0 0.4 0.5 1.9 0.5 1.9l-0.5 0l-0.6 -2l0 -0.6c0 0 -1 0.8 -1 1c0 0.2 -0.2 1.3 -0.2 1.3c0 0 0.3 0.3 0.2 0.3c0 0 -0.5 0 -0.5 0c0 0 -0.2 -0.2 -0.1 -0.4c0 -0.1 0.2 -1.6 0.2 -1.6c0 0 0.5 -0.4 0.5 -0.5c0 -0.1 0 -2.7 -0.2 -2.7c-0.1 0 -0.4 2 -0.4 2c0 0 0 0.2 -0.2 0.5c-0.1 0.4 -0.2 1.1 -0.2 1.1c0 0 -0.2 -0.1 -0.2 -0.2c0 -0.1 -0.1 -0.7 0 -0.7c0.1 -0.1 0.3 -0.8 0.4 -1.4c0 -0.6 0.2 -1.3 0.4 -1.5c0.1 -0.2 0.6 -0.4 0.6 -0.4z',
        'M1.2 -2c0 0 0.7 0 1.2 0.5c0.5 0.5 0.4 0.6 0.5 0.6c0.1 0 0.7 0 0.8 0.1c0.1 0 0.2 0.2 0.2 0.2c0 0 -0.6 0.2 -0.6 0.3c0 0.1 0.4 0.9 0.6 0.9c0.1 0 0.6 0 0.6 0.1c0 0.1 0 0.7 -0.1 0.7c-0.1 0 -1.2 0.4 -1.5 0.5c-0.3 0.1 -1.1 0.5 -1.1 0.7c-0.1 0.2 0.4 1.2 0.4 1.2l-0.4 0c0 0 -0.4 -0.8 -0.4 -0.9c0 -0.1 -0.1 -0.3 -0.1 -0.3l-0.2 0l-0.5 1.3l-0.4 0c0 0 -0.1 -0.4 0 -0.6c0.1 -0.1 0.3 -0.6 0.3 -0.7c0 0 -0.8 0 -1.5 -0.1c-0.7 -0.1 -1.2 -0.3 -1.2 -0.2c0 0.1 -0.4 0.6 -0.5 0.6c0 0 0.3 0.9 0.3 0.9l-0.4 0c0 0 -0.4 -0.5 -0.4 -0.6c0 -0.1 -0.2 -0.6 -0.2 -0.5c0 0 -0.4 0.4 -0.6 0.4c-0.2 0.1 -0.4 0.1 -0.4 0.1c0 0 -0.1 0.6 -0.1 0.6l-0.5 0l0 -1c0 0 0.5 -0.4 0.5 -0.5c0 -0.1 -0.7 -1.2 -0.6 -1.4c0.1 -0.1 0.1 -1.1 0.1 -1.1c0 0 -0.2 0.1 -0.2 0.1c0 0 0 0.9 0 1c0 0.1 -0.2 0.3 -0.3 0.3c-0.1 0 0 -0.5 0 -0.9c0 -0.4 0 -0.4 0.2 -0.6c0.2 -0.2 0.6 -0.3 0.8 -0.8c0.3 -0.5 1 -0.6 1 -0.6z',
        'M-4.1 -0.5c0.2 0 0.2 0.2 0.5 0.2c0.3 0 0.3 -0.2 0.5 -0.2c0.2 0 0.2 0.2 0.4 0.2c0.2 0 0.2 -0.2 0.5 -0.2c0.2 0 0.2 0.2 0.4 0.2c0.2 0 0.2 -0.2 0.4 -0.2c0.1 0 0.2 0.2 0.4 0.1c0.2 0 0.2 -0.2 0.4 -0.3c0.1 0 0.1 -0.1 0.4 0c0.3 0 0.3 -0.4 0.6 -0.4c0.3 0 0.6 -0.3 0.7 -0.2c0.1 0.1 1.4 1 1.3 1.4c-0.1 0.4 -0.3 0.3 -0.4 0.3c-0.1 0 -0.5 -0.4 -0.7 -0.2c-0.3 0.2 -0.1 0.4 -0.2 0.6c-0.1 0.1 -0.2 0.2 -0.3 0.4c0 0.2 0.1 0.3 0 0.5c-0.1 0.2 -0.3 0.2 -0.3 0.5c0 0.3 -0.2 0.3 -0.3 0.6c-0.1 0.2 0 0.3 -0.1 0.5c-0.1 0.2 -0.1 0.2 -0.2 0.3c-0.1 0.1 0.3 1.1 0.3 1.1l-0.3 0c0 0 -0.3 -0.9 -0.3 -1c0 -0.1 -0.1 -0.2 -0.3 -0.2c-0.2 0 -0.3 0.1 -0.4 0.4c0 0.3 -0.2 0.8 -0.2 0.8l-0.3 0l0.3 -1c0 0 0.1 -0.6 -0.2 -0.5c-0.3 0.1 -0.2 -0.1 -0.4 -0.1c-0.2 -0.1 -0.3 0.1 -0.4 0c-0.2 -0.1 -0.3 0.1 -0.5 0c-0.2 -0.1 -0.1 0 -0.3 0.3c-0.2 0.3 -0.4 0.3 -0.4 0.3l0.2 1.1l-0.3 0l-0.2 -1.1c0 0 -0.4 -0.6 -0.5 -0.4c-0.1 0.3 -0.1 0.4 -0.3 0.4c-0.1 -0.1 -0.2 1.1 -0.2 1.1l-0.3 0l0.2 -1.1c0 0 -0.3 -0.1 -0.3 -0.5c0 -0.3 0.1 -0.5 0.1 -0.7c0.1 -0.2 -0.1 -1 -0.2 -1.1c-0.1 -0.2 -0.2 -0.8 -0.2 -0.8c0 0 -0.1 -0.5 0.4 -0.8z'
    ]
)

color_scale = alt.Scale(
    domain=domains,
    range=['rgb(162,160,152)', 'rgb(194,81,64)', 'rgb(93,93,93)', 'rgb(91,131,149)']
)

alt.Chart(df).mark_point(filled=True).encode(
    alt.X('col:O', axis=None),
    alt.Y('animal:O', axis=None),
    alt.Row('country:N', header=alt.Header(title='')),
    alt.Shape('animal:N', legend=None, scale=shape_scale),
    alt.Color('animal:N', legend=None, scale=color_scale),
    alt.OpacityValue(1),
    alt.SizeValue(200)
).properties(width=800, height=200)
```",6,2,[]
455,200525376,1011,42757577,2018-07-10 21:13:39,2018-07-10 21:49:47,closed,ADD: Population pyramid example,"Adds https://vega.github.io/vega/examples/population-pyramid/ example.

```python
'''
US Population Pyramid Over Time
===============================
A population pyramid shows the distribution of age groups within a population.
It uses a slider widget that is bound to the year to visualize the age
distribution over time.
'''
# category: case studies
import altair as alt
from altair.expr import datum, if_
from vega_datasets import data

pop = data.population.url

slider = alt.binding_range(min=1850, max=2000, step=10)
select_year = alt.selection_single(name='year', fields=['year'], bind=slider)

base = alt.Chart(pop).add_selection(
    select_year
).transform_filter(
    select_year
).transform_calculate(
    gender=if_(datum.sex == 1, 'Male', 'Female')
)

title = alt.Axis(title='population')
color_scale = alt.Scale(domain=['Male', 'Female'],
                        range=['#1f77b4', '#e377c2'])

left = base.transform_filter(
    datum.gender == 'Female'
).encode(
    y=alt.X('age:O', axis=None),
    x=alt.X('sum(people):Q', axis=title, sort=alt.SortOrder('descending')),
    color=alt.Color('gender:N', scale=color_scale, legend=None)
).mark_bar().properties(title='Female')

middle = base.encode(
    y=alt.X('age:O', axis=None),
    text=alt.Text('age:Q'),
).mark_text().properties(width=20)

right = base.transform_filter(
    datum.gender == 'Male'
).encode(
    y=alt.X('age:O', axis=None),
    x=alt.X('sum(people):Q', axis=title),
    color=alt.Color('gender:N', scale=color_scale, legend=None)
).mark_bar().properties(title='Male')

left | middle | right
```

![image](https://user-images.githubusercontent.com/3757165/42537971-18549b02-84b4-11e8-8f2f-486c5ff72fd0.png)
",1,1,[]
456,200367545,1009,42757577,2018-07-10 11:40:36,2018-07-11 16:52:36,closed,DOC: Example of hiding the border using configure_view.,"For #976.

This is beyond the scope of this patch, but I noticed that the automatically generated documentation for `configure_view` is a little confusing.

It describes the default of `strokeOpacity` as ""The stroke opacity (value between [0,1]).  Default value: (none)."" But an unconfigured chart does has a stroke. So how can the default be None?",5,2,[]
457,200167517,1008,42757577,2018-07-09 17:23:41,2018-08-27 15:31:13,closed,MAINT: add Python 3.7 support; remove Python 3.4 support,,8,2,[]
458,199579203,1004,42757577,2018-07-05 20:29:19,2018-07-05 20:34:26,closed,DOC: add top-k example,Window transform / rank example,0,1,[]
459,199565678,1003,42757577,2018-07-05 19:28:53,2018-07-05 20:29:36,closed,ENH: add vega v4 wrappers,,0,2,[]
460,198846908,992,42757577,2018-07-03 04:28:49,2018-07-03 04:40:43,closed,MAINT: update vega-lite to version 2.6.0,Update vega-lite and auto-generated wrappers.,1,1,[]
461,198549456,989,42757577,2018-07-01 23:50:30,2018-07-02 03:21:57,closed,Doc fix,fixes #988,3,6,[]
462,198028640,983,42757577,2018-06-28 13:23:04,2018-06-28 14:42:57,closed,docs: fix chart not displaying and delete mention of field * in Seattle case study,"- changing 'month(date:T)' to 'month(date):T'
- deleting mention of special field *",1,1,[]
463,197881862,982,42757577,2018-06-27 23:42:31,2018-06-27 23:45:21,closed,MAINT: avoid selenium import when altair is imported,Fixes #979,0,1,[]
464,197838997,980,42757577,2018-06-27 20:07:26,2018-06-27 20:14:14,closed,MAINT: remove unused utility code,,0,1,[]
465,197441782,974,42757577,2018-06-26 14:25:09,2018-06-26 17:20:06,closed,Add more informative error for timedelta data,Fixes #967,0,1,[]
466,197148457,970,42757577,2018-06-25 15:19:27,2018-06-26 13:48:18,closed,markdown style links in the examples are changed to rst links.,Markdown links are not properly rendered in the gallery (e.g. https://altair-viz.github.io/gallery/cumulative_wiki_donations.html). Also includes a minor typo fix. ,1,1,[]
467,196575797,957,42757577,2018-06-21 21:06:57,2018-06-22 17:27:13,closed,ENH: add shorthand syntax for window transforms,"This adds a keyword-based syntax for expressing window transforms.

New syntax:

```python
import altair as alt
import pandas as pd

activities = pd.DataFrame({'Activity': ['Sleeping', 'Eating', 'TV', 'Work', 'Exercise'],
                           'Time': [8, 2, 4, 8, 2]})

alt.Chart(activities).mark_bar().encode(
    alt.X('PercentOfTotal:Q', axis=alt.Axis(format='.0%')),
    y='Activity:N'
).transform_window(
    TotalTime='sum(Time)',
    frame=[None, None]
).transform_calculate(
    PercentOfTotal=""datum.Time / datum.TotalTime""
)
```
![visualization 16](https://user-images.githubusercontent.com/781659/41745603-52cc3a86-755c-11e8-9acb-8456b9ae0cb5.png)

Compare this with the previous syntax (which still is valid even after this change):
```python
import altair as alt
import pandas as pd

activities = pd.DataFrame({'Activity': ['Sleeping', 'Eating', 'TV', 'Work', 'Exercise'],
                           'Time': [8, 2, 4, 8, 2]})

alt.Chart(activities).transform_window(
    window=[alt.WindowFieldDef(op='sum', field='Time', **{'as': 'TotalTime'})],
    frame=[None, None]
).transform_calculate(
    PercentOfTotal=""datum.Time / datum.TotalTime""
).mark_bar().encode(
    x='PercentOfTotal:Q',
    y='Activity:N'
)
```",1,6,[]
468,196017082,952,42757577,2018-06-20 04:08:54,2018-06-20 04:14:08,closed,MAINT: add helpful error message for vegascope renderer,Adds a warning if people try to enable the ``vegascope`` renderer without the [vegascope](https://github.com/diana-hep/vegascope) package installed.,0,1,[]
469,196017007,951,42757577,2018-06-20 04:08:02,2018-06-27 20:16:53,closed,Toplevel datasets,"With this change, you can run:
```
alt.data_transformers.enable(consolidate_datasets=True)
```
and then in all rendered charts, inline data will be replaced with named data and added to the top-level ``datasets`` attribute. This automatically assigns the name to any identical datasets.

This addresses the issue that typical usage patterns end up embedding multiple copies of the dataset within compound charts. I think that this consolidation behavior should probably be the default, but I'd like to get it in as an option to start with.

As an example, consider the following chart, using a standard concatenation pattern:
```python
import altair as alt
import pandas as pd

data = pd.DataFrame({
    'a': ['A', 'B', 'C', 'D', 'E', 'F', 'G', 'H', 'I'],
    'b': [28, 55, 43, 91, 81, 53, 19, 87, 52],
    'c': [43, 91, 81, 53, 19, 87, 52, 28, 55]
})

base = alt.Chart(data).mark_bar().encode(
    y='a'
).properties(width=200)

chart = base.encode(x='b') | base.encode(x='c')
chart
```
![visualization 13](https://user-images.githubusercontent.com/781659/41666809-3a6d8c62-7460-11e8-9567-c51c6aed53a6.png)

If we look at the spec produced by the chart, we see that this causes the dataset to be duplicated between the two charts:
```python
>>> chart.to_dict()
{'$schema': 'https://vega.github.io/schema/vega-lite/v2.5.2.json',
 'config': {'view': {'height': 300, 'width': 400}},
 'hconcat': [{'data': {'values': [{'a': 'A', 'b': 28, 'c': 43},
     {'a': 'B', 'b': 55, 'c': 91},
     {'a': 'C', 'b': 43, 'c': 81},
     {'a': 'D', 'b': 91, 'c': 53},
     {'a': 'E', 'b': 81, 'c': 19},
     {'a': 'F', 'b': 53, 'c': 87},
     {'a': 'G', 'b': 19, 'c': 52},
     {'a': 'H', 'b': 87, 'c': 28},
     {'a': 'I', 'b': 52, 'c': 55}]},
   'encoding': {'x': {'field': 'b', 'type': 'quantitative'},
    'y': {'field': 'a', 'type': 'nominal'}},
   'mark': 'bar',
   'width': 200},
  {'data': {'values': [{'a': 'A', 'b': 28, 'c': 43},
     {'a': 'B', 'b': 55, 'c': 91},
     {'a': 'C', 'b': 43, 'c': 81},
     {'a': 'D', 'b': 91, 'c': 53},
     {'a': 'E', 'b': 81, 'c': 19},
     {'a': 'F', 'b': 53, 'c': 87},
     {'a': 'G', 'b': 19, 'c': 52},
     {'a': 'H', 'b': 87, 'c': 28},
     {'a': 'I', 'b': 52, 'c': 55}]},
   'encoding': {'x': {'field': 'c', 'type': 'quantitative'},
    'y': {'field': 'a', 'type': 'nominal'}},
   'mark': 'bar',
   'width': 200}]}
```
This is not a big problem for small datasets, but with large datasets and charts with many layers or panels, this can lead to unnecessarily large specs.

Within the mechanism in this PR, you can do the following:
```python
>>> alt.data_transformers.enable(consolidate_datasets=True)
>>> chart.to_dict()
{'$schema': 'https://vega.github.io/schema/vega-lite/v2.5.2.json',
 'config': {'view': {'height': 300, 'width': 400}},
 'datasets': {'data-ee7f01090b9e4fcef2554f6712660b80': [
   {'a': 'A', 'b': 28, 'c': 43},
   {'a': 'B', 'b': 55, 'c': 91},
   {'a': 'C', 'b': 43, 'c': 81},
   {'a': 'D', 'b': 91, 'c': 53},
   {'a': 'E', 'b': 81, 'c': 19},
   {'a': 'F', 'b': 53, 'c': 87},
   {'a': 'G', 'b': 19, 'c': 52},
   {'a': 'H', 'b': 87, 'c': 28},
   {'a': 'I', 'b': 52, 'c': 55}]},
 'hconcat': [{'data': {'name': 'data-ee7f01090b9e4fcef2554f6712660b80'},
   'encoding': {'x': {'field': 'b', 'type': 'quantitative'},
    'y': {'field': 'a', 'type': 'nominal'}},
   'mark': 'bar',
   'width': 200},
  {'data': {'name': 'data-ee7f01090b9e4fcef2554f6712660b80'},
   'encoding': {'x': {'field': 'c', 'type': 'quantitative'},
    'y': {'field': 'a', 'type': 'nominal'}},
   'mark': 'bar',
   'width': 200}]}
```
Notice that the data in each subchart is replaced by a named reference to a single dataset at the top level. This should all be transparent to the user, but result in more efficient chart specifications.

The only reason I hesitate in making this the default is that I'm worried there may be corner cases I'm not thinking about where this would break a working chart.",5,2,[]
470,194308273,942,42757577,2018-06-12 14:53:11,2018-06-12 15:10:50,closed, BUG: fix handling of categoricals,"Previously all categoricals were converted to strings.

Now the data type is respected, and null values are appropriately handled.",0,1,[]
471,194151020,941,42757577,2018-06-12 02:32:41,2018-06-12 04:17:32,closed,Do not convert categoricals to strings,"Related with #940 as I explore a way to solve the columnar sorting...

https://github.com/pandas-dev/pandas/issues/10778 is fixed upstream now",5,1,[]
472,194130108,939,42757577,2018-06-11 23:31:01,2018-06-12 16:26:13,closed,Longer webdriver timeout,Allows altair to not time out on less responsive development computers (like my slow laptop). Addresses Issue #929 ,2,2,[]
473,193786781,928,42757577,2018-06-09 16:56:16,2018-06-09 20:18:10,closed,Fix tz datetime,"fix #926

tests
+test_sanitize_dataframe()
+test_parse_shorthand_with_data()
code
sanitize_dataframe() -just reorder ifs",4,5,[]
474,193718973,925,42757577,2018-06-08 20:44:13,2018-06-10 02:48:44,closed,ENH: allow renderer options to be set in chart.display(),Fixes #922,0,2,['enhancement']
475,193435983,923,42757577,2018-06-07 20:19:00,2018-06-12 15:13:12,closed,WIP: update Vega-Lite to version 2.5,"A few tasks before merging

- [ ] ~wrap new field predicates~ (actually, field predicates are not wrapped at the moment; see #695)
- [x] handle ``.dsv`` data format
- [ ] deal with ``SortField`` backward incompatibility somehow?
- [x] update docs on above features",4,3,['maintenance']
476,193052573,918,42757577,2018-06-06 15:26:39,2018-06-06 16:32:30,closed,ENH: add scale_factor argument to chart.save(),Fixes #917,2,3,[]
477,191908829,915,42757577,2018-06-01 00:48:46,2018-06-01 18:09:13,closed,Use ISO 8061 dates,Fixes #910,3,1,[]
478,191242763,905,42757577,2018-05-29 19:12:04,2018-05-29 22:39:33,closed,DOC: update Colab info to reflect Altair being available by default,,0,1,[]
479,190997659,903,42757577,2018-05-28 21:17:00,2018-05-30 14:45:29,closed,Reorganized complex examples into a new case studies section,As proposed in #883,7,1,[]
480,190481901,900,42757577,2018-05-25 04:57:43,2018-05-25 05:13:12,closed,DOC: add documentation of themes,Addresses #840 ,0,1,[]
481,190355817,899,42757577,2018-05-24 16:54:02,2018-08-21 15:23:45,closed,BUG: appropriately handle non-string column/field names:,"Both the names of data columns, and the field names that reference them, must be strings within Altair. This more cleanly addresses the case when someone passes a dataframe with non-string column names or fields that are not strings.

- in ``parse_shorthand``, raise an informative error if the column is not a string or dict
- in ``sanitize_dataframe``, convert non-string column names to strings

Fixes #898",10,1,[]
482,190128313,897,42757577,2018-05-23 23:02:49,2018-05-23 23:13:44,closed,BUG: convert inf to null in dataframe sanitization,"JSON has no concept of infinity, so this is the best option to avoid breaking the data stream.

Currently, if dataframes contain infinities, it will result in blank charts.

After this change, the infinities will be treated as missing values.",1,1,[]
483,190065012,896,42757577,2018-05-23 18:26:09,2018-05-23 19:34:32,closed,DOC: Timeunit examples,"Fixes #885

TODO:

- [x] fix all examples
- [x] fix weather case study",0,3,[]
484,190062154,895,42757577,2018-05-23 18:14:30,2018-05-23 18:26:32,closed,ENH: make data the first argument of all chart objects,"Fixes #816 

This contains a backward incompatibility for anyone using the compound chart classes directly (e.g. ``FacetChart``, ``RepeatChart``) but none of our examples or documentation show this or recommend it.

The advantage is that it regularizes the API, and makes it easier to construct compound charts with data at the top level.",0,1,[]
485,190057905,894,42757577,2018-05-23 17:58:06,2018-05-23 18:11:32,closed,DOC: add section on layer ordering,Addresses #677,0,2,[]
486,190051299,893,42757577,2018-05-23 17:32:28,2018-05-23 17:40:01,closed,DOC: add simple multi-tooltip scatter example,,0,1,[]
487,190051257,892,42757577,2018-05-23 17:32:19,2018-05-23 17:39:30,closed,MAINT: update vega-embed version in display,,0,1,[]
488,189805275,887,42757577,2018-05-22 22:02:57,2020-03-29 15:43:55,closed,Run data transformers on all inputs types,"This closes #843 by running the data transformers on all inputs types.

This will allow users to specify transformations for custom input types, like Ibis expressions. 

It changes the existing transformations to just raise a warning if they are called on types they can't handle, instead of raising an exception.",16,7,[]
489,189519564,881,42757577,2018-05-22 00:22:41,2018-05-22 14:48:51,closed,DOC: Added simple highlighted bar chart example,"I got a question today from a journalism colleague. His question: How can I quickly pick a column in a bar chart for highlighting?

Here's a method I developed that I propose for the example gallery. I don't know if this is the pattern you'd prefer to popularize, but it worked well for me today.

![visualization 32](https://user-images.githubusercontent.com/9993/40335980-9002ca0e-5d1b-11e8-84c0-11be2326d46e.png)


```python
import altair as alt
from vega_datasets import data

population = data.population()

alt.Chart(population).mark_bar().transform_calculate(
    # Using a simple boolean test to calculate a new column on the fly
    # allows the chart creator to decide which bar they'd like to highlight.
    ""highlight"",
    alt.datum.year == 2000
).encode(
    x=""year:O"",
    y=""sum(people):Q"",
    # The highlight is then applied by using the calculated column
    # to set the color.
    color=""highlight:N""
)
```",7,4,[]
490,189415374,877,42757577,2018-05-21 15:42:27,2018-05-21 21:26:24,closed,DOC: Add line chart with markers example,"Added a simple example of a line chart with markers discussed in #876 

I can also update 

- [Connected Scatterplot (Lines with Custom Paths)](https://altair-viz.github.io/gallery/connected_scatterplot.html)

- [Multiple Marks](https://altair-viz.github.io/gallery/multiple_marks.html)

if you think using `mark_line(point=True)` is preferred to the layering method.",6,5,[]
491,189128819,872,42757577,2018-05-18 20:35:55,2018-06-12 16:19:46,closed,ENH: make vega_datasets accessible from alt.datasets,"Addresses #796

This makes the contents of ``vega_datasets`` available from Altair via ``alt.datasets``. So, for example, you can do:
```python
import altair as alt
cars = alt.datasets.cars()
alt.Chart(cars).mark_point()
```

If the vega_datasets package is not installed,  an error will be raised when you try to access a dataset, but not when you import the ``alt.datasets`` object (which is present in the main namespace)
```pytb
In [1]: from altair import datasets
In [2]: datasets.cars()
---------------------------------------------------------------------------
ImportError                               Traceback (most recent call last)
<ipython-input-2-a4a02b6877f0> in <module>()
----> 1 datasets.cars()

~/github/altair-viz/altair/altair/_datasets.py in __getattr__(self, attr)
     21 
     22     def __getattr__(self, attr):
---> 23         raise ImportError(ERR_MESSAGE)
     24 
     25 

ImportError: 
The vega_datasets package must be installed in order to use altair.datasets.
See http://github.com/altair-viz/vega_datasets/ for information.
```",8,5,[]
492,189097231,870,42757577,2018-05-18 18:08:04,2018-05-18 18:15:28,closed,DOC: fix error in generated RST code,,0,1,[]
493,189090137,869,42757577,2018-05-18 17:34:45,2018-05-18 19:10:51,closed,DOC: add parallel coordinates example,"This adds an example of a  parallel coordinates chart:

```python
import altair as alt
from vega_datasets import data

iris = data.iris()
iris_transformed = iris.reset_index().melt(['species', 'index'])

alt.Chart(iris_transformed).mark_line().encode(
    x='variable:N',
    y='value:Q',
    color='species:N',
    detail='index:N',
    opacity=alt.value(0.5)
).properties(width=500)
```
![visualization 4](https://user-images.githubusercontent.com/781659/40249187-0d2415d4-5a87-11e8-9d16-05efbf09e075.png)

",0,1,[]
494,189065030,868,42757577,2018-05-18 15:44:28,2018-05-18 15:57:18,closed,DOC: add info about chart.serve() to the docs,This addresses a question that's come up multiple times in recent weeks.,0,1,[]
495,188867613,866,42757577,2018-05-17 21:34:13,2018-05-22 01:26:07,closed,ENH: parse timeUnits in encoding shorthands,"Addresses #849 (cc/ @kanitw)

This changes the ``parse_shorthand`` utility so that it parses timeUnits as well as aggregates.

This allows compact expressions of time-binned encodings; e.g.
```python
import altair as alt
from vega_datasets import data

alt.Chart(data.seattle_weather.url).mark_rect().encode(
    x='date(date):O',
    y='month(date):O',
    color='max(temp_max):Q'
)
```
![visualization 2](https://user-images.githubusercontent.com/781659/40204974-3388afbc-59df-11e8-84b8-fa54063e6d7e.png)

The old way of specifying this (which does still work) is:
```python
alt.Chart(data.seattle_weather.url).mark_rect().encode(
    x=alt.X('date:O', timeUnit='date'),
    y=alt.Y('date:O', timeUnit='month'),
    color='max(temp_max):Q'
)
```

As an additional benefit, the new approach also makes more clear that the typecode refers to the aggregated data rather than to the input data, which was a confusion that came up several times for participants in the PyCon tutorial.",3,5,[]
496,188821527,863,42757577,2018-05-17 18:21:39,2018-05-17 18:30:49,closed,DOC: fix outdated documentation,Fixes #855 ,0,1,[]
497,188820847,862,42757577,2018-05-17 18:19:02,2018-05-22 01:25:38,closed,ENH: make to_json & to_csv transformers have deterministic filenames,"Addresses #857

- [x] update functions
- [x] add tests

The idea here is that when someone uses the ``json`` or ``csv`` data transformer, the dataframes are stored on disk with a filename that is determined from the hash of the data contents. This prevents the proliferation of temporary files when doing a lot of plotting.",2,4,[]
498,188570165,847,42757577,2018-05-16 21:46:46,2018-05-16 21:58:03,closed,Fix pandas 0 23,"pandas 0.23 :

pandas.merge() now raises a ValueError when trying to merge on incompatible data types (GH9780)

It cause error in select_detail.py",3,5,[]
499,188556475,846,42757577,2018-05-16 20:51:31,2018-05-16 21:00:51,closed,BUG: fix examples & tests for pandas 0.23,Pandas 0.23 broke our tests. This makes them pass again.,0,1,[]
500,188548194,844,42757577,2018-05-16 20:19:02,2018-05-16 22:05:20,closed,Release-related maintenance...,,0,5,[]
501,188124658,838,42757577,2018-05-15 13:16:05,2018-05-15 13:21:12,closed,Update vega and vega-embed versions for vegalite 2,,0,1,[]
502,187851338,836,42757577,2018-05-14 14:45:02,2018-05-15 14:57:09,closed,MAINT: update vega-lite to version 2.4.3,,1,1,[]
503,187653064,832,42757577,2018-05-13 05:17:57,2018-05-14 14:29:05,closed,Add and add_selection() method,Fixes #810,1,2,[]
504,187653048,831,42757577,2018-05-13 05:17:19,2018-05-14 14:29:26,closed,ENH: add chart.serve() and chart.display(),"- chart.serve() will open a web browser window and start a local server,
  so that charts can be more easily displayed in non-javascript environments
- chart.display() will force display in Jupyter notebook / JupyterLab without
  needing to have the chart object evaluated at the end of a cell.

Fixes #827 ",1,2,[]
505,187653038,830,42757577,2018-05-13 05:16:59,2018-05-14 14:29:53,closed,ENH: support multiple fields for single encoding.,"This is valid for the 'detail' and 'tooltip' encodings.

Fixes #825",1,2,[]
506,187339178,829,42757577,2018-05-11 00:17:56,2018-05-11 13:18:19,closed,DOC: Added vega_datasets install instructions to the top of the Example Gallery,,1,1,[]
507,186499134,823,42757577,2018-05-08 00:34:37,2018-05-18 19:05:44,closed,Use vega instead of vega3,"I have no rerun the notebooks. 

ipyvega is now `vega` instead of `vega3`",8,2,[]
508,186479485,822,42757577,2018-05-07 22:15:24,2018-05-08 04:34:58,closed,Mark package as stable,,1,1,[]
509,186181678,819,42757577,2018-05-06 00:14:28,2018-05-06 05:29:11,closed,Typo correction,Thanks for the incredible documentation. This project is amazing!,2,1,[]
510,186181317,818,42757577,2018-05-06 00:02:36,2019-12-13 22:37:03,closed,Integration with geopandas #588,"Integration with geopandas( fix #588)
Now GeoDataFrame is valid Data type for alt.Chart
```python
import altair as alt
import geopandas as gpd

alt.renderers.enable('notebook')

world = gpd.read_file(gpd.datasets.get_path('naturalearth_lowres'))

#GeoDataFrame could be passed as usual pd.DataFrame 
alt.Chart(world[world.continent!='Antarctica']).mark_geoshape(
).project(
).encode( 
    # for GeoDataFrame fields shorthand infer types as for regular pd.DataFrame
    color='pop_est', 
    tooltip='id:Q' # GeoDataFrame.index is accessible as id
).properties( 
    width=500,
    height=300
)
```
![visualization 2](https://user-images.githubusercontent.com/11561581/39668472-462a12fc-50d7-11e8-9280-d32b59048698.png)

Any  object with [geo_interface](https://gist.github.com/sgillies/2217756) could be used as data. But in that case it will be interpreted as one shape
```python
alt.Chart(world[world.continent=='Africa'].geometry).mark_geoshape(
).project(
).properties( 
    width=500,
    height=300
)
```
![visualization 4](https://user-images.githubusercontent.com/11561581/39730587-2c5e7e4a-526b-11e8-8689-0eb01e6bfe8c.png)

If you want to split FeatureCollection into different shapes use `alt.geojson_feature` (76a2af8)
```python
alt.Chart(
    alt.geojson_feature(world[world.continent=='Africa'].geometry,'features')
   ).mark_geoshape( 
).project(
).encode(
    fill = alt.Color('id:N',legend=None)
).properties( 
    width=500,
    height=300
)
```

![visualization 5](https://user-images.githubusercontent.com/11561581/39730619-616e4656-526b-11e8-8808-f6ef6e27462a.png)

With GeoPandas to_json or to_values directly.  

```python
alt.Chart(alt.to_json(world[world.continent=='Africa'])
   ).mark_geoshape( 
).project(
).encode(
    fill = 'pop_est:Q'
).properties( 
    width=500,
    height=300
)
```
![visualization 6](https://user-images.githubusercontent.com/11561581/39730702-dbfeb9aa-526b-11e8-9097-97e1032cd989.png)

**TODO:**

- [x] initial GeoDataFrame support
- [x] add tests coverage
- [x] update documentation
- [na] create a demo notebook - notebooks are in different repository 
### Changes summary
All three of `to_values`, `to_json`, `to_csv` act differently in two new use cases.
1. **Case GeoDataFrame** (from GeoPandas) that is `pd.DataFrame` with `__geo_interface__`:
    * `to_csv()` I don't know any way to use geometry in this format from vega-light. So it throws NotImplemented to avoid user misunderstandings.
    * `to_values()` and  `to_json()` will save GeoDataFrame.geometry through `__geo_interface__` into geojson enriching it with values from data. That flatting allows simplify usage by avoiding nested properties. The Idea is inspired by[ vega/vega-lite/#3341 ](https://github.com/vega/vega-lite/issues/3341)
  
1. **Case __geo_interface__ only**  for objects with `__geo_interface__` than is not a `pd.DataFrame` instance so it is not GeoDataFrame:
    * `to_csv()` Throws NotImplemented. Geojson tree structure  could not be saved in plain csv format.
    * `to_values()` and  `to_json()` will save object through `__geo_interface__` into geojson. 
    * New function `geojson_feature` a clone of `topojson_feature`  wraps data with appropriate `alt.Data` and allows to split GeoJSON collection into different shapes. 

",24,24,[]
511,186124092,817,42757577,2018-05-04 23:23:13,2018-05-17 15:56:29,closed,DOC: Normalized Stacked Area Chart example,"The same as the simple area chart example, but normalized. 

```python
import altair as alt
from vega_datasets import data

source = data.unemployment_across_industries.url

alt.Chart(source).mark_area().encode(
    x=""date:T"",
    y=alt.Y(""count:Q"", stack=""normalize""),
    color=""series:N""
)
```

![visualization 17](https://user-images.githubusercontent.com/9993/39656789-6857cdf4-4fb7-11e8-81c8-f0ff6be7fee7.png)
",22,5,[]
512,186082143,815,42757577,2018-05-04 19:39:43,2018-05-04 21:08:18,closed,Fix a few typos in stem-and-leaf example,,1,1,[]
513,186073460,814,42757577,2018-05-04 19:01:59,2018-05-21 02:17:26,closed,added example that links an interval selection in a histogram with a scatter plot,"Here's something else that took me a while to figure out yesterday, while I was trying to reproduce the [cross-highlights example](https://altair-viz.github.io/gallery/interactive_cross_highlight.html) on some of my own data: the behaviour is different when selecting a bar chart made from nominal categories to when there's a histogram binning step of quantitative information in the middle. 

I found that the only way I could make it work is by applying the `transform_bin` method to both charts. I don't know if that's the correct way to do it, or if there's a better way, but in either case, I thought it might be nice to have an example that shows this behaviour. ",8,2,[]
514,185846892,811,42757577,2018-05-03 21:46:59,2018-05-04 21:07:32,closed,Added an example of data with error bars,"This is a really simple example, but almost all of my data is of this type and it took me a bit to figure out `transform_calculate`, so I thought it might be useful for someone else to see. 

This is kind of a simpler version of the [errorbar example](https://altair-viz.github.io/gallery/error_bars_with_ci.html), where data points and uncertainties don't have to be calculated from a distribution, but are given as (x, y, yerr).  ",3,4,[]
515,185782879,808,42757577,2018-05-03 17:15:43,2018-05-03 17:20:55,closed,Added link to mailing list to Readme,"Based on a discussion with @jakevdp, thought that the readme might be a good place to add a link to the mailing list (and possibly any other user communities spaces you have?).",1,1,[]
516,185556643,805,42757577,2018-05-02 20:47:44,2018-05-02 21:01:02,closed,Doc fixes,,0,8,[]
517,185242961,801,42757577,2018-05-01 18:34:13,2018-05-01 18:48:42,closed,BUG: make chart.save() work regardless of active data transformer,Fixes #792,0,1,[]
518,185213300,800,42757577,2018-05-01 16:14:58,2018-05-01 16:49:36,closed,MAINT: fix handling of display metadata,"I realized that mimebundle metadata should be passed with the same mimetype key as the main data. This PR fixes that.

It also cleans up the way that display functions are defined.",0,2,[]
519,185056820,799,42757577,2018-04-30 20:31:54,2018-05-01 15:34:43,closed,MAINT: generalized mimebundle utility,Some cleanup to put all the mimebundle logic in one place.,0,3,[]
520,185008078,795,42757577,2018-04-30 16:53:52,2018-04-30 16:56:51,closed,DOC: add a few more simple chart examples,cf. #789,0,1,[]
521,185000196,794,42757577,2018-04-30 16:19:20,2018-04-30 16:31:51,closed,MAINT: refactor channel to_dict methods to mixin classes,,0,1,[]
522,184803507,789,42757577,2018-04-28 20:14:26,2018-04-30 16:35:57,closed,DOC: Example gallery reorganization,Replaces #788 (where you can find a fuller discussion). For #775. ,4,1,[]
523,184796119,788,42757577,2018-04-28 17:08:47,2018-04-28 20:10:56,closed,DOC: Reorganized the example gallery,"For #775. You'll find an explicitly defined table of contents order for the gallery list page, with the simple charts first. 

Here's the draft order I settled on. With newbies in mind, I aimed for an increasing order of complexity as you move through the list.

* Simple Charts
* Bar Charts
* Line Charts
* Area Charts
* Scatter Plots
* Histograms
* Maps
* Interactive Charts
* Other Charts

There are some emerging categories of charts, like heatmaps or ""table bins,"" that could potentially grow into their own categories as more examples are added.

Other than adjusting their categories, I did not get into adding or editing charts as part of this patch. I have plenty of thoughts about that, but they can wait for later. ",8,0,[]
524,184719448,787,42757577,2018-04-27 20:24:20,2018-04-27 20:30:11,closed,DOC: convert markdown docstrings to RST,"Auto-generated docstrings in altair come from vega-lite, which uses markdown format. Sphinx does not properly render markdown from docstrings, and this leads to poorly formatted docs (see generated docs here: https://altair-viz.github.io/user_guide/API.html#module-altair)

This PR uses the [m2r](https://pypi.org/project/m2r/)  package to convert descriptions from markdown to RST in the process of generating Altair's code.

The results aren't perfect, but they're much better than before.",0,2,[]
525,184654016,786,42757577,2018-04-27 15:24:37,2018-04-27 18:22:49,closed,"MAINT: bump versions to vega-lite=2.4.1, vega=3.3.1","TODO:

- [x] Bump Vega/Vega-Lite versions
- [x] Add ``transform_window()`` method & an example
- [x] Add ``mark_trail()`` method & an example",1,4,[]
526,184378009,784,42757577,2018-04-26 15:25:50,2018-04-26 15:47:41,closed,BUG: fix vega-embed version in vegalite.v1.html,Fixes #777,0,1,[]
527,184372422,783,42757577,2018-04-26 15:08:13,2018-04-26 15:23:22,closed,ENH: specialize Chart.from_dict() to work with any top-level spec,,0,2,[]
528,184098971,779,42757577,2018-04-25 16:50:51,2018-04-25 17:04:46,closed,MAINT: make tests pass when there is no web connection,,0,1,[]
529,184054675,776,42757577,2018-04-25 14:26:12,2018-04-30 19:56:23,closed,[MRG] Generalized Plugin Interface,"The goal of this work is to generalize the plugin interface to allow specification of additional options and/or metadata. See below for examples.

TODO list:

- [x] Require all plugins to return a callable function or object (mainly affects theme registry)
- [x] Make ``plugins.enable()`` able to be used as a context manager
- [x] Change the theme plugins to a function returning a spec
- [x] Add ability to specify extra options when calling ``plugins.enable()``
- [x] Specialize the data_transformers plugins
- [x] Allow ``max_rows`` to be set for data transformers
- [x] Specialize the renderers plugins
- [x] Allow metadata to be set for renderers (e.g. vega-embed args and vega-tooltip args)
- [x] Test setting of metadata
- [x] Modify html output to make use of that metadata

**External TODOS:**

- update ipyvega & jupyterlab to use ``embed_options`` from mimebundle metadata

---

This PR addresses (or partially addresses) #758, #742, #674, #673, and #240.

Most of this is internal reorganization, but there are a few primary user-side API enhancements that this PR introduces out-of-the-box.

## Temporary plugin enabling via context manager
With this PR, ``plugins.enable`` can optionally be used as a context manager to temporarily enable a specified plugin. For example:
```python
with alt.data_transformers.enable('json'):
    do_something()  # executed with the json data transformer
do_something_else()  # executed with the previous data transformer
```

## Data transformer settings
After this PR, you can directly set the ``max_rows`` parameter of the default data transformer:
```python
alt.data_transformers.enable('default', max_rows=10000)
```
Alternatively, you can use
```python
alt.data_transformers.enable('default', max_rows=None)
```
and no check of the number of rows will be performed.

## Renderer metadata
This provides a mechanism to pass arbitrary metadata to the renderer. For the Colab renderer, which is built-in to the package, vegaEmbed [options](https://github.com/vega/vega-embed#options) can be passed using the ``embed_options`` argument; e.g.
```python
alt.renderers.enable('colab', embed_options={'actions': False})
```
this will hide the action links (i.e. save as png, open in vega editor, etc.).

As I've designed it here, these additional arguments will be passed in the metadata dictionary of other mimebundle representations, so that renderers like jupyterlab-vega and ipyvega can make use of them as well. For example:

```python
>>> import altair as alt
>>> alt.renderers.enable('default', embed_options={'actions': False})
>>> alt.Chart('data.csv').mark_point()._repr_mimebundle_(None, None)
({'text/plain': '<VegaLite 2 object>\n\nIf you see this message, it means the renderer has not been properly enabled\nfor the frontend that you are using. For more information, see\nhttps://altair-viz.github.io/user_guide/troubleshooting.html\n',
  'application/vnd.vegalite.v2+json': {'config': {'view': {'width': 400,
     'height': 300}},
   'data': {'url': 'data.csv'},
   'mark': 'point',
   '$schema': 'https://vega.github.io/schema/vega-lite/v2.3.0.json'}},
 {'embed_options': {'actions': False}})
```
Notice the second element in the tuple contains the embed options.

I would propose we adopt this ``embed_options`` metadata key as a standard to be accepted in the metadata and handled appropriately by jupyterlab-vega, ipyvega, and any other renderers.",4,17,[]
530,183867298,774,42757577,2018-04-24 21:19:00,2018-04-25 14:01:01,closed,"Replaced the existing, complicated stacked area example with a simpler example.","I've substituted the existing example with one that doesn't require a transformation of the sample data.

![screenshot from 2018-04-24 14-18-45](https://user-images.githubusercontent.com/9993/39214769-6d268a04-47ca-11e8-9e7a-4c2b4b6c8bfc.png)
",1,2,[]
531,183563826,771,42757577,2018-04-23 21:32:55,2018-04-24 02:23:29,closed,Updated data import style in trellis histogram example,,1,1,[]
532,183503567,770,42757577,2018-04-23 17:24:28,2018-04-24 14:41:16,closed,Add support for generating vega spec in headless,"This closes #441 by adding support for generating Vega spec's from vega
lite specs. It does this by using a headless browser (either chrome
or firefox) and loading a hosted version of the vega lite JS API.

To test this code install seleneium (`pip install selenium`) and
chromedriver (`brew cask install chromedriver`).

I implemented this with minimal changes to the existing API by adding
the `vega` format to the `spec_to_image_mimebundle` function. So it will
return a dictionary mapping the correct vega mimetype (as defined in
https://altair-viz.github.io/user_guide/display_frontends.html#renderer-api)
to the vega spec. It doesn't really make much sense to render vega to vega,
but this is currently supported as a no-op.",11,5,[]
533,183467614,769,42757577,2018-04-23 15:13:07,2018-04-24 20:36:02,closed,splitted requirements into production and dev requirements,"It is important to split requirements into ""hard"" requirements for production and dev requirements which are only needed in development environments (e.g. pytest and ipython). 

This addresses #768.

One remaining issue is, that ipython seems to be a hard non-optional requirement. Is this really needed or could this be made optional (e.g. try import ipython, if not there ignore)?",5,6,[]
534,182254735,764,42757577,2018-04-17 18:26:33,2018-04-30 17:41:32,closed,[HOLD] Add aggregate functions,"Addresses #763.

This adds functions in place of the current string aggregation shortcuts. So instead of
```python
alt.Chart(data).mark_bar().encode(
    x='mean(x):Q'
)
```
you can do
```python
alt.Chart(data).mark_bar().encode(
    x=alt.agg_mean('x')
)
```
or
```python
alt.Chart(data).mark_bar().encode(
    alt.X(alt.agg_mean('x'), **kwds)
)
```
the type defaults to quantitative, because in almost all cases where an aggregation is used it is performed on a field with quantitative type.",3,6,[]
535,181875189,762,42757577,2018-04-16 14:15:20,2018-04-17 18:48:41,closed,ENH: add project() method to Chart,"This adds a ``Chart.project`` method.

Before, applying a geographic projection required something like this:
```python
alt.Chart(data).mark_geojson().properties(
    projection=alt.Projection(type='albersUsa', **kwds)
)
```
After this PR, the equivalent is
```python
alt.Chart(data).mark_geojson().project('albersUsa', **kwds)
```",4,2,[]
536,181550279,759,42757577,2018-04-13 17:28:52,2018-05-02 21:03:06,closed,DOC add example with facetted scatterplot plus marginal histograms,"A facetted scatterplot with marginal facetted histograms.

Beware this is affected by #754 (the binning `extent` does not set the axis scale as intended), so this example should probably not be considered before that bug is fixed in vega-lite.",3,4,[]
537,181527005,756,42757577,2018-04-13 15:46:56,2018-04-13 15:53:12,closed,Rename alt.theme to alt.themes for consistency,Related to https://github.com/altair-viz/altair/pull/740#issuecomment-381158406,3,2,[]
538,181526691,755,42757577,2018-04-13 15:45:44,2018-04-13 16:12:37,closed,Update encoding docs,,0,2,[]
539,181354067,753,42757577,2018-04-12 23:50:28,2018-04-13 01:27:46,closed,Typing is in requirements.txt but not setup.py,One of my colleagues installed Altair's new release candidate in Python 2.7 today. He had to install typing himself manually afterwards. I suspect this is because it was not added to setup.py. ,1,1,[]
540,181311978,752,42757577,2018-04-12 20:08:29,2018-04-12 20:26:31,closed,Attempt to fix code block that's not rendering in the docs,"Looks like this right now:

![screenshot from 2018-04-12 13-08-14](https://user-images.githubusercontent.com/9993/38701402-97482b2a-3e52-11e8-8327-2dcccec73018.png)
",1,1,[]
541,181251801,750,42757577,2018-04-12 16:00:50,2018-04-12 16:28:03,closed,Example: world map projections,"Some world map examples:

![visualization 1](https://user-images.githubusercontent.com/781659/38689167-b78511fa-3e2f-11e8-9c38-474fa7f7cc9b.png)

Note that graticules (lat/long lines) are not yet supported in Vega-Lite; see https://github.com/vega/vega-lite/issues/3337",0,1,[]
542,181080336,749,42757577,2018-04-12 03:19:17,2018-04-12 03:22:40,closed,DOC: clean up HTML documentation,Did a read-through of the docs this afternoon; corrected a bunch of minor things and did some rearranging to help users.,0,1,[]
543,181035458,748,42757577,2018-04-11 21:38:16,2018-04-11 21:49:59,closed,DOC: add explicit section on renderers,and link there from default display,0,1,[]
544,180947210,746,42757577,2018-04-11 15:42:46,2018-04-11 15:45:07,closed,MAINT: fix schemapi to work with old jsonschema versions,,0,1,[]
545,180792558,745,42757577,2018-04-11 05:17:28,2018-04-11 05:20:44,closed,MAINT: make resolver logic compatible with older jsonschema versions,,0,1,[]
546,180779594,744,42757577,2018-04-11 03:11:43,2018-04-11 03:44:26,closed,MAINT: add doctests to travis CI; minor fixes so they pass,,0,1,[]
547,180776256,743,42757577,2018-04-11 02:41:41,2018-04-11 02:49:07,closed,MAINT: use standard form for magics,This changes things so users can use ``%load_ext altair`` in order to get the ``%%vega`` and ``%vegalite`` magics.,0,2,[]
548,180665596,741,42757577,2018-04-10 16:52:13,2018-04-10 19:13:31,closed,Python 2.7 compatibility,Addresses #444 ,2,6,[]
549,180628642,740,42757577,2018-04-10 14:49:37,2018-04-10 17:36:48,closed,ENH: add theme support,"This addresses #718, adding support for switching between different chart themes.

For example, you can do

```python
import altiar as alt
alt.theme.enable('opaque')
```

and charts will now have a white background. Restore the default theme using

```python
alt.theme.enable('default')
```

Register custom themes using package entrypoints, or using, e.g.
```python
alt.theme.register('black-background', {'config': {'background': 'black'}})
```
and then enable it using
```python
alt.theme.enable('black-background')
```

@afonit – I'd love your input on what other themes we should make available by default. Currently I have ""default"" (set width and height) ""opaque"" (set width & height, and background color to white) and ""none"" (no config settings).",18,2,[]
550,180491799,739,42757577,2018-04-10 05:15:58,2018-04-10 05:19:59,closed,Fix config mixins,Removes unnecessary generated methods,0,2,[]
551,180490393,738,42757577,2018-04-10 05:02:30,2018-04-10 05:21:57,closed,DOC: add section on configure_*() methods,"This adds a sphinx extension that generates tables from a schema object, and adds documentation of top-level configuration using ``configure_*()`` methods.",0,2,[]
552,180472263,737,42757577,2018-04-10 02:11:33,2018-04-11 01:24:18,closed,ENH: Add Firefox option for save,"Using `options` instead of `chrome_options` follows the deprecation
advice in Selenium.

According to its docs, Firefox takes single dash options, but I verified
that it understands `--headless`.

I tested as root and Firefox does not need `--no-sandbox`, which is
convenient because it does not have such a flag.

Fixes #714.",1,2,[]
553,180441658,736,42757577,2018-04-09 22:12:49,2018-04-09 22:15:04,closed,Cache pip dependencies on TravisCI for faster builds,As recommended by the [TravisCI documentation](https://docs.travis-ci.com/user/caching/). ,1,1,[]
554,180439319,735,42757577,2018-04-09 22:01:00,2018-04-09 22:09:42,closed,Added flake8 test to TravisCI routine,,1,4,[]
555,180419690,733,42757577,2018-04-09 20:34:33,2018-04-09 21:43:43,closed,Fixed almost all of the remaining PyFlakes violations,"There is one separate issue yet that I will soon file a ticket on. But besides that, this is all that I see remaining in my pyflakes checks. ",2,2,[]
556,180179947,730,42757577,2018-04-08 20:55:54,2018-04-09 15:46:33,closed,Added example of scatter plot with labels,"For #715.

Looks like this:

```python
import pandas as pd
import altair as alt

df = pd.DataFrame({
    'x': [1, 3, 5, 7, 9], 
    'y': [1, 3, 5, 7, 9], 
    'label':['A', 'B', 'C', 'D', 'E'], 
})

bars = alt.Chart(df).mark_point().encode(
    x='x:Q',
    y='y:Q',
)

text = bars.mark_text(
    align='left',
    baseline='middle',
    dx=7
).encode(
    text='label'
)

bars + text
```

![visualization 4](https://user-images.githubusercontent.com/9993/38472438-169ab5da-3b35-11e8-9388-3a5c55d0aa05.png)
",3,4,[]
557,180178046,729,42757577,2018-04-08 20:14:44,2018-04-09 14:46:55,closed,PyFlakes fixes to __init__.py files,"Attached are a variety of fixes to manage PyFlakes violations in ``__init__.py`` files.

My reading of the library is that ``*``'s have been used in autogenerated modules to allow for a changing number of imports. To allow that to continue, I have exempted those files from PyFlakes inspection. If you'd prefer another approach, please let me know.",1,2,[]
558,180168578,728,42757577,2018-04-08 16:45:45,2018-04-08 22:12:11,closed,Fix for `to_json` and `to_csv` path resolving,"This PR in combination with JupyterLab master (which should be released this week) fixed the path resolution issues of `to_json` and `to_csv`. Things should ""just work"" now with no extra path hacking in JupyterLab. All paths used by these data transformers are relative to the notebook. Other renderers such as ipyvega should now use this same approach. The key is that the notebook servers baseURL + `/files` + path of the notebook needs to be prefixed to the relative filename.

@jakevdp ",5,3,[]
559,180164820,727,42757577,2018-04-08 15:21:54,2018-04-08 18:05:12,closed,PyFlakes fixes for Python 2/3 compatibility code,"I also trimmed out some of the compatibility module that wasn't being used, or that is already provided by the `six` library.",1,1,[]
560,180140922,726,42757577,2018-04-08 05:31:57,2018-04-08 12:41:44,closed,DOC: eps replaced with svg,"Per @jakevdp's request, to fix when he types 'eps' instead of 'svg'. 'eps' is removed with this pull request and replaced with 'svg'.

Fixes #722.",1,1,[]
561,180131220,725,42757577,2018-04-08 00:01:41,2018-04-08 05:32:22,closed,BUG: changing eps to svg for save filetypes,"Per @jakevdp's request, to fix when he types 'eps' instead of 'svg'. 'eps' is removed with this pull request and replaced with 'svg'.

Fixes https://github.com/altair-viz/altair/issues/722 . Categorized as a bug because 'svg' wouldn't have worked.",5,1,[]
562,180127436,724,42757577,2018-04-07 22:04:11,2018-04-07 23:25:21,closed,Added pytest cache folder to the .gitignore,,1,1,[]
563,180127389,723,42757577,2018-04-07 22:03:12,2018-04-07 23:26:01,closed,Fixed a number of imports that violate pyflakes rules,This includes a configuration of `flake8` that will ignore all style rules derived PEP8 and only enforce rules brought in from pyflakes.,1,6,[]
564,180056392,719,42757577,2018-04-06 21:16:56,2018-04-07 13:25:40,closed,DOC: Correct scale on horizon example,I think the scale needs to be set in the second area for this to work. ,1,1,[]
565,179767672,713,42757577,2018-04-05 19:03:43,2018-04-06 12:40:25,closed,pyflakes fixes to tools module,,1,1,[]
566,179518434,712,42757577,2018-04-04 21:32:23,2018-04-06 22:46:21,closed,PEP8 fixes in the expr module,,6,1,[]
567,179487529,711,42757577,2018-04-04 19:22:16,2018-04-05 19:18:09,closed,Fixed a variety of PEP8 errors in the tools folder,,2,1,[]
568,179202569,708,42757577,2018-04-03 19:54:14,2018-04-04 13:28:33,closed,"Fixed violations of PEP8 rule E251, unexpected spaces around keyword",,1,1,[]
569,179194217,707,42757577,2018-04-03 19:18:20,2018-04-04 13:29:02,closed,Ignore PEP8 errors E711 and E712,For reasons described in #705.,2,2,[]
570,179150148,706,42757577,2018-04-03 16:18:46,2018-04-03 18:23:48,closed,"Corrected PEP8 violations of F841, local variable is assigned to but never used",,0,1,[]
571,179145995,703,42757577,2018-04-03 16:03:37,2018-04-03 18:22:29,closed,"Fixed PEP8 error E265, block comment should start with '# '",,1,1,[]
572,179122671,702,42757577,2018-04-03 14:47:23,2018-04-03 14:52:50,closed,Code cleanup,,0,2,[]
573,179115593,701,42757577,2018-04-03 14:24:57,2018-04-03 14:48:15,closed,MAINT: tests & code cleanup,,1,4,[]
574,179102929,700,42757577,2018-04-03 13:43:38,2018-04-03 14:48:58,closed,"Fixes to PEP8 error E231, missing whitespace",,1,1,[]
575,179000040,699,42757577,2018-04-03 05:54:27,2018-04-03 13:34:18,closed,Removed unneeded imports for PEP8 compliance,All identified by flake8,1,1,[]
576,178893074,697,42757577,2018-04-02 18:05:01,2018-04-02 18:46:57,closed, Clean up rstrip and blank line PEP* violations in autogen code,Also handled upstream to make the fix permanent. ,1,2,[]
577,178884522,696,42757577,2018-04-02 17:23:52,2018-04-02 17:28:54,closed,Fixed a PEP8 violation of indenting style in autogenerated code,Fixed in the generator level for a more lasting effect. ,1,1,[]
578,178750819,694,42757577,2018-04-01 22:30:54,2018-04-02 17:06:05,closed,Removes trailing whitespaces from a set of files,"There are a series of other small PEP8 violations hanging around the library that could use a little housecleaning, IMHO. If you're open to it, I'd be happy to use `flake8` to tidy up the rest.

Ultimately the library could use flake8 to enforce Python style as part of the tests on TravisCI. In my experience as a package maintainer this has been a positive thing because, as pedantic as PEP8 is, it provides a common foundation that can bring some consistency to a large library and quickly settle subjective debates about style. ",4,1,[]
579,178734445,693,42757577,2018-04-01 15:37:42,2018-04-02 17:19:14,closed,Drafted encoding documentation for the order channel,For #689.,2,6,[]
580,178728554,692,42757577,2018-04-01 13:14:00,2018-04-01 13:17:51,closed,BUG: fix duplicate renderer names (fixes #686),,0,1,[]
581,178708834,691,42757577,2018-04-01 01:56:53,2018-04-01 14:42:27,closed,Added an alt.Order config to the horizontal stacked bar chart example.,For #689 ,2,2,[]
582,178691992,690,42757577,2018-03-31 17:25:37,2018-04-03 05:24:58,closed,WIP: Transform docs,Adding more rigorous documentation of available transforms.,1,12,[]
583,178664390,685,42757577,2018-03-31 03:45:36,2018-03-31 03:46:56,closed,MAINT: explicitly decode to utf-8,Fixes issues on some systems,0,1,[]
584,178635866,683,42757577,2018-03-30 21:08:42,2018-03-30 21:22:22,closed,MAINT: use pkgutil rather than open() to access internal data files,This is necessary to work properly within Google's internal Colab deployment.,4,4,[]
585,178589337,680,42757577,2018-03-30 16:15:18,2018-03-30 16:25:55,closed,MAINT: add explicit utf8 coding for generated files.,"These files contain unicode characters, because those characters are present in the vega
and vega-lite schemas. Python 3 defaults to UTF-8, but to make the library more broadly
compatible, it's useful to be explicit.",1,1,[]
586,178493045,678,42757577,2018-03-30 04:43:32,2018-04-25 14:44:23,closed,MAINT: modify renderers to always include metadata dictionary,Prerequisite to addressing #674,4,1,[]
587,178442483,677,42757577,2018-03-29 21:09:49,2018-05-23 17:42:36,closed,added remark based on mailing list discussion related to layered charts,Previously I committed it to the wrong place.,4,1,['documentation']
588,178419715,675,42757577,2018-03-29 19:27:46,2018-03-29 20:28:49,closed,ENH: add selection detail example,,1,1,[]
589,178163184,672,42757577,2018-03-28 21:02:27,2018-04-13 17:22:33,closed,ENH: add no_max_rows data transformer,"This adds a built-in data transformer with no ``MaxRows`` limit.

I think writing to file is probably better, but I anticipate some users wanting the ability to easily enable the embedding of large datasets, and this gives them that.

Addresses #611.",2,1,[]
590,178162025,671,42757577,2018-03-28 20:57:41,2018-04-10 19:12:20,closed,ENH: add %%vega and %%vegalite magic commands,May be useful to add some example notebooks... this allows direct rendering of vega/vegalite specs expressed as JSON or as YAML.,10,10,['enhancement']
591,178017768,666,42757577,2018-03-28 12:10:07,2018-04-09 19:22:24,closed,ENH: add javascript error printout to html mimebundle,"This adds Javascript error reporting to the template used in the Colab renderer. It means that instead of just a blank page, you get red text telling you something about what's going wrong.

@domoritz @kanitw do you have thoughts on this approach?",6,4,[]
592,177875650,665,42757577,2018-03-27 21:52:25,2018-03-27 22:08:54,closed,Change examples so that they work when directly pasted into notebook,"suggested by @mroswell 

This took a little doing:

- I moved the ``exec_then_eval`` utility from sphinxext into ``altair.utils``, renamed it to ``eval_block``, and added some simple tests
- I changed all examples so that the last statement of each evaluates to a chart object
- I updated example unit tests to use ``eval_block`` to properly extract example charts
- I updated sphinx doc generation to properly display the new examples

I generated the HTML pages locally, and everything seemed to work.",3,3,[]
593,177844408,663,42757577,2018-03-27 19:41:08,2018-03-29 16:28:30,closed,Troubleshooting docs,@mroswell I'd appreciate your thoughts on this... hopefully it would have addressed some of the issues you faced yesterday,3,6,[]
594,177614898,661,42757577,2018-03-27 02:21:07,2018-03-27 02:22:59,closed,ENH: refactor html output and add CoLab renderer,,0,1,[]
595,177562666,660,42757577,2018-03-26 20:44:52,2018-03-26 21:04:44,closed,Registry repr,"- Add more reasonable representation of the renderer registry
- add ``'jupyterlab'`` renderer as an alias to default
- add ``'png'`` and ``'svg'`` renderers that return png/svg mimetype using chrome headless (one of the things @ellisonbg had asked for :smile:)",1,3,[]
596,177421268,658,42757577,2018-03-26 11:49:59,2018-03-26 11:58:38,closed,BUG: fix windows geteuid issue when saving to png/svg,Fixes final issue in #649,1,1,[]
597,177345423,655,42757577,2018-03-26 05:26:43,2018-03-26 11:43:32,closed,typo fix,,1,1,[]
598,177344880,654,42757577,2018-03-26 05:21:40,2018-03-26 05:23:18,closed,typo fix,,0,1,[]
599,177343863,653,42757577,2018-03-26 05:11:45,2018-03-26 05:17:25,closed,Update display.rst,,0,1,[]
600,177342660,652,42757577,2018-03-26 04:59:06,2018-03-26 05:17:05,closed,Typo fix,,1,1,[]
601,177338861,651,42757577,2018-03-26 04:15:16,2018-03-26 05:17:39,closed,Update starting.rst,,0,2,[]
602,177326779,650,42757577,2018-03-26 02:00:11,2018-03-26 04:37:36,closed,BUG: fix tempfile issue when saving to png/eps on windows (#649),Fixes #649,0,1,[]
603,177260555,648,42757577,2018-03-24 21:47:02,2018-03-25 01:43:47,closed,MAINT: add deprecation warning to load_datasets,Addresses #644,0,1,[]
604,177260302,647,42757577,2018-03-24 21:41:40,2018-03-25 02:11:01,closed,BUG: make facet row/col aware of data when inferring types,,0,1,[]
605,177260281,646,42757577,2018-03-24 21:41:18,2018-03-25 01:45:07,closed,Simplify ``count()`` aggregation,Addresses #640,0,3,[]
606,177260257,645,42757577,2018-03-24 21:40:41,2018-03-25 01:44:41,closed,ENH: add ``encode()`` method to LayeredChart,,0,2,[]
607,177199893,642,42757577,2018-03-23 22:44:49,2018-03-24 21:50:34,closed,Added the logo to the README ,"![screenshot from 2018-03-23 15-45-27](https://user-images.githubusercontent.com/9993/37856328-3cba815e-2eb1-11e8-93b1-b7abe52adce2.png)

",4,9,[]
608,177190566,641,42757577,2018-03-23 21:41:39,2018-03-24 07:09:42,closed,Refactored 'savechart' as the more concise 'save',As discussed in #557  ,6,3,[]
609,177120871,639,42757577,2018-03-23 16:26:43,2018-03-23 21:41:30,closed,DOC: Update example and image shown in README.md,,1,2,[]
610,177117317,638,42757577,2018-03-23 16:13:31,2018-03-26 11:59:32,closed,BUG: add explicit UTF-8 encoding for files,,0,1,[]
611,176937089,637,42757577,2018-03-22 23:30:18,2018-03-26 12:00:02,closed,Fix loading of schema on windows.,Import fails because schema is loaded with wrong encoding. ,7,3,[]
612,176639934,631,42757577,2018-03-21 23:48:12,2018-03-21 23:50:18,closed,fixed typo,That's all for now.,1,1,[]
613,176583007,629,42757577,2018-03-21 19:16:57,2018-03-21 19:20:41,closed,DOC: Fix lab extension installation instructions,,0,2,[]
614,176578469,628,42757577,2018-03-21 18:58:31,2018-03-22 07:59:52,closed,ENH: allow DataFrame to be passed to LookupData (fixes #626),"Small change to fix #626 

@ellisonbg, can you take a look?",0,1,[]
615,176559103,627,42757577,2018-03-21 17:47:12,2018-03-21 17:51:35,closed,DOC: Standardized import style in the basic charts examples,"Some of the basic charts are using a different import style than the other examples. It seems to me that consistency is important here, especially for basic charts that will be picked up by newbies. ",1,1,[]
616,176537044,625,42757577,2018-03-21 16:34:57,2018-03-21 17:25:42,closed,DOC: Added examples of configuring the legend,To address #620.,2,4,[]
617,176517732,623,42757577,2018-03-21 15:40:13,2018-03-21 17:26:01,closed,DOC: add discussion of data types and their effects on scales,,3,3,[]
618,176499178,622,42757577,2018-03-21 14:45:09,2018-03-22 08:06:05,closed,Refactor savechart,"This PR refactors the ``savechart`` code:

- move the bulk of the code to ``altair/utils`` and make library versions configurable
- change the ``headless`` code to output a mimetype representation, and leave the file saving to ``savechart``

This will allow us to trivially create PNG and SVG renderers for use in the case of large datasets cc/@ellisonbg",0,5,[]
619,176278679,618,42757577,2018-03-20 18:12:10,2018-03-21 09:36:42,closed,DOC: expand installation to make notebook steps more explicit,,0,1,[]
620,176187795,615,42757577,2018-03-20 13:20:52,2018-03-20 14:02:56,closed,DOC: add docs section on long-form/wide-form data,,0,1,[]
621,176183565,614,42757577,2018-03-20 13:05:06,2018-03-20 14:00:35,closed,Allow chromedriver to work under the root user,"On systems running on root (typical for many docker/CI set ups) Chrome fails with:
```
[0320/133959.828643:ERROR:zygote_host_impl_linux.cc(90)] Running as root without --no-sandbox is not supported. See https://crbug.com/638180
```

This option allows headless chrome to run in such cases.",1,1,[]
622,176060512,612,42757577,2018-03-20 00:30:26,2018-03-20 08:15:49,closed,readme update,updates to (almost verbatim) the docs instructions for installation,1,1,[]
623,175961040,609,42757577,2018-03-19 16:51:20,2018-03-19 17:20:20,closed,MAINT: make errors more informative for savechart(),,0,2,[]
624,175941387,607,42757577,2018-03-19 15:46:06,2018-03-20 08:15:09,closed,DOC: the most minor of typos,"Ahead of the final release, I figured I could contribute by reviewing the docs with my somewhat naive eyes.

Here's the only change I can propose so far. 

Merge if now if you want, or I can continue going through the docs later tonight (US/Pacific TZ).",4,1,[]
625,175744941,603,42757577,2018-03-18 10:48:27,2018-03-22 07:51:28,closed,MAINT: add helpful message for when charts don't render,"cc/ @ellisonbg 

We've already had a couple questions from users who either forgot to run or didn't realize they had to run ``renderers.enable('notebook')`` to use Altair in the notebook.

This PR changes the default output for when rendering fails to a more helpful message with a link to the docs.

Please let me know if this looks OK – I'm not sure if there's anything I'm overlooking.",0,1,[]
626,175743968,602,42757577,2018-03-18 10:18:03,2018-03-18 10:57:20,closed,TST: add some unit tests,,0,11,[]
627,175702126,598,42757577,2018-03-17 14:06:48,2018-03-18 10:57:02,closed,DOC: adjust handling of reserved names in code generation,"Previously, reserved names were ignored in the docstring.

Now the docstring contains a ``Dict-only Attribute`` section that lists these.",0,1,[]
628,175701412,597,42757577,2018-03-17 13:49:36,2018-03-18 10:56:39,closed,Add as_ keyword to transform_lookup,Addresses (part of) #595,0,1,[]
629,175690484,596,42757577,2018-03-17 08:37:30,2018-03-18 23:19:37,closed,Add handing of as attribute to AggregatedFieldDef,"Fixes #595 for AggregatedFieldDef.

Additionally this adds the as_ attribute to the docstring.",3,1,[]
630,175676161,594,42757577,2018-03-17 01:23:30,2018-03-17 01:38:53,closed,ENH: let alt.condition() accept expr.Expression as its first argument,,0,1,[]
631,175621676,593,42757577,2018-03-16 19:08:14,2018-03-16 19:24:30,closed,DOC: add user_guide section on saving charts,,0,1,[]
632,175570649,592,42757577,2018-03-16 15:42:43,2018-03-16 19:31:53,closed,DOC: update docstrings for transform_* methods,"After #589, the auto-generated doctrings no longer match the actual arguments of the ``transform_*`` methods. This adds explicit docstrings to address that.

cc/@malramsay64",0,1,[]
633,175567514,591,42757577,2018-03-16 15:31:48,2018-03-16 15:43:23,closed,DOC: Remove double listing of selections guide,,5,1,[]
634,175470144,589,42757577,2018-03-16 08:43:23,2018-03-16 14:57:58,closed,Add as_ argument and handling to transform functions,"This addresses issue #586 

It turns out that all the transforms require the 'as' keyword argument [https://vega.github.io/vega-lite/docs/transform.html](https://vega.github.io/vega-lite/docs/transform.html).

I have added the 'as_' argument and error handling to be consistent with the changes in #580. I have also modified the transform_calculate function to make it as consistent as possible with the rest of the transforms.",1,1,[]
635,175435751,584,42757577,2018-03-16 04:05:04,2018-03-16 04:15:56,closed,DOC updates,"- more dynamic example gallery & front-page banner
- some improvements in Getting Started and the User Guide",1,8,[]
636,175422222,583,42757577,2018-03-16 01:54:10,2018-03-16 15:02:38,closed,ENH: Add UrlTopoFeature to api,Adding a function to address some of the boilerplate needed to extract features from a topojson url source. ,2,4,[]
637,175152897,582,42757577,2018-03-15 05:35:14,2018-03-15 05:37:38,closed,More docs,,0,2,[]
638,175125067,581,42757577,2018-03-15 01:12:54,2018-03-15 01:32:44,closed,Add repeated choropleth example,"Another choropleth example from the vega-lite examples page. Weird dataset, but nice plot!",5,1,[]
639,175084693,580,42757577,2018-03-14 21:04:47,2018-03-14 22:37:34,closed,Modify transform_lookup to take from_ argument,"I modified the `transform_lookup` method to take a `from_` parameter. I also included an example of a choropleth map using the method. 

This is in response to #545 ",1,2,[]
640,175019524,578,42757577,2018-03-14 16:51:20,2018-03-14 17:10:33,closed,ENH: parse shorthand within alt.facet(),"This also makes ``facet()`` a method of ``Chart`` and ``LayerChart`` rather than a top-level function. While writing the docs for facet, it occurred to me that this is a more consistent API (it's similar to ``repeat``)",1,3,[]
641,174981249,577,42757577,2018-03-14 14:53:54,2018-03-14 14:56:09,closed,ENH: add interactive() method to layered chart,,0,1,[]
642,174852440,576,42757577,2018-03-14 04:37:34,2018-03-14 17:51:16,closed,ENH: add binding interface,"Add a Python interface to bindings, plus an example:
![ezgif-5-9d02b5a3cc](https://user-images.githubusercontent.com/781659/37383566-a41ebfe8-2706-11e8-99a6-a627631884a3.gif)
",4,1,[]
643,174696444,574,42757577,2018-03-13 15:27:03,2018-03-13 15:38:49,closed,BUG: fix isse with to_dict() in expressions,"Previously there was a recursion error when calling the ``copy()`` method on ``expr`` objects, because they weren't being initialized properly.",0,2,[]
644,174547668,572,42757577,2018-03-13 03:13:24,2018-03-14 18:05:25,closed,DOC: fill-out the user guide,Filling out the *user guide* section of the docs.,2,13,[]
645,174485874,571,42757577,2018-03-12 20:30:30,2018-03-13 15:40:12,closed,ENH: upgrade to vega-lite v2.3.0,"Addresses #569. Pretty easy: I just changed the version in ``generate_schema_wrapper.py`` and ran it.

Still needed:

- [x] figure out what to do with ``latitude`` and ``longitude`` data types & update examples accordingly.
- [x] add ``stderr`` to valid aggregations
- [ ] add API for named datasets? (cc/ @ellisonbg)
",1,4,[]
646,174481221,570,42757577,2018-03-12 20:11:13,2018-03-12 20:28:11,closed,MAINT: add tools to automatically update schemas,"This refactors the code generation tools to automatically download the appropriate schema version from ``https://vega.github.io/schema/``.

Additionally, it moves the schema.json files into the ``schema/`` directories, along with other generated code.

Finally, this updates to the most recent releases of vega v2/v3 and vega-lite v1/v2.",1,4,[]
647,174246405,566,42757577,2018-03-11 22:30:08,2018-03-12 15:11:18,closed,Reorganizing the documentation for the 2.0 release,"This PR contains a bunch of work on the documentation in preparation for the 2.0 release:

- [x] Reorganize the files, index, TOC, etc.
- [x] Clean up some of the visual styles.
- [x] Document installation for different frontends.
- [x] Document renderers and data transformers.",8,6,[]
648,174184430,565,42757577,2018-03-10 19:03:08,2018-03-12 15:50:03,closed,Fix traceback when displaying chart with invalid spec,"This addresses #480, with a workaround of the issue in https://github.com/ipython/ipython/issues/11038

@ellisonbg – I'd appreciate your opinion on the approach I used here.

After this, the traceback in #480 looks like this:
```python
import altair as alt
alt.Chart()
```
```python-traceback
---------------------------------------------------------------------------
SchemaValidationError                     Traceback (most recent call last)
~/github/altair-viz/altair/altair/vegalite/v2/api.py in to_dict(self, *args, **kwargs)
    254         if dct is None:
    255             kwargs['validate'] = 'deep'
--> 256             dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs)
    257 
    258         if is_top_level:

~/github/altair-viz/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    228                 self.validate(result)
    229             except jsonschema.ValidationError as err:
--> 230                 raise SchemaValidationError(self, err)
    231         return result
    232 

SchemaValidationError: Invalid specification

        altair.vegalite.v2.api.Chart, validating 'required'

        'mark' is a required property
        
```",3,1,[]
649,174086679,564,42757577,2018-03-09 19:20:37,2018-03-09 20:22:03,closed,MAINT: fix behavior of from_dict,"This is a maintenance fix for a subtle bug I came across. The issue was that when running ``from_dict``, altair would consider any subclass of ``SchemaBase`` as a potential wrapper for the generated class hierarchy.

What this meant is that if you, say, imported both vega-lite and vega wrappers, you could get cross-talk between them when using from_dict if they had common schemas.

This PR changes the auto-generated code so that each set of wrappers inherits from its own special base class, which ensures that this kind of cross-talk does not happen.",1,1,[]
650,173919866,562,42757577,2018-03-09 05:03:49,2018-03-09 18:37:56,closed,Return of the expr,"This is a stripped-down verison of the ``expr`` tools... the ``expr.DataFrame`` and ``expr.Series`` are gone. All this does is give you the ability to generate transform/filter expressions using Python objects rather than by writing javascript strings.

Without the ``expr`` tools, all filter/calculate transforms have do be defined as strings like this

```python
chart.transform_filter(""sin(datum.val1) < 2 * PI * datum.val2"")
```

With the expr transforms, you can do

```python
from altair.expr import sin, PI, datum
chart.transform_filter(sin(datum.val1) < 2 * PI * datum.val2)
```

One benefit is that many errors will be caught on the Python side, rather than within the renderer.

Another benefit is that ``expr`` will tab-complete to list all the available functions and constants, so it makes it easier for users to remember the available functions and constants.",5,7,[]
651,173825142,561,42757577,2018-03-08 19:17:58,2018-03-09 20:20:39,closed,Add stem leaf plot example,My attempt at a stem and leaf plot. ,8,4,[]
652,173816580,560,42757577,2018-03-08 18:40:55,2018-03-08 18:44:30,closed,Add tutorials & mini-gallery to sphinx docs,,1,12,[]
653,173815964,559,42757577,2018-03-08 18:38:01,2018-03-08 18:55:05,closed,Facet chart,,3,1,[]
654,173058020,556,42757577,2018-03-06 04:55:54,2018-03-06 12:58:51,closed,Add savechart() method to vegalite/v2,,1,6,[]
655,172985706,555,42757577,2018-03-05 21:03:59,2018-03-05 21:17:20,closed,ENH: wrap to_dict() tracebacks for more user-friendly errors,"This does two things:

- adds a custom exception that wraps ``jsonschema.ValidationError`` and provides tracebacks that are more useful for Altair specifications

- adds a ``validate='deep'`` option that triggers any time there is a validation error on a top-level object.

The result is friendlier tracebacks; for example (compare to #480):

```python
import altair as alt
alt.Chart()

---------------------------------------------------------------------------
SchemaValidationError                     Traceback (most recent call last)
~/anaconda/envs/vega3/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj, include, exclude)
    968 
    969             if method is not None:
--> 970                 return method(include=include, exclude=exclude)
    971             return None
    972         else:

~/github/altair-viz/altair/altair/vegalite/v2/api.py in _repr_mimebundle_(self, include, exclude)
    239     def _repr_mimebundle_(self, include, exclude):
    240         """"""Return a MIME bundle for display in Jupyter frontends.""""""
--> 241         return renderers.get()(self.to_dict())
    242 
    243     def repeat(self, row=Undefined, column=Undefined, **kwargs):

~/github/altair-viz/altair/altair/vegalite/v2/api.py in to_dict(self, *args, **kwargs)
    212         if dct is None:
    213             kwargs['validate'] = 'deep'
--> 214             dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs)
    215 
    216         if is_top_level:

~/github/altair-viz/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    225                 self.validate(result)
    226             except jsonschema.ValidationError as err:
--> 227                 raise SchemaValidationError(self, err)
    228         return result
    229 

SchemaValidationError: Invalid specification

        altair.vegalite.v2.api.Chart, validating 'required'

        'mark' is a required property
```",1,2,[]
656,172940310,554,42757577,2018-03-05 17:52:52,2018-03-05 18:41:02,closed,Add programmatic export utility based on selenium and chrome-headless,"This allows you to save altair charts to PNG without going to the browser.

Dependencies can be installed this way:

```
$ conda install selenium PIL
$ conda install -c clinicalgraphics chromedriver
```

Then you can use the utility this way:

```python
import alt
chart = alt.Chart(...)  # make your favorite chart here

from altair.utils import save_spec
save_spec(chart.to_dict(), 'mychart.png')
```

Eventually we can make this more streamlined for the user (e.g. ``chart.save('mychart.png')``) but we'll have to figure out the dependency story... and I wanted to get the initial version of this utility committed so that I can use it to build docs for the release candidate.",1,3,[]
657,172897564,553,42757577,2018-03-05 15:23:22,2018-03-05 18:06:02,closed,Horizon Graph Example,I made the Horizon Graph example from the vega-lite website. I had never heard of these plots before. ,1,1,[]
658,172701362,552,42757577,2018-03-04 04:05:32,2018-03-07 21:04:24,closed,WIP: Build Infrastructure for Sphinx Docs,"This PR adds the infrastructure for using Altair within Sphinx, and begins construction of Altair's HTML website.

TODO

- [x] adapt old extension to work with new Altair
- [x] move ``altairplot`` directive to ``altair.sphinxext`` so others can use it
- [x] make ``exec()`` code more robust
- [x] handle repr output
- [x] add example gallery directive (requires #554)",2,15,[]
659,172679488,551,42757577,2018-03-03 18:04:36,2018-03-03 20:14:51,closed,Added Random Number Seed,I think examples which use random numbers should be seeded for repeatability ,0,1,[]
660,172545967,550,42757577,2018-03-02 16:29:07,2018-03-02 18:43:27,closed,moved line to be behind the circles,"In reviewing this the line was on top of the dots and looked strange.
Sorry for missing this before.",1,1,[]
661,172393042,548,42757577,2018-03-02 00:32:59,2018-03-02 00:41:37,closed,Improve auto-generated docs,,1,3,[]
662,172363237,547,42757577,2018-03-01 21:48:53,2018-03-01 21:53:20,closed,Filter Example Edit,I changed `transform` to a `transform_filter` for a cleaner example,1,1,[]
663,172361824,546,42757577,2018-03-01 21:42:44,2018-03-02 00:30:19,closed,Validate on instantiation,"This PR adds code that validates Schema classes when they're instantiated, rather than only when they're converted to a dictionary. This significantly improves the user experience (see examples below)

The downsides of this change are:

- increased code complexity: much more is happening in ``SchemaBase`` to accomplish this, and to make certain this kind of validation is disabled in cases that it causes issues (for example, when you do something like ``encode(x='Origin')``, the encoding is not valid until you can add type information, which requires data that may not be available until the final serialization).
- chart creation is a bit slower, because lower-level parts of the chart are being repeatedly validated as the chart is built up. In practice, that's only really noticeable when building several dozen examples back-to-back.
- some approaches that may have previously worked (such as creating an empty object and then adding attributes sequentially) will now raise an error. e.g. you could not do
    ```python
    sel = alt.selection()
    sel.type = 'interval'
    ```
    because ``type`` is required by the schema at the time it's instantiated. I've disabled this validation check on all top-level objects ('Chart', 'LayeredChart', 'X', 'Color', etc.), and I think that covers 99% of the cases where people use this pattern.

I *think* those downsides are worth swallowing for the added usability of informative error messages. In case performance is critical, I added a ``DEBUG_MODE`` flag that can be set to False; when it is, the chart will only be validated once, after the final serialization is constructed.

## Previous behavior

Before this PR, if you make a mistake somewhere deep in the chart, this is the kind of traceback you get:

```python
import altair as alt
from vega_datasets import data

driving = data.driving.url

base = alt.Chart(driving).encode(
    x = alt.X('miles:Q', scale = alt.Scale(zero=False)), 
    y = alt.Y('gas:Q', scale = alt.Scale(zero='false')),
    order = 'year:Q'
)

chart = base.mark_line() + base.mark_point().interactive()

chart.to_dict()
```

```
---------------------------------------------------------------------------
ValidationError                           Traceback (most recent call last)
<ipython-input-1-071b9cebc769> in <module>()
     13 chart = base.mark_line() + base.mark_point().interactive()
     14 
---> 15 chart.to_dict()

~/github/altair-viz/altair/altair/vegalite/v2/api.py in to_dict(self, *args, **kwargs)
    176         kwargs['context'] = context
    177 
--> 178         dct = super(TopLevelMixin, copy).to_dict(*args, **kwargs)
    179 
    180         if is_top_level:

~/github/altair-viz/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    153                              ""cannot serialize to dict"".format(self.__class__))
    154         if validate:
--> 155             self.validate(result)
    156         return result
    157 

~/github/altair-viz/altair/altair/utils/schemapi.py in validate(cls, instance, schema)
    192             schema = cls._schema
    193         resolver = jsonschema.RefResolver.from_schema(cls._rootschema or cls._schema)
--> 194         return jsonschema.validate(instance, schema, resolver=resolver)
    195 
    196     @classmethod

~/anaconda/envs/vega3/lib/python3.6/site-packages/jsonschema/validators.py in validate(instance, schema, cls, *args, **kwargs)
    539         cls = validator_for(schema)
    540     cls.check_schema(schema)
--> 541     cls(schema, *args, **kwargs).validate(instance)

~/anaconda/envs/vega3/lib/python3.6/site-packages/jsonschema/validators.py in validate(self, *args, **kwargs)
    128         def validate(self, *args, **kwargs):
    129             for error in self.iter_errors(*args, **kwargs):
--> 130                 raise error
    131 
    132         def is_type(self, instance, type):

ValidationError: {'mark': 'line', 'data': {'url': 'https://vega.github.io/vega-datasets/data/driving.json'}, 'encoding': {'order': {'type': 'quantitative', 'field': 'year'}, 'x': {'type': 'quantitative', 'field': 'miles', 'scale': {'zero': False}}, 'y': {'type': 'quantitative', 'field': 'gas', 'scale': {'zero': 'false'}}}} is not valid under any of the given schemas

Failed validating 'anyOf' in schema['properties']['layer']['items']:
    {'anyOf': [{'$ref': '#/definitions/LayerSpec'},
               {'$ref': '#/definitions/CompositeUnitSpec'}]}

On instance['layer'][0]:
    {'data': {'url': 'https://vega.github.io/vega-datasets/data/driving.json'},
     'encoding': {'order': {'field': 'year', 'type': 'quantitative'},
                  'x': {'field': 'miles',
                        'scale': {'zero': False},
                        'type': 'quantitative'},
                  'y': {'field': 'gas',
                        'scale': {'zero': 'false'},
                        'type': 'quantitative'}},
     'mark': 'line'}
```

Not much specific information about where the code went wrong... it basically spits out the entire chart serialization and tells you that it's invalid, and it's up to you to decipher why.

After this PR, the behavior looks like this:

```python
import altair as alt
from vega_datasets import data

driving = data.driving.url

base = alt.Chart(driving).encode(
    x = alt.X('miles:Q', scale = alt.Scale(zero=False)), 
    y = alt.Y('gas:Q', scale = alt.Scale(zero='false')),
    order = 'year:Q'
)

chart = base.mark_line() + base.mark_point().interactive()

chart.to_dict()
```

```
---------------------------------------------------------------------------
ValidationError                           Traceback (most recent call last)
<ipython-input-1-3f4dc1ac6e49> in <module>()
      6 base = alt.Chart(driving).encode(
      7     x = alt.X('miles:Q', scale = alt.Scale(zero=False)),
----> 8     y = alt.Y('gas:Q', scale = alt.Scale(zero='false')),
      9     order = 'year:Q'
     10 )

~/github/altair-viz/altair/altair/vegalite/v2/schema/core.py in __init__(self, base, clamp, domain, exponent, interpolate, nice, padding, paddingInner, paddingOuter, range, rangeStep, round, scheme, type, zero, **kwds)
   4557                                     paddingOuter=paddingOuter, range=range,
   4558                                     rangeStep=rangeStep, round=round, scheme=scheme,
-> 4559                                     type=type, zero=zero, **kwds)
   4560 
   4561 

~/github/altair-viz/altair/altair/utils/schemapi.py in __init__(self, *args, **kwds)
     76 
     77         if DEBUG_MODE and self._class_is_valid_at_instantiation:
---> 78             dct = self.to_dict(validate=True)
     79 
     80     def copy(self, deep=True, ignore=()):

~/github/altair-viz/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    189                              ""cannot serialize to dict"".format(self.__class__))
    190         if validate:
--> 191             self.validate(result)
    192         return result
    193 

~/github/altair-viz/altair/altair/utils/schemapi.py in validate(cls, instance, schema)
    228             schema = cls._schema
    229         resolver = jsonschema.RefResolver.from_schema(cls._rootschema or cls._schema)
--> 230         return jsonschema.validate(instance, schema, resolver=resolver)
    231 
    232     @classmethod

~/anaconda/envs/vega3/lib/python3.6/site-packages/jsonschema/validators.py in validate(instance, schema, cls, *args, **kwargs)
    539         cls = validator_for(schema)
    540     cls.check_schema(schema)
--> 541     cls(schema, *args, **kwargs).validate(instance)

~/anaconda/envs/vega3/lib/python3.6/site-packages/jsonschema/validators.py in validate(self, *args, **kwargs)
    128         def validate(self, *args, **kwargs):
    129             for error in self.iter_errors(*args, **kwargs):
--> 130                 raise error
    131 
    132         def is_type(self, instance, type):

ValidationError: 'false' is not of type 'boolean'

Failed validating 'type' in schema['properties']['zero']:
    {'description': 'If `true`, ensures that a zero baseline value is '
                    'included in the scale domain.\n'
                    '\n'
                    '__Default value:__ `true` for x and y channels if the '
                    'quantitative field is not binned and no custom '
                    '`domain` is provided; `false` otherwise.\n'
                    '\n'
                    '__Note:__ Log, time, and utc scales do not support '
                    '`zero`.',
     'type': 'boolean'}

On instance['zero']:
    'false'
```

The error is raised **when the class is instantiated**, which means you have the Python code context to help you figure out where things went wrong.

",5,2,[]
664,172352786,544,42757577,2018-03-01 21:02:34,2018-03-01 22:03:15,closed,Missed URL fix,,1,1,[]
665,172341910,543,42757577,2018-03-01 20:15:42,2018-03-01 23:38:39,closed,Cumulative Wiki Donations Example,,1,1,[]
666,172333660,542,42757577,2018-03-01 19:41:14,2018-03-01 23:36:39,closed,Candlestick Chart Example,,1,1,[]
667,172323209,541,42757577,2018-03-01 18:57:06,2018-03-01 19:03:19,closed,Fix condition,"This fixes some subtle bugs in ``alt.condition`` that were constructing invalid condition specs.

I prefer not to reveal how long this took me to fix :smile:",0,2,[]
668,172297628,540,42757577,2018-03-01 17:07:49,2018-03-01 19:04:31,closed,Added g3o2's Dot-Dash Plot Example,,5,2,[]
669,172091573,537,42757577,2018-02-28 22:27:18,2018-02-28 23:07:23,closed,Nonlocal URL Fix,I looked over the examples and made changes where necessary. Most changes are adding type information.  ,1,1,[]
670,172024571,534,42757577,2018-02-28 17:45:06,2018-02-28 21:09:31,closed,Layered Histogram Example,I know technically a layered bar chart is the same thing as a layered histogram but I thought this example was useful. ,3,2,[]
671,172011466,533,42757577,2018-02-28 16:53:41,2018-03-01 02:35:17,closed,ENH: add RepeatChart & example,"This PR adds a ``RepeatChart`` which allows repeated specs. For example:

```python
import altair as alt
from vega_datasets import data

chart = alt.Chart(data.cars.url).mark_circle().encode(
    alt.X(alt.repeat_column(), type='quantitative'),
    alt.Y(alt.repeat_row(), type='quantitative'),
    color='Origin:N'
).properties(
    width=250,
    height=250
).interactive()

alt.RepeatChart(chart).set_repeat(
    row=['Horsepower', 'Acceleration', 'Miles_per_Gallon'],
    column=['Miles_per_Gallon', 'Acceleration', 'Horsepower']
)
```
![vega 1](https://user-images.githubusercontent.com/781659/36800495-89418f04-1c64-11e8-8c37-5c812ce6e973.png)

If you run this example live, you'll see that panning and zooming are linked across plots.

I'd initially thought we'd leave the repeat chart out of the top-level API, and instead focus on using Python-side loops to construct these kinds of specs. But in trying to duplicate some of the vega-lite examples, that proved to be very clunky.

I think the API I proposed here is still a bit awkward, and I'd be happy to hear any thoughts on how it might be improved cc/ @kanitw @domoritz @ellisonbg
",16,3,[]
672,171987313,532,42757577,2018-02-28 15:31:53,2018-02-28 15:47:55,closed,Line chart with Confidence Interval Band Example,,1,1,[]
673,171978780,531,42757577,2018-02-28 15:03:07,2018-02-28 17:12:56,closed,Polynomial Fit Example,,1,2,[]
674,171976601,530,42757577,2018-02-28 14:55:53,2018-02-28 15:45:13,closed,removed the second bar2 from chart string,There was an extra mention of bar2 - it is now removed,0,1,[]
675,171964673,529,42757577,2018-02-28 14:14:11,2018-03-01 03:21:23,closed,Interactive Examples,This adds a few additional examples that make use of interactive features.,1,4,[]
676,171810296,528,42757577,2018-02-27 23:01:41,2018-03-01 02:48:23,closed,Transform method,"This adds a ``transform_filter``, ``transform_calculate``, ``transform_bin``, etc. methods to top-level charts, so you can make a spec like this:

```python
import altair as alt
from vega_datasets import data

source = data.population()

chart = alt.Chart(source).mark_bar().encode(
    x='sum(people):Q',
    y='age:O'
).transform_filter(""datum.year == 2000"")
```
![vega](https://user-images.githubusercontent.com/781659/36760347-4a4d68bc-1bcf-11e8-8a14-f1a6538729c8.png)",7,5,[]
677,171800627,527,42757577,2018-02-27 22:15:16,2018-02-27 23:09:07,closed,Multifeature Scatter Plot Example,Trying to recreated some plots from your book. ,1,1,[]
678,171791071,526,42757577,2018-02-27 21:35:05,2018-02-27 21:46:02,closed,ENH: add top-level configure_* methods,These are auto-generated within a mixin class.,0,1,[]
679,171732037,525,42757577,2018-02-27 17:29:22,2018-02-27 18:32:07,closed,added vega-lite example: grouped bar chart,"Note, this uses a configuration line:
chart.config = {""view"": {""stroke"": ""transparent""}, ""axis"": {""domainWidth"": 1}}

Which is what was done in:
https://github.com/altair-viz/altair/pull/473/files

Jake, I did not know if you wanted this merged like you did the last one I just mentioned.  I am assuming that when these options show up in the api they will be here:
https://github.com/altair-viz/altair/blob/master/altair/vegalite/v2/api.py#L306
?

Asking as I am trying to dive a bit deeper and learn more.",1,1,[]
680,171704364,524,42757577,2018-02-27 15:54:30,2018-02-27 16:00:32,closed,added example from vega-lite: Histogram with a Global Mean Overlay,,1,1,[]
681,171685294,523,42757577,2018-02-27 14:53:01,2018-02-27 15:32:48,closed,Removed duplicate airports example,There seemed to be two examples of the same plot `airports.py` and `us_airports.py`,1,1,[]
682,171681025,522,42757577,2018-02-27 14:38:31,2018-02-27 15:33:56,closed,Error Bars showing Confidence Interval Example,,1,1,[]
683,171679843,521,42757577,2018-02-27 14:34:36,2018-02-27 15:59:28,closed,added vega-lite example: mean overlay..bar line layered chart,"This is working and looks like:
https://vega.github.io/vega-lite/examples/layer_precipitation_mean.html

But, I can't seem to specify a size.
Obviously size = alt.Size(value = 3)) won't work because it requires a field.
In this example there is no field - we are using a calculated average and so we just need to set a static size.

I tried this: mark_rule(color = 'red', size = 3)
Which does not throw an error - but it also does not do anything (changing it to any number even 300).",2,2,[]
684,171672753,520,42757577,2018-02-27 14:09:38,2018-02-27 15:57:46,closed,added vega-lite example: bar chart with highlight,"I have having difficulty moving the text around in the plot, if anyone has ideas.

Here is the json from the vega-lite example:
{
        ""mark"": {
          ""type"": ""text"",
          ""align"": ""left"",
          ""dx"": 215,
          ""dy"": -5
        }

here is what it should look like:
https://vega.github.io/vega-lite/examples/layer_bar_annotations.html",3,2,[]
685,171647161,519,42757577,2018-02-27 12:24:06,2018-02-27 13:59:02,closed,added example from vega-lite: us airports,,1,1,[]
686,171562255,518,42757577,2018-02-27 04:41:13,2018-02-27 04:46:58,closed,Change default width/height to config.view.width/height,Closes #482 ,1,1,[]
687,171507621,516,42757577,2018-02-26 22:16:06,2018-02-27 21:19:01,closed,added example from vega-lite: one dot per zipcode,"Note,
I had to have the row in here:
zipcodes = zipcodes[5000:10000]

to limit the amount of data or I get the error:
MaxRowsError: The number of rows in your dataset is greater than the max of 5000

and searching in the repo I don't see a way to temporarily lift that restriction.",12,5,[]
688,171464056,514,42757577,2018-02-26 19:08:55,2018-03-26 18:50:26,closed,Deviation ellipses example,"This is an example showing bivariate deviation ellipses of petal length and width of three iris species. In Jupyter lab, it works only if chart_deviation is printed before printing chart_points + chart_deviation (error message below). A more complete example could include a pairs plot including petal and sepal dimensions, with ellipses. Is it feasible? 

```
---------------------------------------------------------------------------
KeyError                                  Traceback (most recent call last)
~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)
   2524             try:
-> 2525                 return self._engine.get_loc(key)
   2526             except KeyError:

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: 'index'

During handling of the above exception, another exception occurred:

KeyError                                  Traceback (most recent call last)
~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj, include, exclude)
    968 
    969             if method is not None:
--> 970                 return method(include=include, exclude=exclude)
    971             return None
    972         else:

~/Documents/GitHub/altair/altair/vegalite/v2/api.py in _repr_mimebundle_(self, include, exclude)
     56     def _repr_mimebundle_(self, include, exclude):
     57         """"""Return a MIME bundle for display in Jupyter frontends.""""""
---> 58         return renderers.get()(self.to_dict())
     59 
     60 

~/Documents/GitHub/altair/altair/vegalite/v2/api.py in to_dict(self, *args, **kwargs)
     39             context['data'] = original_data
     40         kwargs['context'] = context
---> 41         return super(TopLevelMixin, self).to_dict(*args, **kwargs)
     42 
     43     # Layering and stacking

~/Documents/GitHub/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    143             result = _todict(self._args[0])
    144         elif not self._args:
--> 145             result = _todict({k: v for k, v in self._kwds.items()
    146                               if k not in ignore})
    147         else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    135                 return [_todict(v) for v in val]
    136             elif isinstance(val, dict):
--> 137                 return {k: _todict(v) for k, v in val.items()
    138                         if v is not Undefined}
    139             else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in <dictcomp>(.0)
    136             elif isinstance(val, dict):
    137                 return {k: _todict(v) for k, v in val.items()
--> 138                         if v is not Undefined}
    139             else:
    140                 return val

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    133                 return val.to_dict(validate=False, context=context)
    134             elif isinstance(val, list):
--> 135                 return [_todict(v) for v in val]
    136             elif isinstance(val, dict):
    137                 return {k: _todict(v) for k, v in val.items()

~/Documents/GitHub/altair/altair/utils/schemapi.py in <listcomp>(.0)
    133                 return val.to_dict(validate=False, context=context)
    134             elif isinstance(val, list):
--> 135                 return [_todict(v) for v in val]
    136             elif isinstance(val, dict):
    137                 return {k: _todict(v) for k, v in val.items()

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    131             if isinstance(val, SchemaBase):
    132                 # only validate at the top level
--> 133                 return val.to_dict(validate=False, context=context)
    134             elif isinstance(val, list):
    135                 return [_todict(v) for v in val]

~/Documents/GitHub/altair/altair/vegalite/v2/api.py in to_dict(self, *args, **kwargs)
     39             context['data'] = original_data
     40         kwargs['context'] = context
---> 41         return super(TopLevelMixin, self).to_dict(*args, **kwargs)
     42 
     43     # Layering and stacking

~/Documents/GitHub/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    143             result = _todict(self._args[0])
    144         elif not self._args:
--> 145             result = _todict({k: v for k, v in self._kwds.items()
    146                               if k not in ignore})
    147         else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    135                 return [_todict(v) for v in val]
    136             elif isinstance(val, dict):
--> 137                 return {k: _todict(v) for k, v in val.items()
    138                         if v is not Undefined}
    139             else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in <dictcomp>(.0)
    136             elif isinstance(val, dict):
    137                 return {k: _todict(v) for k, v in val.items()
--> 138                         if v is not Undefined}
    139             else:
    140                 return val

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    131             if isinstance(val, SchemaBase):
    132                 # only validate at the top level
--> 133                 return val.to_dict(validate=False, context=context)
    134             elif isinstance(val, list):
    135                 return [_todict(v) for v in val]

~/Documents/GitHub/altair/altair/utils/schemapi.py in to_dict(self, validate, ignore, context)
    143             result = _todict(self._args[0])
    144         elif not self._args:
--> 145             result = _todict({k: v for k, v in self._kwds.items()
    146                               if k not in ignore})
    147         else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    135                 return [_todict(v) for v in val]
    136             elif isinstance(val, dict):
--> 137                 return {k: _todict(v) for k, v in val.items()
    138                         if v is not Undefined}
    139             else:

~/Documents/GitHub/altair/altair/utils/schemapi.py in <dictcomp>(.0)
    136             elif isinstance(val, dict):
    137                 return {k: _todict(v) for k, v in val.items()
--> 138                         if v is not Undefined}
    139             else:
    140                 return val

~/Documents/GitHub/altair/altair/utils/schemapi.py in _todict(val)
    131             if isinstance(val, SchemaBase):
    132                 # only validate at the top level
--> 133                 return val.to_dict(validate=False, context=context)
    134             elif isinstance(val, list):
    135                 return [_todict(v) for v in val]

~/Documents/GitHub/altair/altair/vegalite/v2/schema/channels.py in to_dict(self, validate, ignore, context)
    108         type_ = getattr(self, 'type', Undefined)
    109         if type_ is Undefined and 'data' in context:
--> 110             kwds = parse_shorthand_plus_data(self.field, context['data'])
    111         else:
    112             kwds = parse_shorthand(self.field)

~/Documents/GitHub/altair/altair/utils/core.py in parse_shorthand_plus_data(shorthand, data)
    248             raise ValueError(""type must be specified unless data is provided ""
    249                              ""in the form of a dataframe."")
--> 250         col = data[attrs['field']]
    251         attrs['type'] = infer_vegalite_type(col)
    252     return attrs

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/frame.py in __getitem__(self, key)
   2137             return self._getitem_multilevel(key)
   2138         else:
-> 2139             return self._getitem_column(key)
   2140 
   2141     def _getitem_column(self, key):

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/frame.py in _getitem_column(self, key)
   2144         # get column
   2145         if self.columns.is_unique:
-> 2146             return self._get_item_cache(key)
   2147 
   2148         # duplicate columns & possible reduce dimensionality

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/generic.py in _get_item_cache(self, item)
   1840         res = cache.get(item)
   1841         if res is None:
-> 1842             values = self._data.get(item)
   1843             res = self._box_item_values(item, values)
   1844             cache[item] = res

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/internals.py in get(self, item, fastpath)
   3841 
   3842             if not isna(item):
-> 3843                 loc = self.items.get_loc(item)
   3844             else:
   3845                 indexer = np.arange(len(self.items))[isna(self.items)]

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/pandas/core/indexes/base.py in get_loc(self, key, method, tolerance)
   2525                 return self._engine.get_loc(key)
   2526             except KeyError:
-> 2527                 return self._engine.get_loc(self._maybe_cast_indexer(key))
   2528 
   2529         indexer = self.get_indexer([key], method=method, tolerance=tolerance)

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/index.pyx in pandas._libs.index.IndexEngine.get_loc()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

pandas/_libs/hashtable_class_helper.pxi in pandas._libs.hashtable.PyObjectHashTable.get_item()

KeyError: 'index'

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-14-850840d4c0a1> in <module>()
     60 
     61 chart = chart_points + chart_deviation
---> 62 chart

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/IPython/core/displayhook.py in __call__(self, result)
    255             self.start_displayhook()
    256             self.write_output_prompt()
--> 257             format_dict, md_dict = self.compute_format_data(result)
    258             self.update_user_ns(result)
    259             self.fill_exec_result(result)

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/IPython/core/displayhook.py in compute_format_data(self, result)
    149 
    150         """"""
--> 151         return self.shell.display_formatter.format(result)
    152 
    153     # This can be set to True by the write_output_prompt method in a subclass

~/bin/anaconda3/envs/altair-env/lib/python3.6/site-packages/IPython/core/formatters.py in format(self, obj, include, exclude)
    148             return {}, {}
    149 
--> 150         format_dict, md_dict = self.mimebundle_formatter(obj, include=include, exclude=exclude)
    151 
    152         if format_dict or md_dict:

TypeError: 'NoneType' object is not iterable
```",3,1,[]
689,171449730,511,42757577,2018-02-26 18:06:14,2018-02-26 20:24:48,closed,added vega-lite example: layered bar chart,,1,1,[]
690,171448839,510,42757577,2018-02-26 18:02:21,2018-02-26 20:25:30,closed,added vega-lite example: normalized stacked bar chart,,1,1,[]
691,171438336,509,42757577,2018-02-26 17:18:12,2018-02-26 17:34:09,closed,added aggregate bar chart from vega-lite,,1,1,[]
692,171436308,508,42757577,2018-02-26 17:10:29,2018-02-26 17:33:18,closed,Bar Chart with Labels Example,,1,1,[]
693,171431387,507,42757577,2018-02-26 16:52:55,2018-02-26 16:56:30,closed,added the vega-lite trellis area example,,1,1,[]
694,171423384,506,42757577,2018-02-26 16:25:22,2018-02-26 16:34:57,closed,added the vega-lite example of natural disasters,,1,1,[]
695,171418006,504,42757577,2018-02-26 16:06:35,2018-02-26 16:21:35,closed,Gapminder Bubble Plot Example,,1,1,[]
696,171411539,503,42757577,2018-02-26 15:44:57,2018-02-26 16:20:32,closed,added the vega-lite example of table bubble plot,,1,1,[]
697,171275784,502,42757577,2018-02-26 03:35:58,2018-02-26 04:27:13,closed,#457: Add Box Plot (Max/Min Whiskers) Example,"Implements https://vega.github.io/vega-lite/examples/box-plot_minmax_2D_vertical_normalized.html .

A few open questions on style:

- Wasn't sure if there's a way to carry over the ""create calculated fields and give them names"" concept from the vega-lite spec, so I can rewrite this if there's a more idiomatic way to do this.

- The `size` parameter passed into the `mark_rule` and `mark_tick` methods appears to have no effect, as in the rendered chart, the widths of those items stays constant

- The `style` parameter appears to have no effect either (for setting rule style to `boxWhisker`).",2,1,[]
698,171264479,501,42757577,2018-02-26 01:21:24,2018-02-26 04:27:59,closed,#457: Add Basic Trellis Histogram Example,"Implements the vega-lite example from

https://vega.github.io/vega-lite/examples/trellis_bar_histogram.html

Note that the row labels will show up on the right instead of on the left (as they are in the vega-lite online example).",1,1,[]
699,171263654,500,42757577,2018-02-26 01:09:23,2018-02-26 04:30:22,closed,#457: Add Basic Histogram Example,"Implements https://vega.github.io/vega-lite/examples/histogram.html .

The primary change compared to Altair 1.3 seems to be that the `Bin` class was renamed `BinTransform`. ( https://altair-viz.github.io/gallery/histogram.html ) . 

I'm not sure if there is a practical difference is between using `:Q` as a suffix, vs explicitly setting `type='quantitative'`. However I felt the second option was more explicit, and so I went with that instead.",1,1,[]
700,171247015,499,42757577,2018-02-25 19:37:14,2018-02-26 01:37:34,closed,added the streamgraph example from vega-lite,"Everything is working except turning off the y-axis.

In the vega-lite json it says:
""axis"": null

I have tried:
axis = False
and
axis = 'null

neither have worked.",4,3,[]
701,171246095,498,42757577,2018-02-25 19:15:52,2018-02-26 01:38:36,closed,added vega-lite example of diverging stacked bar chart,"The parameters inside the axis don't seem to be doing anything when I change them, but I kept them in as they were in the vega-lite example and they are not throwing errors in altair

y = alt.Y('question:N', axis = alt.Axis(title = 'Question',
                                           offset = 5,
                                           ticks = False,
                                           minExtent = 60,
                                           domain = False))",2,2,[]
702,171242117,497,42757577,2018-02-25 17:49:31,2018-02-25 19:14:09,closed,Trellis Stacked Bar Chart Example,Added the Trellis Stacked Bar Chart example. Let me know if the dimensions are too big. ,1,1,[]
703,171239382,496,42757577,2018-02-25 16:53:01,2018-02-27 13:59:28,closed,Added layered heatmap + text example,"Tried to reproduce [this](https://vega.github.io/vega-lite/examples/layer_text_heatmap.html) plot from the vega docs. No idea how to do the final step, which is to change the text color of those rectangles with values greater than 100 to black.

![plot](https://user-images.githubusercontent.com/559360/36644034-f7bf3f94-1a5c-11e8-8cd4-59929f3380ca.png)
",7,2,[]
704,171236156,495,42757577,2018-02-25 15:45:24,2018-02-26 01:39:48,closed,added ranged dot plot example from vega-lite,"One issue,
it looks like I can't pass the transform on the layered chart (well, I can pass it, but it is not reducing the dataset as requested).
I have to do the filters individually for line and point.

Unless I have missed something.

So right now I have the chart.transform commented out with both the line and point transforms in there.",3,2,[]
705,171235832,494,42757577,2018-02-25 15:37:59,2018-02-25 19:27:02,closed,Stacked Area Chart Example,An example of a stacked area chart. I reshaped the original dataset using `pd.melt` to get it into a tidy format. I can make a simpler example with a different dataset but I thought it could be useful to see. ,3,1,[]
706,171234444,493,42757577,2018-02-25 15:08:52,2018-02-25 19:13:22,closed,added the step chart example from vega-lite,,1,2,[]
707,171234236,492,42757577,2018-02-25 15:03:48,2018-02-27 02:32:44,closed,Add US state capitals from vega-lite.,"See also pull request [#5 to vega_datasets](https://github.com/jakevdp/vega_datasets/pull/5) to add the state capitals. 

Please let me know if anything should be adjusted. ",6,2,[]
708,171231845,490,42757577,2018-02-25 14:09:36,2018-02-25 15:04:56,closed,added strip plot example from vega-lite,,1,2,[]
709,171231377,489,42757577,2018-02-25 13:58:42,2018-02-25 15:04:08,closed,added bubble plot example from vega-lite,,1,1,[]
710,171231004,488,42757577,2018-02-25 13:50:06,2018-02-27 13:50:53,closed,added binned scatterplot example from vega-lite,"I will note that:
size = 'count(*)'
does not work and gives a keyerror of:
KeyError: '*'

I thought this was a capability that was here before.
But for this example I just set it to:
size = 'count(IMDB_Rating)'

And it works fine and matches the vega-lite example.",3,3,[]
711,171230634,487,42757577,2018-02-25 13:41:00,2018-02-27 13:50:09,closed,added gantt_chart from vega-lite,"This one is complete - but seems to suffer from the same issue as:
https://github.com/altair-viz/altair/pull/481

Where I can add
scale = alt.Scale(rangeStep = 20)
But it does nothing to the chart.

In this example it appears comically large, and can't be shortened.",3,2,[]
712,171210864,486,42757577,2018-02-25 03:36:24,2018-02-25 03:43:34,closed,BUG: fix handling of context data when multiple datasets present,,0,1,[]
713,171210228,485,42757577,2018-02-25 03:16:55,2018-02-25 14:28:52,closed,adding vega-lite example of layered plot with dual-axis,"Here is one I have been struggling with.  In the vega-lite example:
https://vega.github.io/vega-lite/examples/layer_bar_dual_axis.html

It has this part:
""resolve"": {""scale"": {""y"": ""independent""}}
that sits at the same level as:
""$schema"": ""https://vega.github.io/schema/vega-lite/v2.json"",
  ""data"": {""url"": ""data/seattle-weather.csv""},

I have toyed with ideas like:
y = alt.Y('mean(temp_max)', resolveMode = 'independent'))
also tried to put it in config, but I get errors every time.

I do note that I see resolvemode in here:
https://github.com/altair-viz/altair/blob/0fec41674f062c5e37d5af0b6b318702362f0115/altair/vegalite/v2/vega-lite-schema.json

So I am missing how to connect it up.

Note: the plot included works, it just overwrites the line's y axis with the bar's y axis, if you call out line or bar you will see each looks how they should.  Just combining them I am not seeing the place to add the resolvemode.",5,3,[]
714,171202238,484,42757577,2018-02-24 23:03:15,2018-02-25 14:23:43,closed,added vega-lite example of falkensee,"This has one issue:
When building the final chart
chart = line + recta + point

recta should be in the first position so it does not cover up the lines and points, but if I put recta there errors will result.  line + point + recta work fine as well, just (at this point) can't have recta in first position where it needs to be for the visual composition to work.


The errors are: KeyError: 'population'

I am assuming vega-lite is expecting the full axis with the item in first position - or it is building components before they are loaded(since population is only in the line/points data and not recta's data)?

The vega-lite example is here:
https://vega.github.io/vega-lite/examples/layer_falkensee.html",4,2,[]
715,171199072,483,42757577,2018-02-24 21:42:40,2018-02-25 03:47:35,closed,added trellis scatter plot example from vega-lite,,1,1,[]
716,171198080,481,42757577,2018-02-24 21:18:20,2018-02-27 21:58:33,closed,adding trellis plot from vega-lite,"All works - but for some reason the rangeStep does not seem to be having the affect of reducing the spaces between the y axis items.

It was throwing errors until I did the capital 'S', but now that there aren't any errors - it also does not seem to be changing the chart, even when using extreme values.",1,1,[]
717,171191526,479,42757577,2018-02-24 18:42:26,2018-02-24 21:12:53,closed,adding vega-lite example of table binned heatmap,only issue is I tried many permutations to get the color scheme defined without using the config dictionary method.  If that is implemented I would love to change it - I just could not figure it out if it is there.,2,2,[]
718,171184928,478,42757577,2018-02-24 16:10:26,2018-02-24 21:00:18,closed,added slope graph example from vega-lite examples,,1,1,[]
719,171184412,477,42757577,2018-02-24 15:57:28,2018-02-24 21:01:12,closed,Horizontal stacked bar chart example,A horizontal stacked bar chart using the barley dataset. ,1,1,[]
720,171183098,476,42757577,2018-02-24 15:25:14,2018-02-24 19:56:51,closed,"Add hconcat(), vconcat(), and layer() convenience functions",,0,1,[]
721,171182331,475,42757577,2018-02-24 15:06:15,2018-02-24 15:27:09,closed,MAINT: Update SchemaBase.__getattr__ to be more robust,,0,1,[]
722,171156651,474,42757577,2018-02-24 02:43:31,2018-02-24 15:25:00,closed,add in vega-lite example of line layer rule,"Jake, if I notice things not working while building examples - please let me know if you would rather me file a github issue, or do a pull request of the example noting the difficulties.

I saw this example:
https://github.com/altair-viz/altair/blob/master/altair/vegalite/v2/examples/mutli_series_line.py
and then looked at the vega-lite example:
https://vega.github.io/editor/#/examples/vega-lite/layer_line_color_rule

I noticed that I could not get the .config to modify an attribute, in this case the line:
 chart.config = {'rule': {'size': 20}}
does not seem to be doing anything, so I commented it out for the moment.  I have looked in the vega-lite documentation and I seem to be using the correct terms so I am not sure what is causing it.

I know you showed me how .config can work in this example:
https://github.com/altair-viz/altair/blob/master/altair/vegalite/v2/examples/layered_chart_bar_mark.py

I can't get chart.interactive() to work on the layered plot.
If I un-comment that line I get:
AttributeError: 'super' object has no attribute '__getattr__'

If I only put rule.interactive() on rule I get zooming on the y axis only (undoubtedly because I am only calling y for the rule).
If I only put line.interactive() on line, it works fine.

Is the expectation to not but interactive() on the layered chart - and just do it on one of the component charts?

If that is the case then line.interactive() and add a comment for others.",6,6,[]
723,171134908,473,42757577,2018-02-23 22:48:58,2018-02-23 23:47:58,closed,adding layered chart bar and mark,This is useful to quickly see how performance is against some preset targets.,1,1,[]
724,171134319,472,42757577,2018-02-23 22:45:23,2018-02-23 23:49:05,closed,adding basic scatter plot from vega-lite docs,trying this again with clean copies.,1,1,[]
725,171132903,471,42757577,2018-02-23 22:37:00,2018-02-24 21:02:09,closed,adding simple line example with percent axis,trying this again with clean copies.,2,3,[]
726,171105305,470,42757577,2018-02-23 20:10:22,2018-02-23 23:27:04,closed,Anscombe’s Quartet Example,An example of a Trellis scatter plot,2,2,[]
727,171101854,469,42757577,2018-02-23 19:53:49,2018-02-23 20:21:39,closed,Connected Scatterplot Example,Tried making the [Connected Scatterplot (Lines with Custom Paths)](https://vega.github.io/vega-lite/examples/layer_connected_scatterplot.html) example.,1,1,[]
728,171099262,468,42757577,2018-02-23 19:41:21,2018-02-23 19:43:52,closed,Connected scatterplot Example,Tried making the [Connected Scatterplot (Lines with Custom Paths)](https://vega.github.io/vega-lite/examples/layer_connected_scatterplot.html) example.,0,3,[]
729,171095425,467,42757577,2018-02-23 19:22:53,2018-02-23 21:16:59,closed,Interactive scatter plot,"Added the interactive scatter plot as seen on vega-lite's site.
Everything worked except for adding the shape parameter.",5,2,[]
730,171078752,466,42757577,2018-02-23 18:00:46,2018-02-23 21:04:37,closed,"added layered chart, bar and mark","This could be prettier, I am playing around with the mark attributes but size does not seem to being doing anything.

This is a chart that I have been really waiting for to use in altair - I have been doing it in bokeh since I could not do it in altair.

It is a visual way to see how the goals (in red) are being met by current activity (the bars).",4,3,[]
731,171073294,465,42757577,2018-02-23 17:33:58,2018-02-23 23:49:56,closed,MAINT: add  property to top-level objects on to_dict().,This will make them automatically render correctly when exported to the vega editor.,1,1,[]
732,171072490,464,42757577,2018-02-23 17:30:09,2018-02-23 20:32:14,closed,Added a stacked bar chart example,"I tried recreating the canonical ""weather type"" bar chart.",7,2,[]
733,171057628,463,42757577,2018-02-23 16:27:42,2018-02-27 03:29:30,closed,Interval selection,"This PR is an initial attempt at streamlining the creation and use of selections in Altair. I've added a ``SelectionMapping`` object to the API, which users should not have to directly use. I've also added an ``alt.selection`` function which allows users to create and manipulate named selection.

The example file shows how I envision this working, and it creates an interactive example similar to the one [here](https://vega.github.io/vega-lite/examples/interactive_overview_detail.html).

Any thoughts on this Python API for selections? cc/ @ellisonbg @domoritz @kanitw @jheer",3,7,[]
734,171044551,462,42757577,2018-02-23 15:35:35,2018-02-23 21:17:31,closed,added simple line chart with percent axis,"Trying to do my first commit.
I saw the github request for examples.
I tried to keep the format I saw in the provided example of naming the item as 'chart' to aid in testing.

Please let me know if I have done anything wrong - as this is my first pull request.",5,4,[]
735,171040768,461,42757577,2018-02-23 15:21:12,2018-02-23 15:26:22,closed,Added a multi series line example,I added a multi series line example using the `stocks` dataset. ,1,1,[]
736,170916229,460,42757577,2018-02-23 02:08:40,2018-02-23 03:11:57,closed,Generate Vega wrappers,,0,3,[]
737,170814387,458,42757577,2018-02-22 17:22:58,2018-02-22 17:39:23,closed,Fix travis,simplify travis tests so things pass... for now :smile:,1,5,[]
738,170358678,456,42757577,2018-02-21 01:58:57,2018-02-22 14:02:36,closed,Generate vegalite v1 using new tool chain,responding to #455 ,1,2,[]
739,169757563,453,42757577,2018-02-17 00:46:36,2018-02-20 18:25:16,closed,Proposing true division as vconcat,"I was playing around a bit with the API and found the mapping of `or` to hconcat to be very intuitive:

```python
chart.mark_line() | chart.mark_point()
```

This syntax is easy to mix with the layering operator (`+`), and the mental model seems consistent. However, I found the mapping of subtraction (`-`) to vconcat confusing. The mental model that `+` and `|` establish is ""spatial"" in nature. The operator I was expecting to map onto vconcat was true division (`/`), mainly because in mathematical notation, division is quite literally written by putting one thing over another (spatial in nature). The other aspect of using `-` that was confusing is that it is the inverse of `+` (mathematically) - but that doesn't map well onto using them for layering and vconcat.

This PR proposes to change vconcat from `-` to `/`.

Thoughts? @jakevdp  @craigcitro @domoritz @kanitw",24,1,[]
740,169753916,452,42757577,2018-02-17 00:07:46,2018-02-19 00:45:34,closed,This fixes some bugs and adds tests for the data transformers.,"Pretty straightforward stuff. Right now, the data transformers are within the vegalite package. Most of these things will also be relevant to the vega side of things as well, but I will do that work in a separate PR once work on the vega API begins.",4,4,[]
741,169721424,451,42757577,2018-02-16 20:44:34,2018-02-16 20:44:54,closed,Adjust description,,0,1,[]
742,169649307,450,42757577,2018-02-16 15:17:19,2018-02-20 16:46:39,closed,API change: make chart methods return copies,"With the stacking and layering available in VegaLite 2.0, I think it makes sense to have chart methods return copies of the chart rather than mutate the chart.

What this means is that with this PR in place, we could do things like this:

```python
chart = Chart(data).encode(x='x', y='y')
chart.mark_line() + chart.mark_point()
```
![vega 2](https://user-images.githubusercontent.com/781659/36314673-6caf5dc2-12ea-11e8-952f-5700a25661bc.png)
The result is a layered chart marked by both points and lines

similarly for faceting:
```python
chart = alt.Chart(data).mark_point().encode(y='y')
chart.encode(x='x1') | chart.encode(x='x2')
```
![vega 3](https://user-images.githubusercontent.com/781659/36314659-61621c16-12ea-11e8-888e-c8fa68b3d219.png)
The result is a two-panel side-by-side chart with a shared y-axis, but different encodings on the x axes. Previously this kind of layering and stacking would require much more boilerplate, or an explicit copy of the chart.

The pattern that will not work anymore after this change is code like this:
```python
chart = Chart(data)
chart.mark_line()
chart.encode(x='x', y='y')
```
Instead, you'd have to do
```python
chart = Chart(data)
chart = chart.mark_line()
chart = chart.encode(x='x', y='y')
```

But, to be clear, the standard chaining approach used in our examples will still work correctly after this change:

```python
Chart(data).mark_line().encode(
    x='x',
    y='y'
)
```

I think the advantages of this change far outweigh the disadvantages, but I wanted to get some second opinions before I push it. Any thoughts? cc @ellisonbg @craigcitro @domoritz @kanitw",9,6,[]
743,169411581,446,42757577,2018-02-15 16:00:07,2018-02-15 18:16:12,closed,WIP: Schemapi docstrings,Working on generating more useful docstrings in the auto-generated code.,2,5,[]
744,168697282,445,42757577,2018-02-12 21:49:27,2018-02-14 03:58:52,closed,WIP: basic code generation tools for vega-lite 2,,21,4,[]
745,168411756,443,42757577,2018-02-10 17:36:08,2018-02-12 18:37:25,closed,[WIP] Repo reorg,Getting started on the repo reorganization. The goal here is to support vegalite 1/2 and vega 2/3 with a uniform approach and extensible renderers.,8,22,[]
746,166935627,442,42757577,2018-02-03 00:54:38,2018-03-14 20:28:53,closed,flake8 finds three undefined names,"https://travis-ci.org/altair-viz/altair/jobs/336795398#L1426-L1434
* parse_shorthand() needs to be imported from https://github.com/altair-viz/altair/blob/master/altair/v1/traitlet_utils.py#L165
* Change __path__ --> __schema_path__ on https://github.com/altair-viz/altair/blob/master/tools/altair_tools/generate_interface_v1.py#L274 ?",1,1,[]
747,149671483,429,42757577,2017-10-31 00:45:39,2018-03-14 19:37:47,closed,fix (#424) validation of LayeredChart,"1. validation of LayeredChart is removed
2. data from LayeredChart is broadcasted to sublayers validation code
3. test case for validation of LayeredChart was added
4. allowed fixed values of channels",3,1,[]
748,148010669,425,42757577,2017-10-22 19:58:35,2017-10-23 01:54:42,closed,Fix typo,,0,1,[]
749,147967126,423,42757577,2017-10-21 23:14:39,2017-11-02 00:01:47,closed,Altair logo,"Fixes #212 

This includes two version both in png and svg. The lighter version is for the RTD theme which has a blue background.

![screen shot 2017-10-21 at 4 14 13 pm](https://user-images.githubusercontent.com/27600/31856641-e9fbcf44-b67a-11e7-9c34-fb9756b429a2.png)
",7,3,[]
750,147875416,422,42757577,2017-10-20 19:18:21,2017-10-20 20:24:58,closed,MAINT: push finalize behavior upstream to schemapi,,0,3,[]
751,147706736,421,42757577,2017-10-20 02:31:46,2017-10-20 02:38:18,closed,refactor traitlet_utils,,0,1,[]
752,147417482,418,42757577,2017-10-18 21:40:27,2017-10-20 15:01:10,closed,Fix table cell text wrap,"This implements the fix for #415 cell text wrap issues, adapted from:  http://rackerlabs.github.io/docs-rackspace/tools/rtd-tables.html",2,3,[]
753,147403335,417,42757577,2017-10-18 20:33:04,2017-10-18 21:21:09,closed,Minor design changes to viz in docs,"Improved visual design of Altair visualization rendered in our docs:

<img width=""587"" alt=""screen shot 2017-10-18 at 1 32 25 pm"" src=""https://user-images.githubusercontent.com/27600/31741354-d2d11a78-b408-11e7-852d-346908ba3133.png"">
",3,1,['documentation']
754,147399504,416,42757577,2017-10-18 20:15:46,2017-10-18 20:20:58,closed,MAINT: refactor tools & add datasets/examples versions,Very little change to the Altair codebase itself; this is mostly about maintenance to ease the v2.0 development.,0,1,[]
755,147201583,414,42757577,2017-10-18 03:28:21,2017-10-18 17:12:46,closed,DOC: change website to ReadTheDocs theme,"These are the changes required to use the basic ReadTheDocs theme. Only one nontrivial thing in here: because the theme loads javascript at the bottom rather than the top of each page, we need to use a ``DOMContentLoaded`` listener to build the charts once the rest of the content is loaded.

This is supported by all modern browsers, but not by IE8 or before, which according to [this site](http://caniuse.com/#feat=domcontentloaded) only account for about 0.2% of web traffic.

Can we live with that?",9,1,[]
756,147181741,413,42757577,2017-10-18 00:02:51,2017-10-18 00:03:52,closed,Update changes.md for 1.2.1. releae,,0,1,['documentation']
757,147178043,412,42757577,2017-10-17 23:31:23,2017-10-17 23:40:32,closed,Docs update for 1.2.1,Fixes #402 #359,1,8,['documentation']
758,147104451,410,42757577,2017-10-17 17:27:38,2017-10-17 21:35:17,closed,Use HTTPS prefix in example URLs to fix CORS issue,"Per issue #407, a few examples in the documentation have HTTP-prefixed URLs that result in CORS errors when using Altair in Jupyter Notebook. This commit updates the default URL prefix in the example-syncing functions to `https://`, which should resolve the CORS issue when the examples are synced and the docs are re-built.

@jakevdp, want to take a look at this when you get a chance?",4,2,[]
759,146936165,409,42757577,2017-10-17 03:32:33,2017-10-17 16:57:06,closed,ENH to_dict(): clone chart object before mutation,"As discussed today with @ellisonbg.

This makes it so that exporting and/or visualizing the chart doesn't silently modify the object, but rather creates a clone of the chart before modification.",1,1,[]
760,146026470,405,42757577,2017-10-11 18:27:18,2017-10-11 22:20:06,closed,DOC: use more informative shorthand type description in generated docstrings,Addresses #404 ,6,2,[]
761,146007292,403,42757577,2017-10-11 17:01:22,2018-02-14 04:11:58,closed,Altair version 2.0,"This is based on the multi-version support recently merged into master, and replaces #374 

TODO list:

- [x] make ``schemapi`` work with the subset of JSONSchema used by vega-lite 2.0
- [x] sync & wrap new schema
- [x] sync examples
- [x] make sure ``tools/generate_schema_interface.py`` is generating all channel wrappers and channel collections
- [x] update ``Transform`` and ``Formula`` with the appropriate options
- [ ] fix mechanism for inferring channel class
- [ ] update all the ``configure_*()`` methods
- [ ] add additional top-level objects to ``altair/api.py``
- [ ] make sure ``altair/api.py`` is wrapping all relevant information in each object
- [ ] iterate until all tests pass
- [ ] update requirements so that appropriate vega-lite/vega/vega-embed versions are used in jupyter notebook
- [ ] do a pass at the docs
- [ ] ???",3,11,[]
762,145580251,401,42757577,2017-10-10 01:20:20,2017-10-17 20:41:57,closed,Remove notebook example generation script,This has moved to the altair_notebooks repo with the example notebooks.,2,2,[]
763,144294444,399,42757577,2017-10-02 22:01:45,2017-10-17 20:39:50,closed,Check field names,"This adds a new `_validate_spec` method to the `Chart` object that is called during the last phase of `_finalize` (after shortcuts and expressions have been processed). It catches channels with missing fields and fields that are not in the dataset. It should ignore URL based datasets. Tests are included.

My only concern is how this will function for facetted and layered charts. I fear it will have the same problems that PR #185 does. But it would be a huge usability improvement that would catch the most common sources of silent failures that Altair users see.

I won't merge this until we get a chance to discuss and review...

Fixes #388 ",5,6,['enhancement']
764,144256530,398,42757577,2017-10-02 18:54:28,2017-10-02 21:45:21,closed,More robust MIME rendering and fix tests.,"Fixes #392 

This introduces a `disable_mime_rendering` function and allows it and `enable_mime_rendering` to be called multiple times without side effects.",2,1,[]
765,144104180,394,42757577,2017-10-02 03:04:31,2018-10-15 15:43:26,closed,Initial draft of JOSS paper,"Hi all, here is a draft of a JOSS paper. I would like to submit this to JOSS after the 1.2.1 release comes out. Right now I have listed Jake and I as authors, but if there is anyone else who has contributed that wants to be listed, please post to this issue:

* That you have read the submission and approve of its content
* Your name, orcid, affiliation, etc needed for the YAML metadata.

I am still working on getting all the references in place. Also would love ideas for an example image to include.

Fixes #389 ",32,17,['documentation']
766,144098738,393,42757577,2017-10-02 01:29:28,2017-10-02 18:23:56,closed,Update README,"This is a WIP to get the README ready for the 1.2.1 release. I think I have most things in place, but let's hold off on merging until we are closer to the release and see what else we need to add.

",2,1,['documentation']
767,143527022,391,42757577,2017-09-27 23:57:03,2017-10-02 18:13:49,closed,Remove tutorial notebooks,This also deprecates the tutorial function.,2,1,['documentation']
768,143526083,390,42757577,2017-09-27 23:49:22,2017-10-02 18:23:13,closed,Set version to 1.2.1 and pin vega to 0.4.4,Fixes #352 ,1,1,['maintenance']
769,136059921,377,42757577,2017-08-16 15:50:11,2017-10-02 18:15:08,closed,MAINT: multiple vega-lite versions within Altair,"This PR rearranges some things to allow multiple versions of Vega-Lite to be supported in a single Altair release (addresses #375). So, for example, you could do as normal

```python
import altar as alt

alt.Chart(data).mark_point().encode( ... )
```

or equivalently, 

```python
import altair.v1 as alt

alt.Chart(data).mark_point().encode( ... )
```

Currently ``v1`` is the only option available, but this reorganization of the code will make it easy to add additional versions as well.",4,8,['maintenance']
770,135197150,374,42757577,2017-08-10 18:56:32,2017-10-11 17:01:36,closed,WIP: Altair 2.0,"This is my work in progress PR to update Altair to version 2.0. Note that the bulk of the changed files are examples copied from the vega-lite 2.0 source.

- [x] make ``schemapi`` work with the subset of JSONSchema used by vega-lite 2.0
- [x] sync & wrap new schema
- [x] sync examples
- [x] make sure ``tools/generate_schema_interface.py`` is generating all channel wrappers and channel collections
- [ ] update ``Transform`` and ``Formula`` with the appropriate options
- [ ] update all the ``configure_*()`` methods
- [ ] add additional top-level objects to ``altair/api.py``
- [ ] make sure ``altair/api.py`` is wrapping all relevant information in each object
- [ ] iterate until all tests pass
- [ ] update requirements so that appropriate vega-lite/vega/vega-embed versions are used in jupyter notebook
- [ ] do a pass at the docs
- [ ] ???

With this change, we need to break things before we fix them... so tests are going to fail a lot until they finally don't :smile:",2,3,[]
771,134968980,372,42757577,2017-08-09 19:16:33,2017-08-10 16:36:06,closed,Schema loc,Addresses #370; Built on top of #364 – don't merge until after #364 is merged (may need a rebase),3,2,[]
772,133755649,365,42757577,2017-08-02 16:39:40,2017-08-02 16:47:18,closed,"Bump travis version to 2.7, 3.5, 3.6",,0,2,[]
773,133561227,364,42757577,2017-08-01 20:13:53,2017-08-10 14:46:20,closed,MRG: New schema generator,"This is a rewrite of the core of the altair library, targeting Vega-Lite 1.2, based on the more complete schema parser at http://github.com/altair-viz/schemapi

The reason for this rewrite is that it will make it easier to transition to Vega-Lite 2.0 and other future Vega-Lite versions.

## Still TODO

- [x] decide on final name for ``altair_parser`` package & update references here (now ``schemapi``)
- [x] fix non-ASCII characters for Python 2.7
- [x] re-organize utilities used in ``altair.schema``
- [x] make traitlet shorthand types more meaningful (currently all instances just say ""object"")
- [x] check for required traits in ``ToPython()`` visitor
- [x] fix references to deprecated names in docs (e.g. ``BaseObject``, ``to_altair``)
- [x] use ``required_traits`` rather than ``allow_undefined=False`` in order to not error on intermediate steps
- [x] specialize ``ToCode()`` generator to configure charts using methods like ``mark_point()``.

## Summary of Changes

- The bulk of the code used to generate the Altair API code has been removed from this package, and put in ``schemapi``. Note that everything in ``altair/schema/_interface`` is automatically generated by ``schemapi`` and its extensions in ``tools/generate_schema_interface.py``

- User-facing API should be identical to current master. This is confirmed by the fact that all existing tests pass

- all traitlets objects are now based on the ``JSONTraitlets`` extensions provided by ``schemapi``. One big reason for this is that the default value is now ``undefined``, and a value of ``None`` will be interpreted as an explicit ``null`` in the JSON output.

- deprecated ``to_altair()`` in favor of ``to_python()``

- put all schema API classes in a single file ``_interface/schema.py``, rather than separating them out into individual files

- ``skip`` changed to ``_skip_on_export``

- Addition of ``_required_traits``; an error will be raised if these traits are undefined at export.

- change Travis doc build to use Python 3.x, as there was a unicode error somewhere in sphinx for 2.x (tried debugging for an hour or so, but didn't make any progress)",6,35,[]
774,131383204,358,42757577,2017-07-19 18:00:11,2017-07-19 18:05:45,closed,MAINT: make update_subtraits a helper rather than a baseobject method,This rearranges some code in a way that will streamline the transition to Altair 2.0,1,1,[]
775,131381941,357,42757577,2017-07-19 17:53:59,2017-07-19 17:57:05,closed,MAINT: make update_subtraits a helper rather than a baseobject method,This PR rearranges some code to streamline the transition to Altair 2.0.,1,2,[]
776,128322724,347,42757577,2017-06-30 08:47:55,2017-07-03 14:48:06,closed,correct default url for version 1 of vega-lite.js,The default url for vega-lite.js no longer seems to work which means it has be overwritten in chart.to_html() every time.,3,2,[]
777,128192085,345,42757577,2017-06-29 16:15:43,2017-07-01 02:07:52,closed,Max rows,"Fixes #281 

I still need to add the logic so this trait doesn't get serialized in the `to_dict` method.

Also @jakevdp where do we want to put traitlets like this that are not part of the spec? I put them direclty on the chart and other top level objects, but not sure that makes sense.",6,3,[]
778,128055273,344,42757577,2017-06-29 02:00:51,2017-06-30 17:22:35,closed,Make sure the default mark is a point,Fixed #281,2,2,[]
779,125861573,341,42757577,2017-06-15 16:25:31,2017-06-21 01:23:55,closed,fix error message generation,Fix the exception raise so that error output can actually be caught and examined.,3,1,[]
780,121983665,334,42757577,2017-05-23 12:20:13,2017-06-21 01:27:56,closed,Migrate to pandas.api from pandas.lib where available,"Fixes #332 by using the newer API.

Let me know if we'd rather break compat with older pandas and avoid the import check.",1,1,[]
781,121725215,331,42757577,2017-05-22 08:41:25,2017-05-26 18:34:19,closed,Issue #288,Issue solved by replacing ValueError with TypeError,1,2,[]
782,117392563,324,42757577,2017-04-25 02:18:09,2017-10-17 20:22:52,closed,"DOC: Reorganizes documentation page ""Displaying and Saving""","Goals of this reorganization:

* document `to_*`/`from_*` (in ""Obtaining other representations"")
    * I did not document file IO
* document `Chart.savechart` (in ""Representation output to file"")
* provide clearer purpose for top section
    * labeled top section (""Vega-Lite JSON specification"")
    * trimmed JSON example from 20 to 9 lines.
* Reordered sections for order of usefulness IMO. Sections reordered, in order from most to least useful IMO:
    * ""Displaying in Jupyter notebook""
    * ""Displaying via local HTTP server""
    * ""Representation output to file"" (with a subsection ""Obtaining other representations"")

This fixes the documentation issue I ran into in #322.",0,2,[]
783,117343833,323,42757577,2017-04-24 19:54:21,2017-04-24 20:21:02,closed,ENH: make JS urls configurable in chart.savechart('*.html'),,0,1,[]
784,117306022,321,42757577,2017-04-24 16:29:17,2017-04-24 16:38:11,closed,BUG: change _node to node,,0,1,[]
785,116803473,319,42757577,2017-04-20 15:44:56,2017-04-20 16:03:00,closed,MAINT: fix travis issues; allow doc build to fail,,2,3,[]
786,110768310,308,42757577,2017-03-15 04:39:12,2017-03-15 16:50:53,closed,Fix Javascript URLs,This adds an option to the altairplot extension to specify vega javascript paths. Fixes #306 ,3,2,[]
787,110725733,307,42757577,2017-03-14 21:51:50,2017-10-17 20:22:37,closed,DOC: mention altair_widgets in documentation,"Mentions package `altair_widgets` in documentation and shows GIFs of examples.

I would add an example in the HTML but #306 is blocking tests.",4,2,[]
788,108148056,304,42757577,2017-02-27 16:18:08,2017-02-27 16:26:15,closed,TYPO: colums->columns,,0,1,[]
789,107719333,302,42757577,2017-02-23 21:42:53,2017-02-23 22:08:22,closed,BUG: fix serialization of boolean types,,1,2,[]
790,93059342,265,42757577,2016-11-09 23:30:36,2016-11-10 02:37:00,closed,BUG: respect empty strings as trait values,addresses #264,0,2,[]
791,92866315,261,42757577,2016-11-08 21:51:51,2016-11-08 22:01:08,closed,Update CHANGES.md,Fix pull request links.,1,1,[]
792,92030008,259,42757577,2016-11-02 18:34:44,2016-11-02 18:50:24,closed,MAINT: clean up dir() specialization of top-level objects,Replaces part of #163,0,1,[]
793,91869282,257,42757577,2016-11-01 21:41:23,2016-11-02 17:47:34,closed,MAINT: run sphinx doctests in travis,,1,2,[]
794,91837238,255,42757577,2016-11-01 18:27:18,2016-11-01 21:39:21,closed,DOC: add FAQ on large notebooks,See #249,1,2,[]
795,91738740,252,42757577,2016-11-01 06:43:05,2016-11-01 14:13:33,closed,'mean(temp_range):Q' had a bug in Jupyter Notebook,"There was a bug on [Exploring Data: Seattle Weather](https://altair-viz.github.io/tutorials/exploring-weather.html) when we try the code in Jupyter Notebook:

```python
Chart(df).mark_line().encode(
    X('date:T', timeUnit='month'),
    y='mean(temp_range):Q'
).transform_data(
    calculate=[temp_range]
)
```
However, it was ok if we change `'mean(temp_range):Q'` to `'mean(temp_range)'`.

```python
Chart(df).mark_line().encode(
    X('date:T', timeUnit='month'),
    y='mean(temp_range)'
).transform_data(
    calculate=[temp_range]
)
```",2,1,[]
796,91320932,250,42757577,2016-10-28 04:32:29,2016-10-29 20:05:42,closed,ENH: interactive widget to plot different columns (WIP),"Adds `altair.utils.interact_with` that allows functionality to plot different columns:

![untitled-3](https://cloud.githubusercontent.com/assets/1320475/19794996/fd049b5a-9c9c-11e6-9700-85e3718195c8.gif)

This depends on ipywidgets.interact. I see there's some work on using the branch altair#widget (not my branch). In my implementation, I have dropdown menus for the type of mark (line, point, area, etc) and the different encodings (x, y, color, etc).

There's a ton of work to do still:
- tests, documentation
- support for different stats function (median, max, mean, etc)
- style dropdown menus
- ensure works for heat maps (for my use case this will require `applyColorToBackground`). This will likely require styling the drop downs.
",7,1,[]
797,91185999,248,42757577,2016-10-27 11:58:13,2016-10-27 19:39:08,closed,fixed link,,1,1,[]
798,90452579,244,42757577,2016-10-21 22:15:14,2016-10-21 22:21:40,closed,DOC: simplify thumbnails with PIL,,0,1,[]
799,90398458,243,42757577,2016-10-21 14:56:15,2016-10-21 15:51:09,closed,MAINT: add pip install to CI,"addresses #238
",1,1,[]
800,90386612,242,42757577,2016-10-21 13:49:44,2016-10-21 14:49:22,closed,Require traitlets 4.3.1,"Traitlets 4.3 fixes the issues that you reported wrt Union trait types. Error messages should now make sense.
",13,1,[]
801,90127998,239,42757577,2016-10-20 03:33:48,2016-10-20 03:43:02,closed,MAINT: add-in missing examples,"Bug in the generation code was ignoring a number of examples. Also had to slightly tweak things to work correctly with explicitly specified data.
",1,1,[]
802,89760668,237,42757577,2016-10-18 07:33:24,2016-10-18 13:30:14,closed,DOC: correct case in GitHub,"@ellisonbg I noticed this when we looked at the docs earlier today. I've gone through all the files in the `docs` directory. These are the only files that needed edits.
",1,1,[]
803,89395786,229,42757577,2016-10-14 14:35:54,2016-10-14 14:41:37,closed,MAINT: clean up visitor util code,"prompted by some stray debugging statements and extra indentation. Then I did a bit more.
",0,1,[]
804,89238668,227,42757577,2016-10-13 16:38:06,2016-10-19 19:50:32,closed,[WIP] Move to Vega-Lite 1.2,"Replaces #189
",9,10,[]
805,89106049,226,42757577,2016-10-12 22:30:17,2016-10-12 22:30:38,closed,BUG: make CalledProcessError compatible with older python versions,"Fixes #224
",2,1,[]
806,89105196,225,42757577,2016-10-12 22:23:41,2016-10-12 22:31:19,closed,making calledprocesserror python2 compatible,"for #224 
combining output and error to pass into CalledProcessError output
",1,1,[]
807,88476947,222,42757577,2016-10-07 17:27:12,2016-10-07 17:38:55,closed,DOC: add info on axis limits,"Add documentation on how to set axis limits
",1,1,[]
808,88313703,221,42757577,2016-10-06 18:16:39,2016-10-06 18:26:34,closed,DOC: add FAQ section to documentation,,1,1,[]
809,88110100,217,42757577,2016-10-05 16:16:46,2016-10-05 16:23:53,closed,MAINT: configure Travis to run npm tests,,1,1,[]
810,87382697,216,42757577,2016-09-29 19:58:35,2017-07-04 16:23:10,closed,[WIP] Changing to MIME based rendering,"Initial prototype that works with JupyterLab.

Closes https://github.com/altair-viz/altair/issues/294 and https://github.com/altair-viz/altair/issues/172.",29,18,[]
811,87212603,215,42757577,2016-09-28 22:18:44,2016-10-14 22:38:15,closed,MRG: add vega expression machinery,"This PR adds a way to create validated expressions for vega formulas (addresses #208). Previously, everything had to be done with a string; for example:

``` python
from altair import Chart, Formula

Chart(data).encode(
    x='x',
    y='foo',
).transform_data(
    calculate=[Formula(field='foo', expr='if(log(datum.x) < 2, ""A"", ""B""')],
    filter='datum.x > 0'
)
```

The problem is that this string is not validated on the Python side, and the errors from Vega-Lite are not particularly helpful.

After this PR, you can instead do

``` python
from altair import Chart, Formula, expr

# can pass URL, dataframe, Data obj, etc.
data = expr.DataFrame(data)

# creates a filter operation
data = data[data.x > 0]

# create a transform operation
data['foo'] = expr.if_(expr.log(data.x) < 2, ""A"", ""B"")

Chart(data).encode(
    x='x',
    y='foo',
)
```

which is more intuitive, less error-prone, and is  structurally validated on the Python side.

This is also fully backward-compatible; i.e. you can still pass the string if you wish.
",11,25,[]
812,86773252,214,42757577,2016-09-26 16:15:59,2016-09-26 18:06:09,closed,MAINT: build docs on travis,"Attempt to build docs on Travis
",1,1,[]
813,86618449,213,42757577,2016-09-24 13:42:40,2016-09-26 01:41:42,closed,MAINT: improve nodejs interaction for savechart(),,1,7,[]
814,86561949,211,42757577,2016-09-23 18:46:00,2016-09-26 17:32:59,closed,WIP: Use Travis to build docs,"Failing so far... seems to be some issue with Travis's c++ compiler...

(note first few dozen changes are from #209
",1,20,[]
815,86246033,209,42757577,2016-09-21 21:36:59,2016-09-23 20:11:51,closed,WIP: further documentation progress,,2,15,[]
816,85636850,205,42757577,2016-09-16 20:42:38,2016-09-16 21:15:47,closed,"Spelling fix: ""explicitely"" -> ""explicitly""",,1,1,[]
817,85257112,203,42757577,2016-09-14 16:05:50,2016-09-14 16:10:31,closed,ENH: improve Chart.to_dict() to remove need for load_spec(),,1,1,[]
818,84951782,202,42757577,2016-09-12 21:53:23,2016-09-13 16:48:50,closed,ENH: add interface to save chart to PNG/SVG,"This PR includes an experimental interface to save Altair charts to PNG or EPS from Python.

This requires several `nodejs` packages to be installed. With conda, the following works on my system:

``` bash
$ conda install nodejs -c conda-forge
$ npm install canvas vega-lite  # requires python 2.7 for some reason
$ ls ~/node_modules/.bin/
vg2png  vg2svg  vl2png  vl2svg  vl2vg
```

If this works, then the script here should work:

``` python
from altair import Chart
from altair.examples import load_example

chart = Chart.from_dict(load_example('area.json'))
savechart(chart, 'chart.png')
```

Then `chart.png` is a png of the chart.
",6,5,[]
819,84915726,201,42757577,2016-09-12 17:58:40,2016-09-12 20:33:10,closed,MAINT: clean-up derived classes in API,"This simplifies the top-level classes (`Chart`, `LayeredChart`, `FacetedChart`) and makes sure their traits inherit documentation from base classes.
",1,1,[]
820,84410944,198,42757577,2016-09-08 03:54:33,2016-09-20 22:48:21,closed,WIP: Sphinx docs,"This is a work in progress that adds a sphinx documentation page for Altair, including an extension for displaying Altair plots within sphinx.
",1,46,[]
821,84351211,197,42757577,2016-09-07 18:35:26,2016-09-12 20:34:11,closed,ENH: add Chart.serve() command to serve HTML,"This PR adds a functionality to create altair plots from outside the Jupyter notebook; e.g.

``` python
from altair import Chart, load_dataset

cars = load_dataset('cars')

chart = Chart(cars).mark_point().encode(
    x='Horsepower',
    y='Miles_per_Gallon',
    color='Origin',
)

chart.serve()
```

The final line will create a local web server, and by default launch a web browser window showing this visualization.
",1,3,[]
822,84347396,196,42757577,2016-09-07 18:08:33,2016-09-07 18:11:30,closed,ENH: add to_json() method,,1,1,[]
823,84181622,195,42757577,2016-09-06 19:29:35,2016-09-06 19:31:44,closed,MAINT: future-proof load_dataset to account for other formats,,1,1,[]
824,84174396,194,42757577,2016-09-06 18:41:34,2016-09-06 18:44:04,closed,ENH: add ability to return dataset URL only,,2,3,[]
825,84132295,193,42757577,2016-09-06 14:26:37,2016-09-06 14:51:37,closed,DOC: add auto-generated API documentation,,1,2,[]
826,83736452,189,42757577,2016-09-02 02:23:58,2016-10-13 16:38:26,closed,[WIP] bump vegalite version to 1.2.0 & fix issues,"This is a work-in-progress to bring altair to compatibility with vega-lite 1.2.0. The schema update also brought to light a few subtle issues in the code, which I've fixed here.

Note that the vast majority of files changed in this PR are automatically generated.
",2,3,[]
827,83328547,186,42757577,2016-08-30 19:06:27,2017-10-11 04:32:57,closed,ENH: add cleanup_data option in to_dict,"This is a work-in-progress that addresses the suggestion in #183.

It's a bit difficult because of the hierarchical nature of the top-level objects (i.e. a `LayeredChart` might have data that is referenced by the charts that make up its layers)

This solution works, but it modifies the original object; I think it would be cleaner (from the user's perspective) to leave the object unchanged. But it's not immediately obvious to me that there's a clean way (on the implementation side) to make this happen.

One thing I still need to figure out is the column access pattern when there are multiple data fields available to a single chart.

Also, this still needs more tests to cover cleanup within layered and faceted charts.
",4,1,[]
828,82439684,176,42757577,2016-08-23 20:57:23,2016-08-23 21:13:54,closed,Adds colorful sorted bar chart examples.,"Specifically commit adds two examples:
1. Sorted bar chart featuring brewer color palette

This example depends on [palettable](https://jiffyclub.github.io/palettable/)
for the brewer color palettes.

It also shows how to sort on a specific field.
1. Pandas Series to sorted bar chart

This example also uses brewer colors as well as pandas and numpy directly.
It shows how to work with a Pandas Series object to create a DataFrame and
explicitly name the index and data points using a 'title' column.

Refers to #168 
",2,2,[]
829,82095564,174,42757577,2016-08-21 03:04:00,2016-08-21 19:23:08,closed,DOC: adds documentation for heat maps,"I added a new notebook that documents heat maps. It shows example heat maps for
- the default heat map
- after applying colors to the background, not just the text
- applying a custom colormap and getting rid of the text. This is the heat map I wanted to generate.
",1,1,[]
830,78917985,167,42757577,2016-07-26 20:17:41,2016-08-04 19:53:46,closed,BUG: fix serialization of numpy scalars (fixes #165),"This commit fixes the issue of numpy array scalars in a column with dtype=object not being serializable. Also adds a quick test of the behavior.
",2,1,[]
831,78906869,166,42757577,2016-07-26 19:05:07,2016-07-26 19:46:17,closed,Forward kwargs from to_html,"`to_html` function handles kwargs, but `to_html` method doesn't forward any.
",1,1,[]
832,78589021,164,42757577,2016-07-24 03:54:06,2016-08-17 05:46:40,closed,DOC: documents log scales,"I had to plot log scales for a project of mine. I tried with Altair, but couldn't find an example and had to go digging through the source. This PR adds documentation for log scaling.
",13,1,[]
833,77810273,163,42757577,2016-07-18 13:45:14,2016-11-02 18:36:10,closed,DOC: makes Chart.to_html more clear,"This is a simple 3-line function that uses `to_html` to write an Altair chart to an HTML file.
",13,3,[]
834,77757199,162,42757577,2016-07-18 03:43:26,2016-07-18 18:12:18,closed,ENH: load CDNs when viewing under file://,"When I tried to save a local plot as an HTML file and view in my web browser using `file://`, I could not see the plot. To fix this, in the function `to_html` I added an optional parameter `local_file` which defaults to True. When True, it loads the CDNs with `http://` and if False it loads under `//`.

Currently in the default HTML template, the CDNs are being loaded as `<script src=""//vega.github.io/vega/vega.js""></script>` and then because I was viewing local HTML file as `file://`, it tries to load `file://vega.github.io` which obviously doesn't exist.
",3,3,[]
835,77714184,160,42757577,2016-07-16 16:58:53,2016-07-17 19:09:53,closed,missing a dependency for git in python,"was getting a `no module named git` error when I ran `make all`
",4,1,[]
836,77315254,158,42757577,2016-07-13 15:58:58,2016-07-13 20:54:28,closed,add pygg: python wrapper around ggplot2,"[pygg](https://github.com/sirrice/pygg) provides nearly identical ggplot2 syntax in python and translates into an R program that executes ggplot2 statements.  Thus, it can take advantage of all of ggplot2's engineering and features.
",1,1,[]
837,77312954,157,42757577,2016-07-13 15:46:03,2016-07-13 20:53:42,closed,Correct link to Iris Pairgrid notebook,"It just corrects the broken link
",1,1,[]
838,76861761,151,42757577,2016-07-10 01:37:24,2016-07-11 02:01:31,closed,Edit README,"This PR is a heavy edit of the README section flow and ordering.

Ran the text through Grammarly and edited.

Highlights
- Moved the visual earlier
- Added simple end user benefits/description earlier
",5,3,[]
839,76861062,150,42757577,2016-07-10 00:54:00,2016-07-10 02:28:05,closed,Expose some public methods to completion,"Closes #148
",4,1,[]
840,76860963,149,42757577,2016-07-10 00:46:51,2016-07-10 00:49:08,closed,Explicitly assign chart in fist example. Don't use Out[1],"<img width=""579"" alt=""screen shot 2016-07-09 at 17 43 34"" src=""https://cloud.githubusercontent.com/assets/335567/16711044/231e2910-45fd-11e6-805f-5ce6a126f22f.png"">
",1,1,[]
841,76860307,147,42757577,2016-07-10 00:03:26,2016-07-10 00:25:15,closed,More minor edits to docs,"- Don't use _ and Out[]
- Clarifying points.
- Listing all mark_ methods and aggregations.

Fixes #142 and #143 
",1,1,[]
842,76860156,146,42757577,2016-07-09 23:53:07,2016-07-10 00:17:05,closed,Reorder examples and introduction docs,"Took a pass at reordering the index notebook. I found the examples more engaging (and fun) then the Intro to Altair so I moved them before the intro docs.

Added some text to encourage folks to check out the Altair-ized vega-lite example plots.
",1,1,[]
843,76860120,145,42757577,2016-07-09 23:51:00,2016-07-10 01:11:47,closed,Clarify that tests need to be run in source directory.,"At least for me, they didn't run from just the pip install...
",3,2,[]
844,76859824,144,42757577,2016-07-09 23:29:39,2016-07-10 00:15:55,closed,Allow a named Series to be passed as the shorthand,"This makes the following work:

```
Chart(data).mark_point().encode(x=data.column)
```

After thinking a bit more, not sure we should do this as users may think that you can pass actual data to the `encode` method. But all this does is grab the _name_ of the column from the Series. What do you think @jakevdp ?

Addresses #141 
",3,1,[]
845,76852631,139,42757577,2016-07-09 17:41:25,2016-07-09 20:01:14,closed,Edits to README and notes.,,0,15,[]
846,76850323,138,42757577,2016-07-09 16:03:20,2016-07-09 16:03:25,closed,Adding regression notebook by @jakevdp,"@jakevdp - added your regression notebook for the 1.0 release and made some edits. Super nice!
",1,1,[]
847,76849632,137,42757577,2016-07-09 15:42:07,2016-07-09 16:02:51,closed,Layeradd,"Adds `+` and `+=` syntax for creating layered charts.
",0,8,[]
848,75566177,136,42757577,2016-06-28 23:18:30,2016-07-08 22:48:15,closed,[MRG] Refactor shorthand parser,"Addresses #46 – parsing of shorthands is now more robust, so that column names with spaces, colons, parentheses, and other characters works.

Additionally, I moved the shorthand parsing to the `_finalize()` method, rather than using a traitlet observer. Due to the refactoring, I was also able to remove the specialization of `type` within channels, as well as observers of `shorthand` and `type`.

The result is about 70 fewer lines of code overall, excluding the additional tests that are part of this PR.
",4,9,[]
849,74296867,134,42757577,2016-06-17 19:58:11,2016-06-27 21:09:17,closed,[MRG] delay type inference & allow it to handle parent data,"Addresses the statefulness issue brought up in https://github.com/ellisonbg/altair/issues/90#issuecomment-226656429
",5,10,[]
850,74181572,133,42757577,2016-06-17 02:42:02,2016-06-27 21:03:19,closed,ENH: make method updates augment rather than overwrite,"Addresses #130
",3,2,[]
851,73776532,131,42757577,2016-06-14 17:00:00,2016-06-16 02:31:55,closed,ENH: add to_html() methods,"I started comparing our docs to those of Vega-Lite, and noticed that they emphasize how to publish visualizations online: https://vega.github.io/vega-lite/tutorials/getting_started.html#embed

This PR uses that example as a template, and creates a `to_html()` method for top-level objects which export charts to stand-alone HTML.
",1,2,[]
852,73436062,128,42757577,2016-06-10 21:06:11,2016-06-12 15:11:16,closed,[MRG] Bump Vega-Lite to v1.0.10,"Bumping Vega-Lite to v1.0.10

This change touches a lot of things. The basic summary is:
- New examples & associated notebooks & tests from the Vega-Lite 1.0.10 release
- New schema & wrappers for the Vega-Lite v1.0.10 schema
- Two new top-level classes join `Chart` (names can easily be changed): `LayerChart` and `FacetChart`. `LayerChart` is essentially a list of charts, while `FacetChart` is a `Chart` or `LayerChart` along with a row and column.
- Enhancements to the visitor code to correctly generate JSON and altair code
- Refactoring of various keyword inference codes from `encoding`, `transform_data`, etc. They now all make use of the same base class methods.

There are a few examples which test layering, and none to my knowledge that test faceting.
",4,12,[]
853,73321170,127,42757577,2016-06-10 04:45:24,2016-06-10 17:57:01,closed,ENH: handle configure_*() methods in code generation,,2,3,[]
854,73253606,125,42757577,2016-06-09 17:27:05,2016-06-09 19:52:56,closed,Rename Layer->Chart,"This PR renames the top-level `Layer` to `Chart`. Updates examples, and fixes a few other small things.
",2,7,[]
855,73160426,124,42757577,2016-06-09 05:50:42,2016-06-09 13:26:54,closed,BUG: fix duplicate imports in generated wrappers,,1,2,[]
856,72607950,123,42757577,2016-06-04 17:27:48,2016-06-09 04:31:04,closed,Adding extra configure_* methods.,,5,4,[]
857,72607940,122,42757577,2016-06-04 17:27:23,2016-06-08 15:02:11,closed,More edits to the README,,1,2,[]
858,72607923,121,42757577,2016-06-04 17:26:54,2016-06-05 04:06:34,closed,Fixing setup.py metadata.,,1,1,[]
859,72543364,119,42757577,2016-06-03 17:42:34,2016-06-03 17:47:58,closed,MAINT: clean-up and add tests for sanitize_dataframe,,1,1,[]
860,72038241,118,42757577,2016-05-31 15:39:59,2016-06-01 23:53:49,closed,Update README (Addresses #110),"A draft update for our README file.
",2,4,[]
861,71952959,117,42757577,2016-05-31 03:06:52,2016-05-31 14:20:24,closed,MAINT: adjust travis settings,"- remove lightning
- install pytest via conda rather than pip
",2,1,[]
862,71741726,116,42757577,2016-05-27 16:49:40,2016-06-09 03:53:36,closed,[MRG] Automatically generate derived Channel schemas,"replaces #114
",9,14,[]
863,71657938,115,42757577,2016-05-27 04:09:38,2016-05-27 14:55:41,closed,Refactor datasets for easier syncing,"- refactor datasets so JSON is a separate file
- add an option to `tools/sync_vegalite.py` that will automatically sync with a specified version of `vega-datasets`
",1,3,[]
864,71653658,114,42757577,2016-05-27 02:54:17,2016-05-27 16:44:49,closed,Automatically generate derived Channel schemas,,2,6,[]
865,71478775,113,42757577,2016-05-25 23:23:54,2016-05-26 21:04:52,closed,Refactor schema parser to add docs to wrappers,"This commit adds an improved schema parser based on jinja2 templates (this doesn't add any run dependencies, but jinja2 is required to re-generate the wrappers).

One improvement is that there are now docstrings and explicit keywords in the schema objects, which means that tab-completion works! Any attribute descriptions from the schema are populated in the doc-string as well: For example:
![screen shot 2016-05-25 at 4 25 40 pm](https://cloud.githubusercontent.com/assets/781659/15559247/6249acb2-2295-11e6-985a-cf6c55f4f015.png)
And another:
![screen shot 2016-05-25 at 4 22 13 pm](https://cloud.githubusercontent.com/assets/781659/15559190/ed7d281e-2294-11e6-8d01-923b00ae5623.png)
This should make building visualizations much easier (though we should make similar changes at the top level as well...)
",5,5,[]
866,71109872,109,42757577,2016-05-23 19:49:59,2016-05-23 20:19:56,closed,MAINT: Remove old & unused code,"I don't think there's any reason to keep these around... let me know if I've overlooked something
",9,1,[]
867,71080330,107,42757577,2016-05-23 16:30:13,2016-05-23 18:26:43,closed,Add Vega-Lite Auto Examples,"Updated auto-examples to generate notebooks from the JSON examples.

For the time being, I did not commit executed versions because the visualizations don't show up until you run them in a browser anyway.

(Though I did auto-execute all of them to confirm that the Python runs correctly)
",4,5,[]
868,70950515,106,42757577,2016-05-21 14:15:10,2016-05-23 04:15:37,closed,MRG: Altair code generation,"This is my work-in-progress for Altair code generation.
- [x] write code to initialize a `Layer` object from a vega spec
- [x] write code to output an executable Altair object hierarchy from a `Layer` object
- [x] specialize the code generation to use top-level methods & shorthands in channels.
- [x] write automated tests & examples using schemas from vega-lite docs

Once it's finished, generation of examples & tests should be **much** easier :smile:
",13,21,[]
869,70940265,105,42757577,2016-05-21 05:08:14,2016-05-26 16:42:37,closed,ENH: add traitlet tab completion hack,"This is a hack that enables tab completion for traits of any `HasTraits` class. Operationally, this means that, for example, if you type

```
In [1]: from altair import *
In [2]: Layer(des<TAB>
```

it will be auto-completed to

```
In [2]: Layer(description=
```

because `Layer` has a `description` trait.

I wasn't able to figure out how to do this through the normal completer hooks, so I used a hack that works but will likely be very brittle. I don't think this solution should be merged, but I'd love some feedback on what a better solution might be.
",1,3,[]
870,70939093,104,42757577,2016-05-21 03:53:34,2016-05-24 00:07:14,closed,ENH: allow mark configuration via mark_*() methods,"Implements idea in https://github.com/ellisonbg/altair/issues/93#issuecomment-220712808
",10,1,[]
871,70918931,103,42757577,2016-05-20 21:20:37,2016-05-21 03:28:08,closed,[MRG] enhance configure() and add data_transform() method,"Two additions to the API here:
### configuration

 First, `configure()` is enhanced to handle arguments similarly to `encode()`. So you can do

``` python
Layer(data).configure(MarkConfig(color='red'))
```

as a shorthand for

``` python
Layer(data).configure(mark=MarkConfig(color='red'))
```
### transformation

Secondly, I added the `data_transform()` method similar to `configure()` and `encode()`, so you can do this:

``` python
population = load_dataset('population')
Layer(data).data_transform(
        filter=""datum.year==2000""
    )
```

in place of the current approach:

``` python
Layer(data, transform=Transform(filter=""datum.year==2000""))
```

I realize `data_transform` is a bit awkward/redundant. This really should be called `transform`, but that is already used as an attribute name in vega-lite. IMHO, it would be more consistent if the attribute were `transformation` and the action were `transform`, but we can't control everything :smile:
",11,3,[]
872,70634263,92,42757577,2016-05-19 04:09:23,2016-05-19 17:41:50,closed,Remove boilerplate from API,"This is a tiny change in the top-level API that makes for less boilerplate. Using the scatterplot example, the current API looks like this:

``` python
Layer(data).encode(
    X('Horsepower'),
    Y('Miles_per_Gallon'),
    Color('Origin'),
    Size('Weight_in_lbs')
).point()
```

You can also use keywords, e.g.

``` python
Layer(data).encode(
    x=X('Horsepower'),
    y=Y('Miles_per_Gallon'),
    color=Color('Origin'),
    size=Size('Weight_in_lbs')
).point()
```

With this PR, there is a (to my mind) more intuitive way to do this:

``` python
Layer(data).encode(
    x='Horsepower',
    y='Miles_per_Gallon',
    color='Origin',
    size='Weight_in_lbs'
).point()
```

The string arguments are converted automatically to the appropriate object. Note that this works only in the `encode()` function, not deeper within the object hierarchy.

What do you think?
",4,2,[]
873,49530840,84,42757577,2015-11-03 08:54:02,2016-07-10 00:20:34,closed,Create AltairWidget,"I'll add my own questions in line

ping @ellisonbg
",10,12,[]
874,49355891,81,42757577,2015-10-31 18:46:21,2015-10-31 18:46:38,closed,Initial draft of ipython widget for Altair.,"See the new example notebook for details.
",11,1,[]
875,48384443,78,42757577,2015-10-21 20:38:47,2015-10-24 02:46:14,closed,Do a best effort of selecting an X and Y automatically,,4,3,[]
876,48296674,77,42757577,2015-10-21 07:32:08,2015-10-21 13:31:49,closed,Adding unicode to Nominal data type,,0,5,[]
877,47756753,74,42757577,2015-10-15 08:24:43,2015-10-16 13:36:57,closed,Complete Detail object for Vegalite spec completion,"Will help towards completing #42 and #43
",5,4,[]
878,47754737,73,42757577,2015-10-15 08:00:03,2015-10-16 01:47:53,closed,Complete Text object for Vegalite spec completion,"Will help towards completing #42 and #43
",5,6,[]
879,47749182,72,42757577,2015-10-15 06:37:17,2015-10-16 01:25:31,closed,Complete Axis object for Vegalite spec completion,"Will help towards completing #42 and #43
",4,4,[]
880,47739746,71,42757577,2015-10-15 03:08:13,2015-10-15 12:22:34,closed,Complete Band object for Vegalite spec completion,"Will help towards completing #42 and #43 
",1,3,[]
881,47738837,70,42757577,2015-10-15 02:48:29,2015-10-15 12:24:43,closed,"Add unit tests for X, Y, Size, and Color objects for Vegalite spec completion","Will help towards completing #43 
",0,6,[]
882,47719664,69,42757577,2015-10-14 21:49:55,2015-10-15 02:18:23,closed,Add Scale objects for Vegalite spec completion,"Added unit tests too
",5,4,[]
883,47706140,68,42757577,2015-10-14 19:50:24,2015-10-14 20:01:52,closed,Add TODOs for Vegalite spec completion,"TODO list to complete issue #42 
",2,2,[]
884,47370368,66,42757577,2015-10-11 16:34:00,2015-10-12 17:40:50,closed,update lightning dependency version in readme,"1.2.1 or better will work and releases will be more stable than master
",1,1,[]
885,47355947,65,42757577,2015-10-10 22:58:41,2015-10-10 23:25:07,closed,Fixing imports on python 2 and adding tests for lightning renderer,,0,3,[]
886,47102822,63,42757577,2015-10-08 01:32:39,2015-10-08 01:32:48,closed,Pydatatalk,"I have done a bunch of work for my PyData meetup:
- Using lightning-python for rendering using HTML/vega.
- New Renderer API
- Updated and expanded examples.

I am going to merge right away as Alejandro is waiting for this stuff to be merged so he can work on finishing the spec tomorrow.
",1,7,[]
887,45863686,61,42757577,2015-09-24 06:35:21,2015-09-24 17:06:54,closed,Dims and examples,"Learned a lot tonight around the state of the vega-lite API. In building for faceting, there is some very strange stuff around simple things like setting the chart width a height. They _really_ need some APIs that abstract away things like setting categorical band widths and the `singleWidth`/`singleHeight` fields, and just allow a user to specify a chart width/height, and let vega figure out how to stage facets within it. 

I started a pretty straightforward tutorial notebook- working through things like building simple charts really finds the weird corners in the spec. 
",11,4,[]
888,45856892,60,42757577,2015-09-24 03:51:49,2015-09-24 12:53:18,closed,"Update HTML rendering to Jinja template loader, setup.py to try setup…","A couple small things:
- Jinja has a _really_ nice template loader that we can leverage. Since we've already got the dependency, might as well use it. 
- I really, really like trying to import `setuptools` with a fallback to `distutils`. Without `setuptools`, you can't do things like `python setup.py develop`, which make iterate workflow pretty tough. 

All tests passing :+1: 
",0,1,[]
889,45731546,59,42757577,2015-09-22 23:55:32,2015-10-01 18:08:37,closed,Added dependencies to setup,"Added the dependencies for the install_requires portion of setup.py
",12,3,[]
890,45689297,58,42757577,2015-09-22 17:00:27,2015-09-22 22:00:09,closed,Adding motivation section to README.,,2,2,[]
891,45685192,56,42757577,2015-09-22 16:23:43,2015-09-22 16:23:48,closed,Movenb,"Moving notebooks around and using common naming convention.
",0,2,[]
892,45507785,54,42757577,2015-09-21 00:31:00,2015-09-21 02:55:12,closed,Save html,"This PR adds support for saving the rendered html to a file, and tries to handle file overwrites and missing extensions. Added unit tests (and refactored the existing html tests with a spec fixture).
",1,9,[]
893,45497973,52,42757577,2015-09-20 15:12:40,2015-09-20 16:54:59,closed,Pep cleanup,"This PR is largely cleanup and docstring-ing, but there are also some test fixes and a bugfix in the `utils` module. All tests pass now. 
",1,4,[]
894,45492093,51,42757577,2015-09-20 08:03:22,2015-09-20 08:34:17,closed,Fix agg + color,,0,4,[]
895,45490813,50,42757577,2015-09-20 06:21:51,2015-09-20 06:21:55,closed,Fixing config,,0,1,[]
896,45490629,49,42757577,2015-09-20 06:04:34,2015-09-20 06:22:07,closed,Add basic pairgrid example (notebook),,0,1,[]
897,45490612,48,42757577,2015-09-20 06:02:36,2015-09-20 06:15:44,closed,Forgot to mention html renderer in readme,,0,3,[]
898,45490494,47,42757577,2015-09-20 05:52:09,2015-09-20 05:52:15,closed,Adding config section.,,0,1,[]
899,45489930,41,42757577,2015-09-20 04:54:15,2015-09-20 04:54:38,closed,Fixing naming of mark_,,0,1,[]
900,45489273,40,42757577,2015-09-20 03:52:30,2015-09-20 03:53:57,closed,TST: add test of to_dict,,0,1,[]
901,45489267,39,42757577,2015-09-20 03:51:49,2015-09-20 04:40:19,closed,Marknot,,0,2,[]
902,45489225,38,42757577,2015-09-20 03:47:40,2015-09-20 03:47:43,closed,Adding better serialization skips.,,0,1,[]
903,45489107,37,42757577,2015-09-20 03:36:35,2015-09-20 03:36:41,closed,Fixing recursion.,,0,1,[]
904,45488758,36,42757577,2015-09-20 03:01:34,2015-09-20 04:39:59,closed,Html rendering,"This PR adds simple rendering of the specification's generated by the API via html. Example usage looks like this (here we're targeting display in an IPython notebook):

```
from altair import api, html
from IPython.display import HTML, display

data = dict(x=[1, 2, 3], y=[1, 2, 3])
spec = api.Viz(data).encode(x='x:Q', y='y:Q').mark_line()
out = html.render(s)
display(HTML(out))
```

I included a pretty bare bones test `html`. Also the size handling needs some testing. But otherwise should be functional.
",2,13,[]
905,45488647,35,42757577,2015-09-20 02:52:52,2015-09-20 05:06:15,closed,ENH: first pass at faceting,"row-only and col-only work

row and col behaves badly.
",2,3,[]
906,45488218,33,42757577,2015-09-20 02:08:51,2015-09-20 02:50:13,closed,ENH: add automatic data type inference,,0,3,[]
907,45487763,32,42757577,2015-09-20 01:26:27,2015-09-20 05:37:23,closed,Histogram,"First higher-level charting method: histogram. 
",0,3,[]
908,45487602,31,42757577,2015-09-20 01:10:46,2015-09-20 01:10:55,closed,Fixing data serialization.,,0,1,[]
909,45487267,30,42757577,2015-09-20 00:37:15,2015-09-20 00:48:32,closed,TST: add more api unit tests,,0,2,[]
910,45486846,29,42757577,2015-09-20 00:03:12,2015-09-20 00:04:16,closed,BUG: allow size/color/shape to be unicode,,0,1,[]
911,45486450,28,42757577,2015-09-19 23:32:33,2015-09-19 23:42:05,closed,TST: use conda in Travis for faster testing,,0,4,[]
912,45486315,27,42757577,2015-09-19 23:21:01,2015-09-19 23:28:06,closed,Apitest,,0,2,[]
913,45486140,26,42757577,2015-09-19 23:09:28,2015-09-20 00:01:56,closed,Enh shape,"![so](https://cloud.githubusercontent.com/assets/199813/9978525/ecb0582c-5f01-11e5-9ff7-f36318b15fff.png)
",0,3,[]
914,45486040,25,42757577,2015-09-19 23:01:32,2015-09-19 23:21:41,closed,"BUG: properly initialize size, color, and shape in Encoding",,0,1,[]
915,45485909,24,42757577,2015-09-19 22:53:52,2015-09-19 22:53:58,closed,Fixing repr and to_dict,,0,1,[]
916,45485832,23,42757577,2015-09-19 22:48:02,2015-09-19 22:48:15,closed,"API streamlining: move parser into Position, etc.",,0,1,[]
917,45485365,22,42757577,2015-09-19 22:15:39,2015-09-19 22:15:45,closed,None,,0,2,[]
918,45484980,21,42757577,2015-09-19 21:49:30,2015-09-19 21:49:48,closed,utils: no explicit None in type,,0,1,[]
919,45484933,20,42757577,2015-09-19 21:46:00,2015-09-19 21:46:12,closed,Adding to_dict,,0,1,[]
920,45483945,19,42757577,2015-09-19 20:42:36,2015-09-19 21:16:56,closed,add utility to infer vega-lite type from inputs,,0,3,[]
921,45481440,17,42757577,2015-09-19 18:12:51,2015-09-19 18:27:30,closed,MAINT: refactor utility routines into utils submodule,,0,2,[]
922,45481335,16,42757577,2015-09-19 18:06:25,2015-09-19 18:26:54,closed,MAINT: ignore temporary files in gitignore,,0,1,[]
923,45479876,15,42757577,2015-09-19 16:46:43,2015-09-19 18:01:54,closed,TST: fix py35 on Travis,"I think this will fix the Python 3.5 issue – found the fix here: https://github.com/pytest-dev/pytest/issues/744
",1,1,[]
924,45478731,14,42757577,2015-09-19 15:41:04,2015-09-19 18:01:43,closed,Mpl2,,0,3,[]
925,45471391,13,42757577,2015-09-19 06:39:41,2015-09-19 07:47:33,closed,MAINT: update setup.py description with text from README,,0,1,[]
926,45471354,12,42757577,2015-09-19 06:37:23,2015-09-19 06:37:27,closed,Adding basic travis config.,,0,1,[]
927,45471317,11,42757577,2015-09-19 06:34:28,2015-09-19 06:35:05,closed,improve column parser & add tests,,0,1,[]
928,45471243,10,42757577,2015-09-19 06:28:16,2015-09-19 06:28:22,closed,Updating the README.md,,0,1,[]
929,45471087,9,42757577,2015-09-19 06:15:15,2015-09-19 06:20:34,closed,Adding tests (py.test),,0,1,[]
930,45471054,8,42757577,2015-09-19 06:12:24,2015-09-19 06:13:52,closed,Mpl,,0,2,[]
931,45470218,7,42757577,2015-09-19 05:08:49,2015-09-19 05:09:27,closed,MAINT: typo in setup.py,,1,1,[]
932,45470200,6,42757577,2015-09-19 05:06:55,2015-09-19 05:07:00,closed,Initial python api.,,0,1,[]
933,45469796,5,42757577,2015-09-19 04:31:31,2015-09-19 05:00:19,closed,add __version__ to __init__.py,"without this the setup.py will fail :cry: 
",0,1,[]
934,45469727,4,42757577,2015-09-19 04:26:15,2015-09-19 04:27:56,closed,Doc class,,0,2,[]
935,45469726,3,42757577,2015-09-19 04:26:14,2015-09-19 04:27:02,closed,add setup.py,,0,1,[]
936,45469469,2,42757577,2015-09-19 04:06:03,2015-09-19 04:18:25,closed,MNT: added full spec file,,0,1,[]
937,45469071,1,42757577,2015-09-19 03:37:18,2015-09-19 03:38:02,closed,INT: make directory,,0,1,[]
