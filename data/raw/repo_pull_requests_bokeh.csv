index,id,number,repo_id,created_at,closed_at,state,title,body,total_comments,total_commits,labels
0,707484123,11492,3834332,2021-08-10 16:50:51,2021-08-10 19:31:13,closed,Document Refs Cleanup (part 2),"[take three, new branch]

ref: #11486

This smaller PR removes the reference cycles introduced by our wrappers for Tornado's callbacks:

* The wrappers had a back-reference to `document` that is completely unused and unnecessary. This was removed.
* Removes the `_callback_objs_by_callable` cruft that has documents referencing session callback wrappers directly

Before this change,  uncollected documents could occur with referrers through the methods for these callback wrappers:
```
2021-08-09 13:15:08,752   uncollected Documents: 1
2021-08-09 13:15:08,757 [[<bokeh.document.document.Document object at 0x19de9efd0>], <bound method Document.add_next_tick_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.add_periodic_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.add_timeout_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.apply_json_event of <bokeh.document.document.Document object at 0x19de9efd0>>]
```
After this change, there is only a reference via the `apply_json_event` method (a different cause, to be resolved separately in the next PR)
```
2021-08-09 13:57:56,069   uncollected Documents: 1
2021-08-09 13:57:56,073 [[<bokeh.document.document.Document object at 0x1a0f524f0>], <bound method Document.apply_json_event of <bokeh.document.document.Document object at 0x1a0f524f0>>
```

",1,2,"['status: accepted', 'type: task', 'reso: completed']"
1,707480808,11491,3834332,2021-08-10 16:46:34,2021-08-10 16:48:21,closed,Refs Cleanup (part 2),"take two

ref : https://github.com/bokeh/bokeh/pull/11486
",0,13,['status: declined']
2,707431745,11490,3834332,2021-08-10 14:58:14,,open,WIP: docstrings for gallery examples,"Adding ReST docstrings to examples in gallery. 

- [x] issues: fixes #11489
",3,2,['status: WIP']
3,707119379,11488,3834332,2021-08-10 08:00:28,2021-08-10 08:38:12,closed,Stub `OpenURL.navigate()` in unit tests to avoid popups,"fixes #11487 
",0,1,['status: accepted']
4,706874959,11486,3834332,2021-08-09 21:41:04,2021-08-10 14:45:56,closed,Document Refs Cleanup (part 2),"[Not ready for merge, will rebase after #11482 is merged]

This smaller PR removes the reference cycles introduced by our wrappers for Tornado's callbacks:

* The wrappers had a back-reference to `document` that is completely unused and unnecessary. This was removed.
* Removes the `_callback_objs_by_callable` cruft that has documents referencing session callback wrappers directly

Before this change,  uncollected documents could occur with referrers through the methods for these callback wrappers:
```
2021-08-09 13:15:08,752   uncollected Documents: 1
2021-08-09 13:15:08,757 [[<bokeh.document.document.Document object at 0x19de9efd0>], <bound method Document.add_next_tick_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.add_periodic_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.add_timeout_callback of <bokeh.document.document.Document object at 0x19de9efd0>>, <bound method Document.apply_json_event of <bokeh.document.document.Document object at 0x19de9efd0>>]
```
After this change, there is only a reference via the `apply_json_event` method (a different cause, to be resolved separately in the next PR)
```
2021-08-09 13:57:56,069   uncollected Documents: 1
2021-08-09 13:57:56,073 [[<bokeh.document.document.Document object at 0x1a0f524f0>], <bound method Document.apply_json_event of <bokeh.document.document.Document object at 0x1a0f524f0>>
```

---

@p-himik I know it has been some time since #7687 but I'd appreciate if you can take a quick look to confirm my conclusion that `_callback_objs_by_callable` is cruft. I *think* perhaps it was only needed to support the deprecated (now deleted) ""remove by value"" codepaths. Some observations I had:

* From inspecation, the bookkeeping around `_callback_objs_by_callable` seemed only to serve itself and was not used as part of any other current process I could find (it was previously part of the deprecated remover path, though)
* All current tests pass after simply removing everything associated with `_callback_objs_by_callable` 
* I ran two MREs for the OP (and a dupe of it) and could no reproduce any problems (on OSX) after this change. 
",3,2,"['status: declined', 'type: task']"
5,706721907,11485,3834332,2021-08-09 17:55:54,2021-08-10 17:26:48,closed,Add panel to downstream tests,As the title says. Can also finally switch to pytest for HoloViews tests as soon as I tag a HoloViews 2.0 dev release.,9,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: CI']"
6,706702060,11484,3834332,2021-08-09 17:22:25,2021-08-09 17:59:02,closed,revert kwarg-only Theme args,"- [x] issues: fixes #11483

",0,1,['status: accepted']
7,705782479,11482,3834332,2021-08-06 22:49:03,2021-08-10 14:45:52,closed,Document Refs Cleanup (part 1),"ref: #11477

This is the first of a few PRs that will eventually #11477 Only the first items directly relates to that issues, but the rest is some very overdue cleanup that needs to happen before the bigger follow-on PRs.

#### Avoid superflous `curstate` doc  in apps

This streamlines ""curdoc patching"" woith a context mananger that avoids the single dangling doc that gets reported as uncollected in Bokeh apps due to how `State` functions. This also makes the code paths better by no longer requiring explicit cleanup/un-patching. (The same treatment was given to `bokeh.io` monkey patching)

#### Factor `HasDocumentRef` mixing. 

This removes bad duplication in the callback manager mixins and will allow for more easily moving to weakrefs for docs later. 

#### Remove some cruft from `bokeh.core.query`

Callable queries with contexts add compllexity but appear completely unused and have never been demonstrated. 

#### Split up `model.py`

Gets it down from 1 kLOC to a ""manageable"" 600 lines. Also now explicitly list public API which is goo

##### Add some missing tests

Some of the most low-level funcs in `model.py` have never had any tests. This PR is by no means complete but at least now there is some coverage. ",7,11,"['status: accepted', 'type: task', 'reso: completed']"
8,705046187,11480,3834332,2021-08-05 21:51:38,2021-08-09 21:47:45,closed,Fix a race condition in MathJax loading code,"- [x] integration tests
- [x] investigate and fix readiness signaling
- [x] robustify `notify_finished()` within a render iteration (maybe separate PR)
- [ ] rewrite tests without `try {} finally {}` (maybe separate PR)

fixes #11479
fixes #11457",0,11,['status: accepted']
9,704384876,11478,3834332,2021-08-05 05:16:19,2021-08-05 05:52:53,closed,check base branch on deploy,"- [x] issues: fixes #11255

",0,1,['status: accepted']
10,701931306,11473,3834332,2021-08-03 03:52:12,2021-08-09 22:00:38,closed,Remove test and extra sections from meta.yaml,"While updating the [CI section](https://docs.bokeh.org/en/latest/docs/dev_guide/testing.html#continuous-integration) of the dev docs, I noticed some outdated information in `meta.yaml` (e.g. `sphinx >=1.8`).
This PR removes the sections `test` and `extra` that are no longer needed.

cc @bryevdv ",4,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: CI']"
11,701879712,11472,3834332,2021-08-03 01:12:48,2021-08-05 16:49:19,closed,Make prepare_value more efficient for hinted ColumnData events,"- [x] issues: fixes #11138
- [x] tests added / passed

After a little back and forth, I think this is the most minimal change, that also makes no new public API commitments. I contemplated making `validate` accept a `hint` directly but that would have required a huge number of tedious changes, opened up a new public parameter, and also left open what to do if inapplicable hints were passed to the wrong targets. 

With this change the benchmark from the OP is now ~constant independent of the number of columns (about 1-2 ms on my laptop) cc @JulianHirsch

<img width=""821"" alt=""Screen Shot 2021-08-02 at 17 25 52"" src=""https://user-images.githubusercontent.com/1078448/127941850-8aecf8b0-419c-4874-b2e8-031a3638acb1.png"">

Here is the lightly updated benchmark:

<details>

```python
#Using Bokeh==2.3.0 as server app
import pandas as pd
from bokeh.plotting import figure, curdoc, show
from bokeh.models import ColumnDataSource
from bokeh.layouts import layout
import random
import time
import numpy as np

N_test = 3

times_list_cols = []

def update_data(n_cols, n_rows):
    # Prepare a CDS with some random value:
    df = pd.DataFrame({""Value1"": [int(random.random()*10) for i in range(n_rows)]})

    # Add n_cols additional columns with random values
    for i in range(n_cols):
        df[f""col_{i}""] = df[f""Value1""]/i

    # Create actual CDS
    source = ColumnDataSource(df)

    # Update one column and make N_test time measurements
    new_column = source.data[""Value1""]+1
    time_needed=[]
    for test_n in range(N_test):
        t0=time.time()
        source.data['Value1'] = new_column
        time_needed.append(time.time() - t0)

    return np.mean(time_needed)

# Check impact of columns and show results
times=[]
N_rows=5000
for n_cols in range(0,200):
    time_needed = update_data(n_cols=n_cols, n_rows=N_rows)
    times.append(time_needed)
    print(f""Time needed for {n_cols} cols and {N_rows} rows: {time_needed}"")

plot_rows = figure(plot_width=800, plot_height=250)
plot_rows.line(x=np.arange(0,200), y=times)
plot_rows.yaxis.axis_label = 'Time in s'
plot_rows.xaxis.axis_label = 'Number of Columns in CDS'
plot_rows.title.text = ""Increasing the number of COLUMNS in a CDS""

show(plot_rows)
```
</details>


As an aside this should also make some improvement for streaming column data as well (I added a branch to handle `ColumnsStreamed`)",1,1,['status: accepted']
12,701378055,11469,3834332,2021-08-02 11:23:20,,open,Provide complete model context for deserialization of instances,"- [ ] integration tests

fixes #11422
",0,1,['status: WIP']
13,701278717,11468,3834332,2021-08-02 09:06:09,,open,Clean up attribution elements when destroying `TileRendererView`,"- [ ] regression tests

fixes #11413
",0,1,['status: WIP']
14,701082741,11467,3834332,2021-08-02 03:21:32,2021-08-02 18:04:04,closed,Update to Sphinx 4.1,"This PR updates to Sphinx 4.1, which should afford improvements in future PRs. This PR also makes some minor edits to classifiers and also fixes an small filesystem layout annoyance that has been around forever. ",6,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
15,701027109,11466,3834332,2021-08-02 00:50:20,,open,add python conveniences to mathtext,"- [x] issues: fixes #11395
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,2,"['type: feature', 'status: WIP', 'tag: API: models']"
16,700999284,11465,3834332,2021-08-01 22:43:52,2021-08-10 22:15:58,closed,Simplify the SVG backend,"- [x] drop xlink namespace and related cruft
- [x] use bokehjs' random number utilities",0,14,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
17,700693676,11464,3834332,2021-07-31 11:03:33,2021-08-01 13:02:40,closed,Restore and robustify bokeh's SVG unit tests,"fixes #11460
",0,4,['status: accepted']
18,700444790,11463,3834332,2021-07-30 16:58:24,2021-07-30 19:37:33,closed,Skip svg export test,"Skips `test_get_svg_no_svg_present()` of `tests/unit/bokeh/io/test_export.py` due to unknown diff in `xlink:href` of output. This is currently causing universal failure of Bokeh-CI unit tests.

ref: #11460
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
19,699661104,11459,3834332,2021-07-29 16:06:49,2021-07-30 19:38:41,closed,Update file_input.py,"This example is using `js_on_change` to respond to an internal ""change"" event instead of a specific property. I don't believe this has ever been officially endorsed and AFAIK this is not demonstrated any place else. Updating to respond to the `filename` property.

ref: https://discourse.bokeh.org/t/fileinput-widgets-callback-on-value-parameter-comes-before-filename-is-set/8209
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
20,699478957,11458,3834332,2021-07-29 12:16:04,2021-08-01 14:17:43,closed,Iurypiva/testing svg draw image,"- [x] issues: relates to #11337 
- [x] tests added / passed
- [x] checked with [w3c reference](https://www.w3.org/TR/2dcontext/#dom-context-2d-lineto)",0,4,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
21,699447806,11456,3834332,2021-07-29 11:29:12,,open,Robustify subset <-> fullset conversions around inspections,"- [ ] tests

fixes #11437",0,2,['status: WIP']
22,699148687,11454,3834332,2021-07-29 02:10:16,2021-07-29 03:07:47,closed,Fix spec.py and cleanup scripts cruft,"This PR fixes the `scripts/spec.py` script to be able to handle recent property aliases and UndefinedType values. It does this by:

* skipping Aliases entirely (since they don't exist on the BokehJS side this is appropriate)
* emitting `""<Undefined>""` for values of `UndefinedType`

cc @hafen on the changes above, otherwise the output should be the same as it was before.  FYI `Undefined` is used for non-nullable types that have no default value (i.e. a user *must* set a value explicitly)

Additionally, while working on this, I noticed that the old `scripts/deps.py` file was only used by the `docker-tools`. I wanted to make sure they still worked, and discovered that none of the old docker files work at all anymore, and can't have worked for quite some time. This tells me they are not in use at all. So, I went ahead and deleted `deps.py` as well as the entire `docker-tools` directory. cc @bokeh/dev I would like to create a real docker-based dev workflow to draastically simplify onboarding new contributors, but at this point we should start fresh. ",0,2,"['status: accepted', 'type: task', 'reso: completed']"
23,699083260,11453,3834332,2021-07-28 23:45:32,,open,Correctly initialize `CircleView.max_size`,"- [ ] regression tests

fixes #11446
",0,1,['status: WIP']
24,698370343,11451,3834332,2021-07-28 05:14:13,2021-07-29 01:39:54,closed,License tests compatible with Windows,"This PR is to address an issue with the codebase license checks failing on Windows.
Ultimately decided just to skip the license tests in Windows.

~For _tests/codebase/test_js_license_set.py_, I found a quick fix of `shell=True`. I've read online there are possible security concerns with this, so I'm not sure if this is acceptable or not.~

~For _tests/codebase/test_license.py_, I found a couple issues:~
1.  ~The command began with `""diff""` instead of `""git diff""`. I found OS X can interpret `""diff""` alone but Windows cannot.~
2.  ~The test asserted `proc.returncode == 0`, which I found is `True` whether the two LICENSE.txt are different or not. Instead I asserted the output `diff = proc.stdout.decode('utf-8')` should be blank.~

~These changes appear to work on my mac as well, so hopefully it's os-independent now.~
- [x] issues: fixes #11444
- [x] tests passed
",9,5,['status: accepted']
25,698258327,11450,3834332,2021-07-27 23:52:21,2021-07-30 15:51:26,closed,Cleanup bokeh.sphinxext,"- [x] issues: fixes #10137
- [x] release document entry (if new feature or API change)

OK ostensibly this fixes (or at least improves) the jumpy anchors. But I wanted to take the opportunity to also clean up many things in `bokeh.sphinxext`. Some highlights:

* improve jumpy anchors
* fix broken collapsible SRI hash tables (discovered during this PR)
* use consistent code pattern for custom node visitors
* refactor `bokeh-plot` into smaller functions

There's plenty more that could still be improved but this seemed like a good stopping point for now. @hyles-lineata please build the docs locally with this PR and check them out. Things look good to me but a second pair of eyes would be good. Additionally please leave any comments or questions on the changes themselves.",1,18,['status: accepted']
26,697454347,11447,3834332,2021-07-27 01:09:18,2021-08-01 15:28:40,closed,"Add tests to SVG backend styling methods, update old SVG tests and improve testing framework","- [x] issues: relates to #11337 
- [x] tests added / passed
- [x] checked with [w3c reference](https://www.w3.org/TR/2dcontext/#dom-context-2d-lineto)",1,8,['status: superseded']
27,696640845,11445,3834332,2021-07-26 03:02:24,2021-07-26 03:36:18,closed,publish dev docs with release level,"Dev docs will now be publised at `/en/dev-2.4/`, `/en/dev-2.5/` etc based on the current release level, instead of generic `/en/dev/`
",0,1,"['status: accepted', 'reso: completed', 'tag: CI']"
28,696181444,11443,3834332,2021-07-23 20:02:14,2021-07-24 22:16:33,closed,Update wording around output_file(),This PR updates some wording regarding `output_file()` in various places. It also adds `output_file()` and `output_notebook()` to rst_epilog.txt. This work is in preparation of making documentation example names more consistent (#10377).,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
29,696132236,11442,3834332,2021-07-23 18:20:10,,open,Reorganize git hooks,"- [ ] issues: fixes #11431
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,6,['status: WIP']
30,694892407,11441,3834332,2021-07-22 06:02:34,2021-08-05 04:54:17,closed,Add default muted glyph unconditionally,"#### Issue:
Muted glyphs are only handled if ""muted_"" properties were specified. This conflicts with `plot.legend.click_policy = 'mute'` since the click policy can be set without ""muted_"" glyph properties.

#### Solution:
Handle `muted_glyph` in the same manner as `nonselection_glyph` - unconditionally created, and if no ""muted_"" properties are specified, the default `muted_glyph` has the same properties as the main glyph, except alpha overridden at 0.2.

- [x] issues: fixes #8390
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",13,11,['status: accepted']
31,693793020,11438,3834332,2021-07-20 20:03:08,2021-07-21 03:08:54,closed,Sprinters example: updated CustomJS; some PEP8 cleanup,"- [X] issues: fixes #11178

Updated CustomJS to reflect current ColumnDataSource structure; some cosmetic changes.
",1,9,['status: accepted']
32,692946478,11435,3834332,2021-07-19 21:46:38,2021-08-01 13:38:49,closed,Iurypiva/testing paths svg,"- [x] relates to issue #11337
- [x] tests added / passed
- [x] checked with [w3c reference](https://www.w3.org/TR/2dcontext/#dom-context-2d-lineto)",1,1,"['tag: component: tests', 'status: superseded', 'tag: component: bokehjs', 'tag: svg']"
33,692842450,11433,3834332,2021-07-19 18:51:06,2021-07-20 04:41:03,closed,Parse docstrings in examples for gallery detail pages,"- [X] issues: fixes #11381


Parses docstrings by adding a `doc` property to both ExampleHandler and CodeRunner, adding the example's docstring as a formatted element on the gallery detail page, and then stripping the redundant docstring out of the source code that appears along with the plot.
![Selection_061](https://user-images.githubusercontent.com/43212692/126212010-322f8d52-1359-4dbf-a918-769f84bed3cd.png)
",3,9,['status: accepted']
34,692193981,11427,3834332,2021-07-19 01:36:17,2021-08-01 13:36:53,closed,"Testing transforms, save, restore and clip","- [x] relates to issue #11337
- [x] tests added / passed

",1,10,"['status: superseded', 'tag: component: bokehjs', 'tag: svg']"
35,692112940,11426,3834332,2021-07-18 16:13:05,2021-07-19 02:32:24,closed,Fix pandas future warning,"- [X] issues: fixes #11415 
- [X] tests passed
",1,1,['status: accepted']
36,690932466,11421,3834332,2021-07-15 18:04:26,2021-07-15 19:49:40,closed,Add legend item visibility to user guide,"This PR adds a section on toggling visibility for legend items. This is a follow-up to #11412 and also fixes #9261.
cc @bryevdv ",2,6,"['tag: component: docs', 'status: accepted']"
37,689989684,11420,3834332,2021-07-14 14:59:28,2021-08-01 14:47:30,closed,add latex capabilities to tick labels,"- [x] issues: relates to #11355 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,11,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
38,689592238,11419,3834332,2021-07-14 05:18:53,2021-07-14 15:37:34,closed,Remove OrderedDict,"As of Python 3.7 standard  `dict` objects always retain insertion order. This small PR replaces all internal use of `OrderedDict` with `dict`. Additionally, one of the affected examples, `fourier_animated.py`, was also greatly simplified and streamlined, shaving off 100+ lines of code. 
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
39,689463144,11418,3834332,2021-07-13 23:20:59,,open,Update developer docs,"This PR collects my updates to the developer docs.

Fixes #11354 ",2,25,['status: WIP']
40,688168339,11417,3834332,2021-07-12 20:54:41,2021-07-12 22:39:20,closed,Consolidate pip dependencies,"This pull request fixes a problem with pip dependencies in `environment.yml`. We used to have two subsections listing pip dependencies, but yml only parses one pip subsection. This pr consolidates all pip dependencies in one subsection.
",3,2,"['status: accepted', 'type: task', 'reso: completed']"
41,687392524,11416,3834332,2021-07-11 20:44:28,2021-07-12 19:43:40,closed,add pandas future warning for commits.py #11415,"

- [x] issues: fixes #11415 
- [ ] tests n/a

",2,1,['status: declined']
42,685635365,11412,3834332,2021-07-08 02:31:57,2021-07-12 15:25:42,closed,Add visible property to LegendItem,"- [x] issues: fixes #9261
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@tcmetzger could we find a time to pair on adding visual tests to this PR? I could work through the new instructions fresh. ",4,5,['status: accepted']
43,685465605,11409,3834332,2021-07-07 19:48:08,2021-07-07 22:00:42,closed,Bring up 2.3.x changes,Forward ports changes from 2.3.3 as well as a few previous 2.3.x changes that had not been ported yet.,0,4,"['status: accepted', 'type: task', 'reso: completed']"
44,685272904,11407,3834332,2021-07-07 14:58:02,2021-08-01 13:08:41,closed,Fix SVG backend moveTo if called before beginPath breaking,"- [x] issues: fixes #11402 
- [x] tests added",0,7,"['status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
45,684590992,11406,3834332,2021-07-06 18:31:23,2021-07-06 19:28:07,closed,Bryanv/2 3 3 release notes,"
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
46,684046258,11405,3834332,2021-07-06 04:14:23,2021-08-01 13:32:01,closed,add ellipse to svg backend,"- [X] issues: fixes #11404 
- [X] tests added / passed

",1,5,['status: superseded']
47,683743411,11401,3834332,2021-07-05 14:18:20,2021-08-01 13:29:08,closed,Improve tests for SVG Backend - Transformations,"- [x] issues: relates to  #11337 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

",2,2,['status: superseded']
48,683207304,11400,3834332,2021-07-04 17:11:50,2021-07-07 20:01:32,closed,Change jitter caching to only cache offsets instead of values,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #10756
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,6,['status: ready']
49,682928136,11399,3834332,2021-07-02 23:53:38,2021-07-03 01:04:45,closed,Increase session_token_expiration (test),"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
50,682887417,11398,3834332,2021-07-02 21:23:46,2021-07-07 05:45:14,closed,Add intro for categorical chapter,"There is still lots of improvements that can be made to this chapter, but this PR fixes two of the most bothersome things for me for a long time:

* Lack of any introductory discussion *at all*.
* Oddball ""categorical offsets"" section. (Now all top-level sections relate to data/plot types)

cc @tcmetzger please make any edits you see fit. 
",0,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
51,682552075,11397,3834332,2021-07-02 11:24:30,2021-07-02 12:16:51,closed,Restore support for relative font size units,"This PR only restores support for em size units. If fact it's better than the original, because it respects CSS of the canvas and its parent elements. Originally, the base font was derived from `.bk-root`, ignoring any further styling. Other relative units may work to some extent, but not necessarily in a meaningful way. This will hopefully be addressed in 3.0.

fixes #11110
",0,2,"['status: accepted', 'NEEDS BACK PORT']"
52,681683530,11394,3834332,2021-07-01 09:45:59,2021-07-05 22:34:24,closed,Revert layout to pre PR #10779 state,"- [x] restore broken `ColorBar`'s functionality (hacked/worked around)
- [ ] add tests for all regressions (ref issue #11403)

- fixes #11344
- fixes #11188
- fixes #11161 
- fixes #11083
- fixes #11057
- fixes #10851
",1,3,"['status: accepted', 'NEEDS BACK PORT']"
53,680992424,11393,3834332,2021-06-30 15:41:35,2021-06-30 21:59:21,closed,11392 address lgtm issues,"- fixes #11392
- ignores some LGTM issues that were determined to not be an issue
- minor change to redirects in auth example
- change to `open` mode as requested in #11392 

",1,6,['status: accepted']
54,680429586,11391,3834332,2021-06-29 23:42:26,2021-06-30 09:11:48,closed,Allow to scroll to the initial active tab,fixes #11284,0,2,"['status: accepted', 'NEEDS BACK PORT']"
55,680410322,11390,3834332,2021-06-29 22:46:45,2021-06-30 09:11:13,closed,Add support for vertically oriented button groups,"fixes #11374
",3,3,['status: accepted']
56,680258465,11388,3834332,2021-06-29 18:13:19,2021-07-02 13:28:31,closed,Don't configure `z-index` on root elements,"This PR should fix problems with all tooltip-like components, as long as they use `.bring-to-front()` Less mixin.

TODO:

- [x] visual tests

fixes #11365",0,2,"['status: accepted', 'NEEDS BACK PORT']"
57,680014370,11387,3834332,2021-06-29 13:50:09,2021-06-29 14:26:50,closed,Use an exact extension's version in a CDN URL,"fixes #11380
",0,1,"['status: accepted', 'NEEDS BACK PORT']"
58,678901327,11385,3834332,2021-06-28 10:06:14,2021-06-29 13:56:40,closed,app_index.html missing quotes in href attribute,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #11384 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['status: accepted', 'NEEDS BACK PORT']"
59,676703680,11379,3834332,2021-06-24 00:30:43,2021-06-24 10:23:06,closed,Fix data access layout `SpatialIndex.bounds()`,fixes #11378 ,0,2,"['status: accepted', 'NEEDS BACK PORT']"
60,676510578,11377,3834332,2021-06-23 18:08:43,2021-07-05 23:17:19,closed,Backport changes from 2.4 to 2.3.3,"Backports PRs:

- [x] #11320
- [x] #11368 
- [x] #11370
- [x] #11379
- [x] #11385 
- [x] #11387 
- [x] #11391
- [x] #11397
- [x] #11388 
- [x] #11394",0,11,"['status: accepted', 'type: task', 'reso: completed']"
61,675830406,11371,3834332,2021-06-22 23:55:04,,open,Restore `bokeh-gl(.min).js` bundle,"Early WIP, doesn't work yet.

- [ ] resolve build system issues
- [x] resolve race conditions

fixes #11053
",0,1,['status: WIP']
62,675251596,11370,3834332,2021-06-22 09:37:35,2021-06-22 13:51:46,closed,Handle corner cases in LinearLinterpolationScale.v_compute(),"fixes https://github.com/holoviz/holoviews/issues/4978
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'NEEDS BACK PORT']"
63,674862624,11368,3834332,2021-06-21 20:38:28,2021-06-21 23:15:51,closed,Fix rendering of legends for ellipse glyph,fixes #11367,4,1,"['status: accepted', 'NEEDS BACK PORT']"
64,673822714,11350,3834332,2021-06-19 05:03:02,2021-06-19 21:31:07,closed,Add -f option for conda env,"Adds the required `-f` option to the developers guide section explaining the use of `conda env` to create a local development environment. 

Partially fixes #11334 
",0,1,['status: accepted']
65,670402789,11343,3834332,2021-06-15 13:22:51,2021-06-20 19:31:53,closed,WebGL markers and rects reuse arrays and buffers,"Improvements to performance of WebGL rect and marker glyphs by reusing rather than recreating `Float32Array`/`Uint8Array`s and ReGL `Buffer` objects. Similar to PR #11277 that applied to line glyphs; together the two PRs close the 5th item of issue #11052. No change in functionality or tests.

There is a new TypeScript file `webgl/buffer.ts` which brings functionality that was in `base.ts`, `regl_wrap.ts` and `webgl_utils.ts` together into a number of `WrapperBuffer` classes that wrap ReGL `Buffer` objects (which in turn wrap WebGL buffer objects) and is a more elegant solution.

To demonstrate the performance of WebGL vs canvas, I have used a similar approach to #11277 of rendering a set of `rect`s and using the chrome FPS counter whilst panning in small circular motions.  Test code is
```python
import numpy as np
np.random.seed(8417)
from bokeh.plotting import figure, curdoc, show

N = 10_000
backend = 'canvas'
#backend = 'webgl'

p = figure(width=800, height=800, output_backend=backend, title=backend, lod_threshold=None)
x = np.random.uniform(size=(N,))
y = np.random.uniform(size=(N,))
w = np.random.uniform(0.001, 0.003, size=(N,))
h = np.random.uniform(0.001, 0.003, size=(N,))
fc = np.random.randint(0, 0xffffffff, size=(N,), dtype=np.uint32)
lc = np.random.randint(0, 0xffffffff, size=(N,), dtype=np.uint32)
p.rect(x, y, width=w, height=h, fill_color=fc, line_color=lc)
show(p)
```
so each `rect` has a random width, height, line color and fill color.  On my dev laptop with integrated graphics the FPS results are:
![screenshot](https://user-images.githubusercontent.com/580326/122058946-109e9d00-cde4-11eb-9644-b05c309b2531.png)

Other performance improvements are possible and I'll get to them in due course.",7,2,"['type: feature', 'status: accepted', 'tag: component: bokehjs', 'tag: webgl']"
66,670313336,11342,3834332,2021-06-15 11:19:51,2021-06-15 19:51:11,closed,Refresh `bokehjs/package-lock.json`,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
67,670276613,11341,3834332,2021-06-15 10:25:55,2021-06-15 16:24:40,closed,Statically type the return of `json_item()`,"Follow up on PR #11340.
",0,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
68,670016576,11340,3834332,2021-06-15 03:09:11,2021-06-15 07:50:16,closed,Add version to json_items output,"- [x] issues: fixes #11146
- [x] tests added / passed

This should change to a dataclass but that should happen at 3.0",0,1,['status: accepted']
69,669167257,11338,3834332,2021-06-14 02:33:32,2021-06-14 03:08:51,closed,Bryanv/11298 release build deps,"- [x] issues: fixes #11298

Hopefully after this we can cut dev builds again. 

@mattpap note I set pytest to 6.2.x since use creating the env locally with the old env files was picking 6.0.x causing tests to fail. ",2,2,['status: accepted']
70,669073736,11337,3834332,2021-06-13 15:44:09,2021-08-01 21:18:55,closed,Add tests for SVG exports,"- [x] relates to issue #11337
- [x] tests added / passed

Adds initial adaptations to the testing framework to handle debugging of the tests.
As states on #11337 more PRs will be open to cover the rest of the SVG backend
",5,41,"['status: accepted', 'type: task', 'reso: completed', 'tag: svg']"
71,668839799,11332,3834332,2021-06-12 10:54:03,2021-06-12 11:32:52,closed,Add return type annotation to `__init__`,"Added for the sake of completeness. Extracted from PR #11330.
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
72,666309064,11330,3834332,2021-06-09 20:56:05,2021-06-13 17:54:39,closed,Statically type more of bokeh,"
",1,34,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
73,666080539,11329,3834332,2021-06-09 16:47:11,2021-06-09 16:48:59,closed,Bump pillow from 8.1.1 to 8.2.0 in /docker-tools/debian,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 8.1.1 to 8.2.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>
<blockquote>
<h2>8.2.0</h2>
<p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.2.0.html</a></p>
<h2>Changes</h2>
<ul>
<li>Security fixes for 8.2.0 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5377"">#5377</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>
<li>Move getxmp() to JpegImageFile <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5376"">#5376</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Added getxmp() method <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5144"">#5144</a> [<a href=""https://github.com/UrielMaD""><code>@​UrielMaD</code></a>]</li>
<li>Compile LibTIFF with CMake on Windows <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5359"">#5359</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>
<li>Add ImageShow support for GraphicsMagick <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5349"">#5349</a> [<a href=""https://github.com/latosha-maltba""><code>@​latosha-maltba</code></a>]</li>
<li>Tiff crash fixes in TiffDecode.c <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5372"">#5372</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>
<li>Remove redundant check (addition to <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5364"">#5364</a>) <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5366"">#5366</a> [<a href=""https://github.com/kkopachev""><code>@​kkopachev</code></a>]</li>
<li>Do not load transparent pixels from subsequent GIF frames <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5333"">#5333</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Use LZW encoding when saving GIF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5291"">#5291</a> [<a href=""https://github.com/raygard""><code>@​raygard</code></a>]</li>
<li>Set all transparent colors to be equal in quantize() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5282"">#5282</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Allow PixelAccess to use Python <strong>int</strong> when parsing x and y <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5206"">#5206</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Removed Image._MODEINFO <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5316"">#5316</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Add preserve_tone option to autocontrast <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5350"">#5350</a> [<a href=""https://github.com/elejke""><code>@​elejke</code></a>]</li>
<li>Only import numpy when necessary <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5323"">#5323</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fixed linear_gradient and radial_gradient I and F modes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5274"">#5274</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Add support for reading TIFFs with PlanarConfiguration=2  <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5364"">#5364</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>
<li>More OSS-Fuzz support <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5328"">#5328</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>
<li>Do not premultiply alpha when resizing with Image.NEAREST resampling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5304"">#5304</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>
<li>Use quantization method attributes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5353"">#5353</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Dynamically link FriBiDi instead of Raqm <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5062"">#5062</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>
<li>Removed build_distance_tables return value <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5363"">#5363</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Allow fewer PNG palette entries than the bit depth maximum when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5330"">#5330</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Use duration from info dictionary when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5338"">#5338</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Improved efficiency when creating GIF disposal images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5326"">#5326</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Stop flattening EXIF IFD into getexif() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4947"">#4947</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Replaced tiff_deflate with tiff_adobe_deflate compression when saving TIFF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5343"">#5343</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Save ICC profile from TIFF encoderinfo <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5321"">#5321</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Moved RGB fix inside ImageQt class <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5268"">#5268</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix -Wformat error in TiffDecode <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5305"">#5305</a> [<a href=""https://github.com/lukegb""><code>@​lukegb</code></a>]</li>
<li>Allow alpha_composite destination to be negative <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5313"">#5313</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Ensure file is closed if it is opened by ImageQt.ImageQt <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5260"">#5260</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Added ImageDraw rounded_rectangle method <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5208"">#5208</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Added IPythonViewer <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5289"">#5289</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Only draw each rectangle outline pixel once <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5183"">#5183</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Use mmap instead of built-in Win32 mapper <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5224"">#5224</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Handle PCX images with an odd stride <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5214"">#5214</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Only read different sizes for &quot;Large Thumbnail&quot; MPO frames <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5168"">#5168</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>Updated harfbuzz to 2.8.0 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5334"">#5334</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
</ul>
<h2>Deprecations</h2>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>
<blockquote>
<h2>8.2.0 (2021-04-01)</h2>
<ul>
<li>
<p>Added getxmp() method <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5144"">#5144</a>
[UrielMaD, radarhere]</p>
</li>
<li>
<p>Add ImageShow support for GraphicsMagick <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5349"">#5349</a>
[latosha-maltba, radarhere]</p>
</li>
<li>
<p>Do not load transparent pixels from subsequent GIF frames <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5333"">#5333</a>
[zewt, radarhere]</p>
</li>
<li>
<p>Use LZW encoding when saving GIF images <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5291"">#5291</a>
[raygard]</p>
</li>
<li>
<p>Set all transparent colors to be equal in quantize() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5282"">#5282</a>
[radarhere]</p>
</li>
<li>
<p>Allow PixelAccess to use Python <strong>int</strong> when parsing x and y <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5206"">#5206</a>
[radarhere]</p>
</li>
<li>
<p>Removed Image._MODEINFO <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5316"">#5316</a>
[radarhere]</p>
</li>
<li>
<p>Add preserve_tone option to autocontrast <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5350"">#5350</a>
[elejke, radarhere]</p>
</li>
<li>
<p>Fixed linear_gradient and radial_gradient I and F modes <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5274"">#5274</a>
[radarhere]</p>
</li>
<li>
<p>Add support for reading TIFFs with PlanarConfiguration=2 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5364"">#5364</a>
[kkopachev, wiredfool, nulano]</p>
</li>
<li>
<p>Deprecated categories <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5351"">#5351</a>
[radarhere]</p>
</li>
<li>
<p>Do not premultiply alpha when resizing with Image.NEAREST resampling <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5304"">#5304</a>
[nulano]</p>
</li>
<li>
<p>Dynamically link FriBiDi instead of Raqm <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5062"">#5062</a>
[nulano]</p>
</li>
<li>
<p>Allow fewer PNG palette entries than the bit depth maximum when saving <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5330"">#5330</a>
[radarhere]</p>
</li>
<li>
<p>Use duration from info dictionary when saving WebP <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5338"">#5338</a>
[radarhere]</p>
</li>
<li>
<p>Stop flattening EXIF IFD into getexif() <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4947"">#4947</a>
[radarhere, kkopachev]</p>
</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/python-pillow/Pillow/commit/e0e353c0ef7516979a9aedce3792596649ce4433""><code>e0e353c</code></a> 8.2.0 version bump</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/ee635befc6497f1c6c4fdb58c232e62d922ec8b7""><code>ee635be</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5377"">#5377</a> from hugovk/security-and-release-notes</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/694c84f88f4299319bac49b20bd9baae82ca41b8""><code>694c84f</code></a> Fix typo [ci skip]</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/8febdad8dd51ad5c75a1db78492973588c7cbf6b""><code>8febdad</code></a> Review, typos and lint</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/fea419665b75f11910e44cfe6f89622fda63e78b""><code>fea4196</code></a> Reorder, roughly alphabetic</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/496245aa4365d0827390bd0b6fbd11287453b3a1""><code>496245a</code></a> Fix BLP DOS -- CVE-2021-28678</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/22e9bee4ef225c0edbb9323f94c26cee0c623497""><code>22e9bee</code></a> Fix DOS in PSDImagePlugin -- CVE-2021-28675</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/ba65f0b08ee8b93195c3f3277820771f5b62aa52""><code>ba65f0b</code></a> Fix Memory DOS in ImageFont</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/bb6c11fb889e6c11b0ee122b828132ee763b5856""><code>bb6c11f</code></a> Fix FLI DOS -- CVE-2021-28676</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/5a5e6db0abf4e7a638fb1b3408c4e495a096cb92""><code>5a5e6db</code></a> Fix EPS DOS on _open -- CVE-2021-28677</li>
<li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/8.1.1...8.2.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=8.1.1&new-version=8.2.0)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",0,1,"['status: accepted', 'type: task', 'reso: completed', 'dependencies', 'python']"
74,665769369,11327,3834332,2021-06-09 10:20:11,2021-06-09 19:17:10,closed,Fill-in missing `__future__` imports for lazy annotations,"Extracted from PR #11290.
",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
75,664916981,11325,3834332,2021-06-08 13:26:52,2021-06-09 19:20:03,closed,Fix typo in AuthProvider._validate error message. login_url instead of logout_url,"fixed typo : login_url in the error message instead of logout_url

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
76,662764786,11322,3834332,2021-06-06 04:48:23,2021-06-19 01:06:36,closed,Add 'experimental' note to extensions chapter,"As discussed in https://discourse.bokeh.org/t/compiled-components-final-step-help-needed-removing-nodejs-from-the-build-process/7668/4, this PR adds a note to the extensions chapter of the user guide.",3,2,"['tag: component: docs', 'status: accepted', 'type: task']"
77,661960598,11320,3834332,2021-06-04 18:02:14,2021-06-08 08:11:30,closed,Upgrade to Chrome 91 and fix failing examples' tests,"fixes #11319 
",1,4,['status: accepted']
78,657425136,11314,3834332,2021-05-29 08:10:39,2021-05-29 10:39:36,closed,Upgrade to TS 4.3 and refresh package lock files,,0,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
79,654088649,11304,3834332,2021-05-26 17:56:40,2021-06-15 07:52:27,closed,Update docs for BokehJS visual testing,"Based on #11183, I am working on updating the developer documentation on visual testing for BokehJS. The goal is to make it easier for new (and existing) contributors to write and update visual tests for BokehJS. ",3,14,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
80,652620745,11302,3834332,2021-05-25 17:28:39,2021-07-02 16:05:07,closed,Drop Cookie header and compress token payloads,"Implements the suggestions in #11301:

1. Drop the 'Cookie' header and restore it from the explicit Cookie payload.
2. Enable zlib compression for token payloads

The extra payloads are compressed separately from the main token content since the frontend has to access part of the token to get access to the session id. In the particular very bare-bones case I tested the compression only reduced the payload by about 10%, but even that is worth it.

- [x] issues: fixes #11301
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,5,['status: accepted']
81,651638319,11297,3834332,2021-05-24 21:18:13,2021-06-22 16:53:07,closed,Correctly initialize WebGL non-base marker/scatter glyphs,"Candidate fix for issue #11288.

Scatter glyphs using `output_backend=""webgl""` have more complicated initialization that other WebGL glyphs as their marker types can be changed dynamically and it is necessary to check if our WebGL code supports the required marker type.  Currently when the marker type is set or changed then `ScatterView._set_data()` is called and this creates or recreates the `MarkerGL` as required.  However, this only occurs for the `base` glyph of the `GlyphRendererView`; other glyphs such as the selection glyph are not updated via `set_data` and so selection, etc, revert to using the canvas backend.

I've opted for the minimal change which is to move the `MarkerGL` update from `Glyph.set_data()` to `Glyph.set_visuals()` as all the glyphs are updated by the latter.

I have tested it manually, but I haven't added a CI test.  A simple visual test would appear to be OK because of the slight differences between the canvas and WebGL antialiasing, but the problem here would be if a future regression occurs then the pixel differences will be so small that we are liable to commit a baseline image change without noticing that it is due to a change of backend.",2,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
82,650578902,11293,3834332,2021-05-22 06:53:51,2021-06-10 20:42:12,closed,Added conda init command in Getting Set Up,"Added init conda command into this dev_guide

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #11282
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,4,['status: accepted']
83,649519688,11290,3834332,2021-05-20 22:33:16,2021-06-12 10:44:57,closed,Statically type various parts of bokeh,"I started with `bokeh.application.handlers` and then gradually typed everything that was imported there and so on. As with other related PRs, this is a rough approximation, which will be gradually refined as type coverage increases.",4,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
84,649267443,11289,3834332,2021-05-20 18:23:44,2021-05-20 19:53:21,closed,"Allow `div(element)` instead of `div({}, element)`",,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
85,647174206,11287,3834332,2021-05-19 00:07:31,2021-05-23 23:04:15,closed,Start statically type `bokeh.core.properties`,"This is the first approximation, which is intended to fill in as many types as possible, without trying to establish overall type soundness. This will be done later on, when sufficiently large percent of code has been typed. Localized soundness may be have been established in some cases. This work is insufficient to allow static typing of models' properties, as our approach to descriptors is not supported by mypy (and won't be any time soon), at least not without some unspecified changes (perhaps there may be a way to work around this, without requiring major changes).",2,1,"['status: superseded', 'type: task', 'tag: mypy']"
86,646882734,11286,3834332,2021-05-18 15:54:35,2021-05-26 08:12:35,closed,docs: fix code snippet in Label,,5,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
87,645678449,11283,3834332,2021-05-17 08:58:49,2021-05-17 09:48:59,closed,Normalize string syntax across bokehjs,"Prefer double quotes by default, allow single quotes to avoid excessive escapting, use template strings for multi-line, tagged and interpolated strings.",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
88,645233722,11277,3834332,2021-05-15 23:22:33,2021-05-16 21:05:08,closed,WebGL line glyphs reuse arrays and buffers,"Improvements to WebGL line glyphs to reuse `Float32Array` and ReGL `Buffer` objects rather than recreating them frequently. No change in functionality or rendered output.  Partially addresses the 5th item of issue #11052, but I need to do similar changes to the WebGL `rect` and `marker` glyphs to complete that item.

The motivation is performance improvement.  To demonstrate this I am tentatively stepping into the realm of benchmarking, but in a somewhat manual and rudimentary way.  I am using this modified version of the 10k lines example
```python
import numpy as np
np.random.seed(8417)
from bokeh.plotting import figure, curdoc

N = 500_000
backend = 'webgl'

p = figure(width=800, height=800, output_backend=backend, title=backend, lod_threshold=None)
x = np.linspace(0, 10*np.pi, N)
y = np.cos(x) + np.sin(2*x+1.25) + np.random.normal(0, 0.001, (N, ))
p.line(x, y, line_width=3)
curdoc().add_root(p)
```
which is a single line of half a million points in an 800x800 pixel canvas.  I am rendering it in chromium and once it is displayed I am panning it with a circular motion and seeing what the chromium FPS counter reports.  This is a very simple test but I have to start somewhere.  My dev machine is a new-ish low spec Dell business laptop with integrated graphics, so some WebGL capability but certainly nothing special.

FPS figures after these changes are 14.4 for webgl and 4.2 for canvas (measurement precision is apparently 0.6 FPS).  Before these changes (commit 4046480) webgl was 13.8 FPS so I haven't really improved it much with this PR.  Bokeh 2.2.3 with the previous webgl implementation gives 4.2 FPS for webgl and 3.6 for canvas.",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
89,643872182,11272,3834332,2021-05-13 10:27:49,2021-05-13 11:20:25,closed,Upgrade TypeScript to 4.3-rc,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
90,643150322,11262,3834332,2021-05-12 13:10:15,2021-05-12 13:53:50,closed,Move WebGLRenderingContext use to ReGL,"ReGL recommends that the underlying WebGLRenderingContext should not be used directly (https://github.com/regl-project/regl/blob/gh-pages/API.md#unsafe-escape-hatch).  There were a few uses in `bokehjs/src/lib/models/canvas/canvas.ts` to set the viewport, set the scissor box and clear the WebGL rendering buffer; this PR moves the functionality to `ReglWrapper`.

The `canvas.ts` `WebGLState` type now stores a `ReglWrapper` rather than a `WebGLRenderingContext` and this is what is passed to the various WebGL glyph constructors.",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
91,639802129,11258,3834332,2021-05-11 08:46:58,2021-05-21 07:43:55,closed,Add initial support for `PathLike` where `str` paths are accepted,fixes #11166,2,6,['status: accepted']
92,637461960,11254,3834332,2021-05-10 11:46:02,2021-05-19 09:28:57,closed,Use dataclasses in `bokeh.core.validation`,"Also statically types `bokeh.core.validation`.

fixes #11221",2,8,['status: accepted']
93,636673856,11253,3834332,2021-05-10 02:13:50,2021-05-10 02:59:25,closed,[NO SQUASH] More 2.4 backports,,0,2,"['status: accepted', 'type: task', 'reso: completed']"
94,636126436,11252,3834332,2021-05-09 17:51:04,2021-05-10 07:21:39,closed,Fix webgl line alpha issues,"Fixes two WebGL line rendering alpha-related issues (1st and 5th items of issue #11050).

* Thin lines (`linewidth < 1`) had poor antialiasing.  This is fixed by rendering such lines using `linewidth = 1` and correspondingly reduced `alpha`.  Solution is the same as used in `rect` glyphs, but implemented in TypeScript rather than WebGL shader as a `line` glyph has constant `linewidth` and `alpha`.
* Overlapping line segments with `alpha < 1` were rendered with too high an alpha. This is fixed by changing the blending within a single `line` rendering to use the maximum `alpha` (and associated RGB) rather than the standard approach of accumulating `alpha` (and RGB).

There are already tests that cover both situations. Here is part of the `Line_glyphs__should_support_crossing_line` test before and after the fix
![old1](https://user-images.githubusercontent.com/580326/117581621-bb40e300-b0f5-11eb-9a39-d8021e8cf2a4.png) ![new1](https://user-images.githubusercontent.com/580326/117581625-bed46a00-b0f5-11eb-9372-05ec27b61bd8.png)",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
95,633498047,11251,3834332,2021-05-07 21:49:12,2021-08-04 08:31:51,closed,bokehjs: Handle NaN values in Stacker method,"To avoid breaking of the stacker method if NaN values are in CDS an if else condition is needed
Example in JS:
`1+null=1` (working and not changed)
`1+NaN=NaN` is now handled and works like `1+0=1`

- [ ] issues: fixes #9568

**Example Code**
```
from bokeh.plotting import figure, output_notebook, show
from bokeh.layouts import row
from bokeh.models import ColumnDataSource
output_notebook()

import pandas as pd

data = dict(index=[1, 2, 3, 4],
            a=[4, 5, None, 7],
            b=[9, None, 7, 6])

source = ColumnDataSource(data)

f = figure(width=300, height=300)
f.vbar_stack(x=""index"", stackers=[""a"", ""b""], source=source,
             width=0.5, color=[""red"", ""blue""])

df = pd.DataFrame({'a':[4, 5, None, 7], 'b':[9, None, 7, 6]})

g = figure(width=300, height=300)
g.vbar_stack(x=""index"", stackers=[""a"", ""b""], source=df,
             width=0.5, color=[""red"", ""blue""])
show(row(f,g))
```

**Output**
![StackBar](https://user-images.githubusercontent.com/68053396/117511719-88300f80-af8e-11eb-80a2-3527e84390c9.PNG)
",4,3,['status: declined']
96,633169603,11250,3834332,2021-05-07 17:59:46,2021-05-07 18:00:10,closed,Update installation link,"Updates a link in https://docs.bokeh.org/en/latest/docs/first_steps.html to point to the more detailed [installation details](https://docs.bokeh.org/en/latest/docs/first_steps/installation.html#installation) page.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'NEEDS FORWARD PORT']"
97,632641487,11249,3834332,2021-05-07 12:02:16,2021-05-07 14:36:39,closed,Invalidate coords of layoutable renderers after resize,fixes #11231,1,5,"['status: accepted', 'NEEDS BACK PORT']"
98,632509778,11248,3834332,2021-05-07 10:16:05,2021-05-07 13:28:42,closed,Correct description for Linear/LogColorMapper,Fixes #11247,1,1,"['status: accepted', 'NEEDS BACK PORT']"
99,632400627,11246,3834332,2021-05-07 08:21:30,2021-05-07 08:48:07,closed,Update bokehjs' dependencies,,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
100,631888039,11244,3834332,2021-05-06 20:46:26,2021-08-04 08:32:12,closed,Update _line_stack to enable correct work on DataFrames,"- [ ] issues: fixes #10067

This change enables the stacker method for CDS and DataFrames. This method is not able to work with a Series, I think this is ok, because there is nothing to stack with information for only one line. 

Right now no tests are added, but I am interested to contribute.


",12,20,['status: declined']
101,630869459,11243,3834332,2021-05-05 20:10:04,2021-05-06 22:14:56,closed,Clarify instructions for GOOGLE_API_KEY,"fixes #11242
Clarify and simplify instructions for setting GOOGLE_API_KEY in the Documentation section of the developers guide.

",0,1,"['status: accepted', 'NEEDS FORWARD PORT']"
102,630172180,11239,3834332,2021-05-04 23:45:41,,open,Migrate bokehjs' components to use shadow DOM,"This supersedes PR #10297. More likely than not, this PR will only cover a few areas of bokehjs (so far toolbars and menus), and I will be working on the rest in subsequent PRs. Note that this work intentionally breaks legacy support. I first need to establish what will need to be polyfilled, which this work will allow me to do, and then I can introduce the necessary polyfills and restore legacy support (at the end of 2.4 release cycle).

fixes #9757
",0,12,['status: WIP']
103,630150172,11238,3834332,2021-05-04 22:51:58,2021-05-05 09:10:41,closed,Update to TS 4.3-dev and enable `noImplicitOverride`,"TypeScript 4.3 will be released on May 25th. This PR fixes a few compatibility issues, but primarily it enables `noImplicitOverride` option in all tsconfigs, which in turn enables analysis of overridden members (requires `override` keyword when a member is being overridden). This doesn't affect third-party extensions, as this options is an opt-in.
",7,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
104,630148474,11237,3834332,2021-05-04 22:47:34,2021-05-05 03:48:06,closed,[NO SQUASH] 2.3.2 forward ports,"
",0,3,"['status: accepted', 'type: task', 'reso: completed']"
105,630028660,11235,3834332,2021-05-04 19:07:00,2021-05-04 19:51:49,closed,updates for 2.3.2 release,"
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
106,628830615,11232,3834332,2021-05-03 05:05:21,2021-05-04 18:47:39,closed,Fix OpenURL escaping,"- [x] issues: fixes #11182
- [x] tests added / passed

This fixes the issues. @mattpap any thoughts on testing? I briefly looked at using `sinon.spy` but some additional refactoring would be needed to make that work 
",12,6,['status: accepted']
107,628227813,11230,3834332,2021-04-30 21:55:30,2021-05-01 03:12:27,closed,Link to Code of Conduct in issue and feature request templates,cc @bryevdv ,2,2,"['status: accepted', 'type: task', 'reso: completed']"
108,626123999,11225,3834332,2021-04-29 13:50:37,2021-05-02 15:00:47,closed,Improve static typing in `bokeh.command`,"
",2,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
109,625971644,11224,3834332,2021-04-29 10:14:25,2021-04-29 19:59:49,closed,Full typescript for WebGL code,"This PR fully types the WebGL/ReGL code which previously contained many `any`s.  There is no associated issue but was last discussed/requested in PR #11159.  I have also removed the debug mesh renderer in `line_gl.ts` as it is no longer needed and certainly doesn't need typing.

The new `interface`s in `types.ts` are very useful; less so are the repeated
```typescript
u_canvas_size: regl.prop<Props, 'canvas_size'>('canvas_size'),
u_pixel_ratio: regl.prop<Props, 'pixel_ratio'>('pixel_ratio'),
u_antialias: regl.prop<Props, 'antialias'>('antialias'),
```
in `regl_wrap.ts`, but they are not difficult to understand or change so we may as well tolerate them.

I have tried not to make unrelated changes, so we are left with some duplication of code.  This will all be improved in the long run as the `interface` hierarchy will become cleaner when I implement missing functionality (e.g. hatching on markers), and the WebGL glyph member variables can be reduced/removed when I move some of the `regl_wrap.ts` functionality to the glyphs so that arrays are implemented as ReGL `Buffer`s to reduce the CPU to GPU communication and give much better performance.",2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: webgl', 'tag: typescript']"
110,625748013,11223,3834332,2021-04-29 03:13:42,2021-04-30 05:30:10,closed,Fix links for line properties,"This PR fixes some broken internal links in styling.rst.

- [x] issues: fixes #11215 ",3,1,['status: declined']
111,625139638,11220,3834332,2021-04-28 11:30:46,2021-04-29 04:23:43,closed,Add support for lazy annotations boilerplate,"Given we dropped support for 3.6, then with 3.7 we can finally use lazy annotations, which simplifies static typing (self and forward references, etc.). Sadly this means sprinkling entire codebase with `from __future__ import annotations`.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
112,625134710,11219,3834332,2021-04-28 11:23:18,2021-04-29 11:49:31,closed,Use dataclasses in bokeh.io.state,"This is to make the first step towards using dataclasses instead of `dict` based ad-hoc data structures. This PR improves static typing coverage in `bokeh.io`, as using dataclasses naturally encourages static typing.",0,3,"['status: accepted', 'type: task']"
113,625094866,11218,3834332,2021-04-28 10:23:44,2021-04-29 08:21:34,closed,"Unify {Figure,Toolbar}.active_* properties",fixes #11216 ,0,2,['status: accepted']
114,624225903,11214,3834332,2021-04-27 11:30:49,2021-05-02 09:55:26,closed,Add support for toolbar's overflow menu,"In case in which tools don't fit in the available plot/layout space, any overflow tool are added to a context menu which can be displayed by clicking ""..."" button.

![image](https://user-images.githubusercontent.com/27475/116234129-7cf20e00-a75c-11eb-8278-4ad83d1d441d.png)
",1,12,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
115,623976485,11213,3834332,2021-04-27 04:49:34,2021-04-28 02:56:47,closed,support for publishing wheels,"- [x] issues: fixes #10572

Will have to merge, and cut a dev build to test. 

Targeting 2.4 because this would be strange to add on a point release.

",2,2,['status: accepted']
116,623805990,11212,3834332,2021-04-26 22:32:09,2021-04-26 23:18:46,closed,Ensure downstream build checks out all git tags,"The downstream CI build is sporadically failing because some downstream projects (e.g. `dask`) will try to do some `bokeh` version parsing which fails (xref the discussion starting here https://github.com/bokeh/bokeh/pull/11207#issuecomment-827133948). This _might_ be because GitHub actions isn't checking out all the `bokeh` git tags which results in `versioneer` getting `bokeh`s version incorrect. 
",3,2,['status: declined']
117,623621778,11210,3834332,2021-04-26 19:14:49,2021-04-26 19:46:47,closed,[NO SQUASH] remove black codebase check (#11208),"
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
118,623561090,11209,3834332,2021-04-26 18:00:35,2021-04-29 04:17:13,closed,[NO SQUASH] 2.4 backports,"
",5,3,"['status: accepted', 'type: task', 'reso: completed']"
119,623523827,11208,3834332,2021-04-26 17:10:51,2021-04-26 19:08:20,closed,remove black codebase check,"- [x] issues: fixes #9636

",2,1,['status: accepted']
120,623518771,11207,3834332,2021-04-26 17:03:07,2021-04-26 22:36:37,closed,Include Dask testing dependencies in downstream CI,"I noticed there are some `pytest` setup errors related to testing `dask` / `distributed` in the downstream CI build. See, for example, [this CI build](https://github.com/bokeh/bokeh/pull/11176/checks?check_run_id=2433271983). This PR updates how we install `dask` and `distributed` to include extra testing dependencies (e.g. `pytest-rerunfailures`).

I should note that while `dask` has an `extras_require` for installing testing dependencies, `distributed` does not. That said, the change here will resolve the errors we're hitting today as `pytest-rerunfailures`, which is causing setup errors when running `distributed` tests, is included in the `dask[""test""]` extra. 

- [ ] ~~issues: fixes #xxxx~~
- [ ] tests added / passed
- [ ] ~~release document entry (if new feature or API change)~~
",9,4,"['tag: component: tests', 'type: task', 'reso: completed', 'tag: CI']"
121,623295132,11206,3834332,2021-04-26 12:38:37,2021-04-26 16:13:56,closed,Allow RadioGroup.active == null,"fixes #11203
",0,1,['status: accepted']
122,622943081,11204,3834332,2021-04-26 04:30:22,2021-04-28 08:13:42,closed,Update to isort 5.8,"- [x] issues: fixes #10287
- [x] tests added / passed

A few comments on goals:

* make all the individual `.isort.cfg` files as nearly identical as possible
    - `examples` and `sphinx` are identical, and a restricted to line length 88 since they need to be formatted in docs
    - `bokeh` and `release` are identical, and `test` almost so (it needs specual adds for local imports)
* I used our 165 length for `bokeh`, `release`, and `test` for consistency, but I *really* don't like super long import lines. I do not ever want to to have to scroll *horizontally* to see imports. I used `force_grid_wrap=5` which is not perfect, but seems OK

@mattpap we don't have to merge this especially soon, while so many PRs are in flight. But I did want to nail down a workable configuration (will keep looking for any tweaks to improve this as well)",4,6,['status: accepted']
123,622846777,11202,3834332,2021-04-25 21:52:37,2021-04-26 21:09:10,closed,Consider hatch visuals in the plotting API,"fixes #11154
",3,7,['status: accepted']
124,622742551,11201,3834332,2021-04-25 10:48:11,2021-04-26 16:16:52,closed,"Replace {plot_->}{width,height} in gridplot()",fixes #11184 ,0,1,['status: accepted']
125,622739865,11200,3834332,2021-04-25 10:28:58,2021-04-26 16:15:37,closed,Don't allocate space for invisible tick labels,fixes #11162,3,1,['status: accepted']
126,622737547,11199,3834332,2021-04-25 10:13:19,,open,Make draw/edit tools work with non-linear scales,"- [ ] address test failures
- [ ] add tests for non-linear axes

fixes #11196
",0,1,['status: WIP']
127,622721850,11198,3834332,2021-04-25 08:24:31,2021-04-25 08:44:55,closed,Correct class name in describe(),"- [ ] issues: fixes #11197 
",0,1,['status: accepted']
128,622550329,11195,3834332,2021-04-24 08:55:12,2021-04-24 19:02:04,closed,Collect performance metrics during integration tests,"This finally takes advantage of devtools' protocol beyond simple remote execution of javascript, and allows collection of certain performance metrics during evaluation of integration tests (e.g. JS heap utilization, DOM node count, event listener count, etc.).  Metrics are collected after each test. Results are available at http://localhost:5777/integration/metrics (similarly test report http://localhost:5777/integration/report). One can view metrics for specific platform with `?platform=linux` (or `windows`, `macos`).

The presentation is very rudimentary at this time.

![image](https://user-images.githubusercontent.com/27475/115953366-4f525e00-a4eb-11eb-9e87-2a9c9035bdcb.png)
",1,1,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
129,622303048,11194,3834332,2021-04-23 20:12:10,2021-04-24 06:32:53,closed,Lazily serialize base64 encoded ndarrays,"fixes #11169
",0,1,['status: accepted']
130,621267308,11189,3834332,2021-04-22 16:30:48,2021-04-22 18:36:20,closed,Update baselines for Chromium 90,"
",4,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
131,620628453,11187,3834332,2021-04-21 23:25:21,2021-05-19 02:19:22,closed,Expand rst_epilog,"Following up on the discussion in https://github.com/bokeh/bokeh/pull/11129#discussion_r608312454, this PR expands Sphinx' `rst_epilog` for common substitutions.
This is a work in progress, I will keep adding more substitutions over the next few days.
cc @bryevdv 
",5,20,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
132,620443194,11185,3834332,2021-04-21 18:46:31,2021-04-24 06:30:46,closed,"Update ""LogTickFormatter"" to accept ""min_exponent""","This is the JS side to enable ""min_exponent"" if an axis is logarithmic.
- [ ] issues: fixes #11007
",13,16,['status: accepted']
133,620254016,11183,3834332,2021-04-21 14:09:29,2021-05-17 08:23:35,closed,Additional visual tests for Legend annotation,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: relates to #10834
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,26,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
134,619823458,11181,3834332,2021-04-21 03:18:59,2021-04-26 22:37:09,closed,Add exception raising for validation errors,"Work in progress for issue #10733 

Added exception raising for validation errors and warnings and replaced env variable BOKEH_STRICT with BOKEH_VALIDATION_EXCEPTIONS

In a comment on the issue page (https://github.com/bokeh/bokeh/issues/10733#issuecomment-735002152), it was initially recommended for check_integrity to only be for returning messages, and to punt the potential exception raising downstream to the caller to avoid a muddled API. 
However, after changing BOKEH_STRICT to  BOKEH_VALIDATION EXCEPTIONS as recommended in this comment (https://github.com/bokeh/bokeh/issues/10733#issuecomment-735003520), I noticed that if potential exception raising was left in the caller, I wouldn't be able to access messages to check for a warning or error. In the original pull request made for this issue I saw a comment (https://github.com/bokeh/bokeh/pull/10780#r550380992) that said everything should be handled inside check_integrity, and so I was wondering if I should be doing potential exception raising in check_integrity? If not, how should I go about accessing messages from the validate function in document.py?
",16,14,['status: accepted']
135,618138174,11180,3834332,2021-04-19 16:10:46,2021-04-19 18:27:53,closed,Pandas Data Types Branch 2.1,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #xxxx
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,10,['status: declined']
136,617415753,11176,3834332,2021-04-18 03:40:21,2021-04-26 19:48:21,closed,More HasProps cleanup,"- [x] issues: fixes #10950
- [x] tests added / passed

This is the final PR for now to clean up and simplify `HasProps`:

* Consolidates `BasicPropertyDescriptor` down in to `PropertyDescriptor`. 
* Gets all the private sphinx links code outside of HasProps. This is also better because inheritance was the wrong tool for this. We need a default that can be overridden in isolated type, but not necessarily subtypes.
* Made `Alias` a proper property, removed gorpy special casing inside `HasProps`
* Adds `difflib` property typo suggestions to `__getattr__`

Finally this PR improves all the caching and property methods on `HasProps`. The basis is a new `properties` method that returns a dict that maps names to actual property objects. @mattpap it occurred to me that this this the best compromise since using this dict in a list context will preserve existing behavior. 

Other methods now also always return the same sort of mapping, just filtered appropriately (e.g. dataspecs, or with refs). All of these methods now use `@lru_cache` to cache results and removes all explicit caching.


Edit: I also added a minor optimization in `__getattr__` and `__setattr__`: A call to `lookup` takes ~2.5x as long as a call to `.properties` and needing to lookup (to check for *Python* property) is much rarer to need. So I split the condition and don't call `lookup` unless actually necessary.",16,14,['status: accepted']
137,617389973,11174,3834332,2021-04-17 22:35:18,2021-04-21 15:29:23,closed,Replace deprecated jinja2.Markup with jinja2.tojson,"Avoid deprecated `jinja2.Markup` and use `markupsafe.Markup` instead.
https://github.com/pallets/jinja/blob/d77a91b1cba05d9dc78d4b03d312fcff3ca91ebb/src/jinja2/utils.py#L835-L843
This introduces a new direct dependency, but it _is_ the designated replacement.

Found this while looking why [my `--pre` cron CI run fails](https://github.com/kernc/backtesting.py/runs/2369549640?check_suite_focus=true#step:11:238) all of a sudden. It obviously can't be this, but maybe you know better — ideas appreciated. :pray: 

<!--All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #11175
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,4,['status: accepted']
138,616999892,11171,3834332,2021-04-16 17:31:52,2021-06-07 18:17:37,closed,Added flag to TapTool such that OpenURL uses source.inspected.indices,"This is my proposed solution for #11075. Added `tap_type` to `data` in `TapTool._select`, and then made `OpenURL.execute` check for the tap behavior such that it looks at `source.selected.indices` or `source.inspected.indices` appropriately. I had trouble with setting up debugging, and this is my first time working with TypeScript, so I apologize for any errors. The part I'm unsure about is line 44 in open_url.ts. I believe this is the correct way to access the flag I placed in `data`.",16,8,['status: declined']
139,615295764,11165,3834332,2021-04-14 14:35:35,2021-05-04 20:44:11,closed,Add support for embedding plots/layouts in tooltips,"Very early work in progress.

The specific goal and a motivating case of this PR is adding support for templating tooltips and embedding plots/layouts in tooltips. However, the underlying changes are much more generic and eventually will lead to better integration of DOM and bokeh's layouts.

Here's an example of hover tooltips based on a CSS grid with an embedded plot:

![image](https://user-images.githubusercontent.com/27475/114727447-7ddb7680-9d3e-11eb-973c-b9892679d2eb.png)",4,20,"['type: feature', 'status: accepted', 'reso: completed', 'tag: layout']"
140,614182657,11163,3834332,2021-04-13 06:48:02,2021-04-16 19:10:26,closed,Bryanv/misc docs3,"- [x] issues: fixes #11135 fixes #9961 
- [x] release document entry (if new feature or API change)

Some miscellaneous docs improvements:

* restored (and simplified) collapsible code blocks
* made `autoclasstoc` tables more compact/denser
* some TOC improvements for glyphs and markers
* manually added  `autoclasstoc` so some non-model classes",0,11,['status: accepted']
141,613163467,11159,3834332,2021-04-11 22:51:09,2021-04-13 18:44:27,closed,WebGL rect glyph with hatch pattern,"This PR implements WebGL `rect` glyph rendering comprising fill, optional hatch pattern, and line with line joins.  Lines are rendered on top of the fill/hatch, as occurs in canvas and svg backends, but this is accomplished in a single pass, i.e. each pixel of each rect is only rendered once in the fragment shader.  Implemented using ReGL instanced rendering in the usual manner.

Things not done (which are silently ignored):
- Dashed lines, which need full support in `LineGL` before they can be added here.
- Hatching using user-specified images, which needs generic WebGL `Image` support to be written first.

Here is the new test image:
![webgl__should_support_rect](https://user-images.githubusercontent.com/580326/114323592-cb2ccd80-9b1d-11eb-8afa-47f0effa474a.png)
Fully supports hatch color, alpha, scale and weight, although I haven't added explicit tests for these.

This code will form the basis for WebGL rendering of many `glyph` classes, all the ones that are of defined shape and are rendered within a (scaled and rotated) quad.  This includes `quad`, `hbar`, `vbar`, `circle`, `ellipse` and all the scatter markers.  To do this it will need to be expanded to support glyph size being 1D or 2D, presence or not of `angle` property, and whether glyph size is specified in data or canvas coordinates.

I have reorganised some of the shared code into a new file `webgl_utils.ts`.  There is some duplication of code in `regl_wrap.ts` and between `webgl/rect.ts` and `webgl\markers.ts` which I should be able to reduce/remove as I proceed with the unification mentioned above.
",10,7,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
142,613113027,11158,3834332,2021-04-11 17:18:49,2021-04-20 05:35:05,closed,Replace plot_width/plot_height,"This PR adds more commits that replace `plot_width` with `width` and `plot_height` with `height`.
fixes #10980",9,18,['status: accepted']
143,613010783,11157,3834332,2021-04-11 05:17:04,2021-04-11 16:26:28,closed,Follow-up to #11145,This PR is a follow-up to #11145 and updates the various environment files to set `sphinx >=3.5`. Also fixes the EOLs for one file.,0,3,"['tag: component: docs', 'status: accepted', 'type: task']"
144,612705571,11156,3834332,2021-04-09 20:14:46,2021-04-09 21:08:16,closed,Improve Sphinx rst_epilog,"Move Sphinx rst_epilog to a central file and add more replacements.
This PR is based on a discussion in https://github.com/bokeh/bokeh/pull/11129#discussion_r607245755.
I will keep adding more replacements over the next few days.",2,2,"['tag: component: docs', 'status: superseded']"
145,612120179,11153,3834332,2021-04-09 03:49:02,2021-04-09 05:16:54,closed,Fix footer,"- [x] issues: fixes #11147

Fix HTML and CSS for footer with pydata theme.
",0,4,['status: accepted']
146,611557649,11150,3834332,2021-04-08 13:27:17,2021-04-27 16:38:23,closed,Don't affect hatch patterns with rotation,"- [x] tests

fixes #11149",2,2,['status: accepted']
147,611077905,11145,3834332,2021-04-07 22:49:24,2021-04-11 04:31:07,closed,More ref guide improvements,"This PR:

* cleans up `conf.py`
* adds support for `autoclasstoc` (so far just to models)

  <img width=""922"" alt=""Screen Shot 2021-04-07 at 3 48 58 PM"" src=""https://user-images.githubusercontent.com/1078448/113944082-ccc26280-97b8-11eb-9e8d-452fb912501b.png"">

",2,14,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
148,610950565,11143,3834332,2021-04-07 19:40:55,2021-04-08 20:10:13,closed,Clean up codebase tests and add JSON test,"- [x] issues: fixes #11142
- [x] tests added / passed

This PR adds a test that can validate JSON files are loadable. Also it does some general cleanup of codebase tests:

* use pathlib for TOP_PATH
* use `subprocess.run` almost everywhere
* streamline ""clean import"" checking
* remove all old-style `""%s""` string formatting. ",0,3,['status: accepted']
149,610700324,11141,3834332,2021-04-07 14:09:18,2021-04-07 19:59:36,closed,Add support for data URLs and pathlib to Image property,"fixes #11139
",0,1,['status: accepted']
150,610658018,11140,3834332,2021-04-07 13:15:56,2021-04-07 20:03:04,closed,Remove all cyclic dependencies from bokehjs,This is a followup on PR #10707. This PR finishes the job and enables cycle detection by default in bokehjs' build.,0,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
151,610213652,11137,3834332,2021-04-06 22:48:33,2021-04-06 23:09:16,closed,Release notes for 2.3.1,"
cc @bokeh/dev FYI I also trimmed a few very old 1.x versions from our version chooser",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
152,609405475,11134,3834332,2021-04-06 02:41:43,2021-04-06 03:23:26,closed,[NO SQUASH] more ports from branch-2.3,"
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
153,608728594,11130,3834332,2021-04-05 06:07:40,2021-04-07 20:38:49,closed,Misc Docs fixes,"
- [x] issues: fixes #9329
- [x] release document entry (if new feature or API change)

* minor cleanup and refactoring in various scripts and docstrings
* fix ""double footer"" (other sites should as well)
* deleted unused cruft images
* fixed `bokeh-color` misalignment
* added `bokeh-dataframe` directive to display pandas datatables

And lastly, finally, after almost ten years, added real  documentation for `bokeh.sampledata`:

<img width=""987"" alt=""Screen Shot 2021-04-04 at 11 02 53 PM"" src=""https://user-images.githubusercontent.com/1078448/113543087-80014080-959a-11eb-9cda-3db1198b53f2.png"">
",10,20,['status: accepted']
154,608708819,11129,3834332,2021-04-05 05:25:57,2021-04-09 05:11:23,closed,Add info on Bokeh settings to user guide,"This PR adds some basic information about Bokeh settings to the ""Defining key concepts"" section of the User Guide. This includes information about the `BOKEH_BROWSER `environment variable.

- [x] issues: fixes #10796


",2,6,['status: accepted']
155,608613252,11128,3834332,2021-04-04 21:22:25,2021-07-10 17:27:52,closed,Latex on axis labels,"superseds [#11060](https://github.com/bokeh/bokeh/pull/11060)

I'm still looking for the best way to do this but what I found out so far is this. For testing purpose axis labels that starts with $$ will be rendered as Latex, but I will add some way of making it clear whether the user wants the Latex rendered in the python side.

I would really appreciate some feedback here because I don't feel that including this logic in the axis model was the best option, but I could not integrate that to the TextBox since it is reinstantiated every time and the image loading is async

- [x] issues: related to #6031
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",10,85,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
156,608454756,11125,3834332,2021-04-03 22:42:47,2021-04-12 20:19:24,closed,Add RangesUpdate event,"- [x] issues: fixes #11095
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Some notes: 

* I made it so that this event only fires when a wheel zoom ""finishes"". It seems to me that if you want all the intermediate range values you could register for the `MouseWheel` event and change range. Otherwise, if `RangesUpdate` fires on ""intermediate"" range updates, then there would be no way to get the ""final"" range value (which is what I think will people actually want)

* It's getting near (past?)  time that the collection of ""interactive_foo"" properties on Document be factored out into something more sensible. 

* I had to make undo / redo methods return the state that was popped, so that this event can fire only when that state actually includes a range change

* Thoughts on testing @mattpap ? I can definitely add/expand the selenium tests for this, but if there is some other means I am open to suggestion. I guess the current sinon spy tests in `unit/core/ui_events.ts` could be improved.
  
  Tangentially, the Python events unit tests are pretty bad and rely on (require?) event initializers accepting default None arguments. This really should be improved as well. 

* I commented out the mouse events in the examples, they make the output mostly impossible to read. I suppose it might be nice to offer a checkbox to toggle them, or even a checkbox to toggle all the events. 

cc @bokeh/dev ",3,4,['status: accepted']
157,608373618,11123,3834332,2021-04-03 11:41:18,2021-04-06 00:53:47,closed,Fix recent layout regressions,"This is more a workaround than a fix, but it seems it works (unless I missed some cases).

fixes #11057
",6,2,['status: accepted']
158,607728810,11122,3834332,2021-04-01 23:47:55,,open,Add support for glyph decorations,"Very early WIP proof of concept.

![image](https://user-images.githubusercontent.com/27475/113365025-51deef00-9355-11eb-8b62-a40e56e16918.png)
",1,2,"['type: feature', 'status: WIP']"
159,607280391,11121,3834332,2021-04-01 10:06:46,2021-04-06 19:57:02,closed,"Add ""maintain_focus"" parameter to zoom_base_tools","Initially added in #7683 for the WheelZoomTool, it makes sense to also
provide the option for the ZoomOutTool, as currently trying to zoom out at
the border of a graph leads to no zooming out happening.

- [x] issues: fixes #11120
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",12,9,['status: accepted']
160,607031051,11118,3834332,2021-04-01 06:36:42,2021-04-01 19:00:20,closed,Remove deprecated np.int alias for int builtin,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #11071 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
161,606266141,11117,3834332,2021-03-31 19:59:44,2021-04-03 22:02:40,closed,Fix python3 incompatible print in callback docs,"Just a minor fix in the docs for widget callbacks.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
162,604790603,11115,3834332,2021-03-31 01:53:09,2021-03-31 03:43:42,closed,[NO SQUASH] Forward ports to branch-2.4 ,"
",0,4,"['status: accepted', 'type: task', 'reso: completed']"
163,603327107,11113,3834332,2021-03-30 03:11:25,2021-03-30 04:04:13,closed,Bryanv/11112 build job os,"- [x] issues: fixes #11112

",0,1,['status: accepted']
164,602077766,11108,3834332,2021-03-27 14:52:01,2021-03-27 18:07:33,closed,Fix WebGL line regression,"This PR fixes the WebGL line rendering regression first noted in PR #11070 when extending the line10k example to 100k lines.  Closes 7th item in issue #11050.

New test added; before the fix it gives
![test_before](https://user-images.githubusercontent.com/580326/112724371-ec30d400-8f0a-11eb-956e-714b8c3c7974.png)
and after the fix
![test_after](https://user-images.githubusercontent.com/580326/112724375-f0f58800-8f0a-11eb-9a76-91a2a7b0bd84.png)
For completeness, the 100k line example (listing in #11070) now gives
![100k](https://user-images.githubusercontent.com/580326/112724430-36b25080-8f0b-11eb-8b13-ee1a5a5e73d0.png)
Fix doesn't work fully for `alpha < 1` or dashed lines; for these the other items in issue #11050 also need to be fixed.",1,1,"['status: accepted', 'type: task', 'tag: regression', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
165,601966891,11107,3834332,2021-03-27 00:24:31,2021-05-04 09:46:26,closed,Add support for polar coordinates,"Early WIP proof of concept.

A little teaser (very WIP) (polar roses defined with sub-coordinates):

![image](https://user-images.githubusercontent.com/27475/112916045-08499680-9100-11eb-8664-1e9c7e765b38.png)


fixes #657
",5,28,['status: accepted']
166,601885461,11106,3834332,2021-03-26 20:26:58,2021-03-27 22:42:18,closed,Update docs for JupyterLab/jupyter_bokeh,"- [x] issues: fixes #11097

Following #11097, this PR updates the Jupyter section in the user guide.",0,4,['status: accepted']
167,601283412,11103,3834332,2021-03-26 03:49:29,2021-03-26 19:19:02,closed,Bump pyyaml from 5.3 to 5.4 in /docker-tools/debian,"Bumps [pyyaml](https://github.com/yaml/pyyaml) from 5.3 to 5.4.
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/yaml/pyyaml/blob/master/CHANGES"">pyyaml's changelog</a>.</em></p>
<blockquote>
<p>5.4 (2021-01-19)</p>
<ul>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/407"">yaml/pyyaml#407</a> -- Build modernization, remove distutils, fix metadata, build wheels, CI to GHA</li>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/472"">yaml/pyyaml#472</a> -- Fix for CVE-2020-14343, moves arbitrary python tags to UnsafeLoader</li>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/441"">yaml/pyyaml#441</a> -- Fix memory leak in implicit resolver setup</li>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/392"">yaml/pyyaml#392</a> -- Fix py2 copy support for timezone objects</li>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/378"">yaml/pyyaml#378</a> -- Fix compatibility with Jython</li>
</ul>
<p>5.3.1 (2020-03-18)</p>
<ul>
<li><a href=""https://github-redirect.dependabot.com/yaml/pyyaml/pull/386"">yaml/pyyaml#386</a> -- Prevents arbitrary code execution during python/object/new constructor</li>
</ul>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/yaml/pyyaml/commit/58d0cb7ee09954c67fabfbd714c5673b03e7a9e1""><code>58d0cb7</code></a> 5.4 release</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/a60f7a19c0b418fe95fcf2ec0957005ae39e1090""><code>a60f7a1</code></a> Fix compatibility with Jython</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/ee98abd7d7bd2ca9c7b98aa19164fd0306a3f3d2""><code>ee98abd</code></a> Run CI on PR base branch changes</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/ddf20330be1fae8813b8ce1789c48f244746d252""><code>ddf2033</code></a> constructor.timezone: _<em>copy</em> &amp; <strong>deepcopy</strong></li>
<li><a href=""https://github.com/yaml/pyyaml/commit/fc914d52c43f499224f7fb4c2d4c47623adc5b33""><code>fc914d5</code></a> Avoid repeatedly appending to yaml_implicit_resolvers</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/a001f2782501ad2d24986959f0239a354675f9dc""><code>a001f27</code></a> Fix for CVE-2020-14343</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/fe150624146ee631bb0f95e45731e8b01281fed6""><code>fe15062</code></a> Add 3.9 to appveyor file for completeness sake</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/1e1c7fb7c09e9149967c208a6fd07276a6140d57""><code>1e1c7fb</code></a> Add a newline character to end of pyproject.toml</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/0b6b7d61719fbe0a11f0980489f1bf8ce746c164""><code>0b6b7d6</code></a> Start sentences and phrases for capital letters</li>
<li><a href=""https://github.com/yaml/pyyaml/commit/c97691596eec279ef9191a9b3bba583a17139d5a""><code>c976915</code></a> Shell code improvements</li>
<li>Additional commits viewable in <a href=""https://github.com/yaml/pyyaml/compare/5.3...5.4"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pyyaml&package-manager=pip&previous-version=5.3&new-version=5.4)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",0,1,"['status: accepted', 'reso: completed', 'dependencies']"
168,600073384,11100,3834332,2021-03-24 21:13:32,2021-04-06 01:33:58,closed,Add support for per-Document model resolvers,"fixes #10822
fixes #11029",0,5,['status: accepted']
169,599610182,11099,3834332,2021-03-24 11:29:30,2021-03-24 15:27:42,closed,Allow to test against a provided git reference,"For example:
```
node make test:integration --ref HEAD~5
```
or
```
node make test:integration --ref origin/branch-2.4
```
This is particularly useful when checking out other people's work when baselines were already updated (so, there is no difference between working tree and `HEAD`).
",0,1,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
170,599153494,11098,3834332,2021-03-23 20:14:13,2021-03-24 10:52:45,closed,Implement all Webgl marker types,"This PR implements all missing WebGL marker types and some related improvements.  It fixes the first four items in issue #11051 which are:

1. Instanced rendering using a single quad mesh rather than `gl_PointSize`.
2. Corrections to some existing WebGL marker types, e.g. sizes, lengths of lines.
3. Added all missing marker types.
4. Keep full-length visual properties on GPU and pass in an array of bools to indicate which `indices` to render.

I haven't added any new tests as we have a comprehensive test of all marker types here:
![Marker_glyph__should_support_glyph_methods_and_rotation](https://user-images.githubusercontent.com/580326/112210683-e7baa180-8c12-11eb-859b-6604abfe8775.png)

Some are heavier or lighter than their canvas/svg equivalents and many don't correctly display large `line_width`s yet (or dashed line or hatches for that matter).  But they are fine if you keep them small with `line_width=1` or so.

I've kept the `MarkerGL.is_supported` function for the moment, even though it returns `true` for all known marker types, just in case I have missed something and we need it back.",2,5,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
171,597569068,11092,3834332,2021-03-21 21:44:57,2021-03-22 21:27:18,closed,HasProps and misc cleanup,"related to #10950 

This PR:

* Simplifies `Include` logic by removing the auto-magic around prefixes. Now, `prefix=None` by default and if a prefix is desired it must be supplied explicitly. 
* Consolidates prop-adding logic in `has_props` and removes all related code from `descriptors.py`.  Some of this is temporary just to make remaining task 1 below more straightforward. 
* Some docstring, f-string cleanups. Adds `append_docstring` to encapsulate safe docstring concatenation for -00 in one place
* Removed some cruft and old deprecations
* Removed unneeded `with_bases` complication from `.properties()`

---

The remaining things I am interested in doing soon:

1. Remove explicit caching performed in `HasProps.__new__` and instead add memoized query functions to get various subsets of properties from models. 
2. Make `Alias` a proper property that contributes descriptors like any other property (and can also respond to events)",4,12,"['status: accepted', 'type: task']"
172,597423523,11091,3834332,2021-03-21 05:45:47,2021-03-21 18:12:04,closed,Bump jinja2 from 2.10.3 to 2.11.3 in /docker-tools/debian,"Bumps [jinja2](https://github.com/pallets/jinja) from 2.10.3 to 2.11.3.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/pallets/jinja/releases"">jinja2's releases</a>.</em></p>
<blockquote>
<h2>2.11.3</h2>
<p>This contains a fix for a speed issue with the <code>urlize</code> filter. <code>urlize</code> is likely to be called on untrusted user input. For certain inputs some of the regular expressions used to parse the text could take a very long time due to backtracking. As part of the fix, the email matching became slightly stricter. The various speedups apply to <code>urlize</code> in general, not just the specific input cases.</p>
<ul>
<li>PyPI: <a href=""https://pypi.org/project/Jinja2/2.11.3/"">https://pypi.org/project/Jinja2/2.11.3/</a></li>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-3"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-3</a></li>
</ul>
<h2>2.11.2</h2>
<ul>
<li>Changelog: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-2"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-2</a></li>
</ul>
<h2>2.11.1</h2>
<p>This fixes an issue in async environment when indexing the result of an attribute lookup, like <code>{{ data.items[1:] }}</code>.</p>
<ul>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-1"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-1</a></li>
</ul>
<h2>2.11.0</h2>
<ul>
<li>Changes: <a href=""https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-0"">https://jinja.palletsprojects.com/en/2.11.x/changelog/#version-2-11-0</a></li>
<li>Blog: <a href=""https://palletsprojects.com/blog/jinja-2-11-0-released/"">https://palletsprojects.com/blog/jinja-2-11-0-released/</a></li>
<li>Twitter: <a href=""https://twitter.com/PalletsTeam/status/1221883554537230336"">https://twitter.com/PalletsTeam/status/1221883554537230336</a></li>
</ul>
<p>This is the last version to support Python 2.7 and 3.5. The next version will be Jinja 3.0 and will support Python 3.6 and newer.</p>
</blockquote>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/pallets/jinja/blob/master/CHANGES.rst"">jinja2's changelog</a>.</em></p>
<blockquote>
<h2>Version 2.11.3</h2>
<p>Released 2021-01-31</p>
<ul>
<li>Improve the speed of the <code>urlize</code> filter by reducing regex
backtracking. Email matching requires a word character at the start
of the domain part, and only word characters in the TLD. :pr:<code>1343</code></li>
</ul>
<h2>Version 2.11.2</h2>
<p>Released 2020-04-13</p>
<ul>
<li>Fix a bug that caused callable objects with <code>__getattr__</code>, like
:class:<code>~unittest.mock.Mock</code> to be treated as a
:func:<code>contextfunction</code>. :issue:<code>1145</code></li>
<li>Update <code>wordcount</code> filter to trigger :class:<code>Undefined</code> methods
by wrapping the input in :func:<code>soft_str</code>. :pr:<code>1160</code></li>
<li>Fix a hang when displaying tracebacks on Python 32-bit.
:issue:<code>1162</code></li>
<li>Showing an undefined error for an object that raises
<code>AttributeError</code> on access doesn't cause a recursion error.
:issue:<code>1177</code></li>
<li>Revert changes to :class:<code>~loaders.PackageLoader</code> from 2.10 which
removed the dependency on setuptools and pkg_resources, and added
limited support for namespace packages. The changes caused issues
when using Pytest. Due to the difficulty in supporting Python 2 and
:pep:<code>451</code> simultaneously, the changes are reverted until 3.0.
:pr:<code>1182</code></li>
<li>Fix line numbers in error messages when newlines are stripped.
:pr:<code>1178</code></li>
<li>The special <code>namespace()</code> assignment object in templates works in
async environments. :issue:<code>1180</code></li>
<li>Fix whitespace being removed before tags in the middle of lines when
<code>lstrip_blocks</code> is enabled. :issue:<code>1138</code></li>
<li>:class:<code>~nativetypes.NativeEnvironment</code> doesn't evaluate
intermediate strings during rendering. This prevents early
evaluation which could change the value of an expression.
:issue:<code>1186</code></li>
</ul>
<h2>Version 2.11.1</h2>
<p>Released 2020-01-30</p>
<ul>
<li>Fix a bug that prevented looking up a key after an attribute
(<code>{{ data.items[1:] }}</code>) in an async template. :issue:<code>1141</code></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/pallets/jinja/commit/cf215390d4a4d6f0a4de27e2687eed176878f13d""><code>cf21539</code></a> release version 2.11.3</li>
<li><a href=""https://github.com/pallets/jinja/commit/15ef8f09b659f9100610583938005a7a10472d4d""><code>15ef8f0</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1343"">#1343</a> from pallets/urlize-speedup</li>
<li><a href=""https://github.com/pallets/jinja/commit/ef658dc3b6389b091d608e710a810ce8b87995b3""><code>ef658dc</code></a> speed up urlize matching</li>
<li><a href=""https://github.com/pallets/jinja/commit/eeca0fecc3318d43f61bc340ad61db641b861ade""><code>eeca0fe</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1207"">#1207</a> from mhansen/patch-1</li>
<li><a href=""https://github.com/pallets/jinja/commit/2dd769111cbb1a2637f805b3b4c652ec8096d371""><code>2dd7691</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1209"">#1209</a> from mhansen/patch-3</li>
<li><a href=""https://github.com/pallets/jinja/commit/48929401db7228db04dfd8e88115dd5c30dc2d86""><code>4892940</code></a> do_dictsort: update example ready to copy/paste</li>
<li><a href=""https://github.com/pallets/jinja/commit/7db7d336ba12574e6205fdd929386fd529e3fad4""><code>7db7d33</code></a> api.rst: bugfix in docs, import PackageLoader</li>
<li><a href=""https://github.com/pallets/jinja/commit/9ec465baefe32e305bd4e61da49e6c39360c194e""><code>9ec465b</code></a> fix changelog header</li>
<li><a href=""https://github.com/pallets/jinja/commit/737a4cd41d09878e7e6c584a2062f5853dc30150""><code>737a4cd</code></a> release version 2.11.2</li>
<li><a href=""https://github.com/pallets/jinja/commit/179df6b54e87b3d420cabf65fc07b2605ffc05f8""><code>179df6b</code></a> Merge pull request <a href=""https://github-redirect.dependabot.com/pallets/jinja/issues/1190"">#1190</a> from pallets/native-eval</li>
<li>Additional commits viewable in <a href=""https://github.com/pallets/jinja/compare/2.10.3...2.11.3"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jinja2&package-manager=pip&previous-version=2.10.3&new-version=2.11.3)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",2,1,"['status: accepted', 'reso: completed', 'dependencies']"
173,597272377,11090,3834332,2021-03-20 12:27:06,2021-03-20 18:50:19,closed,Simplify rendering code with visuals.apply(),"This substitutes the most commonly appearing pattern:
```ts
if (this.visuals.line.doit) {
  this.visuals.line.set_vectorize(ctx, i)
  ctx.stroke()
}
```
with
```ts
this.visuals.line.apply(ctx, i)
```",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
174,596266664,11088,3834332,2021-03-19 07:10:20,2021-03-19 23:52:03,closed,Add sphinx roles for versions,"- [x] issues: fixes #10946 (see screenshots below)
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

PR also makes a few other small changes:

* annoying LICENSE.txt copy removed from `setup.py` -- just keep a second checked-in copy in sync under test
* min version and install requires moved to `_setup_support.py` so that they can be imported w/o running or patching `setup`
* `bokeh_github` sphinx ext moved to `bokeh_roles` everything in here is hyper specific to the project itself so I cam not going to even mention the change

Note the  text roles currently need *some* argument. It can be any string. I've put in ""cpython"" in case we ever need to differentiate e.g. between PyPy we could update the roles to do that. 

---

<img width=""366"" alt=""Screen Shot 2021-03-19 at 12 00 45 AM"" src=""https://user-images.githubusercontent.com/1078448/111743781-6c8a7180-8847-11eb-96b5-69fb3ea3b8a3.png"">

<img width=""343"" alt=""Screen Shot 2021-03-19 at 12 00 54 AM"" src=""https://user-images.githubusercontent.com/1078448/111743799-701df880-8847-11eb-80c2-ace3e5877248.png"">

",0,8,['status: accepted']
175,596136990,11087,3834332,2021-03-19 02:41:30,2021-03-19 03:06:11,closed,Bump pillow from 7.0.0 to 8.1.1 in /docker-tools/debian,"Bumps [pillow](https://github.com/python-pillow/Pillow) from 7.0.0 to 8.1.1.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/releases"">pillow's releases</a>.</em></p>
<blockquote>
<h2>8.1.1</h2>
<p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.1.html</a></p>
<h2>8.1.0</h2>
<p><a href=""https://pillow.readthedocs.io/en/stable/releasenotes/8.1.0.html"">https://pillow.readthedocs.io/en/stable/releasenotes/8.1.0.html</a></p>
<h2>Changes</h2>
<ul>
<li>Fix TIFF OOB Write error <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5175"">#5175</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix for Buffer Read Overrun in PCX Decoding <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5174"">#5174</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix for SGI Decode buffer overrun <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5173"">#5173</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix OOB Read when saving GIF of xsize=1 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5149"">#5149</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>
<li>Add support for PySide6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5161"">#5161</a> [<a href=""https://github.com/hugovk""><code>@​hugovk</code></a>]</li>
<li>Moved QApplication into one test <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5167"">#5167</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Use disposal settings from previous frame in APNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5126"">#5126</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Revert &quot;skip wheels on 3.10-dev due to wheel#354&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5163"">#5163</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Better _binary module use <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5156"">#5156</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Added exception explaining that <em>repr_png</em> saves to PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5139"">#5139</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Use previous disposal method in GIF load_end <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5125"">#5125</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Do not catch a ValueError only to raise another <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5090"">#5090</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Allow putpalette to accept 1024 integers to include alpha values <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5089"">#5089</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix OOB Read when writing TIFF with custom Metadata <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5148"">#5148</a> [<a href=""https://github.com/wiredfool""><code>@​wiredfool</code></a>]</li>
<li>Removed unused variable <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5140"">#5140</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix dereferencing of potential null pointers <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5111"">#5111</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>
<li>Fixed warnings assigning to &quot;unsigned char *&quot; from &quot;char *&quot; <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5127"">#5127</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Add append_images support for ICO <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4568"">#4568</a> [<a href=""https://github.com/ziplantil""><code>@​ziplantil</code></a>]</li>
<li>Fixed comparison warnings <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5122"">#5122</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Block TIFFTAG_SUBIFD <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5120"">#5120</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Fix dereferencing potential null pointer <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5108"">#5108</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>
<li>Replaced PyErr_NoMemory with ImagingError_MemoryError <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5113"">#5113</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Remove duplicate code <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5109"">#5109</a> [<a href=""https://github.com/cgohlke""><code>@​cgohlke</code></a>]</li>
<li>Moved warning to end of execution <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/4965"">#4965</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Removed unused fromstring and tostring C methods <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5026"">#5026</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>init() if one of the formats is unrecognised <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5037"">#5037</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
</ul>
<h2>Dependencies</h2>
<ul>
<li>Updated libtiff to 4.2.0 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5153"">#5153</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated openjpeg to 2.4.0 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5151"">#5151</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated harfbuzz to 2.7.4 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5138"">#5138</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated harfbuzz to 2.7.3 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5128"">#5128</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated libraqm to 0.7.1 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5070"">#5070</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated libimagequant to 2.13.1 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5065"">#5065</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Update FriBiDi to 1.0.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5064"">#5064</a> [<a href=""https://github.com/nulano""><code>@​nulano</code></a>]</li>
<li>Updated libraqm to 0.7.1 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5063"">#5063</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
<li>Updated libjpeg-turbo to 2.0.6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5044"">#5044</a> [<a href=""https://github.com/radarhere""><code>@​radarhere</code></a>]</li>
</ul>
<h2>Deprecations</h2>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Changelog</summary>
<p><em>Sourced from <a href=""https://github.com/python-pillow/Pillow/blob/master/CHANGES.rst"">pillow's changelog</a>.</em></p>
<blockquote>
<h2>8.1.1 (2021-03-01)</h2>
<ul>
<li>
<p>Use more specific regex chars to prevent ReDoS. CVE-2021-25292
[hugovk]</p>
</li>
<li>
<p>Fix OOB Read in TiffDecode.c, and check the tile validity before reading. CVE-2021-25291
[wiredfool]</p>
</li>
<li>
<p>Fix negative size read in TiffDecode.c. CVE-2021-25290
[wiredfool]</p>
</li>
<li>
<p>Fix OOB read in SgiRleDecode.c. CVE-2021-25293
[wiredfool]</p>
</li>
<li>
<p>Incorrect error code checking in TiffDecode.c. CVE-2021-25289
[wiredfool]</p>
</li>
<li>
<p>PyModule_AddObject fix for Python 3.10 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5194"">#5194</a>
[radarhere]</p>
</li>
</ul>
<h2>8.1.0 (2021-01-02)</h2>
<ul>
<li>
<p>Fix TIFF OOB Write error. CVE-2020-35654 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5175"">#5175</a>
[wiredfool]</p>
</li>
<li>
<p>Fix for Read Overflow in PCX Decoding. CVE-2020-35653 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5174"">#5174</a>
[wiredfool, radarhere]</p>
</li>
<li>
<p>Fix for SGI Decode buffer overrun. CVE-2020-35655 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5173"">#5173</a>
[wiredfool, radarhere]</p>
</li>
<li>
<p>Fix OOB Read when saving GIF of xsize=1 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5149"">#5149</a>
[wiredfool]</p>
</li>
<li>
<p>Makefile updates <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5159"">#5159</a>
[wiredfool, radarhere]</p>
</li>
<li>
<p>Add support for PySide6 <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5161"">#5161</a>
[hugovk]</p>
</li>
<li>
<p>Use disposal settings from previous frame in APNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5126"">#5126</a>
[radarhere]</p>
</li>
<li>
<p>Added exception explaining that <em>repr_png</em> saves to PNG <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5139"">#5139</a>
[radarhere]</p>
</li>
<li>
<p>Use previous disposal method in GIF load_end <a href=""https://github-redirect.dependabot.com/python-pillow/Pillow/issues/5125"">#5125</a>
[radarhere]</p>
</li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
<p>... (truncated)</p>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/python-pillow/Pillow/commit/741d8744a54bedbc49f16922c61a06fcb3681f53""><code>741d874</code></a> 8.1.1 version bump</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/179cd1c8f94aabc47e9e522e01683ea9aadbd3a5""><code>179cd1c</code></a> Added 8.1.1 release notes to index</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/7d296653da045e18b379c991797f933e054a7476""><code>7d29665</code></a> Update CHANGES.rst [ci skip]</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/d25036fca7c8658b698492088361453bb20073e2""><code>d25036f</code></a> Credits</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/973a4c333ab6d603e82f6eb2aa6f39d1cfcecccb""><code>973a4c3</code></a> Release notes for 8.1.1</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/521dab94c7ab72b037bd9a83e9663401e0fd2cee""><code>521dab9</code></a> Use more specific regex chars to prevent ReDoS</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/8b8076bdcb3815be0ef0d279651d8d1342b8ea61""><code>8b8076b</code></a> Fix for CVE-2021-25291</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/e25be1e33dc526bfd1094bc778a54d8e29bf66c9""><code>e25be1e</code></a> Fix negative size read in TiffDecode.c</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/f891baa604636cd2506a9360d170bc2cf4963cc5""><code>f891baa</code></a> Fix OOB read in SgiRleDecode.c</li>
<li><a href=""https://github.com/python-pillow/Pillow/commit/cbfdde7b1f2295059a20a539ee9960f0bec7b299""><code>cbfdde7</code></a> Incorrect error code checking in TiffDecode.c</li>
<li>Additional commits viewable in <a href=""https://github.com/python-pillow/Pillow/compare/7.0.0...8.1.1"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=pillow&package-manager=pip&previous-version=7.0.0&new-version=8.1.1)](https://docs.github.com/en/github/managing-security-vulnerabilities/about-dependabot-security-updates#about-compatibility-scores)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",0,1,"['status: accepted', 'reso: completed', 'dependencies']"
176,595960921,11086,3834332,2021-03-18 21:29:40,2021-03-18 23:48:51,closed,Fixed missing f in f-string,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] Issue PR (very trivial, could see this was okay to do in BEP-1)
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Could see an warning message was missing the f in f-string so added them. Needed to change `_` to `class_name` in input to get a working f-string.
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
177,595911249,11085,3834332,2021-03-18 20:25:55,2021-03-19 04:15:54,closed,Support other size units when scaling superscripts,"fixes #11006
",0,1,['status: accepted']
178,595150178,11079,3834332,2021-03-18 01:28:58,2021-03-18 16:09:12,closed,Use fromisoformat for date/datetime validation,"issues: closes #10806

Now that Python ~2~3.7 is the min version we can use `fromisoformat` or `Date` and `Datatime` properties, and as a result, drop the explicit `python-dateutil` dependency. ",0,2,['status: accepted']
179,595129218,11078,3834332,2021-03-18 00:20:23,2021-03-18 15:06:29,closed,Fix regressions after PR #10930,"Fixes regressions introduced in PR #10930 (on `branch-2.4`). This was revealed when working on https://github.com/lightkurve/lightkurve/issues/990.
",0,1,"['status: accepted', 'type: task', 'tag: regression', 'reso: completed']"
180,595127854,11077,3834332,2021-03-18 00:16:19,,open,Invalidate plot layout in more cases,"This revealed a few other issues. One which is not yet addressed and may cause test timeout, is improper handling of async slots in signaling API.

fixes #11033
",0,1,['status: WIP']
181,594668849,11073,3834332,2021-03-17 12:30:35,2021-03-17 16:25:44,closed,Drop unnecessary -webkit- prefixes from flexbox,"All supported browsers support non-prefixed standard version, so there's no point in keeping this around.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
182,594398985,11072,3834332,2021-03-17 04:46:45,2021-03-17 15:31:43,closed,[NO SQUASH] Forward ports to branch-2.4,"
",1,16,"['status: accepted', 'type: task', 'reso: completed']"
183,594226661,11070,3834332,2021-03-16 20:48:03,2021-03-17 23:10:00,closed,Use premultiplied alpha in WebGL,"Revert to using premultiplied alpha in WebGL.  It has better cross-platform support and is almost definitely a better approach anyway.

Should fix task 1 of issue #11052, the incorrect rendering of the 10k examples that occurs in CI but annoyingly works fine on my dev machine in both firefox and chrome.

WIP as I need to check the example outputs carefully after CI has run.",11,2,"['status: accepted', 'type: task', 'tag: regression', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
184,594067383,11069,3834332,2021-03-16 16:34:38,2021-03-17 16:40:51,closed,Improve NaN handling and further simplify rendering,"This PR:

- [x] makes NaN handling uniform in `Line` and `MultiLine` glyphs
- [x] simplifies creation of index (no need to check for NaN/oo)
- [x] simplifies rendering of all other glyphs (after PR #11024) (except `Step`)
- [x] unifies usage of `isNaN()` and `!isFinite()` across all glyphs
- [x] fixes a bug in SVG backend where hatch visuals would inherit fill's properties
- [x] improved visual tests of various area glyphs

fixes #11025
",1,16,['status: accepted']
185,593879938,11067,3834332,2021-03-16 12:59:51,2021-04-05 17:45:19,closed,add latex extension example with mathjax,"- [x] issues: relates #6031 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",7,16,"['tag: component: docs', 'status: accepted', 'type: task', 'tag: component: examples']"
186,593811345,11066,3834332,2021-03-16 11:25:43,2021-03-24 15:33:14,closed,Serialize definitions of only newly created objects,"fixes #11026
",1,2,['status: accepted']
187,593746091,11065,3834332,2021-03-16 09:59:13,2021-03-16 10:57:40,closed,Use #rrggbb for input[type=color].value,"fixes #11062
",0,1,['status: accepted']
188,593236038,11063,3834332,2021-03-15 16:54:38,2021-03-15 18:27:47,closed,Fix snap_back for tile renderer,"- [x] issues: fixes #11061
",0,1,['status: accepted']
189,592621769,11060,3834332,2021-03-14 21:26:15,2021-04-04 21:23:19,closed,WIP: Iurypiva/6031 latex axis label,"- [x] issues: related to #6031
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,4,"['status: WIP', 'status: superseded']"
190,592579397,11059,3834332,2021-03-14 17:02:20,2021-03-14 18:02:43,closed,FIX: Add support for line dash offset in SVG backend,"Added support for line dash offset in SVG backend.

- [x] issues: fixes #11058
- [x] tests pass

After this fix, the test image renders correctly on all three backends:

![image](https://user-images.githubusercontent.com/580326/111077021-d1ac3300-84e6-11eb-90e3-ae004bbb874c.png)
",2,1,['status: accepted']
191,592443366,11055,3834332,2021-03-13 23:32:52,2021-03-14 02:05:16,closed,Don't allow invalid bboxes in BoxAnnotation,fixes #11054,0,1,['status: accepted']
192,592285257,11049,3834332,2021-03-13 03:59:17,2021-03-13 04:44:34,closed,[Docs] Fix references in Docs section,The Documentation section of the Developers guide had some incorrectly implemented references. This PR fixes these issues.,0,1,"['tag: component: docs', 'status: accepted', 'type: task']"
193,591662115,11046,3834332,2021-03-12 13:03:33,2021-03-12 15:41:01,closed,Clone child SVG nodes before composing them,"- [x] tests

fixes #11045
",1,2,['status: accepted']
194,590717410,11043,3834332,2021-03-11 09:42:09,2021-03-11 16:36:16,closed,Backport: Simplify rendering of Line and MultiLine glyphs (#11024),,0,1,"['status: accepted', 'type: task', 'reso: completed']"
195,590444531,11042,3834332,2021-03-11 03:25:51,2021-03-12 23:31:03,closed,add note about extension defaults,"- [x] issues: fixes #10926
- [x] release document entry (if new feature or API change)
",1,3,['status: accepted']
196,590432517,11041,3834332,2021-03-11 03:08:56,2021-03-11 09:44:16,closed,Deprecate HSL,"- [x] issues: fixes #10919
- [x] release document entry (if new feature or API change)
",2,2,['status: accepted']
197,590391937,11040,3834332,2021-03-11 02:10:08,2021-03-14 02:07:04,closed,exposes Palettes,"Adds `Bokeh.Palettes` to the API, exposing the color palettes to the user. Useful when working with `ColorMapper` objects, which cannot currently use strings as they are defined in the base `bokeh.js`

- [x] issues: fixes #11034

Unless there are plans to provide support for named palettes in the `ColorMapper` objects when the API has been loaded, we may want to update docs as well, to reflect this API difference.",2,1,['status: accepted']
198,589334993,11039,3834332,2021-03-10 09:30:31,,open,Unit test bokeh on PyPy 3.7 in CI,Ref https://github.com/holoviz/panel/issues/2060.,2,5,"['status: WIP', 'type: task', 'tag: CI']"
199,588489741,11030,3834332,2021-03-09 19:10:12,2021-03-09 23:36:50,closed,Make EditTool.custom_icon nullable,fixes #11028,2,1,['status: accepted']
200,587023318,11024,3834332,2021-03-08 19:01:33,2021-03-10 00:57:21,closed,Simplify rendering of Line and MultiLine glyphs,Render lines in one stroke instead of multiple split at `NaN`.,2,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
201,586880538,11023,3834332,2021-03-08 15:48:10,2021-03-16 14:41:14,closed,WIP: add latex custom extension example,"Added an example on how to use MathJax to render latex labels

- [x] issues: related to #6031
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",9,10,"['tag: component: docs', 'status: superseded', 'type: task', 'tag: component: examples']"
202,586348786,11022,3834332,2021-03-07 23:21:43,2021-08-05 04:32:29,closed,Initial timezone support in DatetimeTickFormatter (#1135),"Initial proof-of-concept.

Load all timezones in `datetime_tick_formatter.ts` and have an optional `timezone` property in `DatetimeTickFormatter`. If supplied, use the given timezone to format the tick labels. Included a simple example of this in `datetime_tz_formatter.py` along with a different implementation using `FuncTickFormatter`.

![image](https://user-images.githubusercontent.com/7894671/110258007-5a1d6600-8005-11eb-89d2-a599c014d137.png)

Main thing I'm not sure about is if/how to [load specific timezones via timezone.js](https://bigeasy.github.io/timezone/). The examples there all dynamically load specific timezone implementations at runtime, such as `require(""timezone/America/New_York"")`. The current commit simply loads all of the timezones at `import` time, loading around ~580 timezone modules (1.8k lines of JS un-minified). It's probably possible with [dynamic imports](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Statements/import#dynamic_import) but I don't know how to do this since [imports are not synchronous](https://stackoverflow.com/questions/51069002/convert-import-to-synchronous).

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #1135
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,2,['status: declined']
203,586284499,11020,3834332,2021-03-07 16:46:03,,open,Allow to configure log and linear axes together,"Proof of concept. I don't expect this to be merged as-is, because this should be handled via sub-coordinates, for which I need to finally expose an API.

Example:
```py
from bokeh.models import LinearAxis, LinearScale, Range1d
from bokeh.plotting import figure
from bokeh.io import save

source = {""t"": [0,  1,   2,    3],
          ""i"": [1, 10, 100, 1000],
          ""v"": [2, 20, 200, 2000]
}

f = figure(y_range=(0.1, 10000), x_range=(0, 5), y_axis_type=""log"")

log_line = f.line(x=""t"", y=""i"", line_width=2, source=source)

f.extra_y_ranges = {""V"": Range1d(start=0, end=5000)}
f.extra_y_scales = {""V"": LinearScale()}
f.add_layout(LinearAxis(y_range_name=""V"", axis_label=""Linear""), 'left')

lin_line = f.line(x=""t"", y=""v"", line_width=2, source=source, y_range_name=""V"", color=""red"")

save(f)
```
![image](https://user-images.githubusercontent.com/27475/110247477-c26c3900-7f6c-11eb-834d-445511e9d345.png)



fixes #7217",3,1,['status: WIP']
204,586283486,11019,3834332,2021-03-07 16:40:11,2021-03-07 17:43:04,closed,Improve speed by comparing whole buffers first,Shaves 10s off integration tests. More improvements will follow in future PRs.,0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'tag: component: bokehjs']"
205,586228492,11018,3834332,2021-03-07 10:47:54,2021-03-24 18:33:34,closed,Update bokehjs' plotting API to match bokeh,"fixes #11016
fixes #11035
fixes #11037
fixes #11038
",1,5,['status: accepted']
206,586224584,11017,3834332,2021-03-07 10:20:52,,open,Add support for ESM without bundling,"Very early WIP. The goal is to allow importing bokehjs' individual modules without using bundles. Note this currently imposes significant load time performance hit, at least without http/2, which allows for efficient loading of many small resources (not tested yet if it actually helps). However, ultimately it may be usable if we don't load all modules upfront (as if this was a bundle), but load a handful (embed, document, etc.) and then resolve asynchronously only models used in a document being rendered, which is how it should work.
",0,1,"['type: feature', 'status: WIP', 'tag: component: build', 'tag: component: bokehjs']"
207,585925796,11014,3834332,2021-03-05 22:43:37,2021-03-10 23:58:20,closed,"adding bokehjs known issues, v2.3","- [x] issues: fixes #11013

See the above issue and the following discourse thread for more info:
[Differences in BokehJS vs Python : expected usage](https://discourse.bokeh.org/t/differences-in-bokehjs-vs-python-expected-usage/7313)",8,11,['status: accepted']
208,585901790,11011,3834332,2021-03-05 21:45:08,2021-03-09 23:35:55,closed,Properties cleanup (pt 2),"Fixes #10927  (Also addresses some of #10950)

This PR has some breaking changes that should have very little user-impact, but should still be considered carefully. Summary:

* completely unused `DataDistanceSpec` removed
* `ScreenDistanceSpec` renamed to `ScreenSizeSpec` (see question https://github.com/bokeh/bokeh/pull/11011#issuecomment-791732388)
  *  is *no longer a `UnitsSpec` subclass* 
  * now derived from simple `NumberSpec` that validates as non-negative values
  * accordingly, gorpy private `_FixedUnitsDistanceSpec` could be deleted
* `UnitSpec` was not used directly anywhere, it was combined upward in to `PropertyUnitsSpec`

I don't think any of the above changes are likely to hit any users, except *possibly* custom extensions. If we want to mitigate even more for that though, I think we could do the following:

* Insert an empty `UnitSpec` base class back in the hierarchy
* add `DataDistanceSpec = ScreenSizeSpec` and `ScreenDistanceSpec = ScreenSizeSpec`

The last change, which bears some consideration: ""units"" props are now configured with the bare enum, instead of with an `Enum` property. This allows to delete some hacky code in units initialization, but more importantly, allows `help` param to be automatically injected in the `_units` property creation:
```python
        units_type = Enum(units_enum, default=units_default, serialized=False, help=f""""""
        Units to use for the associated property: {nice_join(units_enum)}
        """""")
```
This is what fixes #10927 (see screenshot below)

<img width=""763"" alt=""Screen Shot 2021-03-05 at 1 42 37 PM"" src=""https://user-images.githubusercontent.com/1078448/110176744-ac1d7c00-7db8-11eb-9260-cbbe37607bcd.png"">

Note that the help strings are pretty generic with ""associated property"" but they do provide valid and default values at least. We could open up a follow-on issue about supporting better ways to template auto-generated help strings in Bokeh (visual mixins already have a sort-of solution, we should try to avoid creating a second different sort-of solution)",3,9,['status: accepted']
209,585863656,11010,3834332,2021-03-05 20:44:01,2021-03-05 21:23:18,closed,PolyAnnotation: link reference guide to user guide,Fixes #11002 and complements #11003. Adds link from reference guide to user guide.,1,3,['status: ready']
210,585861916,11009,3834332,2021-03-05 20:40:37,2021-03-05 20:41:06,closed,PolyAnnotation: link reference guide to user guide,fixes #11002 and complements #11003. Adds link from reference guide to user guide.,3,16,['status: superseded']
211,585675470,11005,3834332,2021-03-05 15:03:33,2021-03-05 19:20:40,closed,Make sure FuncTickFormatter always produces string labels,"fixes #11000
",0,1,['status: accepted']
212,585662448,11004,3834332,2021-03-05 14:44:46,2021-05-07 08:46:52,closed,Add support for incremental TypeScript builds,"Early WIP. Reduces compilation time of bokehjs from 20s to 12s (from second run), however increases compilation time in tests.
",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
213,585344985,11003,3834332,2021-03-05 05:59:13,2021-03-05 19:23:12,closed,Add PolyAnnotation to user guide,"- [x] issues: fixes #11002 

Add a short explanation and an example for PolyAnnotation to user guide.
",0,1,['status: accepted']
214,584929911,11001,3834332,2021-03-04 16:11:45,2021-03-04 17:33:55,closed,Clean up after PR #10939,fixes #10941,0,1,['status: accepted']
215,584811387,10999,3834332,2021-03-04 13:34:55,2021-03-04 16:55:10,closed,Fix examples/app/spectrogram,fixes #10942,0,1,['status: accepted']
216,584450277,10997,3834332,2021-03-04 03:15:23,2021-03-04 21:03:57,closed,Clarify explanation in First Steps 1,"Another minor update to First Steps one, clarifying/correcting some wording.",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
217,583878900,10989,3834332,2021-03-03 11:21:20,2021-04-06 04:58:19,closed,Replace plot_width and plot_height properties ,"issues: #10980 

 in following files

<details>
 CHANGELOG
 bokeh/command/util.py
 bokeh/core/property/alias.py
 bokeh/core/query.py
 bokeh/io/export.py
 bokeh/layouts.py
 bokeh//plots.py
 bokeh/plotting/figure.py
 bokeh/plotting/gmap.py
 bokeh/sphinxext/bokeh_plot.py
 bokeh/themes/__init__.py
 bokehjs/src/lib/api/gridplot.ts
 bokehjs/src/lib//plots/plot.ts
 docker-tools/hello_nodejs.py
 examples/app/clustering/theme.yaml
 examples/app/crossfilter/main.py
 examples/app/dash/main.py
 examples/app/faces/main.py
 examples/app/fourier_animated.py
 examples/app/gapminder/main.py
 examples/app/movies/main.py
 examples/app/ohlc/main.py
 examples/app/ohlc/theme.yaml
 examples/app/population.py
 examples/app/selection_histogram.py
 examples/app/simple_hdf5/main.py
 examples/app/sliders.py
 examples/app/spectrogram/main.py
 examples/app/stocks/main.py
 examples/app/taylor.py
 examples/app/weather/main.py
 examples/custom/latex_extension_base/latex_extension_base.py
 examples/custom/latex_extension_full/latex_extension_full.py
 examples/embed/arguments/bokeh_server.py
 examples/embed/embed_multiple.py
 examples/embed/embed_multiple_responsive.py
 examples/embed/embed_responsive_width_height.py
 examples/embed/file_html.py
 examples/embed/json_item.py
 examples/embed/json_item_themed.py
 examples/howto/Categorical Data.ipynb
 examples/howto/Linked panning.ipynb
 examples/howto/MultiPolygons.ipynb
 examples/howto/Range update callback.ipynb
 examples/howto/ajax_source.py
 examples/howto/layouts/dashboard.py
 examples/howto/layouts/manual_grid.py
 examples/howto/layouts/words_and_plots.py
 examples/howto/notebook_comms/Basic Usage.ipynb
 examples/howto/notebook_comms/Jupyter Interactors.ipynb
 examples/howto/patch_app.py
 examples/howto/server_auth/app.py
 examples/howto/server_sent_events_source.py
 examples/integration/annotations/band.py
 examples/integration/annotations/label.py
 examples/integration/annotations/label_set.py
 examples/integration/annotations/title.py
 examples/integration/annotations/whisker.py
 examples/integration/axes/cat_labels_rotate.py
 examples/integration/embed/css_grid_simple.py
 examples/integration/embed/css_grid_simple_no_extend.py
 examples/integration/embed/referencing_roots.py
 examples/integration/glyphs/categorical_multi_glyphs.py
 examples/integration/glyphs/frame_clipping_multi_backend.py
 examples/integration/glyphs/log_scale_multi_backend.py
 examples/integration/glyphs/rect_log_axis.py
 examples/integration/layout/grid_axis_alignment.py
 examples/integration/layout/grid_axis_alignment_nested.py
 examples/integration/layout/grid_axis_alignment_no_toolbar.py
 examples/integration/layout/plot_fixed_frame_size.py
 examples/integration/plots/no_border_or_background_fill.py
 examples//file/anscombe.py
 examples//file/calendars.py
 examples//file/choropleth.py
 examples//file/colors.py
 examples//file/data_tables.py
 examples//file/dateaxis.py
 examples//file/daylight.py
 examples//file/donut.py
 examples//file/gauges.py
 examples//file/graphs.py
 examples//file/iris.py
 examples//file/iris_splom.py
 examples//file/latex_extension.py
 examples//file/legends.py
 examples//file/maps_cities.py
 examples//file/panels.py
 examples//file/tile_source.py
 examples//file/toolbars2.py
 examples//file/trail.py
 examples//file/widgets.py
 examples/plotting/file/airports_map.py
 examples/plotting/file/aspect.py
 examples/plotting/file/bar_basic.py
 examples/plotting/file/bar_colormapped.py
 examples/plotting/file/bar_colors.py
 examples/plotting/file/bar_dodged.py
 examples/plotting/file/bar_intervals.py
 examples/plotting/file/bar_mixed.py
 examples/plotting/file/bar_nested.py
 examples/plotting/file/bar_nested_colormapped.py
 examples/plotting/file/bar_pandas_groupby_colormapped.py
 examples/plotting/file/bar_pandas_groupby_nested.py
 examples/plotting/file/bar_sorted.py
 examples/plotting/file/bar_stacked.py
 examples/plotting/file/bar_stacked_grouped.py
 examples/plotting/file/bar_stacked_split.py
 examples/plotting/file/burtin.py
 examples/plotting/file/candlestick.py
 examples/plotting/file/categorical_scatter_jitter.py
 examples/plotting/file/choropleth.py
 examples/plotting/file/color_data_map.py
 examples/plotting/file/color_sliders.py
 examples/plotting/file/custom_datetime_axis.py
 examples/plotting/file/custom_tooltip.py
 examples/plotting/file/customjs_transform.py
 examples/plotting/file/dynamic_color_mapping.py
 examples/plotting/file/eclipse.py
 examples/plotting/file/elements.py
 examples/plotting/file/fixed_axis.py
 examples/plotting/file/glyphs.py
 examples/plotting/file/graphs.py
 examples/plotting/file/grid.py
 examples/plotting/file/hatch_custom_image.py
 examples/plotting/file/hatch_grid_band.py
 examples/plotting/file/hatch_patterns.py
 examples/plotting/file/histogram.py
 examples/plotting/file/hover_glyph.py
 examples/plotting/file/interactive_legend.py
 examples/plotting/file/jitter.py
 examples/plotting/file/legend.py
 examples/plotting/file/les_mis.py
 examples/plotting/file/linked_brushing.py
 examples/plotting/file/linked_panning.py
 examples/plotting/file/multi_legend.py
 examples/plotting/file/multi_line.py
 examples/plotting/file/periodic.py
 examples/plotting/file/pie.py
 examples/plotting/file/range_tool.py
 examples/plotting/file/rect.py
 examples/plotting/file/ridgeplot.py
 examples/plotting/file/scatter_selection.py
 examples/plotting/file/slider.py
 examples/plotting/file/sprint.py
 examples/plotting/file/stocks.py
 examples/plotting/file/text.py
 examples/plotting/file/theme_glyphs.py
 examples/plotting/file/tile_demo.py
 examples/plotting/file/unemployment.py
 examples/plotting/file/us_marriages_divorces_hover.py
 examples/plotting/file/vector.py
 examples/reference//AnnularWedge.py
 examples/reference//Annulus.py
 examples/reference//Arc.py
 examples/reference//Bezier.py
 examples/reference//Circle.py
 examples/reference//Ellipse.py
 examples/reference//HArea.py
 examples/reference//HBar.py
 examples/reference//HexTile.py
 examples/reference//ImageURL.py
 examples/reference//Line.py
 examples/reference//MultiLine.py
 examples/reference//MultiPolygons.py
 examples/reference//Oval.py
 examples/reference//Patch.py
 examples/reference//Patches.py
 examples/reference//Quad.py
 examples/reference//Quadratic.py
 examples/reference//Ray.py
 examples/reference//Rect.py
 examples/reference//Scatter.py
 examples/reference//Segment.py
 examples/reference//Step.py
 examples/reference//Text.py
 examples/reference//VArea.py
 examples/reference//VBar.py
 examples/reference//Wedge.py
 examples/reference//button_server.py
 examples/reference//checkbox_button_server.py
 examples/reference//checkbox_server.py
 examples/reference//data_table_server.py
 examples/reference//dropdown_menu_server.py
 examples/reference//multi_select_server.py
 examples/reference//radio_button_group_server.py
 examples/reference//radio_group_server.py
 examples/reference//range_slider_server.py
 examples/reference//select_server.py
 examples/reference//slider_server.py
 examples/webgl/clustering.py
 examples/webgl/line_compare.py
 examples/webgl/marker_compare.py
 sphinx/source/docs/first_steps/examples/first_steps_4_add_tools.py
 sphinx/source/docs/first_steps/examples/first_steps_4_axes_customizing.py
 sphinx/source/docs/first_steps/examples/first_steps_4_axes_logarithmic.py
 sphinx/source/docs/first_steps/examples/first_steps_4_background.py
 sphinx/source/docs/first_steps/examples/first_steps_4_bands.py
 sphinx/source/docs/first_steps/examples/first_steps_4_datetime_axis.py
 sphinx/source/docs/first_steps/examples/first_steps_4_grid_lines.py
 sphinx/source/docs/first_steps/examples/first_steps_4_plot_axis_ranges.py
 sphinx/source/docs/first_steps/examples/first_steps_4_plot_size.py
 sphinx/source/docs/first_steps/examples/first_steps_4_plot_size_responsive.py
 sphinx/source/docs/first_steps/examples/first_steps_4_resize_plot.py
 sphinx/source/docs/first_steps/examples/first_steps_4_themes.py
 sphinx/source/docs/first_steps/examples/first_steps_4_tick_formatter.py
 sphinx/source/docs/first_steps/examples/first_steps_4_toolbar.py
 sphinx/source/docs/first_steps/examples/first_steps_4_toolbar_autohide.py
 sphinx/source/docs/first_steps/examples/first_steps_4_tools.py
 sphinx/source/docs/first_steps/examples/first_steps_4_tooltips.py
 sphinx/source/docs/first_steps/examples/first_steps_5_color_mapping.py
 sphinx/source/docs/first_steps/examples/first_steps_5_vectorize_color.py
 sphinx/source/docs/first_steps/examples/first_steps_5_vectorize_color_and_size.py
 sphinx/source/docs/first_steps/examples/first_steps_6_row_layout.py
 sphinx/source/docs/first_steps/examples/first_steps_6_row_layout_responsive.py
 sphinx/source/docs/first_steps/examples/first_steps_7_export_html.py
 sphinx/source/docs/first_steps/examples/first_steps_7_export_png.py
 sphinx/source/docs/first_steps/examples/first_steps_8_filter.py
 sphinx/source/docs/first_steps/examples/first_steps_9_widgets.py
 sphinx/source/docs/first_steps/first_steps_4.rst
 sphinx/source/docs/first_steps/first_steps_9.rst
 sphinx/source/docs/user_guide/bokehjs.rst
 sphinx/source/docs/user_guide/embed.rst
 sphinx/source/docs/user_guide/examples/annotations_arrowheads.py
 sphinx/source/docs/user_guide/examples/categorical_bar_basic.py
 sphinx/source/docs/user_guide/examples/categorical_bar_colormapped.py
 sphinx/source/docs/user_guide/examples/categorical_bar_colors.py
 sphinx/source/docs/user_guide/examples/categorical_bar_dodged.py
 sphinx/source/docs/user_guide/examples/categorical_bar_intervals.py
 sphinx/source/docs/user_guide/examples/categorical_bar_mixed.py
 sphinx/source/docs/user_guide/examples/categorical_bar_nested.py
 sphinx/source/docs/user_guide/examples/categorical_bar_nested_colormapped.py
 sphinx/source/docs/user_guide/examples/categorical_bar_pandas_groupby_colormapped.py
 sphinx/source/docs/user_guide/examples/categorical_bar_pandas_groupby_nested.py
 sphinx/source/docs/user_guide/examples/categorical_bar_sorted.py
 sphinx/source/docs/user_guide/examples/categorical_bar_stacked.py
 sphinx/source/docs/user_guide/examples/categorical_bar_stacked_grouped.py
 sphinx/source/docs/user_guide/examples/categorical_bar_stacked_hover.py
 sphinx/source/docs/user_guide/examples/categorical_bar_stacked_split.py
 sphinx/source/docs/user_guide/examples/categorical_heatmap_periodic.py
 sphinx/source/docs/user_guide/examples/categorical_heatmap_unemployment.py
 sphinx/source/docs/user_guide/examples/categorical_offset.py
 sphinx/source/docs/user_guide/examples/categorical_ridgeplot.py
 sphinx/source/docs/user_guide/examples/categorical_scatter_jitter.py
 sphinx/source/docs/user_guide/examples/concepts_plotting.py
 sphinx/source/docs/user_guide/examples/data_filtering_boolean_filter.py
 sphinx/source/docs/user_guide/examples/data_filtering_group_filter.py
 sphinx/source/docs/user_guide/examples/data_filtering_index_filter.py
 sphinx/source/docs/user_guide/examples/data_linked_brushing_subsets.py
 sphinx/source/docs/user_guide/examples/data_transforming_customjs_transform.py
 sphinx/source/docs/user_guide/examples/extensions_example_latex.py
 sphinx/source/docs/user_guide/examples/extensions_example_widget.py
 sphinx/source/docs/user_guide/examples/graph_interaction.py
 sphinx/source/docs/user_guide/examples/graph_node_and_edge_attributes.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_hover.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_range_update.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_selections.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_selections_lasso_mean.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_tools.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_for_widgets.py
 sphinx/source/docs/user_guide/examples/interaction_callbacks_js_on_change.py
 sphinx/source/docs/user_guide/examples/interaction_colorpicker.py
 sphinx/source/docs/user_guide/examples/interaction_legend_hide.py
 sphinx/source/docs/user_guide/examples/interaction_legend_mute.py
 sphinx/source/docs/user_guide/examples/interaction_linked_brushing.py
 sphinx/source/docs/user_guide/examples/interaction_linked_panning.py
 sphinx/source/docs/user_guide/examples/interaction_linked_properties.py
 sphinx/source/docs/user_guide/examples/interaction_open_url.py
 sphinx/source/docs/user_guide/examples/interaction_tab_panes.py
 sphinx/source/docs/user_guide/examples/js_events.py
 sphinx/source/docs/user_guide/examples/layout_grid.py
 sphinx/source/docs/user_guide/examples/layout_grid_convenient.py
 sphinx/source/docs/user_guide/examples/layout_horizontal.py
 sphinx/source/docs/user_guide/examples/layout_sizing_mode_multiple.py
 sphinx/source/docs/user_guide/examples/layout_vertical.py
 sphinx/source/docs/user_guide/examples/plotting_annular_wedge.py
 sphinx/source/docs/user_guide/examples/plotting_annulus.py
 sphinx/source/docs/user_guide/examples/plotting_arcs.py
 sphinx/source/docs/user_guide/examples/plotting_arrow.py
 sphinx/source/docs/user_guide/examples/plotting_datetime_axis.py
 sphinx/source/docs/user_guide/examples/plotting_ellipses.py
 sphinx/source/docs/user_guide/examples/plotting_figure_range.py
 sphinx/source/docs/user_guide/examples/plotting_hbar.py
 sphinx/source/docs/user_guide/examples/plotting_hbar_stack.py
 sphinx/source/docs/user_guide/examples/plotting_hex_tile_basic.py
 sphinx/source/docs/user_guide/examples/plotting_image.py
 sphinx/source/docs/user_guide/examples/plotting_image_rgba.py
 sphinx/source/docs/user_guide/examples/plotting_legend_field.py
 sphinx/source/docs/user_guide/examples/plotting_legend_group.py
 sphinx/source/docs/user_guide/examples/plotting_line_missing_points.py
 sphinx/source/docs/user_guide/examples/plotting_line_multiple.py
 sphinx/source/docs/user_guide/examples/plotting_line_single.py
 sphinx/source/docs/user_guide/examples/plotting_line_steps.py
 sphinx/source/docs/user_guide/examples/plotting_log_scale_axis.py
 sphinx/source/docs/user_guide/examples/plotting_multiple_glyphs.py
 sphinx/source/docs/user_guide/examples/plotting_multipolygon_simple.py
 sphinx/source/docs/user_guide/examples/plotting_multipolygon_with_holes.py
 sphinx/source/docs/user_guide/examples/plotting_multipolygon_with_separate_parts.py
 sphinx/source/docs/user_guide/examples/plotting_multipolygons.py
 sphinx/source/docs/user_guide/examples/plotting_patch_missing_points.py
 sphinx/source/docs/user_guide/examples/plotting_patch_multiple.py
 sphinx/source/docs/user_guide/examples/plotting_patch_single.py
 sphinx/source/docs/user_guide/examples/plotting_ray.py
 sphinx/source/docs/user_guide/examples/plotting_rectangles.py
 sphinx/source/docs/user_guide/examples/plotting_rectangles_rotated.py
 sphinx/source/docs/user_guide/examples/plotting_scatter_circle.py
 sphinx/source/docs/user_guide/examples/plotting_scatter_square.py
 sphinx/source/docs/user_guide/examples/plotting_segments.py
 sphinx/source/docs/user_guide/examples/plotting_slope.py
 sphinx/source/docs/user_guide/examples/plotting_title_additional.py
 sphinx/source/docs/user_guide/examples/plotting_title_basic.py
 sphinx/source/docs/user_guide/examples/plotting_title_location.py
 sphinx/source/docs/user_guide/examples/plotting_title_toolbar.py
 sphinx/source/docs/user_guide/examples/plotting_title_visuals.py
 sphinx/source/docs/user_guide/examples/plotting_varea.py
 sphinx/source/docs/user_guide/examples/plotting_varea_stack.py
 sphinx/source/docs/user_guide/examples/plotting_vbar.py
 sphinx/source/docs/user_guide/examples/plotting_vline_stack.py
 sphinx/source/docs/user_guide/examples/plotting_wedge.py
 sphinx/source/docs/user_guide/examples/plotting_whisker.py
 sphinx/source/docs/user_guide/examples/simple_line.js
 sphinx/source/docs/user_guide/examples/styling_axis_properties.py
 sphinx/source/docs/user_guide/examples/styling_background_fill.py
 sphinx/source/docs/user_guide/examples/styling_bounds.py
 sphinx/source/docs/user_guide/examples/styling_dimensions.py
 sphinx/source/docs/user_guide/examples/styling_fixed_ticker.py
 sphinx/source/docs/user_guide/examples/styling_func_tick_formatter.py
 sphinx/source/docs/user_guide/examples/styling_glyph_hover.py
 sphinx/source/docs/user_guide/examples/styling_glyph_properties.py
 sphinx/source/docs/user_guide/examples/styling_glyph_selections_plotting_glyph.py
 sphinx/source/docs/user_guide/examples/styling_glyph_selections_plotting_params.py
 sphinx/source/docs/user_guide/examples/styling_grid_band_fill.py
 sphinx/source/docs/user_guide/examples/styling_grid_band_hatch.py
 sphinx/source/docs/user_guide/examples/styling_grid_bounds.py
 sphinx/source/docs/user_guide/examples/styling_grid_lines.py
 sphinx/source/docs/user_guide/examples/styling_labels.py
 sphinx/source/docs/user_guide/examples/styling_legend_title.py
 sphinx/source/docs/user_guide/examples/styling_linear_mappers.py
 sphinx/source/docs/user_guide/examples/styling_min_border.py
 sphinx/source/docs/user_guide/examples/styling_minor_grid_lines.py
 sphinx/source/docs/user_guide/examples/styling_numerical_tick_formatter.py
 sphinx/source/docs/user_guide/examples/styling_plot_outline_line_color.py
 sphinx/source/docs/user_guide/examples/styling_printf_tick_formatter.py
 sphinx/source/docs/user_guide/examples/styling_tick_label_orientation.py
 sphinx/source/docs/user_guide/examples/styling_tick_lines.py
 sphinx/source/docs/user_guide/examples/styling_title.py
 sphinx/source/docs/user_guide/examples/styling_tool_overlays.py
 sphinx/source/docs/user_guide/examples/styling_visible_annotation_with_interaction.py
 sphinx/source/docs/user_guide/examples/styling_visible_property.py
 sphinx/source/docs/user_guide/examples/tools_hover_custom_tooltip.py
 sphinx/source/docs/user_guide/examples/tools_hover_tooltip_formatting.py
 sphinx/source/docs/user_guide/examples/tools_hover_tooltips.py
 sphinx/source/docs/user_guide/examples/tools_position_toolbar.py
 sphinx/source/docs/user_guide/examples/tools_position_toolbar_clash.py
 sphinx/source/docs/user_guide/layout.rst
 sphinx/source/docs/user_guide/styling.rst
 tests/integration//test_datarange1d.py
 tests/integration//test_plot.py
 tests/integration//test_sources.py
 tests/integration/tools/test_box_edit_tool.py
 tests/integration/tools/test_box_zoom_tool.py
 tests/integration/tools/test_freehand_draw_tool.py
 tests/integration/tools/test_pan_tool.py
 tests/integration/tools/test_point_draw_tool.py
 tests/integration/tools/test_poly_draw_tool.py
 tests/integration/tools/test_poly_edit_tool.py
 tests/integration/tools/test_range_tool.py
 tests/integration/tools/test_reset_tool.py
 tests/integration/tools/test_wheel_zoom_tool.py
 tests/integration/tools/test_zoom_in_tool.py
 tests/integration/tools/test_zoom_out_tool.py
 tests/integration/widgets/tables/test_source_updates.py
 tests/integration/widgets/test_autocomplete_input.py
 tests/integration/widgets/test_button.py
 tests/integration/widgets/test_checkbox_button_group.py
 tests/integration/widgets/test_checkbox_group.py
 tests/integration/widgets/test_color_picker.py
 tests/integration/widgets/test_datepicker.py
 tests/integration/widgets/test_daterange_slider.py
 tests/integration/widgets/test_dateslider.py
 tests/integration/widgets/test_dropdown.py
 tests/integration/widgets/test_multi_choice.py
 tests/integration/widgets/test_numeric_input.py
 tests/integration/widgets/test_password_input.py
 tests/integration/widgets/test_radio_button_group.py
 tests/integration/widgets/test_radio_group.py
 tests/integration/widgets/test_range_slider.py
 tests/integration/widgets/test_select.py
 tests/integration/widgets/test_slider.py
 tests/integration/widgets/test_spinner.py
 tests/integration/widgets/test_text_input.py
 tests/integration/widgets/test_textarea_input.py
 tests/integration/widgets/test_toggle.py
 tests/unit/bokeh/command/test_util__command.py
 tests/unit/bokeh/core/test_properties.py
 tests/unit/bokeh/io/test_export.py
 tests/unit/bokeh/plotting/test_figure.py
</details>
",9,1,['status: declined']
218,583745008,10988,3834332,2021-03-03 07:54:32,2021-03-03 17:22:45,closed,"register ""freehand_draw"" as an alias in python","- [ ] issues: fixes #10912
",1,1,['status: accepted']
219,583641045,10987,3834332,2021-03-03 05:18:55,2021-03-03 05:53:55,closed,Bryanv/2 3 1 forwardports,"In the interest of not accumulating too much branch movement work, this PR forward ports all current work on `branch-2.3` that needs forward porting to `branch-2.4`:

* #10973
* #10969 
* #10964 
* #10953 

Two PRs were already forward ported at some point:

* #10951 
* #10947 

Will remove the `needs forward port` labels as soon as this PR is merged. ",0,4,"['status: accepted', 'type: task', 'reso: completed']"
220,583631651,10986,3834332,2021-03-03 05:08:25,2021-03-03 05:48:09,closed,Bryanv/2 3 1 backports,"In the interest of not building up too many changes, this PR back ports all current outstanding PRs that landed on `branch-2.4` but should first appear in `2.3.1`:

* #10963 
* #10965 
* #10967

I will remove the `needs backport` labels once this PR is merged",0,3,"['status: accepted', 'type: task', 'reso: completed']"
221,582700743,10982,3834332,2021-03-02 04:57:31,2021-03-02 16:04:24,closed,remove SRI hashes from Bokeh output,"- [x] issues: fixes #10877
- [x] tests added / passed

supersedes #10954",0,1,['status: accepted']
222,582464498,10979,3834332,2021-03-01 22:09:17,2021-03-01 22:45:18,closed,Add dask/dask to downstream tests,"Currently bokeh-related tests for `dask/distributed` are tested as part of the downstream CI build. This PR ensures that the same happens for `dask/dask`.

- [x] issues: xref https://github.com/bokeh/bokeh/issues/10978
- [ ] ~~tests added / passed~~
- [ ] ~~release document entry (if new feature or API change)~~
",3,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
223,581904957,10975,3834332,2021-03-01 09:43:09,2021-08-05 04:16:29,closed,Use red/yellow color scheme for example,"... rather than red/green, which is hard to distinguish for Daltonian
people.

Reasoning: When reading the docs, I first didn't understand the
annotations example. It seemed that the annotation was missing, since I
only saw a blue line on a uniform background. Only when looking at the
code did I realize that there was a red/green pattern in the background
of the plot.

Note that, according to [1]: Red–green color blindness affects up to 8%
of males and 0.5% of females of Northern European descent.

[1]: https://en.wikipedia.org/wiki/Color_blindness

- [x] issues: fixes #10974
- [x] tests: n/a",9,9,['status: declined']
224,581678279,10973,3834332,2021-03-01 03:13:10,2021-03-01 03:52:39,closed,Add missing comma in example code,A comma was missing from a code example in First Steps 9 making the code invalid. This pr fixes the typo.,0,1,"['status: accepted', 'type: task', 'reso: completed']"
225,581508364,10972,3834332,2021-02-28 12:32:21,2021-03-01 03:58:00,closed,replaced old-style string substitution,"Fixes: ""TODO (bev) get rid of old style string substituion""
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
226,581463361,10971,3834332,2021-02-28 06:28:21,2021-04-04 19:16:43,closed,use official pydata sphinx theme,"- [x] issues: fixes #10685
- [x] release document entry (if new feature or API change)

cc @tcmetzger 

This is an early stab at removing our custom vendored version of the ""pydata sphinx theme"" for the official package. Unfortunately, I would say the first results are a bit wider off the mark than I had wished for. I am hoping @jorisvandenbossche  or @choldgraf might be able to help shed some light or offer some pointers. I've outlined the main issues so far 

## Issues that aren't just styling

### sidebars do not float

In the pandas docs and our old docs, the sidebars float as the central area is scrolled, affording constant navigation menus. When I build with the latest 0.4.3 version of the pydata theme, both the left and right sidebars scroll off the page:

<img width=""542"" alt=""Screen Shot 2021-02-27 at 10 17 02 PM"" src=""https://user-images.githubusercontent.com/1078448/109409668-8e2fc180-7949-11eb-8a42-e4cfd03e980f.png"">

At this point we don't have any custom CSS or JS at all so I am not sure what could be interfering. 


### scroll spy is not functions

Potentially related to the above comment. The ""scrollspy"" functionality to highlight the current section in the view port is simply not working at all. 


## Probably just styling 

### index page too narrow

We want both sidebars to be removed on the index page. Otherwise, we get this:

<img width=""542"" alt=""Screen Shot 2021-02-27 at 10 20 14 PM"" src=""https://user-images.githubusercontent.com/1078448/109409740-16ae6200-794a-11eb-93f4-256a6a2318d9.png"">

This also breaks the images at the bottom:

<img width=""542"" alt=""Screen Shot 2021-02-27 at 10 22 05 PM"" src=""https://user-images.githubusercontent.com/1078448/109409779-48272d80-794a-11eb-9689-e7c2db9ca2d8.png"">

### Gallery page too narrow

Same story as above, we have not historically had sidebars on the gallery, because we want to fill all available space with gallery tiles:

<img width=""542"" alt=""Screen Shot 2021-02-27 at 10 22 43 PM"" src=""https://user-images.githubusercontent.com/1078448/109409796-70af2780-794a-11eb-9742-f3c3552283aa.png"">

### Version selector is gone

We will need to figure out how to inject our custom page JS that adds our version selector to the top nav bar

### External link fa icons off center

<img width=""285"" alt=""Screen Shot 2021-02-27 at 10 24 49 PM"" src=""https://user-images.githubusercontent.com/1078448/109409818-a7853d80-794a-11eb-8bb6-366215d8ff90.png"">

### Releases page nav is badly formatted

<img width=""543"" alt=""Screen Shot 2021-02-27 at 10 26 17 PM"" src=""https://user-images.githubusercontent.com/1078448/109409844-df8c8080-794a-11eb-939e-8c9f6a678a3c.png"">

### Gallery detail pages badly formatted

<img width=""542"" alt=""Screen Shot 2021-02-27 at 10 27 43 PM"" src=""https://user-images.githubusercontent.com/1078448/109409875-11054c00-794b-11eb-9d83-2ec58e434fd0.png"">
",47,17,['status: accepted']
227,581437392,10969,3834332,2021-02-28 02:08:04,2021-02-28 03:21:13,closed,update to versioneer 0.19,"- [x] issues: fixes #10957

cc @tcmetzger 

Just for posterity, noting the minuscule customizations that are needed:

* `_version.py` and `versioneer.py` start with blank lines, which trips up our linter. Initial blank lines deleted
* unused variable in a `for i in range(3)` converted to `for _ in range(3)` 

Edit: also unused loop var in for `i in cfg.versionfile_source.split('/'):`

I will actually submit an upstream PR to see if these changes might be acceptible to versioneer. Also:

* removed updates to `MANIFEST.in` and `bokeh/__init__.py` they are just not necessary with our setup
",0,2,['status: accepted']
228,581377777,10967,3834332,2021-02-27 18:05:18,2021-03-01 03:53:44,closed,Mention jupyter-server-proxy instead of nbserverproxy in docs,"The `jupyter-server-proxy` package is the new version of `nbserverproxy` and should be used to enable the embedding of Bokeh servers in Jupyter notebooks through JupyterHub.

- [x] issues: fixes #10897",3,2,['status: accepted']
229,581224176,10965,3834332,2021-02-27 01:32:14,2021-02-28 01:07:30,closed,Optimization when processing docs,"Fixes: https://github.com/bokeh/bokeh/issues/10934

Now the list comprehension only cares about .rst files, and also we don't sort non-related file names.
",3,1,['status: accepted']
230,581171386,10964,3834332,2021-02-26 22:27:29,2021-02-28 01:12:01,closed,Add note re. Chrome/MacOS bug,"- [x] issues: fixes #10888

Add a note to the docstring of bokeh.models.widgets.inputs.FileInput regarding the upstream issue with Chrome/Big Sur discussed in bokeh.models.widgets.inputs.FileInput

cc @jeffreymonaco, @bryevdv 
",3,3,['status: accepted']
231,581050596,10963,3834332,2021-02-26 18:45:19,2021-02-26 21:39:48,closed,Handle empty files in FileInput and other fixes,"fixes #10887
",3,2,['status: accepted']
232,580993612,10961,3834332,2021-02-26 16:55:53,2021-02-27 12:04:25,closed,Upgrade to TS 4.2 and upgrade other dependencies,- [x] figure out `DatePicker` regression,0,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
233,580233024,10956,3834332,2021-02-25 16:33:19,2021-04-06 05:11:52,closed,add checks for hsl string definition,"- [x] issues: fixes #10902
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR adds support for defining HSL colors with strings",3,3,['status: declined']
234,579952095,10955,3834332,2021-02-25 09:38:45,2021-04-06 05:09:28,closed,add handling of pd.core.series.Series object,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #10904 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,3,['status: declined']
235,579680972,10954,3834332,2021-02-24 23:38:04,2021-03-01 07:19:46,closed,do not add SRI hashes to Bokeh-generated output,"- [x] issues: fixes #10877
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR removes SRI hash injection into Bokeh's built-in templates. I have left the hashes on the resource bundle:

* to minimize the amount of code to change
* in case anyone wants to use hashes, they might be useful

I also made minimal changes to the tests to now assert affirmatively that the `crossorigin` and `integrity` attributes are not present (rather than deleting those tests and leaving the behavior undefined).

@philippjfr please help double-check that there is not anywhere else that needs removal

@tcmetzger I looked and I don't think there are any docs to update but if you can take a look as well that will be appreciated. 

This PR will need one more update to add a note in the release notes (an initial 2.4 release notes file is in another still-open PR) but I am otherwise marking `ready` for review. 
",1,1,['status: superseded']
236,579676995,10953,3834332,2021-02-24 23:27:40,2021-02-27 00:01:16,closed,Add information about Bokeh channel for installation,Add information about the [Bokeh channel on Anaconda](https://anaconda.org/bokeh/bokeh) to the installation details.,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
237,579676153,10952,3834332,2021-02-24 23:25:34,2021-02-24 23:25:52,closed,Add information about Bokeh channel for installation,Add information about the [Bokeh channel on Anaconda](https://anaconda.org/bokeh/bokeh) to the installation details.,2,18,"['tag: component: docs', 'status: superseded']"
238,579656853,10951,3834332,2021-02-24 22:40:18,2021-02-24 23:01:47,closed,Update footer link to branding,"Update footer links from ""Citation"" to ""Branding"".",1,1,"['tag: component: docs', 'status: accepted', 'reso: completed']"
239,579646149,10948,3834332,2021-02-24 22:16:15,2021-02-24 22:31:30,closed,Fix broken link in HTML footer,"When adding the Branding page, the URL of the ""old"" citations page became invalid. This pull request updates the URL for the docs' HTML footer.",1,2,"['tag: component: docs', 'status: superseded']"
240,579639128,10947,3834332,2021-02-24 22:01:53,2021-02-24 22:46:28,closed,fix broken cloudfront invalidation,"I'm landing this on `branch-2.3` on the assumption that there is at least a reasonable chance of a `2.3.1` happening at some point.  I will cherry-pick it to `branch-2.4` as soon as it is merged. 

- [x] issues: fixes #10943
",1,1,['status: accepted']
241,579631500,10945,3834332,2021-02-24 21:47:00,2021-02-26 14:16:53,closed,Drop support for Python 3.6,"- [x] issues: fixes #10839 
- [x] release document entry (if new feature or API change)
",3,8,['status: accepted']
242,579571402,10944,3834332,2021-02-24 20:07:11,2021-02-24 20:50:05,closed,Bring 2.4 branch up to date,"- [x] issues: fixes #10932 
",2,12,['status: accepted']
243,578949391,10939,3834332,2021-02-24 03:53:26,2021-02-24 16:12:19,closed,consider view for legend representatives,"- [x] issues: fixes #10935
- [x] tests added / passed

@mattpap this fails the test with the expected out-of-bounds error without the changes, and passes the test with the changes. It also behaves well with more extensive dask operations e.g. 
```
In [2]: import dask.array as da
   ...:
   ...: X = da.random.random((2000000, 100), chunks=(100000, 100)).persist()
   ...: u, s, v = da.linalg.svd_compressed(X, k=5)

In [3]: v.compute()
```
and as far as I can tell, the graph looks correct (nodes later after ""processing"" nodes are marked ""waiting"" etc.) cc @quasiben 

I am sure the code could be cleaner or make use of better APIs I am just unfamiliar with. Please do one of two things first things in the morning:

* make any small changes or improvements, then merge, or
* merge as-is if you are content with it

I do still plan to release tomorrow with this fix included. 
",1,1,['status: accepted']
244,578830058,10938,3834332,2021-02-23 23:26:35,2021-02-24 00:07:17,closed,Don't render a legend if there's no data,"fixes #10935
",3,1,['status: accepted']
245,577953518,10936,3834332,2021-02-22 21:30:18,2021-02-23 00:52:25,closed,Fix dask related regressions,"fixes #10935
",10,4,['status: accepted']
246,577890125,10933,3834332,2021-02-22 19:39:50,2021-02-22 21:27:31,closed,add 2.3 release notes,"
",0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
247,577533573,10931,3834332,2021-02-22 10:41:07,2021-06-22 17:13:52,closed,Drop support for IE and legacy web browsers,fixes #9731,3,7,['status: accepted']
248,577517942,10930,3834332,2021-02-22 10:18:20,2021-02-24 21:00:07,closed,Replace JS var with let/const across the codebase,"
",0,3,"['status: accepted', 'type: task', 'reso: completed']"
249,577509194,10929,3834332,2021-02-22 10:05:48,2021-02-22 17:07:47,closed,Fix user_guide/extensions_example_widget.py,"fixes #10924
",0,2,['status: accepted']
250,577013857,10923,3834332,2021-02-20 22:11:02,2021-02-20 22:51:09,closed,Bump minimum nodejs version to 14+,fixes https://github.com/holoviz/panel/issues/1993,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
251,576919114,10922,3834332,2021-02-20 11:29:23,2021-02-20 22:19:32,closed,Fix LogAxis' labels under rotation and add tests,A followup after PR #10828.,0,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
252,576570261,10921,3834332,2021-02-19 16:25:04,2021-02-19 17:09:36,closed,Run downstream tests on Python 3.9,An experiment. Don't merge.,1,1,"['tag: component: tests', 'status: declined', 'type: task']"
253,575204775,10918,3834332,2021-02-17 20:51:15,2021-02-18 13:29:08,closed,Allow None/null in GlyphRenderer.{non}selection_glyph,fixes #10913,4,1,['status: accepted']
254,575160956,10917,3834332,2021-02-17 19:36:25,2021-03-03 17:21:25,closed,"register ""freehand_draw"" as alias","
- [ ] issues: fixes #10912

",7,2,['status: accepted']
255,575155056,10916,3834332,2021-02-17 19:25:38,2021-02-17 19:28:02,closed,"register ""freehand_draw"" as alias","

- [ ] issues: fixes #10912

",3,1,['status: superseded']
256,575143325,10915,3834332,2021-02-17 19:04:10,2021-02-17 19:52:21,closed,Fix broken hbar_stack example,"Fixes #10906 by changing `x` keyword argument to `y` in `hbar_stack` example.
",1,1,['status: accepted']
257,574408720,10909,3834332,2021-02-16 18:58:06,2021-02-16 23:32:51,closed,"Update server.rst - ""acme:com""?","I assume this is invalid value: `--allow-websocket-origin=acme:com`

- [x] issues: fixes #10908
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,1,['status: accepted']
258,573691570,10907,3834332,2021-02-15 17:00:49,2021-02-18 13:28:09,closed,Experiments with cross-platform visual tests,**Do not merge**,3,17,"['tag: component: tests', 'status: superseded', 'type: task', 'tag: component: bokehjs']"
259,571564747,10900,3834332,2021-02-11 04:50:25,2021-02-22 04:47:44,closed,Minor docs updates ,"Connected to #10539, I will use this pull request to collect commits that update various sections of the docs based on Bokeh's documentation style guidelines.",7,8,"['tag: component: docs', 'status: accepted', 'type: task']"
260,571543217,10899,3834332,2021-02-11 03:26:04,2021-02-18 18:15:51,closed,Document new types of color types and color arrays,This pull request is a work in progress and will be used to collect commits to update various aspects related to colors in the docs. This pull request fixes #10895. ,7,8,"['tag: component: docs', 'status: accepted', 'type: task']"
261,570153933,10896,3834332,2021-02-09 09:34:39,2021-02-09 15:42:13,closed,Merge pull request #1 from bokeh/branch-2.3,"base merge

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: declined']
262,569927279,10894,3834332,2021-02-09 01:09:31,2021-02-10 20:12:03,closed,Fix layout regressions after PR #10779,fixes #10851,1,4,['status: accepted']
263,569144326,10893,3834332,2021-02-08 04:39:06,2021-02-08 20:46:55,closed,Add note about deprecated marker classes.,"This pull request adds a note about the deprecated marker classes to the figure in the section ""Bokeh Models"" of the Developers Guide. It complements #10885 and also fixes #10875. ",0,2,"['tag: component: docs', 'status: accepted', 'type: task']"
264,568987591,10891,3834332,2021-02-07 14:57:19,2021-02-09 15:17:05,closed,Update doc; reference outdated 'nbserverproxy',"Reason for propose change:
> Note: This project used to be called nbserverproxy. As nbserverproxy is an older version of jupyter-server-proxy, uninstall nbserverproxy before installing jupyter-server-proxy to avoid conflicts. [ref](https://github.com/jupyterhub/jupyter-server-proxy#jupyter-server-proxy)

I haven't verified that this works, since I'm in the midst of developing a solution to a larger issue where this was a subset of it.

Additional doc:
[jupyter-server-proxy - installation](https://github.com/jupyterhub/jupyter-server-proxy/blob/master/docs/install.rst)

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,"['tag: component: docs', 'status: declined', 'type: task']"
265,564826070,10885,3834332,2021-02-01 04:15:48,2021-02-08 19:36:50,closed,Update marker docs,"This pull request fixes #10875. It is currently a work in progress, I will add more commits as we discuss the best way forward.",4,14,"['tag: component: docs', 'status: accepted', 'type: task']"
266,564735285,10884,3834332,2021-01-31 21:47:59,2021-02-01 10:59:33,closed,Update and make configurable gmaps' API version,fixes #10883,0,2,['status: accepted']
267,564564356,10881,3834332,2021-01-31 01:29:37,2021-02-01 11:00:23,closed,add missing export_svg to bokeh.io top level,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10879
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,1,['status: accepted']
268,564194222,10878,3834332,2021-01-29 19:38:49,2021-02-26 14:29:11,closed,Streamline / Cleanup Properties System,"This is just WIP for preview. I will rebase on `branch-2.4` when it is made. 

- [x] issues: fixes #10867
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

There is indeed *lot* of cruft and/or unnecessary code around properties that can be jettisoned or cleaned up. 
",4,8,['status: accepted']
269,563676510,10874,3834332,2021-01-29 01:42:02,2021-02-01 18:46:20,closed,Followup fixes after PR #10842,"- [x] initial value for `value_throttled` matching `value`
- [x] don't allow `default`, `help`, etc. for ""inner"" types (e.g. disallow `Nullable(String(help=""...""))`)
- [x] fixes #10880",1,6,['status: accepted']
270,562820423,10873,3834332,2021-01-27 22:01:58,2021-01-27 22:58:10,closed,Update URL for numpy intersphinx inventory,"Numpy's intersphinx inventory has moved from` https://docs.scipy.org/doc/numpy/` to `https://numpy.org/doc/stable/`. This pull request updates the URL in `conf.py`. This takes care of a warning message that Sphinx currently shows with every docs build (""`intersphinx inventory has moved: https://docs.scipy.org/doc/numpy/objects.inv -> https://numpy.org/doc/stable/objects.inv`"").",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
271,562719910,10871,3834332,2021-01-27 18:55:32,2021-01-27 21:19:31,closed,remote toctree from releases.rst,"- [x] issues: fixes #10465 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
272,561453816,10869,3834332,2021-01-26 00:51:48,2021-01-27 00:54:33,closed,explose client side max message size,"Small fix, I had almost all ready just from invesgation. Chose default to match existing server/browser value. Also fixed a bug that only happens a disconnect state transition. 

- [x] issues: fixes #10863
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,3,['status: accepted']
273,560411050,10865,3834332,2021-01-23 12:28:06,2021-01-23 13:32:51,closed,Miscellaneous bokehjs build changes ,"- URL fixing is not needed anymore in `npm@7`
- require `npm >= 7.4` due to `npx` regressions (`test_js_license_set` failures)
- makes release scripts set bokehjs version in `package-lock.json` (v2) correctly",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
274,558772024,10862,3834332,2021-01-21 01:22:21,2021-01-21 03:02:20,closed,Add Bokeh8 palette,"This PR adds the eight-color level of the Bokeh palette (maintaining the color order of the 7-color level). 

![image](https://user-images.githubusercontent.com/43212692/105261162-c1b24b80-5b54-11eb-9622-c605b9dbbfec.png)
",2,9,"['status: accepted', 'type: task', 'reso: completed']"
275,558491885,10861,3834332,2021-01-20 19:57:59,2021-03-12 09:40:52,closed,Redesign WebGL backend using ReGL,"This is WIP to replace the previous webgl line code with instanced line rendering using the regl javascript library. I have rewritten both vertex and fragment shaders, and regl now does most of the webgl heavy lifting of creating vertex buffers, textures, etc. The new code is simpler, hopefully easier to understand, and there is a significant reduction in the amount of data sent from CPU to GPU which will eventually give a performance benefit.

![webgl_demo](https://user-images.githubusercontent.com/580326/105224794-8fedb480-5b55-11eb-8940-9a3546cbdcb9.png)

Above example for solid lines was produced by the following code:

```
from bokeh.core.enums import LineCap, LineJoin
from bokeh.io import show
from bokeh.layouts import row
from bokeh.plotting import figure, curdoc
import numpy as np

w = 500
h = 600
x = np.asarray([0,   1,   2, 3, 4])
y = np.asarray([1.2, 1.5, 1, 4, 1.5])

fig0 = figure(plot_width=w, plot_height=h, output_backend='canvas', title='canvas')
                            
fig1 = figure(plot_width=w, plot_height=h, output_backend='webgl', title='webgl',
              x_range=fig0.x_range, y_range=fig0.y_range)

linewidths = [20, 3]
caps = [LineCap.butt, LineCap.round, LineCap.square]
joins = [LineJoin.miter, LineJoin.round, LineJoin.bevel]
colors = ['red', 'green', 'blue']

for fig in (fig0, fig1):
    offset = 0.0
    for lw in linewidths:
        for cap, join, color in zip(caps, joins, colors):
            offset -= 1.0
            fig.line(x, y + offset, line_color=color, line_width=lw,
                     line_alpha=0.6, line_cap=cap, line_join=join,
                     legend_label=f'cap={cap}, join={join}, lw={lw}')
    fig.legend.location = 'top_left'

curdoc().add_root(row(fig0, fig1))
```
The output looks identical to my naked eye; there are some slight differences in antialiasing at the edge if you zoom in.

Dashed lines still need some more work: neither the start offset or user-defined offsets are correct, and joins are not correct either. But it almost acceptable for thin lines.

![webgl_demo2](https://user-images.githubusercontent.com/580326/105225262-38037d80-5b56-11eb-8b21-756030ec182b.png)

I've tried to keep the code architecture similar to before as it is a big enough change without also changing the architecture, and I wanted to leave the (unmodified) marker webgl code still working. But I haven't succeeded here, if you use both the old webgl markers and new webgl lines on the same canvas strange things happen presumably through sharing webgl resources that are initialised in two incompatible ways. So the webgl marker code needs to be changed in tandem with this, either in this PR or another one soon after.

My webgl initialisation is also poor, if you don't have the correct extensions it fails ungracefully.  Fixing this will be easy when the markers are changed.

Things I know I need to do:
1. Fix the dashes.
2. Add tests (!)
3. Webgl markers and initialisation.
4. Look into `pixel_ratio` which I have ignored so far.

I am interested in what others think might be problems that I haven't thought of, e.g. multiple renderings of the same data, interactive changes. Also my typescript isn't very good yet, I am learning it quickly but I am at the stage of it being both really useful and really annoying compared to pure javascript, so I am expecting to have to make changes here.

If anyone wants to compile and play with the code, there are a couple of variables in `webgl/line_gl.ts` that are interesting to change: setting `debug_show_mesh` on line 52 to `true` will render the webgl mesh on top of the lines, and `antialiasing` on line 49 can be altered to vary the width of the antialiasing.",41,24,"['status: accepted', 'type: task', 'reso: completed', 'tag: webgl']"
276,558185493,10860,3834332,2021-01-20 11:54:08,2021-01-25 18:26:03,closed,Resolve IE compatibility issues,"- [x] don't use modern regex syntax
- [x] fix bundling of `Proxy` polyfill
",6,13,"['type: bug', 'status: accepted', 'reso: completed', 'plat: ie', 'tag: component: bokehjs']"
277,557804183,10858,3834332,2021-01-19 23:19:32,2021-01-20 11:55:51,closed,Properly derive `WebDataSource` from `ColumnDataSource`,"This is more a workaround than a solution to the underlying data size determination issue, but at least it fixes web data sources and broken examples.

fixes #10853",1,4,['status: accepted']
278,557107508,10856,3834332,2021-01-19 01:15:06,2021-01-20 11:55:19,closed,Connect change signals for secondary glyphs of GlyphRenderer,"- [x] integration tests

fixes #10855
",0,2,['status: accepted']
279,557073508,10854,3834332,2021-01-18 22:55:05,2021-01-20 11:54:48,closed,Work around in-place updates in LassoSelectTool,"Regression test would be useful, though I think I will deal with those in-place updates in the first place (in near future).

fixes #10852 ",0,2,['status: accepted']
280,556745866,10850,3834332,2021-01-18 11:37:19,,open,Allow to inherit non-visual glyph data,"Early WIP.

fixes #2367",1,1,['status: WIP']
281,556578815,10848,3834332,2021-01-18 07:14:40,2021-01-19 00:31:31,closed,Incorrect Example updated,"In line 105, error was thrown :
BokehUserWarning: ColumnDataSource's columns must be of the same length. 
changed np.ndarray to np.array

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
282,556467652,10847,3834332,2021-01-18 02:25:41,2021-01-18 22:10:21,closed,Add star marker - webgl extension,"This PR extends the PR #10846 

The algorithm was adapted from https://iquilezles.org/www/articles/distfunctions2d/distfunctions2d.htm and the current results are

![image](https://user-images.githubusercontent.com/10517326/104865606-3601aa80-591b-11eb-958c-c275e39262ba.png)

![image](https://user-images.githubusercontent.com/10517326/104866369-313df600-591d-11eb-9f4b-0e688a5e4642.png)

",4,7,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
283,556230792,10846,3834332,2021-01-16 20:45:25,2021-01-17 14:36:36,closed,Add star and star_dot markers,"This pull request adds two new star shaped markers: a single five pointed star and a dotted five pointed star.

- [ ] issues: fixes #10836
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Currently I just modified the bokehjs codes, with the following results

![Marker_glyph__should_support_'star'_marker_type](https://user-images.githubusercontent.com/10517326/104822499-b0e69a80-5821-11eb-8ece-629c31ccbc2b.png)
![Marker_glyph__should_support_'star_dot'_marker_type](https://user-images.githubusercontent.com/10517326/104822505-b5ab4e80-5821-11eb-9dcf-b64a55171f7c.png)
![Marker_glyph__should_support_glyph_methods_and_rotation](https://user-images.githubusercontent.com/10517326/104822476-8e548180-5821-11eb-882b-66edb699a8cb.png)

I'm still learning how to implement the changes to the python section.

(There's another PR I created yesterday, please do not consider it, I was still understanding how PR work)",12,5,['status: accepted']
284,555854208,10845,3834332,2021-01-15 18:00:10,2021-01-15 18:03:35,closed,Add star marker,Please remove this pull request,2,1,[]
285,555145992,10843,3834332,2021-01-14 19:19:36,2021-01-15 18:17:08,closed,Update copyright dates and bokehjs' license,"
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
286,554534395,10842,3834332,2021-01-13 22:59:34,2021-01-25 21:44:49,closed,Make Python bokeh properties non-nullable by default,"To define a nullable property, one can use either `Either(Null, *Types)` or `Nullable(Type)`.

fixes #10841
",11,48,['status: accepted']
287,553636174,10838,3834332,2021-01-12 17:44:23,2021-01-13 01:05:53,closed,Don't use explicit module names in styles/**/*.d.ts,"fixes #10837
",0,1,['status: accepted']
288,553065783,10835,3834332,2021-01-11 22:44:08,2021-01-11 23:20:32,closed,Infer viewport size in bokehjs integration tests,"Allows to write `await display(obj)` instead of `await display(obj, [width, height])` in obvious cases. Non-obvious cases include widgets and responsive sizing.
",1,3,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
289,552416572,10833,3834332,2021-01-11 01:48:47,2021-01-11 22:37:53,closed,Add hatch pattern support to box and poly annotations,"Originally this PR was supposed to only finish up hatch pattern implementation, but I also resolved some other issues with box and poly annotations. So, this also adds `Model.syncable` property, which allows to disable server sync for entire models. This in turn allows simplification of box/poly annotations' update logic and allows users to override update policy for selection overlays, allowing to get overlays' coordinates (see [this](https://discourse.bokeh.org/t/get-coordinates-from-image-using-lasso-select-tool/7007) discussion). I also finished implementation of `data` units in `PolyAnnotation` and simplified both implementations.

fixes #9929",2,9,['status: accepted']
290,552351530,10832,3834332,2021-01-10 21:28:55,2021-01-11 18:08:23,closed,Update concepts.rst and cli.rst,"This pull request updates concepts.rst an cli.rst as described in #10539. The changes to concepts.rst an cli.rst are mostly the changes made by @Konntroll in #10648. 

This pull request also updates documentation.rst in the dev docs to add a link to concept.rst's glossary (and also fixes some minor issues with incorrectly named labels in documentation.rst).",0,6,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
291,552212355,10830,3834332,2021-01-10 01:38:53,2021-01-11 18:09:35,closed,User Guide: add links to widget class references,"Adds cross-references to classes for all widgets in the User Guide.

- [ ] issues: fixes #10667",0,6,['status: accepted']
292,552066058,10829,3834332,2021-01-09 06:50:08,2021-01-09 11:15:02,closed,Fix minor typos and inconsistencies,This pull request fixes some minor typos and inconsistencies in various elements of the user guide that have been worked on in connection with #10539. ,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
293,552037999,10828,3834332,2021-01-09 02:08:08,2021-02-19 22:03:12,closed,Redesign text rendering and add labeling policies,"This PR:

- redesigns text rendering and adds support for:
    - more robust anchoring and alignment
    - multi-line text
- adds axis labeling policies
- allows to correct leading/trailing labels' overflow

Examples:

- multi-line categorical and axis labels:
![image](https://user-images.githubusercontent.com/27475/104080118-88114480-5226-11eb-97eb-26fc8ba6754c.png)

- color bar with no-overlap labeling policy:
![image](https://user-images.githubusercontent.com/27475/104080140-a6774000-5226-11eb-8bf7-9424ed3a9492.png)

- [x] fixes #8169
- [x] fixes #8954 ",13,52,['status: accepted']
294,552016562,10827,3834332,2021-01-09 00:01:28,2021-01-09 11:13:35,closed,Updated DataTable fit_columns docstring,"Update to DataTable documentation as suggested on the Discourse. 

@philippjfr or @mattpap it looked like the functionality on the `fit_columns` param was duplicated/replaced by the `autosize_mode` param, so I just marked the `fit_columns` one as legacy to avoid confusion. CCing you for verification-- if this is wrong, let me know.

- [ ] issues: fixes #10748
",2,2,['status: accepted']
295,551911857,10825,3834332,2021-01-08 19:13:02,2021-01-09 11:12:05,closed,Implement hatch patterns for all area glyphs,"Completes implementation of hatch patterns for all area glyphs, e.g.

![image](https://user-images.githubusercontent.com/27475/104054554-9ee77500-51ed-11eb-95fa-c6d51afcc70e.png)

![image](https://user-images.githubusercontent.com/27475/104055313-d6a2ec80-51ee-11eb-9a99-cf9287297849.png)

SVG output is often wrong, though likely easy to fix.

fixes #10824
fixes #10826
",3,8,['status: accepted']
296,550723205,10823,3834332,2021-01-06 23:22:16,2021-01-07 01:01:40,closed,Remove Vale,"This pull request removes Vale from the CI, following the discussion in #10820. Unfortunately, Vale currently seems to not work with pull requests that are based on a forked repo.",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
297,550666502,10821,3834332,2021-01-06 20:52:14,2021-01-06 22:15:07,closed,Fix typo and update Vale vocab,"This pull request fixes a single minor typo in compat.rst of the user docs.
It also serves as a test of Vale and detect potential issues (as seen in #10820)",1,2,"['tag: component: docs', 'status: declined', 'type: task']"
298,550590289,10820,3834332,2021-01-06 18:06:16,2021-01-07 16:14:10,closed,Fix example of LabelSet in user manual,"Remove the level attribute from the LabelSet example as it is broken (at least as used in example).
Fixes #10819.
",7,2,['status: accepted']
299,549302782,10817,3834332,2021-01-05 17:23:52,,open,"Implement ""views"" for tick formatters","Our current understanding of the term ""view"" may be skewed towards the UI, which is indeed true if one looks at the existing implementation of `View` class. However, the term is broader than that. In the case of tick formatters this may not be immediate, but consider `MercatorTickFormatter`, which requires cross-coordinates, which are only available to views (`AxisView`). The current approach of resolving this issue exposes internal bokehjs state to models and skews entire tick formatter API for that particular case. Another instance, though less prominent, is `LogTickFormatter`, which requires access to the ticker, which can be implicitly provided, assuming formatting is done on the view level (no need for providing explicit ticker as this is done currently, or a back ref to an axis, as it used to be done). Besides this, current tick formatters don't take advantage of visual space information, but that may change. For example one could adjust the format of labels, depending on the available space (e.g. improve readability for compact plots). Perhaps tick formatters also could produce non-string labels. Finally, this is required to allow separation of models from views, and allowing reuse of models in other contexts (i.e. node).

The downside of this change is that using `TickFormatter`s outside axes is cumbersome (e.g. sliders, `NumberInput`), but that's fine, because this exposes a design flaw where a models of certain kind are pushed out of their design context. In this case using tick formatters for generic formatting applications.

Then there's the question of backwards compatibility, which I think can be resolved, by dynamically creating views for formatters that implement `doFormat()` method.",1,2,"['status: WIP', 'type: task', 'tag: component: bokehjs']"
300,548461091,10815,3834332,2021-01-04 20:56:47,2021-01-05 19:04:54,closed,Replace CSS based font metrics with canvas based,"This replaces CSS based font metrics algorithm with a canvas based (uses pixel manipulation to figure out font ascent, descent and height). This also removes `ctx.measureText()` override (`ascent`) and uses the new `font_metrics()` function instead. The new approach mostly (there are few 1px-off differences across 3-100px font size range for ""bokeh"" (Roboto) font) agrees with the new native `ctx.measureText()` API (available only in cutting edge browser versions, so we can't use it yet). The benefits of the new approach are that computations are canvas bound, so CSS can't interfere with results, computations can be done where CSS in not available, e.g. workers, node-canvas, and this may be faster, as there is no need for CSS layout for each measurement. There are a few other refactorings and simplifications in this PR, that are vaguely related to base changes, as this PR was supposed to go a bit different direction (this is a basis for labeling work).",0,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
301,548340233,10814,3834332,2021-01-04 16:28:44,2021-01-14 17:55:34,closed,Fix CustomJSFilter args dict: warn if disallowed key is passed,"Add `RestrictedDict` (a subclass of `Dict`) which raises an error if a disallowed key is passed.

Change `args = Dict(...)` to `args = RestrictedDict(disallow=(), ...)` in CustomJSFilter.

TODO: Add unit test.

I'm unsure about the unit tests can someone guide me on how it is to be added?
Thanks!

fixes #9958",15,18,['status: accepted']
302,547619008,10810,3834332,2021-01-01 11:54:19,2021-01-02 15:49:48,closed,Repaint resized layoutable renderers,"This just patches things up. I need come up with a coherent design for renderer/layout invalidation in near future.

- [x] integration test

fixes #10809 
",0,2,['status: accepted']
303,547181577,10807,3834332,2020-12-31 03:45:50,2020-12-31 12:28:25,closed,remove explicit defaults channel from ci env files,"- [x] issues: fixes #10803

See if this works...",2,2,['status: accepted']
304,547054048,10805,3834332,2020-12-30 19:03:26,2021-01-04 18:44:12,closed,Make exports consider current theme,"This PR should make exports consider the current theme.
- [x] issues: fixes #10804
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Should I add a test to https://github.com/bokeh/bokeh/blob/branch-2.3/tests/unit/bokeh/io/test_export.py which checks that e.g. the export function works as excepted using a similar example as given in the issue?",7,3,['status: declined']
305,546085027,10799,3834332,2020-12-28 13:02:32,2021-01-19 10:41:45,closed,Make Websocket compression configurable on Tornado server,"This PR makes it possible to enable WebSocket compression but does not enable it by default.

- [x] issues: fixes #10798
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,8,['status: accepted']
306,545034777,10797,3834332,2020-12-23 21:22:04,2021-01-06 06:49:40,closed,Check docs with CI (individual pull requests),"closes #10728 

I am opening this pull request to add automated quality checks of the docs to the CI. This specific pull request uses a configuration that will check any modified RestructuredText files in a pull request. I will open a separate pull request to enable continuous routine checks, as [proposed ](https://github.com/bokeh/bokeh/pull/10735#issuecomment-736186258) by @bryevdv. ",4,27,['status: accepted']
307,543015008,10793,3834332,2020-12-20 04:25:34,2020-12-30 18:52:17,closed,Update styling.rst according to style guidelines,This pull request updates styling.rst according to the style guidelines (#10539). ,0,2,"['tag: component: docs', 'status: accepted', 'reso: completed']"
308,542919649,10791,3834332,2020-12-19 12:17:09,2021-01-06 06:45:45,closed,10539 server.rst,Finished editing server.rst for issue #10539. Let me know if you'd like me to make any changes.,4,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
309,542215145,10788,3834332,2020-12-18 00:30:22,2021-01-18 23:48:59,closed,Establish a unified data handling model,"- [x] fixes #10666 
- [x] fixes #10738 
- [x] fixes #10801 
- [x] fixes #10203
- [x] fixes #6835
- [x] fixes #10594",12,68,['status: accepted']
310,541325944,10786,3834332,2020-12-16 17:28:25,2020-12-17 01:10:35,closed,20201216.1718 resolve feature 10783. tested and working.,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #10783 
- [X] tests added / passed
- [N/A] release document entry (if new feature or API change)
",1,2,['status: accepted']
311,541214528,10785,3834332,2020-12-16 14:43:10,2020-12-22 10:39:04,closed,Request paint only for changed renderers,"This makes paint invalidation process more selective, allowing to have glyphs on multiple layers, where updating a glyph on one layer doesn't force repaint on other layers. For now we have two implicit layers (base and overlays), but I will get this generalized in near future, so that the user will be able to create his own layers and stack them, allowing to take advantage of the full potential of this change.

- [x] integration tests

fixes #10784",0,4,['status: accepted']
312,540126761,10781,3834332,2020-12-15 10:02:19,2021-02-24 21:16:42,closed,Displaying low/high color values of LinearColorMapper #10376,"WIP but I wanted to get some first hand looks before proceeding further.

Currently I've implemented displaying low_color and high_color using the new extend field of the ColorBar. I modified the code snippet from the issue as below to produce the following color bar.

```
colormapper = LinearColorMapper(
    palette=palettes.magma(7)[::-1], low=0.3, high=1.0, low_color=""red"", high_color=""blue""
)
```

```
color_bar = ColorBar(
    color_mapper=colormapper,
    location=(0, 0),
    extend = ""both"",
)
```

![Screen Shot 2020-12-15 at 4 55 41 AM](https://user-images.githubusercontent.com/43485776/102199583-cae33500-3e91-11eb-949d-0fd2b75785a7.png)

I plan on modifying the ticks so it aligns and modifying the labels so that ""low"" and ""high"" labels are displayed correctly, but I wanted to get a confirmation that this visualization is in the right direction. Thank you!


#10376 ",5,16,['status: declined']
313,539846451,10780,3834332,2020-12-14 22:41:15,2021-01-04 18:42:34,closed,Edits for Issues#10733,"[All](url) pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #10733 
- [] tests passed 4325 passed, 103 errors
- [ ] release document entry (if new feature or API change)

1. I have added the two lines from check.py into document.py
2. I have added BOKEH_VALIDATION_EXCEPTIONS with a convert_validation_exceptions function. I have made an attempt but am not sure exactly how to log and print exceptions from the validate function in document.py.
3. There is some mock tests mentioned on the issue. Where in the files are the mock tests?
",1,2,['status: declined']
314,539073534,10779,3834332,2020-12-14 01:46:27,2021-01-03 16:40:20,closed,Redesign ColorBar in terms of the layout,"This allows side and center panels to provide their own layouts. In particular, this allows `ColorBar` to be redesigned using the layout and plot building blocks like Cartesian frame, axes, annotations (title), etc. This will later allow to use layout in legends, etc. As a side effect of using axes, instead of the custom implementation, I went ahead and added support for categorical mappers. This PR is needed to allow axis labeling improvements to work with color bars.

An example (nothing special, categorical mapper at the very bottom):

![image](https://user-images.githubusercontent.com/27475/103309148-96848280-4a14-11eb-9676-25328211330b.png)

fixes #5618",1,46,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
315,537724002,10777,3834332,2020-12-12 03:43:16,2021-03-18 01:05:35,closed,Changed inputs.py and date_picker.ts to allow custom date formats but running into error (WIP),"Changed files that are mentioned in the title but getting error ""TypeError: Cannot read property 'set_value' of undefined"" when trying to pass in an argument for date format.

A couple of extra files for debugging included that I will remove before final pull request.

- [ ] issues: fixes #10619  ",3,4,['status: declined']
316,534831784,10772,3834332,2020-12-09 01:25:18,,open,Fix RectView._hit_point() when angle != 0,"- [ ] more regression test cases

fixes #9752",0,4,['status: WIP']
317,533946925,10770,3834332,2020-12-07 21:04:19,,open,Fix row ordering and date formatting in DataTable,"fixes #10749 
fixes #10769
",3,4,['status: WIP']
318,533238717,10768,3834332,2020-12-06 17:56:05,2020-12-06 18:24:06,closed,Changed the link to the installation documentation in README,"I just made a change from the broken link to the new one. The second link works while the first one does not. A test can be done via the browser and thus not included.

Below is the working link to the installation documentation.

https://docs.bokeh.org/en/latest/docs/installation.html

- [x] issues: fixes #10767
",1,1,['status: declined']
319,533179014,10766,3834332,2020-12-06 11:12:27,2020-12-08 06:44:08,closed,10539 plotting.rst,Finished editing plotting.rst for issue #10539. Let me know if you'd like me to make any changes.,1,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
320,533115658,10764,3834332,2020-12-06 00:27:26,2020-12-19 19:07:15,closed,Add visual tests for Legend annotation,,1,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
321,533039025,10762,3834332,2020-12-05 16:13:45,2020-12-05 21:49:46,closed,Improve BitSet.select() and fix a CustomJS example,"fixes #10755
",0,2,['status: accepted']
322,533022745,10761,3834332,2020-12-05 14:09:50,2020-12-05 15:54:29,closed,Restore 'index' argument to HoverTool.callback,fixes #10754,2,1,['status: accepted']
323,533017540,10760,3834332,2020-12-05 13:28:18,2020-12-05 14:08:33,closed,Manually quote arguments to npx,"npx from npm 7.1 stopped quoting arguments, making `test_js_licenses` fail.",0,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
324,533004366,10759,3834332,2020-12-05 11:46:26,2020-12-05 13:01:25,closed,Upgrade to Chrome/Chromium browser 87.x,"
",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
325,532860485,10757,3834332,2020-12-05 00:36:04,2021-01-19 01:50:25,closed,2230 expose hit radius,"Exposes the hit_radius for the tap and hover tools, for different markers, hit_radius is an optional parameter that can now be passed in to set the hit_radius of different markers allowing for decoupling or the visible radius and the hit radius.

- [x] issues: fixes #2230
- [ ] tests added / passed
    - wasn't sure if there are existing tests for hit_point and if/how they would need to be modified please advise
- [ ] release document entry (if new feature or API change)
    - if behaviour is acceptable, can update documentation to reflect changes

Modified the crossfilter example under ""examples/app/crossfilter"" to show changes, tested with different markers on both hover and tap tools.

Example for Marker:
<img width=""157"" alt=""Screen Shot 2020-12-04 at 7 25 07 PM"" src=""https://user-images.githubusercontent.com/29617392/101227817-3abe1800-3667-11eb-9972-cbcd2879add3.png"">

<img width=""223"" alt=""Screen Shot 2020-12-04 at 7 24 20 PM"" src=""https://user-images.githubusercontent.com/29617392/101227820-3b56ae80-3667-11eb-8b3c-b4c8c04ac6d3.png"">

Example for Circle:

<img width=""178"" alt=""Screen Shot 2020-12-04 at 8 37 34 AM"" src=""https://user-images.githubusercontent.com/29617392/101227914-94264700-3667-11eb-90fa-889ee15524ab.png"">

<img width=""188"" alt=""Screen Shot 2020-12-04 at 8 39 52 AM"" src=""https://user-images.githubusercontent.com/29617392/101227915-94bedd80-3667-11eb-9af0-56ed49479ee0.png"">
",13,9,['status: accepted']
326,531187022,10750,3834332,2020-12-02 17:51:24,2021-04-06 05:05:35,closed,Add tooltip arrow styling to HoverTool,"Add ability to style the HoverTool's tooltip arrow, specifically recolouring.

- [ ] issues: fixes #9378 
- [ ] tests added / passed
  - Couldn't find an existing testing plan for HoverTool configuration, but I might be mistaken; looks like there's some discussion in #10743 where this may be done in the future?
- [ ] release document entry (if new feature or API change)
  - If the behaviour looks good and there are no additional configuration options requested, I can look into updating the docs

---

I ran the `examples/app/gapminder` demo, replacing the existing `HoverTool` creation (L51) with the following (`black` could be replaced with any CSS colour-like string e.g. `#000000` or `rgb(0, 0, 0)` etc.):
```python
plot.add_tools(HoverTool(tooltips=""@Country"", tooltip_arrow_color='black', point_policy='follow_mouse'))
```

It looks like this:

![image](https://user-images.githubusercontent.com/32231895/100698421-6343ca80-3366-11eb-904e-299375ad61ae.png)
",2,3,['status: declined']
327,529899929,10745,3834332,2020-12-01 00:51:49,2020-12-01 02:36:10,closed,Update Stamen doc urls for SSL Links,"Updates Stamen docstring URLs to add SSL, matches https://github.com/bokeh/bokeh/commit/c42199633e2a1a6a515afb1dfeaa1e2ccb0d7c34

 issues: fixes #10744

",1,1,['status: accepted']
328,529881210,10743,3834332,2020-11-30 23:57:53,2021-01-04 10:26:45,closed,Decouple Color Swatch,"

I updated the code as requested. I defined a new special variable called ""swatch"" which decouples the swatch functionality from the color field. Now, you can add the swatch element to any field you want. In addition, the code is backwards compatible so that the swatch option continues to work for the color field. For bad input handling, I was not sure what the preferred behavior is. Right now, I hide the swatch element and just display text.

I can update the documentation if the behavior looks good. In terms of testing, I looked around and couldn't finding existing tests for testing specific special variables used in the hover_tool. Do we need tests for this case?



- [x] issues: fixes #10506
- [x] release document entry ",13,6,['status: accepted']
329,529812350,10742,3834332,2020-11-30 21:09:04,2020-12-31 03:11:30,closed,Legend by glyph size,"- [ ] issues: fixes #2603

Adds functionality for a legend to differentiate glyphs based on a passed-in, explicit marker size. 

Known limitations:
- No logic to reject or alert if `size` arg is passed for non-scatter type plots. Open to suggestions here.
- Vertical alignment on legend labels does not have the glyph centered. This is obnoxious to me, but I am slow at understanding the JS, wanted to get this in, and can fix later.

Examples of output:
![image](https://user-images.githubusercontent.com/43212692/100665642-decd5980-331d-11eb-846c-697b5f321832.png)

This is my first time working with BokehJS, so please let me know (I'm sure you would anyway) if there are any best practices violations or other issues I may not have considered.

Thank you!
",10,7,['status: declined']
330,529132860,10741,3834332,2020-11-29 16:14:03,2020-12-01 02:53:19,closed,Only use SRI hashes in template when available,"- [x] issues: fixes #10668
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
331,529007698,10739,3834332,2020-11-28 20:51:55,2020-11-28 22:08:20,closed,Fix overlapping arrows' clipping issues,"I didn't observe any performance issues with this approach.

fixes #10136",0,3,['status: accepted']
332,528989593,10737,3834332,2020-11-28 18:10:11,2020-11-28 19:18:27,closed,Add an integration test for PR #8256,"fixes #8260
",0,3,['status: accepted']
333,528931158,10736,3834332,2020-11-28 10:48:44,2020-11-28 13:24:35,closed,Fix `renderers` properties' types across bokeh,fixes #6781,0,1,['status: accepted']
334,528768665,10735,3834332,2020-11-27 19:49:51,2020-12-31 02:36:14,closed,Add checks for docs quality to CI,"I am using this pull request to test an update to CI that would add ""linting"" for narrative .rst documentation files. 
(adresses and potentially fixes #10728)
",14,21,['status: superseded']
335,528559875,10734,3834332,2020-11-27 11:31:13,2021-01-02 15:49:23,closed,Add support for Less/CSS to extensions,This allows to compile `*.less` and `*.css` files into CSS modules that are linked together into JS bundles.,4,4,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
336,528117560,10732,3834332,2020-11-26 14:38:47,2020-11-27 09:43:13,closed,Redesign inclusion of CSS modules into bokehjs,"This simplifies how CSS (and Less) is included into bokehjs. Previously there were two files per CSS module, one with the compiled CSS and another with handwritten exports. Now there is one file, and exports are auto-generated from CSS. Additionally CSS is now minified, reducing the main bundle size by 6 kB.",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
337,527999299,10730,3834332,2020-11-26 11:01:16,2020-11-27 18:21:28,closed,Add support for publishing npm packages,"This assumes `NPM_TOKEN` was configured as an [automation token](https://github.blog/changelog/2020-10-02-npm-automation-tokens/), which means OTP is not going to be needed in CI.

fixes #9297",3,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
338,527750556,10729,3834332,2020-11-26 00:11:23,2020-12-01 06:34:26,closed,Edit first steps guides,This pull request collects updates to the first steps guides in the documentation.,0,6,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
339,527414460,10727,3834332,2020-11-25 12:36:00,2020-11-25 18:39:19,closed,Add support for user supplied licenses to extensions,"fixes #10333
",0,1,['status: accepted']
340,526694479,10726,3834332,2020-11-24 19:05:48,2020-11-24 21:22:54,closed,Correctly apply transformation matrix in SVG.drawImage(),fixes #10725,0,2,['status: accepted']
341,526558705,10724,3834332,2020-11-24 15:17:58,2020-11-24 21:24:01,closed,Fix rendering of webgl line containing NaN (#8489),"This is a partial fix for issue #8489.

If you pass a non-finite `x` or `y` coordinate to `line`, i.e. a nan, inf or -inf, the webgl backend correctly doesn't render the non-finite coordinate location, but it does mess up subsequent line joins as shown in the final image of issue #8489.  The problem isn't the non-finite coordinate itself but it is the tangents and angles of line segments that are calculated in the JS code and passed to the webgl shaders.  If tangents and angles are finite there is no problem, but if they are non-finite this propagates along the line to mess up subsequent line joins.

The fix offered here is to treat the non-finite coordinates as zero for the tangent and angle calculations and only afterwards to set the coordinates to non-finite.  After the fix, the final image of issue #8489 is

![Screenshot_2020-11-24 Bokeh Application](https://user-images.githubusercontent.com/580326/100112843-9c140900-2e67-11eb-8f84-928a7f571c14.png)

It is only a partial fix or workaround really, which is easily demonstrated by using a large linewidth.  The webgl backend does not render the line joins correctly anyway (with or without non-finite coordinates), and gaps in lines due to non-finite numbers require extra end caps.  A full solution will therefore require modification of the JS code to split a `line` into multiple sub-`lines` at each non-finite number and call the webgl code once for each sub-`line`, and also the webgl code needs to correctly render the line joins so that they are identical/similar to the canvas backend.

I have looked at the webgl `line` shaders and think they can be improved and simplified at the same time.  I will take a look at this but I cannot promise anything!

This is my first contribution to bokeh.",4,2,['status: accepted']
342,526170004,10722,3834332,2020-11-24 04:48:02,2020-11-24 08:45:35,closed,exit build steps on error,"- [ ] issues: fixes #10721

",6,5,['status: accepted']
343,525911698,10720,3834332,2020-11-23 18:16:30,2020-11-24 20:13:38,closed,Add support for ESM bundles,"Early work in progress. This PR adds support for ESM bundles (don't confuse this with issue #10658), so that one can use bokeh with ES import statements. See bokehjs' examples for how this works (I switched all of them to ESM). For obvious reasons, there are no legacy ESM bundles.

fixes #9847
",1,9,['status: accepted']
344,525431792,10719,3834332,2020-11-23 04:04:39,2021-01-13 15:33:35,closed,Update vertex_renderer properly in PolyEditTool,"Proposed (partial) fix for #10670

This adds a listener to the PolyEditTool's first renderer's data source.  The listener updates the `vertex_renderer` appropriately when the data source is updated.

An alternative implementation would add such listeners to _all_ of the renderers present, rather than just the first.  However, I don't think this is required, because:
1) In most (all?) use cases, all the renderers will share the same data source
2) It will always be possible to update the `vertex_renderer` appropriately via the first renderer's data source

This is a partial fix, as it doesn't cover the edge case where you want to change the length of the data source (i.e the number of points) while simultaneously editing with the PolyEditTool.  In this case, #10670 persists in the same manner, and you have to double click the line to fix it.  I think this is a relatively uncommon use case, and it's not made worse due to this PR.  With that being said, perhaps I've misunderstood how the internal logic is supposed to work, giving rise to this behavior.  

Please let me know what you think of this approach and if there are any improvements you'd like me to take a look at.  Thanks!",13,5,['status: accepted']
345,525349205,10718,3834332,2020-11-22 20:12:58,2020-11-25 09:16:44,closed,Add support for Tool.description property,"This PR also deprecates all ""custom"" description/tooltip properties, i.e. `action_tooltip`, `help_tooltip`, `custom_tooltip`.

fixes #10662",3,5,['status: accepted']
346,525121151,10713,3834332,2020-11-21 12:05:34,2020-11-22 10:55:51,closed,Fix bokehjs' SVG export when ToolbarBox is present,"At this point `ToolbarBase` is almost a `LayoutDOM`. I will finish unifying canvas and DOM layouts in near future (for interactive color bar work), and then all this complexity will go away.

fixes #9169
",0,4,['status: accepted']
347,525012198,10711,3834332,2020-11-20 23:44:22,2020-11-21 12:06:13,closed,Use bokehjs' test framework to start chrome in examples' tests,fixes #10339,0,1,['status: accepted']
348,524968075,10710,3834332,2020-11-20 21:44:00,2020-11-23 03:47:33,closed,Add information about themes,This pull request adds information about Bokeh's themes to the user guide. It fixes #9007.,3,3,['status: accepted']
349,524339911,10708,3834332,2020-11-20 01:00:38,2020-11-20 03:09:17,closed,Upgrade to TypeScript 4.1 and upgrade other dependencies,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
350,524236752,10707,3834332,2020-11-19 21:16:34,2020-11-22 12:05:07,closed,Detect dependency cycles in build and fix existing cycles,"The current status:
✗ cycle detected:
├─ models/sources/columnar_data_source
├─ models/renderers/glyph_renderer
├─ core/selection_manager
├─ models/sources/columnar_data_source
├─ models/annotations/arrow
├─ models/annotations/index
├─ models/index
├─ base
├─ document/document
├─ document/index
├─ embed/index
├─ index
└─ main
✗ cycle detected:
├─ models/glyphs/circle
├─ models/glyphs/webgl/markers
├─ models/glyphs/circle
├─ models/glyphs/index
├─ models/index
├─ base
├─ document/document
├─ document/index
├─ embed/index
├─ index
└─ main
✗ cycle detected:
├─ core/util/ndarray
├─ core/util/serialization
├─ core/util/ndarray
├─ models/glyphs/image_base
├─ models/glyphs/image
├─ models/glyphs/index
├─ models/index
├─ base
├─ document/document
├─ document/index
├─ embed/index
├─ index
└─ main",1,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
351,523557153,10705,3834332,2020-11-18 22:56:27,2020-11-22 10:57:04,closed,Allow to configure TapTool with a gesture (tap or doubletap),"- [x] add a test

fixes #7845
",0,1,['status: accepted']
352,523498158,10704,3834332,2020-11-18 21:46:43,2020-11-19 02:01:11,closed,Adjust z-index of MultiChoice widget's dropdown menu,"fixes #10695
",0,2,['status: accepted']
353,523464964,10703,3834332,2020-11-18 20:55:48,2020-11-19 02:05:55,closed,Unify TextInput and TextAreaInput widgets,fixes #10702,0,1,['status: accepted']
354,523105846,10701,3834332,2020-11-18 11:09:04,2020-11-18 12:08:29,closed,Fix backwards compatibility alias for InspectTool,The backwards compatibility alias was misnamed (`Inspect` instead of the actual old name `Inspection`) so that the old import no longer works and breaks downstream libraries.,0,2,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: API: models']"
355,522549675,10700,3834332,2020-11-17 16:43:16,2020-11-18 15:40:08,closed,Follow up of #10687,This PR is a follow up of PR https://github.com/bokeh/bokeh/pull/10687 and should close https://github.com/bokeh/bokeh/issues/10697.,5,6,['status: accepted']
356,522389500,10699,3834332,2020-11-17 12:54:16,2020-11-17 13:31:37,closed,Migrate CI {goanpeca->conda-incubator}/setup-miniconda,"Hopefully will fix:
```
Error: Unable to process command '::add-path::/usr/share/miniconda3/condabin' successfully.
Error: The `add-path` command is disabled. Please upgrade to using Environment Files or opt into unsecure command execution by setting the `ACTIONS_ALLOW_UNSECURE_COMMANDS` environment variable to `true`. For more information see: https://github.blog/changelog/2020-10-01-github-actions-deprecating-set-env-and-add-path-commands/
```",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
357,522385420,10698,3834332,2020-11-17 12:47:10,2020-11-25 18:38:04,closed,Migrate from marker glyphs to scatter glyph,"This PR:

- allows `Scatter` glyph to use webgl with a scalar `marker` type
- makes glyph functions produce `Scatter` glyph with respective `marker` type
- deprecates marker models in bokeh and drops them in bokehjs
- simplifies work with vertex and fragment shader implementations
- visually tests webgl markers only when implementation is available

This PR does not:

- add support for webgl rendering of `Scatter` glyph with variadic marker types

Superseedes PR #10678 and PR #10680.

fixes #10413",4,21,['status: accepted']
358,522134425,10696,3834332,2020-11-17 04:41:31,2020-11-20 03:10:51,closed,Update data.rst,"In response to #10539, this pull request updates the file data.rst according to the style guidelines. ",3,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
359,521762955,10693,3834332,2020-11-16 16:06:36,2021-04-06 05:00:57,closed,Make json_items ingestible by python API #10631,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10631
",10,4,['status: declined']
360,521749575,10692,3834332,2020-11-16 15:45:54,2020-11-16 15:46:42,closed,Make json_items ingestible by python API,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10631 
",1,1,['status: declined']
361,521471950,10688,3834332,2020-11-16 07:34:08,2020-11-16 08:07:55,closed,Making json_items ingestible by python API,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #10631 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: declined']
362,521298978,10687,3834332,2020-11-16 01:13:16,2020-11-16 17:24:33,closed,Fix scientific format for 0,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #10675 
- [x] tests added / passed

",4,2,['status: accepted']
363,521261315,10684,3834332,2020-11-15 21:18:56,2020-11-15 23:48:45,closed,Added new widget: `DatetimeRangeSlider`,"Adds `bokeh.models.DatetimeRangeSlider` widget. 

- [x] issues: fixes #10683
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",1,3,['status: declined']
364,521249277,10682,3834332,2020-11-15 19:49:42,2020-12-02 05:04:20,closed,#10539 extensions.rst,"Finished editing extensions.rst for issue #10539. Let me know if you'd like me to make any changes.

The example on line 189 doesn't produce any output and causes documentation build to fail unless you remove the code block on lines 82-84 of the ""extensions_putting_together_ts.py"" example file:

    this.override<Custom.Props>({
      margin: 5,
    })

Removing it seems to fix both issues. Not sure what this bit is supposed to do nor whether removing it breaks anything else.",8,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
365,521184852,10681,3834332,2020-11-15 12:01:07,2020-11-15 12:26:21,closed,Add an actual webgl backend test,"Due to the difference in scatter vs marker glyphs, webgl rendering of markers wasn't actually tested.",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
366,521058251,10680,3834332,2020-11-14 20:45:50,2020-11-17 12:48:57,closed,"Store GLSL as *.{vert,frag} files and wrap in JS modules in build","This is based on PR #10678.
",0,6,"['status: superseded', 'type: task', 'tag: component: build', 'tag: component: bokehjs']"
367,521043315,10679,3834332,2020-11-14 18:30:48,2020-11-18 18:41:59,closed,#10539 embed.rst,Finished editing embed.rst for issue #10539. Let me know if you'd like me to make any changes.,5,9,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
368,521041985,10678,3834332,2020-11-14 18:19:50,2020-11-17 12:48:32,closed,Add support for webgl scatter rendering,"Proof of concept. Allows to render `Scatter` glyphs with variadic marker types. WebGL renderer is used when all used marker types support webgl. This is checked in `_set_data`. Marker glyphs share glglyph implementation with `Scatter`, but use a uniform for marker type instead of a buffer (similarly to how visuals work). Example:

![image](https://user-images.githubusercontent.com/27475/99154095-89eadb80-26ad-11eb-8b96-52e67dd253da.png)

(based on `examples/webgl/marker_compare`).

As a side effect of this work it will be possible to store glsl code unwrapped in the src tree, and wrap in build.

I would like to drop individual marker glyphs (but keep glyph functions) and just use scatter glyph in all cases. There should be no memory usage and performance difference if marker type is not resolved to an array in scalar case.

fixes #10413
",3,2,['status: superseded']
369,520911681,10677,3834332,2020-11-14 00:13:38,2020-12-08 06:00:48,closed,Add support for passing colors as ndarrays and CSS4 color syntax,"This PR:

- adds support for passing colors as ndarrays (e.g. `uint8[N, 3]` or `uint8[N, 4]`, RGB and RGBA respectively)
- adds CSS4 color syntax (e.g. `#RRGGBBAA`, `#RGBA`, `rgb(R G B / A)`, etc.) and `transparent` keyword
- makes webgl to use uint8 instead of f32 to store colors (simpler cooperation with the rest of bokehjs; less memory usage)

- [x] fixes #5676
- [x] fixes #9951 
- [x] fixes #10576 
",7,26,['status: accepted']
370,520187584,10674,3834332,2020-11-12 22:08:53,2020-11-15 03:18:36,closed,Require npm@7 and nodejs 14.*,"fixes #10673 
",0,5,['status: accepted']
371,520147567,10672,3834332,2020-11-12 20:44:06,2020-11-12 23:55:44,closed,Add docstring to `on_event`,Proposal to fix #10671,3,3,['status: accepted']
372,519648784,10665,3834332,2020-11-12 06:17:28,2020-11-25 19:02:59,closed,Add new first steps guide to replace quickstart,"As part of Season of Docs, this pull request adds a series of very easy to follow tutorials for absolute Bokeh beginners. These  tutorials are called First Steps Guides (to differentiate them from the existing tutorials in mybinder.org). The goal is to provide glimpses of the most important functionalities and concepts of Bokeh by using simple examples and by providing many links to the user guide and the reference guide. The First Steps Guides are supposed to replace the section ""quickstart"" in the user guide.

This pull request is currently a work in progress while I work on finishing the guides.",11,64,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
373,518998315,10660,3834332,2020-11-11 07:03:21,2020-11-18 16:56:00,closed,Update glossary,This pull request updates the glossary section of concepts.rst in the user guide.,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
374,518418531,10655,3834332,2020-11-10 11:24:01,2020-11-12 16:52:30,closed,Unify initialization of visuals and data,"Previously visuals were initialized twice, first by `Glyph.set_data()` and then by `Visuals.warm_cache()`. Additionally, handling of subset indices, etc., were done separately, causing bugs and regressions. Now glyphs are fully responsible for data management and visuals only apply data to a canvas context. As a side effect, visuals now apply to views and not models. Note that within a glyph, there are still separate `set_data()` and `set_visuals()`, this will be sorted out in the following 1~2 PRs.",6,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
375,517954893,10653,3834332,2020-11-09 18:27:25,2020-11-10 11:11:09,closed,Split visuals into scalar and vector,"This PR splits visuals' API into scalar and vector, aligning it with property mixins, so that e.g. `set_value()` is available only on scalar visuals and `set_vectorized()` only on vectorized. This may allow to reduce type overhead by coalescing `type Mixins` and `type Visuals` into one type, as one can be now inferred from the other. Mind code quality especially in `core/visuals`. This PR is an excerpt from a larger one, so the implementation will get refined in future PRs when all work is completed. ",1,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
376,517686656,10650,3834332,2020-11-09 11:16:13,2020-11-09 18:13:01,closed,Upgrade to TypeScript 4.1 RC,To make sure there are no major regressions. 4.1 final will be released in a few days.,0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
377,517369930,10649,3834332,2020-11-08 21:03:26,2020-12-02 04:21:29,closed,Add simple fuzzymatching comparison to AutocompleteInput,"I add a simple fuzzymatching comparison algorithm for my needs.
I think it can solve:

- [x] issue: fixes #9923
- [x] tests added. 
- [x] release document entry

The documentation is constructed directly from sources ? 

Test can be added. ",6,7,['status: declined']
378,517362978,10648,3834332,2020-11-08 20:10:38,2020-12-02 04:13:53,closed,#10539 Edit for concepts.rst & cli.rst,"Finished editing concepts.rst and cli.rst for issue #10539. Let me know if you'd like me to make any changes.

Also, isn't cli.rst redundant given that concepts.rst provides more information about the tool than the dedicated chapter?",2,9,"['tag: component: docs', 'status: declined', 'type: task']"
379,517288144,10647,3834332,2020-11-08 11:05:31,2020-12-05 17:56:47,closed,[Spinner] Avoid twice incrementation with laptop pad,"I haven't open an issue related to this.
But I noticed when we press spinner arrows to increment it, with the laptop pad, the number increment twice
To correct it I add a timeout before setting the interval.

@mattpap I noticed KeyboardEvent.keyCode is deprecated what is the recommended way to handle it now?
",3,3,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: widgets']"
380,517187247,10646,3834332,2020-11-07 20:16:33,2020-11-08 09:14:11,closed,Use the correct variant of hasOwnProperty check,In particular this approach works with prototype-less plain objects (i.e. `Object.create(null)`).,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
381,516955346,10645,3834332,2020-11-06 20:05:32,2020-11-06 20:57:08,closed,Allow serialization of circular objects,"Trivial mistake.

fixes #10643 
",0,1,['status: accepted']
382,516639895,10640,3834332,2020-11-06 10:06:22,2020-11-06 19:02:17,closed,Implement grad and turn CSS-based angle units,"Makes bokeh's and CSS angle units match, simplifies angle conversion code paths and adds tests.",0,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: API: models']"
383,515802727,10638,3834332,2020-11-05 05:21:15,2020-11-05 17:53:53,closed,Add EdgesOnly selection policy,"- [x] issues: fixes #10637
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

If you have any thoughts about `GraphRendere.get_selection_manager` let me know and I will update the PR. Perhaps it should just raise an error (i.e. things should go through the sub-renderers always instead)",2,2,['status: accepted']
384,515574392,10635,3834332,2020-11-04 18:47:00,2020-11-04 19:53:49,closed, Fix custom/latex_extension_* examples,fixes #10411,0,2,['status: accepted']
385,514935276,10634,3834332,2020-11-03 19:03:15,2020-11-03 22:59:50,closed,Update bokehjs' dependencies,,1,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
386,514897584,10633,3834332,2020-11-03 17:46:27,2020-11-03 18:22:56,closed,Fix new sphinx issue with bokeh.palettes,"Sphinx is suddenly puking on bokeh.palettes (new version?) when attempting dev build. In any case this PR:

* removes inline code-quotes from exception list in docstring (is overkill anyway)
* updates for f-string and dquotes

Will try dev build again after this is merged ",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
387,514221500,10632,3834332,2020-11-02 17:47:01,2020-12-02 04:03:15,closed,#10539 applied style writing guidelines to tools.rst,"addresses #10539
",6,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
388,513755435,10630,3834332,2020-11-02 03:09:06,2020-11-02 19:43:26,closed,Clean up bokeh.sphinxext,"- [x] issues: fixes #10628
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR does a few things:

* Adds default values to Bokeh property docs 
* Uses f-strings throughout `bokeh.sphinxext`
* uses `lookup` to access descriptors as intended
* prefer dquotes for block strings

Note that this PR also brings `bokeh.sphinxext` under black formatting in a codebase test. I am approximately the only contributor to `bokeh.sphinxext` for ~8 years and as the current effective sole maintainer of that code I desire that it be maintained with black formatting, so noting ahead of time: *I do not intend to debate this localized application*. 

Here is a link with the non-formatting commits:

https://github.com/bokeh/bokeh/pull/10630/files/844f8b52065d171038c9a33ea09da23be2b6bad6

cc @mattpap 

---

The docs now render like this:

<img width=""337"" alt=""Screen Shot 2020-11-01 at 6 56 50 PM"" src=""https://user-images.githubusercontent.com/1078448/97825744-6323b280-1c74-11eb-9999-52d0e338adbb.png"">

FWIW I think the current CSS style for the ref guide could use a lot of improvement. I was looking back at old docs and saw how things looked *long* time ago:

<img width=""615"" alt=""Screen Shot 2020-11-01 at 7 02 51 PM"" src=""https://user-images.githubusercontent.com/1078448/97825920-f2c96100-1c74-11eb-8c78-b9363ebb2de2.png"">

I think that's alot might more lightweight and the separation between classes is much cleaner and make it easier to read. I think we should move back towards a style more like this. I do also think we really need to break up some of the larger ref guide pages. But I will make separate issues for those cc @tcmetzger ",1,5,['status: accepted']
389,513708007,10629,3834332,2020-11-01 22:58:05,,open,Auto-compute lod_factor based on glyph rendering times,"Experimental PR. The current behavior of LOD doesn't seem very useful, as it doesn't account for rendering conditions, so this PR attempts to fix that, by computing the LOD factor based on actual rendering times, assuming 60 Hz refresh rate, so rendering must finish in ~16 ms.",1,1,"['type: feature', 'status: WIP']"
390,513567289,10627,3834332,2020-11-01 06:30:57,2020-11-01 07:05:51,closed,remove out of date info,"Still needs a work to be more useful an up to date but at least flat-out wrong information is now gone. 

- [x] issues: fixes #10341
- [x] tests added / passed
",0,1,['status: accepted']
391,513520268,10626,3834332,2020-11-01 00:51:55,2020-11-01 15:25:08,closed,Some core/properties cleanup,"- [x] issues: fixes #10613

This PR does a few things:

* fixes the broken glyph method links
* fixes the gorpy extra space in property type links

Since the above was fixed with f-strings in `bokeh.core.properties`, that motivated some additional cleanup work:

* use f-strings throughout `bokeh.core.properties` for consistency
* simplify an cleanup some validation logic (including some possibly unbound vars and other problems noticed)
* prefer dquotes for block strings (since all files are touched at this point anyway)

Commits are split up neatly but also here is a link to a view that excludes the last change: 

https://github.com/bokeh/bokeh/pull/10626/files/dff3be2bfb5cfafa4da6e5f107b4611bc34d3e3a",0,5,['status: accepted']
392,513366596,10625,3834332,2020-10-31 03:45:43,2020-10-31 22:47:35,closed,"align webgl.rst with style guide, task #10539","addresses #10539
",5,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
393,513193964,10624,3834332,2020-10-30 18:05:16,2020-10-30 20:51:54,closed,Auto-generate index.ts based on tsconfig's input patterns,"It's easy to forget to add `import ""./new_test_module""` to an appropriate `index.ts` file. This PR removes all `index.ts` files and auto-generates one containing all reachable test files (e.g. ignores files starting `_`, which can be used to define utility modules, data, etc.).",2,8,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
394,512544956,10623,3834332,2020-10-29 20:24:23,,open,Push to server only actually changed properties,"This seems like a big omission and it always worked like this. Maybe there was historically a reason for this? Testing locally didn't show any issues with this change.

- [ ] tests

fixes #10621",3,1,['status: WIP']
395,512359320,10618,3834332,2020-10-29 15:27:29,2020-10-29 23:20:27,closed,Implement views for arrow head models,"Currently arrow head models mix model and view code, so this PR addresses this issue. Additionally arrow heads are currently annotations, but they aren't used like ones (the interface is not fulfilled), so I changed their base to `Model`. In future I will add a proper `Graphics`  (or something like that) base classes, to group paintable objects that aren't glyphs nor annotations.
",2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
396,511847036,10617,3834332,2020-10-28 21:24:57,2020-11-02 13:31:45,closed,Invalidate computed renderers when HoverToolView.plot_model.renderers changes,"This fixes also fixes memory leak when connecting views' slots and adds support for selectively disconnecting senders, which could be generalized to disconnect signals of removed models.

- [x] tests

fixes #10612",7,6,['status: accepted']
397,511831487,10616,3834332,2020-10-28 20:53:35,2020-11-03 06:19:00,closed,Add OpenGraph metadata to docs,"As part of Google's Season of Docs, this pull request will add [OpenGraph metadata](https://ogp.me/) to Bokeh's docs. OpenGraph metadata is used by services like Facebook, Twitter, LinkedIn or Discourse to generate rich previews of links.",13,9,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
398,511761115,10615,3834332,2020-10-28 18:42:17,2020-10-28 19:18:29,closed,use proper JS version,"- [x] issues: fixes #10611
- [x] tests added / passed


cc @mattpap ",1,1,['status: accepted']
399,511291999,10610,3834332,2020-10-28 05:36:02,2020-11-01 01:05:47,closed,#10539 geo.rst doc edit,"Editing geo.rst for issue #10539.
First time contributor so let me know if anything is wrong or off. Eager to learn and to help.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
400,511052589,10608,3834332,2020-10-27 20:47:25,2020-10-27 21:11:00,closed,don't use conda-forge for release buidl env,"Env works on OSX will just have to merge and try on linux

- [x] issues: fixes #10603

",1,2,['status: accepted']
401,511034837,10607,3834332,2020-10-27 20:23:04,2020-10-27 20:38:23,closed,don't use conda-forge for release buidl env,"- [x] issues: fixes #10603

",1,1,['status: declined']
402,510972109,10606,3834332,2020-10-27 18:36:38,2020-10-27 20:11:31,closed,Don't escape raw strings in replace_placeholders() by default,fixes #10604,1,1,['status: accepted']
403,510325376,10605,3834332,2020-10-26 21:43:20,2020-11-01 01:54:02,closed,#10539 compat.rst,"Finished editing compat.rst for issue #10539. Might want to tweak a few things later on. In the meantime, please let me know if anything's off.

Notes:
>Bokeh generates JavaScript. This makes its output fully compatible with a wide variety of JavaScript libraries, such as `React`_. Listing all such libraries is beyond the scope of this document; it's best to just try and see!

Perhaps it's better to offer a list of libraries that are commonly used and let the user know that there's more synergy beyond the list. As things are, this has a rather uninformative feel to it.",10,10,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
404,510059937,10602,3834332,2020-10-26 14:14:50,2020-11-01 13:27:38,closed,Redesign how serialization works in bokehjs,"The goal of this work is to:

- introduce distinction between serialized representation and a wire encoding, i.e. JSON is a string, not a JS object
- move serialization code completely away from `HasProps` and at least partially away from `Document`
- test serialization and wire encoding of all supported value types and objects

Non-goals for this PR:

- fix the representation of `NaN`/ `+/-oo` or add support for `Map`/`Set`, etc.
- implement a comprehensive serialization schema test suite for cross testing bokehjs and bokeh, and for compliance testing of third-party implementations

Both non-goals will be implemented in future PRs.

At this point this PR focuses on bokehjs, but when working on PR #10564, I implemented a similar scheme in bokeh, which in fact inspired this work.

To make things work consistently, `HasProps.id` is not a property anymore (never truly was; just a convenience measure), but a plain immutable class member. This makes cloning `HasProps` finally work, by not preserving object identity.",12,13,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
405,509887030,10600,3834332,2020-10-26 09:12:51,2020-10-27 19:58:48,closed,Await for DOMContentLoaded in show(),fixes #10599 ,1,1,['status: accepted']
406,509725248,10598,3834332,2020-10-26 03:02:46,2020-10-26 17:33:35,closed,Switch sphinx-panels from pip to conda,"The Sphinx extension sphinx-panels has [recently become available](https://github.com/conda-forge/staged-recipes/pull/12517) on conda forge. Therefore, it is no longer necessary to install this extension with pip.",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
407,509607927,10597,3834332,2020-10-25 15:08:19,2020-11-01 20:27:28,closed,#10539 categorical.rst doc edit,"Finished editing categorical.rst for issue #10539. Might want to tweak a few things later on. In the meantime, please let me know if anything's off.

One thing to note is that a part of the 'Scatter' section seems to be missing. The section jumps straight to 'Adding jitter' although there is an example (categorical_scatter.py) referenced before that section. Looks like somebody 'commented' the example out and the source is missing from the 'examples' folder. If you can provide this example (and maybe some notes), I'll be happy to add a writeup for it.",3,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
408,508932506,10596,3834332,2020-10-23 12:27:19,2020-10-23 20:52:45,closed,Minor typo in gallery docum. (repeated word),"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10595
",1,1,['status: accepted']
409,507595313,10592,3834332,2020-10-21 14:30:11,2020-10-22 14:12:12,closed,Clean up usage of `requestAnimationFrame`,"This PR does two things:

1. Removes `requestAnimationFrame`'s polyfill, because all supported browsers implement it.
2. Replaces incorrect usage of `requestAnimationFrame` in bokehjs, especially in `defer()`, which is replaced with an efficient (zero delay) implementation using `postMessage` technique.",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
410,507492947,10591,3834332,2020-10-21 12:19:57,2020-10-21 14:12:08,closed,Improve bokehjs' code quality (part 0),,1,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
411,507432165,10590,3834332,2020-10-21 10:35:37,2020-10-21 11:50:29,closed,Correctly compute subset data size,"fixes #10589
",0,3,['status: accepted']
412,505307505,10587,3834332,2020-10-17 16:17:55,2020-10-17 21:10:28,closed,Issue 10581 custom js hover example,"Made changes to bokeh/models/tools.py line 900 as per the requirements of [issue #10581 ](https://github.com/bokeh/bokeh/issues/10581) to update CustemJSHover example. 

- [✓] issues: fixes #10581
- [X] tests added / passed
- [X] release document entry (if new feature or API change)
",1,2,['status: accepted']
413,505146045,10586,3834332,2020-10-16 23:27:31,2020-10-19 18:17:58,closed,Backports for 2.2.3,"Backports for bokeh [2.2.3](https://github.com/bokeh/bokeh/milestone/65).

fixes #10585 ",1,4,['status: accepted']
414,504354362,10579,3834332,2020-10-15 19:57:03,2020-11-03 23:26:21,closed,#10539 graph.rst doc edit,"Done with editing of graph.rst for task #10539.

I feel inclined to replace the code snippet in section ""Edge and node renderers"" with the example linked in the following section ""Layout providers"" and rewrite both sections to account for this change, merging them into one.

It feels like we are making the user look for what he or she wants to do with the code in two places instead of one. This change might make for a slightly better user experience.

On the other hand, this could overload the section with information, so I'm holding off on such brazen changes. Let me know what you think. Worth it?

Conversely, I could merge the sections and introduce the 2D part of the code as a stand-alone snippet separated from the original one in ""Edge and node renderers"" by an transition paragraph. This would make the chapter look less intimidating and also address the issue above.

```
### start of layout code
circ = [i*2*math.pi/8 for i in node_indices]
x = [math.cos(i) for i in circ]
y = [math.sin(i) for i in circ]

graph_layout = dict(zip(node_indices, zip(x, y)))
graph.layout_provider = StaticLayoutProvider(graph_layout=graph_layout)

plot.renderers.append(graph)

output_file('graph.html')
show(plot)
```

The code snippet preceding the 2D part in the first of the two sections doesn't map one to one onto the code example mentioned in the second section, though the differences seem to be subtle and/or trivial.",13,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
415,504081230,10578,3834332,2020-10-15 12:53:17,2020-10-15 22:21:02,closed,Fix periodic callback not stopping in Django,"

- [x] issues: fixes  #10218  and https://github.com/holoviz/panel/issues/1125
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,1,['status: accepted']
416,503311298,10577,3834332,2020-10-14 11:39:46,2020-10-14 20:39:46,closed,Allow to use Whisker annotation with categorical axes,"In general this fixes annotations that inherit from `UpperLower`.

![image](https://user-images.githubusercontent.com/27475/95983913-b0092b80-0e22-11eb-9023-844f67c0a61f.png)

fixes #10575
",0,2,['status: accepted']
417,502434478,10573,3834332,2020-10-13 15:03:05,2020-10-14 14:00:10,closed,Also draw slope annotation with gradient=0 (#10541),"Fixes #10541

A horizontal line is drawn for a slope with gradient=0 at the level of the y_intersept.

Tested using the following:
```
from bokeh.plotting import figure, output_file
from bokeh.models import Slope
from bokeh.io import show
from bokeh.io import curdoc

p = figure(width=200, height=200, x_range=(-5, 5), y_range=(-5, 5))

for gradient in [1, -1, 0, 2, -0.5]:
    s = Slope(gradient=gradient, y_intercept=-1)
    p.add_layout(s)

curdoc().add_root(p)
```

![afbeelding](https://user-images.githubusercontent.com/7702207/95878548-a2e23300-0d75-11eb-9594-b31171908cf3.png)
",7,7,['status: accepted']
418,501710442,10568,3834332,2020-10-12 17:28:58,2020-10-13 15:51:40,closed,Port 2.2.2 changes,Ports changes from 2.2.2 onto branch-2.3,4,4,"['status: accepted', 'type: task', 'reso: completed']"
419,501439038,10566,3834332,2020-10-12 09:13:47,2020-12-02 04:24:32,closed,Added SaveDataTool,"This PR contains A tool called SaveDataTool for downloading the data that's in a plot/datasource - either selected values or not.
This tool also has a formatting mechanism similar to that of the hover tool. It is, however not the same (the usage is documented in the file).
I also added a specialized icon for that tool.",8,13,['status: declined']
420,501180125,10565,3834332,2020-10-11 18:03:33,2020-11-01 01:47:56,closed,10539 export.rst doc edit,"Finished editing export.rst for task #10539.

Please let me know if you would like me to make any changes to the text.",10,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
421,501019832,10564,3834332,2020-10-10 18:41:47,2020-12-05 14:46:40,closed,Preliminary support for data models,"Early preview.

See `plotting/file/data_models` example. For dynamic update, use e.g.:
```ts
Bokeh.index[1003].model.tags[0].freq = 10
```
in JS console.

fixes #3674
",3,6,['status: accepted']
422,500952781,10563,3834332,2020-10-10 10:27:24,2020-10-20 17:56:43,closed,10539 bokehjs.rst doc edit,"Finished editing bokehjs.rst for task #10539.

Please let me know if you would like me to make any changes to the text.
",13,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
423,500811559,10562,3834332,2020-10-09 20:43:39,2020-10-20 17:54:14,closed,#10539 layout.rst,"Finished editing layout.rst for task #10539.

Please let me know if you would like me to make any changes to the text.
",2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
424,500576944,10561,3834332,2020-10-09 13:06:19,2020-10-29 20:09:36,closed,Update displayed value when Select.options changes,fixes #10407,2,1,['status: accepted']
425,500141370,10560,3834332,2020-10-08 19:34:04,2020-11-06 11:51:21,closed,Modifying a HoverTool tooltip leads to errors if the new tooltip list is bigger.,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes  #10559
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
426,499516321,10556,3834332,2020-10-07 21:04:59,2020-10-16 01:27:58,closed,Task #10539: Jupyter notebook edits,"A fairly thorough edit of the Jupyter section of the User Guide. This should hopefully make the doc easier to read, though it's by no means a final take and feedback is very much welcome. I'd be happy to make further edits to this and other docs accordingly.

I also have a couple of questions, which are specific to this doc:

Line **228** has a sentence that says *""|push_notebook| **described above**""*. It isn't, however. It is mentioned, sure, but never defined within the document itself. It would be ideal if we could make a cross-doc reference to where it is in fact defined, but I'm unsure how to do that nor do I know where to look for the definition, yet. Removed that bit for the time being.

Line **277** says *""Notebook comms examples""*. Could you please clarify what ""comms"" mean?",11,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
427,499511443,10555,3834332,2020-10-07 20:54:33,2020-10-12 16:21:52,closed,Backports for 2.2.2,"@philippjfr @mattpap 

I get conflicts as soon as I try cherry-pick most anything from https://github.com/bokeh/bokeh/milestone/64 on to `branch-2.2` I expect that is due to the extensive changes to hundreds of files in #10433 and/or #10450 

What  do you want to do here? My own opinion is that if we have to backport those huge PRs first to be able to backport the other smaller work, we should just cut 2.3 instead. ",15,5,"['status: accepted', 'type: task']"
428,499120615,10554,3834332,2020-10-07 09:43:30,2020-10-07 10:18:46,closed,Pin pytest 6.0*,"Cherry picked from PR #10550, because it will be awhile until 3.9 is available in conda.",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
429,498710689,10552,3834332,2020-10-06 17:21:25,2020-10-07 15:59:56,closed,Remove overwrite prompt for windows make.bat,"When building the docs on a Windows system with Bokeh's `make.bat` file (e.g. `make.bat html`), Windows unnecessarily prompts the user to overwrite existing files. Adding the option `/y` to the .bat-file's xcopy command will automatically overwrite those files.
Solves #10551",0,1,['status: accepted']
430,498694317,10550,3834332,2020-10-06 16:51:35,2020-12-02 01:34:00,closed,Test on Python 3.9 in CI,,14,11,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
431,498260323,10549,3834332,2020-10-06 04:47:43,2020-10-14 22:44:12,closed,Annotation docs edits,"- Edited the annotations doc to make it adhere to the documentation guidelines as in #10539 . Fixed few typos 
",1,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
432,497982565,10548,3834332,2020-10-05 16:44:19,2020-10-13 16:23:10,closed,add bk- prefix to make serialization id valid for css,"In CSS, identifiers cannot start with a digit. This PR makes the globally unique ids generated for bokeh serialization start with a non-digit (specifically, `bk-`). This makes it a valid identifier for selection by CSS and still globally unique.

- [x] issues: fixes #10547
- [x] tests added / passed
",10,6,['status: declined']
433,497485280,10546,3834332,2020-10-04 19:24:57,2020-10-04 19:29:45,closed,Edited annotation doc as per the guidelines,"Edited the file according to the docs guidelines as much as possible. Fixed a typo.
",2,1,"['status: declined', 'status: superseded']"
434,497421994,10545,3834332,2020-10-04 12:03:51,2020-10-04 13:30:14,closed,"fixed Bad `super` call in ""contexts.py"" #10536","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10536
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: declined']
435,497306040,10544,3834332,2020-10-03 16:56:04,2020-10-04 20:02:50,closed,docs: fix typos,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,8,['status: declined']
436,496839473,10543,3834332,2020-10-02 11:07:57,2020-11-01 02:03:43,closed,"Fix `super` call in ""contexts.py""","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10536
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This is a very simple PR, fixing issue #10536.",11,1,['status: accepted']
437,496760990,10542,3834332,2020-10-02 08:22:57,2020-10-02 16:07:46,closed,added by batul02,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,2,"['status: declined', 'spam']"
438,494819017,10537,3834332,2020-09-29 13:09:43,2020-11-03 17:00:58,closed,Factor out code from PlotView,"Continuing on top of PR #10491, this PR:

- [x] moves UI event handling to canvas (in preparation to make canvas a standalone model and reusing for non-plot purpose)
- [x] splits off state management code (undo/redo/reset) (in preparation to add support for multi-plot state, e.g. in grid plots)
- [x] makes various minor improvements in related code (e.g. use `Plot.data_renderers` instead of explicit `instanceof` checks)
",0,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
439,493752661,10532,3834332,2020-09-27 17:39:28,2020-09-28 03:08:47,closed,[Docs] Fix display of example boxes on very small screens,"As noted by @pavithraes in #10519, the boxes with examples at the bottom of the page are not displayed on very small screens. This pull request fixes the CSS to display those boxes correctly.",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
440,493345077,10531,3834332,2020-09-25 20:07:17,2020-11-06 18:59:46,closed,Emit signals for in-place changes of `ColumnDataSource.data`,"Proof of concept. This allows code like:
```ts
source.data['color'] = [""red"", ""green""]
```
to automatically emit change signals. This only works for known fields. If field is added to data, then we can't detect this. We could with ES6 `Proxy`, but that's not supported on IE.

fixes #10527",1,1,['status: declined']
441,493301944,10530,3834332,2020-09-25 18:34:43,2020-09-27 10:18:39,closed,Dynamically create year for footer in docs,"Currently, the year that is displayed in the documentation's footer is hardcoded as '2019' into the sphinx configuration file. This pull request uses the Python datetime library to always use the current year instead.

fixes #10529",1,1,['status: accepted']
442,493230140,10528,3834332,2020-09-25 17:07:34,2020-09-27 10:51:43,closed,removed outdated CI instructions,"Removed outdated CI instructions as mentioned in issue #10522 
",3,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
443,492208853,10524,3834332,2020-09-24 06:10:10,2020-09-24 17:43:35,closed,Dropped redundant TOC in developer docs,"Dropped the TOC which were present in developer documents in the Getting started and Testing sections
 as mentioned in the issue #10467 
",1,1,['status: accepted']
444,492088130,10521,3834332,2020-09-23 23:09:55,2020-09-25 07:58:43,closed,Selectively update data when CDSView changes,"- [x] reproduce the bug with pure bokeh
- [x] add tests

fixes https://github.com/holoviz/holoviews/issues/4589
",0,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
445,491952722,10520,3834332,2020-09-23 18:13:13,2020-09-27 12:30:05,closed,Improve inline/link colors for docs,"As part of Google's Season of Docs, this pull request slightly changes the colors of inline code and links for Bokeh's documentation. The goal is to increase legibility and increase compliance with the [WCAG's contrast criterion](https://www.w3.org/TR/WCAG21/#contrast-minimum). As discussed with @bryevdv, @hyles-lineata, and @pavithraes.
",7,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
446,491948803,10519,3834332,2020-09-23 18:04:53,2020-09-27 13:38:10,closed,Restructure documentation landing page,"As part of Google's Season of Docs, this pull request restructures the [landing page for Bokeh's documentation](https://docs.bokeh.org/en/latest/). As discussed with @bryevdv, @hyles-lineata, and @pavithraes.",8,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
447,491839000,10518,3834332,2020-09-23 14:51:36,2020-09-30 20:41:28,closed,"Mark synthetic {x,y,xs,ys} expressions as internal","- [x] tests

fixes #10453
",0,6,['status: accepted']
448,491806499,10517,3834332,2020-09-23 14:04:07,2020-09-23 15:55:12,closed,Allow to change MultiSelect.disabled property,fixes #10507 ,1,1,['status: accepted']
449,491795770,10516,3834332,2020-09-23 13:48:40,2020-09-30 20:46:08,closed,Allow to resolve child renderers of composite renderers,"- [x] tests

fixes #10481
",1,5,['status: accepted']
450,491238426,10515,3834332,2020-09-22 23:05:09,2020-09-22 23:39:44,closed,pin pytest-asyncio 0.12,"- [x] issues: fixes #10514

",0,1,['status: accepted']
451,491207537,10513,3834332,2020-09-22 21:34:21,2020-09-23 18:16:48,closed,fix internal precision loss,"- [x] issues: fixes #10488
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

I could not find any other CenterRotatable that needed similar treatment, and I verified that hover works with just these changes. 

@mattpap any thoughts welcome:

* is it worth trying to test the array type to use `NumberArray` when possible instead of `Array` for everything in these places?
* Ideas for tests? I spent ~30 minutes trying to get a `Rect._map_data` unit test that worked but did not succeed

```
 #!/bin/env python
from datetime import datetime, timedelta
import numpy as np
from bokeh.plotting import figure, show
from bokeh.models import DatetimeTickFormatter

## The line below is the key -- If I subtract 50 years from the current date, the rectangles appear just fine.
## If i don't subtract them, the rectangles are not rendered.
t0 = datetime(2020, 9, 21, 23, 22, 25, 624793) # datetime.utcnow() #- timedelta(weeks=52 * 50)

times = t0.timestamp() * 1e3 + np.linspace(0, 5, 100, endpoint=False) * 3600 * 1e3
times = times.astype('datetime64[ms]')

plot = figure(
      output_backend='svg',
      plot_height=500,
      plot_width=1280,
      x_axis_label='UTC Time',
      y_axis_label="""",
      y_axis_type='linear',
      tooltips=""$index""
)

plot.xaxis.formatter = DatetimeTickFormatter(
      hours=['%H:%M'],
      minutes=['%H:%M'],
      seconds=['%H:%M']
)

dm = np.linspace(0, 100, 1)
width = 100000 # (np.diff(times)[0] * 0.8).astype(timedelta)
times, dm = np.meshgrid(times, dm)
plot.rect(
      x=list(times.astype(datetime).flatten()),
      y=dm.flatten(),
      width=width, height=100 / 20, name='rect',
      line_color=""red"", alpha=0.6
)

show(plot)
```
<img width=""1273"" alt=""Screen Shot 2020-09-22 at 2 33 43 PM"" src=""https://user-images.githubusercontent.com/1078448/93940054-b0f5e400-fce0-11ea-861f-c817281c7cb7.png"">
",4,6,['status: accepted']
452,489657190,10510,3834332,2020-09-19 03:33:47,2020-11-06 15:32:46,closed,"Adds a button_type similar to default but with no border to support menu-buttons, link-buttons, icon-buttons etc.","Fixes https://github.com/bokeh/bokeh/issues/10505

Adds a button_type `stealth` with no border to support menu-buttons, link-buttons, icon-buttons etc.

For example like

![image](https://user-images.githubusercontent.com/42288570/93658164-64d54600-fa39-11ea-9613-282484a6ddee.png)

I chose the name ""stealth"" as its a ""cool"" name and used by the Fast Design components I'm currently wrapping. Alternatives might be `flat` or `neutral` which might be more in line with the existing `button_type` names.

As far as I can see the documentation is autogenerated, so I have not changed anything there. I just searched the code for ""default"" and ""primary"" and updated where nescessary.
",9,5,['status: accepted']
453,489654020,10509,3834332,2020-09-19 03:16:19,2020-12-02 05:06:52,closed,Improve Icon alignment when no label for Button,"This fixes issue 10508: Improve support icon only button by removing space

See https://github.com/bokeh/bokeh/issues/10508
",2,4,['status: accepted']
454,488165995,10500,3834332,2020-09-16 18:18:39,2020-09-30 08:28:36,closed,Add style guidlines and refactor,"As part of Google's Season of Docs, this pull request adds style guidelines to the documentation section of the Developers Guide and refactors the document. As discussed with @bryevdv, @hyles-lineata, and @pavithraes.  ",3,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
455,487508447,10499,3834332,2020-09-15 19:19:11,2020-09-30 08:23:19,closed,Rebuild GridBox when cols or rows change,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes  #10498
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,4,['status: accepted']
456,486897072,10495,3834332,2020-09-14 21:34:41,2020-09-17 17:04:16,closed,AutocompleteInput: add more tests,"Add a test for restrict=True (default) ensuring that random text input
does not end up in the input.value

- [ ] issues: fixes #xxxx
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
457,486268894,10493,3834332,2020-09-14 00:52:19,2020-11-04 18:10:01,closed,Accurate color bar ticking with eqhist mapping,"![image](https://user-images.githubusercontent.com/27475/93033093-05d89100-f635-11ea-96e6-6f9095997c56.png)
![image](https://user-images.githubusercontent.com/27475/93033105-11c45300-f635-11ea-80ad-d64e50e1b6ed.png)

Early work in progress.",3,6,"['type: feature', 'status: accepted', 'reso: completed', 'tag: API: models']"
458,486230793,10492,3834332,2020-09-13 19:49:08,2020-09-13 23:25:14,closed,Strictly type View.serializable_state(),"Results in one fewer `as any` cast.
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
459,486219678,10491,3834332,2020-09-13 18:19:51,2020-09-15 11:40:52,closed,Split off range management code from PlotCanvas,"Range management is a complex piece of logic that takes 25% of `PlotCanvas`' implementation, and as such deserves to be treated as an independent unit, thus this refactoring. This PR is the first step out of many towards the goal of making plots composable, allowing multiple plots per canvas, plots-in-plots, implementing color bar in terms of plot building blocks (layout, frame, glyphs, axes), etc. Code and module structure should be treated as WIP, which I will be refining as work progresses (within 2.3 timeframe).",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
460,485232227,10489,3834332,2020-09-11 16:14:41,2020-09-11 21:06:55,closed,added extra_options for create_chromium_webdriver,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x ] issues: fixes #10461
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
461,484089401,10487,3834332,2020-09-10 16:42:57,2020-09-22 20:35:22,closed,Add check for GOOGLE_API_KEY in conf.py,"- [x] issues: fixes #10486 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",1,3,['status: accepted']
462,483531562,10485,3834332,2020-09-10 08:26:18,2020-09-10 19:59:24,closed,Fix the typo in the Autoload Scripts docs section,"- [x] issues: fixes #10484
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
463,483344861,10483,3834332,2020-09-10 03:59:47,2020-09-10 20:01:35,closed,Add CoC information in documentation site,"- [x] issues: fixes #8741
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
464,482738767,10480,3834332,2020-09-09 10:22:27,2020-09-10 20:02:37,closed,Added link to the community page in the footer,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10473 
",4,3,['status: accepted']
465,481897367,10476,3834332,2020-09-08 09:05:37,2020-09-10 23:19:28,closed,AutocompleteInput: allow user-defined value,"- [x] issues: fixes #10295
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

One of the main purposes of the AutocompleteInput widget is to select a
value from a long list (for short lists, one could use Select). However,
lists tend to become long when people keep adding to them.

Previously, AutocompleteInput would not accept text input that was not
present in the list of completions, thus excluding users from the
process of building the list.

This PR adds a `restrict_value` option (default: True), which allows
developers to lift the restriction of values to the list of completions.


P.S. While reading through the contributing guidelines, I noticed that they [recommend making a PR against the `master` branch](https://github.com/bokeh/bokeh/blob/branch-2.3/.github/CONTRIBUTING.md#creating-a-pull-request-pr), which does not exist.
",24,6,['status: accepted']
466,481608656,10475,3834332,2020-09-07 19:21:24,2020-09-13 17:45:12,closed,Allow graph renderers to participate in auto-ranging,"Proof of concept. Only nodes participate in auto-ranging. 

fixes #10472",2,4,['status: accepted']
467,480777917,10470,3834332,2020-09-06 14:09:48,2020-09-07 08:40:27,closed,Make all sliders properly implement format property,"- [x] unit tests

fixes #10468",0,1,['status: accepted']
468,480775283,10469,3834332,2020-09-06 14:00:49,2020-09-11 08:08:14,closed,bokehjs development workflow improvements,"- [x] enable `declarationMap` to improve IDE experience (fix cross references)
- [x] allow to serve examples via devtools server (localhost:5777/examples)
- [ ] test examples reusing bokehjs' testing infrastructure and remove from bokeh's tests
- [ ] build and test examples in bokehjs' CI workflow",1,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
469,480475594,10466,3834332,2020-09-05 07:48:52,2020-09-23 20:09:50,closed,Remove redundant toctrees,Fixes #10465,7,9,['status: declined']
470,478736203,10462,3834332,2020-09-03 16:04:39,2020-09-11 21:06:12,closed,"added   ""--no-sandbox"" option for chrome webdriver","Otherwise, the Chrome webdriver will fail on Windows 10 WSL2 Ubuntu18 and on containerized environments.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes ##10461
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",11,11,['status: superseded']
471,478548799,10460,3834332,2020-09-03 11:04:07,2020-09-07 08:40:05,closed,Correctly mask circle data with reversed ranges,"- [x] review all glyphs that implement `_mask_data()`
- [x] add unit/visual tests

fixes #10457

![image](https://user-images.githubusercontent.com/27475/92107520-37a45900-ede6-11ea-8b04-30b794f53209.png)

",1,2,['status: accepted']
472,478510577,10459,3834332,2020-09-03 09:57:15,2020-09-07 08:39:43,closed,Fix multiline inspection and reduce any type usage,fixes #10458 ,0,2,['status: accepted']
473,478179410,10456,3834332,2020-09-02 21:27:48,2020-09-02 23:13:33,closed,Allow to change MultiChoice.disabled property,"fixes #10452 
",0,2,['status: accepted']
474,477978901,10455,3834332,2020-09-02 17:05:00,2020-09-02 21:19:01,closed,Fix categorical coordinate support in annotations,"fixes #10454 
",0,2,['status: accepted']
475,476569251,10451,3834332,2020-08-31 22:03:39,2020-09-02 16:28:49,closed,Update bokehjs' dependencies,,2,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
476,476433659,10450,3834332,2020-08-31 17:30:57,2020-08-31 21:50:49,closed,Miscellaneous refactorings in bokehjs,"Most changes should be self evident (one commit per change class). One thing that needs some explanation is making `Ticker<T>` non-generic. This has been an artifact from early transition period to TypeScript. Retrospectively treating models as generic was an obviously wrong choice, and the information about types (primarily `number` for continuous case and `Factor` for categorical) is now embedded within the class structure in various ways (this will have to be unified at some point across relevant models). ",0,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
477,476139537,10449,3834332,2020-08-31 08:12:42,2020-08-31 16:42:40,closed,Implement nan_format for NaT types on DateFormatter,"Handles `nan_format` for NaT types on the DataTable DateFormatter.

- [x] issues: fixes #10448
- [x] tests added / passed",2,1,['status: accepted']
478,475994250,10447,3834332,2020-08-31 01:11:53,2020-08-31 04:53:06,closed,Fixup event loop on windows in both client and server,"- [x] issues: fixes #10431
- [x] tests added / passed

Will add windows-only test from a windows machine later tonight",1,3,['status: accepted']
479,475794641,10445,3834332,2020-08-29 15:55:56,2020-08-31 00:53:52,closed,bug: incorrect extra_range_name error occurs when looking through Cal…,"Incorrect Plot._check_extra_range_name:


All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10443
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,5,['status: accepted']
480,474828015,10438,3834332,2020-08-27 16:52:59,2020-08-31 18:12:30,closed,Backports for 2.2.1,"This PR backports fixes for #10435 and #10426  from `branch-2.3` to `branch-2.2`

cc @mattpap @philippjfr I think just #10431 and #10436 and then we can release. 

As an aside PRs like this should not get milestones or be issue-PRs because they should not show up in the CHANGELOG (perhaps we could add a BACKPORT label and explicitly exclude them if we want to apply those other kinds of labels)",4,8,['status: accepted']
481,474767448,10437,3834332,2020-08-27 15:09:55,2020-08-31 00:58:36,closed,Fix a regression in django's autoload_js,"Tentatively ready, but a test would be useful.

fixes #10434 ",2,1,['status: accepted']
482,474763816,10436,3834332,2020-08-27 15:04:48,2020-08-27 16:19:04,closed,Fix Model.js_on_event() and add tests,"fixes #10435 
",0,1,['status: accepted']
483,473966871,10433,3834332,2020-08-26 14:58:53,2020-08-31 09:43:55,closed,Migrate property definitions to use kinds,"This migrates (almost) all primitive (non-specs) properties to the new system. I will take care of specs and the remaining TODOs in another PR. This also makes nullable properties strictly checked in bokehjs (finally!). I fixed a bunch of inconsistencies between bokeh and bokehjs and, internal to bokehjs, that were revealed by this work. The cost of change is surprisingly small and adds about ~2kB to the main bundle. This increase may actually be at least partially reverted in future, because I'm considering to not specify intrinsic defaults explicitly (e.g. `[]` for array type) in future.",0,16,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
484,473865173,10432,3834332,2020-08-26 12:14:58,2020-08-27 11:43:26,closed,Respect legacy=True in file/inline resources,fixes #10426,1,1,['status: accepted']
485,472397059,10428,3834332,2020-08-24 09:43:24,2020-08-27 11:42:45,closed,Upgrade to TypeScript 4.0,"- [x] update dependencies
- [x] resolve TS2610 and TS2611
- [x] update to new compiler API
- [x] migrate to type-safe try-catch
- [x] resolve bundle size issues

fixes #10343",2,9,['status: accepted']
486,470600809,10416,3834332,2020-08-20 02:58:10,2020-08-20 20:16:35,closed,Implemented nan_format for other CellFormatters,"Adds `nan_format` to both `ScientificFormatter` and `DateFormatter` after having added it to NumberFormatter in #10375. Also turns `DateFormatter` into a `StringFormatter` subclass to expose some of the other string formatting options which are already supported for the Scientific and Date formatters. I'm not sure `nan_format` is the most accurate on the `DateFormatter` since technically there shouldn't be NaNs, only nulls and there is no NaT type in JS, but in this case I vote for consistency over precision in the naming.",0,3,"['type: feature', 'status: accepted', 'tag: widgets', 'tag: API: models']"
487,470157314,10415,3834332,2020-08-19 13:15:35,2020-08-19 16:52:08,closed,Provide empty (not None) docs_json in AutoloadJsHandler,"- [ ] add a test

fixes #10412",2,1,['status: accepted']
488,470132484,10414,3834332,2020-08-19 12:29:57,2020-08-21 14:34:32,closed,Update examples/app/spectrogram/waterfall.ts,"fixes #10409
",2,3,['status: accepted']
489,469175248,10406,3834332,2020-08-18 03:22:47,2020-08-18 22:05:17,closed,Docs polish 2.2 release,"- [x] issues: fixes #10344
- [x] release document entry (if new feature or API change)
",1,9,['status: accepted']
490,468430964,10402,3834332,2020-08-16 11:11:29,2020-08-18 18:06:17,closed,Redesign SVG backend,"This is a major redesign of SVG backend. All issues with broken glyphs, annotations, clip paths, hatch patterns, element spacing, etc. were fixed. I also added support for proper SVG layout export, so that now `export_svg()` outputs one SVG file per root in `Bokeh.index` and layouts of all shapes (grid plots in particular) are preserved as a single SVG. I also added `LayoutDOM.export()` method in bokehjs that allows API-level composing of plots.

![image](https://user-images.githubusercontent.com/27475/90440321-519c2700-e0d7-11ea-9a6c-5282120f64f9.png)


- [x] fixes #9213
- [x] fixes #9551
- [x] fixes #8744
- [x] fixes #8446
- [x] fixes #6775
- [x] fixes #9001
- [x] fixes #8046
- [x] fixes #9169",9,16,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
491,468381168,10400,3834332,2020-08-16 00:45:56,2020-08-16 01:59:45,closed,Update color link,"fixes #10397
 
",1,1,['status: accepted']
492,467001730,10396,3834332,2020-08-12 20:52:44,2020-08-13 22:14:35,closed,Don't reinitialize existing instances,"This is a proof of concept. I think this change is promising, but it only fixes one side of the problem. The other is bokehjs sending too many objects and attributes.

fixes #10394 
",4,2,['status: accepted']
493,466950799,10395,3834332,2020-08-12 19:01:09,2020-08-12 19:36:42,closed,Bump `@bokeh/slickgrid` to 2.4.2701,"I published `@bokeh/slickgrid` 2.4.2701 (slickgrid 2.4.27 build 1). I also fixed issue with mocha reported by npm audit.

fixes #10358 ",0,2,['status: accepted']
494,466941969,10393,3834332,2020-08-12 18:41:39,2020-08-12 19:47:47,closed,Mark webdriver's tests as flaky,"`tests/unit/bokeh/io/test_webdriver` fails regularly on macos and windows due to webdriver's unreliability.
",0,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
495,466933955,10392,3834332,2020-08-12 18:24:16,2020-08-12 19:10:28,closed,Support `$name` special variable with image tooltips,"Only image case didn't support `$name`.

fixes #10319 
",0,1,['status: accepted']
496,466743631,10388,3834332,2020-08-12 12:37:28,2020-08-12 16:42:59,closed,Make *NDArray classes work with legacy bundles under ES5,"This adds an AST transformer specific to ES5 and `core/util/ndarray` module, which ""fixes"" the TypeScript emitted NDArray constructors, so that they work under ES5. This completes the task of fixing legacy bundles, but I expect there may be still some issues in corner cases.

fixes #10233",3,2,['status: accepted']
497,464858381,10385,3834332,2020-08-07 22:32:13,2020-08-09 00:13:53,closed,"Revert ""autoload only uses necessary bundles""","issue: fixes #10361

Reverts bokeh/bokeh#10292",3,4,['status: accepted']
498,464745550,10384,3834332,2020-08-07 18:11:06,2020-08-12 17:06:49,closed,Bryanv/webgl copies,"This PR incidentally fixes #5589 but also makes a number of other incremental changes to webgl:

* currently we always blit the GL canvas if ""webgl"" backend is specified, even if a glyph decides not to do any gl rendering. This makes blits contingent on actual gl draws having happened

* no more coordinate transforms in webgl for now. All screen coords come from standard `map_data` as a result, *several* uneccessary array copies coudl be removed, also all the gorpy ""linearity testing"" and ""baked offset"" code was removed

* The current code does not handle uniform/vector colors properly, deleted the optimization for that and now a full RGBA array is constructed for line and fill every time (this is the fix for #5589)

This version probably updates all the buffers more often than the previous code, but also reduces array copies. In my local testing performance was still very good. In any case things are now more correct/working. 

- [x] issues: fixes #5589

### Issues discovered

I noticed two issues that seem to exist already (checked 2.1.1), so no need to try and fix them now: 

* zooming in on circles with `radius` stop zooming properly at some point, and stay a fixed size

* lines zoomed in look like garbage:

<img width=""354"" alt=""Screen Shot 2020-08-07 at 10 15 02 AM"" src=""https://user-images.githubusercontent.com/1078448/89675343-9eddf480-d89e-11ea-8eb8-73c744dcc731.png"">

",4,8,['status: accepted']
499,464048717,10382,3834332,2020-08-06 14:03:09,2020-08-12 21:28:09,closed,LOD End events should now fire when plots have linked axes,"- [x] issues: fixes #7707 

I implemented my first suggestion from that issue.  Happy to revisit one of the others instead if preferred
",19,5,['status: accepted']
500,463438721,10378,3834332,2020-08-05 14:57:21,2020-08-12 18:00:09,closed,Distinguish raw strings from HTML in replace_placeholders(),"addresses #10319
",2,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: bokehjs']"
501,463371001,10375,3834332,2020-08-05 13:05:36,2020-08-05 14:44:16,closed,Add nan_format option to DataTable NumberFormatter,"Adds a `nan_format` option to the DataTable NumberFormatter.

- [x] issues: fixes #10374
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,3,['status: accepted']
502,463236631,10373,3834332,2020-08-05 08:38:37,2020-08-12 17:59:14,closed,Don't duplicate key action in sliders,"fixes #10302 
",2,1,['status: accepted']
503,463055399,10372,3834332,2020-08-04 23:08:59,2020-08-12 17:27:51,closed,Properly clone Selection in CDSView.convert_selection*(),fixes #10324,1,1,['status: accepted']
504,463039829,10371,3834332,2020-08-04 22:19:23,2020-08-12 17:39:11,closed,Respect ImageURL.anchor when computing bounds,"fixes #10370 
",1,1,['status: accepted']
505,462822510,10368,3834332,2020-08-04 14:58:42,2020-08-04 22:41:09,closed,numeric input and spinner fixes,"- [x] issues: fixes #10367
",2,6,['status: accepted']
506,462802782,10366,3834332,2020-08-04 14:27:06,2020-08-12 17:24:12,closed,Relativize layout's bbox in tooltip's side computations,"fixes #10365 
",1,1,['status: accepted']
507,462734171,10364,3834332,2020-08-04 12:27:11,2020-08-04 13:56:52,closed,Update layout when axis label changes,"fixes #10362
",0,1,['status: accepted']
508,462684651,10363,3834332,2020-08-04 10:44:08,2020-08-13 22:36:17,closed,Modernized DataTable styling,"The default SlickGrid DataTable CSS styling looks like something straight out of the 90s. In this PR I've tried to update the styling to something more minimal and modern borrowing a little bit from the default styling of Pandas DataFrame reprs in notebooks:

Before:

![Screen Shot 2020-08-04 at 1 08 38 PM](https://user-images.githubusercontent.com/1550771/89287125-a6f62400-d653-11ea-80a9-88238c1886aa.png)

After:

![Screen Shot 2020-08-04 at 12 39 35 PM](https://user-images.githubusercontent.com/1550771/89285009-ec185700-d64f-11ea-8a0f-e304387a2ece.png)

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",14,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
509,462105650,10360,3834332,2020-08-03 10:54:54,2020-08-03 14:20:45,closed,Figure out actual binary executable firefox path,fixes #10108,0,1,['status: accepted']
510,460552381,10359,3834332,2020-07-31 21:58:47,2020-08-03 15:57:20,closed,Use Float32Array throughout,"- [x] issues: fixes #10329
- [ ] tests added / passed

@mattpap I would love to try and fit this in 2.2 to augment an overall story of performance/memory optimization focus for this release cycle. AFAIK from local testing, everyting is working fine. But there are 4 failing JS integration tests:
```
✗ Plot
 └── should allow to fully repaint canvas after viewport resize
images differ by 8px (0.01%)

✗ Bug
 └┬─ in issue #9703
  └── disallows ImageURL glyph to set anchor and angle at the same time
images differ by 29px (0.02%)

✗ Bug
 └┬─ in issue #9877
  └── disallows BoxAnnotation to respect line_color == null
images differ by 1px (0.00%)

✗ Bug
 └┬─ in issue #10219
  └── disallows correct placement of Rect glyph with partial categorical ranges
images differ by 758px (0.62%)
```
 I would appreciate some guidance here. There is just some image mismatch and very little other information apart from that. Can you describe your diagnostic process here?
",12,10,['status: accepted']
511,459319017,10357,3834332,2020-07-30 15:40:36,2020-07-30 18:23:38,closed,Update out of date HoverTool docstring,"Still lists image glyphs as unsupported
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
512,458742492,10354,3834332,2020-07-29 22:21:56,2020-07-30 21:53:09,closed,Code dupe experiements,"Decided to try out [`jscpd`](https://www.npmjs.com/package/jscpd#html) for detecting duplicated code and it seems pretty nice. Maybe we should consider integrating it in to our automation at some point. 

This PR is just to try and remove some of the worst/easies targets. It removes about 150 lines of dupe and shaves ~1k off the bundle size. The tool reports there are still 1100+ lines of duped code in blocks of size 5 or greater. ",3,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
513,458670656,10353,3834332,2020-07-29 20:19:14,2020-08-03 18:46:53,closed,Enhancements for DataTable,"A number of improvements for DataTable partially made possible by upgrading to latest SlickGrid, but also properly taking advantage of some of the column auto-sizing behaviors that were previously not applied.

* Adds an `autosize_mode` property which replaces the `fit_columns` property

Will have to think of naming here, in JS they are defined as:

```
    ""GridAutosizeColsMode"": {
      None: 'NOA',
      LegacyOff: 'LOF',
      LegacyForceFit: 'LFF',
      IgnoreViewport: 'IGV',
      FitColsToViewport: 'FCV',
      FitViewportToCols: 'FVC'
    },
```

where LegacyOff and LegacyForceFit correspond to fit_columns=True/False. For now I've set `fit_columns=None` and only use the option when set. Currently naming is not great:

    ``""fit_columns""``
        Fit columns into the available area, potentially resulting in
        squashed or unreadable columns.

![Screen Shot 2020-07-29 at 9 59 53 PM](https://user-images.githubusercontent.com/1550771/88848998-82c8bc00-d1e9-11ea-878d-d3a4ca8dff81.png)

    ``""fit_viewport""``
        Adjust viewport width to the automatically computed column widths.

![Screen Shot 2020-07-29 at 10 00 09 PM](https://user-images.githubusercontent.com/1550771/88848788-3bdac680-d1e9-11ea-9b36-ac737d46ae16.png)

    ``""ignore_viewport""``
        Automatically compute column widths ignoring the viewport area (leaves part of header empty).

![Screen Shot 2020-07-29 at 10 16 03 PM](https://user-images.githubusercontent.com/1550771/88848793-3c735d00-d1e9-11ea-9d05-42690f6e2ddf.png)

    ``""off""``
        Disable autosizing behavior, equivalent to fit_columns=False
        (legacy mode).

![Screen Shot 2020-07-29 at 10 16 26 PM](https://user-images.githubusercontent.com/1550771/88848798-3da48a00-d1e9-11ea-9cbd-8eb788aaa86f.png)

    ``""force_fit""``
        Whether columns should be fit to available width, equivalent
        to setting fit_columns=True (legacy mode).

![Screen Shot 2020-07-29 at 10 16 38 PM](https://user-images.githubusercontent.com/1550771/88848801-3e3d2080-d1e9-11ea-8c72-ba4a9233487d.png)

    ``""none""``
        Do not automatically compute column widths.

![Screen Shot 2020-07-29 at 10 16 17 PM](https://user-images.githubusercontent.com/1550771/88848796-3d0bf380-d1e9-11ea-89fd-162743cba3ac.png)

* Adds an `auto_edit` option as requested in https://github.com/bokeh/bokeh/issues/6864
* Adds `freeze_columns` which allows freezing the first N columns (i.e. make them fixed while all other columns scroll)
* Adds `freeze_rows` which allows freezing the first or last (if negative) N rows
* Improves the sizing behavior in general (this is still quite hacky)

- Fixes https://github.com/bokeh/bokeh/issues/8595
- Closes https://github.com/bokeh/bokeh/issues/6864

- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",28,19,"['type: feature', 'status: accepted', 'reso: completed']"
514,458629829,10352,3834332,2020-07-29 19:10:10,2020-07-29 19:45:26,closed,Rev pillow version for sec advisory,"This is in response to https://github.com/advisories/GHSA-43fq-w8qq-v88h 

I'm not sure why dependabot can't auto-generate an update for this but there seems to be no problems with bumping the min version. Will check again in the next actual dev releases

cc @bokeh/dev ",3,1,"['status: accepted', 'type: task', 'reso: completed', 'dependencies']"
515,458430022,10350,3834332,2020-07-29 13:11:54,2020-07-29 22:01:39,closed,Fix bokehjs' legacy bundles,"addresses #10233 
",1,7,"['status: accepted', 'type: task', 'reso: completed', 'plat: ie', 'tag: component: bokehjs']"
516,457950738,10349,3834332,2020-07-28 17:31:01,2020-07-29 20:11:10,closed,Add more info about BEPs,"Add links to BEP 6 and BEP landing page to developer docs
Solves issue #10347 

This pull request adds some more information about Bokeh Enhancement Proposals (BEPs). It also explicitly links the two BEPs that I think are the most important ones for developers to be aware of (BEP 1 and BEP 6).

I'm looking forward to some feedback, especially from @bryevdv and other authors (and users) of BEPs, to make sure this short text is in line with your intentions.",5,3,['status: accepted']
517,457719828,10348,3834332,2020-07-28 10:30:44,2020-07-29 07:56:41,closed,Upgrade to SlickGrid 2.4.27,"
",2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: widgets']"
518,457324101,10346,3834332,2020-07-27 18:17:35,2020-07-27 19:34:22,closed,Perform eslint checks on codebase tests,"Adds `node make lint` test to `tests/codebase`. This is slightly duplicative since the BokehJS-CI job also runs eslint, but I want to make sure that `py.test tests/codebase` passing locally means a guarantee that no linter-related fails will happen on CI. ",1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
519,456819161,10342,3834332,2020-07-26 23:12:26,2020-07-27 11:01:24,closed,Update bokehjs/package.json,,0,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
520,456727293,10340,3834332,2020-07-26 09:44:57,2020-10-08 16:01:49,closed,"Rename {x,y}{axis,grid} -> {x,y}_{axis,grid}","- [x] backwards compatibility

fixes #10332",4,2,['status: declined']
521,456721035,10338,3834332,2020-07-26 08:39:34,2020-07-26 09:17:04,closed,Replace for-in loop with for-of and keys()/values()/entries(),"This is a follow up on issue #10320 and several other. No more for-in loops, especially unguarded by `hasOwnProperty()`, after this PR. Use for-of loop in combination with `keys()`, `values()` and/or `entries()` from `core/util/object` module instead.",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
522,456683571,10337,3834332,2020-07-26 00:17:01,2020-07-26 17:54:54,closed,Fix typos in Dev Guide,"Fixes typos in Developer Guide, partially fixes issue #8448.
Based on pull request #10269 (Fix typos in the User Guide), I have fixed several typos in the Developer Guide.
The same basic assumptions apply here as well, i.e. this pull request is focussing exclusively on fixing errors such as misspelled words, omitted words, superfluous words, capitalization inconsistencies and some punctuation issues (see [this comment](https://github.com/bokeh/bokeh/pull/10269#issuecomment-656485540)).
This commit includes all my changes, this pull request is status: ready!
[ci disable examples]",5,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
523,456675569,10335,3834332,2020-07-25 22:26:06,2020-07-25 22:59:32,closed,More robust toolbar buttons' CSS,fixes #10334 ,0,1,['status: accepted']
524,455958682,10330,3834332,2020-07-23 21:21:17,2020-07-27 17:28:18,closed,Initial webgl cleanup,"This PR:

* re-integrates the webgl support back in to the main bundle
* removes some dead/unused code
* provides and uses an API function to determine uniform/single-value-ness rather than digging in property internals
* affords configuration of markers GL support at the point marker classes are created
* consolidates all marker-specific GL code not used elsewhere in to `webgl/markers.ts` 

@mattpap This is some prep work. With this out of the way I think work can proceed almost entirely in `webgl/markers.ts` (and later in corresponding `line.ts`) with the addition of a few lines in `canvas.ts` as well. Hopefully this will be incremental and non-disruptive enough for you. Assuming this can get green soon, I'd be OK merging this prep work for 2.2 but also fine landing on `branch-2.3`. Let me know your thoughts, or any other suggestions for improvements. 

incidentally I also have figured out distance-field fragment shaders for several other marker types that are currently missing but I would plan to add those separately later. ",3,14,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
525,452031669,10323,3834332,2020-07-18 17:01:44,2021-01-06 06:53:44,closed,Add support for smooth curve glyphs,"This is a proof of concept for discussion. In this PR I implemented a spline interpolation algorithm (Catmull-Rom) and added `Spline` glyph (roughly equivalent to a single index multi line; no hit testing, etc. for simplicity). Assuming we want this at all, the question is whether we want to have separate glyphs for this, e.g. `Line` -> `Spline` (`Curve`?),  `MultiLine` -> `MultiSpline`, `Patch` -> `SmoothPatch` (?), etc., or whether this should be an option of existing glyphs?

The following examples are taken from visual tests. The second one is auto-closing and the last one is manually closed, by repeating the first point as the last point.

![image](https://user-images.githubusercontent.com/27475/87857281-c38d1f00-c925-11ea-8160-47be07d30834.png)
",2,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
526,451526175,10321,3834332,2020-07-17 22:54:10,2020-07-25 23:37:49,closed,Don't use for-in loop in Interpolator.sort(),"- [x] tests

fixes #10320 ",5,2,['status: accepted']
527,450464090,10318,3834332,2020-07-16 19:49:59,2020-08-04 12:13:48,closed,Improve DataTable's sorting capability,fixes #10251,0,3,['status: accepted']
528,450356012,10316,3834332,2020-07-16 17:08:19,2020-07-27 20:12:55,closed,Require auth on WSHandler,"Ensures that user authentication occurs before opening the websocket.

- [x] Add tests",3,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
529,450337089,10315,3834332,2020-07-16 16:40:30,2020-07-16 17:55:24,closed,Bump lodash from 4.17.15 to 4.17.19 in /bokehjs,"Bumps [lodash](https://github.com/lodash/lodash) from 4.17.15 to 4.17.19.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/lodash/lodash/releases"">lodash's releases</a>.</em></p>
<blockquote>
<h2>4.17.16</h2>
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/lodash/lodash/commit/d7fbc52ee0466a6d248f047b5d5c3e6d1e099056""><code>d7fbc52</code></a> Bump to v4.17.19</li>
<li><a href=""https://github.com/lodash/lodash/commit/2e1c0f22f425e9c013815b2cd7c2ebd51f49a8d6""><code>2e1c0f2</code></a> Add npm-package</li>
<li><a href=""https://github.com/lodash/lodash/commit/1b6c282299f4e0271f932b466c67f0f822aa308e""><code>1b6c282</code></a> Bump to v4.17.18</li>
<li><a href=""https://github.com/lodash/lodash/commit/a370ac81408de2da77a82b3c4b61a01a3b9c2fac""><code>a370ac8</code></a> Bump to v4.17.17</li>
<li><a href=""https://github.com/lodash/lodash/commit/1144918f3578a84fcc4986da9b806e63a6175cbb""><code>1144918</code></a> Rebuild lodash and docs</li>
<li><a href=""https://github.com/lodash/lodash/commit/3a3b0fd339c2109563f7e8167dc95265ed82ef3e""><code>3a3b0fd</code></a> Bump to v4.17.16</li>
<li><a href=""https://github.com/lodash/lodash/commit/c84fe82760fb2d3e03a63379b297a1cc1a2fce12""><code>c84fe82</code></a> fix(zipObjectDeep): prototype pollution (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4759"">#4759</a>)</li>
<li><a href=""https://github.com/lodash/lodash/commit/e7b28ea6cb17b4ca021e7c9d66218c8c89782f32""><code>e7b28ea</code></a> Sanitize sourceURL so it cannot affect evaled code (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4518"">#4518</a>)</li>
<li><a href=""https://github.com/lodash/lodash/commit/0cec225778d4ac26c2bac95031ecc92a94f08bbb""><code>0cec225</code></a> Fix lodash.isEqual for circular references (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4320"">#4320</a>) (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4515"">#4515</a>)</li>
<li><a href=""https://github.com/lodash/lodash/commit/94c3a8133cb4fcdb50db72b4fd14dd884b195cd5""><code>94c3a81</code></a> Document matches* shorthands for over* methods (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4510"">#4510</a>) (<a href=""https://github-redirect.dependabot.com/lodash/lodash/issues/4514"">#4514</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/lodash/lodash/compare/4.17.15...4.17.19"">compare view</a></li>
</ul>
</details>
<details>
<summary>Maintainer changes</summary>
<p>This version was pushed to npm by <a href=""https://www.npmjs.com/~mathias"">mathias</a>, a new releaser for lodash since your current version.</p>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=lodash&package-manager=npm_and_yarn&previous-version=4.17.15&new-version=4.17.19)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'dependencies']"
530,450335877,10314,3834332,2020-07-16 16:38:37,2020-07-16 18:39:33,closed,rename renderer.scope -> .coordinates,"- [x] issues: fixes #10209

cc @mattpap 
",0,2,['status: accepted']
531,450257622,10313,3834332,2020-07-16 14:49:58,2020-07-16 15:23:36,closed,update blog links,"- [x] issues: fixes #10282
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
532,450126825,10312,3834332,2020-07-16 11:38:33,2020-07-16 12:37:02,closed,Make SVG rendering context respect NaN/non-finite arguments,fixes #10305,0,1,['status: accepted']
533,450024500,10311,3834332,2020-07-16 08:57:41,2020-07-16 16:31:15,closed,Update `_color_help` url for css colors ,"""http://www.w3schools.com/cssref/css_colornames.asp"" was not working and I replaced with ""https://www.w3schools.com/colors/colors_names.asp""

- [x] issues: fixes #10310
",1,1,['status: accepted']
534,449870595,10308,3834332,2020-07-16 03:30:36,2020-07-16 04:22:06,closed,don't dupe version extension in bokehjs version,"- [x] issues: fixes #10301

Definitely my goal to add a full test suite for release automation but let's sort out the new branching model first. 

```
In [5]: from release.config import Config

In [6]: version = ""2.2.0dev4""

In [7]: config = Config(version=version)

In [8]: config.js_version
Out[8]: '2.2.0-dev.4'
```

Edit: defaults picked up isort 5 finally so I had to pin it here",1,2,['status: accepted']
535,449447839,10307,3834332,2020-07-15 12:25:31,2020-07-15 13:34:15,closed,Use ElementTree instead of deprecated cElementTree.,"- [x] issues: fixes #10306 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",2,1,['status: accepted']
536,449114190,10304,3834332,2020-07-14 21:06:19,2020-07-16 03:54:41,closed,Add note about nginx large_client_header_buffers to docs,This took me and a client of ours several days to figure out.,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
537,448977612,10303,3834332,2020-07-14 16:11:39,2020-07-14 22:53:03,closed,fix bug with selection.get_view,"Fixes line selection broken on `branch-2.2`

- [x] issues: fixes #10281

",2,1,['status: accepted']
538,448469384,10298,3834332,2020-07-13 20:22:32,2020-07-16 03:55:36,closed,Add bokeh logo palette; remove rogue double-quote from template,"Adds a palette based on the Bokeh colorway provided by Chris G in the #brand Slack channel. 

Also removes a stray "" that was appearing on the palettes doc page.",1,2,"['status: accepted', 'type: task', 'reso: completed']"
539,448416446,10297,3834332,2020-07-13 18:23:14,2021-05-04 10:15:29,closed,Migrate to shadow DOM,"This is a very early attempt to migrate to shadow DOM and attain full CSS isolation. This makes all DOM views and other DOM renderable components (e.g. menus) maintain their own shadow DOM and styles. This is contrary to my earlier attempts, where isolation happened only at the root level. The new approach allows for better isolation of CSS between components, delivering pretty much ""CSS modules"". This should help with future integration with other shadow DOM capable components and with ""modern"" web frameworks in general. Legacy browser support may be possible with polyfills. For now I'm submitting against `branch-2.2`, but more likely than not, this will require retargetting for `future` branch.

TODO:

- [x] layout
- [x] toolbars
- [x] menus
- [ ] widgets
- [ ] notebook
- [ ] legacy support

fixes #9757",1,1,['status: superseded']
540,447810421,10293,3834332,2020-07-11 19:58:15,2020-07-27 12:21:55,closed,Update python idioms,"- [x] issues: fixes #10289 
- [x] tests added / passed

* changes `class ClassName(object):` style declarations to `class ClassName:` (`object` is redundant since Python 3)
* one test class was renamed due to a typo, but the name is only used via test discovery and not referred to anywhere else
* use set comprehensions where possible
* instances of `EnvironmentError`, `IOError`, and `socket.error` are [changed to `OSError`](https://docs.python.org/3/library/exceptions.html#OSError.filename2). 
* `io.open` changed to plain `open`
* Changed some string formatting to use f-strings where it significantly improves readability
* `u""string""` changed to `""string""`, unnecessary string castings and constant string encodings removed
* change `super(ClassName, self)` to the Python 3 `super()` shorthand
* mixed bits and pieces (fix up string escaping, avoid list instantiation where not required, superfluous ()s)

I applied black-style formatting to any lines I touched and their immediate vicinity where appropriate, as it seemed the sensible thing to do given that bokeh seems to be moving towards black eventually (#9636)",10,13,['status: accepted']
541,447805877,10292,3834332,2020-07-11 19:13:19,2020-07-11 20:50:53,closed,autoload only uses necessary bundles,"- [x] issues: fixes #10166
- [x] tests added / passed

I don't think the tests are amazing but they are serviceable. 
",0,1,['status: accepted']
542,447804831,10291,3834332,2020-07-11 19:03:10,2020-07-11 22:41:32,closed,Don't layout/render axes with invalid ranges,fixes #10195,0,1,['status: accepted']
543,447794843,10288,3834332,2020-07-11 17:28:50,2020-07-11 18:36:22,closed,Avoid excessive rendering of toolbar panels,"fixes #10191
",0,1,['status: accepted']
544,447785292,10286,3834332,2020-07-11 16:01:17,2020-07-11 16:53:01,closed,Change PR target branch recommendation,"and add a link to [BEP-1](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management) so people know what to expect after creating an issue or pull request.

- [x] issues: fixes #10283
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
545,447784301,10285,3834332,2020-07-11 15:52:35,2020-07-11 16:50:32,closed,Change all references of 'py.test' to 'pytest',"The `pytest` command has been the recommended entry point since pytest 3.0,
cf. https://github.com/pytest-dev/pytest/issues/1629

- [x] issues: fixes #10284 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
546,447244077,10279,3834332,2020-07-10 06:02:28,2020-11-10 16:37:55,closed,Redesign set_data() and set_visuals(),"Early work in progress. The goals of this work are:

- bring initialization of coordinate and visual data under one code path
- cleanly separate scalar visuals from vector
- allow to redefine non-visual properties in selection glyphs, etc.
- allow to use glyphs of similar (not exact) type as selection glyphs, etc.",5,1,"['status: superseded', 'type: task', 'tag: component: bokehjs']"
547,447186840,10278,3834332,2020-07-10 02:28:11,2020-07-14 16:12:11,closed,Misc glyph rendering improvements,"fixes: #10281 

@mattpap This is pure code janitorial work. It's been several years since I have really been in this code so cleaning it up helps me figure out what's where. I am very interested in your feedback and happy to make any changes. Then main thing was to break up the overwhelmingly long and complicated `_render` method. Some other notes:

* the 'no hit testing' log message, and all the added logic to only print it once, seemed pretty pointless so I removed it
* I defined default hit test methods that just return null, so that the top level hit test method can be simpler
* factored out some predicates and computations
* logged time deltas immediately after the the work, rather than collect to print later (simpler)",4,9,"['status: declined', 'type: task', 'tag: component: bokehjs']"
548,447134977,10277,3834332,2020-07-09 23:01:11,2020-07-10 01:19:57,closed,Docs change anaconda install source,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
549,446944250,10275,3834332,2020-07-09 15:45:20,2020-07-09 20:31:53,closed,Fix minor typos,"This PR is intended to fix various typos found in `bokeh/sphinx`.

Most of them were minor misspellings. 

Some of these changes include changes to anchors, e.g. `"".. _userguide_extensions_specifying_implemenation_languages:""` -> `"".. _userguide_extensions_specifying_implementation_languages:""`. When making these changes, it seemed that these anchors weren't used elsewhere in the sphinx docs, so they seemed not harmful.

This is intended to help with efforts in #8448.

Related issue: #8448",8,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
550,446853625,10274,3834332,2020-07-09 13:16:09,2020-07-10 07:32:21,closed,Use APIs to collect serialized SVG canvas contents,"- [x] fix composing of SVG sub-canvases
- [x] tests?

fixes #10273 
",0,3,['status: accepted']
551,446535576,10272,3834332,2020-07-08 23:30:15,2020-07-09 12:30:15,closed,Improve performance of selections,"This improves performance in general and establishes a baseline for my ongoing and future work on indexing and selections.
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: performance']"
552,446353052,10271,3834332,2020-07-08 16:26:08,2020-07-08 17:08:04,closed,fix over-quoting by components,"ref: https://github.com/bokeh/bokeh/issues/10268#issuecomment-655190968

@mattpap since the ""only replace single quotes"" is only needed in one place I just used `str.replace` plus a (now-appropriately-called) stdlib `html.escape`",1,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
553,446135662,10270,3834332,2020-07-08 10:07:14,2020-07-08 14:47:41,closed,Unclobber global.Bokeh to avoid initialization failure,"fixes #10002
",0,1,['status: accepted']
554,445913823,10269,3834332,2020-07-08 03:44:29,2020-07-11 15:59:43,closed,Fix typos in User Guide,"Fixes typos in User Guide .rst files, partially fixes issue #8448.
This PR is focussing on errors such as misspelled words, omitted words, superfluous words, and some punctuation issues. 
This first commit includes about half the rst files, and I will add the remaining files in the coming days. I'm starting this PR with status: WIP and would be happy for some early feedback. I will tag it as ready once I have committed all rst files.",6,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
555,445683013,10266,3834332,2020-07-07 21:09:58,2020-07-27 12:30:01,closed,Add DocumentReady event,"Implements #10265 by adding a `Document.on_event` method to subscribe to a new class of `DocumentEvent` types the first of which is a `DocumentReady` event, which fires when the Document is done rendering.

- [x] issues: fixes #10265 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,6,['status: accepted']
556,445487056,10264,3834332,2020-07-07 15:25:51,2020-07-11 18:34:24,closed,Configured Dependabot,"Fixes #10263

The Github native Dependabot has been successfully configured in my fork.

![dependabotbokeh](https://user-images.githubusercontent.com/43414361/86803911-10563780-c094-11ea-8033-1566505d53d6.PNG)

If there are any custom setting you would like to have, such as who the PR should be assigned to, and if certain dependencies should not be touched or anything of this sort, they can be configured as well. 

Do let me know!  

",4,2,['status: declined']
557,445131428,10262,3834332,2020-07-07 03:53:39,2020-07-08 10:29:49,closed,Bump electron from 1.8.8 to 9.1.0 in /bokehjs/examples/electron,"Bumps [electron](https://github.com/electron/electron) from 1.8.8 to 9.1.0.
<details>
<summary>Release notes</summary>
<p><em>Sourced from <a href=""https://github.com/electron/electron/releases"">electron's releases</a>.</em></p>
<blockquote>
<h2>electron v9.1.0</h2>
<h1>Release Notes for v9.1.0</h1>
<h2>Features</h2>
<ul>
<li>Added support for <code>MessagePort</code> in the main process. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24323"">#24323</a></li>
<li>Added support for suspend and resume events to Windows. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24283"">#24283</a></li>
<li>Added support for suspend and resume events to macOS. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24294"">#24294</a></li>
<li>Expose sessionId associated with a target from debugger module. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24398"">#24398</a></li>
<li>Implemented <code>systemPreferences.getMediaAccessStatus()</code> on Windows. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24312"">#24312</a></li>
</ul>
<h2>Fixes</h2>
<ul>
<li>Fixed an intermittent high-CPU usage problem caused a system clock issue during sleep. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24415"">#24415</a></li>
<li>Fixed an issue where some old notifications were not properly removed from the Notification Center on macOS. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24406"">#24406</a></li>
<li>Fixed bug on macOS where the main window could be targeted for a focus event when it was disabled behind a modal. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24354"">#24354</a></li>
</ul>
<h2>electron v9.0.5</h2>
<h1>Release Notes for v9.0.5</h1>
<h2>Fixes</h2>
<ul>
<li>Fixed &quot;Paste and Match Style&quot; shortcut on macOS to match OS's &quot;Option-Shift-Command-V&quot;. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24185"">#24185</a></li>
<li>Fixed &quot;null path-to-app&quot; in test-app when Electron's path contains spaces or special characters. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24232"">#24232</a></li>
<li>Fixed an error when calling <code>dialog.showCertificateTrustDialog</code> with no <code>BrowserWindow</code>. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24121"">#24121</a></li>
<li>Fixed an issue where <code>shutdown</code> would be emitted both on app <em>and</em> system shutdown on macOS. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24141"">#24141</a></li>
<li>Fixed an issue where <code>withFileTypes</code> was not supported as an option to <code>fs.readdir</code> or <code>fs.readdirSync</code> under asar. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24108"">#24108</a></li>
<li>Fixed an issue which would cause streaming protocol responses to stall in some cases. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24082"">#24082</a></li>
<li>Fixed an issue with click events not being emitted on macOS for Trays with context menus set. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24236"">#24236</a></li>
<li>Fixed delayed execution of some Node.js callbacks in the main process. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24178"">#24178</a></li>
<li>Fixed tray menu showing in taskbar on Windows. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24193"">#24193</a></li>
<li>Fixed window titlebar not responding to pen on Windows 10. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24103"">#24103</a></li>
</ul>
<h2>Other Changes</h2>
<ul>
<li>Fixed issue with some IMEs on windows (for ex: Zhuyin) don't terminate after pressing shift. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24059"">#24059</a></li>
<li>Fixed mac app store rejection notice for invalid symbolic link in bundle. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24238"">#24238</a></li>
<li>Updated Chromium to 83.0.4103.119. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24234"">#24234</a></li>
</ul>
<h2>Documentation</h2>
<ul>
<li>Documentation changes: <a href=""https://github-redirect.dependabot.com/electron/electron/issues/24177"">#24177</a></li>
</ul>
<h2>electron v9.0.4</h2>
<h1>Release Notes for v9.0.4</h1>
<h2>Fixes</h2>
<ul>
<li>Added missing support for <code>isComposing</code> KeyboardEvent property. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/23996"">#23996</a></li>
<li>Enable NTLM v2 for POSIX platforms and added --disable-ntlm-v2 switch to disable it. <a href=""https://github-redirect.dependabot.com/electron/electron/issues/23934"">#23934</a></li>
</ul>
<!-- raw HTML omitted -->
</blockquote>
</details>
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/electron/electron/commit/a822d2639a9c9c2c670e91d73f78e921865ce38e""><code>a822d26</code></a> Bump v9.1.0</li>
<li><a href=""https://github.com/electron/electron/commit/9d6ac058c9ba09e5211cd703675f70901468ca5a""><code>9d6ac05</code></a> feat: expose sessionId in debugger module (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24398"">#24398</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/cbe66f27e725070c7c0c590a2e485978a554be19""><code>cbe66f2</code></a> fix: intermittent 100% CPU usage on macOS (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24415"">#24415</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/4f10bde056d5fe175f338b5bc7b04baf422df5bb""><code>4f10bde</code></a> feat: implement systemPreferences.getMediaAccessStatus() on Windows (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24275"">#24275</a>) ...</li>
<li><a href=""https://github.com/electron/electron/commit/473c7dbe734fd2df68fa68f3a344e3a0222dfbf8""><code>473c7db</code></a> chore: use node_bindings loop for clarity (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24418"">#24418</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/4515c4db00d94175179e47b0c4d05d7d4f0074a7""><code>4515c4d</code></a> feat: add app render-process-gone event (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24315"">#24315</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/6dd394a155116cec542656165973a7888fe3938f""><code>6dd394a</code></a> fix: remove same-tag notifications before showing new ones (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24406"">#24406</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/4ace4995c81f1b04ab99cc1707d037e9972e1316""><code>4ace499</code></a> feat: MessagePorts in the main process (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24323"">#24323</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/71e329663e24fa4773dd4bdbf8fe71844de87bb8""><code>71e3296</code></a> feat: add new render-process-gone event (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24309"">#24309</a>)</li>
<li><a href=""https://github.com/electron/electron/commit/67002fdf11b7329cdba2e70ace583cb0b853e4cc""><code>67002fd</code></a> fix: macOS modal focus (<a href=""https://github-redirect.dependabot.com/electron/electron/issues/24354"">#24354</a>)</li>
<li>Additional commits viewable in <a href=""https://github.com/electron/electron/compare/v1.8.8...v9.1.0"">compare view</a></li>
</ul>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=electron&package-manager=npm_and_yarn&previous-version=1.8.8&new-version=9.1.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'dependencies']"
558,444436425,10260,3834332,2020-07-05 17:26:50,2020-07-07 01:02:29,closed,"#8448 Fix typo ""do no yet work"" -> ""do not yet work"" in bokeh/sphinx/source/docs/user_guide/interaction/legends.rst","This PR is intended to fix a typo found in `bokeh/sphinx/source/docs/user_guide/interaction/legends.rst`

It originally contained ""automatically group do no yet work with the"".
I have replaced it with ""automatically group do not yet work with the"".

This is intended to help with efforts in #8448.

Related issue: #8448",3,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
559,444338318,10259,3834332,2020-07-04 23:30:11,,open,Add support for scalable text,"This is an early WIP experiment that implements scalable text without depending on CSS support.

There are a few reasons why not to rely on CSS:

1. Support for `vh`, `vw`, `vb` and `vi` is spotty or non-existent (across supported browsers).
2. It's not clear what viewport or containing block means in the context of bokeh's components and supported embedding modes. Exposing CSS spec directly may expose internal implementation details (e.g. consider DOM layout vs. canvas based grid plots).
3. Integration with layout and reaction to viewport/block changes have to be done manually anyway.
4. Font metrics' caching.

fixes #9407",2,1,['status: paused']
560,444324413,10257,3834332,2020-07-04 20:20:23,2020-07-04 20:53:43,closed,Misc warnings cleanup,"This silences deprecation warnings in the docs build that show up when documenting deprecated things in the reference guide (cc @p-himik I think you had asked about this). My position is that once something is deprecated, it should generally *only* be documented in the reference guide, so an attempt has been made to allow deprecation warnings to still show in other cases. As of this PR, the docs build is 100% clean. 

This also clears the [one LGTM warning we currently have](https://lgtm.com/projects/g/bokeh/bokeh/snapshot/fe2ff065437c33d13b6916e1a679ab1be9bba816/files/bokehjs/src/lib/core/util/pretty.ts?sort=name&dir=ASC&mode=heatmap#xea8aa1d026c79741:1) cc @mattpap I assume you know and intend things to be as they are in this case but noting, just in case. ",1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
561,444222739,10256,3834332,2020-07-04 01:12:00,2020-07-04 08:07:34,closed,Deprecate Oval,"- [x] issues: fixes #10252
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
562,444220148,10255,3834332,2020-07-04 00:39:11,2020-07-04 01:10:45,closed,fix Select.options type,"- [x] issues: fixes #10174

",0,1,['status: accepted']
563,444198170,10254,3834332,2020-07-03 21:31:18,2020-07-03 22:01:51,closed,Descriptive error,"Updated pull request to different branch for PR #10243.

*  issues: fixes #3653 ",1,5,['status: accepted']
564,444142672,10253,3834332,2020-07-03 17:13:08,2020-07-03 17:44:55,closed,"Revert ""ClientSession: Add different error messages (Close #3653)""",Reverts bokeh/bokeh#10243 (merged to master instead of branch-2.2` by mistake),1,1,"['status: accepted', 'type: task', 'reso: completed']"
565,442563043,10250,3834332,2020-07-01 09:20:59,2020-07-01 15:36:20,closed,Fix CanvasView.save() to configure device pixel ratio correctly,"fixes #10249
",1,3,['status: accepted']
566,441870065,10247,3834332,2020-06-30 08:32:18,2020-06-30 09:45:00,closed,Don't paint a plot with visible == false,"fixes #10246 
",0,1,['status: accepted']
567,441763859,10245,3834332,2020-06-30 03:41:41,2020-07-01 17:04:18,closed,Issues script revamp,"Updates the script to work with the new milestone process.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/10213

## Check Only Mode
- [x] Relevant issues/PRs are those for the current specified milestone
- [x] All issues in the milestone should be closed, with a reso:completed
- [x] All PRs in the milestone should be closed/merged with status:accepted
- [x] Any PR with a type label (an ""issue PR"") also needs reso:completed
- [x] There should only ever be one reso or status label applied.
- [x] All issues sholud have a type
- [x] Allowed types: bug, feature, task
- [x] Nothing should have TRIAGE label
- [x] All issues/PRs should be closed

## Update Mode
- [x] Should do all the checks from check only mode first
- [x] Group by bugfix, feature, task
- [x] Include component label, if present
",5,3,['status: accepted']
568,441489095,10244,3834332,2020-06-29 15:25:02,2020-07-02 08:04:31,closed,"Handle type=""module"" w/o entry point packages","At this point this is a partial fix. The other part is dealing with luma's strange attitude to bypass standard module imports and go straight to CJS modules from ES modules.

addresses #10230",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
569,441405572,10243,3834332,2020-06-29 13:13:43,2020-07-02 23:29:40,closed,ClientSession: Add different error messages (Close #3653),"As mentioned in issue #3653 the error messages from
ClientSession.pull and ClientSession.push did not take the cause of the
connection loss into account.

Therefore we add different Disconnected States to the client/states.py
to distinguish the reason of the connection loss and store information
about the error itself (error id, error message). Those information is
accessible through the ClientConnection class and is used in the
ClientSession to create more descriptive error messages.

- [x] issues: fixes #3653 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,5,['status: accepted']
570,441358132,10242,3834332,2020-06-29 11:57:19,2020-06-29 12:52:10,closed,Restore linting of bokehjs' codebase,fixes #10086,0,4,['status: accepted']
571,441322878,10241,3834332,2020-06-29 11:07:04,2020-06-29 12:51:37,closed,Allow to resize images in visual tests,"A long overdue feature of our visual tests.
",0,3,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
572,441289303,10240,3834332,2020-06-29 08:41:37,2020-07-14 10:29:59,closed,Corrected EqHistColorMapper with inverted colormap edge transform,"Continues the incomplete work from #8765. This PR is currently working but a few important issues need to be addressed so it should be considered WIP. This PR is branched off @mattpap's work which will allow the colormapping to dynamically update in response to viewport and selection events.

### Problem being addressed 

PR #8765 attempted to bring the functionality of datashader's histogram equalization (originally from scikit image) to Bokeh. While a lot of work was done in that PR to port the algorithm as closely as possible to Typescript with some success, the PR did not achieve the correct mapping as the transform applied by datashader and required by Bokeh for colormapping are two different things.

The datashader (and scikit image) algorithm are designed to distort the *image data* while the goal here is to supply an appropriately distorted *colormap*. This is crucial as inspection of the data with say the Bokeh hover tool should reveal the true data values, not some distorted representation of it.

These two transforms are in a sense inverse mappings: the eqhist algorithms on exponentially distributed data input effectively acts like a logarithmic transform to flatten it. Trying to achieve the same visual representation of this data after eqhist requires a colorbar where the bins grow exponentially so that a wide range of large values map to the same color. Of course this is just an illustration: the difficulty is that the data can have *any* distribution that needs to be equalized.

Figuring out this reverse mapping was quite tricky and there are still some issues to address (described below) but this PR does show one approach that is based off the original datashader/scikit image algorithm (which is much faster than a completely naive algorithm). The mapping process should be quick as it operates in the space of the color palette (e.g 256 color bins instead of the NxM samples of the input image).


### Matplotlib reference (eqhist applied to the data):

![image](https://user-images.githubusercontent.com/890576/85988789-2d647980-b9b5-11ea-93f3-b2dd5f9ac294.png)

Linear colormap on the left, eqhist on the right.

### Output from this PR

![image](https://user-images.githubusercontent.com/890576/85988458-a6af9c80-b9b4-11ea-96b3-957d559a8a53.png)

Linear colormap on the left, eqhist on the right.

## Open issues

The biggest problem is that although the core eqhist transform *should* be 1-to-1 i.e monotonically increasing input *should* map to monotonically increasing output. However, both in the Python and Javascript implementations (including the original datashader code), two *different input* values, say **A** and **B** can map to the *same* output value, say **A'**. I believe that in the mathematic ideal, everything is correct but somehow, either due to finite input samples or floating point precision issues, the CDF based algorithm has this problem in practice.

This means that bin edges passed in to the algorithm can result in zero width bins which then result in zero division errors when applying the inverse transform. These zero width bins are conceptually problematic and shouldn't ever appear even in the base Python algorithm, but they do. As a bin of zero width has no information inside it, no inverse transform will be able to handle them.

This PR does two things to try to alleviate this issue:

1. Merge histogram bins with zero counts before computing the CDF so all bins have at least one sample (now the bin sizes will vary). This helps avoid flat portions of the CDF curve which would result in zero bin width during interpolation. In my tests  in Python (so far) this doesn't affect the visual output but I need to check whether this has an effect if the number of sample values is sparse.
2. Trim off problematic zero-width bins (and edges > 1) off the tail boundary. In this PR this is done by removing edges `> 0.999` (which is close to the end of the required distribution which ends at 1.0). Presumably there is a similar potential issue at the lower boundary. There is a related problem after interpolation with `np.interp`. 

These changes will need to be considered and justified carefully. Meanwhile, where is one issue I do know how to fix which involves mapping bin centers back to edges (which hopefully will close the remaining visible gap between the Bokeh implementation and the matplotlib reference).


### TODO

Before a detailed code review, these items need to be addressed:

- [ ] Fix the edge distribution by mapping palette bin centers back to edges.
- [ ] Remove zero width bins after interpolation in a more principled way (slicing off the end won't help if there are zero width bins in the middle).
- [ ] Figure out how to handle edges that are slightly greater than 1.0 after interpolation.
- [ ] Decide whether dropping zero counts is ok for the CDF and test with data with sparse value distributions.
- [ ] Decide on how to address boundary issues after interpolation correctly.
- [ ] Testing",13,19,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
573,441187746,10239,3834332,2020-06-29 04:27:35,2020-06-30 16:22:32,closed,Release Automation (pt 1),"This PR adds automation scripts that can be run locally to generate releases. Later work will integrate this in to the CI system.

Note that I wish to keep everything under the `release` dir formatted with `black` so I have added a test and test dependency on `black`.

The PR deleted everything previously in the `release` directory. For purposes of review, the second commit https://github.com/bokeh/bokeh/commit/ad7432c064fa8f164d7b69c39332e20f73236433 can be reviewed in isolation. 

Assuming the necessary secrets are set in expected environment variables, then the follow code can be run:

```python
from release.config import Config
from release.system import System

config = Config(""<version>"")
system = System()

from release.pipeline import Pipeline
from release.stages import BUILD_CHECKS, BUILD_STEPS

# this will make many checks and validations including checking and collecting credentials
check = Pipeline(BUILD_CHECKS, config, system)
check.execute()

# this will build release assets, deployment tarball, tag and push changes back to GitHub
build = Pipeline(BUILD_STEPS, config, system)
biuld.execute()
```

This will generate a `deployment-<version>.tgz` tarball with the contents:

* conda package
* sdist package
* `bokehjs/build` directory
* `sphinx/build/html` directory
* `sphinx/version.json` file

Additionally, the BokehJS bundles are uploaded to CDN (so that package candidates can be smoke-tested) and the file updates and tag are merged back to the base branch and pushed to GitHub.

Eventually the deployment tarball will be uploaded some location (probably S3). For now it is simply saved locally. Once the packages in assets in the tarball have been given basic smoke tests, they can be published manually. Later, more automation will consume the deployment tarball and publish assets automatically. 

I do also want to add tests for this code but I'm not sure yet the best approach, since it is located off the main bokeh source path and is not installed as part of the package. ",4,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
574,441127296,10238,3834332,2020-06-28 22:57:11,2020-06-29 01:26:19,closed,Fix windows docs build issues,"Fixes:

* broken `make clean` 
* output to wrong build dir",0,3,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed', 'plat: windows']"
575,441046678,10237,3834332,2020-06-28 12:02:39,2020-07-08 15:26:00,closed,Improve performance of hover tool and tooltips,"This improves various aspects of generating HTML tooltip content by hover tool. 

fixes #10234 
",1,1,['status: accepted']
576,440884107,10236,3834332,2020-06-27 08:54:00,2020-06-28 07:59:45,closed,Update tooltips in bulk instead of individually,"This doesn't improve that much, but is an obvious low changing fruit.

addresses #10234",0,1,['status: accepted']
577,440883707,10235,3834332,2020-06-27 08:49:13,2020-07-09 12:29:45,closed,"Redesign ""materialization"" of data specs","This PR achieves several goals:

1. All data initialization is now explicit, i.e. no guessing in super-classes what properties a glyph may implement.
2. What can be a typed array is a typed array. This is to allow almost zero-copy data transfer between threads.
    - Nested arrays are stored as flat `RaggedArrays` (typed arrays with offsets into subarrays).
    - Colors are stored as packed 32-bit integers.
3. Transforms are computed in-place whenever it is allowed.",6,25,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
578,440379022,10231,3834332,2020-06-26 04:50:22,2020-07-19 03:36:27,closed,Addition of InfoPane Model,"This PR aims to add the InfoPane model that can be directly used to position and display stings in plots similar to the Tooltip. Currently, the tool takes a single string rather than a list and does not support pane stacking. It would be great if anyone could provide suggestions for that.
Also, the position of the arrow displayed is relative to the anchor that can be changed if needed.
- [ ] issues: fixes #10206 
",18,19,['status: declined']
579,439556137,10229,3834332,2020-06-24 22:41:37,2020-07-10 07:12:21,closed,Redesign the implementation of CDSView's filters,"This is an experiment that attempts to incorporate the bit set data structure for storing indices. Bit set is implemented on top of `Uint32Array`, but a future implementation may support `BigUint64Array` as well. The main benefit of this approach is that indexing can happen in fixed memory, 64x smaller than an equivalent ""unpacked"" array based index (`number[k]` is 8*k bytes; 1 byte is 8 indexes, so one needs k/8 bytes to hold the same number of indices), and set operations (union, intersection, difference) between two or more sets of indices, can happen in bulk, 32 or 64 indices per iteration (as bitwise operations). The main assumption is that indices are typically dense, which is often true, but not always (e.g. inspection indices).

fixes #10089",0,13,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
580,439343784,10227,3834332,2020-06-24 17:22:47,2020-06-24 19:29:35,closed,Forward merge from 2.1.1,"This is a forward merge of changes on `branch-2.1` for the `2.1.1` release. 

As a side note @mattpap @bokeh/core we really will need to eventually develop some automation (or manual process) and tagging to help keep track of: 

* backports to previous minor release branches
* forward ports from patch release milestones to the current development branch",3,3,"['status: accepted', 'type: task', 'reso: completed']"
581,439104946,10226,3834332,2020-06-24 10:10:54,2020-06-24 19:58:32,closed,"Optimize `HasProps.setv(attrs, {silent: true})`","This is a quick and easy change to improve initialization speed, because when `silent === true`, we can skip all the `setv()` logic and get to updating values of properties directly.
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: performance']"
582,438836259,10225,3834332,2020-06-23 21:39:18,2020-06-24 20:52:33,closed,Improve performance by replacing _build_discontinuous_regions(),"`Patches._build_discontinuous_regions()` is very inefficient, especially memory utilization-wise, due to high GC churn. It's more efficient to just iterate over `NaN` separated regions and use `TypedArray.subarray()` to create data views for other functions to use. Additionally I also merged `scenterx()` and `scentery()` into one method, as those often had repeated logic and required computing things twice.
",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: performance']"
583,438240272,10222,3834332,2020-06-23 00:13:08,2020-06-23 00:42:22,closed,Fixes for sphinx 3.1.1,"A new version of Sphinx has broken the docs build on the main branch. Our usage of `figure` as a function name and as a submodule under `bokeh.plotting` confuses it, but it seems fine to simply document the transitively imported function directly at this point. 

An issue with documenting GMapOptions was also improved. 
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
584,438103628,10220,3834332,2020-06-22 18:17:13,2020-06-23 08:42:45,closed,Fix Rect glyph placement with partial categorical ranges,"fixes #10219 
",0,3,['status: accepted']
585,437762891,10217,3834332,2020-06-22 08:10:12,2020-06-22 08:49:58,closed,Update Arrow when the data source is changed,"- [x] issues: fixes #9436
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,1,['status: accepted']
586,437756681,10216,3834332,2020-06-22 07:58:37,2020-06-22 08:55:27,closed,Update Band when the model is changed,"- [x] issues: fixes #10215
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
587,437593989,10212,3834332,2020-06-21 20:04:49,2020-06-21 20:44:56,closed,Release notes for 2.1.1,Update release notes for 2.1.1,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
588,437388344,10208,3834332,2020-06-20 09:11:22,2020-06-21 09:31:36,closed,Rewrite gloo in TypeScript and add it to bokehjs,"I think that if we want to commit to improving the webgl backend, we need to stop treating its implementation as a blackbox. The first step towards this direction is to get rid of the nasty auto-generated code and replace it with something that can be actually read and modified. Thus this PR rewrites gloo auto-generated code with TypeScript and adds it to bokehjs (dropping the dependency on `@bokehjs/gloo2`). For now I just did a straight rewrite to modern ES and reasonably statically typed the code. I didn't do any attempts to simplify or improve the implementation otherwise.",7,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: webgl']"
589,437317870,10204,3834332,2020-06-19 22:26:01,2020-06-20 04:11:32,closed,return typed arrays as lists,This is a back port of the first two commits from https://github.com/bokeh/bokeh/issues/10153 ,1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
590,437214845,10202,3834332,2020-06-19 17:14:19,2020-06-20 16:52:19,closed,A basis for sub-coordinate systems,"This is an internal and partial ""refactoring"" that lays the ground for a proper implementation of sub-coordinate systems. From users' perspective nothing changes for now. Internally, renderers now access their coordinate system information (ranges, scales) and transforms through a ""scope"". Global `map_{to,from}_screen()` methods are gone. `{x,y}_range_name` is only used for scope creation and renderers should not query the frame directly anymore. For now ""scope"" it a simple mapping between data and screen coordinate systems, derived from `CartesianFrame`. However, in future this will allow for (user) configurable coordinate system, and, in particular, mapping or nesting coordinate systems.",4,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
591,437028609,10201,3834332,2020-06-19 10:42:29,2020-06-19 11:41:40,closed,Drop layout's computed variables in favour of bbox,"Extracted from PR #9964, to simplify that PR.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
592,437020354,10200,3834332,2020-06-19 10:25:12,2020-06-19 11:41:14,closed,PlotLayout -> core.layout.BorderLayout,"Extracted from PR #9964, to simplify that PR.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
593,436802164,10198,3834332,2020-06-18 22:58:52,2020-06-19 12:44:12,closed,Allow NaN/Infinity in projections,"fixes #10193
",0,2,['status: accepted']
594,436504631,10194,3834332,2020-06-18 14:18:03,2020-08-03 15:59:10,closed,Improvements to color mapping and color bars,"This is based on PR #8743 and #8765.

fixes #8924
",2,20,['status: accepted']
595,436092347,10192,3834332,2020-06-17 20:58:19,2020-06-21 19:43:16,closed,Fix bokehjs' property mixins to match bokeh,"fixes #10181
fixes #10197
",2,2,['status: accepted']
596,435956617,10190,3834332,2020-06-17 16:15:23,2020-08-03 18:55:38,closed,Introduce NumericInput and redesign Spinner widget,"Following the dicussion on https://github.com/bokeh/bokeh/issues/10179
I propose a first implementation of a `NumericInput` widget
From which I hope to derive a `Spinner` which will not depend of the browser implementation

I'll tag it as a WIP, feel free to add your suggestions

",13,13,['status: accepted']
597,435870356,10188,3834332,2020-06-17 13:57:18,2020-06-18 01:54:49,closed,Relativize imports of auto-generated modules,"fixes #10172
",0,1,['status: accepted']
598,435546786,10187,3834332,2020-06-17 01:18:25,2020-06-18 23:25:40,closed,Fix typo in docs.,Change Minimal to Maximal for max_width and max_height in bokeh/models/layouts.py.,2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
599,435533201,10186,3834332,2020-06-17 00:25:18,2020-10-21 12:40:30,closed,Allow to store buffers separately from JSON,"This allows to store buffers separately from JSON representation when using standalone HTML files, improving load performance, because buffers don't have to be JSON-parsed and reduces output size, because of base64 encoding. Buffer data is stored as data-urls encoded in `<script>` tags, e.g.:
```html
<script type=""application/octet-stream"" data-bokeh-buffer=""ID"">
data:application/octet-stream;base64,DATA
</script>
```
This is early work in progress. This amends the protocol, so it's a breaking change, however, it may be possible to allow this in 2.x branch behind a flag.",1,1,"['type: feature', 'status: superseded']"
600,435482369,10185,3834332,2020-06-16 21:43:45,2020-07-30 09:44:57,closed,Fill in the gaps in bokehjs' property definitions,"Currently bokehjs' properties consist of property declarations (`Props` type/interface) and property definitions (`HasProps.define()`), which implement properties at run time. The former are fairly well typed (up to `nul` handling), as they use TypeScript's type system. However, the later are not, with a lot of `p.Any` and/or poorly typed definitions or mismatches with `Props`. This PR attempts to fix this, filling in the gaps which will allow more robust validation, etc. Given the design, this may also allow to remove property type declarations, because with this approach, such declarations can be inferred from definitions.",0,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
601,435215772,10180,3834332,2020-06-16 13:31:23,2020-06-20 14:03:30,closed,[Spinner] Allow any number when using step=None,"- [x] issues: fixes #10179
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,3,['status: superseded']
602,435133490,10178,3834332,2020-06-16 10:51:21,2020-06-16 16:18:13,closed,Websocket local origin: use port returned by bind_sockets,"- [x] issues: fixes #10175
- [x] tests added / passed
",3,1,['status: accepted']
603,435094770,10176,3834332,2020-06-16 09:37:59,2020-06-16 20:02:03,closed,Ensure typed arrays are used for storing numerical data,"This is a transitional PR, so existing and a few new hacks will be removed in near future work. This PR ensures that all fields of `*Data` interfaces are stored as typed arrays whenever applicable (e.g. excluding `TextData.text`, because there is no typed array for storing strings). This ensures that projections, `v_synthetic()` and other array to numerical array transforms return typed arrays (`type NumberArray = Float64Array` to be specific).",1,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: performance']"
604,434882597,10173,3834332,2020-06-15 23:41:40,2020-06-18 23:15:22,closed,bokehjs: harea and varea implemented,"This PR is the implementation of the harea and varea function for bokehjs

- [x] issues: closes #9956 
",3,1,['status: accepted']
605,434688600,10170,3834332,2020-06-15 17:59:00,2020-06-16 21:32:57,closed,Make all renderers respect visible property,"fixes #10147
",0,7,['status: accepted']
606,434054945,10165,3834332,2020-06-13 20:43:29,2020-08-04 16:31:27,closed,Fall back to inline resources if CDN is not available,"- [x] unit tests

fixes #10164 ",0,2,['status: accepted']
607,434050161,10163,3834332,2020-06-13 20:06:03,2020-06-16 10:03:59,closed,Don't sort indices by distance in _hit_point(),"@bryevdv, this PR is more of a question rather than a task right now. Why indices were sorted by distance in `Glyph._hit_point()`, especially given that they are ultimately stored in a `Selection`, which doesn't specify any explicit (well, besides the natural) order? No other geometry has any similar behavior. ",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
608,434001957,10162,3834332,2020-06-13 12:43:43,2020-06-18 22:37:16,closed,Reduce memory footprint of data indexing,"Currently data indexing is very inefficient, because it doesn't work in fixed memory, doesn't use typed arrays and creates a lot of intermediate objects. However, the underlying spatial indexing library (`flatbush`) is very efficient.

This PR does the following:

- no intermediate objects are created during indexing
- data is transferred directly from data arrays to the index (typed array to typed array)
- the index is pre-allocated and doesn't require intermediate reallocations

The size of the index is defined as the length of the shortest column in a data source (all columns should be of the same length in general, but this still isn't enforced).

~~This is based on PR #10161~~.",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
609,433999250,10161,3834332,2020-06-13 12:17:22,2020-06-15 11:49:51,closed,Redefine min()/max() and introduce minmax() function,"`NaN` is now ignored in `min()` and `max()`, which simplifies code that uses those functions. Added `minmax()` where `min()` and `max()` was used previous on the same data, to reduce number of iterations over data.",0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
610,433823183,10159,3834332,2020-06-12 18:19:28,2020-06-12 20:46:52,closed,Prefer inclusive language,"This PR removes our usage of the names `whitelist` and `blacklist`. 

This affects two util functions:

*  `check_whitelist`
 * `create_hosts_whitelist`

These are technically public (dev) API, but in practice there is no reason for anyone to use these outside the library internals. ",1,2,"['status: accepted', 'type: task', 'reso: completed']"
611,433606911,10158,3834332,2020-06-12 10:45:00,2020-07-19 03:36:51,closed,Addition of Measure Tool,"This pull request aims to the addition of the feature Measurement tool. At the current, it uses box annotation instead of a line that needs to be changed and the code contains a bit of unnecessary data that must be fixed.
- [ ] issues: fixes #10100 
",5,3,['status: declined']
612,432942558,10154,3834332,2020-06-11 09:08:21,2020-06-15 09:50:56,closed,Fix serialization of typed arrays,"- [x] unit tests

fixes #10153
",4,7,['status: accepted']
613,432458432,10150,3834332,2020-06-10 13:32:35,2020-07-04 07:44:33,closed,Adding theme-GGPLOT ,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

![](https://i.imgur.com/3BbjFeU.png)
![](https://i.imgur.com/Glu9eoa.png)",4,3,['status: WIP']
614,432335882,10148,3834332,2020-06-10 09:41:35,2020-08-12 17:35:50,closed,Update js_event_callbacks so that change events trigger,"- [ ] add an integration test

fixes #10146
",1,1,['status: accepted']
615,432266084,10145,3834332,2020-06-10 07:42:42,2020-06-10 12:59:43,closed,Adding a theme- ggplot,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #10028 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
No Test Added//
![](https://i.imgur.com/3BbjFeU.png)
![](https://i.imgur.com/Glu9eoa.png)",4,11,['status: superseded']
616,432090990,10144,3834332,2020-06-09 22:08:08,2020-06-09 22:42:45,closed,#10142_Weather_example_scipy,"issues: fixes #10142
type:bug
after the comment from bryevdv to rempve comma between install commands. 
",1,3,['status: accepted']
617,432065023,10143,3834332,2020-06-09 21:06:08,2020-06-09 22:30:27,closed,#10142 updated the README,"type:bug
issues: fixes #10142 
",3,1,['status: superseded']
618,431954985,10141,3834332,2020-06-09 17:19:48,2020-06-10 00:46:03,closed,Prevent header from hiding anchors in the documentation,"- [x] issues: fixes #10103
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

",3,2,['status: accepted']
619,431931440,10140,3834332,2020-06-09 16:40:03,2020-06-09 18:11:35,closed,Fixed typo when registering Google Colab comms,Made a stupid typo in registering the Google Colab comm target.,1,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: notebook']"
620,430600200,10133,3834332,2020-06-08 02:18:20,2020-06-08 04:30:29,closed,Allow using string for EditTool empty_value,"Very simple addition, adding String to the acceptable EditTool.empty_value types.

- [x] issues: fixes #10132
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
621,430536125,10130,3834332,2020-06-08 00:50:30,2020-06-08 01:19:29,closed,2.1 updates,"Release-ready updates for 2.1 (release notes) plus some docs fixes, improvements, and changes. Also this small issue:

- [x] issues: fixes #10128

Also had to revert #10104 due to some unintended render issues it caused. 

",0,8,"['status: accepted', 'type: task', 'reso: completed']"
622,430529848,10129,3834332,2020-06-08 00:41:53,2020-06-09 12:04:41,closed,Restore examples' images and upload as an artifact,,1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
623,430065450,10127,3834332,2020-06-07 13:25:31,2020-06-07 16:54:17,closed,Restore and deprecate HasProps.serializable_attributes(),"fixes #10126 
",0,1,['status: accepted']
624,429400080,10124,3834332,2020-06-06 19:40:38,2020-06-07 06:04:49,closed,Fully repaint canvas after layout resize,fixes #10123 ,0,4,['status: accepted']
625,427975144,10119,3834332,2020-06-04 17:11:14,2020-06-04 19:28:25,closed,Fix a typo in docs,"
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
626,427782735,10117,3834332,2020-06-04 11:53:21,2020-06-04 22:25:16,closed,Fix compatibility issues with Chrome 83,"fixes #10116
",0,4,['status: accepted']
627,427408864,10115,3834332,2020-06-03 19:32:11,2020-06-07 19:30:33,closed,Support push_notebook in Google Colab,"Totally untested so far but following the APIs provided by Colab. Trying to figure out how to try this out on Colab now.

- [x] issues: fixes #9302
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",16,4,['status: accepted']
628,427158811,10114,3834332,2020-06-03 12:06:55,2020-06-04 09:26:50,closed,Resolve issues with resizing and clearing SVG canvas,"Can be tested with:
```py
from bokeh.plotting import figure, save
from bokeh.layouts import row

def f(output_backend):
    p = figure(tools=""crosshair"", output_backend=output_backend)
    p.scatter([1, 2, 3], [1, 2, 3])
    return p

save(row(f(""canvas""), f(""svg"")))
```
Both plots should look exactly the same under mouse movement.",1,5,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
629,427141204,10113,3834332,2020-06-03 11:30:46,2020-06-04 00:22:28,closed,Cache measurements in HTML-based widgets,"When tested with:
```py
from bokeh.models import Div
from bokeh.layouts import column, row
from bokeh.io import save

def divs(i):
  return [ Div(text=f""Text i={i} j={j}"") for j in range(20) ]

c0_0 = column(divs(1))
c1_0 = column(divs(10))
c2_0 = column(divs(100))
c3_0 = column(divs(1000))

c0_1 = column(divs(2))
c1_1 = column(divs(20))
c2_1 = column(divs(200))
c3_1 = column(divs(2000))

r0 = row(c0_0, c1_0, c2_0, c3_0)
r1 = row(c0_1, c1_1, c2_1, c3_1)

c = column(r0, r1)
save(c)
```
gives ~4x speed improvement.

fixes #9515
",1,1,['status: accepted']
630,427106394,10112,3834332,2020-06-03 10:22:09,2020-08-18 21:16:45,closed,Fix updating of MultiChoice widget,fixes #9927,15,2,['status: accepted']
631,427086170,10111,3834332,2020-06-03 09:42:59,2020-06-03 15:25:26,closed,Issue a validation error on repeated layout children,"fixes #9971
",0,1,['status: accepted']
632,427036924,10109,3834332,2020-06-03 08:12:47,2020-06-15 07:22:35,closed,Redesign assertions in bokehjs' tests,"fixes #10083
",6,28,['status: accepted']
633,426445652,10106,3834332,2020-06-02 08:54:42,2020-06-02 15:20:14,closed,Fix `cd sphinx; make serve`,"- [x] issues: fixes #10105
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
634,426442072,10104,3834332,2020-06-02 08:48:08,2020-06-02 15:24:17,closed,Prevent header from hiding anchors in the documentation,"- [x] issues: fixes #10103
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,1,['status: accepted']
635,425859821,10101,3834332,2020-06-01 09:30:04,2020-06-07 06:07:01,closed,Drop examples' baseline and image testing,,0,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
636,425649121,10099,3834332,2020-05-31 18:14:50,2020-06-01 09:00:53,closed,AutocompleteInput case insensitive completion functionality added per #9922 request,"I've added case insensitive completion to the AutocompleteInput widget. I figured the case_sensitive property should be False (case insensitive matching) by default but lmk if it should be the inverse. I've added two tests, one for case_sensitivity and one for case_insensitivity. This functionality was requested in issue #9922. I should note I've been using this new version of the AutocompleteInput widget for a covid-19 dashboard I built https://speediedan.github.io/covid19/county_covid_explorer.html for several weeks without issue. Thanks for this immensely useful library! This is my first PR on the project but I'm really impressed by the community here!
Dan

- [x] issues: fixes #9922  
- [x] tests added / passed
  - test_autocomplete_input.py::Test_AutocompleteInput::test_case_insensitivity
  - test_autocomplete_input.py::Test_AutocompleteInput::test_case_sensitivity
- [x] release document entry (if new feature or API change)
   - AutocompleteInput widget now supports case insensitive completion :bokeh-issue:`9922`
",1,2,['status: accepted']
637,425539960,10097,3834332,2020-05-31 00:16:36,2020-08-27 23:47:19,closed,Add support for versioned BokehJS script tags and CDN urls,"- [x] issues: fixes https://github.com/bokeh/bokeh/issues/9919

Failed PR: https://github.com/bokeh/bokeh/pull/10075",14,22,['status: declined']
638,425528547,10096,3834332,2020-05-30 21:56:53,2020-05-30 21:59:02,closed,"Revert ""Add support for versioned BokehJS script tags and CDN urls""",Reverts bokeh/bokeh#10075,1,1,"['status: accepted', 'type: task', 'reso: completed']"
639,425441999,10095,3834332,2020-05-30 09:39:05,2020-06-03 15:27:36,closed,React to changes to Toolbar.active_* properties,"fixes #4567
fixes #10107 ",0,2,['status: accepted']
640,425387989,10093,3834332,2020-05-30 00:45:21,2020-06-07 06:37:43,closed,add tile provider demo to showcase all basemap tile providers (no external dependencies),"This PR attempts to re-submit a similar graphic map tile provider demo but has no external dependencies for coordinate conversion. The `bokeh_tile_demo.py` should work as a self-contained function to plot 10 different tile providers currently available in Bokeh.

I'm not the lint expert (or novice). Need help with final details. The code should work now with:
`python3 bokeh_tile_demo.py`

Previous PR: https://github.com/bokeh/bokeh/pull/9710

Issue: https://github.com/bokeh/bokeh/issues/9704

- [ X ] issues: fixes #9704
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",20,23,['status: accepted']
641,425207558,10091,3834332,2020-05-29 16:39:49,2020-05-29 18:22:36,closed,Update 2.1.0.rst,"Accidentally committed the actual change to master in b966fa43dfadee3438b81ab037511cee2cba8d5e This is a PR to note that, and also update the release notes.

ref: https://stackoverflow.com/a/62082505/3406693 @p-himik noticed we rely on a feature added in 5.1",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
642,424886787,10088,3834332,2020-05-29 05:03:00,2020-05-29 05:45:25,closed,only use local bokeh package in tests,"Not sure whats up, everything passed multiple times in PR but now on master reliably installs the wrong (release) version of Bokeh in three tests. This attempts to make sure that only the local artifact package is ever installed. 
",2,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
643,424559542,10085,3834332,2020-05-28 15:19:45,2020-05-29 02:11:08,closed,Make menus usable with tool proxies,"Additionally makes some stylistic improvements.

![image](https://user-images.githubusercontent.com/27475/83194335-c5faa600-a138-11ea-9b47-30c99f3a3260.png)
",1,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
644,424437894,10084,3834332,2020-05-28 11:56:49,2020-05-29 17:05:04,closed,"More usage of Map<K, V> and Set<V>","In particular this rewrites `FactorRange` using `Map` as mappings instead of plain objects. Additionally I removed all usage of `HasProps.id` that isn't completely necessary (e.g. where `toString()` can be used instead in error/log formatting, etc.).",0,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
645,424180740,10080,3834332,2020-05-28 00:26:30,2020-05-28 04:26:33,closed,use semi-stranparent button background highlight,"cc @bokeh/dev 

- [x] issues: fixes #9909

The color here is chosen purely by experimentation. Open to any other suggestions for CSS styling to improve. Ultimate I think perhaps we should expose properties on the toolbar to control bg color and possibly blend mode. 

<img width=""153"" alt=""Screen Shot 2020-05-27 at 5 28 47 PM"" src=""https://user-images.githubusercontent.com/1078448/83085041-987e0180-a03f-11ea-9860-35d9f79658e2.png"">
<img width=""97"" alt=""Screen Shot 2020-05-27 at 5 28 54 PM"" src=""https://user-images.githubusercontent.com/1078448/83085044-99169800-a03f-11ea-8041-9ba690cb7348.png"">



",1,1,['status: accepted']
646,423751766,10077,3834332,2020-05-27 10:18:49,2020-05-27 10:42:02,closed,Resolve F541 after upgrading to flake8 >=3.8,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
647,423730823,10076,3834332,2020-05-27 09:38:18,2020-05-27 23:22:36,closed,Don't re-renderer Select widget when value changes,fixes #9972,0,1,['status: accepted']
648,423573022,10075,3834332,2020-05-27 02:48:00,2020-05-30 21:25:00,closed,Add support for versioned BokehJS script tags and CDN urls,"- [x] issues: fixes https://github.com/bokeh/bokeh/issues/9787
- [x] issues: fixes https://github.com/bokeh/bokeh/issues/9919

TODO:
- [x] remove ""x.y.z.min.js"" script tags/urls
- [x] add check for ""hashes"" in new template file
- [ ] clean up commits",11,16,['status: accepted']
649,423232704,10074,3834332,2020-05-26 14:13:47,2020-06-07 16:56:52,closed,"Fixed #10038 (Tornado, UI/UX, Search feature improvement)","addresses #10038

1. Makes it compatible with Python 3.8 + Windows 10 config. (complete)

There are more changes to the `sphinx/_build/search.html`, `sphinx/_build/index.html` and `latest/_static/searchtools.js`, but since these generate only once a `sphinx-build` command is run, I am not sure how to go about contributing to those.    

Do let me know how that is supposed to be done! Maybe I can commit the code in the `docs.bokeh.org` repository?

Thanks",25,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
650,423161392,10073,3834332,2020-05-26 11:59:28,2020-05-26 12:33:51,closed,Destroy slickgrid and flatpickr on widget removal,"fixes #10072
",0,1,['status: accepted']
651,422880617,10070,3834332,2020-05-25 20:00:57,2020-05-27 15:20:53,closed,Move some functions from Server to BaseServer and BokehTornado,"- [x] issues: fixes #9813 


@mrocklin In the interest of saving you some time I made a new PR with the additional changes needed to get tests passing. Can you test out this branch and verify that is satisfies your needs?
",2,2,['status: accepted']
652,422476305,10069,3834332,2020-05-24 21:58:53,2020-05-29 16:47:16,closed,Improve support for ndarray serialization,"This extends typed arrays with `dtype` and `shape`, and allows to handle shapes by arrays, instead of globally. This allows to support ndarrays and base64/binary encoding everywhere (not only in `data`), and removes custom serialization code, etc. Note this is a stop gap measure, and not how I intend ndarrays to look like and work in bokeh 3.0, but backwards compatibility and the lack of ability to override `[]` operator makes proper changes impossible right now. Tentatively adding to 2.1, but it may need to be postponed, depending on how badly it breaks things.",1,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
653,422445234,10068,3834332,2020-05-24 17:37:36,2020-05-24 19:32:29,closed,Reduce usage of for-in loop an in operator,This fixes broken selections after PR #10054. There reason for breakage was a stray `in` operator. I fixed that and took a stab at removing as many `for-in` loops and usage of `in` operator as I could in one sitting. I think two more PRs and bokehjs' codebase will be cleaned up.,0,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
654,422341725,10066,3834332,2020-05-23 23:52:06,2020-08-12 16:32:23,closed,Add support for copying canvas to clipboard,"This is a fairly new API, primarily usable in Chromium-based browsers and most recent Safari. Firefox requires `dom.events.asyncClipboard.dataTransfer` flag to be enabled for it to work. The tool is available from save tool's context menu:

![image](https://user-images.githubusercontent.com/27475/89346079-c5d2d580-d6a8-11ea-844e-5ae5657195a3.png)

If the feature is not available, the menu item will not show (or entire menu if empty).
",4,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
655,422322061,10065,3834332,2020-05-23 20:18:11,2020-06-07 17:08:52,closed,Changed docstring in stocks.py and us_marriages_divorces.py,"- [ ] issues: addresses #9329 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,8,['status: declined']
656,422315952,10064,3834332,2020-05-23 19:19:37,2020-05-23 20:24:04,closed,Drop isStrictNaN in favour of built-in isNaN,"All code paths that still used `isStrictNaN()` work on `number`s, so there should be no difference anymore.

fixes #5744",0,1,['status: accepted']
657,422257719,10061,3834332,2020-05-23 11:00:29,2020-05-23 13:07:37,closed,Drop usage of our Set type in favour of the native Set,No need to have to set types with fairly different semantics.,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
658,422245873,10060,3834332,2020-05-23 09:06:02,2020-05-25 16:49:36,closed,addresses bug described in #10040,"

- [ ] issues: fixes #10040 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,5,['status: accepted']
659,422208020,10059,3834332,2020-05-23 02:35:25,2020-05-23 08:36:59,closed,10040 line edit tool,"Bug Fix for LineEditTool. Addresses issue described in #10040

- [ ] issues: fixes #10040
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,19,['status: superseded']
660,422190316,10058,3834332,2020-05-23 01:31:49,2020-05-29 02:27:44,closed,Build improvements,"Tryin to clean things up a bit
",15,27,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
661,421794334,10054,3834332,2020-05-22 08:41:04,2020-05-22 22:19:22,closed,Use Map instead of {} as view storage,"Slowly chipping away usage of plain objects (`{[key: string]: T}`), in favour of `Map<K, V>`.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
662,421646970,10053,3834332,2020-05-22 00:06:20,2020-05-22 00:30:32,closed,"Revert ""SpanSet""",Reverts bokeh/bokeh#9648,0,1,"['status: accepted', 'type: task', 'reso: completed']"
663,421602487,10052,3834332,2020-05-21 21:39:00,2020-05-21 22:16:58,closed,install channels from conda-forge,"- [x] issues: fixes #10050
",0,1,['status: accepted']
664,421593472,10049,3834332,2020-05-21 21:20:15,2020-09-13 18:30:55,closed,Replace setter_id with a less verbose mechanism,"Proof of concept. Instead of sprinkling `setter_id` in various places, this PR blocks all document events that are triggered during `apply_json_patch()` with `Document.no_sync()`. This approach may be a bit too aggressive, so alternatively all calls to `setv()`, `add_root()`, etc. during application of a patch can be guarded instead.",3,5,"['status: declined', 'type: task', 'tag: component: bokehjs']"
665,421147083,10045,3834332,2020-05-21 04:48:29,2020-05-21 15:46:45,closed,Bryanv/9952 version json cache bust,"- [x] issues: fixes #9952
- [x] release document entry (if new feature or API change)
",0,4,['status: accepted']
666,420707677,10043,3834332,2020-05-20 12:07:28,2020-05-23 14:41:54,closed,Fix label heuristic when `orient == 0`,"- [x] add a integration test

fixes #10042
",0,2,['status: accepted']
667,420673007,10041,3834332,2020-05-20 10:56:22,2020-05-20 16:09:06,closed,Make glyph renderer respect subset indices of visuals,fixes #9230,0,6,['status: accepted']
668,419176753,10037,3834332,2020-05-17 21:28:23,2020-05-21 04:02:59,closed,adding test case for transform model issue  #8572,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8572 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,2,['status: accepted']
669,419092438,10036,3834332,2020-05-17 10:28:17,2020-05-17 20:26:19,closed,Refactor implementation of Image and ImageRGBA glyphs,"`Image` and `ImageRGBA` already have a common base, but they still repeat quite a bit of their implementations. This PR resolves this by pulling most of the common code into `ImageBase` class.
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
670,419086127,10035,3834332,2020-05-17 09:31:12,2020-05-17 10:23:28,closed,Miscellaneous changes,"
",0,3,"['status: accepted', 'type: task', 'reso: completed']"
671,419056700,10034,3834332,2020-05-17 03:57:14,2020-05-20 16:14:13,closed,Link reference guide entries to user guide,"- [x] issues: addresses https://github.com/bokeh/bokeh/issues/9363
",3,1,['status: accepted']
672,419050712,10032,3834332,2020-05-17 02:30:31,2020-05-18 17:06:59,closed,lorem-ipsum-change,"- [ ] issues: fixes #8448
The lorem-ipsum in multiple layouts has been replaced by more meaningful text.",2,3,['status: accepted']
673,419031451,10031,3834332,2020-05-16 22:34:05,2020-05-17 23:02:45,closed,Fix documentation section,"Sphinx docs build fails  when GOOGLE_API_KEY environment variable is not set up. 
Adding proper documentation on Dev guid, documentation section.

- [x] issues: fixes #10030 
",2,2,['status: accepted']
674,419010907,10029,3834332,2020-05-16 19:14:17,2020-05-19 16:48:27,closed,"Adding 2 more themes: night_sky, contrast [ci disable examples]","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #10028
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

No tests added for the themes.

Here are the previews:

**Contrast**
![contrast preview 1](https://github.com/Cheukting/bokeh/raw/theme-preview/pictures/contrast01.png)
![contrast preview 2](https://github.com/Cheukting/bokeh/raw/theme-preview/pictures/contrast02.png)

**Night Sky**
![night sky preview1](https://github.com/Cheukting/bokeh/raw/theme-preview/pictures/night_sky01.png)
![night sky preview2](https://github.com/Cheukting/bokeh/raw/theme-preview/pictures/night_sky02.png)",9,2,['status: accepted']
675,418540806,10026,3834332,2020-05-15 11:36:59,2020-05-15 21:02:58,closed,"Make show(), build_views(), etc. produce most specific types",,0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
676,418454030,10025,3834332,2020-05-15 08:35:56,2020-05-17 21:40:12,closed,Include SRI hashes for BokehJS in user guide section,"- [x] issues: fixes https://github.com/bokeh/bokeh/issues/9982

First time contributor, Season of Docs hopeful 👋
- I referenced js_resources.html for the code changes
- Fixed a small typo in js_resources.html 

Do we need to write tests for doc changes?",2,2,['status: accepted']
677,418435742,10024,3834332,2020-05-15 07:56:04,2020-05-16 13:01:52,closed,Handle 'disabled' property across all widgets,"fixes #10022
",0,1,['status: accepted']
678,417948564,10021,3834332,2020-05-14 12:00:14,2020-05-17 22:43:26,closed,Add support for document event batching,"This allows `model.setv({prop0: val0, prop1: val1})` to generate one protocol level message. The API is backwards compatible, so `document.on_change(callback)` works by triggering `callback` on each individual event of a batch. `document.on_change(callback, true)` allows batching, and this is what client session uses to produce a single protocol message for multiple change events. Batches can constitute only events of the same type, though this restriction may be lifted. In future I will implement a more generalized API than `setv()` for capturing multiple changes. It will look like this:
```ts
model.synchronized(() => {
  model.prop0 = val0
  model.prop1 = val1
})
```
(with the ability to synchronize on multiple objects).",0,10,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
679,417518779,10018,3834332,2020-05-13 17:51:55,2020-05-13 18:15:39,closed,Changed Warning,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9978
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
680,416979550,10016,3834332,2020-05-12 21:27:32,2020-05-17 21:22:21,closed,Added ':' before execution command,"Added ':' before execution command for better view.

issue fixed-none",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
681,416952463,10015,3834332,2020-05-12 20:29:46,2020-05-12 22:51:03,closed,Add notes about CoC to README and dev-guide,"- [x] issues: fixes #8741
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
682,416557806,10012,3834332,2020-05-12 08:06:12,2020-05-14 07:30:12,closed,"Use Map<K, V> or Set<V> instead of {[key: string]: V}",Backport of PR #9836. ~~This is based on PR #10004. I will rebase on top of `master` when that is merged~~. Note this PR doesn't replace all occurrences of `{[key: string]: V}`. Further incremental changes will be needed.,0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
683,416512261,10011,3834332,2020-05-12 06:21:43,2020-05-17 21:26:02,closed,Update Auth Request Handler hierarchy,"I have renamed the `auth_mixin` file and made the hierarchy changes accordingly. 
- [ ] issues: fixes #9907 
",3,7,['status: accepted']
684,416341653,10008,3834332,2020-05-11 20:52:15,2020-05-16 08:41:40,closed,Incorporate SVGRenderingContext2D into bokehjs,"The current state of SVG backend is pretty bad, which can be summarized in PR #10000, where half of markers are rendered incorrectly, if at all. The underlying library isn't maintained anymore, and its implementation leaves a lot to be desired. If we want to keep the backend, which I think we should, we need to incorporate it into bokehjs and improve it on our own. This PR incorporates the library, cleans up the code and rewrites in TypeScript. When this is meged, I will be able proceed with cleaning up the implementation and fixing up bugs. 

We could maintain this code in a separate repository, but then we would need to set up build and especially testing (including visual testing) independently, and here get this for ""free"".

Excerpt from PR #10000:

![image](https://user-images.githubusercontent.com/27475/81611512-79466980-93db-11ea-967f-fd761bbcf6f4.png)",3,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: svg']"
685,416220346,10006,3834332,2020-05-11 16:47:07,2020-05-11 20:26:32,closed,Speed up setting up of visuals,"Based on a suggestion in another PR (I can't find it right now), I checked what's the performance impact of all those comparisons in `core/visuals.ts`, and there is a visible negative impact for large datasets. I tested in Chrome and FF. For example, `plotting/file/color_catter` with `N=100_000` has its run time reduced by roughly 100ms (700->600ms in Chrome and 1100->1000 in FF). There's quite a bit of dispersion though (not unexpected with JIT and GC), so I started working on benchmarking tooling for bokehjs, so that we could get consistent and statistically significant results. Though it will take awhile to finish this.
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: performance']"
686,415948919,10005,3834332,2020-05-11 08:31:33,2020-05-11 11:18:45,closed,Add field name to column name if title not given,"I thought I should just go ahead and make the change. This most probably will work fine as the library would use column field name instead if the title is not externally given.
- [ ] issues: fixes #9871 ",6,3,['status: accepted']
687,415703713,10004,3834332,2020-05-10 11:06:40,2020-05-14 06:39:01,closed,Clean separation between models' and properties' responsibilities,Backport of PR #9808.,4,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
688,415691686,10003,3834332,2020-05-10 09:14:37,2020-05-12 03:31:43,closed,Changed the Display Message,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x ] issues: fixes #9978 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,5,['status: superseded']
689,415540366,10001,3834332,2020-05-09 08:38:50,2020-05-10 11:03:47,closed,Clean up type situation around buffer handling,"Backport of PR #9809.

PRs I merged into `future` branch so far, aren't substantial enough (wrt. breaking changes), to let them rot outside of `master`, especially that they bring a healthy mount of cleanup and speed improvements. Thus this backport and I will do the same for the other ones.
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
690,415470540,10000,3834332,2020-05-08 23:14:24,2020-05-16 09:53:03,closed,Add visuals tests for marker glyphs,addresses #9890 and #5800,0,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
691,415199743,9999,3834332,2020-05-08 12:01:08,2020-05-11 15:44:32,closed,Delay connect_signals during initialization,"- [x] issues: fixes #9218
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I don't think it's possible to add a reliable test case for this. The manifestation of the bug depends on the iteration order over a map, which is intrinsically undefined. And I really don't think we should make it defined by sorting something because performance matters.",10,1,['status: accepted']
692,415071361,9998,3834332,2020-05-08 06:29:59,2020-05-13 15:58:57,closed,Updated documentation for Margin Attribute,"I have made the requested changes. Please let me know if I have to add something else

- [x] issues: fixes #9990
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,4,['status: accepted']
693,414971309,9996,3834332,2020-05-07 23:36:02,2020-05-08 00:58:01,closed,Drop support for S3 upload in examples' tests,"Currently CI is broken, because ci.bokeh.org was decommissioned. I went ahead and removed all relevant code.",2,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
694,414710019,9994,3834332,2020-05-07 14:06:48,2020-05-09 11:06:43,closed,Allow to configure selection tool mode,"The following modes are supported:

- replace (no modifiers)
- append (Shift)
- intersect (Ctrl)
- subtract (Shift+Ctrl)

Press (~300 ms) on a selection tool button (box, poly, lasso, tap) to reveal a menu where you can set the active mode or clear the current selection. Activating a mode automatically activates the associated tool, if it's currently inactive. Modifiers take precedence over selected mode.

Example:

![image](https://user-images.githubusercontent.com/27475/81303252-be853700-907b-11ea-83ef-e28463cc481f.png)

For now I only covered selection tools, but this is a generic mechanism that can be used with other tools and elsewhere (e.g. context menus).

addresses #8512",4,12,['status: accepted']
695,414001154,9991,3834332,2020-05-06 10:10:35,2020-05-06 13:22:26,closed,Attempt to fix issues with bokehjs' build on macos,Trying to figure out issues with bokehjs' build on macos.,1,2,"['status: declined', 'type: task', 'tag: component: build', 'tag: component: bokehjs']"
696,413741932,9989,3834332,2020-05-05 20:40:48,2020-05-06 21:46:26,closed,Adjusted CSS in footer to ensure it does not extend past visible area…,"… (as per issue 9915)

- [x] issues: fixes #9915 

- [ ] tests added / passed 
Unsure how to test on localhost. Used Inspect Element and trial and error on firefox to judge correct margin sizes.
",10,3,['status: accepted']
697,413438173,9986,3834332,2020-05-05 10:45:03,2020-05-05 11:54:54,closed,Fixed `FactorRange`'s `start` property help string,"``end`` --> ``start``

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #9987
- [X] tests added / passed
- [X] release document entry (if new feature or API change)
",1,1,['status: accepted']
698,412163132,9981,3834332,2020-05-01 14:56:45,2020-05-01 20:35:51,closed,Migrate examples/integration/* (part 1),addresses #9980,0,8,['status: accepted']
699,412013353,9977,3834332,2020-05-01 07:00:48,2020-05-01 18:56:26,closed,Use system installed google chrome in CI,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: infra']"
700,412007260,9976,3834332,2020-05-01 06:37:36,2020-05-01 08:09:31,closed,Update bokehjs' dependencies,,0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
701,411937532,9975,3834332,2020-05-01 02:02:57,2020-05-01 18:55:38,closed,Pin chromedriver to 0.80,"An new version of chrome came out and broke the latest version of chromedriver we can install.
",5,3,"['status: superseded', 'type: task', 'tag: component: build']"
702,411928199,9974,3834332,2020-05-01 01:27:59,2020-05-01 18:48:56,closed,rebuild package-lock.json,"@mattpap I have been having issues building from a clean setup for while, with complaints that the `nan` package is missing. I would have to install it by hand to get things going. I decided to try rebuilding `package-lock.json`. Things work with the addition of `""esquery"": ""1.1.0""`and as a bonus this also resolves our `minimist` security alert since it picks up a new point release of `mkdirp`. Please review/comment (e.g. the deps order was changed, if there is some configuration that keeps things grouped how you prefer, let me know)",7,1,"['status: ready', 'status: superseded', 'type: task', 'tag: component: build', 'tag: component: bokehjs']"
703,411699230,9973,3834332,2020-04-30 16:25:58,2020-05-01 00:57:33,closed,Bump jquery from 3.4.1 to 3.5.0 in /bokehjs,"Bumps [jquery](https://github.com/jquery/jquery) from 3.4.1 to 3.5.0.
<details>
<summary>Commits</summary>
<ul>
<li><a href=""https://github.com/jquery/jquery/commit/7a0a850f3d41c0412609c1d32b1e602d4afe2f4e""><code>7a0a850</code></a> 3.5.0</li>
<li><a href=""https://github.com/jquery/jquery/commit/8570a08f6689223aa06ca8cc51d488c6d81d44f9""><code>8570a08</code></a> Release: Update AUTHORS.txt</li>
<li><a href=""https://github.com/jquery/jquery/commit/da3dd85b63c4e3a6a768132c2a83a1a6eec24840""><code>da3dd85</code></a> Ajax: Do not execute scripts for unsuccessful HTTP responses</li>
<li><a href=""https://github.com/jquery/jquery/commit/065143c2e93512eb0c82d1b344b71d06eb7cf01c""><code>065143c</code></a> Ajax: Overwrite s.contentType with content-type header value, if any</li>
<li><a href=""https://github.com/jquery/jquery/commit/1a4f10ddc37c34c6dc3a451ee451b5c6cf367399""><code>1a4f10d</code></a> Tests: Blacklist one focusin test in IE</li>
<li><a href=""https://github.com/jquery/jquery/commit/9e15d6b469556eccfa607c5ecf53b20c84529125""><code>9e15d6b</code></a> Event: Use only one focusin/out handler per matching window &amp; document</li>
<li><a href=""https://github.com/jquery/jquery/commit/966a70909019aa09632c87c0002c522fa4a1e30e""><code>966a709</code></a> Manipulation: Skip the select wrapper for &lt;option&gt; outside of IE 9</li>
<li><a href=""https://github.com/jquery/jquery/commit/1d61fd9407e6fbe82fe55cb0b938307aa0791f77""><code>1d61fd9</code></a> Manipulation: Make jQuery.htmlPrefilter an identity function</li>
<li><a href=""https://github.com/jquery/jquery/commit/04bf577e2f961c9dde85ddadc77f71bc7bc671cc""><code>04bf577</code></a> Selector: Update Sizzle from 2.3.4 to 2.3.5</li>
<li><a href=""https://github.com/jquery/jquery/commit/7506c9ca62a2f3ef773e19385918c31e9d62d412""><code>7506c9c</code></a> Build: Resolve Travis config warnings</li>
<li>Additional commits viewable in <a href=""https://github.com/jquery/jquery/compare/3.4.1...3.5.0"">compare view</a></li>
</ul>
</details>
<details>
<summary>Maintainer changes</summary>
<p>This version was pushed to npm by <a href=""https://www.npmjs.com/~mgol"">mgol</a>, a new releaser for jquery since your current version.</p>
</details>
<br />


[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=jquery&package-manager=npm_and_yarn&previous-version=3.4.1&new-version=3.5.0)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot close` will close this PR and stop Dependabot recreating it. You can achieve the same result by closing it manually
- `@dependabot ignore this major version` will close this PR and stop Dependabot creating any more for this major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this minor version` will close this PR and stop Dependabot creating any more for this minor version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",4,1,"['status: accepted', 'type: task', 'reso: completed', 'dependencies']"
704,411043575,9969,3834332,2020-04-30 00:42:51,2020-05-08 07:35:34,closed,9963 line edit tool,"Adds a LineEditTool for the editing of Line Glyphs

- [ ] issues: fixes #9963
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",22,14,['status: accepted']
705,410793754,9966,3834332,2020-04-29 15:41:25,2020-04-29 18:55:02,closed,Fix `cumsum()` docstring,"""For ``start_angle``"" -> ""For ``end_angle``""

- [x] issues: fixes #9965
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
706,410755962,9964,3834332,2020-04-29 14:39:43,2020-09-13 18:26:39,closed,Redefine the canvas as the paint engine,"This is a very early preview. A few things are broken and the implementation will change possibly significantly as the work progresses.

This:

- [x] makes `Canvas` the paint and UI event (via `UIEventBus`) coordinator
- [x] exposes `Canvas` as a first-class model
- [ ] allows painting to `Canvas` directly with painting primitives
- [x] allows multiple plots (plot renderers) per canvas (layout positioned)
- [x] enables single canvas grid plots (`GridPlot` model)
- [ ] establishes a unified in-canvas positioning scheme (basis for sub-coordinates)",3,9,"['status: declined', 'type: task']"
707,409049661,9960,3834332,2020-04-26 09:24:41,2020-04-27 08:02:57,closed,Fix Text glyph's point hit testing for null data points,fixes #9959 ,0,1,['status: accepted']
708,408462759,9954,3834332,2020-04-24 10:18:40,2020-04-24 16:44:54,closed,Fix adding glyphs with legend args dynamically,"If a new glyph adds a legend item, two patches are
sent to the BokehJS documents - one for the renderer
and the other for the legend item. The renderer one
must arrive first, otherwise the newly created legend
item will have an invalid model reference.

- [x] issues: fixes #9953
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
709,406532211,9948,3834332,2020-04-21 08:48:55,2020-04-25 02:07:54,closed,Implement multi-canvas renderer,"This implements a stacked multiple canvas renderer, currently with two canvases: primary and overlays. Which canvas is used, is determined by `renderer.level`. If only overlays were changed, primary canvas is not going to be invalidated and repainted, making this approach efficient. CSS renderer was removed from `BoxAnnotation` and `Span`, and `render_mode` was deprecated.

fixes #9941 ",3,7,['status: accepted']
710,406316816,9947,3834332,2020-04-20 21:38:56,2020-05-21 21:35:05,closed,support regexes as URL paths in django's bokeh_apps. Fixes #9946.,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9946 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",15,3,['status: declined']
711,405768816,9945,3834332,2020-04-20 00:47:33,2020-04-20 01:08:26,closed,release build first steps,"@bokeh/dev Just a heads up. `repository_dispatch` events only trigger off master. I will probably be making various commits straight to master when working on this to reduce the iteration cycle time. I'll make sure to run codebase tests first, which is all that should matter. Here's an outline of what I would like to work eventually:

* Trigger release ""build"" event. Could be via script, or via Postman, etc. This will require a repository scoped PAT but we may want to layer in some additional validation of the user issuing the event

* The build workflow runs checks, and assuming they all pass, executes the build

* A release deployment tarball is uploaded as an artifact. 

  At this point BokehJS has been uploaded to CDN and the repo has been provisionally tagged, but no packages or docs have beeb published.

* Intend to call a Slack incoming webhook to report status of the build job in a `#releases` channel

* local testing happens with the packages in the deployment tarball

*  If testing uncovers issues with a full release, the tag and SRI hashes can be reverted, and CDN JS files taken down.

* In later work, there will be a separate ""deploy"" workflow that is run after testing, that retrieves the deployment tarball and publishes the docs and packages.",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
712,405710196,9944,3834332,2020-04-19 18:21:51,2020-04-19 18:44:37,closed,Improve tile provider docs,"Noticed the tile provider docs were both confusing and missing examples for all the new tile sources. This is a quick update to make the page at least serviceable. 
",0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
713,405574817,9942,3834332,2020-04-18 23:21:06,2020-04-19 04:30:20,closed,Prep for 2.0.2 release,"This PR streamlines setup.py:

* relegate package data specification to MANIFEST.in
* update to versioneer 0.18
* remove ancient get_cmdclass cruft
* only scans for `bokeh` packages

Will also add 2.0.2 release notes to finish prep for release. 

Leaving `release` top level dir for now, but the new config excludes every pacakge that is not `bokeh` or `bokeh.*` ",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
714,405475269,9940,3834332,2020-04-18 09:57:01,2020-04-18 23:21:26,closed,Don't include release/ directory in sdist,fixes #9931,2,1,['status: superseded']
715,405428973,9939,3834332,2020-04-18 02:10:48,2020-04-18 23:47:02,closed,9938 session exp fix,"- [x] issues: fixes #9938
- [x] tests added / passed
",3,4,['status: accepted']
716,405309481,9937,3834332,2020-04-17 19:45:44,2020-04-17 20:56:41,closed,Fix bokeh's unit tests after bs4 update,Fixes broken tests after bs4 4.9 release which subtly changed the behavior of `.text` property.,1,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
717,404220445,9933,3834332,2020-04-16 09:09:19,2020-05-01 06:06:19,closed,Font management in visual tests,fixes #5800,4,24,['status: accepted']
718,403262924,9928,3834332,2020-04-14 15:41:10,2020-04-15 09:48:47,closed,Rebuild renderer views after add_layout,"- [x] issues: fixes #8862
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,1,['status: accepted']
719,402725721,9926,3834332,2020-04-13 16:34:47,2020-04-15 09:49:26,closed,Add support for serving extensions in django,fixes #9924,2,2,['status: accepted']
720,402628988,9925,3834332,2020-04-13 12:47:12,2020-04-13 16:35:45,closed,Temporary fix for Django server resource handling,"Temporary fix until we can work out how to serve JS and CSS resources correctly when `Resources(mode=""server"")`.

- [x] issues: fixes #9924
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,1,['status: superseded']
721,402338207,9921,3834332,2020-04-12 13:23:05,2020-04-25 07:40:35,closed,Redesign CSS embedding for shadow DOM,"This allows more fine grained control over where CSS stylesheets are added for each component. Also simplifies CSS building and management in general, which makes interoperability with thirdparty bundlers easier.

addresses #9757
",2,3,"['status: accepted', 'type: task', 'reso: completed']"
722,402226615,9918,3834332,2020-04-11 18:08:25,2020-04-11 18:32:06,closed,Add missing release notes,"- [x] issues: fixes #9908
- [x] release document entry (if new feature or API change)
",0,2,['status: accepted']
723,402208396,9916,3834332,2020-04-11 15:48:40,2020-04-11 16:17:42,closed,Don't duplicate parent's code in Oval._map_data(),,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
724,402181884,9914,3834332,2020-04-11 12:13:36,2020-04-11 12:47:32,closed,Prefer ** operator in bokehjs codebase,Results in much more readable code.,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
725,402175011,9913,3834332,2020-04-11 11:05:31,2020-04-26 08:51:46,closed,Use Selection() instead of hittest helpers,Reduces code footprint and makes it a bit more orderly for future work.,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
726,401731589,9906,3834332,2020-04-10 02:44:34,2020-04-10 03:24:59,closed,make auth method overrides explicit,"This makes a the auth methods method overrides explicit, rather than depending delicately on base class order. Additionally a lingering `@gen.coroutine` was replaced with a native coroutine, and also fixes some small issues in the auth provider tests.  
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
727,401719168,9905,3834332,2020-04-10 01:39:35,2020-05-08 21:10:11,closed,Add some new Marker types,"- [x] issues: fixes #9890 fixes #9863
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This is still WIP. I intend to re-vamp the docs for markers:

* provide a visual index/TOC of all the marker types
* add simple examples in addition to the complicated ""reference"" ones

Work so far:

<img width=""707"" alt=""Screen Shot 2020-04-26 at 6 07 32 PM"" src=""https://user-images.githubusercontent.com/1078448/80325275-5025b680-87e9-11ea-9cc1-13ce032eb4c5.png"">

Note there are also two small slightly ""breaking"" changes that I consider bug-fixes:

* ""scatter"" was part of the `marker_types` dict, but this is a mistake, as scatter is not a marker type in that sense

* the circle_x and diamond_cross markers have been fixes so that the x/cross part does not extend outside the main marker.",5,11,['status: accepted']
728,401715560,9904,3834332,2020-04-10 01:20:28,2020-04-10 02:15:21,closed,minor import cleanup,,1,1,"['status: accepted', 'type: task', 'reso: completed']"
729,401711526,9903,3834332,2020-04-10 01:01:11,2020-04-10 16:30:08,closed,suppress gridspec warning,"This suppresses some LGTM false positives for loop capture. I am not surprised they are missed, it's not easy to tell statically that the enclosing functions will evaluate the lambdas immediately. 

However, @mattpap what I actually ~very much desire~ intend to do is to deprecate `GridSpec` now, and slate it for removal in 3.0. This class is: 

* completely undocumented
* without any tests whatsoever
* not used or demonstrated by anything, anywhere:
    ```
    (dev) ❯ grin GridSpec
    ./bokeh/layouts.py:
       39 :     'GridSpec',
      212 :             ncols. OR an instance of GridSpec.
      486 : class GridSpec(object):
      555 :         elif len(args) == 1 and isinstance(args[0], GridSpec):
    ./bokeh/plotting/__init__.py:
       38 :     'GridSpec',
       78 : from ..layouts import gridplot, GridSpec; gridplot, GridSpec
    ```

This is pure useless dead weight cruft from a maintenance perspective as well as a possible source of unwanted support questions.  Keeping this would require an extremely compelling argument. ",2,2,"['status: accepted', 'type: task', 'reso: completed']"
730,401433017,9902,3834332,2020-04-09 13:45:00,2020-04-09 16:52:30,closed,Manually edited nbformat_minor in notebooks to fix validation errors (issue #9892),"
- [ ] issues: fixes #9892 
- [ ] tests passed: All the changed notebooks were opened manually in a jupyter session, ""Run all cells"" selected and then the notebook was saved. This failed in all cases before the edit and passed in all cases after the edit. Only manual tests were possible - using jupyter nbconvert --to notebook --execute returns successfully even when the bug is present.

",2,1,['status: accepted']
731,401387558,9901,3834332,2020-04-09 12:10:55,2020-04-13 17:54:04,closed,Fix bundling and serving precompiled extensions,"TODO:

- [x] add a test

fixes #9900
",1,2,['status: accepted']
732,400982934,9898,3834332,2020-04-08 17:31:54,2020-04-08 19:13:01,closed,Add a test for issue #9877,addresses #9877,0,1,['status: accepted']
733,400928451,9896,3834332,2020-04-08 15:42:24,2020-04-08 16:38:05,closed,FIx CI Miniconda download,"- [ ] issues: fixes #9895
",7,1,['status: accepted']
734,400265900,9891,3834332,2020-04-07 13:25:28,2020-04-07 13:52:19,closed,"Add tests for issues #9522, #9703 and #9724",fixes #9771,0,4,['status: accepted']
735,399990655,9889,3834332,2020-04-07 01:44:26,2020-04-07 02:53:42,closed,Updating link to colorcet repo.,"Correcting outdated link to colorcet repo in /bokeh/palettes.py.

- [ ] issues: fixes #9888
",2,2,['status: accepted']
736,399671677,9886,3834332,2020-04-06 14:05:44,2020-04-08 15:27:56,closed,Fill_Color = None should stop box_annotation background to be rendered,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9877
- [ ] tests added/passed
- [ ] release document entry (if new feature or API change)
",4,11,['status: accepted']
737,399642804,9885,3834332,2020-04-06 13:23:08,2020-04-06 19:46:12,closed,Update Stamen urls for SSL links,"As discussed in https://discourse.bokeh.org/t/stamen-maps-with-ssl/5107, these are the changes to use the Stamen SSL links
",3,3,"['status: accepted', 'type: task', 'reso: completed']"
738,399562956,9884,3834332,2020-04-06 11:03:26,2020-04-06 11:54:20,closed,"Use null instead of undefined in FactorRange.{mids,tops}","`null` is the right choice for the ""lack of an actual value"" marker, instead of `undefined`, which has special meaning within the properties' system. At some point I will disallow usage of `undefined` at the type system level.

addresses #9879
",0,1,['status: accepted']
739,399533996,9883,3834332,2020-04-06 10:13:17,2020-04-06 10:49:23,closed,Match compilation and minification targets,"
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
740,399326268,9882,3834332,2020-04-06 00:43:42,2020-04-06 08:37:21,closed,Properly reset state in FactorRange._init(),"Also fixes a bunch of issues with tests' runner and tests.

fixes #9879 
",0,6,['status: accepted']
741,399270422,9881,3834332,2020-04-05 22:08:29,2020-04-05 23:27:04,closed,remove pointless util function,`makedirs_ok_if_exists` in private `_testing` module duplicated stdlib capability and was also not implemented ideally. ,2,2,"['status: accepted', 'type: task', 'reso: completed']"
742,399222013,9880,3834332,2020-04-05 20:02:34,2020-04-05 21:43:01,closed,Sphinx 3.0 compat,"Checked out the docs build with the newly released Sphinx 3.0 and we had one warning that failed the build. It was valid and was causing all the functions in the `bokeh.embed` refguide show up twice. 
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
743,398264069,9876,3834332,2020-04-03 16:16:07,2020-04-06 18:54:39,closed,Fix unreliable headless chrome on macos,"fixes #9875 
",0,1,['status: accepted']
744,397565559,9873,3834332,2020-04-02 13:04:40,2020-04-03 05:12:00,closed,Add ignore_muted flag to HoverTool,"- [x] issues: fixes #9872
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
745,397339339,9870,3834332,2020-04-02 03:42:50,2020-04-02 14:39:38,closed,Fix typo in validation error output for FactorRange and CDSView filters,"- [x] issues: fixes #9869 
- [x] tests added / passed
",1,1,['status: accepted']
746,397191752,9868,3834332,2020-04-01 19:35:41,2020-04-19 18:52:54,closed,Add ipywidgets integration examples,"Depends on https://github.com/bokeh/ipywidgets_bokeh/pull/6.

fixes #9772 
",11,3,['status: accepted']
747,397105570,9866,3834332,2020-04-01 16:35:08,2020-04-03 20:55:53,closed,Refactored unused vars to _,"addresses #9855
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
748,397104355,9865,3834332,2020-04-01 16:32:44,2020-04-05 21:41:11,closed,change array.length issue in filters,"addresses #9855

",0,3,"['status: accepted', 'type: task', 'reso: completed']"
749,397103305,9864,3834332,2020-04-01 16:30:41,2020-04-01 20:10:30,closed,fixed palettes bug,"addresses #9855 

",4,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
750,396693169,9861,3834332,2020-04-01 00:30:21,2020-04-01 02:03:57,closed,Relax elementid check in autoload.js,"No need to fail if `elementid` wasn't found and completely ignore this check in the notebook, as `autoload_nb_js` has its own logic.

fixes https://github.com/bokeh/jupyter_bokeh/issues/49
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: notebook']"
751,396537710,9860,3834332,2020-03-31 19:07:47,2020-04-02 12:38:10,closed,Use px CSS unit instead of pt,"This was extracted from PR #9624. This should have been done for 2.0, however it should be mostly a non-breaking change. The problem is that pt to px conversion results in fractional numbers. We primarily use 10pt and 12pt as the defaults, for which we get:
```
10 pt -> 13.281472327365 px -> 13 px
12 pt -> 15.937766792839 px -> 16 px
```
However, where it matters (e.g. layout) we use rounded coordinates and sizes anyway, so there should be no difference after this change. Users' code using non-default values won't be affected, because we don't support unit-less values.

fixes #6840",2,2,['status: accepted']
752,396516780,9859,3834332,2020-03-31 18:30:34,2020-05-23 13:08:14,closed,Implement proper error handling in bokehjs' build,"fixes #9856
",0,5,['status: accepted']
753,395303726,9852,3834332,2020-03-29 19:18:18,2020-03-29 19:56:19,closed,Bryanv/correct js version full release,"On a full release version, JS version update code produced:

> [PASS] Updated version from '2.0.1-rc.2' to '2.0.1-**None.None**' in file 'bokehjs/src/lib/version.ts'


",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
754,395297692,9851,3834332,2020-03-29 18:35:49,2020-05-12 07:07:04,closed,Upgrade nouislider to version 14.x,"There will be some deeper changes needed make sliders work properly with this upgrade. I also removed `.bk-noUi-` prefixing, as the required `*.less` files aren't distributed anymore with nouislider's npm package, and it would be too much work to keep this when it offered little to no gain. Note that the main prefixing using `.bk-root` namespace is still in place. This means that bokehjs still won't affect the environment, but the environment can more easily affect bokehjs (just the no uislider part, if that was ever an issue, because someone would have to mix another unprefixed nouislider bundle). In future this won't be a problem at all when we will start using shadow DOM for isloation.

fixes #9844
",0,2,['status: accepted']
755,395297272,9850,3834332,2020-03-29 18:32:51,2020-03-29 19:03:11,closed,Fix minor typo in bokeh.transform reference docs,"Fixes a minor typo in bokeh.transform reference docs
> **cumsum(field, include_zero=False)**
>    &nbsp; &nbsp; Create a Create a DataSpec dict to generate a CumSum expression for a ColumnDataSource.

The `Create a` occurs twice.

- [x] issues: fixes #9848 ",1,1,['status: accepted']
756,395295951,9849,3834332,2020-03-29 18:23:26,2020-03-29 18:28:13,closed,Fix minor typo in bokeh.transform reference docs,"Fixes a minor typo in bokeh.transform reference docs
> **cumsum(field, include_zero=False)**
>    &nbsp; &nbsp; Create a Create a DataSpec dict to generate a CumSum expression for a ColumnDataSource.

The `Create a` occurs twice.

- [x] issues: fixes #9848 ",1,0,['status: superseded']
757,395275795,9846,3834332,2020-03-29 16:04:06,2020-03-31 13:20:44,closed,Allow to use multiple versions of bokehjs on one page,"Currently when bokehjs is loaded from bundles it stores an instance of its main bundle's entry point as `Bokeh` global. If multiple versions of bokehjs are loaded, then they overwrite that global and it's impossible to use any version than the last. This PR makes only the first bundle to touch `Bokeh`. The first and all other bundle will register themselves as `Bokeh[version]` (so the first one can be accessed by both), where `version` is the version of bokehjs as defined in `package.json`.

fixes #9812
",1,3,['status: accepted']
758,395000427,9841,3834332,2020-03-27 22:50:28,2020-03-27 23:46:44,closed,First iteration of updated release automation,"ref: #9341 

This is a first step towards rebuilding our automated release capability. There will be substantial follow-on work to clean up and refactor the overall pipeline operation, and improve reporting and logging. This first PR pulls all the previous work into a basic usable format for *building* everything e.g.
```
python -m release 2.0.1rc2
```
The functions in the package can be used to publish the built artifacts but for now they would need to be called explicitly. 
",0,6,"['status: accepted', 'type: task', 'tag: component: build']"
759,394925971,9839,3834332,2020-03-27 19:10:35,2020-03-28 22:28:44,closed,Fixed some minor docstring typos,Minor docstring typos fixed in `plotting/figure.py` file.,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
760,394709814,9838,3834332,2020-03-27 11:51:46,2020-03-27 12:47:26,closed,Skip painting empty indices when using webgl backend,fixes #9837 ,0,2,['status: accepted']
761,394667069,9836,3834332,2020-03-27 10:19:56,2020-03-27 14:08:34,closed,"Use Map<K, V> or Set<V> instead of {[key: string]: V}","addresses #9518
",0,2,"['status: accepted', 'future']"
762,394564242,9835,3834332,2020-03-27 05:47:30,2020-03-27 21:46:59,closed,Update current DatePicker value in UI,"- [x] issues: fixes #9834
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
763,394490821,9833,3834332,2020-03-27 00:38:11,2020-05-25 20:04:09,closed,[WIP] Move functionality from Server to BaseServer and BokehTornado,"This makes it easier to use Bokeh Server with existing HTTPServers
by moving some logic from the Server constructor (which assumes that it
creates an HTTPServer) off to BaseServer and BokehTornado, which don't
make that assumption.

Fixes #9813

- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",6,2,['status: superseded']
764,394409363,9832,3834332,2020-03-26 20:38:21,2020-03-29 00:42:47,closed,factor out error handling logic & re-use in FunctionHandler,"- [x] issues: fixes #9831
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,5,"['status: WIP', 'status: accepted']"
765,394186418,9830,3834332,2020-03-26 13:56:49,2020-05-21 21:30:13,closed,integration test for bokeh embed within django (bokeh#9815),"re: https://github.com/bokeh/bokeh/pull/9815#issuecomment-603586994 @bryevdv 

Tried to put together something as crude as possible to have a test for the django server embed. This just loads up the example directly and looks for a `.bk-root` element, like the json_item integration test does.

Noted problems or downsides:

1. Brings code from a 'howto' directory into being a sort of test rig. This seems unacceptable, because a user could have been tinkering with the howto code. So I guess a copy of this howto would just need to be moved inside the `tests/` directory somewhere to make sure it is intact for the test.
2. I haven't thought about or tested the consequences of enabling the logging feature on the chromium webdriver, but I thought it would be appropriate to print the output of `console.log` when this test fails. Otherwise someone seeing this test fail would be clueless as to what is wrong, since the errors would be buried inside of the selenium's js execution.
3. Django `channels` is needed for the example, and it's not in conda or conda-forge. I would have maybe just turned to pip but it looks like test deps for bokeh are confined to the conda recipe. So I found a random recipe containing `channels` and added it to `meta.yaml`. Turns out the ` - channels` in `meta.yaml` is ignored. I just hacked in something to append the ` -c ` flags, so this would magically work for someone running ``conda install `python scripts/deps.py build run test` ``. Unless they are trying to use their own ` -c ` options in which case it might conflict or something. Left it at that. I don't know what the ""right"" thing is here, maybe to author a conda recipe for `channels` and put it into the conda-forge, or into the `bokeh` conda channel?

Maybe you had more like unit tests in mind but for me this full integration test seemed the best actually, after the #9815 issue. I had been running with bokeh 1.4.0 for a bit, and in that case for example I got different behavior-- not only did the patch from #9815 need to be applied, but somewhere in `connection.js` (now `connection.ts`) in bokehjs, the `&bokeh-session-id=` was getting appended to the URL twice even if the session id's were the same, which would then fail back on the server-side in the bokeh.server.django WebsocketConsumer. Upgrading to 2.0.0 then this double argument issue went away, so no action needed. But point being that more of integration-level issues come to mind for this.

Let me know; happy to address feedback. Like I said (1) seems unacceptable to me so I would plan on addressing that regardless.",3,4,['status: declined']
766,394128059,9829,3834332,2020-03-26 12:03:27,2020-03-27 13:54:41,closed,Don't warn of different variants of the same type of tool,fixes #9763,0,3,['status: accepted']
767,393857581,9828,3834332,2020-03-25 22:23:57,2020-03-25 23:29:13,closed,Update bokeh_embed/django README.md,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9793 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
768,393769067,9826,3834332,2020-03-25 18:55:42,2020-03-25 19:45:52,closed,Docs: clarify that ``DataSource.selected`` is read-only,"In #9823 I reported being confused that the constructor of `ColumnDataSource` no longer accepts a `selected` argument as of v2.0, even though it is listed as one of the class properties [in the reference docs](http://docs.bokeh.org/en/latest/docs/reference/models/sources.html?highlight=columndatasource#bokeh.models.sources.ColumnDataSource.selected).

This PR proposes a small addition to the documentation to emphasize that `ColumnDataSource.selected` is now read-only.",1,1,['status: accepted']
769,393759158,9825,3834332,2020-03-25 18:34:43,2020-03-25 19:46:35,closed,Updated files to use new String module,"This PR aims to replace all `.regex `module callbacks with the new` .string` module, and hence remove deprecation message.

- [ ] issues: fixes #9820 
- [ ] tested locally
",1,1,['status: accepted']
770,393683968,9822,3834332,2020-03-25 16:14:33,2020-03-25 17:21:21,closed,Update placeholder date in 2.0 release notes,"- [ ] issues: fixes #9821
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
771,393324262,9819,3834332,2020-03-25 00:40:20,2020-03-25 11:47:32,closed,Allow to send binary buffers by MessageSent,This for example allows to send binary content from jupyter widgets (https://github.com/bokeh/ipywidgets_bokeh/pull/5).,0,1,"['type: feature', 'status: accepted', 'reso: completed']"
772,393250727,9818,3834332,2020-03-24 20:54:50,2020-03-25 00:54:56,closed,fixed typos and git pre-commit hook instructions,"This is a fix for #9816, with one additional ""turorial"" corrected to ""tutorial.""",1,1,['status: accepted']
773,393246671,9817,3834332,2020-03-24 20:45:08,2020-03-24 20:48:44,closed,Setup doc fix,This is a fix for #9816.,2,21,['status: superseded']
774,393000151,9815,3834332,2020-03-24 13:45:31,2020-03-25 01:15:31,closed,Bokeh server django consumer session id get param,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9814 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I believe this is the proper way to fix #9814. Open to feedback.",4,2,['status: accepted']
775,392528900,9811,3834332,2020-03-23 17:22:22,2020-06-18 18:12:48,closed,Include tool for browsing model/submodel structure,"This PR is the second attempt to address #9654.

1) I added a file  ```bokeh/bokeh/util/structure.py``` that defines a class ```BokehStructureGraph```
which, from a bokeh model, offers:

- a networkx graph of the model/submodel structure
- a pandas dataframe of all the attributes for all the submodels, with their types, values, and docstrings.
- a bokeh model that renders the networkx graph.  Clicking on a node (submodel) reveals the
attributes of that submodel, and their values.  This can be used in a jupyter notebook as it relies on JS callbacks.

2) I created a subdirectory ```bokeh/examples/tools``` with three files:
- ```structure_graph.py``` which illustrates the structure graph
-```ModelStructureExample.ipynb``` which demonstrates the class in a jupyter notebook
- a README

",14,41,['status: accepted']
776,392032966,9809,3834332,2020-03-22 16:27:54,2020-03-22 17:04:43,closed,Clean up type situation around buffer handling,"Just a clean up to get to proper work on improving handling of binary data.

addresses #9518
",0,1,"['status: accepted', 'future']"
777,391990902,9808,3834332,2020-03-22 11:24:47,2020-03-27 10:04:59,closed,Clean separation between models' and properties' responsibilities,"This is the first step (out of many) to bring soundness to the design of bokeh and bokehjs in particular. Given that those will be deeply incompatible changes, all will be submitted against `future` branch and marked accordingly. I will explain my plan towards bokeh 3.0 in a dedicated issue in the near future.

addresses #9518 
",2,5,"['status: accepted', 'future']"
778,391954662,9807,3834332,2020-03-22 04:21:02,2020-03-25 04:37:04,closed,Encode google API key with Base64,"This Pull Request is a continuation of the discussion on issue #9521. The basic aim was to encode the Google API key with Base64 format before parsing it into JSON, and then decoding it at the JS side.
- [ ] issues: fixes #9521 
- [ ] tested on local virtual env
",16,16,['status: accepted']
779,391895528,9806,3834332,2020-03-21 18:39:32,2020-03-21 23:14:42,closed,Update dev_guide.rst: BEP 2 retired ,"dev_guide.rst modified due to the fact it is mentioned the BEP 2 proposal that was retired last year.

Pull request started according to what said [here](https://discourse.bokeh.org/t/documentation-enhancement-proposal-2/4942).

Related issue: [#9805](https://github.com/bokeh/bokeh/issues/9805)

",1,3,['status: accepted']
780,391748946,9804,3834332,2020-03-20 21:30:06,2020-03-21 02:30:16,closed,Use `git ls-files` to collect test files,fixes #9797,0,2,['status: accepted']
781,391687198,9803,3834332,2020-03-20 18:42:46,2020-03-20 18:43:03,closed,Project Proposal: Bokeh,"This Pull Request requests the fellow Bokeh core developers and mentors for GSoC 2020 to review my project proposal and provide their valuable inputs. The link to my project proposal is given below,

https://docs.google.com/document/d/1V9I80Qr7cEOjBnsCyQ1mjcB0yUtGi4ImcganQE9txyg/edit?usp=sharing",0,1,['status: declined']
782,391677950,9802,3834332,2020-03-20 18:20:59,2020-03-20 19:44:34,closed,Drop tslint in favor of @typescript/eslint,"tslint has been deprecated and is not development anymore. We've been using both simultaneously for awhile, but now tslint can be finally removed.
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
783,391658625,9801,3834332,2020-03-20 17:37:07,2020-03-20 18:04:12,closed,Update deps and resolve audit warnings,"Hopefully the annoying message will go away. I could also just ignore the warning in github's settings, because the reported vulnerability is benign from our perspective, but let's have that ""resolved"". In the longer term, I will further reduce our dependencies, so that the mess that npm ecosystem is, doesn't annoy us as much.",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
784,391637720,9800,3834332,2020-03-20 16:50:30,2020-03-20 16:50:50,closed,Proposal Review,"This Pull Request requests the fellow Bokeh core developers and mentors for GSoC 2020 to review my project proposal and provide their valuable inputs. The link to my project proposal is given below,

https://docs.google.com/document/d/1V9I80Qr7cEOjBnsCyQ1mjcB0yUtGi4ImcganQE9txyg/edit?usp=sharing",0,1,['status: declined']
785,391610976,9799,3834332,2020-03-20 15:58:01,2020-03-25 21:28:00,closed,Allow to serve extensions' bundles and related resources,"So far, extensions compiled ahead of time (new-style extensions) can be embedded only inline. This PR allows to serve compiled bundles by bokeh server and consume extensions' resources from CDN (unpkg.com). This is an early preview and I will need to redesign this to allow serving other resources (e.g. fonts). This is needed to finalize https://github.com/bokeh/ipywidgets_bokeh/pull/5.",4,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
786,391537321,9798,3834332,2020-03-20 13:39:06,2020-03-20 15:50:50,closed,Fix syntax error in autoload js in notebook,"fixes #9796 
",0,1,['status: accepted']
787,391488114,9794,3834332,2020-03-20 11:44:15,2020-03-20 12:31:12,closed,"Add support for Bokeh.loader[""@bokehjs/module/name""]","This is required to allow bokehjs external imports from webpack bundles (e.g. from extensions packed with webpack). Webpack can support such workflow, but only through their convoluted approach, i.e. one can't just rewrite `import {HasProps} from ""@bokehjs/core/has_props""` as `const {HasProps} = Bokeh.require(""@bokehjs/core/has_props"")`, which we currently support, but it must be `const {HasProps} = window[""Bokeh""][""loader""][""@bokehjs/core/has_props""]`. The indexing part is fixed in webpack and can't be changed through configuration, but can be worked around with a `Proxy`. This isn't supported in IE, but given this is need for ipywidgets support, IE is not in the picture anyway.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
788,391093510,9791,3834332,2020-03-19 16:05:51,2020-03-19 20:27:04,closed,Allow subclasses of Serve subcommand to modify server_kwargs,"Minor addition which allows downstream libraries (e.g. Panel) to subclass the `bokeh serve` CLI subcommand to add additional server_kwargs, e.g. to add additional tornado RequestHandlers. 

(Apologies I don't know how best to tag this)

- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
789,390859195,9790,3834332,2020-03-19 08:14:43,2020-03-22 19:20:09,closed,Fix hover hit on vertical and horizontal segments,"- [x] issues: fixes #9458
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,4,['status: accepted']
790,390474702,9789,3834332,2020-03-18 14:37:40,2020-03-19 22:25:22,closed,"Fix for issue 9724, v2","- [ ] issues: fixes #9724 
- [ ] tested with py.test -m codebase
- [ ] release document entry: no new document entries.
",1,2,['status: accepted']
791,389293402,9786,3834332,2020-03-16 14:56:33,2020-03-17 21:36:11,closed,Add support for Tool.from_string(),fixes #9783 ,0,1,['status: accepted']
792,389152748,9785,3834332,2020-03-16 10:58:48,2020-03-17 21:38:32,closed,Properly statically type SelectionGeometry.geometry,"fixes #9784 
",0,1,['status: accepted']
793,388852649,9782,3834332,2020-03-15 22:24:33,2020-03-16 15:15:00,closed,Fixes typos and adds missing words to documentation,"Fixes typos and adds missing words to documentation.

Related issue: #8448",1,3,['status: accepted']
794,388851630,9781,3834332,2020-03-15 22:20:33,2020-03-15 23:42:06,closed,Correct guidance on additional dependencies to export plots,"Fixes missing `-c conda-forge` in guidance about additional dependencies for exporting plots.

- [x] issues: fixes #9778
",1,1,['status: accepted']
795,388745050,9780,3834332,2020-03-15 15:42:02,2020-03-16 15:15:41,closed,Fix arrow clipping in plots in complex layouts,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9522
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
796,388106393,9777,3834332,2020-03-14 01:52:26,2020-03-14 19:44:20,closed,Bryanv/9773 crossorigin,"Ensures that all uses of CDN resources apply SRI hashes when the computed version for a filename is a full version (e.g. also in local dev using CDN for last released version)

- [x] issues: fixes #9773
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,2,['status: accepted']
797,387963301,9776,3834332,2020-03-13 20:19:53,2020-03-14 01:03:13,closed,Update setting asyncio event loop policy,"This PR updates when we set the event loop policy to ensure that we continue to avoid using `asyncio.WindowsProactorEventLoopPolicy` on Windows and Python 3.8+ (which is incompatible with tornado https://github.com/tornadoweb/tornado/issues/2608), but also avoids clashing with other applications that use `bokeh` and also need to use custom event loop policies. This is a similar approach that was [taken over in Jupyter](https://github.com/jupyter/notebook/blob/f354740e57f206d67bfb077a9f23bb8d22b6b311/notebook/notebookapp.py#L1741-L1755).

- [x] issues: fixes #9775
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,2,['status: accepted']
798,385892951,9766,3834332,2020-03-10 01:34:47,2020-03-10 02:03:19,closed,DOC: Add missing '@' in HoverTool.formatters example,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
799,384336831,9762,3834332,2020-03-05 15:19:05,2020-03-22 11:26:36,closed,Use variadic tuple types in signaling API,This attempts to drop `Signal0` and to allow strictly statically typed API with just `Signal` class.,1,1,['status: declined']
800,383814031,9759,3834332,2020-03-04 19:30:54,2020-03-09 14:01:25,closed,Switch from git to npm package dependencies,"I published `@bokeh/canvas2svg`, `@bokeh/gloo2`, `@bokeh/numbro` and `@bokeh/slickgrid`, and `timezone` now refers to the original npm package with typings committed into bokeh repository. I tried to upgrade numbro, so that I wouldn't need to publish it, but that effort was futile.

fixes #9750
fixes #9447 
",3,5,['status: accepted']
801,382921921,9755,3834332,2020-03-03 12:26:03,2020-04-03 16:23:14,closed,Change handling of theme defaults for glyphs by using mixin classes (#9693 and #9339),"This responds to the discussion in issue #9693 and #9339 with @bryevdv and others. The proposal is to create four new abstract classes: 
- LineGlyph
- FillGlyph
- TextGlyph 
- HatchGlyph

Glyphs that support the line properties would inherit LineGlyph; those that support text properties would inherit from TextGlyph; and so on.  Then a theme like this:
```
theme_json = {
    ""attrs"": {
        ""LineGlyph"": {""line_color"": ""#ee33ee"", ""line_width"": 2},
        ""FillGlyph"": {""fill_color"": ""orange"",},
        ""HatchGlyph"": {""hatch_pattern"":""@"",""hatch_alpha"": .8,},
        ""TextGlyph"": {
            ""text_color"": ""red"",
            ""text_font_style"": ""bold"",
            ""text_font"": ""Helvetica"",
        },
        ""Ellipse"": {""fill_color"": ""green"", ""line_color"": ""yellow"",""fill_alpha"":.2},
    }
}
```
would set colors, fills, and hatch patterns for glyphs that support them; the explicit options for Ellipse would override these.

Here is some demonstration code:
```
from bokeh.models import (
    ColumnDataSource,
    Title,
    Ellipse,
    HBar,
    Text,
    Plot,
    LinearAxis,
    DataRange1d,
    Scatter,
    Line,
)
from bokeh.models.tickers import BasicTicker
from bokeh.models.formatters import BasicTickFormatter
from bokeh.transform import dodge
from bokeh.themes import Theme
from bokeh.io import output_file, show, curdoc
import numpy as np

output_file(""./minimal.html"")

theme_json = {
    ""attrs"": {
        ""Plot"": {""width"": 400, ""height"": 400, ""background_fill_color"": ""#eeeeee""},
        ""Grid"": {""visible"": False},
        ""Title"": {""text"": ""Demo of Themes""},
        ""LinearAxis"": {
            ""axis_line_color"": ""#ffffff"",
            ""major_tick_line_color"": ""#ffffff"",
            ""axis_label_text_font_size"": ""10pt"",
            ""axis_label_text_font_style"": ""bold"",
        },
        ""LineGlyph"": {""line_color"": ""#ee33ee"", ""line_width"": 2},
        ""FillGlyph"": {""fill_color"": ""orange""},
        ""HatchGlyph"": {""hatch_pattern"": ""@"", ""hatch_alpha"": 0.8},
        ""TextGlyph"": {
            ""text_color"": ""red"",
            ""text_font_style"": ""bold"",
            ""text_font"": ""Helvetica"",
        },
        ""Ellipse"": {""fill_color"": ""green"", ""line_color"": ""yellow"", ""fill_alpha"": 0.2},
    }
}

source = ColumnDataSource(
    {""x"": [1, 2, 3, 4, 5], ""y"": [1, 2, 3, 4, 5], ""who"": [""a"", ""b"", ""c"", ""d"", ""e""]}
)
x = np.linspace(1, 5, 100)
y = x + np.sin((x - 1) * np.pi)
x2 = np.linspace(1.5, 5.5, 5)
z = x2 + 2 * np.cos((x2 - 1) * np.pi)
source2 = ColumnDataSource({""x"": x, ""y"": y})
source3 = ColumnDataSource({""x"": x2, ""y"": z})


plot = Plot(
    plot_width=300, plot_height=300, x_range=DataRange1d(), y_range=DataRange1d()
)
plot.title = Title()
xaxis = LinearAxis(ticker=BasicTicker(), formatter=BasicTickFormatter())
yaxis = LinearAxis(ticker=BasicTicker(), formatter=BasicTickFormatter())
plot.add_layout(xaxis, ""below"")
plot.add_layout(yaxis, ""left"")

plot.add_glyph(source, Scatter(x=""x"", y=""y"", marker=""diamond"", size=20))
plot.add_glyph(source3, Ellipse(x=""x"", y=""y"", width=0.2, height=0.3, angle=-0.7))
plot.add_glyph(source, Text(x=dodge(""x"", -0.2), y=dodge(""y"", 0.1), text=""who""))
plot.add_glyph(source2, Line(x=""x"", y=""y""))
plot.add_glyph(
    ColumnDataSource({""y"": [2.5], ""x"": [0.5]}), glyph=HBar(y=""y"", right=""x"", height=1.5)
)
curdoc().theme = Theme(json=theme_json)
show(plot)
```
which yields this output:
<img width=""414"" alt=""Screen Shot 2020-03-02 at 4 29 19 PM"" src=""https://user-images.githubusercontent.com/11709993/75719622-0fa33400-5ca3-11ea-97d0-6ca0dbc7067a.png"">

One concern: this appears to slow things down, possibly because traversing the more complicated class hierarchy to set defaults hits performance.  But this is an unscientific impression.",14,8,['status: accepted']
802,382715343,9754,3834332,2020-03-03 02:52:11,2020-03-03 03:12:06,closed,allow sdist to --install-js,"The previous build process already double-built BokehJS. This would go to triple to compute SRI unless things are change. This PR allows sdists to be built by calling `--install-js` which will allow BokehJS to be built once up front. 
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
803,382693483,9753,3834332,2020-03-03 01:17:42,2020-03-03 03:08:41,closed,Use SRI hashes for full releases and candidates,"Also deleted obsolete build/deploy scripts will work on new versions soon. 
",1,5,"['status: declined', 'type: task', 'tag: component: build']"
804,382618726,9751,3834332,2020-03-02 21:31:17,2020-03-03 12:25:18,closed,Mixins to handle glyph theme defaults ,"This responds to the discussion in issue #9693 and #9339 with @bryevdv and others. The proposal is to create four new abstract classes: 
- LineGlyph
- FillGlyph
- TextGlyph 
- HatchGlyph

Glyphs that support the line properties would inherit LineGlyph; those that support text properties would inherit from TextGlyph; and so on.  Then a theme like this:
```
theme_json = {
    ""attrs"": {
        ""LineGlyph"": {""line_color"": ""#ee33ee"", ""line_width"": 2},
        ""FillGlyph"": {""fill_color"": ""orange"",},
        ""HatchGlyph"": {""hatch_pattern"":""@"",""hatch_alpha"": .8,},
        ""TextGlyph"": {
            ""text_color"": ""red"",
            ""text_font_style"": ""bold"",
            ""text_font"": ""Helvetica"",
        },
        ""Ellipse"": {""fill_color"": ""green"", ""line_color"": ""yellow"",""fill_alpha"":.2},
    }
}
```
would set colors, fills, and hatch patterns for glyphs that support them; the explicit options for Ellipse would override these.

Here is some demonstration code:
```
from bokeh.models import (
    ColumnDataSource,
    Title,
    Ellipse,
    HBar,
    Text,
    Plot,
    LinearAxis,
    DataRange1d,
    Scatter,
    Line,
)
from bokeh.models.tickers import BasicTicker
from bokeh.models.formatters import BasicTickFormatter
from bokeh.transform import dodge
from bokeh.themes import Theme
from bokeh.io import output_file, show, curdoc
import numpy as np

output_file(""./minimal.html"")

theme_json = {
    ""attrs"": {
        ""Plot"": {""width"": 400, ""height"": 400, ""background_fill_color"": ""#eeeeee""},
        ""Grid"": {""visible"": False},
        ""Title"": {""text"": ""Demo of Themes""},
        ""LinearAxis"": {
            ""axis_line_color"": ""#ffffff"",
            ""major_tick_line_color"": ""#ffffff"",
            ""axis_label_text_font_size"": ""10pt"",
            ""axis_label_text_font_style"": ""bold"",
        },
        ""LineGlyph"": {""line_color"": ""#ee33ee"", ""line_width"": 2},
        ""FillGlyph"": {""fill_color"": ""orange""},
        ""HatchGlyph"": {""hatch_pattern"": ""@"", ""hatch_alpha"": 0.8},
        ""TextGlyph"": {
            ""text_color"": ""red"",
            ""text_font_style"": ""bold"",
            ""text_font"": ""Helvetica"",
        },
        ""Ellipse"": {""fill_color"": ""green"", ""line_color"": ""yellow"", ""fill_alpha"": 0.2},
    }
}

source = ColumnDataSource(
    {""x"": [1, 2, 3, 4, 5], ""y"": [1, 2, 3, 4, 5], ""who"": [""a"", ""b"", ""c"", ""d"", ""e""]}
)
x = np.linspace(1, 5, 100)
y = x + np.sin((x - 1) * np.pi)
x2 = np.linspace(1.5, 5.5, 5)
z = x2 + 2 * np.cos((x2 - 1) * np.pi)
source2 = ColumnDataSource({""x"": x, ""y"": y})
source3 = ColumnDataSource({""x"": x2, ""y"": z})


plot = Plot(
    plot_width=300, plot_height=300, x_range=DataRange1d(), y_range=DataRange1d()
)
plot.title = Title()
xaxis = LinearAxis(ticker=BasicTicker(), formatter=BasicTickFormatter())
yaxis = LinearAxis(ticker=BasicTicker(), formatter=BasicTickFormatter())
plot.add_layout(xaxis, ""below"")
plot.add_layout(yaxis, ""left"")

plot.add_glyph(source, Scatter(x=""x"", y=""y"", marker=""diamond"", size=20))
plot.add_glyph(source3, Ellipse(x=""x"", y=""y"", width=0.2, height=0.3, angle=-0.7))
plot.add_glyph(source, Text(x=dodge(""x"", -0.2), y=dodge(""y"", 0.1), text=""who""))
plot.add_glyph(source2, Line(x=""x"", y=""y""))
plot.add_glyph(
    ColumnDataSource({""y"": [2.5], ""x"": [0.5]}), glyph=HBar(y=""y"", right=""x"", height=1.5)
)
curdoc().theme = Theme(json=theme_json)
show(plot)
```
which yields this output:
<img width=""414"" alt=""Screen Shot 2020-03-02 at 4 29 19 PM"" src=""https://user-images.githubusercontent.com/11709993/75719622-0fa33400-5ca3-11ea-97d0-6ca0dbc7067a.png"">

One concern: this appears to slow things down, possibly because traversing the more complicated class hierarchy to set defaults hits performance.  But this is an unscientific impression.",4,26,[]
805,382524255,9749,3834332,2020-03-02 17:55:49,2020-03-18 15:29:16,closed,Fix for issue 9724,"- [x] issues: fixes #9724 
- [x] tested with `py.test -m codebase` and using examples provided for #9724
- [x] release document entry: no new document entries.
",2,1,['status: superseded']
806,382125728,9746,3834332,2020-03-02 00:48:32,2020-03-02 13:34:54,closed,differentiate legacy files by filename,"- [x] issues: fixes #9745

",1,2,['status: accepted']
807,381837333,9743,3834332,2020-02-29 11:25:54,2020-02-29 17:40:53,closed,Fixed the multi-line example to now output,"The multi-line example was broken due to multi_line using the legend_field argument.
However this argument has been deprecated, so it was removed to make the example display output.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: declined']
808,381746580,9741,3834332,2020-02-29 04:59:50,2020-02-29 06:52:26,closed,include script text in notebook publish,"Previously we only added an empty script tag that copied over the Bokeh autoload tag, since it was specifying a `src` attribute. Now the autoload request tag has a script as text content, which also needs to be copied over. 

- [x] issues: fixes #9737

",0,2,['status: accepted']
809,381478992,9740,3834332,2020-02-28 16:34:28,2020-03-10 02:54:40,closed,fix issue #9703,"Rotation of image about center when using angle and anchor [combined] in image_url.

",2,3,['status: accepted']
810,381226020,9738,3834332,2020-02-28 06:29:25,2020-02-28 07:16:07,closed,minor 2.0 fixes,"Some small edits and examples fixes
",0,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
811,380642165,9736,3834332,2020-02-27 05:14:27,2020-02-28 07:16:36,closed,added some docstring changes for gmap function,"This Pull Request is regarding Issue #9521, I have added some Docstring changes to 'gmap' and 'GMapPlot' in their respective files, which can serve as an alert message before storing the Google API Key in notebook. I have also made a few changes in 'geo.rst' file for the same message to be given the User_guide Documentation. Though the key is not encrypted yet (as suggested), I am working on it and submit a pr for the same soon.

- [ ] issues: fixes #9521 

- [ ] tests added / passed
tested on local virtual env.
",5,4,['status: accepted']
812,380617970,9735,3834332,2020-02-27 03:29:53,2020-02-27 04:01:59,closed,update release docs,"- [x] issues: fixes #9651
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
813,380595735,9734,3834332,2020-02-27 01:53:08,2020-02-27 02:20:08,closed,only check resource passed-in args,"Resources checks for incompatible arguments should only consider passed-in args, not env var values like BOKEH_CDN_VERSION. (Otherwise INLINE, etc will blow up if any env var is set).",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
814,380567881,9733,3834332,2020-02-27 00:00:46,2020-02-27 01:16:20,closed,Fix spelling mistakes in documentation,"Fixes spelling mistakes in docs.

Related issue: https://github.com/bokeh/bokeh/issues/8448
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
815,380342872,9732,3834332,2020-02-26 15:18:59,2020-03-09 13:25:32,closed,File input multi2,"- [ ] issues: fixes #9727
**This PR replaces PR #9728**

The PR amends the capability of multi-file selection to bokeh's FileInput widget.
It adapts the property types of class FileInput in
- inputs.py

and adapts the help-texts.
It extends the TS-code in
- file_input.ts

to ensure complete file reading/upload and return of either scalars (single file API) or Arrays (multi file API).
",5,15,['status: accepted']
816,379662680,9729,3834332,2020-02-25 15:48:33,2020-05-25 20:22:23,closed,Change default theme argument to file_html and components and update documentation,"This PR addresses the rest of #6821.  It makes the following changes:
In the file ```bokeh/embed/standalone.py``` it changes the default value for the ```theme``` argument
in the functions ```components``` and ```file_html``` from ```FromCurdoc``` to ```None```. 

Typically these functions are used in situations where there is no ```curdoc```.  The value ```None``` means that if the function is passed a ```Document``` or a sequence of ```Model``` which constitute ```D.roots``` for some document ```D```, then the theme of that document will be applied; otherwise the default theme is applied.  Ultimately this stems from the behavior of the context manager ```OutputDocumentFor``` defined in ```embed.util```.

The default for the function ```json_item``` remains ```FromCurdoc``` on the theory that this function is most often used in server settings where ```curdoc``` makes sense.

In all cases the documentation of the keyword argument has been changed to more accurately describe the behavior of the various choices, following the logic of ```OutputDocumentFor```.

Finally, two example files are included.  In ```json_item_themed.py``` we show how to apply themes and how the interaction with ```curdoc``` works.  In ```file_html.py``` we recover the original sprint example from #6821.
",48,20,['status: accepted']
817,379590130,9728,3834332,2020-02-25 13:41:31,2020-02-26 15:58:09,closed,File input multi,"- [ ] issues: fixes #9727
- [ ] tests added / passed (None)

The PR amends the capability of multi-file selection to bokeh's FileInput widget.
It adapts the property types of _class FileInput_ in 
 - inputs.py 

and adapts the help-texts.
It extends the TS-code in 
- file_input.ts 

to ensure complete file reading/upload and return of either scalars (single file API) or Arrays (multi file API).
",4,2,['status: superseded']
818,379384496,9726,3834332,2020-02-25 06:06:16,2020-02-25 18:49:55,closed,Reduce sdist size,"This PR changes the MANIFEST:

* removes extra static assets (map files, json files)
* removes the docs source
* removes the examples
* only includes unit tests

Afterwards the sdist package size is 8.4M

cc @mattpap ",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
819,379224829,9725,3834332,2020-02-24 20:50:31,2020-02-25 00:44:41,closed,js_link attr indexing zero bug-fix,"@bryevdv Here it is - took a moment since I forgot to sync my fork

- [ ] issues: fixes #9706
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,5,['status: accepted']
820,379052235,9723,3834332,2020-02-24 15:27:01,2020-02-24 19:52:27,closed,Modified theme documentation to reflect handling of null/None,"This is a proposed fix for (one of) the problems contributing to issue #6821.

YAML code like this:
```yaml
attribute: None
```
sets the attribute to the string ""None"" rather than ```None```.  The correct YAML syntax is:
```yaml
attribute: !!null
```

Similarly in ```json``` the correct value for ```None``` is ""null"".  

The proposed fix makes this explicit in the documentation and extends the example to show this.  There is no change to the code. ",1,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
821,379012273,9722,3834332,2020-02-24 14:14:10,2020-02-24 17:07:08,closed,Use auto so that the tooltip doesn't stretch to the left,"I introduced #9717 in #9634. @bryevdv recommended this fix: https://github.com/bokeh/bokeh/issues/9717#issuecomment-590191046 and I've verified that the original issue is still fixed, so I wanted to just open this PR. 

- [x] issues: fixes #9717
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
822,378945619,9720,3834332,2020-02-24 11:40:45,2020-03-15 00:06:20,closed,add update docker-tools (resubmit),"- [ ] issues: fixes #9581 

* add new folder structure
* add background in README.md
* add new Dockerfiles

Please disregard previous PR. Too many changes since my last pull (messed up my forked repo). This PR is based on a fresh fork.
",5,3,['status: accepted']
823,378834520,9718,3834332,2020-02-24 06:49:12,2020-03-22 19:09:46,closed,add the load fail message for BokehJS,"This Pull Request is regarding issue #9684, ""Failed to load"" message is visible now if BokehJS does not load for any possible reason. I have fixed my previous mistakes and updated the test_templates.py as well. I hope this works well.

- [ ] issues: fixes #9684 
- [ ] tests added / passed
checked on my local virtual env.
",4,2,['status: declined']
824,378759598,9716,3834332,2020-02-23 22:36:19,2020-02-24 11:43:37,closed,add update docker tools,"- add new folder structure
- add background in README.md
- add new Dockerfiles

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [] issues: fixes [#9581]

",3,1,['status: superseded']
825,378757752,9715,3834332,2020-02-23 22:19:03,2020-02-23 22:42:14,closed,Inherited members for refdocs,"- [x] issues: fixes #4966
- [x] release document entry (if new feature or API change)

Now that glyphs are split out on to separate pages this change is less onerous. I am sure there are further improvements to make (e.g. pruning out some things users probably have no reason to ever care about) but this will dp for now. ",1,1,['status: accepted']
826,378740714,9713,3834332,2020-02-23 19:22:48,2020-02-23 21:49:13,closed,Rename BOKEH_VERSION,"
Changes to BOKEH_CDN_VERSION which is actually more description, but also solves the issues users were having with name conflicts. ",0,1,"['status: accepted', 'type: task', 'reso: completed']"
827,378697485,9712,3834332,2020-02-23 11:56:57,2020-02-24 07:12:28,closed,added the load failed message,"This Pull Request is regarding issue #9684, ""Failed to load"" message is visible now if BokehJS does not load for any possible reason. I had a copy and paste the exact code in a new repository that is why it seems the whole code is altered, whereas the only changes made are in line 166,167 and 168.
Please ignore the rest, it is the same code as previously.
- [ ] issues: fixes #9684 
- [ ] tests added / passed
I have tested in my local virtual env.

",3,1,['status: superseded']
828,378628483,9710,3834332,2020-02-22 20:26:48,2020-02-22 21:07:00,closed,"added tile provider demo to showcase all basemap providers including newly contributed OSM, WIKIMEDIA, and ESRI_IMAGERY tile providers","New PR from updated fork to resolve this issue.

Adding new tile provider demo illustrating all tile provider maps.

- [ x ] issues: fixes #9704 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Lady Bird Johnson park, downtown running trail, Austin Texas
![bokeh_tile_demo_screenshot](https://user-images.githubusercontent.com/29280226/75098739-efc78e00-5587-11ea-9dd3-829d20acf979.jpg)",7,3,['status: declined']
829,378612930,9709,3834332,2020-02-22 17:35:35,2020-02-22 20:14:01,closed,[Spinner] ensure step can be set until 1e-16,"- [x] issues: fixes https://github.com/bokeh/bokeh/issues/9672
- [ ] tests added / passed
",2,1,['status: accepted']
830,378550198,9708,3834332,2020-02-22 04:34:25,2020-02-22 21:18:32,closed,fix for broken daterange slider,"- [x] issues: fixes #9702
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This fixes the issue with the `DaterangeSlider`. The underlying issue was that untransformed `Date` objects were making it in to the JSON-ish Document representation, which `JSONEncoder` serializes as ISO strings. This PR resolves that be adding a `serializable_value` to the `DatetimeProperty`, and then also modifies `Tuple` to also specialize `serializable_value` over its contents. 

Arguably having tuple behave that way is correct, but I don't love this PR as is, because it's a bit of a partial measure. I might look at making a dedicate `DatetimeRange` subclass of `Tuple` so that everything else can remain undisturbed, and leave more extensive rehab of the property system to later. 
",2,3,['status: accepted']
831,378468128,9707,3834332,2020-02-21 20:53:20,2020-02-21 21:48:48,closed,js_link feature update to allow attr indexing,"Enchances js_link functionality to allow a user to index into a subscriptable attr value. For example one could now do `RangeSlider.js_link('value', other, other_attr, attr_selector=0)` to access the start value of the range.

- [x] issues: fixes #9706 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)",1,2,['status: accepted']
832,378364193,9705,3834332,2020-02-21 16:24:29,2020-02-22 20:55:27,closed,Adding bokeh_tile_provider.py,"I'm uncertain how to contribute a new example code.
This is my attempt after discussing here: https://discourse.bokeh.org/t/how-to-contribute-documentation/4699/2?u=comperem

- [ X ] issues: fixes #9704 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,6,['status: superseded']
833,378202999,9701,3834332,2020-02-21 10:09:12,2020-02-21 18:05:24,closed,Try to improve passability of tests,I marked as flaky all common offenders from recent PRs.,0,5,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
834,378025456,9700,3834332,2020-02-20 23:18:26,2020-02-22 12:15:03,closed,Ensure Toolbar is initialized before ProxyToolbar,"This establishes a relationship between `ProxyToolbar` and `Toolbar` models, where the former requires the later to be initialized first. Previously `ProxyToolbar` knew only about individual tools, thus toolbars owning those tools could be initialized at any point, including after `ProxyToolbar`. This is a minimal change I could come up with to resolve this issue. There are better solutions possible, and more impactful on the overall design, but I will leave that for after 2.0.

fixes #9699",6,1,['status: accepted']
835,377880098,9698,3834332,2020-02-20 17:18:12,2020-02-21 02:35:59,closed,Drop usage of backingStorePixelRatio API,"This is unlikely to improve anything with regards to issue #8478, but it's a good thing to do anyway.

addresses #8478 
",3,1,['status: accepted']
836,377837346,9697,3834332,2020-02-20 15:57:59,2020-02-21 03:07:03,closed,Implement box_select support for patches and multi_polygons,"Implements _hit_rect methods for Patches and MultiPolygon glyphs. This implementation does the simplest thing and only selects if the entire (multi-)polygon is contained within the bounding box. In the longer term it might be nice to make this configurable in some form or implement the suggestion in #2325 which selects on partial intersection if the bounding box is drawn in a certain direction.

- [x] issues: fixes #2325
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,6,['status: accepted']
837,377294608,9692,3834332,2020-02-19 17:33:52,2020-03-09 16:35:15,closed,Upgrade to TypeScript 3.8,"This will get finalized when 3.8-final is released, which should be tomorrow. Tentatively adding to 2.0 milestone. If TypeScript's release is delayed, then I will move it to `next`.",6,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
838,377273759,9691,3834332,2020-02-19 16:53:09,2020-02-19 16:56:10,closed,Replace blank issue link with discourse link,Fixes https://github.com/bokeh/bokeh/issues/9690,2,1,['status: accepted']
839,376947376,9689,3834332,2020-02-19 03:41:32,2020-02-19 04:06:21,closed,Bryanv/9687 remove broken bokeh commands,"- [x] issues: fixes #9687
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

`bokeh json` does work, and seems like it could be a useful diagnostic tool at times, so I have left it. ",1,2,['status: accepted']
840,376366550,9686,3834332,2020-02-18 00:46:59,2020-02-18 10:04:15,closed,force srgb color profile on chrome,"cc @mattpap  This forces the chrome webdriver to always use standard RGB color profile. Otherwise, on OSX PIL images come back with an explicit ICC profile attached that causes the raw bytes to be different than expected. With this change, all unit tests can now be run successfully on OSX. 

This PR also removes the ""or"" values in export tests that were previously compensating for some difference in OSX. Now all platforms are identical. ",3,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'plat: osx']"
841,376183399,9682,3834332,2020-02-17 15:02:14,2020-02-17 16:40:43,closed,removed superfluous parenthesis from tooltip,"- [ ] issues: fixes #9681 
",1,1,['status: accepted']
842,375971503,9680,3834332,2020-02-17 07:00:43,2020-02-17 18:50:01,closed,remove bad super usage,"This PR cleans up some unusual/bad usage of super:

* in `wrappers.py` we can just call the method directly on `dict`, that is the actual intent, and clearer

* in `dataspec.py` the wonky situation with unit spec subclasses is improved as described below",5,4,"['status: accepted', 'type: task', 'reso: completed']"
843,375895124,9679,3834332,2020-02-17 00:38:06,2020-02-17 17:46:04,closed,do not require selenium for any common imports,"- [x] issues: fixes #9676
- [x] tests added / passed
",5,3,['status: accepted']
844,375854314,9678,3834332,2020-02-16 18:05:00,2020-02-16 19:25:17,closed,Delete custom.md,"Making a PR as an FYI to @bokeh/dev Some recent less than ideal interactions have convinced me that the only issue templates regular users should be able to see are ones that contain the lists of all the information we normally require, i.e. we should route people into ""bug"" or ""feature"" and nothing else.  It's too easy for people to click ""custom"" and not see the requested information. 

If we ourselves need to make a non-bug, non-feature ""task"" type we issues, we can delete the template as necessary. ",0,1,"['status: accepted', 'type: task', 'reso: completed']"
845,375817452,9675,3834332,2020-02-16 11:59:26,2020-02-17 17:13:47,closed,Make io.export work with devicePixelRatio != 1,fixes #9639,0,1,['status: accepted']
846,375768374,9670,3834332,2020-02-15 23:33:57,2020-02-16 11:45:24,closed,Lazy initialize and eagerly terminate web drivers,"fixes #9650
fixes https://github.com/bokeh/bokeh/pull/9331#discussion_r378211511",0,1,['status: accepted']
847,375715999,9668,3834332,2020-02-15 13:34:05,2020-02-16 11:44:34,closed,Restore and fix defaults' tests,"fixes #9667
partially addresses #6572",1,5,['status: accepted']
848,375496452,9665,3834332,2020-02-14 17:32:44,2020-02-14 18:00:02,closed,Typo fix in annotations documentation.,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
849,375048465,9662,3834332,2020-02-13 19:30:22,2020-02-14 19:16:58,closed,Implicitly apply pytest.mark.asyncio to async defs,"Expanding a bit on top of PR #9635. Currently an async test requires both `async` modifier and `asyncio` marker. With this PR only async modifier is needed. Note this uses pytest's test collection hooks, so only appropriate test functions will be marked. I will update this and mark as ready when PR #9536 is merged.
",3,5,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
850,374550786,9660,3834332,2020-02-12 21:42:56,2020-02-22 20:10:44,closed,Ensure templating does not break when HTTP and Websocket requests arrive on different processes,"Builds on https://github.com/bokeh/bokeh/pull/9536

- [x] issues: fixes #9108
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",27,4,['status: accepted']
851,374516122,9659,3834332,2020-02-12 20:28:35,2020-02-15 18:01:53,closed,Allow using async callbacks in `add_next_tick_callback` and the like,"- [x] issues: fixes #9658
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,3,['status: accepted']
852,373800474,9655,3834332,2020-02-11 17:57:56,2020-03-06 11:35:14,closed,First proposal to add structure graph to the distribution,"This PR addresses [9654](https://github.com/bokeh/bokeh/issues/9654).

Main changes: 
I put a new file, structure.py into the bokeh/util directory.  It provides two functions,
make_graph and draw_model, which respectively construct a networkx digraph of a model and its submodels and renders that digraph in a bokeh model.

I also added a new subdirectory under examples, called it tools, and put a brief demonstration notebook in that subdirectory.


- [x] issues: fixes #9654 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",9,16,['status: declined']
853,372756735,9648,3834332,2020-02-08 20:44:59,2020-05-21 22:36:14,closed,SpanSet,"Adds a SpanSet annotation as requested in #5962. As suggested by @bryevdv, I took inspiration from Label vs. LabelSet.

With SpanSet you can specify a data source and bind it to the `location` attribute.

- [x] issues: fixes #5962
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

If I'm not wrong the reference will update itself from code but I don't know if I have to write an example for the User Guide.",11,3,['status: declined']
854,372655504,9647,3834332,2020-02-08 00:29:39,2020-02-09 22:52:58,closed,Various bokehjs testing fixes,addresses #9420,4,3,['status: accepted']
855,372525008,9646,3834332,2020-02-07 17:39:31,2020-02-07 23:35:02,closed,Discard PATCH-DOC messages received before we have a document,"- [x] issues: fixes #9622
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
856,372488074,9645,3834332,2020-02-07 16:11:33,2020-02-07 23:32:07,closed,Fix two typos in Docstrings,,1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
857,372443958,9643,3834332,2020-02-07 14:39:48,2020-02-07 15:57:30,closed,Update bokehjs' dependencies,"
",0,1,"['status: accepted', 'type: task', 'tag: component: bokehjs']"
858,372347896,9641,3834332,2020-02-07 10:45:09,2020-02-07 13:01:54,closed,Fix a typo in bokeh/server/tornado.py,"- [x] issues: fixes #9642
",0,1,['status: accepted']
859,372330105,9640,3834332,2020-02-07 10:05:30,2020-02-07 13:33:42,closed,Fix codebase after PR #9635,,0,1,"['status: accepted', 'type: task']"
860,372221701,9638,3834332,2020-02-07 03:51:01,2020-02-15 04:29:00,closed,Clarify Scales hierarchy,"pre-work for #6517 

flying blind on JS tests as `node make test` won't run for me locally again, whether I start chrome headless myself or not. 
",6,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
861,371841432,9637,3834332,2020-02-06 11:11:19,2020-02-06 16:51:18,closed,Update docstring with missing argument 'template',"template is passed through ot bokeh.embed.file_html, argument
documentation copied from there.

Also fixed indentation of 'state' argument in docstring.


I'm not super sure I should first create an issue first or should add any tags/metadata here. The PR blurb says 

> All pull requests must have an associated issue in the issue tracker

, BEP-1 says 

> If the PR does not need a discussion (trivial fixes, tasks, etc), you can avoid the opening of an associated Issue, but you have to add a type, a reso, a milestone and, optionally, a tag label as with any other common Issue. Also, you have to add this reference issues: none at the top of the first message/post. These Issues/PRs are commonly know as standalone PRs and they have to be exceptions (low frequency situation).

which does not seem to describe my case. The [bokeh website](https://docs.bokeh.org/en/latest/docs/dev_guide/documentation.html#devguide-documentation) states 

> The most likely way for typos or other small documentation errors to be resolved is for the person who notices the problem to immediately submit a Pull Request to with a correction. This is always appreciated!

As this is a trivial documentation change and BEP-1 is pretty long, I just put this pullrequest here and hope it's useful.",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
862,371175373,9635,3834332,2020-02-05 04:20:02,2020-02-07 05:09:45,closed,Don't rely on test markers,The way I updated the files left some extra vertical space but it will be changed anyway when black formatting is applied. ,5,4,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
863,371045686,9634,3834332,2020-02-04 20:54:47,2020-02-04 22:50:39,closed,Prevent hover from overflowing on right side of screen,"- [x] issues: fixes #2673
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Try it out:

```python
from bokeh.plotting import figure, output_file, show, ColumnDataSource
from bokeh.models import HoverTool

output_file(""toolbar.html"")

source = ColumnDataSource(data=dict(
    x=[1, 2, 3, 4, 5],
    y=[2, 5, 8, 2, 7],
    desc= ['bbb'] + ['aaaaa ' * 100 for i in range(4)]
))

hover = HoverTool(tooltips=[
    (""index"", ""$index""),
    (""(x,y)"", ""($x, $y)""),
    (""desc"", ""@desc""),
])

p = figure(tools=[hover],sizing_mode=""stretch_both"",
           title=""Mouse over the dots"")

p.circle('x', 'y', size=20, source=source)

show(p)
```",3,4,['status: accepted']
864,370236269,9630,3834332,2020-02-03 10:22:40,2020-02-07 14:20:57,closed,Write promise API calls into async/await,"fixes #9621
",1,2,['status: accepted']
865,370157245,9629,3834332,2020-02-03 07:11:02,2020-02-03 20:17:38,closed,uniform READMEs for app directory examples,"- [x] issues: fixes #9394
- [x] release document entry (if new feature or API change)
",3,1,['status: accepted']
866,370084000,9628,3834332,2020-02-03 01:33:01,2020-02-03 05:26:40,closed,improve Jupyter docs,"- [x] issues: fixes #9623
- [x] release document entry (if new feature or API change)
",0,2,['status: accepted']
867,370071944,9627,3834332,2020-02-02 23:55:51,2020-02-19 16:49:27,closed,Bryanv/8397 sri script tags,"- [x] issues: fixes #8397
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

@mattpap this is fairly quick and dirty, and I don't love it. But in light of #9615 my main goal was to be as unobtrusive as possible to existing codepaths. Once things are re-founded on that work, I would like to add considerably more tests. 

As an aside I would like to stop using pytest ""implicit mark"". It is too easy for tests to be skipped, and now that all unit tests are under a single `tests/unit` directory, it is not needed. 
",4,5,['status: accepted']
868,370046278,9626,3834332,2020-02-02 19:32:47,2020-02-10 19:05:51,closed,Add support for class types in set_select,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9245
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,6,['status: accepted']
869,370027841,9625,3834332,2020-02-02 16:22:33,2020-02-17 22:48:34,closed,Support TickFormatter instances in RangeSlider,"Fixes #9469 as a non-general solution. A better solution would be to be to implement a general formatter attribute which takes a TickFormatter instance.

Now we can do following:

```python
from bokeh.io import output_file, show
from bokeh.layouts import column
from bokeh.models.widgets import RangeSlider
from bokeh.models.formatters import BasicTickFormatter

output_file(""range_slider.html"", mode=""inline"")

# will print a warning
range_slider_small = RangeSlider(start=1e-7, end=10e-7, value=(1e-7,8e-7), step=1e-7, title=""Bla"", format=""0[.]00"") 

# will print a warning
range_slider_large = RangeSlider(start=1e7, end=10e7, value=(2e7,8e7), step=1e6, title=""Bla"", format=""0a"")

# New
range_slider_custom = RangeSlider(start=1e-7, end=10e-7, value=(1e-7,8e-7), step=1e-7, title=""Bla"",
 formatter=BasicTickFormatter(precision=2))

# default behaviour
range_slider_default = RangeSlider(start=1e7, end=10e7, value=(2e7,8e7), step=1e6, title=""Bla"")

show(column(range_slider_small, range_slider_large, range_slider_custom, range_slider_default))
```
Result:

![image](https://user-images.githubusercontent.com/12762439/73611416-f5156680-45e1-11ea-8dd3-a3f4520ccd27.png)

This is my first OS contribution, so please do not hesitate to comment on my PR.

- [x] issues: fixes #9469
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I was thinking to support for all AbstractSlider subclasses, what do you think?",6,1,['status: accepted']
870,369954138,9624,3834332,2020-02-01 23:57:21,2020-04-03 14:22:55,closed,Image diff based on committed set of baselines,"This currently only affects `node make test:integration`. The set of baseline images was committed along existing textual baselines (`bokehjs/test/baselines`). The total size of artifacts is 300 kB for textual baselines and 650 kB for images (roughly 9 kB per image per test). The testing procedure is the same as with textual baselines. A committed baseline (text/image) is compared with the working tree, where each baseline was overwritten by the test framework. If there's a difference, then it will be visible both in test output and git. Textual baselines are compared with `git diff` and images by simple pixel-by-pixel comparison. The test framework generates `report.json`, which contains tests' metadata and base64 encoded images (baseline, diff, current). The report and all modified (or new) baselines are stored as `integration-report` artifact in github actions, which can be downloaded and the report visualized, and baselines copied-over to deal with platform differences. To view the report, one needs to start devtools server (`node test/devtools server`) and go to `localhost:5777/integration/report`. 

Currently image diff tests randomly fail (at least locally) on certain widget tests. Round corners of buttons and inputs are affected. This weird and requires further investigation.

addresses #5800",7,51,['status: accepted']
871,368214874,9619,3834332,2020-01-28 20:31:27,2020-05-21 21:15:10,closed,add CompositeFormatter to tables.py,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",17,5,['status: declined']
872,367927428,9618,3834332,2020-01-28 10:12:59,2020-01-28 19:46:42,closed,Touch events on iOS 13.x workaround,"Hammer.js has several issues related to Pointer Event implementation.
iOS 13 delivered built-in PointerEvents in Safari which made Hammer's touch recognisers (pan, pinch, swipe) behave incorrectly in certain cases.

However, most of problems may be addressed with Hammer's constructor options.
`Hammer.TouchMouseInput` does a trick for Pinch and Pan Tools in Bokeh.

- [x] issues: resolves #9187
- [ ] tests added / passed
",1,3,['status: accepted']
873,367814252,9617,3834332,2020-01-28 04:01:23,2020-01-31 17:12:17,closed,add ability to define directory app packages,"- [x] issues: fixes #9545
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

OK sorry for the unrelated, I did not have the energy/bandwith for separate PRs:

* the coveragerc file was not getting used
* many async unit tests were being silently skipped because they were not explicitly marked ""unit""",1,6,['status: accepted']
874,367530076,9615,3834332,2020-01-27 14:44:07,2020-03-22 12:21:16,closed,Redesign of bokehjs' properties system,"This is an early WIP preview.

The primary goal of this work is to separate concerns between `HasProps` and the properties system. The current situation is a mess, where value storage is duplicated (`HasProps.attributes` and `Property.spec`), models and properties communicate over signals when changes occur (which negatively affects performance), the logic is hard to reason about, static typing isn't great and other code (e.g. visuals) uses private implementation details all over the place. This PR is a preparatory step for future work on the properties system (e.g. #9518) and in aiding in splitting up bokehjs (#9296).

In this PR the burden of managing values and data is a sole responsibility of properties. `HasProps` role is to manage properties and coordinate changes across their subsets. A clear separation between (primitive) properties and specs (scalar, vector; units) is introduced, in hope to to allow splitting up generic bokehjs code from visual-related (e.g. using just layouts or widgets, without plotting, shouldn't require specs, visuals, etc.).",1,6,"['status: superseded', 'type: task']"
875,367445026,9614,3834332,2020-01-27 11:37:28,2020-08-27 18:04:59,closed,Redesign resource management,"This is an early WIP preview.

The goal of this work is to bring some sanity to resource management (and later embedding). This splits up resources in more manageable pieces, introduces static typing, defines terminology and in general overhauls how we define and consume resources across bokeh.

Terminology:

- `Asset` - a concrete JS, CSS (or other) file or inline content
- `Bundle` - a concrete collection of assets
- `Artifact` - a collection of assets resolvable by a resolver
- `Resolver` - a method to produce assets from artifacts
- `Resources` - defines how to resolve artifacts (produces a resolver)

Resources are now split into well defined chunks:

- `CDNResources`
- `ServerResources`
- `FileResources`
  - `InlineResources`
  - `RelativeResources`
  - `AbsoluteResources`

Those are classes, which can be initialized and configured. Note that all classes are now immutable and configuration is updated by cloning. For users' convenience, `CDN` and `INLINE` global instances are preserved, so for an average user any changes in this PR won't be noticeable

I will updated this description with more details as work progresses.

fixes #3529",4,15,"['status: declined', 'type: task']"
876,367265053,9610,3834332,2020-01-26 21:49:01,2020-01-26 22:11:39,closed,Update license and copyright dates,,0,1,"['status: ready', 'status: accepted', 'type: task', 'reso: completed']"
877,367264497,9609,3834332,2020-01-26 21:41:28,2020-01-26 22:34:31,closed,Add -> None to all test_ functions,"This makes editing test files with mypy linter enabled less annoying. Note that test files aren't currently type-checked, so this doesn't affect running mypy manually or as a part of tests.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: mypy']"
878,367254690,9608,3834332,2020-01-26 19:54:13,2020-01-26 22:12:55,closed,Ensure that all AbstractSlider properties are connected to signals,"- [x] issues: fixes #9607
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
879,367152568,9606,3834332,2020-01-25 20:34:13,2020-01-26 19:11:13,closed,Make Glyph._hit_* methods statically typed,"Simple improvement in an effort to submit smaller pieces of work as PRs.
",0,1,"['status: ready', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
880,366963644,9604,3834332,2020-01-24 18:37:15,2020-01-26 19:14:25,closed,Return a promise with views from embed_item{s}(),"fixes #9524
",0,1,['status: accepted']
881,366271078,9601,3834332,2020-01-23 09:49:14,2020-01-23 13:27:18,closed,No need to start headless chrome anymore,"addresses #9420
",0,1,['status: accepted']
882,366099485,9600,3834332,2020-01-22 22:43:09,2020-02-07 16:30:27,closed,Update baselines,An experiment. Do not merge.,1,2,['status: declined']
883,365830593,9599,3834332,2020-01-22 12:34:52,2020-01-29 01:44:51,closed,Add CompositeFormatter class to bokeh>models>widgets>tables.py,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9584
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",14,6,['status: superseded']
884,365609413,9598,3834332,2020-01-22 00:53:28,2020-01-22 05:48:33,closed,add CI python version check,,2,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
885,365169073,9595,3834332,2020-01-21 09:08:25,2020-01-21 16:29:16,closed,Don't generate sourcemaps for minified bundles,"- [x] don't generate sourcemaps for minified bundles
- [x] make sure we don't use `*.min.js` for development

fixes #9076
",0,1,['status: accepted']
886,365090476,9593,3834332,2020-01-21 04:36:10,2020-01-21 09:08:54,closed,build variant to strip source mapping urls,"- [x] issues: fixes #9076

@mattpap I'd like to merge this soon/tomorrow so I can start integrating it in to build automation. ",1,1,['status: superseded']
887,365044373,9591,3834332,2020-01-21 00:17:00,2020-01-21 16:30:20,closed,Detect chromium/chrome executable path,"addresses #9420
",0,2,['status: accepted']
888,364947181,9590,3834332,2020-01-20 17:52:18,2020-01-27 17:46:45,closed,Add ipywidgets_bokeh documentation,,6,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
889,364523371,9588,3834332,2020-01-19 11:11:32,2020-01-20 20:54:46,closed,Improve devtools test framework,"This PR addresses various issues with bokehjs' testing:

- [x] add support for source maps
- [x] fix paths in source maps
- [x] use a progress bar to compact test output
- [x] collect failed tests at the and and use more readable format
- [x] add support for resources server (static files and test sites)
- [x] automatically start headless chrome and resources server
- [x] allow to run all dependencies of a task before failing it

Sample output from unit (or integration) test run:
```
[00:47:05] Starting 'test:unit'...
████████████████████████████████████████ 100% | 1465 of 1465 | 3 failures | 10 skipped

✗ Document
 └── should be constructable
AssertionError: expected 0 to equal 1
    at http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/unit/document/document.js:112:1
    at _run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:94:1)
    at Object.run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:73:1)

✗ Document
 └── has working add_root
AssertionError: expected 1 to equal 2
    at http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/unit/document/document.js:118:1
    at _run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:94:1)
    at Object.run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:73:1)

✗ ColorBar module
 └┬─ ColorBar
  └┬─ ColorBar._tick_coordinate_scale method
   └── LinearColorMapper should yield LinearScale instance with correct state
AssertionError: expected [ 10, 0 ] to deeply equal [ 10, 1 ]
    at http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/unit/models/annotations/color_bar.js:80:1
    at _run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:94:1)
    at Object.run_test (http://localhost:5777/home/mateusz/repo/bokeh3/bokehjs/build/test/framework.js:73:1)
[00:47:13] Failed 'test:unit' after 8.34 s
```

addresses #9420
",6,1,['status: accepted']
890,364356282,9586,3834332,2020-01-17 23:20:23,2020-01-20 18:18:17,closed,update out-of-date other parameters docs,"- [x] issues: fixes #9406
- [x] release document entry (if new feature or API change)

This could be automates using `Options` similar to `FigureOptions`. If I can get to it before the release I will, otherwise this at least updates things by hand (there were alot of other params missing at this point)

Also: would be good to fix up the docs references to be sphinx refs, not hardcoded URLs",3,6,['status: accepted']
891,363681181,9582,3834332,2020-01-16 14:42:18,2020-01-17 04:12:40,closed,"added 3 open-source basemap tile providers: OSM, WIKIMEDIA, ESRI_IMAGERY","This pull request is to integrate 3 open-source basemap tile providers to `tile_providers.py`:
    (a) OpenStreetMap's OSM map tiles
    (b) OpenStreetMap's WIKIMEDIA map tiles and
    (c) ESRI's ESRI_IMAGERY tiles with satellite views

Unit tests were added but appear to be uncalled. For example, placing a failing garbage string anywhere in the unit tests allows the `test_tile_providers.py` to run without error.

This is true with `Test___all__ = verify_all(bt, ALL)` commented or uncommented. (ha)

Opening issue:
https://github.com/bokeh/bokeh/issues/9560
- [x] issues: fixes #9560 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,5,['status: accepted']
892,363048507,9580,3834332,2020-01-15 09:53:45,2020-01-15 21:22:33,closed,FIX #9579,"- [ ] issues: fixes #9579
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
893,362859619,9578,3834332,2020-01-14 22:01:31,2020-01-17 00:39:49,closed,Allow to publish dev bokehjs packages,"This changes the dev version format in bokehjs package, to match npm's requirements (e.g. `2.0.1-dev5` -> `2.0.1-dev.5`). It's unfortunate, but this is how it works. I've been using this pattern in `jupyter_bokeh` and `ipywidgets_bokeh`. I also switched package name from `bokehjs` to `@bokeh/bokehjs`. This isn't strictly necessary at this point, but it's useful to start using this pattern.
",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
894,361596851,9573,3834332,2020-01-10 19:47:58,2020-01-10 23:38:08,closed,test on python 3.8,"* issues: fixes #9507 

This PR adds unit test builds for Python 3.8 and should also run the CI workflow on pushes to master. 

Also addresses a real failure on win/py38",5,7,['status: accepted']
895,361592734,9572,3834332,2020-01-10 19:36:23,2020-01-17 01:17:36,closed,Allow setting Graph node_marker in plotting API,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9571 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,6,['status: accepted']
896,360156881,9566,3834332,2020-01-07 20:22:39,2020-01-07 21:34:43,closed,Update developer documentation,"Fixes #9517
",1,1,['status: accepted']
897,359829920,9565,3834332,2020-01-07 05:27:30,2020-01-08 02:02:33,closed,fix circular import between glyphs and markers,"This attempts to fix a fragile potential circular import situation between `bokeh.models.glyphs` and `bokeh.models.markers`. 

This was reported by LGTM, but I have definitely run in to problems on numerous occasions where a seemingly innocuous change suddenly results in tests failing with ""Duplicate Model definition"". So in truth, this probably does not go far enough. We should  possibly restructure the repo layout, and codify best practices, e.g. 

* move all the actual implementations to `bokeh._models.xyz`
* in those modules, avoid importing from other model modules at the top level except for base classes
* generally, internally only import from `bokeh._models`
* tests only import from public `bokeh.models`

We could provide stub `bokeh.models.ranges` that just import from `bokeh._models.ranges`, etc. and if desired, those could then be easily explicitly deprecated. Maybe that's v3 to v4 territory tho.

We would also need to figure out how to structure our reference documentation 
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
898,359724024,9564,3834332,2020-01-06 21:35:46,2020-01-09 10:55:15,closed,Fix #9562,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9562
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,1,['status: accepted']
899,359709580,9563,3834332,2020-01-06 20:53:48,2020-03-22 19:49:46,closed,Add FullscreenTool,"Adds a FullscreenTool which maximizes the root view. Might want to make that configurable and allow just fullscreening the specific subplot (although I'd have to test that).

- [x] issues: fixes #3598
- [ ] Add icon
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,4,['status: declined']
900,359390618,9561,3834332,2020-01-06 04:59:22,2020-01-06 17:01:28,closed,Small misc cleanup,"Small cleanup including some small mapper improvements. 
",3,9,['status: accepted']
901,359173463,9559,3834332,2020-01-04 02:05:34,2020-01-04 22:29:30,closed,warn for CDSView filters and connected glyphs,"- [x] issues: fixes #9388
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,2,['status: accepted']
902,359148977,9558,3834332,2020-01-03 22:59:34,2020-01-03 23:38:06,closed,don't duplicate helpool,"- [x] issues: fixes #9474

This removes the `HelpTool` from a special privileged position next to the logo and just makes it behave as a normal action tool, which I am 100% fine with. 

Could not see a good way to test as we are not set up to test Bokeh views at all, really. 

<img width=""622"" alt=""Screen Shot 2020-01-03 at 2 57 44 PM"" src=""https://user-images.githubusercontent.com/1078448/71754074-966d9900-2e39-11ea-97ee-4fe604ba3690.png"">

",0,1,['status: accepted']
903,359128729,9557,3834332,2020-01-03 21:28:10,2020-01-08 01:58:52,closed,allow env vars to override bundle resources,"- [x] issues: fixes #9514
- [x] tests added / passed

cc @mattpap please confirm this works for you. I did not want to go back to having things ""work"" by existing resource objects magically mutate themselves, so this is a fix similar to https://github.com/bokeh/bokeh/pull/9415 for the server case. 

Note the tests are not quite as nice/specific as I would have liked because custom extension resource tests leave alot of cruft in `js_raw`, `js_files`, etc. ",3,1,['status: accepted']
904,358874310,9556,3834332,2020-01-03 05:07:44,2020-01-03 19:18:08,closed,fixes typos and makes minor text improvements,"fixes #9555.
docs changes only.",2,11,['status: accepted']
905,358615067,9553,3834332,2020-01-02 10:34:36,2020-01-08 21:20:39,closed,Allow to route comms over bokeh's protocol,"This is a set of necessary changes to allow https://github.com/bokeh/ipywidgets_bokeh to work. This adds `MessageSent` document-level event, which allows bi-directional routing of arbitrary objects (with resolving of references, etc.). Originally this was primarily intended for routing comms, but as a generic mechanism, it can route e.g. ""bokeh"" events. I took this opportunity and reimplemented them using `MessageSent`. This way we don't need protocol-level support for them and all the unnecessary accompanying logic, and we can use the existing machinery to e.g. allow passing object references directly, perhaps allow binary data transfer, etc.

A separate, but related change is to maintain current document during `apply_json_patch()`. This allows objects implicitly associated with a document to communicate over the correct channel, without a need to keep an explicit registry (which in general is not possible).",7,5,"['type: feature', 'status: accepted']"
906,357583377,9548,3834332,2019-12-28 21:12:32,2019-12-28 23:43:51,closed,remove old ad-hoc callback properties,"This PR removes the `callback` property for almost all Bokeh models except for some tools.

cc @mattpap @philippjfr The only thing I am even  close to ambivalent about here is the `callback` for range. It's slightly more work to now either add individual start/end callbacks, or use a reset event. But they are workable, and I would rather make this clean slate and then find new conveniences that are more appropriate to the current codebase. 

@philippjfr please do check if you are using any of these on your end. ",4,10,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
907,357347268,9547,3834332,2019-12-27 22:54:58,2019-12-28 00:28:46,closed,More misc repo work,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,15,"['status: accepted', 'type: task', 'reso: completed']"
908,357335096,9546,3834332,2019-12-27 21:39:14,2020-02-21 18:04:08,closed,Add MultiChoice widget,"Adds a `MultiChoice` widget, which is a more compact `MultiSelect` widget based on the [choices.js](https://github.com/jshjohnson/Choices/) library. choices.js is only 19 KB and does not have a jQuery dependency like other libraries like Select2.

![Screen Shot 2019-12-27 at 7 21 22 PM](https://user-images.githubusercontent.com/1550771/71533558-b3661180-28f9-11ea-9500-984d02445f9f.png)

- [x] issues: fixes #9532 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",21,11,['status: accepted']
909,357112725,9544,3834332,2019-12-27 03:22:21,2019-12-27 04:47:26,closed,flaky selenium tests,"
",1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
910,357055328,9543,3834332,2019-12-26 19:52:22,2019-12-27 05:12:56,closed,Bryanv/more misc,"More code cleanup. Went down a small rabbit hole with enormously complicated basic tick formatter logic. Tho I am slightly tempted to just remove the `""Auto""` option altogether for 2.0. I am not entirely sure what value it provides and there are no examples of its use (though I did test it manually)
",2,16,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
911,356690906,9541,3834332,2019-12-24 19:20:12,2019-12-24 22:26:26,closed,Misc fixes,"Just going through and fixing up many small easy issues pointed out by LGTM
",1,27,"['status: accepted', 'type: task', 'reso: completed']"
912,356460679,9540,3834332,2019-12-23 21:49:05,2019-12-24 02:10:38,closed,Continuing CI Work,"- [x] issues: fixes #9482 
- [x] issues: fixes #9490 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,9,['status: accepted']
913,356138747,9537,3834332,2019-12-23 00:55:13,2019-12-23 20:29:26,closed,Follow on CI work,"- [x] issues: fixes #9454
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,4,['status: accepted']
914,355804593,9536,3834332,2019-12-20 16:30:31,2020-02-14 18:01:32,closed,Add initial support for token,"- [x] Send token with session id using subprotocol headers
- [x] Add token expiry
- [x] Add headers and cookies to token and include/exclude them using server kwargs
- [x] Add ability to provide hook to add arbitrary data to token
- [x] Expose returned token data on session_context
- [x] Allow providing headers to server_document/server_session
- [x] Switch to header based session-id in server_document/server_session  

- [x] issues: addresses #9505 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",41,49,['status: accepted']
915,355156514,9534,3834332,2019-12-19 13:53:14,2019-12-19 16:38:01,closed,Add angle brackets to fakesource in order to be ignored by coverage,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes https://github.com/bokeh/bokeh/issues/9533
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
916,354655389,9531,3834332,2019-12-18 14:53:53,2019-12-22 02:29:00,closed,Adding dedicated subsection to docs on Bokeh Server Jinja templating,"## Overview
I found the user guide a little sparse around customising the Bokeh Server's Jinja templating, so I've expanded the content into its own subsection. Quite open to moving it later in the user guide.

Final subsubsection, entitled 'Custom Jinja templates and Threading' describes what causes #9435, and suggests a workaround (using a load balancer).

## Testing
Running `make clean html serve` in the sphinx dir builds the documentation. 

Not sure if I should run the full test suite for the project, given there are no code changes?

## Checklist
- [x] issues: fixes #9435 (fixes might be a stretch - addresses?)
- [x] tests passed - docs build
",2,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
917,353200000,9526,3834332,2019-12-14 18:26:52,2019-12-16 17:45:52,closed,Fix User Guide documentation errors.,Fixes #9525 with some other minor grammatical corrections.,3,2,['status: accepted']
918,350800830,9520,3834332,2019-12-09 16:17:47,2019-12-09 17:20:39,closed,Pivot is not a supported app anymore,"remove the pivot from the readme since it's not a supported example anymore

- [x] issues: fixes #9519
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
919,350360129,9513,3834332,2019-12-08 00:08:26,2019-12-21 23:36:50,closed,Switch to GH CI,"
",9,30,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
920,349765430,9509,3834332,2019-12-06 04:58:54,2020-01-17 04:00:40,closed,Flatpickr,"Replace the current date picker with Flatpickr and also make the `Date` property more strict. 

* [x] issues: fixes #9494 
* [x] issues: fixes #6728
* [x] issues: fixes #8917 
* [x] tests pass
* [x] docs udpated",11,14,['status: accepted']
921,349325356,9503,3834332,2019-12-05 08:58:11,2019-12-05 20:21:50,closed,Fix simple typo: ther -> the,"Closes #9502

",3,1,['status: accepted']
922,348818287,9499,3834332,2019-12-04 10:47:37,2019-12-09 09:29:08,closed,Add support for asynchronous initialization of views,"This removes the last instances of `require()` after PR #9348. For that purpose I had to make views' initialization asynchronous.

addresses #9296 
",0,16,['status: accepted']
923,347531643,9493,3834332,2019-12-02 09:50:53,2019-12-02 16:20:24,closed,Fix WebGL rendering on high DPI displays,"For now without tests, because there is no good way to test this at the moment. However, it's possible to use device emulation mode in chrome's devtools to test this with various pixel ratios. This requires some additional work on bokehjs' integration testing framework.

fixes #9483 
",1,1,['status: accepted']
924,347406574,9489,3834332,2019-12-02 02:22:24,2019-12-02 19:22:04,closed,More SRI hash work,"Addresses #8397 

- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR does some more incremental work towards supporting SRI hashes for BokehJS.  Primarily:

* adds a `verify_sri_hashes` func that can be used with full-release packges to verify that computed SRI hashes match the hash manifest

* adds an`sri.py` script that can update the hash manifest (takes care to preserve ordering) 

*incidentally, adds an `is_full_release` predicate in `bokeh.util.version`

cc @mattpap @jakirkham @tommycarstensen 
",2,4,['status: accepted']
925,347379740,9488,3834332,2019-12-01 22:43:10,2019-12-02 18:50:29,closed,"split override/trait defaults, add tests","- [x] issues: fixes #9479 
- [x] tests added / passed

cc @mattpap @solstag ",0,1,['status: accepted']
926,347359707,9487,3834332,2019-12-01 19:06:31,2019-12-02 18:53:46,closed,Disable option in FileInput not working #9485,"issues: fixes #9485 

Updated the code to fix the issue for FileInput not getting disabled. 

```
render(): void {
    if (this.dialogEl == null) {
      this.dialogEl = document.createElement('input')
      this.dialogEl.type = ""file""
      this.dialogEl.multiple = false
      this.dialogEl.onchange = (e) => this.load_file(e)
      this.el.appendChild(this.dialogEl)
    }
    if (this.model.accept != null && this.model.accept != '')
      this.dialogEl.accept = this.model.accept
    this.dialogEl.style.width = `{this.model.width}px`
    this.dialogEl.disabled = this.model.disabled
  }
```

Thanks. ",1,1,['status: accepted']
927,347359532,9486,3834332,2019-12-01 19:04:39,2019-12-01 19:52:19,closed,update twitter username,"- [x] issues: fixes #9484
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
928,347178052,9480,3834332,2019-11-30 00:16:44,2019-11-30 00:51:38,closed,Expose SRI hashes,This is a fist step of steps towards #8397. Rebased version of PR #9465.,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
929,347141074,9478,3834332,2019-11-29 19:04:18,2019-11-29 20:06:55,closed,pin ipython max version,"pins ipython to 7.9 

cc @mattpap",2,1,['status: accepted']
930,346937928,9477,3834332,2019-11-29 08:12:45,2019-11-30 00:53:43,closed,Mark flask_gunicorn_embed.py worker thread as a daemon.,"Fixes #9476 seen when trying to stop gunicorn via Ctrl-C.

- [x] issues: fixes #9476
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
931,345951616,9472,3834332,2019-11-26 21:51:18,2019-11-26 22:56:16,closed,don't include Examples dir in conda pkg,"Including an `Examples` directory in a conda package was due to an ancient anaconda env idea that supposed many packages would want to include examples. Though the feature still ""works"" it was never actually publicized or encouraged, and looking at a current set of Anaconda envs, not a single other package adds anything to Examples besides Bokeh. I think we can safely stop bothering with this, make our packages slightly smaller and our builds slightly faster. 
",0,1,"['status: accepted', 'type: task', 'tag: component: build']"
932,345276214,9467,3834332,2019-11-25 15:27:45,2019-11-25 16:41:42,closed,fix hover icon,"- [x] issues: fixes #9466

corrected icon name for HoverTool
crosshair_icon --> hover_icon

",1,1,['status: accepted']
933,344989686,9465,3834332,2019-11-25 02:50:38,2019-11-26 15:11:37,closed,Expose SRI hashes,"This is a fist step of steps towards #8397 

* collects SRI hashes all the way back to version 0.8 and adds a simple API to obtain them

* updates the `bokeh-release` sphinx extension to include a table of hashes for each release:

---
Docs look like:

<img width=""1034"" alt=""Screen Shot 2019-11-24 at 6 35 44 PM"" src=""https://user-images.githubusercontent.com/1078448/69508567-16bfe680-0eeb-11ea-9d7c-185a825c5951.png"">

cc @mattpap @jakirkham 

Note I have pre-formatted with `black` to (hopefully) make rebasing the black PR simpler once this is merged. 

Also note I did not go back further than 0.8. That's where the modern CDN directory layout started. We could go back earlier, to 0.3. but I think the utility of that approaches zero. But if someone feels strongly, I can try to update `_sri.json` accordingly. ",4,2,['status: declined']
934,344964420,9464,3834332,2019-11-24 23:41:41,2019-11-25 19:22:38,closed,9463 spell mistakes 2019 nov,"Fixed few spelling mistakes while going through code.

#9463 ",3,3,['status: accepted']
935,344877235,9462,3834332,2019-11-24 06:14:51,2019-11-24 06:52:24,closed,use main env for build,"- [x] issues: fixes #9453

Not 100% sure this will work, will have to get someone to test on an outside PR
",0,1,['status: accepted']
936,344847102,9461,3834332,2019-11-23 21:38:29,2019-11-23 22:16:52,closed,palettes docs can assume jq and bs,"- [x] issues: fixes #9457
- [x] release document entry (if new feature or API change)

Sphinx extension for palette groups should just assume and use JQ and Bootstrap from the theme (in particular the docutils.js for search requires an ancient JQ version)",0,1,['status: accepted']
937,344844987,9460,3834332,2019-11-23 21:11:29,2019-11-23 21:41:45,closed,Bryanv/9455 isort test name,"- [x] issues: fixes #9455

",0,2,['status: accepted']
938,344843837,9459,3834332,2019-11-23 20:56:40,2019-11-23 21:32:10,closed,no f-strings for docstrings,"- [x] issues: fixes #9432
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
939,344759238,9452,3834332,2019-11-23 01:16:12,2019-11-23 04:09:01,closed,force trigger gh-actions on pull_request,"Forcing triggers on push and on pull_request.

**but** to be aware the default type of PR  activity triggers are only (opened, synchronize, or reopened).

there are other PR activities available which are disabled by default:

- assigned
- unassigned
- labeled
- unlabeled
- edited
- closed
- ready_for_review
- locked
- unlocked
- review_requested
- review_request_removed

in order to enable them, we need to do that specifically => [docs](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/events-that-trigger-workflows#pull-request-event-pull_request)

please advise",4,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
940,344745885,9451,3834332,2019-11-23 00:01:14,2019-11-23 00:05:30,closed,docs: correct the gh-actions badge in readme,"It is documented [here](https://help.github.com/en/actions/automating-your-workflow-with-github-actions/configuring-a-workflow#adding-a-workflow-status-badge-to-your-repository), but it seems like using the absolute path to the action yml file did not work, but using the workflow name instead works:

before:
![image](https://user-images.githubusercontent.com/7128635/69468473-9f744080-0d8c-11ea-9eb7-91fcf58bdfc1.png)


after:
![image](https://user-images.githubusercontent.com/7128635/69468481-aac76c00-0d8c-11ea-89e9-338b019885c6.png)
",7,1,"['status: accepted', 'type: task', 'reso: completed']"
941,344732167,9450,3834332,2019-11-22 23:00:42,2019-11-23 00:28:49,closed,fixes #9446,"- [x] issues: fixes #9446

",4,1,['status: accepted']
942,344645166,9449,3834332,2019-11-22 18:32:02,2019-11-22 20:02:36,closed,Rewrite bokehjs' connection tests using async/await,"
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
943,344075406,9445,3834332,2019-11-21 15:00:30,2020-01-02 01:53:26,closed,New attempt to update bokehjs from pop_colors_and_alpha to _pop_visuals,"This continues #9153. Still sorting out bugs, I'll probably need help with TS usage.

- [ ] issues: fixes #9444
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",27,6,['status: accepted']
944,343799662,9442,3834332,2019-11-21 01:24:39,2019-11-22 18:35:47,closed,Bryanv/more gh ci,"addresses some of #9440

",2,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
945,343733585,9438,3834332,2019-11-20 21:33:48,2019-11-25 16:40:16,closed,Apply black formatting,"@mattpap This one is  100% up to you, but in for a penny, in for a pound, I say. 

As I see it, doing this right now results in (roughly) only one big disruptive change in the history, instead of two distinct ones. There are 100% things I don't love about black formatting, but the whole point is that it improves diff performance and can be applied automatically and without discretion. At this stage in the project development, I'm definitely +1

FYI there are not really any knobs or dials to set. Really the only thing is line length, which is current set to 100 for both black and isort. 

So let me know if you want a different line length, or if you want to hold off on this altogether. ",9,8,['status: declined']
946,343544281,9437,3834332,2019-11-20 18:54:56,2019-11-20 19:31:08,closed,Temp disable windows builds for GH CI,"This PR disables the windows builds for now. I expect there are lots of changes that we will want to make to these configurations but I would like to get a stable, green master first and foremost, then fix issues in follow-on PRs.

cc @ammarnajjar 
",3,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
947,343039630,9434,3834332,2019-11-20 04:04:39,2019-11-20 20:16:31,closed,Integrate isort,"- [x] issues: fixes #9403
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Seeing how this goes. It's skipping a few named files and also everything under the sphinx dir. If we want to proceed I will add some notes to the dev docs (about codebase tests in general) and possibly some final hand edits. ",5,17,['status: accepted']
948,342734303,9430,3834332,2019-11-19 15:17:57,2019-11-19 15:55:47,closed,Update minimum version of nodejs,fixes #9429 ,0,1,['status: accepted']
949,342466922,9428,3834332,2019-11-19 03:22:24,2019-11-19 04:03:31,closed,update server embed exaples,"- [x] issues: fixes #9427
",0,1,['status: accepted']
950,342279621,9426,3834332,2019-11-18 17:49:01,2019-11-18 20:19:35,closed,Use native coroutines,"issues: fixes #9098 

This PR comments three tests but I am not sure those tests actually test what they thought they did to begin with. I'd like to make a separate issue to do a more comprehensive overhaul of Bokeh server unit testing. But This branch is getting hard to maintain, so I would like to merge it and get it in a dev build so downstream projects can test it out. 

Apologies for the garbage commit history this branch started out as a pure experiment. 

cc @mattpap @philippjfr @mrocklin 

cc @bokeh/dev",6,8,['status: accepted']
951,341900373,9424,3834332,2019-11-17 21:35:14,2019-11-18 06:59:45,closed,Update .coveragerc,"- [x] issues: fixes #9421

This should remove the sampledata dirs from the unit test coverage reports (sampledata is covered by a separate set of tests outside the unit test run so it should not be included in unit test restults) but I am not yet sure about the double counting repo vs package",1,2,['status: declined']
952,341815589,9422,3834332,2019-11-17 03:26:13,2020-01-05 20:56:41,closed,Review for kwarg-only,"- [x] issues: fixes #9146
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Just starting. Marking for #9146 but would like to do a wider review to change things to kwarg-only wherever appropriate. 
",1,1,['status: accepted']
953,341714507,9419,3834332,2019-11-16 02:52:30,2019-11-16 03:21:16,closed,remove errant pscript dep,Guess this got overlooked when the python transpilation code was removed. ,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
954,341712513,9418,3834332,2019-11-16 02:26:19,2019-11-19 03:07:25,closed,allow grids to delegate ticking to an axis,"- [x] issues: fixes #8561
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

After adding this line to the `iris.py` example:

    p.xaxis.ticker = [1,3,7]

The output is:

<img width=""415"" alt=""Screen Shot 2019-11-15 at 6 23 40 PM"" src=""https://user-images.githubusercontent.com/1078448/68986543-3c573c80-07d5-11ea-8603-f44c7741909c.png"">

Also confirmed explicitly setting a ticker on the grids works to take precedence. Not sure if there are any other docs or explicit examples needed. 
",5,5,['status: accepted']
955,341705852,9417,3834332,2019-11-16 01:15:39,2019-11-17 03:17:40,closed,Move from_networkx to  bokeh.plotting,"- [x] issues: fixes #9396
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,4,['status: accepted']
956,341251876,9415,3834332,2019-11-15 01:24:24,2019-11-15 20:26:13,closed,Bryanv/9395 resources server,"- [x] issues: fixes #9395
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap I added a change to the Django code for this as well, but unless I am missing them, there are not really any tests for the django code? Seems dangerous. ",1,3,['status: accepted']
957,341233615,9414,3834332,2019-11-15 00:07:12,2019-11-20 00:08:47,closed,document render level for images,"- [x] issues: fixes #9238
- [x] release document entry (if new feature or API change)
",2,3,['status: accepted']
958,340810503,9413,3834332,2019-11-14 06:28:10,2019-11-14 23:15:46,closed,misc dependency changes,"Some small changes and clarifications. 
",5,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
959,340662369,9410,3834332,2019-11-13 20:52:28,2019-11-14 04:27:05,closed,Update to cdn.bokeh.org,"I'm at a bit of a loss, I really thought this had already been done. Not a huge deal, but annoying. Definitely would have preferred to have the last py2 release pulling from the actual `cdn.bokeh.org` location rather than using the redirect from `cdn.pydata.org` in perpetuity. 
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
960,340575097,9409,3834332,2019-11-13 17:15:43,2019-11-13 17:32:46,closed,Update FUNDING.yml,"add NumFOCUS github sponsors button (recurring donations only)

This feature is launching today at GitHub Universe!

Also gave the numfocus.org hosted campaign for Bokeh, in case it helps people feel more secure/legit about the donation link.

cc @bryevdv",8,1,"['status: accepted', 'type: task', 'reso: completed']"
961,339718941,9401,3834332,2019-11-12 04:16:03,2019-11-12 16:33:58,closed,Bryanv/9122 bokeh models only api,"- [x] issues: fixes #9122
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

I'm not sure exactly what I want to do with the reference guide structure yet. Might punt that to a later PR.

Things I left alone:

* relative imports within `bokeh.models` to other submodules
* docs references (for now)",2,12,['status: accepted']
962,339652069,9400,3834332,2019-11-11 22:58:08,2019-12-18 17:22:15,closed,W0rdsm1th/master/9064 bokeh command typing,"resubmission of #9390 after fixing and running unit tests. small changes to logic as per below

- [X] issues: addresses #9064 
- [X] tests passed

bokeh.bokeh.command.subcommands.__init__.py
[x] fix failed unit test by removing typ_checking conditional from import Subcommand

[x] in import Subcommand in bokeh.command.subcommands._collect(), changed hasattr(attr, 'name') to getattr(attr, 'name'). because typing added empty string ""name"" attribute to abstract bases

bokeh.tests.unit.command.subcommands.test_serve.py
[x] changed the default None tuple in --log-level args to (""None"", ) to align with subcommands.serve.py due to typing and combining tuples of strings",13,18,['status: accepted']
963,339266407,9397,3834332,2019-11-11 05:56:02,2019-11-11 11:28:56,closed,Fix Inferno3 palette in BokehJS,"- [ ] issues: fixes #9392
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

The change here results in the JS and Python palettes having the same colours for Inferno3. No test is included because none exist for palettes in the JS API that I'm aware of.",1,1,['status: accepted']
964,338968907,9390,3834332,2019-11-09 09:46:00,2019-11-11 21:16:04,closed,resubmission of PR #9389 against master issue #9064 bokeh.command typing ,"resubmission of PR9389 against master branch after rebasing local fork

previous PR was against stale landing-2.0 branch. previous PR notes as below

# subcommand/
[x] __init__.py
bokeh.command.subcommands._collect()
TODO - added an empty string ""name"" attribute to Subcommand class, the if-check may now fail
if not hasattr(attr, 'name'): continue # excludes abstract bases

Unsure if should initialise with None instead of empty string. Attributes are not really Optional when subclassed
https://mypy.readthedocs.io/en/latest/kinds_of_types.html#optional-types-and-the-none-type
name: Optional[str] = None
help: Optional[str] = None

[X] serve.py
- found that paths are still string at this point and NOT PathLike
- bokeh.util.string.format_docstring fails typechecking, expects an Optional[str] arg and __doc__ is str

[X] svg.py
assumed below selenium executed JS will return bytes and not bytearray
bokeh.command.subcommands.svg.SVG.file_contents()
_SVG_SCRIPT = """"""
var serialized_svgs = [];
var svgs = document.getElementsByClassName('bk-root')[0].getElementsByTagName(""svg"");
for (var i = 0; i < svgs.length; i++) {
    var source = (new XMLSerializer()).serializeToString(svgs[i]);
    serialized_svgs.push(source);
};
return serialized_svgs
""""""

# command/
[X] bootstrap.py
- bokeh.command.bootstrap.main(): struggling to resolve argv mypy typing. is nested tuple of [(arg_name, arg_dict)] not Sequence[str]
[X] subcommand.py
- added empty class attributes ""name"" and ""help"". could impact hasattr() checks elsewhere

[X] util.py
bokeh.command.util.set_single_plot_width_height()
issue of conditionally assigning int native and Int bokeh type to same variable.
could use class properties and getters/setter methods on the Would need to set it on the Plot object: bokeh/models/plots.py:495 https://www.python-course.eu/python3_properties.php

- [x] issues: fixes #9064 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,4,['status: superseded']
965,338709790,9389,3834332,2019-11-08 14:47:13,2019-11-09 19:50:55,closed,9064 bokeh.command typing,"added mypy typing to function inputs and return values for command package. specific module comments and difficulties below

setup.cfg: reference the package for mypy testing

# subcommand/
[x] __init__.py
bokeh.command.subcommands._collect()
# TODO - added an empty string ""name"" attribute to Subcommand class, the if-check may now fail
if not hasattr(attr, 'name'): continue # excludes abstract bases

Unsure if should initialise with None instead of empty string. Attributes are not really Optional when subclassed
https://mypy.readthedocs.io/en/latest/kinds_of_types.html#optional-types-and-the-none-type
name: Optional[str] = None
help: Optional[str] = None

[X] serve.py
- found that paths are still string at this point and NOT PathLike
- bokeh.util.string.format_docstring fails typechecking, expects an Optional[str] arg and __doc__ is str

[X] svg.py
assumed below selenium executed JS will return bytes and not bytearray
bokeh.command.subcommands.svg.SVG.file_contents()
_SVG_SCRIPT = """"""
var serialized_svgs = [];
var svgs = document.getElementsByClassName('bk-root')[0].getElementsByTagName(""svg"");
for (var i = 0; i < svgs.length; i++) {
    var source = (new XMLSerializer()).serializeToString(svgs[i]);
    serialized_svgs.push(source);
};
return serialized_svgs
""""""

# command/
[X] bootstrap.py
- bokeh.command.bootstrap.main(): struggling to resolve argv mypy typing. is nested tuple of [(arg_name, arg_dict)] not Sequence[str]
[X] subcommand.py
- added empty class attributes ""name"" and ""help"". could impact hasattr() checks elsewhere

[X] util.py
bokeh.command.util.set_single_plot_width_height()
issue of conditionally assigning int native and Int bokeh type to same variable.
could use class properties and getters/setter methods on the Would need to set it on the Plot object: bokeh/models/plots.py:495 https://www.python-course.eu/python3_properties.php


- [X ] issues: fixes #9064 
- [ ] tests added / passed
N/A - mypy tests
- [ ] release document entry (if new feature or API change)
N/A
",3,3,['status: superseded']
966,338024873,9386,3834332,2019-11-07 12:55:39,2019-11-11 22:13:59,closed,Replace metaclasses with `__init_subclass__`,"This PR drops `_MetaEvent` and `MetaModel`. I will work on `HasPropsMeta` separately as it's a bigger chunk of work.

addresses #8666",0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: API: models']"
967,337867291,9385,3834332,2019-11-07 05:50:38,2019-11-07 15:21:57,closed,Include step in the list of glyphs that HoverTool does not work with,Small change to documentation to reflect that issue #7419 is still open,2,1,"['status: accepted', 'type: task', 'reso: completed']"
968,337791934,9384,3834332,2019-11-07 00:06:04,2019-11-13 15:54:53,closed,Add PYI for bokeh.palettes,"This is counter proposal to PR #9383. This allows to help IDEs to understand the module hack that `bokeh.palettes` uses. This allows to us to keep mutable data structures with copy on access. I tested this in vscode (with vscode-python extension) and pycharm (community edition), and both are able to resolve all palettes, collections, etc. with correct type information.

fixes #9248 
",1,1,['status: superseded']
969,337647239,9383,3834332,2019-11-06 21:33:12,2019-11-13 18:47:31,closed,remove module hack for palettes,"- [x] issues: fixes #9248
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

cc @p-himik @mattpap 

Needs a migration guide update and I would like to take the opportunity to add more tests.  I think there's typing things that can be refined as well. Just noting in passing some things we give up:

* can't call `palette.reverse()`
* palette groups are necessarily mutable (no built-in `frozendict`)",13,5,['status: accepted']
970,337497055,9382,3834332,2019-11-06 18:01:54,2019-11-06 19:13:18,closed,Byranv/9362 docs title,"- [x] issues: fixes #9362 
- [x] release document entry (if new feature or API change)

Fixes the docs title issue and also other small things:

* lingering deprecations
* don't warn when documenting deprecated models
* count annotations as renderers for MISSING_RENDERERS
* clean up conf

With this  PR docs build is 100% clean
",0,8,['status: accepted']
971,337306715,9379,3834332,2019-11-06 11:17:07,2019-11-06 14:44:04,closed,Remove last Python 2 compatibility bits,"Removing some last Python 2 bits. What remains to change is:

- `bokeh/colors/util.py`
    When Python2 support is dropped, this will no longer be necessary.
- `bokeh/server/auth_provider.py`
   TODO (bev) make this an ABC but wait until Bokeh 2 / drop Python 2.7

Those can be addressed in separate PRs, especially that I'm not sure what to do about both cases. I suppose use `Enum` in the former. However, the later is not a good candidate for using abstract classes, given the choice of implementation of different methods.

addresses #8666",1,9,"['status: accepted', 'type: task', 'reso: completed']"
972,337119204,9377,3834332,2019-11-06 01:13:53,2019-11-06 03:40:57,closed,Upgrade to TypeScript 3.7,,0,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
973,337076611,9376,3834332,2019-11-05 23:41:42,2019-11-06 14:17:25,closed,Use explicit and stricter mypy config,"This is not yet a strict config, as some options related to implicit any type and imports aren't enabled. Those will be enabled in future PRs, when more of bokeh, especially core, will be typed, and conda stub packages will be available for bokeh's dependencies (e.g. numpy-stubs).

addresses #9064
",0,3,['status: accepted']
974,336975146,9375,3834332,2019-11-05 20:34:55,2019-11-05 21:17:05,closed,deprecate WidgetBox,"- [x] issues: fixes #9334
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
975,336940685,9374,3834332,2019-11-05 19:12:17,2019-11-05 20:08:58,closed,"Revert ""exclude landing-2.0 issues from changelog for now""","Reverts bokeh/bokeh#9082

Now that `landing-2.0` is merged this temporary measure should be reverted.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
976,336924951,9373,3834332,2019-11-05 18:31:47,2019-11-05 19:14:19,closed,update conda recipe,"- [x] issues: fixes #8998

",0,1,['status: accepted']
977,336913218,9372,3834332,2019-11-05 18:02:02,2019-11-05 19:00:25,closed,remove old conda free channel,"- [x] issues: fixes #9125

",1,1,['status: accepted']
978,336544816,9370,3834332,2019-11-05 00:37:51,2019-11-05 14:08:09,closed,Exclude node_modules from flake8,"fixes #9366 
",0,1,['status: accepted']
979,336542724,9369,3834332,2019-11-05 00:29:37,2019-11-05 21:16:16,closed,Add missing typing_extensions dependency,"This is necessary to support some advanced types that were introduced after Python 3.6. This dependency was supposed to be added in an earlier PR, but somehow got removed. CI doesn't fail, because `mypy` incidentally installs this package as well.",4,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
980,336541655,9368,3834332,2019-11-05 00:24:56,2019-11-05 17:43:08,closed,Use `npm ci` instead of `npm install --no-save`,"fixes #9367 
",0,1,['status: accepted']
981,336503023,9365,3834332,2019-11-04 22:07:29,2019-11-04 23:34:56,closed,Landing 2.0,"All previously accepted PRs. Resubmitted PR #9364 to avoid a rebase.
",2,39,"['status: accepted', 'type: task', 'reso: completed']"
982,336495952,9364,3834332,2019-11-04 21:48:05,2019-11-04 21:52:09,closed,Landing 2.0,"All previously accepted PRs
",4,38,"['status: accepted', 'type: task', 'reso: completed']"
983,335936854,9358,3834332,2019-11-02 20:37:32,2019-11-27 15:44:02,closed,9064: static typing in bokeh.core.query,- [ ] issues: addresses #9064,1,3,['status: accepted']
984,335896737,9357,3834332,2019-11-02 17:40:18,2020-01-17 04:02:53,closed,Add static typing to bokeh.util.compiler,"Adds static typing to bokeh util.compiler.

- [x] issues: addresses #9064 
",3,1,['status: declined']
985,335878250,9356,3834332,2019-11-02 16:28:02,2019-11-27 14:59:55,closed,Add static typing to bokeh.driving,"… with partial function application typing

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: addresses #9064 

Added typing to Driving module, some problems with mypy and `partial` function application, does not easily infer curried function parameter types. See [issue](https://github.com/python/mypy/issues/1484) for details",4,4,['status: accepted']
986,335875056,9355,3834332,2019-11-02 16:16:19,2019-11-03 19:05:41,closed,Spinner improvements to handle bounds and steps,"- [x] issues: fixes #9035 and https://discourse.bokeh.org/t/digits-in-spinner-values/4170
- [] tests added / passed
![spinner_correction](https://user-images.githubusercontent.com/18531147/68073815-5be17480-fd94-11e9-99db-2080a5a3ce8c.gif)

Verification on:
https://github.com/bokeh/bokeh/issues/8786
![8786](https://user-images.githubusercontent.com/18531147/68073908-4e78ba00-fd95-11e9-835b-edc4ac460566.gif)

",1,3,['status: accepted']
987,335874997,9354,3834332,2019-11-02 16:16:06,2020-01-17 04:03:08,closed,9064 Added typing to layouts.py,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: addresses #9064",2,2,['status: declined']
988,335874501,9353,3834332,2019-11-02 16:14:17,2019-11-08 14:42:25,closed,9064 - static typing - bokeh.ext.py,"bokeh.ext.py: 
- added mypy typing to function inputs and return values.
- added keyword only argument restriction to init and build function

setup.cfg: reference the ext.py module for mypy testing

- [X ] issues: fixes #9064 
- [ ] tests added / passed
N/A test using mypy

- [ ] release document entry (if new feature or API change)
N/A",5,3,['status: WIP']
989,335862907,9352,3834332,2019-11-02 15:30:09,2019-12-19 11:59:38,closed,9064 - static typing - bokeh.util.hex.py,"bokeh.util.hex.py: added mypy typing to function inputs and return values. A lot of ""Any"" due to no numpy type stubs

setup.cfg: reference the module for mypy testing

- [x] issues: addresses #9064
- [ ] tests added / passed
N/A - use mypy to test
- [ ] release document entry (if new feature or API change)
",7,2,['status: superseded']
990,335848292,9351,3834332,2019-11-02 14:34:25,2019-11-11 01:19:26,closed,9064: Added typing to session_id,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: addresses #9064
",3,3,['status: accepted']
991,335847697,9350,3834332,2019-11-02 14:32:06,2019-11-05 14:12:21,closed,Add typing to deprecation,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: addresses #9064

Adds typing to util/deprecation.py and installs typing-extensions to package",0,3,['status: accepted']
992,335814614,9349,3834332,2019-11-02 12:24:52,2019-11-02 13:13:10,closed,Add static types to bokeh.util.sampledata,"- [x] issues: addresses #9064

In addition, fixes a `RuntimeError` message within the method `external_path`.

",0,2,['status: accepted']
993,335572565,9348,3834332,2019-11-01 19:06:23,2019-11-30 00:03:00,closed,Switch to ES2017 target and ES module system,"This is an early preview. Previously I added support for generating ES6 (ES2015) bundles, but only for testing purpose. The goal of this PR is switch to an even more modern variant of ES, which is ES2017, and make that the default this time. The primary addition in ES2017 is native async/await support, which will be useful when getting bokehjs more asynchronous-capable (loading external resources, delayed rendering etc.). Making this the default, means that old browsers won't be supported anymore, which includes IE and phantomjs. For these, I intend to provide legacy bundles, which will be ES5-transpiled versions of the main bundles with polyfills included. This will be available behind a flag in bokeh's resources, so that if a user wants to support old browsers (e.g. for internal company purpose), then he will have state that explicitly when creating his visualizations. Using legacy bungles will come with both code size and speed penalties over time (the more modern features we will use, the heavier the legacy bundles will be). The alternative is to drop support now, which I think may be premature, though it would make testing and deployment much easier.

Given the nature of changes in this PR, I also switched bokehjs' modules from commonjs to ES modules. This will make bokehjs integrate more easily with tooling in the web ecosystem, which includes packaging with webpack, etc. This will also allow us to resolve issues with some of our dependencies, like flatbush or proj4 (which can finally be updated).

fixes #8801 
",17,76,['status: accepted']
994,335502356,9347,3834332,2019-11-01 16:21:47,2019-11-01 22:03:15,closed,"Revert changes to examples/{spectrogram,surfce3d}","Those examples could be made to work with the new build system with a little bit of tweaking, but in general I think it was a premature move to covert them. It will be much easier to make them work with future improvements to extensions support (in 2.0).

fixes #9342 
",2,1,['status: accepted']
995,335489499,9346,3834332,2019-11-01 15:52:59,2019-11-01 22:03:56,closed,Resolve all dependencies of an extension,"This is a quick fix that affects only new-style extensions. Proper solutions include allowing lazy module loading in bokehjs and redesign of resource management with extension (among other things) in mind, both which I intend to do for 2.0.

fixes #9343 
",2,1,['status: accepted']
996,335391338,9344,3834332,2019-11-01 12:05:38,2019-12-21 19:13:07,closed,Officially support Python 3.8,Python 3.8 feedstock was finally merged. For now I just added support for unit testing on 3.8.,7,5,['status: superseded']
997,334506593,9340,3834332,2019-10-30 20:43:43,2019-10-30 21:13:07,closed,1.4.0 misc docs,"OK would like to have done more, but just out of time. 
",0,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
998,334489414,9338,3834332,2019-10-30 20:08:23,2019-10-30 20:56:08,closed,Include license in bokehjs bundles,"This was introduced in the compiler/extensions PRs. For now I copied the license into the prelude module, because making the import work is too much at this point.",0,1,"['type: bug', 'status: ready', 'reso: completed', 'tag: component: bokehjs']"
999,333511702,9336,3834332,2019-10-29 09:26:34,2019-11-20 18:21:04,closed,ci: replace appveyor with github actions,"Only windows and macos pipelines are run
on github actions for now.

- [X] issues:  #9284
- [X] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,6,['status: accepted']
1000,333412123,9335,3834332,2019-10-29 03:11:28,2019-10-29 21:15:08,closed,Update layout docs,"- [x] issues: fixes #9219
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,10,['status: accepted']
1001,333256215,9333,3834332,2019-10-28 18:17:30,2019-12-09 09:28:25,closed,Don't include type when referencing an object,"This differentiates refs (JSON-serializable representation of models) from ptrs (JSON-serializable references between models in model graphs). Previously this was encoded using a single interface with optional members. The naming convention isn't optimal. I think that what in this PR is a `ptr`, should be called `ref`, and `ref` should be renamed to `struct` (or something alike).

This also removes redundant `type` field from `ptrs`. This was a leftover from Backbone collections' time, where `type` was necessary to disambiguate IDs.

addresses #8458 ",3,5,['status: accepted']
1002,333042034,9332,3834332,2019-10-28 10:14:48,2019-11-01 18:13:44,closed,Finalize removal of bokeh's CSS resources,"This is a followup on PR #8989 that modularized bokeh's CSS.
",0,2,"['status: accepted', 'type: task']"
1003,332922863,9331,3834332,2019-10-28 02:13:57,2020-02-04 08:43:51,closed,Switch to geckodriver/firefox in bokeh.io,"This adds support for geckodriver/firefox and chromedriver/chromium, and removes support for obsolete phantomjs. The former pair is now the default, primarily because both geckodriver and firefox are available from conda-forge, so installation process is straightforward. The later pair can be used alternatively. I plan to add support for auto-detection of available drivers and headless browsers, and make bokeh use what's available, so that we don't force users to install new web browsers needlessly. Especially because there should be a viable browser available on modern systems. ",15,21,"['status: accepted', 'type: task']"
1004,332904935,9330,3834332,2019-10-27 23:21:19,2019-10-28 00:00:33,closed,New docs theme,"This PR completely re-does the Bokeh docs theme based on a modern bootstrap theme Joris Van den Bossche has been working on for Pandas. Several out of data or crufty areas were also incidentally cleaned up. If an `alerts.html` is present (with content) at `docs.bokeh.org` this theme will automatically show that prominently. Also the versions menu and banner warnings for dev/previous versions are all now driven from a central `versions.json` on the docs site as well. 

Additionally, I got Sphinx client side search working again until we can hopefully add an ad-free non-profit GCSE.

Going to merge this when green and try to deploy a dev build. Until then an older test deploy is at https://docs.bokeh.org/en/test4/index.html

issues: closes #8209 ",0,18,['status: accepted']
1005,332841406,9328,3834332,2019-10-27 10:06:42,2019-10-28 09:16:38,closed,Move tests out of tree,"Updated version of PR #9000.
",0,9,"['status: accepted', 'type: task']"
1006,332155550,9325,3834332,2019-10-24 17:18:08,2019-10-25 00:22:32,closed,Connect background change of layoutDOMView to invalidate_render(),"- [x] issues: fixes #9324 
",0,1,['status: accepted']
1007,331740535,9321,3834332,2019-10-23 20:53:41,2019-11-05 14:14:12,closed,Detach canvas and webgl from plots,"This was extracted from PR #8931, to simplify work on that PR.

addresses #3821 
",1,3,['status: accepted']
1008,330915182,9319,3834332,2019-10-22 10:25:55,2019-11-06 14:33:16,closed,9304: added ScientificFormatter as CellFormatter to support scientific notation,"…t scientific notation with precision settings

- [x] issues: fixes #9304 
- [ ] tests added / passed:
- [x] release document entry (if new feature or API change)

Notes:
* I used the same style as BasicTickFormatter, but without the ticks handling and Auto precision determination as that is not needed for single values
* toExponential does not handle precision values <1 despite the Bokeh documentation saying it could handle 0. Precision values for this BasicNumberFormatter implementation <1 are now handled as if 1 was passed @bryevdv: any idea on why toExponential does not handle precision=0? should providing a negative value raise an error instead, and if yes, how? Most ideally there would be a Bokeh type PosInt (0, 1, 2, 3, ...) that does validation automatically
* BasicNumberFormatter derives from StringFormatter so that one can use coloring and fonts
* I used the commit Hook and fixed the errors that were related to my code, but it seems there are additional errors that seemed unrelated. Could be that they are due to using Windows? (e.g. something about a file not found and something about icalendar)
* I did not add unit tests, not sure how to do so for this functionality as I did not see any existing unit tests for the other CellFormatters

Tested with:
```py
from bokeh.models import ColumnDataSource
from bokeh.models.widgets.tables import (
    DataTable, TableColumn, IntEditor, NumberFormatter, BasicNumberFormatter
)
from bokeh.io import curdoc
import copy

dict1 = {
    'x': list(range(10)),
    'y': [1.234**n/10**n for n in list(range(10))],
    'z': [1.234**n*10**n for n in list(range(10))],
}

source = ColumnDataSource(data=dict1)

columns = [
    TableColumn(field=""x"", title=""x""),
    TableColumn(field=""y"", title=""y""),
    TableColumn(field=""z"", title=""NumberFormatter"", formatter=NumberFormatter(format=""0.00[00]"")),
    TableColumn(field=""z"", title=""BNF"", formatter=BasicNumberFormatter()),
    TableColumn(field=""z"", title=""BNF False"", formatter=BasicNumberFormatter(use_scientific=False)),
    TableColumn(field=""z"", title=""BNF 2"", formatter=BasicNumberFormatter(precision=2)),
    TableColumn(field=""z"", title=""BNF 0"", formatter=BasicNumberFormatter(precision=0)),
    TableColumn(field=""z"", title=""BNF 3 red"", formatter=BasicNumberFormatter(precision=3,text_color='red'))
]

data_table = DataTable(
    source=source,
    columns=columns,
    width=800,
    reorderable=False,
)

curdoc().add_root(data_table)
```

Result:
![image](https://user-images.githubusercontent.com/7702207/67277658-94956a00-f4c7-11e9-8987-8a5d18be16bb.png)",9,5,['status: accepted']
1009,330702550,9318,3834332,2019-10-21 21:29:03,2019-10-21 22:30:14,closed,Support accessing list-like attributes on splattable lists,"- [x] issues: fixes #9317
- [x] tests added / passed
",3,2,['status: accepted']
1010,330078608,9314,3834332,2019-10-20 03:17:14,2019-10-20 15:40:27,closed,add test retry for flaky tests,"This would be a bandaid, but seeing how it looks. 

- [x] issues: addresses #9191

",3,1,['status: accepted']
1011,330057226,9313,3834332,2019-10-19 20:53:51,2019-10-19 20:54:16,closed,upate to use new gtag.js for GA,"- [x] issues: fixes #9305

After this is merged, will cut a dev build to check in actual deployment

",0,1,['status: accepted']
1012,330056080,9312,3834332,2019-10-19 20:39:27,2019-10-19 21:05:21,closed,Update references to jupyter_bokeh extension,"For now I just updated jupyterlab_bokeh -> jupyter_lab. Better documentation is needed, but I will leave this for another PR.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1013,330026264,9310,3834332,2019-10-19 14:42:31,2019-10-19 17:52:41,closed,Fix panels doc,"- [x] issues: fixes #9309
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1014,329976287,9308,3834332,2019-10-19 03:05:08,2019-10-19 17:48:19,closed,ensure inner dims event on dynamic added plot,"- [x] issues: fixes #9136
- [x] tests added / passed

@mattpap I don't think this is elegant, but it is expedient and self-contained and establishes a test. ",0,1,['status: accepted']
1015,329925595,9307,3834332,2019-10-18 21:11:59,2019-10-18 22:01:29,closed,generalize splattable lists,"- [x] issues: fixes #9239
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @bokeh/dev for any comments. Seems like it should be uncontroversial so I will plan to merge tomorrow without comment. ",6,3,['status: accepted']
1016,329537765,9306,3834332,2019-10-18 02:42:17,2019-10-18 02:42:29,closed,use better function name for apps,"- [x] issues: fixes #9265
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1017,329112067,9303,3834332,2019-10-17 07:36:12,2019-10-18 02:27:15,closed,9241 new fixed and diverging palettes,"This pull request is related to Issue [9241](https://github.com/bokeh/bokeh/issues/9241).

Fixed 256-length palettes were added and a diverging palette generator function was added.  A single test was added to test_palettes.py.",5,11,['status: accepted']
1018,328465933,9299,3834332,2019-10-15 21:07:07,2019-10-17 19:42:59,closed,"Include ""press up"" mouse event","Fixes #9298 

This PR extends the events recognized by bokehjs to include the `pressup` mouse event available from HammerJS. I also updated the examples that deal with mouse events.

Regarding testing, I used the updated code on a site I have and confirmed that it registers press and press up events (truncated):

```
plot.on_event(events.Press, lambda event: print(event, event.x, event.y, event.sx, event.sy))
plot.on_event(events.PressUp, lambda event: print(event, event.x, event.y, event.sx, event.sy))
```

=>

```
<bokeh.events.Press object at 0x1195b8da0> 60 14.957081545064378 915 221
<bokeh.events.PressUp object at 0x1195b8e80> 60 14.957081545064378 915 221
```",2,1,['status: accepted']
1019,328253770,9293,3834332,2019-10-15 12:52:39,2019-10-15 18:31:22,closed,Document plotting API effect on themes,"As discussed in #9173
",1,1,['status: accepted']
1020,327578548,9292,3834332,2019-10-13 18:07:22,2019-10-15 12:29:31,closed,respect global table.sortable flag,"- [x] issues: fixes #9266
- [x] tests added / passed

I think I'd like to add some integration tests around table sorting but lets make sure the existing ones pass with this change",3,2,['status: accepted']
1021,327578037,9291,3834332,2019-10-13 18:00:46,2019-10-13 23:02:39,closed,Update interaction_callbacks_for_hover.py,"- [x] issues: fixes #9237

",0,1,['status: accepted']
1022,327556761,9289,3834332,2019-10-13 13:45:59,2019-10-13 23:13:20,closed,Fix broken docs links,Developer builds were removed from the docs in #9106,10,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1023,327541909,9287,3834332,2019-10-13 10:13:58,2019-10-13 17:02:30,closed,Fixes of user-guide documentation and app example typos,"- [ ] issues: fixes #9286
- [ ] tests added / passed: N/A
",1,2,"['status: accepted', 'reso: completed']"
1024,327540728,9285,3834332,2019-10-13 09:54:56,2019-10-27 22:24:55,closed,Landing 2.0b,Removing tuple/list from streamlines/density parameter comment to assist in later type hinting.,1,35,['status: superseded']
1025,327473547,9282,3834332,2019-10-12 15:18:28,2019-10-13 09:22:33,closed,Fix density parameter of streamlines function to accept tuples.,small fix found during pyconde19 sprints.,5,1,['status: declined']
1026,327467674,9281,3834332,2019-10-12 14:05:17,2019-11-11 03:32:04,closed,Simplify package dependency installation for development environment setup,"This PR addresses a simplified setup of the python/conda [dependency installation](https://bokeh.pydata.org/en/latest/docs/dev_guide/setup.html#installing-dependencies). Instead of needing several distinct steps (add conda channels, install jinja and pyyaml, select os dependant command line), this PR proposes a simplified approach moving the mentioned steps into a separate python module. 

### Motivation
With this PR, it would be sufficient to run `python scripts/install_dev_env.py`. It should work regardless of operating system and shell. 

### Modification
This PR modifies `scripts/dep.py` to expose its functionality to other modules without changing its actual behavior. Running `scripts/dep.py` still yields the same result.
In addition, `scripts/install_dev_env.py` handles the simplified conda packages installation while relying on `scripts/dep.py`.

### Limitations/considerations:
- requires an existing python interpreter accessible via PATH
- likely works with python 3.5+ only
- only tested under windows 10
- running `install_dev_env.py` does not ask the user for confirmation of package installation in the currently activated conda environment (which is similar to before)

### ToDo
- [x] issues: #9280
- [ ] check correct installation behavior on different operation systems
- [ ] if accepted, the setup documentation needs to modified accordingly
",1,36,['status: declined']
1027,327462295,9278,3834332,2019-10-12 12:53:59,2019-10-12 23:23:10,closed,Consistently use https protcol for cdn.pydata.org URLs,"Most browsers will not load http scripts from https pages. A few links were already using https, but some were not. http://cdn.pydata.org redirects to https://cdn.pydata.org so the loaded scripts will be the same.",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1028,327462282,9277,3834332,2019-10-12 12:53:50,2019-10-13 02:06:06,closed,Use Exception Chaining if import_required failed,"Same as, but targeting https://github.com/bokeh/bokeh/pull/9273 as proposed by @mattpap 

For details, see issue #9272

 issues: fixes #9272
 tests added / passed
 release document entry (if new feature or API change)",2,1,['status: accepted']
1029,327451623,9276,3834332,2019-10-12 10:26:25,2019-10-13 00:03:06,closed,9271: replace deprecated package istanbul with nyc,"- [x] issues: fixes #9271 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1030,327448394,9275,3834332,2019-10-12 09:48:24,2019-10-15 18:33:11,closed,Improve error message if import of channels fails.,"Currently channels in only availeble on pip, but not conda.
Thus the conda install mentioned in the developer guide will not install it.
To run pytest -m codebase (mentioned in the developer guide) to be added as
git pre-commit hook will fail, giving first-time-contributers a bad experience

Point the users to install it via pip instead

- [x] issues: fixes #9274
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,1,['status: accepted']
1031,327445873,9273,3834332,2019-10-12 09:18:23,2019-10-12 12:54:49,closed,Use Exception Chaining if import_required failed,"For details, see issue #9272

- [x] issues: fixes #9272
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: declined']
1032,326881243,9270,3834332,2019-10-10 18:54:06,2019-10-10 19:57:31,closed,Invalidate assets in folder and subfolders,"All assets with the path prefix in Amazon Cloudfront
CDN are invalidated in its cache.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9264 
- [ ] ~tests added / passed~
- [ ] ~release document entry (if new feature or API change)~
",1,1,['status: accepted']
1033,326837730,9269,3834332,2019-10-10 16:59:43,2019-10-10 19:45:15,closed,Fix range_tool selection bug,"
- [x] issues: fixes #9267
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Edits as suggested by @bryevdv on issue #9267 . Thanks for the support getting the bug fixed!",6,9,['status: accepted']
1034,325396934,9263,3834332,2019-10-07 16:48:45,2019-10-19 20:10:49,closed,Remove ipywidgets integration,"The integration will be moved to jupyterlab_bokeh.

- addresses #9137 
- fixes #9157 ",3,4,['status: accepted']
1035,324884421,9262,3834332,2019-10-04 23:49:54,2019-10-05 00:53:04,closed,fix structure issues in palette docs,"This PR fixes two issues with the `bokeh.palettes` documentation pages:

* palette names were at `<h2>` which put them above the enclosing `<h3>` section headers. They are now `<h4>` which will play much better with the upcoming search crawler

* Functions entries were duplicated at the bottom due to `:members:` (we explicitly call autofunction earlier) This has been removed
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1036,323856915,9259,3834332,2019-10-02 17:16:15,2019-10-03 05:36:04,closed,Updates doc string for AjaxDataSource to include note on FactorRange,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [X] issues: fixes #9258
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1037,323210007,9253,3834332,2019-10-01 10:58:03,2019-10-01 22:48:39,closed,Fixed image hover value on inverted axes,"This ensures that the `ImageIndex` generated by hover correctly inverts the indexes when the axis range is inverted. The initial attempt at fixing this (https://github.com/bokeh/bokeh/pull/8031/) did not invert the index.

<img width=""514"" alt=""Screen Shot 2019-10-01 at 1 00 33 PM"" src=""https://user-images.githubusercontent.com/1550771/65956817-93829700-e44b-11e9-8b6d-4e0eea23291c.png"">

- [x] issues: fixes #8778
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1038,322375510,9250,3834332,2019-09-28 02:25:47,2019-09-30 16:05:13,closed,allow auto-bounds to consider glyph visibility,"- [x] issues: fixes #9144
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap I did about the simplest thing possible. If you have thoughts on a different or better way to trigger an `update_dataranges`, please let me know. I may try to add integration tests for interactive legends in this PR, since there are none at all presently. ",1,3,['status: accepted']
1039,322182087,9247,3834332,2019-09-27 14:08:04,2019-11-03 19:02:55,closed,Check for empty object,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8402
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,3,['status: accepted']
1040,320109367,9235,3834332,2019-09-23 02:28:25,2019-09-27 01:59:20,closed,explict legend kwargs,"- [x] issues: fixes #9135
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

@bokeh/dev before I finish up with docs, I would appreciate any review/comments. This PR implements the proprosal in https://github.com/bokeh/bokeh/issues/9135#issuecomment-517880760 namely:

* deprecate `legend` keyword (will stay working in until at least 3.x)
* `legend_label` will always make a string label
* `legend_field` will perform an automatic groupby on the JS side (one legend item)
* `legend_group` will group on the python side (multiple legend items)

are these the best names for the args?
",8,5,['status: accepted']
1041,320085155,9234,3834332,2019-09-22 21:31:54,2019-09-24 01:56:58,closed,clarify selection usage,"- [x] issues: fixes #9073
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1042,320033241,9232,3834332,2019-09-22 10:46:09,2019-10-03 15:52:02,closed,Fixed issue of Datepicker displaying the wrong date for users in UTC+…,"… timezones.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9129
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,5,['status: accepted']
1043,319065647,9229,3834332,2019-09-19 02:14:47,2019-09-20 02:46:39,closed,Bryanv/update docs automation,"This PR updates the build an deploy automation to upload to the the new S3 location for the docs. Old scripts and configurations that are no longer needed are also removed. Details:

* secure environment variables (except the google api key) are now configured from the TravisCI UI
* dependecies on fabric ~~and artifact~~ are removed
* old encrypted tarball is removed 
* old draw.io sources are removed
",6,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1044,318873104,9228,3834332,2019-09-18 15:28:09,2019-09-20 03:32:31,closed,Update current year,"2018 -->2019

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,1,"['status: accepted', 'type: task', 'reso: completed']"
1045,318385150,9227,3834332,2019-09-17 15:01:38,2019-09-17 16:20:56,closed,9226: Update license id to use the proper SPDX short license id,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9226
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1046,317171911,9224,3834332,2019-09-13 04:43:21,2019-09-13 05:25:51,closed,add missing WebSource,"- [x] issues: fixes #9220
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1047,314609254,9214,3834332,2019-09-05 17:00:08,2019-09-07 16:37:14,closed,Adding the ability to parse globs in quotes in serve,"
- [x] issues: fixes #9209 
- [x] tests added / passed - still working on these
- [x] release document entry (if new feature or API change)
",3,5,['status: accepted']
1048,314012151,9212,3834332,2019-09-04 12:32:44,2019-09-04 16:08:06,closed,Upgrade to TypeScript 3.6,,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
1049,314002477,9211,3834332,2019-09-04 12:07:29,2019-09-04 15:55:27,closed,[DOC] Tpyos,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx (Nope)
- [ ] tests added / passed (Hopefully)
- [ ] release document entry (if new feature or API change) (Nope)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1050,312645026,9206,3834332,2019-08-30 08:53:40,2019-08-30 22:00:54,closed,Outdated sentence removed from docs,"The sentence seems outdated because the new notation is `output_backend = 'webgl'` and saving plots as PNG with `output_backend = 'canvas'` works well.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1051,312632324,9205,3834332,2019-08-30 08:16:49,2019-08-30 21:59:52,closed,Don't depend on ipywidgets,,1,2,"['status: accepted', 'type: task', 'reso: completed', 'plat: windows', 'tag: component: build']"
1052,312557999,9204,3834332,2019-08-30 02:35:42,2019-08-30 22:01:38,closed,Fix broken link to examples/app,"- [x] issues: fixes #9199
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1053,312440773,9203,3834332,2019-08-29 18:28:59,2019-08-31 16:00:41,closed,Print full stacktrace to console when an error occurs,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9202 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,3,['status: accepted']
1054,312401676,9201,3834332,2019-08-29 16:33:30,2019-08-30 08:17:46,closed,Don't install ipywidgets on Windows,"Before I revert previous work, let's proceed with a quick fix to allow other PRs get merged.
",3,1,"['status: superseded', 'type: task']"
1055,312376710,9200,3834332,2019-08-29 15:32:10,2019-08-30 22:02:13,closed,"Fix typos in docs, comments, etc","Fixed some typos in docs, comments, string literals, etc.",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1056,312068343,9198,3834332,2019-08-28 22:55:40,2019-10-07 16:43:01,closed,Add support for 'bokeh build' command,"This adds `bokeh build <base_path>` command. A test case is available in https://github.com/pyviz/panel/pull/626.

fixes #9196 
fixes #9240 ",12,16,['status: accepted']
1057,311448211,9193,3834332,2019-08-27 15:42:20,2019-08-30 22:05:28,closed,Bump eslint-utils from 1.4.0 to 1.4.2 in /bokehjs,"Bumps [eslint-utils](https://github.com/mysticatea/eslint-utils) from 1.4.0 to 1.4.2.
<details>
<summary>Commits</summary>

- [`4e1bc07`](https://github.com/mysticatea/eslint-utils/commit/4e1bc077c2a6bb00538d66b69a63c24de3463bed) 1.4.2
- [`e4cb014`](https://github.com/mysticatea/eslint-utils/commit/e4cb01498df6096b66edb0c78965ee6f47d3ac77) 🐛 add null test
- [`230a4e2`](https://github.com/mysticatea/eslint-utils/commit/230a4e2275cde169cbfbb95cd2e4de2152fae0a2) 1.4.1
- [`08158db`](https://github.com/mysticatea/eslint-utils/commit/08158db1c98fd71cf0f32ddefbc147e2620e724c) 🐛 fix getStaticValue security issue
- [`587cca2`](https://github.com/mysticatea/eslint-utils/commit/587cca2f82c245f5fc4a8b9fb2cf6b35c0d02552) 🐛 fix getStringIfConstant to handle literals correctly
- [`c119e83`](https://github.com/mysticatea/eslint-utils/commit/c119e832952c8c653bd4f21e39eb9f7ce48e5947) 🐛 fix getStaticValue to handle bigint correctly
- See full diff in [compare view](https://github.com/mysticatea/eslint-utils/compare/v1.4.0...v1.4.2)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=eslint-utils&package-manager=npm_and_yarn&previous-version=1.4.0&new-version=1.4.2)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language

You can disable automated security fix PRs for this repo from the [Security Alerts page](https://github.com/bokeh/bokeh/network/alerts).

</details>",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs', 'dependencies']"
1058,311290822,9192,3834332,2019-08-27 09:32:27,2019-08-30 22:03:12,closed,Pillow is already a bokeh dependency,"I think the ""additional dependency"" `pillow` should be removed from this section because it is already a bokeh dependency",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1059,310653795,9190,3834332,2019-08-25 02:51:36,2019-09-11 23:41:48,closed,Auth features for server,"- [x] issues: fixes #9140
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This is WIP, would like to get some early feed back on how the usage feels.

You can now supply an auth modue, e.g. 
```

import tornado
from tornado.web import RequestHandler

# could also define async_get_user
def get_user(request_handler):
    return request_handler.get_secure_cookie(""user"")

# could also define get_login_url func (but give up LoginHandler)
login_url = ""/login""

# optional login page at login_url
class LoginHandler(RequestHandler):

    def get(self):
        try:
            errormessage = self.get_argument(""error"")
        except:
            errormessage = """"
        self.render(""login.html"", errormessage=errormessage)

    def check_permission(self, password, username):
        if username == ""bokeh"" and password == ""bokeh"":
            return True
        return False

    def post(self):
        username = self.get_argument(""username"", """")
        password = self.get_argument(""password"", """")
        auth = self.check_permission(password, username)
        if auth:
            self.set_current_user(username)
            self.redirect(self.get_argument(""next"", u""/""))
        else:
            error_msg = u""?error="" + tornado.escape.url_escape(""Login incorrect"")
            self.redirect(login_url + error_msg)

    def set_current_user(self, user):
        if user:
            self.set_secure_cookie(""user"", tornado.escape.json_encode(user))
        else:
            self.clear_cookie(""user"")
```
and a `login.html` template, and you can only get to the app if you pass login. 


Some notes: 

* always have to supply `--auth-module` separately, i.e. can't make `auth.py` in a directoy app work because there could be multiple directory apps and that makes no sense (also other reasons)
* `LoginHandler` is optional, ""serious"" deploys would redirect to some external login probably
* Since any cookie get/set happens in the auth module, users can control max age and expiry there themselves when they call those funcs
* Do we need to support a `LogoutHandler`? Presumably apps could clear the cookie themselved from a Button push, etc. Maybe later?

Initial thoughts, @bokeh/dev ?",12,36,['status: accepted']
1060,310653499,9189,3834332,2019-08-25 02:43:31,2019-08-25 16:55:57,closed,"handle angle between 0, 2pi correctly","This PR makes sure that `angle_norm` only returns 0 for initial angle=0, and 2pi for any positive or negative multiples. Additionally d=2pi is special cased in `angle_between` since the direction is degenerate in that case. 

- [x] issues: fixes #9152
- [x] tests added / passed

Results of OP example as well as current GH repo example:


<img width=""469"" alt=""Screen Shot 2019-08-24 at 7 40 05 PM"" src=""https://user-images.githubusercontent.com/1078448/63644877-681bc800-c6a7-11e9-94fd-fd6a9cac5d90.png"">
<img width=""419"" alt=""Screen Shot 2019-08-24 at 7 40 13 PM"" src=""https://user-images.githubusercontent.com/1078448/63644878-681bc800-c6a7-11e9-95a3-6ff47080a6e1.png"">




",0,1,['status: accepted']
1061,310537791,9188,3834332,2019-08-23 21:20:21,2019-08-30 22:08:18,closed,Finalize support for rotate events,"addresses #9187 
",2,1,['status: accepted']
1062,310293853,9186,3834332,2019-08-23 08:58:03,2019-08-28 14:34:04,closed,Pin GMaps API at version 3.36,"Versions 3.37+ don't work reliably in older browsers like IE or phantomjs.

fixes #9185 ",0,1,['status: accepted']
1063,310109166,9184,3834332,2019-08-22 19:36:42,2019-08-22 22:49:57,closed,ensure null values in geoJSON are rendered as NaNs in the data source,"- [x] issues: fixes #9174
- [x] tests added / passed

OP test code
```
import geopandas as gpd
import numpy as np
from bokeh.palettes import Reds
from bokeh.models import GeoJSONDataSource, LinearColorMapper
from bokeh.plotting import figure, show

geodf = gpd.read_file(""provinces.geojson"")
geodf.loc[6, 'index'] = np.nan
print(geodf)
color_mapper = LinearColorMapper(palette=Reds[9][::-1], nan_color='black')

p = figure()
geo_source = GeoJSONDataSource(geojson=geodf.to_json())
p.patches('xs', 'ys', fill_alpha=1,
              fill_color={'field': 'index', 'transform': color_mapper},
              line_color='white', line_width=0.5,
              source=geo_source)

show(p)
```
Now produces:

<img width=""428"" alt=""Screen Shot 2019-08-22 at 12 36 18 PM"" src=""https://user-images.githubusercontent.com/1078448/63544205-77e5b180-c4d9-11e9-8a77-90a0cef150ba.png"">
",0,1,['status: accepted']
1064,309764127,9183,3834332,2019-08-22 03:19:36,2019-08-22 04:01:36,closed,Update all docs links,This updates all the docs links and makes sure there are no references to either `bokeh.pydata.org` or `bokehplots.com`,0,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1065,309316929,9180,3834332,2019-08-21 04:22:04,2019-09-13 05:42:52,closed,add Turbo palette,"- [x] issues: fixes #9179
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Went ahead and added to this to the ""mpl"" group since I have heard from MPL devs that they do plan to include it. It's also the best current place. I think for 2.0 we should consider renaming that group, though. 

From generated docs:

<img width=""649"" alt=""Screen Shot 2019-08-20 at 9 18 07 PM"" src=""https://user-images.githubusercontent.com/1078448/63402481-7492de80-c390-11e9-821c-30041c82e567.png"">

<img width=""342"" alt=""Screen Shot 2019-08-20 at 9 17 57 PM"" src=""https://user-images.githubusercontent.com/1078448/63402484-75c40b80-c390-11e9-8794-279dd37a165d.png"">

<img width=""336"" alt=""Screen Shot 2019-08-20 at 9 17 46 PM"" src=""https://user-images.githubusercontent.com/1078448/63402486-778dcf00-c390-11e9-8545-e278155e7b2e.png"">
",2,2,['status: accepted']
1066,309064155,9177,3834332,2019-08-20 13:56:38,2019-08-20 16:06:45,closed,Remove the slack notification token from .travis.yml,"As the title says this PR removes the slack notification token from the .travis.yml since it causes a lot of clutter and most core developers no longer have access to the Slack feed it is posted to anyway.
",0,1,"['status: accepted', 'type: task']"
1067,308695592,9176,3834332,2019-08-19 16:48:50,2019-08-19 21:54:21,closed,Make bokeh's tests work with pytest >= 5,"I also pulled in a fix to an annoying server test failure from the `async` branch.

fixes #9175 
",0,4,['status: accepted']
1068,308406346,9171,3834332,2019-08-19 00:10:19,2019-08-19 21:44:58,closed,Automatically insert class init code,"This change is backwards compatible. Nothing changes from users' perspective and one can still use the old syntax.

fixes #9170 
",1,2,['status: accepted']
1069,308324362,9168,3834332,2019-08-17 23:12:18,2019-08-19 07:45:38,closed,Generate ES6 (ES2015) compatible bundles,"fixes #9167 
",0,3,['status: accepted']
1070,308319441,9166,3834332,2019-08-17 21:21:51,2019-08-17 22:13:46,closed,Bryanv/revert rtd,"This PR reverts the attempted RTD work and also fixes the broken footer links

* [x] issues: fixes #9143
",0,4,['status: accepted']
1071,307528686,9163,3834332,2019-08-14 23:05:37,2019-08-16 02:28:57,closed,don't upload to s3 on py27 tests,"fixes #9165 

Not sure what is causing the sudden failure of the s3 examples report on just the py27 build, but since the report doesn't actually have any images anyway, I'm also not interested in finding out. This PR just removes the upload from the py27 build. 

cc @mattpap just FYI",5,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: examples']"
1072,306684855,9160,3834332,2019-08-12 22:38:21,2019-08-13 03:22:49,closed,Enable more eslint rules,"Enables the following rules:
- [x] `indent`
- [x] `semi`
- [x] `no-floating-decimal`
- [x] `brace-style`
- [x] `no-trailing-spaces`
- [x] `space-before-function-paren`
- [x] `space-in-parens`
",0,10,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
1073,306323966,9158,3834332,2019-08-12 00:15:13,2019-08-13 14:37:26,closed,Add SSL termination and revamped settings system,"This one went a bit afield. I finally got fed up with the existing `bokeh.settings` and inconsistencies in settings preference order, that I redid the whole thing so that:

* the order for checking settings is documented and consistent 
* settings can be auto-documented 
* support for settings config files

There's still work to do (for 2.0 to make sure this new settings system is applied consistently and that there are conventions about who has responsibility for what. 

- [x] issues: fixes #9139
- [x] tests added / passed
- [x] release document entry (if new feature or API change)",5,12,['status: accepted']
1074,306314700,9156,3834332,2019-08-11 22:00:28,2019-08-12 13:06:39,closed,Add support for typescript-eslint,"Adds support for eslint (and typescript-eslint). One can use `node make eslint` to run the linter, but the preferred command is `node make lint`, which runs both `eslint` and `tslint`. I enabled a few stylistic rules (tslint doesn't have those) for testing.

fixes #9155 
",7,9,['status: accepted']
1075,306175581,9153,3834332,2019-08-10 01:32:29,2019-11-19 03:01:24,closed,Convert _pop_colors_and_alpha to _pop_visuals,"Ni! This PR replaces `_pop_colors_and_alpha` with a new function `_pop_visuals` that works on all visuals in a more generic fashion. Details are documented in the code. As discussed in issue #8893, changes in property inheritance behavior should be noted in the release. In particular, visuals for a non prefixed glyph now serve as base for their prefixed counterparts (`hover_line_color` defaults to `line_color` if that is set), and aliases now work for all property traits ('selection_{y}' is an alias for 'selection_{x}_{y}' for any (x, y) where x is a visual feature).

Implemented and tested in `/bokeh/plotting/helpers.py`.
Implemented and not tested in `bokehjs/src/lib/api/plotting.ts`.

- [x] issues: fixes #8893, #4820
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

@bryevdv",27,13,['status: accepted']
1076,305656896,9150,3834332,2019-08-08 16:30:10,2019-08-08 20:23:42,closed,Use BokehJS from CDN when the commit is tagged,"Get the name of the version from the git tag instead of using Read the
Docs version's name.

This fixes the problem when the commit is a tagged and Read the Docs
is building `latest` version for example. With this commit, we are
setting the CDN version to use as the tag name instead of the Read the
Docs version's name, which is the correct name.",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1077,304083933,9142,3834332,2019-08-04 17:45:55,2019-08-04 19:37:48,closed,compute runtime deps correctly,"`deps.py run` was not actually returning runtime dependencies from `setup.py` This was exposed in `landing-2.0` where ""pillow? was moved from test to runtime deps. It was no longer getting installed and tests were failing on PIL imports. (It's possible recent pyyaml and conda-build revs changed something that worked previously)

Also bumps default Python version, if unspecified, to 3.7 (e.g. build phase)",0,4,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
1078,304001599,9138,3834332,2019-08-03 13:51:59,2019-08-12 14:24:26,closed,Allow to integrate bokeh models with ipywidgets,"Preliminary support for bokeh models and ipywidgets integration, based on [ipybokeh](https://github.com/pyviz/ipybokeh). This allows to use bokeh models (`LayoutDOM`) as a part of ipywidgets' layouts and allows for bidirectional communication between both kinds of widgets. ~~Mind failing `test:size`, due to inclusion of some jupyter libraries, but that will have to change significantly~~.

fixes #9137 ",13,12,['status: accepted']
1079,302277696,9127,3834332,2019-07-29 23:57:07,2019-07-30 01:18:55,closed,exclude ipython tests on minimal build,"
",0,1,"['status: ready', 'type: task', 'reso: completed', 'tag: component: build']"
1080,302242168,9126,3834332,2019-07-29 21:26:38,2019-07-30 02:33:37,closed,Polyfill ES2015 Set,"fixes #9123
",1,4,['status: accepted']
1081,301954463,9121,3834332,2019-07-29 08:04:17,2019-07-30 15:28:08,closed,Changes faulty type declaration in docstrings,fixes #9101 ,12,2,['status: accepted']
1082,301860373,9117,3834332,2019-07-28 21:10:16,2019-07-28 21:51:57,closed,upload files to backup CDN on release,"- [x] issues: fixes #9112

This PR adds an upload to `cdn-backup.org` and also removes all code for the RackSpace upload.
",1,1,['status: accepted']
1083,301807097,9116,3834332,2019-07-28 05:55:05,2019-07-29 06:55:44,closed,Make min_characters configurable on AutoComplete,"- [x] issues: fixes #4870
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR adds a configurable `min_characters` property to `AutoComplete` that controls how many characters are needed to be input before completions will be presented. The existing default of 2 is retained. 

This PR also adds a `PositiveInt` property, and fixes missing `NonNegativeInt` documentation.",2,3,['status: accepted']
1084,300654071,9109,3834332,2019-07-24 10:12:32,2019-08-02 23:23:43,closed,Build on Read the Docs,"Hi all!

This PR includes all the work that Read the Docs folks have been doing in the last weeks coordinated by @bryevdv.

I'm happy to finally make this PR in the official repository and have Bokeh folks onboarding on Read the Docs!

### Changes

- Create a `docs.txt` requirement file
- Create a `readthedocs.yml` file
- Use `BOKEH_BUILD_JS` on `setup.py` to avoid user input when installing under Read the Docs
- Upgrade `npm` from `conf.py` when building since Read the Docs Docker image has an old version currently
- Create symlink for examples and Sphinx to be picked and rendered
- Set `BOKEH_DOCS_CDN` properly
  - with `test:` prefix to use Resources (JS/CSS) from Read the Docs when building non-tagged versions
  - to use CDN when tagged versions
- Set `BOKEH_DOCS_VERSION` from `READTHEDOCS_VERSION`
- Download all sample data when running on Read the Docs
- Remove Bokeh's custom version selector and use Read the Docs flyout menu instead
- Remove version warning (`version.txt` file and AJAX call)
  - Read the Docs already comes with this feature and can be enabled if needed
- Compile CSS and JS under a specific directory structure
  - Bokeh currently have these URLs hardcoded, so the default `_static` can't be used
- Ignore Google API key for now
- Set `bokeh_plot_use_relative_path = True` to deal with JS files properly
- Enable Read the Docs' Search engine
  - Add `Search` navbar link
  - Add `search.html` template to render the search page
- Modify the `layout.html` from Bokeh customized theme to add common scripts/css blocks
- Make some CSS changes to fix `z-index` property interfering with the flyout menu


### Onboarding

This branch can be activated as a Version on Read the Docs and should build properly latest changes from today's `master` (BokehJS _and_ documentation).


### Online documentation on Read the Docs (temporal)

I created a private project on https://readthedocs.com to show how the docs will look like once imported on Read the Docs. You can check out them at https://bokeh-bokeh.readthedocs-hosted.com/en/latest/",8,49,['status: accepted']
1085,300063729,9106,3834332,2019-07-22 22:35:27,2019-07-23 00:34:02,closed,Remove Dev Build installation instructions,"It is evidently impossible to adequately convey the ephemeral nature and absence of any guarantees around dev build resources, which can lead to confusion and problems for users. Additionally, looking back, the actual benefit from making public announcements of dev builds (in terms of actionable feedback received from the public at large) has been negligible over the years. This PR removes public-facing instructions for installing from the `bokeh/dev` channel, and in the future no announcements will be made when dev builds or rcs are published to it. ",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1086,299584600,9104,3834332,2019-07-20 19:07:34,2019-07-20 21:30:22,closed,Update project author info,,0,2,['status: accepted']
1087,299526916,9103,3834332,2019-07-20 01:34:42,2019-07-20 04:05:18,closed,Update dask test location,"
",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1088,299479340,9102,3834332,2019-07-19 20:38:57,2019-07-19 20:41:03,closed,docs: Update Documentation urls in README,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1089,299192044,9100,3834332,2019-07-19 05:41:40,2019-07-19 22:47:41,closed,extend FileInput with more attributes.,"Replaces the `file` attribute in the FileInput widget with separate `value` and `mime_type` attributes. Also adds a `filename` attribute.

- [x] issues: fixes #9099
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",14,7,['status: accepted']
1090,298065470,9095,3834332,2019-07-16 14:21:37,2019-07-19 20:26:16,closed,Update docker to work with new conda and bokeh,I've updated the Dockerfile for the three styles of containers we have.  Opened a related issue for autobuilding/testing here: https://github.com/bokeh/bokeh/issues/9094,0,6,"['type: bug', 'status: accepted', 'reso: completed']"
1091,297992698,9093,3834332,2019-07-16 11:16:14,2019-07-19 00:31:03,closed,fix double slash in autoload.js,"issues: fixes #9092
",3,1,['status: accepted']
1092,297935720,9091,3834332,2019-07-16 08:46:23,2019-07-16 22:35:44,closed,Store msgs and handle them when session is created,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8403
- [x] tests ~~added~~ / passed
- [ ] release document entry (if new feature or API change)

---

Because of the heavy use of promises, we still need to accumulate messages and handle them when the session is ready. Another reason to accumulate them is that there are kinds of messages other than PATCH - e.g. we don't want to miss any errors.",1,1,['status: accepted']
1093,297922941,9090,3834332,2019-07-16 08:09:07,2019-10-28 10:00:40,closed,Add more static type declarations to bokeh,"Given that `landing-2.0` branch is being rebased, this merges together PRs:

- https://github.com/bokeh/bokeh/pull/9079
- https://github.com/bokeh/bokeh/pull/9077
- https://github.com/bokeh/bokeh/pull/9072
- https://github.com/bokeh/bokeh/pull/9071

to speed up development and unify changes introduced there when they intersect.

addresses #9064 

fixes #9070
",2,7,['status: accepted']
1094,297888005,9089,3834332,2019-07-16 06:07:37,2019-07-16 07:59:13,closed,make vbar/hbar specs compatible with python,"- [x] issues: fixes #9033
",2,2,['status: accepted']
1095,297819403,9088,3834332,2019-07-15 23:14:03,2019-07-19 05:51:01,closed,Purge dead references on tools change,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9032
- [x] tests ~~added~~ / passed
- [ ] release document entry (if new feature or API change)
",4,1,['status: accepted']
1096,297472651,9085,3834332,2019-07-15 05:19:40,2019-07-16 22:33:44,closed,"[DOCS] update bokeplots, gitter and mailing-list links","* removed some pages that now exist on bokeh.org and relinked
* relinked bokehplots.com targets to updated locations
* replaced mailning-list and gitter links with Discourse

fixes #9080 ",13,6,['status: accepted']
1097,297442509,9084,3834332,2019-07-15 00:56:19,2019-07-15 04:11:03,closed,Add hover support to area glyphs,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8872

",1,1,['status: accepted']
1098,297435184,9083,3834332,2019-07-14 23:10:37,2019-07-15 04:08:41,closed,Bryanv/6096 file input,"- [x] issues: fixes #6096
- [x] release document entry (if new feature or API change)

This PR adds a `FileInput` widgets based off the one currently in Holoviews. This implementation add support for the `accept` attribute. This PR also adds an entry for the missing `ColorPicker` in the User guide interaction widgets section.

As much as I would like integration tests, I am not sure how to even begin testing a highly brower/platform dependent widget like this.

@mattpap can you comment on the layout/widget code? I feel it is not idiomatic for bokeh

@philippjfr can you test this out? Do you have any comments? If you have a small example that uses the file input that would be nice to add.  ",2,4,['status: accepted']
1099,297430876,9082,3834332,2019-07-14 21:55:41,2019-07-14 21:55:46,closed,exclude landing-2.0 issues from changelog for now,Our automation is not really set up to handle long-running parallel dev branches like `landing-2.0`. This PR excludes issues and PRs with that tag from `CHANGELOG` generation. Right before 2.0 we will need to explicitly *add* them (even overriding the `-p <tag>` option) and then after 2.0 restore things to their original state. ,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1100,297425701,9081,3834332,2019-07-14 20:31:11,2019-07-14 21:01:31,closed,add docs for bokeh server security options,"- [x] issues: fixes #8919
- [x] release document entry (if new feature or API change)

This PR adds much-needed user guide discussion around security related options for the Bokeh server, e.g. allowed websocket origins and signed session ids. The section on `supervisord` was also removed as it is complicated an uncertain that it still applies. 
",0,1,['status: accepted']
1101,297385486,9079,3834332,2019-07-14 10:50:03,2019-07-16 08:11:04,closed,Add static types to bokeh.util.browser,addresses #9064,1,33,['status: superseded']
1102,297375635,9077,3834332,2019-07-14 07:59:41,2019-07-16 08:10:57,closed,Add type annotations to `bokeh.util.serialization`,"Add type annotations to `bokeh.util.serialization`.

- [x] issues: part of #9064
- [x] tests passed locally

### ToDo
This PR is not complete. Following points need to be resolved:

- [ ] To allow mypy to correctly check types, it was necessary to remove `import_optional` and move its content into the module for the optional `pandas` import. There should be a better solution for this in general.
- [ ]  `convert_datetime_type` returns `None` if the type of the input parameter does not match. I'm not sure if this is the intended behaviour, though. Perhaps raising an error or returning `np.nan` by default is more appropriate.

### For future type annotations
As a side note for future type annotations: mypy seems to work best when there is an explicit `import` statement. This is evident from the above example of removing `import_optional` and also from this [example](https://github.com/bokeh/bokeh/compare/landing-2.0...mansenfranzen:9064_types_bokeh_util?expand=1#diff-07271ee774c39325189271f9b13c7a77L70):
  - ` _pd_timestamp = pd.Timestamp` does not work with mypy
  - `from pandas import Timestamp as _pd_timestamp` works with mypy",1,31,['status: superseded']
1103,297364419,9075,3834332,2019-07-14 03:42:01,2019-07-14 04:38:33,closed,use sampledata.bokeh.org CDN,"This PR changes the sampledata download URL to point at a new CDN distribution at http://sampledata.bokeh.org  This should be both faster as well as cheap for the project (a large chunk of S3 egress is for running `bokeh sampledata` on CI jobs)

Note that HTTP is used in stead of HTTPS because HTTP requests are cheaper on cloudfront and there is no reason AFAIK that it should matter (no data to protect, apps running, or javascript)",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1104,297323927,9072,3834332,2019-07-13 15:22:34,2019-07-16 08:10:49,closed,Added type hints at Europython sprint.,"Added type hints at Europython sprint.
also: Removed *args from logconfig.py basicConfig (Issue #9070)

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #9070
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,33,['status: superseded']
1105,297320333,9071,3834332,2019-07-13 14:39:07,2019-07-16 08:10:28,closed,Add static types to bokeh.util.paths #9066,"- [X] `bokeh.embed.elements` (didn't annotate html_page_for_render_items method)
- [X] `bokeh.embed.notebook`",1,32,['status: superseded']
1106,297318105,9069,3834332,2019-07-13 14:10:50,2019-07-14 09:46:55,closed,Add static types to bokeh.util.options,addresses #9064 ,0,2,['status: accepted']
1107,297315903,9068,3834332,2019-07-13 13:37:57,2019-07-13 18:07:49,closed,Small fix for windows dev guide and dev env setup,"Fixes documentation and conda packages for windows dev setup.

- [x] issues: fixes #9065
- [x] tests passed
",3,2,['status: accepted']
1108,297313732,9067,3834332,2019-07-13 13:07:24,2019-07-13 15:01:35,closed,Add types for bokeh.embed.wrappers.,"Add type annotations to `bokeh.embed.wrappers`.

- [x] issues: contributes to #9064
- [x] tests passed (locally)
",0,2,['status: accepted']
1109,297313154,9066,3834332,2019-07-13 12:59:51,2019-07-13 13:32:52,closed,Add static types to bokeh.util.paths,addresses #9064 ,0,1,['status: accepted']
1110,297292570,9063,3834332,2019-07-13 08:05:23,2019-07-13 22:44:25,closed,fix table selection issues,"- [x] issues: fixes #8921
- [x] issues: fixes #8923
- [x] tests added / passed

Tests coming tomorrow. The issues here:

* permuted indices can end up re-ordered from row order, they just need to be sorted so that the rows that are selected are copied out in order

* `container` is a jQ object, `appendChild` does not exist (use `append`)",1,4,['status: accepted']
1111,297277942,9062,3834332,2019-07-13 04:20:04,2019-07-13 23:16:21,closed,update datepicker properly,"- [x] issues: fixes #8015 
- [x] issues: fixes #8934
- [ ] tests added / passed

@mattpap I want to take this opportunity to add selenium tests for datepicker, since there are none. BUt I am tired, so that will be later this weekend. But if you have any comments on the implementation please let me know.  

I guess it's possible we could try to fix this with a [pikaday formatter](https://stackoverflow.com/questions/36372809/pikaday-date-formatting-without-moment-js), but there is an issue to add a user hook for formatting so this would better leave the door open for that. ",1,1,['status: accepted']
1112,297245175,9061,3834332,2019-07-12 22:42:17,2019-07-13 03:18:04,closed,User raw string for color regex,"- [x] issues: fixes #9060

update: Also fixed a problem with the pyyaml fix PR. Necessary version is not available on conda for python 3.5",0,2,['status: accepted']
1113,297056209,9058,3834332,2019-07-12 12:46:19,2019-07-12 20:56:08,closed,Add support for mypy,"Type type check bokeh issue `mypy bokeh`.

fixes #9057
",2,2,['status: accepted']
1114,296879831,9056,3834332,2019-07-12 01:13:38,2019-07-12 01:17:51,closed,specify yaml loader in deps.py,"- [x] issues: fixes #9054
",0,1,['status: accepted']
1115,296487180,9053,3834332,2019-07-11 06:42:42,2019-07-11 21:21:17,closed,allow source.data set from pandas types,"- [x] issues: fixes #9052
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap it occurred to me that we could possibly tighten up the pandas ""properties"" more by making them specialized to raise errors if they were actually added to models. But I think the documentation is sufficient, unless you have a strenuous objection. ",1,1,['status: accepted']
1116,295561936,9048,3834332,2019-07-09 02:45:36,2019-07-09 03:18:42,closed,upload to s3 CDN in parallel,"
",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1117,294379436,9046,3834332,2019-07-04 01:08:59,2019-07-20 04:14:47,closed,New event listener for TextInput,"Adds the possibility to use the ""input"" event for the TextInput event listener. The ""change"" event is still default, and the ""input"" event is accessible by setting the new variable ""wait_commit"" as False.

- [ ] issues: fixes #8676
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,10,['status: accepted']
1118,294313527,9045,3834332,2019-07-03 20:11:23,2019-07-11 04:50:17,closed,Add Pandas-Bokeh to downstream tests,"@bryevdv asked me to add downstream tests for Pandas-Bokeh.

- [ ] issues: fixes #9044
- [ ] tests added / passed
",5,2,['status: accepted']
1119,293956150,9043,3834332,2019-07-03 00:01:12,2019-08-08 21:04:45,closed,New compiler infrastructure,"This:

- [x] unifies bokehjs build with extensions' compiler (build is now a thin wrapper on top of the compiler)
- [x] adds preliminary `bokeh build` command (doesn't do much at this point; further PRs will fix this)
- [x] adds support for artifact caching (this not only improves build speed significantly, but also opens the path towards customizable bundles)
- [x] switches from full program to individual module minification (doesn't result in visible size increase, but allows for much quicker builds and is a requirement for caching)

Backwards compatibility is preserved as much as I can tell.

fixes #9002 ",3,13,['status: accepted']
1120,293922223,9042,3834332,2019-07-02 21:26:58,2019-07-03 03:03:28,closed,Toggle tooltip only when it is enabled in Slider,"We don't want the `toggleTooltip` happening when tooltip is set to `false`.
This solves errors with accessing style attribute of a `null`.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #9022
- [n/a] tests added / passed
- [n/a] release document entry (if new feature or API change)
",2,3,['status: accepted']
1121,293913350,9041,3834332,2019-07-02 20:57:53,2019-07-10 15:57:43,closed,Added code to set IOLOOP default executor to ThreadPoolExecutor and u…,"Document creation for new session using ThreadPoolExecutor inside tornado IOLOOP
",4,28,['status: declined']
1122,293537020,9040,3834332,2019-07-02 00:01:46,2019-07-02 01:01:51,closed,temp pin pytest < 5.0,"Windows tests are always failing now and a notable difference between the last successful test is a new pytest 5.0
",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'tag: component: build', 'CRITICAL']"
1123,293522052,9039,3834332,2019-07-01 22:38:39,2019-07-02 01:02:05,closed,fixed analysis,I only fixed a typo,2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1124,293062302,9037,3834332,2019-06-29 20:54:26,2019-07-02 02:24:25,closed,Added code to handle document generation using Thread Executor,"Modified code in contexts.py to handle document generation for new session using ThreadExecutor from concurrent.futures library
",7,8,['status: superseded']
1125,290923176,9034,3834332,2019-06-23 22:40:22,2019-06-25 20:11:22,closed,Filter inspection indices more efficiently,"Hover tool wasn't responsible directly for the slowdown, but naive way of filtering inspection indices for hover glyph (in fact due to lack thereof all those computations could have been avoided altogether). 100k points still isn't smooth on my computer, but there is still a lot of room for optimization.

The first commit is to bring native `Set` for type-checking purpose. We can't use our own implementation here, because it uses the naive approach as well.

fixes #9016 
",0,2,['status: accepted']
1126,290867904,9031,3834332,2019-06-23 06:41:29,2019-06-30 05:02:43,closed,Geojson docs,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8186
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,1,['status: accepted']
1127,290862524,9030,3834332,2019-06-23 04:02:49,2019-06-26 18:33:13,closed,replace remote datasource with web datasource,- [x] issues: fixes #9029 ,2,2,['status: accepted']
1128,290859055,9028,3834332,2019-06-23 02:15:02,2019-06-23 03:04:03,closed,fix enum doc issues,"- [x] issues: fixes #8944
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1129,290858447,9027,3834332,2019-06-23 01:57:12,2019-06-23 02:35:16,closed,make docs for --dev arg placement clearer,"- [x] issues: fixes #8915
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1130,289509047,9013,3834332,2019-06-19 01:44:37,2019-06-26 02:12:05,closed,implement hover anchor for quad glyphs,"- [x] issues: fixes [#8981](https://github.com/bokeh/bokeh/issues/8981)
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I am unsure of the kinds of tests I should include here. I'm thinking a [screenshot integration test](https://bokeh.pydata.org/en/latest/docs/dev_guide/testing.html#id1)? I haven't written it yet but I wanted to post this PR first so I don't get too far in the wrong direction.",8,3,['status: accepted']
1131,288658273,9010,3834332,2019-06-16 23:02:02,2019-08-08 20:59:34,closed,Add support for django channels,"This is a very preliminary approach. You can try this out in `examples/howto/server_embed/django_embed` example.

fixes #9009
",15,8,['status: accepted']
1132,288329258,9005,3834332,2019-06-14 13:22:48,2019-07-10 15:59:46,closed,Added use_superscript_exponents,"Added new property `use_superscript_exponents` to `LogTickFormatter`.

Now it is possible to use this code when in log mode:
```
p.xaxis[0].formatter.use_superscript_exponents = True
p.yaxis[0].formatter.use_superscript_exponents = True
```
There can be a small problem on the font sizes for superscript 1 to 3 (changing font may help)

- [x] issues: fixes #8954
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Based on Landing 2.0

Be aware: I had to modify export.py to output html as utf-8",6,54,['status: declined']
1133,288317014,9004,3834332,2019-06-14 12:48:31,2019-06-14 12:50:44,closed,Landing 2.0 use superscript exponents,"Added new property `use_superscript_exponents` to `LogTickFormatter`.

Now it is possible to use this code when in log mode:
```
p.xaxis[0].formatter.use_superscript_exponents = True
p.yaxis[0].formatter.use_superscript_exponents = True
```
There can be a small problem on the font sizes for superscript 1 to 3 (changing font may help)

- [x] issues: fixes #8954
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

Based on Landing 2.0",0,12,['status: declined']
1134,288282057,9003,3834332,2019-06-14 10:58:04,2019-06-14 12:46:08,closed,Landing 2.0 - Use superscript exponents,"Added new property `use_superscript_exponents` to `LogTickFormatter`.

Now it is possible to use this code when in log mode:
```
p.xaxis[0].formatter.use_superscript_exponents = True
p.yaxis[0].formatter.use_superscript_exponents = True
```
There can be a small problem on the font sizes for superscript 1 to 3 (changing font may help)

- [x] issues: fixes #8954
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

Based on Landing 2.0",1,12,['status: superseded']
1135,288179707,9000,3834332,2019-06-14 04:45:26,2019-06-22 22:21:35,closed,Move tests out of tree,"Moving the test out of tree has some advantages:

* easier to ensure tests run against an actual installed package on CI (we definitely don't do that sometimes)
* smaller package size
* could probably get rid of ""implicit mark"" on pytest and possibly others (can select with `-k` against test directory names)

There are a few warts:

* pytest pukes if filenames are repeated so had to make a few ugly renames",4,29,['status: declined']
1136,287720164,8997,3834332,2019-06-13 00:24:08,2019-06-13 01:06:35,closed,Documentation: fix typo and duplicate description,issues: fixes #8994 and #8995 ,2,2,['status: accepted']
1137,287716054,8996,3834332,2019-06-13 00:00:20,2019-06-13 00:54:30,closed,update classifiers and setup.py,"This PR updates the PyPI classifiers, also sets a `python_requires` value. 

@bokeh/core I also removed the ""author"" info pointing at Anaconda, and in its place added myself as ""maintainer"" If there is something else preferred (e.g. creating another new bokeh.org email account)  please open an issue to discuss
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1138,287603320,8993,3834332,2019-06-12 17:20:55,2019-06-22 21:52:57,closed,Fix keyboard events on range sliders,"- [x] issues: fixes #8911
- [x] tests added / passed


![](https://files.gitter.im/bokeh/bokeh/yGlU/ezgif.com-video-to-gif-_11_.gif)
",12,13,['status: accepted']
1139,287333224,8990,3834332,2019-06-12 03:23:19,2019-06-13 02:56:37,closed,Use scalar props where applicable,"@mattpap I want to keep looking for more places, but are you aware of any others besides these offhand that could be updated?
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
1140,286697191,8989,3834332,2019-06-10 14:21:07,2019-06-12 01:49:04,closed,Modularize CSS,"In this PR each CSS ""module"" contains of a `*.less` file under `src/less` and an accompanying `*.ts` module under `src/lib/styles`. Such `*.ts` include `import ""module_name.css""` to reference a generated CSS file for inclusion. It also may include exported CSS class names (to aid static safety). This import is then rewritten by an AST preprocessor to include the generated CSS and a bit of code for adding it to the primary style sheet. `bokeh*.css` are no longer included in any generated HTML, but they still generated empty and tested. This will have to be removed for 2.0.

fixes #8984 
",6,3,['status: accepted']
1141,286514796,8988,3834332,2019-06-10 01:26:26,2019-06-10 08:34:44,closed,rev nwmatcher version,"This PR stipulates `nwmatcher >= 1.4.4` to address GH reported vulnerability. 

Note that this package is only used for development, and does not impact normal user usage. ",2,1,['status: declined']
1142,286514643,8987,3834332,2019-06-10 01:25:06,2019-06-10 08:34:00,closed,Bump nwmatcher from 1.4.3 to 1.4.4 in /bokehjs,"Bumps [nwmatcher](https://github.com/dperini/nwmatcher) from 1.4.3 to 1.4.4.
<details>
<summary>Commits</summary>

- See full diff in [compare view](https://github.com/dperini/nwmatcher/commits)
</details>
<br />

[![Dependabot compatibility score](https://dependabot-badges.githubapp.com/badges/compatibility_score?dependency-name=nwmatcher&package-manager=npm_and_yarn&previous-version=1.4.3&new-version=1.4.4)](https://help.github.com/articles/configuring-automated-security-fixes)

Dependabot will resolve any conflicts with this PR as long as you don't alter it yourself. You can also trigger a rebase manually by commenting `@dependabot rebase`.

[//]: # (dependabot-automerge-start)
[//]: # (dependabot-automerge-end)

---

<details>
<summary>Dependabot commands and options</summary>
<br />

You can trigger Dependabot actions by commenting on this PR:
- `@dependabot rebase` will rebase this PR
- `@dependabot recreate` will recreate this PR, overwriting any edits that have been made to it
- `@dependabot merge` will merge this PR after your CI passes on it
- `@dependabot squash and merge` will squash and merge this PR after your CI passes on it
- `@dependabot cancel merge` will cancel a previously requested merge and block automerging
- `@dependabot reopen` will reopen this PR if it is closed
- `@dependabot ignore this [patch|minor|major] version` will close this PR and stop Dependabot creating any more for this minor/major version (unless you reopen the PR or upgrade to it yourself)
- `@dependabot ignore this dependency` will close this PR and stop Dependabot creating any more for this dependency (unless you reopen the PR or upgrade to it yourself)
- `@dependabot use these labels` will set the current labels as the default for future PRs for this repo and language
- `@dependabot use these reviewers` will set the current reviewers as the default for future PRs for this repo and language
- `@dependabot use these assignees` will set the current assignees as the default for future PRs for this repo and language
- `@dependabot use this milestone` will set the current milestone as the default for future PRs for this repo and language


</details>",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs', 'dependencies']"
1143,286498114,8986,3834332,2019-06-09 21:02:33,2019-06-10 00:01:48,closed,simplify slider callback polic,"This PR removes the following properties from all Sliders:

* `callback`
* `callback_throttle`
* `callback_policy`

Instead users should use standard `on_change` and `js_on_change` with `value` and `value_throtted`
",6,1,"['status: accepted', 'type: task', 'reso: completed']"
1144,286481546,8985,3834332,2019-06-09 16:26:59,2019-06-09 20:07:48,closed,more explicit hover formatter specs,"This PR changes the specification format for hover formatters to require the keys in the `formatters` dict to strictly match the format from the tooltips, including any `@` or `$` prefix:

```
hover.tooltips = ""@foo{%s}   @{foo bar}{0.00}   $x{%F}""
hover.formatters = {
    ""@foo""       : ""printf"",
    ""@{foo bar}"" : ""numeral"",
    ""$x""         : ""datetime"",
}
```
Previously, just a column name e.g. ""foo"" was expected. 

This change means that formatting specification can now apply uniformly to ""special variables"" such as ""$x"" and also reduces confusion by making it clear that the column and special variable names are what formatters apply to. (There were several support requests due to attempting to match up labels instead)

This PR also simplifies and corrects some broken logic int he templating code. ",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1145,285391661,8980,3834332,2019-06-05 14:07:31,2019-10-17 19:49:57,closed,Allow to offset plot frame's side panels,"This is a counter-proposal to PR #8905. Here it's possible to offset any kind of side panel. It would be nice to just reuse layout's `Spacer` model, but our models are not reusable enough at this point to allow this. Example:

![image](https://user-images.githubusercontent.com/27475/58962583-d7ba9f00-87ab-11e9-9145-9ad56f4a49e5.png)

fixes #8904 
",3,1,['status: declined']
1146,285223534,8979,3834332,2019-06-05 04:29:22,2019-06-05 14:16:40,closed,Remove Bokeh wire protocol versioning,accidentally pushed release notes directly to `landing-2.0`,0,2,"['status: accepted', 'type: task', 'reso: completed']"
1147,284579805,8977,3834332,2019-06-03 14:03:51,2019-08-30 22:09:41,closed,Set crossorigin on images to allow save tool to work,fixes #8976 ,1,5,['status: accepted']
1148,284387766,8975,3834332,2019-06-03 01:18:33,2019-06-03 02:24:14,closed,remove selection compat dict,,1,1,"['status: accepted', 'type: task', 'reso: completed']"
1149,284383818,8974,3834332,2019-06-03 00:27:35,2019-06-06 07:22:41,closed,Use native coroutines,"
",1,4,['status: declined']
1150,284379702,8973,3834332,2019-06-02 23:31:28,2019-06-03 00:23:09,closed,execute tile provider deprecations,,0,2,"['status: accepted', 'type: task', 'reso: completed']"
1151,284378349,8972,3834332,2019-06-02 23:07:00,2019-06-02 23:38:10,closed,remove obsolete sphinxext things,"
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1152,284357940,8971,3834332,2019-06-02 17:31:04,2019-06-02 18:28:20,closed,use 'use strict' unconditionally,"- [x] issues: fixes #8966

",0,1,['status: accepted']
1153,284319076,8969,3834332,2019-06-02 06:04:56,2019-06-02 07:09:30,closed,remove last 2.7 and 3.4 bits,,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1154,284317808,8968,3834332,2019-06-02 05:29:19,2019-06-02 22:41:19,closed,Restrict CDS property changes,"`s.selected` is now read only

`s1.data = s2.data` now throws an error",4,6,"['status: accepted', 'type: task', 'reso: completed']"
1155,284317763,8967,3834332,2019-06-02 05:28:03,2019-06-02 05:28:16,closed,restrict cds data and selected properties,"
`s.selected` is now read only

`s1.data = s2.data` now throws an error",0,16,['status: declined']
1156,284306497,8965,3834332,2019-06-02 00:21:21,2019-06-03 06:48:43,closed,Deprecations for 2.0,"- [x] issues: fixes #8964
- [x] release document entry (if new feature or API change)

This does not quite removed everything: 

* tile providers will go on their own PR
* remove `.callback` throughout will take some work, so separate PR there too

@mattpap I would appreciate a review of this since it attempts to remove all the coffee script machinery, also I want to confirm that the `Dropdown` properties really should be removed. ",1,11,['status: accepted']
1157,284301159,8963,3834332,2019-06-01 22:13:45,2019-06-01 22:51:10,closed,use new simpler sxper syntax,"- [x] issues: fixes #8962

",0,2,['status: accepted']
1158,284244559,8961,3834332,2019-06-01 05:17:51,2019-06-01 05:17:57,closed,don't call show in tests,Calling `show` in a test opens a browser tab on test run which is super annoying. Confirmed `save` failed when it should and passes when it should.,0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1159,283992759,8960,3834332,2019-05-31 10:38:08,2019-06-14 11:00:03,closed,Use superscript exponents,"Added new property `use_superscript_exponents` to `LogTickFormatter`.

Now it is possible to use this code when in log mode:
```
p.xaxis[0].formatter.use_superscript_exponents = True
p.yaxis[0].formatter.use_superscript_exponents = True
```
There can be a small problem on the font sizes for superscript 1 to 3 (changing font may help)

- [x] issues: fixes #8954
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",9,10,['status: WIP']
1160,283871013,8959,3834332,2019-05-31 02:03:19,2019-05-31 03:15:36,closed,Bryanv/8958 util string,"- [x] issues: fixes #8958
",0,3,['status: accepted']
1161,283864943,8957,3834332,2019-05-31 01:20:15,2019-05-31 01:59:20,closed,remove legacy datetime check,"- [x] issues: fixes #8956

This check only applied to Numpy < 1.7 and that's already our min
",0,1,['status: accepted']
1162,283827512,8955,3834332,2019-05-30 21:56:16,2019-05-31 16:35:38,closed,Clean up Rect and its validation in spatial indexing,"Previously `Rect` was defined as `{minX, maxX, minY, maxY}`, which was what rbush/flatbush uses. Now it's defined as `{x0, x1, y0, y1}`, which better aligns with the rest of bokehjs. Besides this, I removed unnecessary calls to `validate_bbox_coords()`, because `SpatialIndex` does normalization anyway.",0,1,"['status: accepted', 'type: task', 'tag: component: bokehjs']"
1163,283517758,8952,3834332,2019-05-30 05:09:19,2019-05-30 05:55:53,closed,remove __future__ imports,"- [x] issues: fixes #8951
",0,1,['status: accepted']
1164,283510123,8950,3834332,2019-05-30 04:17:41,2019-05-30 04:48:49,closed,Remove bokeh.util.future,"- [x] issues: fixes #8949

",0,5,['status: accepted']
1165,283491866,8948,3834332,2019-05-30 02:18:00,2019-05-30 03:32:13,closed,Bryanv/8946 six,"- [x] issues: fixes #8946

",0,19,['status: accepted']
1166,283491689,8947,3834332,2019-05-30 02:16:58,2019-05-30 02:17:18,closed,Bryanv/8946 six,"- [x] issues: fixes #8946
",0,22,['status: declined']
1167,283423525,8945,3834332,2019-05-29 20:41:29,2019-05-29 22:30:52,closed,Upgrade to TypeScript 3.5 and fix types,,0,2,"['status: accepted', 'type: task', 'tag: component: bokehjs', 'tag: typescript']"
1168,283109132,8943,3834332,2019-05-29 06:18:14,2019-05-29 07:05:49,closed,assume pillow installed,"Turns out pillow had already been added as a dependency at some point. Accordingly, did not add migration note to release notes. However, did clean up some cruft that checked imports or explicitly listed a test dep.

- [x] issues: fixes #8942
",0,1,['status: accepted']
1169,283103869,8941,3834332,2019-05-29 05:55:02,2019-05-29 22:47:19,closed,Make Tornado 5 the minimum version,"- [x] issues: fixes #8935
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @bokeh/core I'd like to check with folks before just merging this one. By the time the 2.0 landing branch is merge, Tornado 5.0 will be ~18 months old. I am definitely strongly +1 on making 5.x the new minimum version as it integrates very naturally with `asyncio` which I suspect will be valuable to more users over a fairly short time span. ",3,1,['status: accepted']
1170,283071500,8939,3834332,2019-05-29 02:35:03,2019-05-29 04:45:07,closed,trim test matrix,"- [x] issues: fixes #8938
- [x] tests added / passed
",0,1,['status: accepted']
1171,283069802,8937,3834332,2019-05-29 02:25:32,2019-05-29 05:01:24,closed,remove vestigal plot symmetry options,"Picking a small issue to get started. This is mostly to prove out running CI on the long-running `landing-2.0` branch.

- [x] issues: fixes #8936
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1172,282592939,8933,3834332,2019-05-27 18:49:59,2019-05-27 20:05:00,closed,add release notes for 1.2,"Release notes for 1.2
",0,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1173,282318427,8932,3834332,2019-05-26 19:50:21,2019-05-27 00:20:03,closed,Bryanv/120 docs,"WIP PR to get ahead of any CI issues. 

This grew a little bit larger than I expected:

* make `vline_stack`, `hline_stack` comparable to others
* adds hatch support to grid bands
* adds/updates examples
* docs

@bokeh/core I am inclined to call the next release 1.2 rather than 1.1.1,  let me know if there are any concerns with this. 

Re: scheduling, I plan to finish this PR today, and the blog post tomorrow. I'd like to soft-release Monday night (i.e. kick off build machinery) and announce tuesday morning.",3,16,['status: accepted']
1174,282046352,8931,3834332,2019-05-24 14:46:23,2020-05-06 10:03:04,closed,Add support for inner coordinate systems,For now this PR is a playground for me to gradually test new developments related to issue #3821.,3,1,['status: superseded']
1175,282031159,8930,3834332,2019-05-24 14:06:58,2019-05-26 20:08:49,closed,Docs: Fix typo,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1176,280977474,8925,3834332,2019-05-21 22:55:55,2019-05-22 22:48:30,closed,Replace some instances of any type,A couple hundred more to go in future PRs.,0,1,"['status: accepted', 'type: task', 'tag: typescript']"
1177,280404187,8922,3834332,2019-05-20 13:58:33,2019-10-21 23:33:46,closed,Color mapping improvements,"This is a cleaned up version of PR #8765. @jlstevens, I started implementing some of the changes we discussed on Friday.",5,1,['status: declined']
1178,278780856,8916,3834332,2019-05-14 17:28:40,2019-05-15 00:46:23,closed,Update 1.1.0.rst,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1179,278516877,8914,3834332,2019-05-14 04:38:45,2019-05-16 03:53:39,closed,add value_throttled property to sliders,"- [x] issues: fixes #4540
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This adds `value_throttled` to sliders, which obeys the callback policy for both JS and Python callbacks. Examples are updated to use this where appropriate, and additionally all slider examples are updated to use `value` or `value_throttled` for callbacks instead of the deprecated `callback` property. ",1,2,['status: accepted']
1180,278331347,8912,3834332,2019-05-13 15:43:27,2019-05-14 09:05:10,closed,Use Python 3.7 in examples' tests on Travis CI,"
",2,1,"['tag: component: tests', 'status: accepted', 'type: task', 'tag: component: examples']"
1181,278042131,8910,3834332,2019-05-12 10:03:49,2019-05-13 05:54:35,closed,Ensure change in Slider widget title updates view,"
- [x] issues: fixes #8909
- [x] tests added / passed
",3,2,['status: accepted']
1182,277922511,8907,3834332,2019-05-10 22:02:40,2019-05-14 09:05:39,closed,Render mixed canvas and webgl glyphs in correct z-order,fixes #7699 ,0,1,['status: accepted']
1183,277814424,8906,3834332,2019-05-10 15:28:16,2019-05-10 17:46:37,closed,pass layout kwargs to underlying objects,"This PR passes the `kwargs` given to `layout()` down to the underlying `row()` or `column()` calls in `bokeh.layouts`.  This fixes the behavior described in #8903.

- [x] issues: fixes #8903
- [x] tests added / passed
",1,2,['status: accepted']
1184,277620374,8905,3834332,2019-05-10 03:38:25,2019-10-17 21:34:21,closed,Add Title.text_line_height property,"This PR:
* Adds a new Title.text_line_height property to support offsetting the plot title away from the plot area an arbitrary distance.

- [x] issues: fixes #8904 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Question: should we rename Title.vertical_align to Title.text_baseline for parity with Text.text_baseline (which only supports top/middle/bottom enum values also)?

Example code:
```python
from bokeh.plotting import figure, show, output_file
from bokeh.sampledata.iris import flowers

colormap = {'setosa': 'red', 'versicolor': 'green', 'virginica': 'blue'}
colors = [colormap[x] for x in flowers['species']]

p = figure(title = ""Iris Morphology"")
p.title.text_line_height = 2
p.title.vertical_align = 'top'
p.xaxis.axis_label = 'Petal Length'
p.yaxis.axis_label = 'Petal Width'

p.circle(flowers[""petal_length""], flowers[""petal_width""],
         color=colors, fill_alpha=0.2, size=10)

output_file(""iris.html"", title=""iris.py example"")

show(p)
```

Screenshot (note the title is vertically offset from the plot area):

<img width=""635"" alt=""Screen Shot 2019-05-09 at 10 34 00 PM"" src=""https://user-images.githubusercontent.com/2198981/57500907-fc098580-72aa-11e9-8861-50208cfd9fa5.png"">
",9,3,['status: accepted']
1185,277526865,8902,3834332,2019-05-09 19:56:47,2019-05-10 14:29:11,closed,Enable the legend for the stacked area example,"Updates the  stacked_area.py example to show how to display the legend with entries in the same order as the stacked glyphs.

- [x] issues: fixes #8901
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",1,1,['status: accepted']
1186,277095092,8897,3834332,2019-05-08 18:00:03,2019-05-09 01:02:25,closed,Reference link updated,`requirements.txt` file updated,1,1,"['status: accepted', 'type: task', 'reso: completed']"
1187,276970664,8896,3834332,2019-05-08 12:04:54,2019-05-23 08:35:07,closed,Ensure that js_property_callbacks can be updated,"This PR ensures that when ``js_on_change`` is called a ``ModelChangedEvent`` is triggered and the callbacks are updated on the frontend. The main problem I'm currently facing is that I haven't yet figured out how to disconnect previous callbacks since at least in theory callbacks could be deleted as well as added. If we don't expect them ever to be deleted we could also simply keep track of callbacks that have been connected and skip them the second.

- [x] issues: fixes #8895
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,7,['status: accepted']
1188,275939001,8892,3834332,2019-05-04 18:16:38,2019-05-04 23:38:25,closed,"#8889 fixed, removed unnecessary clause","This pull request contains an easy fix to issue #8889. 
I removed the error causing if statement, since the image will be tested to not be null 
before rendering anyway. 

- [x] issues: fixes #8889
- [x] tests: passed (As far as I can tell)
",1,1,['status: accepted']
1189,275564811,8887,3834332,2019-05-03 00:48:56,2019-05-06 17:08:56,closed,Add Legend.title property and tests,"- [x] issues: fixes #6769 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR:
* Adds a Legend.title property (and associated props) analogous to ColorBar.title
* Updates relevant examples and examples tests baseline

Screenshots:
<img width=""1001"" alt=""Screen Shot 2019-05-02 at 7 44 21 PM"" src=""https://user-images.githubusercontent.com/2198981/57115216-2ee3d480-6d13-11e9-8a99-c584feb6b88a.png"">
<img width=""834"" alt=""Screen Shot 2019-05-02 at 7 44 43 PM"" src=""https://user-images.githubusercontent.com/2198981/57115217-2ee3d480-6d13-11e9-9a1a-e7775b140135.png"">
",6,4,['status: accepted']
1190,274669103,8879,3834332,2019-04-30 10:05:23,2019-04-30 14:59:08,closed,Upload releases to anaconda dev and main label,"- [x] issues: fixes #8874 

",0,1,['status: accepted']
1191,274473574,8876,3834332,2019-04-29 18:19:18,2019-04-29 19:53:29,closed,Fix security vulnerabilities reported by npm audit,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
1192,274218394,8873,3834332,2019-04-29 00:00:33,2019-04-29 01:00:56,closed,Add stacked lines and directed areas,"- [x] issues: fixes #8848
- [ ] tests added / passed

@mattpap @birdsarah  I plan to merge this when green so that the hatching PR can be rebased on top (to add hatching support for these new glyphs as well). I'll add narrative documentation in a follow-on PR later this week. 

But please make comments, corrections, or suggestions here. I will make changes in one of the other PRs. ",4,1,['status: accepted']
1193,272953640,8868,3834332,2019-04-24 02:31:06,2019-04-24 04:13:21,closed,Fixes #8867,"Update documentation on using tile providers with the `get_provider()` method.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes  #8867
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1194,272700315,8864,3834332,2019-04-23 12:00:13,2019-04-23 16:33:41,closed,Allow export timeouts to be configurable.,"- [x] issues: fixes #8863
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR is a first attempt to allow for configurable timeouts when exporting figures.",2,2,['status: accepted']
1195,272425943,8861,3834332,2019-04-22 16:43:14,2019-04-22 23:11:36,closed,Create README to explain server_embed usage,The examples in server_embed have requirements that may not be apparent to new users. This README should help avoid confusion.,3,3,"['status: accepted', 'type: task', 'reso: completed']"
1196,272365515,8860,3834332,2019-04-22 12:53:18,2019-07-19 22:23:40,closed,Introduce DataCube (based on SlickGrid example: Grouping),"- [x] issues: fixes #8100
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR brings [SlickGrid example: Grouping](http://mleibman.github.io/SlickGrid/examples/example-grouping) to bokeh. I chose to sub-class DataTableProvider and DataTable rather than inject grouping logic all over the place. It makes the code easier to grok at the expense of some duplication. I have added an example and a unit test. ",25,12,['status: accepted']
1197,272271690,8859,3834332,2019-04-22 04:13:25,2019-04-29 15:55:36,closed,Add hatching fill patterns,"Scratching an old itch. 

- [x] issues: fixes #6135
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

TODO:

* [x] verify legends work
* [x] categorical hatch mapper
* [x] custom hatch support?
* [x] tests
* [x] examples
* [ ] user guide docs (incl webgl note)
* [x] ref docs

Needs tests and docs and work to add hatching to patch/patches, as well as hopefully a path for custom patterns. But I wanted to get some preliminary feedback. 

The basic API is to add:

* hatch_pattern - code for which built in pattern
* hatch_color - color to use for fill/stroke on pattern canvas
* hatch_alpha - alpha for pattern
* hatch_weight - basically line width for strokes on the pattern canvas
* hatch_number - pattern canvas size

Here is current output:

<img width=""825"" alt=""Screen Shot 2019-04-21 at 9 09 41 PM"" src=""https://user-images.githubusercontent.com/1078448/56482587-d04c6a00-6479-11e9-936c-89ca8d8155e9.png"">

In particular I would like feedback on ""/"" and ""\\"". One of them does ""dashed"" diagonal lines and the other does fully connected diagonal lines, at least the best that I could make from tiling a pattern. Now I'd kind of like to have both forms. What are good new symbols or names to distinguish them? Or is there some other good way? Are there other default patterns we can/should add? 

cc @bokeh/core  @bokeh/dev for comments
",31,1,['status: accepted']
1198,272234511,8858,3834332,2019-04-21 19:04:39,2019-04-21 19:44:04,closed,selenium tests for sliders,"- [x] issues: fixes #6516
- [x] tests added / passed


Could use more but it's a start",0,2,['status: accepted']
1199,272182087,8857,3834332,2019-04-20 23:01:06,2019-04-21 23:24:15,closed,Add DataCube (DataTable with aggregations and expanding/collapsing groups),"- [x] issues: fixes #8100
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR brings [SlickGrid example: Grouping](http://mleibman.github.io/SlickGrid/examples/example-grouping) to bokeh.  I chose to sub-class DataTableProvider and DataTable rather than inject grouping logic all over the place.  It makes the code easier to grok at the expense of some duplication.  I have added an example and a unit test.  I'm sure there's a better way than 8cabf73 and am open to suggestions.",5,6,['status: superseded']
1200,271964989,8854,3834332,2019-04-19 10:33:00,2019-04-19 15:20:03,closed,Fix the exports when using Firefox as a webdriver.,"
- [x] issues: fixes #8853
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR enables Firefox to be used as a webdriver by disabling logs. 

It can then be used like this:
```
from selenium.webdriver import Firefox, FirefoxOptions
options = FirefoxOptions()
options.headless = True
webdriver = Firefox(options=options)
export_png(item, path, webdriver=webdriver)
```

It _may_ be a starting point to fix this issue: https://github.com/bokeh/bokeh/issues/8176",1,2,['status: accepted']
1201,271918582,8850,3834332,2019-04-19 06:37:17,2019-04-19 15:31:42,closed,Update main.py in example crossfilter,"Line 55 `len(set(df[color.value])) > N_SIZES` should be `len(set(df[color.value])) > N_COLORS`

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8849 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1202,270729920,8846,3834332,2019-04-16 02:12:19,2019-04-18 15:15:08,closed,Corrected spelling mistakes,Partially fixes issue: #8448,1,2,['status: accepted']
1203,270727518,8845,3834332,2019-04-16 01:55:34,2019-04-16 02:01:32,closed,Correct spell mistakes,Partially fixes issue: #8448,4,10,['status: superseded']
1204,270726958,8844,3834332,2019-04-16 01:51:49,2019-04-18 15:16:48,closed,hook up slider bar color handling,"- [x] issues: fixes #8843
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

![ScreenFlow](https://user-images.githubusercontent.com/1078448/56176293-7ba77b80-5faf-11e9-9677-e80a6aa82129.gif)
",1,1,['status: accepted']
1205,270316904,8840,3834332,2019-04-14 18:28:31,2019-04-14 19:38:41,closed,silence warning about root_url trailing slash,"- [x] issues: fixes #8496
",0,1,['status: accepted']
1206,270277125,8839,3834332,2019-04-14 07:15:39,2019-04-14 07:46:31,closed,Close small docs issues,"- [x] issues: closes #8571 closes #5469 closes #7238
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
1207,270267312,8838,3834332,2019-04-14 02:37:17,2019-04-18 15:59:30,closed,add reset_policy to plots,"- [x] issues: fixes #6927
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR adds a `reset_policy` property to plots. When set to `""standard""` (default) the current behavior is maintained. When set to `""event_only""` then only the `Reset` event is emitted, i.e. no range or selection resets occur. ",1,2,['status: accepted']
1208,270245744,8837,3834332,2019-04-13 18:31:44,2019-04-13 19:51:11,closed,properly handle callbacks added during other event callbacks,"- [x] issues: fixes #8835
- [x] tests added / passed

The underlying issue was that the method to apply a JSON event did not make a copy of the set of  existing subscribed models before iterating over it, and triggering those callbacks can modify the set. ",0,2,['status: accepted']
1209,269686191,8832,3834332,2019-04-11 18:03:31,2019-11-17 03:11:46,closed,Replace log1p by log in LogColorMapper,"Fixes #8724.

LogColorMapper would (for now) use plain old `Math.log`, which means it is consistent with LogTicker etc. and the current documentation. At least for the time being people won't unwittingly create plainly wrong colormaps anymore.

Long-term, I think @jlstevens' #8743 and #8765 would be much better suited to address issues such as scales blowing up when outliers near zero are present.

Before:
![plot_log1p](https://user-images.githubusercontent.com/38992106/55980362-4d9a0280-5c62-11e9-9abb-a7cb4e6169d9.png)

After:
![plot_log](https://user-images.githubusercontent.com/38992106/55980370-54c11080-5c62-11e9-91c2-d5e82e56a081.png)

```
import numpy as np

from bokeh.io import show
from bokeh.models import ColorBar, LogTicker
from bokeh.models.sources import ColumnDataSource
from bokeh.models.mappers import LinearColorMapper, LogColorMapper
from bokeh.palettes import Viridis6, Viridis3
from bokeh.plotting import figure

x = np.linspace(1e-4, 1e-1, num=2500)
y = np.random.normal(size=2500) * 2 + 5
source = ColumnDataSource(dict(x=x, y1=y, y2=y - 10))

log_mapper = LogColorMapper(palette=Viridis3, low=1e-4, high=1e-1)

p = figure(x_axis_type='linear', toolbar_location='above')
opts = dict(x='x', line_color=None, source=source)
p.circle(y='y1', fill_color={'field': 'x', 'transform': log_mapper}, legend=""Log mapper"", **opts)

colorbar = ColorBar(color_mapper=log_mapper, location=(0,0), orientation='horizontal', padding=0)

p.add_layout(colorbar, 'below')

show(p)

from bokeh.io import export_png

export_png(p, filename=""plot.png"")
```",17,2,['status: accepted']
1210,268982446,8829,3834332,2019-04-10 02:05:00,2019-04-13 02:04:34,closed,add keys support to autocomplete,"cc @danielrmeyer @mattpap 

- [x] issues: fixes #8828
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This is a WIP PR to start discussion. This PR implements the following behaviour: when an autocomplete menu is opened, the first item starts off highlighted. The arrows keys can be used to move the highlighted element up and down. Hitting enter with an open menu sets the value to the highlighted element. 

As a consequence, it is not possible to enter values outside the completions list. Is this desirable? What about the fact that the initial value is not validated, Should we issue a warning or even an exception if it is not? Or should users be able to explicitly enter non-completion values (possibly as a mode?)

Assuming we like this behvaivour (or get to a point where we do) I will add integration tests. 

![ScreenFlow](https://user-images.githubusercontent.com/1078448/55846363-4b1c9900-5afa-11e9-8202-27030f55e92b.gif)
",5,2,['status: accepted']
1211,268456684,8826,3834332,2019-04-08 18:53:54,2019-04-08 23:40:29,closed,Improve aspect management with scale_height mode,"I'm not particularly happy how aspect management works right now, but at least this fixes `scale_height` sizing mode. I will need to revisit this code later on.

fixes #8821 
",6,1,['status: accepted']
1212,268436744,8825,3834332,2019-04-08 17:51:48,2019-04-26 06:19:11,closed,Examples for Bokeh Server Widgets,"Created examples for widgets using bokeh server. 

Example:

```
## Bokeh server for button click

from bokeh.io import curdoc
from bokeh.layouts import row
from bokeh.models import ColumnDataSource
from bokeh.models.widgets import Button
from bokeh.plotting import figure

x=[3,4,6,12,10,1]
y=[7,1,3,4,1,6]

source = ColumnDataSource(data=dict(x=x, y=y))

plot_figure = figure(plot_height=450, plot_width=600,
              tools=""save,reset"",
              x_range=[0,14], y_range=[0,12],toolbar_location=""below"")

plot_figure.scatter('x', 'y', source=source, size=10)

button = Button(label=""Click to set plot title"", button_type=""success"")

def button_click():
    plot_figure.title.text = 'Button Clicked'

button.on_click(button_click)

layout=row(button,plot_figure)

curdoc().add_root(layout)
curdoc().title = ""Button Bokeh Server""
```",7,14,"['status: accepted', 'type: task', 'tag: component: examples', 'tag: component: server']"
1213,268326376,8824,3834332,2019-04-08 13:03:29,2019-04-08 15:03:32,closed,Fix app/surface3d and custom/font-awesome examples,"fixes #8820
",0,2,['status: accepted']
1214,268186528,8823,3834332,2019-04-08 05:23:30,2019-06-22 20:40:29,closed,"Adds an ""Indicator"" Model and displays it on the toolbar","Progress for #8608. Adds a new model subclass: `Indicator`. A list of indicator names can be passed to `Figure`, just like tools are. This PR just adds a status indicator for the bokeh server websocket, but these could be used for many other applications.

![{F66A0573-1569-408A-B035-C8AA3648DC44} png](https://user-images.githubusercontent.com/11222441/55700259-6e710800-5983-11e9-925d-e99d6f312a15.jpg)
![{2262A3CC-E72B-4E0D-95E8-F8DEB15136A8} png](https://user-images.githubusercontent.com/11222441/55700262-703acb80-5983-11e9-9044-1afa5a955261.jpg)

- [ ] issues: fixes #8608 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,12,['status: declined']
1215,268177278,8822,3834332,2019-04-08 04:20:21,2019-04-08 17:58:36,closed,Bryanv/1 1 docs,"Small changes, edits, etc or 1.1

Notes:

* had to set a few widget widths (cc @mattpap for comment)

* very tiny code change to BAD_COLUMN check (skip starting at new WebSource base class)",4,15,['status: accepted']
1216,268021325,8818,3834332,2019-04-06 08:15:52,2019-04-08 00:13:48,closed,Unify API of npm package and browser bundle,"There is a WIP webpack bundling [example](https://github.com/bokeh/bokehjs-examples/tree/master/webpack-example) to test this.

fixes #8596 
",8,2,['status: ready']
1217,267945563,8817,3834332,2019-04-05 19:53:02,2019-04-06 07:08:16,closed,Improve sizing of row and column layouts,"![image](https://user-images.githubusercontent.com/27475/55653297-587e0e80-57ee-11e9-9440-3406ba4b0ae7.png)

fixes #8643 ",0,1,['status: accepted']
1218,267690608,8816,3834332,2019-04-05 04:59:03,2019-04-05 06:39:32,closed,make manual_grid example configurable,"- [x] issues: fixes #8642
",0,2,['status: accepted']
1219,267680073,8815,3834332,2019-04-05 03:37:07,2019-04-05 04:57:01,closed,accept list/tuple graph attributes,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8679
- [x] tests added / passed
",0,2,['status: accepted']
1220,267420319,8813,3834332,2019-04-04 12:11:05,2019-04-04 14:01:30,closed,Invalidate render when LayoutDOM.css_classes changes,"fixes #8471 
",0,1,['status: accepted']
1221,267355997,8812,3834332,2019-04-04 09:04:57,2019-04-04 14:01:19,closed,Warn about layout and asynchronous HTML content,fixes #8638 ,0,1,['status: accepted']
1222,267123695,8811,3834332,2019-04-03 16:30:01,2019-04-04 05:19:00,closed,Make bokehjs work with phantomjs again,"fixes #8810 
fixes #8071 
",0,3,['status: accepted']
1223,266262842,8808,3834332,2019-04-01 14:19:16,2019-04-02 16:34:25,closed,Allow for simpler creation of complex grids,"Example:
```py
In [1]: from bokeh.layouts import row, column, grid

In [2]: from bokeh.models import Spacer

In [3]: grid(column(Spacer(), row(column(Spacer(), Spacer()), Spacer()))).children
Out[3]: 
[(Spacer(id='1001', ...), 0, 0, 1, 2),
 (Spacer(id='1002', ...), 1, 0, 1, 1),
 (Spacer(id='1003', ...), 2, 0, 1, 1),
 (Spacer(id='1005', ...), 1, 1, 2, 1)]
```",6,3,"['status: accepted', 'type: task', 'tag: layout']"
1224,266046837,8806,3834332,2019-03-31 21:28:11,2019-04-04 14:01:06,closed,Fix range tool interaction issues,"This is WIP, intend to add both unit and integration tests, as well as refactor complicated and duplicated code in *range_tool.ts*.

- [x] issues: fixes #8793
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

* dragging the box will function if one side of the range is out of bounds
* dragging one side over the other will automatically flip the range
* box annotation is clipped wnen a side is out of bounds

![ScreenFlow](https://user-images.githubusercontent.com/1078448/55295361-0b9ad200-53c1-11e9-8312-0da6969a884c.gif)



",1,4,['status: accepted']
1225,266005246,8805,3834332,2019-03-31 10:58:29,2019-03-31 12:21:46,closed,Make GridBox.spacing adhere to CSS argument order,"Previously `GridBox.spacing = [horizontal, vertical]` now it's `[vertical, horizontal]` to match CSS, where pairs of values always indicate vertical and horizontal dimensions respectively. This is necessary, because other APIs (e.g. `LayoutBox.margin`) follow CSS' order.
",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: layout']"
1226,265984202,8804,3834332,2019-03-31 02:59:23,2019-04-05 00:35:07,closed,Corrected spelling mistakes,Partially fixes issue: #8448,2,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1227,265973042,8803,3834332,2019-03-30 22:33:03,2019-03-30 23:51:17,closed,Make test_python_execution_with_OO work on Windows,"fixes #8789
",1,1,['status: accepted']
1228,265922467,8802,3834332,2019-03-30 07:36:49,2019-03-30 08:25:16,closed,Upgrade to TypeScript 3.4,"Upgrades the compiler, fixes `npm audit` complaints and resolves an issue with bokehjs integration tests after PR #8782.",0,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
1229,265511749,8800,3834332,2019-03-28 21:34:44,2019-03-30 07:03:37,closed,Fixes trying to index dict_keys,"This pull request fixes a small bug in application.py, causing the application to crash with a cryptic error, by trying to index `kwargs.keys()`.

It is probably a leftover from Python 2 times.",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
1230,264768791,8796,3834332,2019-03-27 03:40:28,2019-03-28 02:40:44,closed,simplify spinner logic,"
- [x] issues: fixes #8786
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

@xavArtley @mattpap  please comment. I understand what the logic in the older version was for, but I am not sure why it is necessary. Setting min/max/step on the input will already keep the spinner from going outside min/max. We just need to set the value carefully by counting significant digits of step, which I have now done explicitly with a function (an ugly one, but it is clear what it is for). 

We can certainly consider revisiting the logic later, but with this code, the example in the issue and several variants all perform exactly as I would expect them to. This is explicitly a big improvement, so I would like to merge this for 1.1 (I did realize that the snapping of 8 to 8.2 with (min, max, step) == (1, 20, 0.3) is instrinsic to the HTML element operation, not due to our code. So that's fine/is what it is)",3,3,['status: accepted']
1231,264510278,8795,3834332,2019-03-26 13:06:12,2019-03-26 15:06:57,closed,Fix handling of main.ipynb in DirectoryHandler,"Ensures that ``DirectoryHandler`` supports notebook files as advertised.

- [x] issues: fixes #8794
- [x] tests added / passed",0,3,"['status: ready', 'status: accepted']"
1232,264379656,8791,3834332,2019-03-26 05:35:32,2019-03-27 04:34:48,closed,Correction of the spinner behavior,"- [x] issues: fixes #8786
- [ ] tests added / passed
",3,1,['status: declined']
1233,263935336,8784,3834332,2019-03-24 20:49:49,2019-04-13 02:08:10,closed,Pan the webpage on touch pan events when no tools are selected,"issues: fixes #5918

",10,5,['status: accepted']
1234,263889742,8782,3834332,2019-03-24 08:40:29,2019-03-30 07:02:44,closed,Relativize module paths in the emitted js/d.ts files,"fixes #8197 
fixes #6513",10,5,['status: accepted']
1235,263862493,8781,3834332,2019-03-23 21:24:15,2019-03-26 14:57:58,closed,correcting validation for BAD_EXTRA_RANGE_NAME (#8723),"- [ x] issues: fixes #8723 
- [ x] tests added / passed: added to test_bad_extra_range_name in models/tests/test_plots
- [ ] release document entry (if new feature or API change)


Most significant change is a modified version of bokeh.model.collect_models. The new collect_filtered_models gets to reject a object *and* discontinue exploration of its children depending on a test function provided in the tests. The old collect_models now calls on the new function.",2,2,['status: accepted']
1236,263730630,8780,3834332,2019-03-22 19:07:14,2019-03-22 21:52:36,closed,Update tabs header when layout recomputes,fixes #8777 ,1,1,['status: accepted']
1237,263084869,8776,3834332,2019-03-21 00:36:41,2019-03-30 19:48:13,closed,Apply bokeh CSS more selectively to avoid conflicts,"![image](https://user-images.githubusercontent.com/27475/54848046-715fcd80-4ce0-11e9-9c62-6646284aa469.png)

fixes #8680 ",4,3,['status: accepted']
1238,263074970,8775,3834332,2019-03-20 23:37:13,2019-03-22 23:06:57,closed,Add support for grid layout spans,"![image](https://user-images.githubusercontent.com/27475/54725966-4014bf80-4b71-11e9-974e-5b869f55f4b0.png)

fixes #8710",8,3,['status: accepted']
1239,262736378,8773,3834332,2019-03-20 06:30:36,2019-03-21 15:31:54,closed,compute image bounds correctly,"- [x] issues: fixes #8770 fixes #8668
- [x] tests added / passed

As far as I can tell, this has been broken forever, possibly since the image glyphs were created. This PR removes the code that modifies the default bounds based on the spatial index, since these are already correct as-is. 

It might be nice to add some image or integration tests to verify this change. We could also update some of the gallery examples to not set ranges explicitly (but they would need to set `range_padding`  to 0 instead). 

Finally, I don't think things will behave well with `dw_units` or `dh_units` set to ""screen"" but things are clearly currently already broken in that case, by inspection. I would support deprecation being able to set units on these for 2.0 cc @bokeh/dev ",10,4,['status: accepted']
1240,262732671,8772,3834332,2019-03-20 06:11:52,2019-03-20 22:54:04,closed,update NF donation link,"- [x] issues: fixes #8771 

cc @lisamartin72 please check this is the correct link",0,1,['status: accepted']
1241,262306446,8767,3834332,2019-03-19 04:25:03,2019-03-20 22:55:38,closed,Corrected spelling mistakes,Partially fixes issue: #8448,1,3,['status: accepted']
1242,262215440,8765,3834332,2019-03-18 20:31:10,2019-06-07 11:57:31,closed,Added EqHistColorMapper,"This PR is still very WIP but it demonstrates a prototype of what can be achieved using the refactor in https://github.com/bokeh/bokeh/pull/8743 with the introduction of the `scan` and `cmap` methods. As in https://github.com/bokeh/bokeh/pull/8743, this will help address the issue described in https://github.com/pyviz/datashader/issues/609.

Here is a demonstration:

![image](https://user-images.githubusercontent.com/890576/54561221-20737080-4992-11e9-98cf-be82001a4896.png)

This is the simple test image with an outlier added which helps illustrates the difference (linear on the left and eqhist on the right).

At this stage I am *not* looking for a detailed review, but I would like to discuss the following:

1. `BinnedColorMapper` is a very general concept and could be used to implement *all* continuous colormappers including linear, log, cubic etc. Other than in the simplest linear case, this is probably a more efficient approach in general as you only need to compute 257 bin edges for a typical palette and most images will have a lot more pixels than that. E.g a linear colormapper can easily be implemented with `scan` returning `linspace` from low to high as long as the palette+1.

2. If we switch to using `BinnedColorMapper` throughout, the return type of `scan` can always be an array of bin edges (i.e numbers) addressing an issue raised in https://github.com/bokeh/bokeh/pull/8743 . It would also be an opportunity to address https://github.com/bokeh/bokeh/issues/8724 in the log colormapper.

3. `EqHistColorMapper` is an example of a non-trivial `BinnedColorMapper` which unlike the linear, log and cubic cases is very hard to implement without the binning approach. The code I used for reference is implemented in [datashader](https://github.com/pyviz/datashader/blob/master/datashader/transfer_functions.py#L123).

Note that if we liked the `BinnedColorMapper` approach in general, I would update the implementations of the linear and log mappers (and maybe add a cubic mapper) in a separate PR.

## TODO

- [x] Make the bin number a property (currently hard coded to 256x256).
- [ ] Handle explicit low and high values.
- [ ] Colorbar support. I have a working prototype that I can demonstrate but some discussion will be needed to find the best approach.
- [ ] Unit tests - make sure low and high colors are handled properly etc.
- [ ] Docstrings and docs",4,6,['status: superseded']
1243,262080099,8764,3834332,2019-03-18 14:29:40,2019-03-19 01:59:54,closed,Normalize rects in spatial index to allow inverted ranges,"fixes #8762 
",0,1,['status: accepted']
1244,261893774,8761,3834332,2019-03-18 01:56:10,2019-03-18 06:01:04,closed,unique migration anchors per release,"This PR cleans up anchors on the release notes page. Previously, all ""Migration Notes"" sections had identical HTML anchors, making linking to them individually impossible. The changes here allow for unique anchors per release:

<img width=""572"" alt=""Screen Shot 2019-03-17 at 6 53 38 PM"" src=""https://user-images.githubusercontent.com/1078448/54502103-2ca1f400-48e6-11e9-8100-9b4793d93b10.png"">

The redundant and explicit Sphinx syntax ist not great, but release notes are rare enough that automation is probably not justified. ",0,1,"['tag: component: docs', 'status: accepted', 'type: task']"
1245,261872514,8760,3834332,2019-03-17 21:06:43,2019-03-19 03:14:35,closed,Allocate fair amount of space for tabs' headers,"I think this should be reasonable middle ground, at least for now. Tabs will have space allocated for at least three headers (I suppose this could be made configurable) and scroll buttons. As an additional change, I made setting `width` and `height` to prefer `fixed` sizing policy if the policy is `auto`. Previously the go-to policy was `fit` for non-plot components, which resulted in confusing behavior (which would be visible in the MRE of #8726 after tabs' fix).

fixes #8726 
",1,4,['status: accepted']
1246,261850458,8758,3834332,2019-03-17 15:26:43,2019-03-18 01:12:21,closed,Added workaround for amd load in notebook,"This is hacky but very simple fix for https://github.com/bokeh/bokeh/issues/5227. It works well both in the classic notebook and when exporting a notebook using nbconvert. Setting ``window.define = undefined`` is definitely a hack but it is considerably simpler than it would be for us to leverage ``requirejs`` correctly in the notebook and works in all scenarios I have tested. That said I will defer to @mattpap's judgement on this since this does have the potential to break code that does rely on define being defined.

- [x] issues: fixes #5227
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,1,['status: WIP']
1247,261815344,8757,3834332,2019-03-17 03:11:04,2019-03-17 20:08:49,closed,Specialize visuals 'doit' getters,"- [x] issues: fixes #8746
- [x] tests added / passed

This PR generalizes the notion of whether a ""visual"" should be drawn or not. Currentlty only a single attribute (typically color, e.g. `fill_color`) is checked against `null` to determine whether canvas operations should be skipped or not. This removes the generic code that checks the single configured attribute, with an abstract `doit` property getter on the base, that is specialized for each visual subclass. New behavior is summarized below:

* fill: skip if color is null, or alpha is 0
* line: skip if color is null, or alpha or width is 0
* text: skip if color is null, or alpha is 0

The new code is more explicit and seems to be an improvement from a maintenance POV as well. 

Also it was noticed that the visual classes have almost no tests, despite being very low level and in use in many places. I have added tests to cover the new functionality, as well as some other basic tests.

New MRE output with this PR:

<img width=""420"" alt=""Screen Shot 2019-03-16 at 8 02 42 PM"" src=""https://user-images.githubusercontent.com/1078448/54484600-4fb99e80-4827-11e9-8d5a-814d40aa4ff2.png"">
",1,3,['status: accepted']
1248,261798870,8756,3834332,2019-03-16 20:42:38,2019-03-16 22:08:37,closed,Better handling of default legend in bokehjs' Figure,fixes #7451 ,0,1,['status: accepted']
1249,261796146,8755,3834332,2019-03-16 19:52:05,2019-03-16 22:09:45,closed,make angle_between strict,"- [x] issues: fixes #8742
- [x] tests added / passed

This PR addresses #8742 by making `angle_between` be strict, i.e. it will return false if the `start` and `end` angles are identical. 

New result of MRE with this change:

<img width=""623"" alt=""Screen Shot 2019-03-16 at 12 39 42 PM"" src=""https://user-images.githubusercontent.com/1078448/54480771-cdf75000-47e9-11e9-944d-a01faa667aa3.png"">

For reference, as of this PR, `angle_between` is only used in the `wedge` and `annular_wedge` glyphs:

```
❯ grin angle_between
./core/util/math.ts:
   17 : export function angle_between(mid: number, lhs: number, rhs: number, direction: Direction): boolean {
./models/glyphs/annular_wedge.ts:
    9 : import {angle_between} from ""core/util/math""
  127 :       if (angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {
./models/glyphs/wedge.ts:
   10 : import {angle_between} from ""core/util/math""
  104 :       if (angle_between(-angle, -this._start_angle[i], -this._end_angle[i], direction)) {
```
",1,1,['status: accepted']
1250,261728023,8754,3834332,2019-03-15 23:45:01,2019-03-16 22:11:56,closed,Make layout respect visible property,"fixes #6713, #4867
",2,1,['status: accepted']
1251,261717212,8753,3834332,2019-03-15 22:31:50,2019-03-16 03:55:29,closed,Proxy InspectTool.toggleable property,fixes #8624,0,1,['status: accepted']
1252,261712005,8752,3834332,2019-03-15 22:03:51,2019-03-16 03:57:55,closed,Handle disabled property in control widgets,"fixes #7981 
",0,1,['status: accepted']
1253,261682641,8751,3834332,2019-03-15 20:04:16,2019-03-16 03:53:06,closed,Update MAINTAINERS list,Adding myself and updating @bryevdv's email,1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: BEP', 'tag: component: build']"
1254,261679698,8750,3834332,2019-03-15 19:52:48,2019-03-16 00:19:20,closed,Allow to resolve both core/layout and core/layout/index,fixes #8747,2,1,['status: accepted']
1255,261658106,8749,3834332,2019-03-15 18:33:14,2019-03-15 19:49:40,closed,Selectively bundle custom models if possible,"This is a crude but working change. In the long term this should be handled by resources (or resource bundles, yet to be implemented), but that's quite some work given the current state of affairs.

addresses #8747
",2,1,['status: accepted']
1256,261628418,8748,3834332,2019-03-15 16:57:43,2019-03-15 17:30:43,closed,Don't expose external libraries in the public API,"addresses #8747 
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
1257,261422067,8745,3834332,2019-03-15 04:54:09,2019-03-15 17:28:33,closed,Corrected spelling mistakes,Partially fixes issue: #8448 ,1,1,"['status: accepted', 'type: task', 'reso: completed']"
1258,261326877,8743,3834332,2019-03-14 20:27:00,2019-06-07 11:56:48,closed,Refactored continuous color mappers with .scan and .cmap,"This PR implements a refactor of continuous colormappers that I think makes the structure of the code clearer and will make it easier to add new colormappers to Bokeh (addressing https://github.com/pyviz/datashader/issues/609). I will submit another PR based off of this one shortly adding these new colormappers, starting with a cubic colormapper. Working on colormappers will also let me address https://github.com/bokeh/bokeh/issues/8724.

The core insight here is that that all continuous colormappers do at least two scans of the data 1) an initial scan to collect information about the data being colormapped - this can be as simple as finding the min/max of the data 2) a loop over the data that actually applies the colormapping based on the value being colormapped and the information collected in step 1.

These two steps are implemented by a `scan` method which does the initial collection of the information needed to do the colormapping and a `cmap` method which uses this information to colormap a specific value.

Other than making things clearer, one of the advantages of splitting the color mapping process into two methods is that you'll be able to implement new colormappers just by implementing a new `scan` method while inheriting a generic `cmap`method from a base class. This isn't demonstrated in this PR but will be demonstrated in the follow up PR that adds new colormappers.

This PR keeps the existing core machinery of both the linear and log color mappers intact. In the next PR it will be possible to use a more generic approach throughout.

",13,8,['status: superseded']
1259,260109966,8740,3834332,2019-03-11 19:46:40,2019-03-12 04:49:35,closed,Miscellaneous improvements to bokehjs,A few changes that accumulated recently in my git stash.,2,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
1260,260078716,8739,3834332,2019-03-11 18:08:14,2019-03-12 18:01:54,closed,Make warnings configurable,"Implementing configurable warning silencer as suggested by @bryevdv: https://github.com/bokeh/bokeh/issues/8725#issuecomment-470586707.

- [x] issues: fixes #8725
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

## To try it

```python
import bokeh
from bokeh.layouts import row
from bokeh.io import output_notebook, show

output_notebook(verbose=True)
# create an empty layout object
empty_row = row([])

# turn the warning off
bokeh.core.validation.silence('EMPTY_LAYOUT')
# see that there is no warning
show(empty_row) 

# turn the warning back on
bokeh.core.validation.silence('EMPTY_LAYOUT', False)
# see that there is a warning
show(empty_row)
```

## Screenshot of use case
<img width=""730"" alt=""Screen Shot 2019-03-11 at 1 46 18 PM"" src=""https://user-images.githubusercontent.com/4806877/54146513-7ed6a700-4406-11e9-9f9f-1022602c1bc5.png"">
",16,8,['status: accepted']
1261,259792901,8738,3834332,2019-03-10 21:56:00,2019-03-12 05:01:41,closed,kill node.exe and phantom phanomjs.exe before quitting selenium webdr…,"- [x] issues: fixes #8737 
",9,2,['status: accepted']
1262,259749763,8736,3834332,2019-03-10 10:28:38,2019-03-12 16:12:02,closed,Note for windows user for server --dev,"- [x] issues: fixes #8529
- [x] tests passed",0,2,['status: accepted']
1263,259713246,8734,3834332,2019-03-09 20:11:13,2019-03-10 06:05:10,closed,Make GMapPlotCanvas work in strict mode,fixes #8733 ,0,1,['status: accepted']
1264,259589516,8732,3834332,2019-03-08 19:57:08,2019-03-12 18:02:45,closed,Add support for closable tabs,"
![image](https://user-images.githubusercontent.com/27475/54052406-9fbfb200-41e4-11e9-9eaf-1e052578cd26.png)


fixes #7498 ",6,1,['status: accepted']
1265,259255587,8730,3834332,2019-03-07 20:17:59,2019-03-11 01:17:25,closed,Stops the directory handler from bailing inappropriately.,"At the start of it's modify_doc, the directory handler checked it's `failed` property and returned immediately if it was true. The `failed` property checked the `failed` properties of the embedded `_main_handler` and `_lifecycle_handler`. Checking `_main_handler.failed` and bailing immediately meant that any failure in the user's script would never be cleared, and the bokeh server would have to be restarted. Now we only check `_lifecycle_handler.failed`, which we do want to bail on.

fixes #8577 

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1266,259251821,8729,3834332,2019-03-07 20:04:54,2019-03-07 20:33:22,closed,add phantomjs to test deps,"- [x] issues: fixes #8571 

I think things were working on TravisCI by coincidence they they have a pre-installed PhantomJS
",1,1,['status: declined']
1267,258925048,8722,3834332,2019-03-07 00:00:23,2019-03-07 04:01:45,closed,darken and desat disabled buttons,"- [x] issues: fixes #8717

Updated test script to cover all buttons
```
from bokeh.io import show
from bokeh.layouts import widgetbox
from bokeh.models.widgets import Button
from bokeh.core.enums import ButtonType

buttons = [Button(label=x, disabled=True, button_type=x) for x in ButtonType]

show(widgetbox(*buttons))
```

Current output:

<img width=""320"" alt=""screen shot 2019-03-06 at 3 58 22 pm"" src=""https://user-images.githubusercontent.com/1078448/53922388-e8cb0700-4028-11e9-8797-5498c98eea90.png"">


cc @mattpap @jsignell I think this looks pretty reasonable but open to suggestion

",2,1,['status: accepted']
1268,258920595,8721,3834332,2019-03-06 23:37:58,2019-03-07 04:31:11,closed,deprecate unused plot symmetry options,"- [x] issues: fixes #8712

deprecates unused `h_symmetry` and `v_symmetry`",0,2,['status: accepted']
1269,258828918,8720,3834332,2019-03-06 18:21:50,2019-03-06 19:38:47,closed,yield close_all_connections,"- [x] issues: fixes #8719

test this out",2,2,['status: accepted']
1270,258785400,8718,3834332,2019-03-06 16:16:48,2019-03-06 19:39:47,closed,Use correct z-index in bk-tooltip,"
![image](https://user-images.githubusercontent.com/27475/53896051-9511eb00-4033-11e9-95eb-5057e30cb549.png)


fixes #7991 
",1,1,['status: accepted']
1271,258381909,8716,3834332,2019-03-05 16:00:57,2019-03-05 16:46:52,closed,Change Whisker and Band parameters to UnitSpec,"- [x] issues: fixes #8484
- [x] tests added / passed

I've changed the specs of `base`, `lower` and `upper` to a less restrictive `UnitSpec` as `DistanceSpec` did not permit negative values for these parameters. I'm not sure whether it would make sense to create a new spec class explicitly for this.",1,2,['status: accepted']
1272,258369968,8714,3834332,2019-03-05 15:28:18,2019-03-06 19:40:57,closed,Run inline js in individual functions in autoload_js,fixes #8713 ,4,2,['status: accepted']
1273,257996427,8709,3834332,2019-03-04 16:00:05,2019-03-04 17:34:53,closed,After running npm audit fix,"Fixes: #8708

Not sure if this is all that needs to be done, but this is what updated after running `npm audit fix`",4,1,['status: accepted']
1274,257973717,8707,3834332,2019-03-04 14:59:42,2019-03-05 08:49:17,closed,Don't over-allocate space for columns/rows in grids,"addresses #8084

![image](https://user-images.githubusercontent.com/27475/53741473-c73a1600-3e96-11e9-8182-61a4d4192284.png)
",0,4,['status: accepted']
1275,257717700,8704,3834332,2019-03-03 07:20:53,2019-03-05 09:11:52,closed,Fix typo,"attemptings -> attempting

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #8703 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1276,257715683,8702,3834332,2019-03-03 06:30:34,2019-03-04 16:54:32,closed,add support for server-sent events,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8663
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",8,1,['status: accepted']
1277,257620035,8701,3834332,2019-03-02 00:12:11,2019-03-02 05:06:35,closed,Lazily value import UIEvents in PlotView,"fixes #8700 
",0,1,['status: accepted']
1278,257568849,8699,3834332,2019-03-01 20:15:04,2019-03-01 21:18:37,closed,Rename bokehjs/build/js/{tree->lib} to match src/,fixes #8698 ,0,1,['status: accepted']
1279,257539051,8697,3834332,2019-03-01 18:24:30,2019-03-02 20:25:01,closed,Compute content size with subpixel precision,"@philippjfr, can you try this out? This should resolve issue with unnecessary wrapping.

fixes #8654 ",3,1,['status: accepted']
1280,257516685,8696,3834332,2019-03-01 17:04:15,2019-03-01 17:58:39,closed,Connect CDSView.source's slots after late initialization,"This fixes the particular case of `CDSView.source`. The issue will be fixed completely in #8597.

fixes #8686
",0,1,['status: accepted']
1281,257510587,8695,3834332,2019-03-01 16:45:12,2019-03-06 16:37:04,closed,Finish rewriting bokehjs' tests in TypeScript,fixes #7864,0,5,['status: accepted']
1282,256893076,8694,3834332,2019-02-28 00:45:50,2019-03-01 17:59:04,closed,Allow to scroll through tabs headers,"addresses #8084
fixes #8639 

If tab headers overflow, buttons will appear allowing to scroll through headers:

![image](https://user-images.githubusercontent.com/27475/53643737-154fdf00-3c35-11e9-9556-996696e19eaf.png)
",0,10,['status: accepted']
1283,256868905,8693,3834332,2019-02-27 22:48:43,2019-03-21 00:06:49,closed,Codepen links,"

- [ ] issues: fixes #8692
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",30,35,['status: accepted']
1284,256396916,8689,3834332,2019-02-26 18:31:09,2019-02-27 09:52:28,closed,Improve performance of widget heavy layouts,"addresses #8084
fixes #8622",6,5,['status: accepted']
1285,255916397,8685,3834332,2019-02-25 14:44:06,2019-02-25 16:30:08,closed,Observe changes to offset parent and relayout,"This fixes the problem universally (not only in jupyter). This doesn't affect performance (computing `offsetParent` is cheap, compared to other DOM APIs).

fixes #8655
",4,1,['status: accepted']
1286,255451259,8682,3834332,2019-02-22 16:17:47,2019-02-22 20:59:57,closed,Make autoload_js load CSS before JavaScript,"I tested this manually in Jupyter notebook and lab.

fixes #8681 
",5,2,['status: accepted']
1287,254966360,8678,3834332,2019-02-21 10:27:59,2019-02-21 13:33:48,closed,Add a color picker and spinner widgets,"Finishes and supersedes PR #8580.

fixes #6173",1,21,['status: accepted']
1288,254564396,8675,3834332,2019-02-20 09:43:54,2019-02-22 14:12:31,closed,Add option to OpenURL in current tab,"- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8671
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,3,['status: accepted']
1289,254441698,8673,3834332,2019-02-19 23:04:43,2019-02-19 23:44:58,closed,trivial change to test ci,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: declined']
1290,254365416,8672,3834332,2019-02-19 18:42:06,2019-02-19 22:26:07,closed,open bokeh serve notebooks with utf8,"
- [x] issues: fixes #8625
",12,5,['status: accepted']
1291,254083148,8670,3834332,2019-02-19 01:01:34,2019-02-19 01:42:42,closed,restore Spacer transitive import in bokeh.layouts,"- [x] issues: fixes #7805

",0,1,['status: accepted']
1292,254070198,8669,3834332,2019-02-18 23:21:30,2019-02-19 00:00:49,closed,Bryanv/demosite url,Small PR to remove the usage of `demo.bokehplots.com`,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1293,253925713,8667,3834332,2019-02-18 13:59:14,2019-02-18 16:04:45,closed,Replace vendored bootstrap and font-awesome with CDN,"fixes #8187 
",0,1,['status: accepted']
1294,253790142,8665,3834332,2019-02-18 05:48:43,2019-02-18 16:03:54,closed,Bryanv/sphinxext,"- [x] issues: fixes #5955
- [x] release document entry (if new feature or API change)

This PR closes #5955 and makes `bokeh-plot` scripts always be located adjacent to the document they are for, and always be loaded with relative links. This is a first step in supporting a longer term goal of hosting Bokeh docs on ReadTheDocs.  Also in this PR:

* Both `bokeh-gallery` and `bokeh-plot` were simplified: The custom Sphinx parser for python files was  removed. The gallery plugin simply generates `.rst` files with the appropriate `bokeh-plot` directives at build start. The plot plugin always handles python files at the same time (on `run` for a document). 

* Subjectively, the build seems to run somewhat more quickly as a result. As a guess this is due to not parsing the AST manually

* Adds some sections missing from the refguide

* General cleanup and consistency across the entire `sphinxext` package. 

@mattpap I'd like to merge this and cut a 1.1dev5 release tomorrow to ensure there are no end-to-end issues. ",2,23,['status: accepted']
1295,253694125,8664,3834332,2019-02-17 07:46:13,2019-03-03 06:29:48,closed,add support for server-sent events,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8663
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",15,32,['status: declined']
1296,253667427,8662,3834332,2019-02-16 20:52:19,2019-02-19 17:56:03,closed,use ci.bokeh.org for artifact storage,Migrate CI test artifact storage to ci.bokeh.org,19,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1297,253637811,8661,3834332,2019-02-16 11:44:20,2019-02-17 20:32:19,closed,Use visibility: hidden on hidden tabs,fixes #8614,0,1,['status: accepted']
1298,253619712,8660,3834332,2019-02-16 04:41:19,2019-02-16 05:09:43,closed,add --index option to specify site index template,"This is a useful little feature in and of itself, but specifically I need it to set up a new demo site on Elastic Beanstalk without having to run nginx separately. 
",0,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
1299,252873079,8657,3834332,2019-02-13 22:36:58,2019-02-21 09:28:33,closed,Rewrite custom extensions in TypeScript,"fixes #8656 
",0,2,['status: accepted']
1300,252803656,8653,3834332,2019-02-13 18:39:08,2019-02-13 19:11:17,closed,assume UTC in value_as_date,"These tests were failing for me locally, only working on travis due to a timezone coincidence. 
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: widgets']"
1301,252682550,8652,3834332,2019-02-13 12:53:14,2019-02-20 14:21:43,closed,Don't allow user agent styles to overwrite ours,"addresses #8645 
",19,10,['status: accepted']
1302,252413997,8651,3834332,2019-02-12 17:56:22,2019-02-12 18:29:11,closed,Fix grid_axis_alignment_no_toolbar on 32-bit platforms,fixes #8650 ,0,1,['status: accepted']
1303,252313598,8648,3834332,2019-02-12 13:24:31,2019-02-12 15:50:41,closed,Make examples' tests work on Windows,fixes #8647 ,0,1,['status: accepted']
1304,252192150,8646,3834332,2019-02-12 06:26:41,2019-02-13 01:41:55,closed,isolate instantiation/initialization from json better,"- [x] issues: fixes #8627
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

@mattpap if you think this seems reasonable I will add some tests and merge. ",6,5,['status: accepted']
1305,251992744,8644,3834332,2019-02-11 17:07:06,2019-02-13 12:20:40,closed,Rewrite test/models in TypeScript,"After this PR `test/index`, `test/document/document`, `test/core/ui_events` and `test/client/connection` will still need a rewrite.

addresses #7864 ",0,18,['status: accepted']
1306,251578381,8636,3834332,2019-02-08 19:49:18,2019-02-11 23:17:54,closed,Add js_link convenience method,"Add a method to enable simple linkages between JS attributes without explicitly having to import and create a CustomJS object:

```
select.js_link('value', plot, 'sizing_mode')
```
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Have had this in mind for a long time just had never added it. Seems fairly straightforward and uncontroversial, but cc @bokeh/dev for any thoughts. ",13,4,"['type: feature', 'status: accepted', 'reso: completed']"
1307,251157265,8634,3834332,2019-02-07 15:27:52,2019-02-07 16:21:59,closed,Fix app/stocks example,"A line from an older version sneaked in the example. 

On change from selection runs in the following way now. 

ource.selected.on_change('indices', selection_change)

Related to the issue

fixes #8633
",1,1,['status: accepted']
1308,250906969,8632,3834332,2019-02-06 21:06:16,2019-02-06 21:52:10,closed,Fix examples' tests after PR #8619,"After PR #8619 examples' report and images aren't uploaded anymore.
",0,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'tag: regression']"
1309,250859636,8631,3834332,2019-02-06 18:25:10,2019-02-07 17:50:06,closed,resolve various deprectations,"- [x] issues: fixes #8607
- [x] tests added / passed
",4,8,['status: accepted']
1310,250450149,8629,3834332,2019-02-05 15:43:22,2019-02-07 15:08:38,closed,Daterangeslider value as date,"- [x] issues: fixes #8628 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,5,['status: accepted']
1311,249843031,8623,3834332,2019-02-02 23:01:07,2019-02-02 23:51:03,closed,"Upgrade TypeScript and minifier, and enable more tslint rules","
",0,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: typescript']"
1312,249832212,8621,3834332,2019-02-02 19:29:56,2019-02-16 11:44:49,closed,force a layout rebuild on active tab changes,"- [x] issues: fixes #8614
- [ ] tests added / passed

@mattpap if you have a better/more efficient solution I'm happy to defer but otherwise this seems reasonable (and limited in scope) in order to ensure correct behaviour. ",3,1,['status: superseded']
1313,249774508,8620,3834332,2019-02-02 00:28:49,2019-02-06 18:08:58,closed,Make custom extensions compiler work on Windows,"fixes #8613
",11,8,['status: accepted']
1314,249760472,8619,3834332,2019-02-01 22:56:07,2019-02-02 00:58:03,closed,Fix pytest's deprecations in examples' tests,fixes #8617 ,0,1,['status: accepted']
1315,249746686,8615,3834332,2019-02-01 21:52:04,2019-02-07 16:39:17,closed,Remove duplication of types between attributes and properties,"fixes #8612 
fixes #8616",1,30,['status: accepted']
1316,249490786,8606,3834332,2019-02-01 05:23:28,2019-02-01 05:52:28,closed,change use of deprecated sphinx app logger,"The sphinx build currently has a ton of noise due to our use of he deprecated `app.debug` function. This PR replaces that usage with the new Sphinx logger. 
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1317,249471126,8605,3834332,2019-02-01 02:53:51,2019-02-01 04:48:34,closed,use test env for running CI jobs,"This PR attempts to update conda and conda-build but also preserve Python 3.5 jobs, but switching to a dedicated non-root env for testing during install. 
",0,1,"['status: accepted', 'type: task', 'tag: component: build']"
1318,249469736,8604,3834332,2019-02-01 02:43:42,2019-02-01 04:28:16,closed,remove python 3.5 from matrix,"In order to update to the latest conda and conda-build we would need to drop Python 3.5 from our test matrix. This PR is to prove out that things will indeed work, and have a discussion about whether to actually do it. 

I am personally not happy about how aggressively conda has dropped support for Python 3.4 and 3.5 but here we are. I am +0 on this change. FWIW builds do seem to go faster which is certainly a benefit to devs. 

@bokeh/dev thoughts?
",2,1,['status: declined']
1319,249465877,8603,3834332,2019-02-01 02:15:40,2019-02-01 02:32:31,closed,attempt to build with latest conda,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: declined']
1320,249359630,8602,3834332,2019-01-31 18:52:48,2019-01-31 21:42:22,closed,remove extraneous ctx.fill for bands,"There was an unnecessary `ctx.fill()` after the `ctx.fillRect(...)` to draw the bands. When the cross grid line color is `None` this actually supresses stroking and resetting some paths, and presumably this allowed a bad path accumulate for the `ctx.fill()`.

- [x] issues: fixes #8599

",1,2,['status: accepted']
1321,249344631,8601,3834332,2019-01-31 18:00:14,2019-01-31 21:06:23,closed,Fix CDS callback property callbacks,"The signals were set up to trigger when the `selected` model itself change (i.e. if it was replaced wholesale). This updates to watch changes on properties of the `Selection` (e.g. `indices`) This does not handle the case if a selection is in fact wholesale replaced but I would consider that unsupported and would support making the selection model read only in future releases. 

- [x] issues: fixes #8600
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
1322,248716843,8594,3834332,2019-01-30 01:37:24,2019-01-30 20:37:17,closed,Invalidate TileSource cache on property changes,"Upgrades ``TileSource`` attributes to properties and add events to clear cache and rerender when a property changes. Let me know if my assumption that attributes need to be properties to trigger model change events is wrong.

![geoviews_tilesources_small](https://user-images.githubusercontent.com/1550771/51953927-2fc84a00-2436-11e9-81fe-57596653c509.gif)

- [x] issues: fixes #8164
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,2,['status: accepted']
1323,248711646,8593,3834332,2019-01-30 01:04:51,2019-01-31 17:12:27,closed,Refactor tile_providers to handle multiple documents more intuitively…,"Deprecate functionality to retrieve tile providers as already instanciated objectes,
which was confusing for multiple document use-cases.
Instead, add a new function `get_provider` that returns a provider and is thus more clear.


 -   Implement get_provider. It accepts the provider name as a string (case does not matter), or an
    element of a new enum Provider. This function creates the tile provider accordingly and returns the new instance of it. 
 -   Issue deprecations in the existing properties for the providers
 -  Update the test cases to assert the deprecation warning, and add a new testcase that tests `get_provider`. (The functionality of the other test cases is not duplicated, so that has to be done when the real deprecation happens).
 -   Update the docstring of tile_providers
 -   Update all examples (that I could find).

Example snippets:

```python
from bokeh.tile_providers import CARTODBPOSITRON

# Works, but raises BokehDeprecationWarning:
# ""BokehDeprecationWarning: CARTODBPOSITRON was deprecated in Bokeh 2.0.0 and will be removed, use get_provider(Provider.CARTODBPOSITRON) instead.""

from bokeh.tile_providers import get_provider, Provider

# Use the new enum for tile types
p1 = get_provider(Provider.CARTODBPOSITRON)

# Also works with string names (upper and lower case)
p2 = get_provider(""CARTODBPOSITRON"")

# Also works by passing in the ""old"" provider. Not sure about this feature
p3 = get_provider(CARTODBPOSITRON)
```

There are a few things which I am not sure about:

-    Whether I used the right deprecation protocol (I used bokeh.util.deprecation.deprecated)
-    Whether I found all examples
-    Whether the docstring is what you expect/the right format. I am not sure how to document the enum values
-    Whether I found all examples

Please let me know if anything is not what you expected/should be changed!

- [x] issues: fixes #8566 
- [x] tests added / passed: Yes
- [ ] release document entry (if new feature or API change): Not sure where to add
",9,5,['status: accepted']
1324,248382363,8590,3834332,2019-01-29 05:48:41,2019-01-29 17:36:32,closed,#8589 Fixes docstring typo in patch method of sources.py,Fixed a docstring typo as raised in #8589 ,1,1,['status: accepted']
1325,248246229,8588,3834332,2019-01-28 18:43:31,2019-01-28 20:46:35,closed,adapt to pandas changes,"- [x] issues: fixes #8585
- [x] tests added / passed
",7,2,['status: accepted']
1326,248234413,8587,3834332,2019-01-28 18:02:07,2019-01-28 18:24:16,closed,pin conda versions with CONDA_REQS on appveyor too,Conda 4.6.1 is causing issues on Appveyor (https://github.com/appveyor/ci/issues/2822),0,1,"['status: accepted', 'type: task', 'reso: completed', 'plat: windows', 'tag: component: build']"
1327,247909898,8586,3834332,2019-01-26 19:47:38,2019-01-28 20:47:14,closed,Possible typo in documentation for bokeh.client.session. ,"In [documentation for bokeh.client.session](https://bokeh.pydata.org/en/latest/docs/reference/client/session.html) under ClientSession object, mysession and session objects should maybe be the same?

```
with pull_session(url=app_url) as session:
    # customize session here
    script = server_session(session_id=mysession.id, url=app_url)
    return render_template(""embed.html"", script=script, template=""Flask"")
```
",6,2,['status: accepted']
1328,247434544,8584,3834332,2019-01-24 18:36:49,2019-02-01 01:55:24,closed,add option to set websocket_max_message_size from notebook,"- [x] issues: fixes #8583 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",6,9,['status: accepted']
1329,246695768,8580,3834332,2019-01-22 17:47:20,2019-02-21 10:28:52,closed,Add a color picker and spinbox to widgets,"- [x] Add 2 new widgets:
- A SpinBox widget for numerical inputs
- A Color picker to select colors

- [x] 2 examples of use case are added

- [ ] Need to add tests",26,19,['status: superseded']
1330,246057608,8578,3834332,2019-01-19 16:50:38,2019-01-29 17:41:31,closed,Create custom example to plot parallel plot,"- [ ] related to #4470
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I am at a stage where I do not really think I can go on without any help

Current features
- [x] Multiple selections on one axes => union
- [x] Multiple selections on different axes => intersection
- [x] Drag selection
- [x] Delete selection by double tap on it
- [x] Escape key remove all selections

Feature wanted :
- [ ] Change cursor type when hovering selection (""grab"", ""cursor_ns"" when close to bottom up edges)
- [ ] Resize selection
- [ ] HoverTool specific to parallel plot (need definition)
- [ ] Update y axes ticks when zooming

I think I need to replace Rect glyph for selection by BoxAnnotations. It will allow to change cursor when hovering. However if I know how to add one to the layout I didn't succeed to remove it.

[demo](https://xavartley.github.io/bokeh/parallel_plot)",11,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1331,245709003,8575,3834332,2019-01-18 02:25:38,2019-01-18 05:54:10,closed,force zero padding for fixed axes,"- [x] issues: fixes #8552
- [x] tests added / passed
",1,1,['status: accepted']
1332,245676020,8574,3834332,2019-01-17 23:05:17,2019-02-02 22:25:01,closed,Bryanv/20 deprecations,"Needs some documentation support, also to make sure there are not places that have been overlooked, or other things we can slate for 2.0 deprecation. 

- [x] issues: fixes #8560
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,4,['status: accepted']
1333,244853308,8569,3834332,2019-01-15 16:18:43,2019-02-19 18:28:55,closed,Prototype - Feedback requested,"This is not for merging it's a quick knock up of a prototype for issue #6536.

Some questions:

1) API

  * What do we want the properties to be called. @bryevdv you had previously spelled out positive_infinity and negative_infinity as seperate properties, is that still something you want to do. ~~Personally I am leaning towards just `not is_finite` so ""infinity."" But if there's a compelling case of when you'd want to set both for a range I'm all ears. I have not yet looked into what other libraries do in this regard.~~ I have thought about this more, see later comment.
  * What do we want the enums to be. The more I think about it the less I like ""screen_min"" and ""screen_max"" they're so ""insider"" / implementation specific. I think that should be ""scale_min"", ""scale_max"" 

2) Default

  * I actually think we should set the default to be ""scale_min"" (or whatever we call it) so that log plots just start working for new plot writers. I wouldn't regard it as an API change as this property didn't exist before and most people who have a currently functioning log plot would probably have set bottom (as I have done everywhere) and so this change seems unlikely to affect them.....it could affect some people who've used the disappearing nature of log(0) as a feature.....feels less common than people being confused by their bar charts not working

3) Other changes? 

  * Are there other changes that need to be made along with this PR in terms of syntactic magic etc.
  * Should this just be on LogScale or on all scales for consistency?

This is not intended to be complete or review-worthy, just me getting my head around the basic mechanics. I will be starting a new branch with tests etc.

The functional test cases I plan to make sure I've covered are:

  *  y and x axes in both directions
  *  circles, lines, vbars, patches (see old issue)
  *  double axes
  *  colorbar
  * server driven property change


![screenshot from 2019-01-15 10-20-22](https://user-images.githubusercontent.com/1796208/51193759-38a21300-18af-11e9-8cf1-0771924ea1e3.png)
",22,8,['status: declined']
1334,244295362,8565,3834332,2019-01-13 18:10:33,2019-01-17 20:24:01,closed,Ensure compilation of custom model works with bokehjs compiled on win,"If windows compile bokehjs => the path separator in bokeh.json is `\\` instead of `/`
Then when a custom module extension with lines like :
`import * as p from ""core/properties""` 
is compiled it failed because available module in bokeh.json is `core\\properties`
",4,5,"['type: bug', 'status: accepted', 'plat: windows']"
1335,244222707,8563,3834332,2019-01-12 14:33:40,2019-02-12 17:58:28,closed,Transform coffee script in custom extension examples in TypeScript,"It's a work in progress.
It's the first time I code ith typeScript so any advice is welcome",10,13,"['status: accepted', 'type: task', 'tag: component: examples', 'tag: typescript']"
1336,243427042,8558,3834332,2019-01-09 18:13:02,2019-01-09 20:40:57,closed,Safer alternative fix for unicode notebook issue in Python 2,"
This PR is an alternative fix to the one implemented in #8555. Based on a suggestion from @philippjfr, it seems like it might be best to always encode to utf8 as nbconvert is templated to always use that encoding.",1,3,"['type: bug', 'status: accepted', 'reso: completed']"
1337,243394181,8557,3834332,2019-01-09 16:25:28,2019-01-09 18:38:53,closed,1.0.4 release notes,,0,1,['status: accepted']
1338,243130708,8556,3834332,2019-01-08 22:07:47,2019-01-09 00:32:53,closed,Correct three minor typos,Correct three minor typos in` tools.py` comments.,1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1339,243103518,8555,3834332,2019-01-08 20:25:52,2019-01-09 17:55:33,closed,Unicode fix when serving notebooks on Python 2,Quick PR to try to fix #8554.,8,6,"['status: accepted', 'type: task', 'reso: completed']"
1340,243095224,8553,3834332,2019-01-08 19:54:31,2019-01-08 21:03:12,closed,"add Model, Event, and populate bokeh.models __all__",cc @HuntJSparra Just FYI I overlooked some things in earlier reviews. ,0,1,"['status: accepted', 'type: task', 'reso: completed']"
1341,243018832,8550,3834332,2019-01-08 15:40:44,2019-01-08 17:20:10,closed,Fix-up BOKEH_DEV docs (follow-up),"Fixes #8534 (ongoing)

Follow-up with the ToDos still left from #8537",0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1342,242800118,8549,3834332,2019-01-07 22:21:25,2019-01-08 18:12:10,closed,Add documentation on callback policy for slider,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8548
",1,7,['status: accepted']
1343,242769121,8547,3834332,2019-01-07 20:14:19,2019-01-08 19:02:49,closed,Initial boilerplate for bokeh/_testing,"- [X] issues: finishes #8207 
- [x] tests added / passed

Adds boilerplate for bokeh/_testing
",4,3,['status: accepted']
1344,242768768,8546,3834332,2019-01-07 20:12:49,2019-01-07 21:20:26,closed,Simple approach to replacing line and cell magics,"
This PR is a simpler and safer alternative to #8539 - it lets nbconvert try to convert the magics and *then* removes `run_cell_magic` and `run_line_magic` calls.

Current it doesn't issue warnings but warnings are now less important now that false positives are far more unlikely.",2,1,['status: declined']
1345,242744862,8545,3834332,2019-01-07 18:36:02,2019-01-07 20:42:45,closed,remove warning message aboug gulp,"- [x] issues: fixes #8533

I realize this is marked `good first issue` but I want to clear down the tracker, also FWIW I think good first issues should have *slightly* more teeth
",0,2,['status: accepted']
1346,242743305,8544,3834332,2019-01-07 18:29:39,2019-01-07 19:10:43,closed,better error message for nonexistent bokeh serve targets,"- [x] issues: fixes #8543
- [x] tests added / passed
",0,1,['status: accepted']
1347,242734744,8542,3834332,2019-01-07 17:53:54,2019-01-07 18:30:24,closed,use only yaml.safe_load,"- [x] issues: fixes #8541

Replaces all usage of `yaml.load` with `yaml.safe_load`

Checked codebase:

```
~/work/bokeh/bokeh bryanv/8541_yaml_safe_load
(base) ❯ grip yaml |grep load
  266 :         examples = yaml.safe_load(f.read())
  131 :                 json = yaml.safe_load(f)
  109 :         config = yaml.safe_load(open(join(bokeh_dir, 'config')))
```
If there was anything else like `from yaml import load` it would show up in the above output. ",0,1,['status: accepted']
1348,242331296,8539,3834332,2019-01-04 17:57:42,2019-01-08 19:02:03,closed,Preprocessor to strip out IPython magics from notebooks,"First cut at addressing #8513.

Using this tiny notebook called 'Test.ipynb':

![image](https://user-images.githubusercontent.com/890576/50702593-f824d880-1016-11e9-9b22-394be0b685c6.png)

On master, running `bokeh serve --show Test.ipynb` gives you:

![image](https://user-images.githubusercontent.com/890576/50702486-b300a680-1016-11e9-88d4-4f1881356a46.png)

With this PR:

![image](https://user-images.githubusercontent.com/890576/50702565-e3e0db80-1016-11e9-9581-3de677b50ac8.png)

Right now this is a first cut. Things to think about:

- [ ] Is this the best way to detect magics? Probably not as a line of valid Python could start with a  bare `%` e.g an expression in parentheses or an expression using `\` to break across lines. Checking for an alphanumeric identifier immediately after `%` doesn't really help as this is valid Python too:

   ```python
   foo = 2
   4 \
   %foo
   ```

  I suppose we could make an explicit blacklist of the most common magics to be safe?

- [ ] Should we warn when magics are detected? (probably)
- [ ] Avoid inlining the `StripMagicsProcessor` class (currently done to use bokeh's approach to importing `nbconvert` inline).
",30,12,['status: accepted']
1349,242078351,8538,3834332,2019-01-03 18:45:04,2019-01-03 19:54:35,closed,Initial boilerplate for bokeh/tests,"- [X] issues: addresses #8207 
- [x] tests added / passed

Adds boilerplate to the files under the bokeh/tests directory.",2,2,['status: accepted']
1350,242036253,8537,3834332,2019-01-03 16:00:39,2019-01-07 17:57:59,closed,Birdsarah/8534 docs tweak,"Fixes #8534

Here is a screenshot of the docs fix rendered

![screenshot from 2019-01-03 09-58-35](https://user-images.githubusercontent.com/1796208/50647533-6a75ba00-0f3e-11e9-813c-d86ed3001dfe.png)


To Do:
- [ ] bokeh/settings.py docstring update
- [ ] note about notebook not working with bokeh dev (check first)

ToDos resolved in #8550.

Not doing:

* After checking with @bryevdv, I'm just going to leave it to be ""server"" as the recommendation and maybe we can clean-up all these options another time.
",3,4,['status: accepted']
1351,241792985,8535,3834332,2019-01-02 16:42:57,2019-01-03 16:42:33,closed,Boilerplate for bokeh/util,"- [X] issues: addresses #8207 
- [x] tests added / passed

Adds boilerplate to the files in bokeh/util directory.
",2,8,['status: accepted']
1352,241508125,8530,3834332,2018-12-30 20:46:56,2019-01-02 15:56:57,closed,Boilerplate for bokeh/sphinxext and bokeh/template,"- [x] issues: addresses #8207 
- [x] tests added / passed

Adds boilerplate for bokeh/sphinxext and bokeh/template, the latter being included due to the fact it is only 5 files.",3,4,['status: accepted']
1353,241472516,8528,3834332,2018-12-30 02:11:57,2018-12-30 02:47:57,closed,release notes,"
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1354,241401854,8526,3834332,2018-12-28 21:58:27,2019-01-02 12:28:30,closed,Don't resize window when capturing test images,"fixes #8525 
",3,1,['status: accepted']
1355,241194774,8523,3834332,2018-12-27 17:29:47,2018-12-27 18:35:40,closed,Property getter for Model.id,cc @mattpap this PR also fixes up the BokehJS package lock file,0,2,"['status: accepted', 'type: task', 'reso: completed']"
1356,241033862,8522,3834332,2018-12-26 20:41:34,2018-12-27 16:59:20,closed,Enable copy paste for datatables,"Use slickgrid external copy paste manager to add copy paste support for bokeh datatables.

- [x] issues: fixes #7762
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
1357,240701241,8520,3834332,2018-12-23 21:19:49,2018-12-28 22:03:25,closed,Set up CI with Azure Pipelines,,1,1,['status: declined']
1358,240565770,8518,3834332,2018-12-21 20:02:14,2019-06-22 21:45:37,closed,Replacement rules for Bokeh classes,"Use replacement rules in docs and docstrings to reference classes. Since the sphinx `rst_prolog` contains so many replacement rules now, I also separated it into its own file.

- [ ] issues: addresses #8448",14,3,['status: declined']
1359,240310742,8517,3834332,2018-12-20 21:45:22,2018-12-20 22:51:20,closed,Boilerplate for bokeh/server,"- [x] issues: addresses #8207 
- [x] tests added / passed

Adds boilerplate code to bokeh/server directory and its subdirectories.
",0,3,"['status: accepted', 'type: task', 'reso: completed']"
1360,240306058,8516,3834332,2018-12-20 21:24:50,2018-12-20 21:56:15,closed,move BokehJS license details to bokehjs/LICENSE,"Moves the declaration of vendored JS libraries to the `bokehjs/LICENSE` file, which makes more sense. 


cc @dwt FYI for your reference",0,1,"['tag: component: docs', 'status: accepted', 'type: task']"
1361,239694391,8514,3834332,2018-12-19 02:38:03,2018-12-20 19:09:29,closed,Boilerplate for Protocol,"- [x] issues: addresses #8207 
- [ ] tests added / passed

Adds boilerplate code to the bokeh/protocol directory and lightly modifies the bokeh/sampledata boilerplate",2,5,"['status: accepted', 'type: task', 'reso: completed']"
1362,239361019,8510,3834332,2018-12-18 04:24:39,2018-12-18 17:44:08,closed,monitor JS package license usage,"- [x] issues: fixes #8495
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @dwt @mattpap 
",3,1,['status: accepted']
1363,239251348,8509,3834332,2018-12-17 19:04:40,2018-12-18 17:36:18,closed,Feature/ws origin env variables,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8502
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

I made the choice to not override the default flag and just merge the environment value with the flag.

That's because IMO the cli flag should override environment variables, and the way it is right now, there's always at least a default flag so it would always override.

Other than that, the rest is pretty straightforward. Added few tests to cover the new environment variable and updated the  environment variable doc.",8,9,['status: accepted']
1364,238989130,8506,3834332,2018-12-16 20:44:53,2018-12-18 17:42:03,closed,Boilerplate for bokeh/plotting directory,"- [ ] issues: addresses #8207
- [x] tests added / passed

Adds boilerplate to the modules and tests under bokeh/bokeh/plotting and its subdirectories.
",2,5,"['status: accepted', 'type: task', 'reso: completed']"
1365,238985808,8505,3834332,2018-12-16 19:39:31,2018-12-16 20:23:16,closed,Boilerplate for bokeh/plotting,"- [ ] issues: addresses #8207
- [ ] tests added / passed

Adds boilerplate for bokeh/plotting directory and its subdirectories.",1,1,['status: declined']
1366,238786420,8504,3834332,2018-12-14 17:09:27,2018-12-26 17:40:45,closed,Enable copy paste from Datatable,"Add support for copy pasting data from datatables

Very simple implementation of copy pasting. Probably needs some more work and no unit tests with this commit, but hopefully gives a quick start to finalizing the rest. Fixes issue #7762.",18,18,['status: superseded']
1367,237707615,8494,3834332,2018-12-11 14:51:37,2018-12-11 15:39:19,closed,Disable show_vertices when PolyDrawTool inactive,"Straightforward fix the PolyDrawTool simply checks whether it is actually active before drawing vertices.

- [x] issues: fixes #8493
- [ ] tests added / passed
",0,1,['status: accepted']
1368,237372856,8492,3834332,2018-12-10 15:59:46,2018-12-11 15:40:00,closed,Fix typo 'range_rool' in range_tool.py,"This tiny commit fixes a typo in the range_tool.py example. It is my first pull request.
The contributing guidelines state that tests must be performed. I did not do any tests, because I only changed the name of one variable and made sure the code still runs fine.

- [x] issues: fixes #8491 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1369,236611130,8485,3834332,2018-12-06 17:27:05,2018-12-07 02:05:54,closed,update sampledata bucket URL,"This changes the S3 bucket to use one under the control of the Bokeh AWS account. 

I had hoped to make a new bucket, rename the old `bokeh_data` bucket , then change the new bucket name to `bokeh_data`, so that the URL would not be different. However, this is no longer possible. AWS has restricted the namespace for buckets, new bucket names may no longer contain underscores at all. 

I have not changed or deleted the old bucket, and have no plans to, but cannot guarantee it will exist in perpetuity.",3,2,"['status: accepted', 'type: task', 'reso: completed']"
1370,236082065,8481,3834332,2018-12-05 08:15:25,2018-12-05 16:22:51,closed,"DOC: remove extra ""to execute"" from embed","in the introductory paragraphs of [""Embedding Plots and Apps""](https://bokeh.pydata.org/en/latest/docs/user_guide/embed.html#embedding-plots-and-apps) on the distinction between bokeh apps and standallone HTML, IMHO the text reads better if ""to execute that execute"" is changed to just ""that execute"":

>These are Bokeh documents that are backed by a Bokeh Server. In addition to all the features of standalone documents, it is also possible to connect events and tools to real Python callbacks, ~to execute~ that execute in the Bokeh server.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1371,235059599,8477,3834332,2018-11-30 17:21:56,2018-11-30 18:34:29,closed,Upgrade to TypeScript 3.2,"fixes #8476 
",2,1,['status: accepted']
1372,234950060,8474,3834332,2018-11-30 11:01:49,2018-12-04 18:49:41,closed,fix for arrow annotation updating on property change,"This is a proposed fix to allow updating arrow annotations. However it is somewhat inelegant so I am also open to adjusting this if there is a better solution.

- [x] issues: fixes #7118

",3,2,['status: accepted']
1373,234849656,8472,3834332,2018-11-30 02:15:50,2018-12-06 21:59:07,closed,Boilerplates for bokeh/models,"- [x] issues: fixes #8401; partially addresses #8207 
- [ ] tests added / passed

Adds boilerplate for bokeh/models directory",4,16,"['status: accepted', 'type: task', 'reso: completed']"
1374,234687674,8470,3834332,2018-11-29 15:48:35,2018-12-06 17:48:17,closed,add method to retrieve sorted columns on DataTable in js,"This is a pull request to implement the feature request documented below.

- [x] issues: feature #8444 
- [ ] tests added / passed
Let me know if you want more.  Attaching compilation log, and a python script that tests the altered DataTable in js.
[build.log](https://github.com/bokeh/bokeh/files/2629793/build.log)

[test_sort_table.py.txt](https://github.com/bokeh/bokeh/files/2629797/test_sort_table.py.txt)

The above script will create a static page which if you then open you can test that we can indeed see which columns are sorted.  sort columns, then press the button. Note, the script will write files into the [bokeh]/tests directory.

Please let me know if the tests should be done differently.

- [ ] release document entry (if new feature or API change)
Adding a function 'get_sort_columns()' to the DataTable object

Thanks,
Justin",6,4,['status: accepted']
1375,234460385,8467,3834332,2018-11-28 23:34:09,2018-11-29 00:33:39,closed,set tootip text color explicitly,"- [x] issues: fixes #8459

<img width=""726"" alt=""screen shot 2018-11-28 at 15 32 59"" src=""https://user-images.githubusercontent.com/1078448/49189387-04848a00-f323-11e8-8dce-e642852a8472.png"">
",0,1,['status: accepted']
1376,234443230,8466,3834332,2018-11-28 22:18:38,2018-11-28 23:01:09,closed,Update lasso example documentation (#8393),"Updates documentation example of lasso selection to make it work
with bokeh version 1.0.1. Thank you @philippjfr for pointing to/adding solution.
Ref: https://github.com/bokeh/bokeh/issues/8393

Tested new example and produces expected figure:

<img width=""825"" alt=""screen shot 2018-11-28 at 11 03 36 pm"" src=""https://user-images.githubusercontent.com/7328852/49186026-afb53380-f363-11e8-931e-ac82f247840f.png"">

- [x] issues: fixes #8393 
",1,1,['status: accepted']
1377,234417626,8465,3834332,2018-11-28 20:43:32,2018-11-28 22:48:59,closed,Bryanv/8457 bkroot for embed,"- [x] issues: fixes #8457
- [x] tests added / passed

cc @mattpap I definitely think this is the appropriate immediate-term solution. If/when we can remove `bk-root` altogether, there will be no change from a user usage perspective. ",3,2,['status: accepted']
1378,234411403,8464,3834332,2018-11-28 20:20:29,2018-12-27 17:51:18,closed,textarea input widget,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #2828
- [x] tests added / passed (will follow up, not sure what the right thing is here)
- [ ] release document entry (if new feature or API change)
",22,7,['status: accepted']
1379,234206375,8462,3834332,2018-11-28 09:37:04,2018-11-28 09:49:48,closed,Update callback lasso example  #8393,"Fixes #8393. Updates interaction callback example (lasso select) in documentation to make it work with new version of bokeh (1.0.1). Thank you @philippjfr for pointing/adding solution. 
 Ref: https://github.com/bokeh/bokeh/issues/8393

- [X] issues: fixes #8393 

I tested example with bokeh 1.0.1 and it produced expected results:

<img width=""806"" alt=""screen shot 2018-11-28 at 10 24 35 am"" src=""https://user-images.githubusercontent.com/7328852/49142516-3ed93180-f2f9-11e8-8ebf-ccd82e396511.png"">

",4,1,['status: superseded']
1380,233977295,8461,3834332,2018-11-27 16:28:33,2018-11-29 14:18:47,closed,Don't include type when referencing an object,"addresses #8458 
",1,1,['status: declined']
1381,233742860,8460,3834332,2018-11-27 00:39:06,2018-11-27 02:57:57,closed,fix a typo,sr.data_source -> cr.data_source,6,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
1382,232802858,8453,3834332,2018-11-21 21:30:38,2018-11-22 13:48:59,closed,Documentation cleanup,"I'm glad Bokeh is really well documented, but there's a lot more documentation than I thought!

This fixes lots of typos and places where classes/code were referenced without using double backticks. A few docstring rewordings to make them ""verb first"" style. Some minor formatting fixes too.

Also fixed some formatting typos where `.. code-block::` was used with one colon instead of two. It would be nice if Sphinx/rst would error when that happens, instead of silently displaying nothing.

- [ ] issues: addresses #8448 
",4,2,['status: accepted']
1383,232073026,8452,3834332,2018-11-19 18:38:24,2018-11-19 19:26:30,closed,Run `npm install` when `node make *` on fresh install,fixes #8451 ,0,1,['status: accepted']
1384,232019194,8449,3834332,2018-11-19 15:44:29,2018-11-19 16:30:12,closed,Spelling and formatting fixes in docs,"Fixes various typo/spelling/formatting mistakes in the documentation. Other than fixing things as I read through, I mostly used a spellchecker to find mistakes, so there may be more I missed.

- [ ] issues: addresses #8448 
",3,1,['status: accepted']
1385,231680192,8445,3834332,2018-11-16 23:08:41,2019-05-07 08:45:03,closed,Add support for multiline axis labels,"![image](https://user-images.githubusercontent.com/27475/48651741-91167a80-e9fc-11e8-9d41-7de0c799c26b.png)

At this point align and baseline can be configured (overriding the heuristic), but label positioning will be wrong. It would be nice to fix this here, but this will conflict greatly with the layout PR, so I suppose I will do it later. Also, baseline isn't exactly correct in this setup and I will need to introduce vertical align instead.

fixes #8169",4,1,['status: declined']
1386,231322766,8440,3834332,2018-11-15 20:23:28,2018-11-19 10:09:15,closed,Add min/max radius dimensions,"Fixes: #626

This PR completes the functionality proposed in #626 which was partially addressed in commit ee8de73.

**Description:**
This PR adds two additional dimensions to radius_dimension, 'min' and 'max'

'min' dynamically selects either the x and y dimension off which to calculate the radius value, choosing whichever results in a smaller size, while 'max' does the same thing but chooses the maximum.",0,2,['status: accepted']
1387,231289947,8439,3834332,2018-11-15 18:20:18,2018-11-15 22:28:29,closed,Unify semicolon usage in TypeScript,"fixes #8438 
",0,4,['status: accepted']
1388,231100408,8435,3834332,2018-11-15 07:59:29,2018-11-19 10:06:53,closed,Fix text_align in table cell formatters,"The text_align attribute of table cell text's span is set but does not take effect because it does not fill the container width of table cell's div.  This trivial fix is in the base StringFormatter which also addresses NumberFormatter, allowing numeric columns/cells to be defined with proper right-alignment.
- [x] issues: fixes #5721
",1,3,['status: accepted']
1389,231022908,8434,3834332,2018-11-14 23:54:20,2019-04-13 02:17:52,closed,Clean up .gitignore files,"My goal is to have `.gitignore` files reduced to the bare minimum. Anything that's not project related (so e.g. editor/IDE temporary files) should be configured locally by the user. All entries (or groups of entries) must have an annotation why we ignore or what generate those (a good example is `.cache/`). If entries are specific to a subdirectory, they should be moved to a specific `.gitignore` file.

fixes #8433 ",7,2,['status: accepted']
1390,230910650,8431,3834332,2018-11-14 17:00:35,2018-11-14 18:23:49,closed,Allow newer versions of nodejs,"fixes #8418
",0,2,['status: accepted']
1391,230858540,8429,3834332,2018-11-14 14:39:12,2018-11-14 16:57:32,closed,Fix gridplot example with pie charts in BokehJS docs,"Call to gridplot needs a nested list as argument. Should fix #8428.
",0,1,['status: accepted']
1392,230743329,8427,3834332,2018-11-14 08:06:38,2018-11-14 10:34:07,closed,Update server.rst: wrong apache module name,"In section about Apache reverse proxy there was a wrong module name: `http_proxy` changed to `proxy_http`.


- [x] issues: fixes #8425 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
1393,230133161,8422,3834332,2018-11-12 13:24:54,2018-11-29 19:46:46,closed,Transform Pandas Columns CategoricalIndex in list,"#8420
pandas-dev/pandas#19136

- [x] issues: fixes #8420
- [x] tests added / passed
",1,3,['status: accepted']
1394,229914306,8419,3834332,2018-11-10 21:25:22,2018-11-13 07:41:58,closed,Skip rendering legend glyph for empty scatter,"This skips rendering the legend glyph entry if the scatter glyph is empty. Alternatively we could simply default to a circle but that may be misleading and the legend does update if you subsequently set or stream data to the scatter.

Here is an image of a plot with two scatter glyphs each with empty data:

![screen shot 2018-11-10 at 9 23 22 pm](https://user-images.githubusercontent.com/1550771/48306279-ef3feb00-e52e-11e8-847a-8031c09e670c.png)

and then I set some data:

![screen shot 2018-11-10 at 9 23 30 pm](https://user-images.githubusercontent.com/1550771/48306320-f535cc00-e52e-11e8-8503-0dd538618b62.png)

Not sure what the best way is to test actual rendering of plots.

- [x] issues: fixes #8395
- [ ] tests added / passed
",0,1,['status: accepted']
1395,229906172,8416,3834332,2018-11-10 18:44:17,2018-11-10 19:33:30,closed,Maintain dict type in components(),fixes #8415 ,0,2,['status: accepted']
1396,229880893,8414,3834332,2018-11-10 09:40:12,2018-11-10 18:31:49,closed,Upgrade TypeScript to version 3.1,"fixes #8413 
",0,3,['status: accepted']
1397,229871119,8412,3834332,2018-11-10 05:10:30,2018-11-12 17:35:17,closed,Add support for setting the DataTable row height,"This adds a parameter row_height to DataTable which defaults to 25 matching the current behavior.

- [ ] issues: fixes #8411
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I have not added any tests for this since I'm not sure what to test.  I've seen the existing [integration tests for DataTable](https://github.com/bokeh/bokeh/blob/master/tests/integration/widgets/tables/test_data_table.py) but I'm not sure how to test this.  I'm open to suggestions on testing.

",3,3,['status: accepted']
1398,229304474,8410,3834332,2018-11-08 09:48:21,2018-11-09 13:13:44,closed,fixed typo in io.export.create_webdriver docs,"- [x] issues: fixes #8409
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
1399,229186951,8407,3834332,2018-11-07 22:17:45,2018-11-09 13:14:21,closed,Omit colon in hover tooltips if label is empty,"- [x] issues: fixes #8399 
- [ ] ~~tests added / passed~~
- [ ] ~~release document entry (if new feature or API change)~~
",0,2,['status: accepted']
1400,228952271,8406,3834332,2018-11-07 08:37:31,2018-11-07 15:05:44,closed,Fix failing codebase tests,"fixes #8405 
",0,1,['status: accepted']
1401,228774962,8404,3834332,2018-11-06 17:32:13,2018-11-07 15:06:54,closed,Update boilerplate for bokeh/io,"Updates the close to complete boilerplate for bokeh/io

- [x] issues: partially addresses #8207 
- [x] tests added / passed
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
1402,228483237,8398,3834332,2018-11-05 20:36:35,2018-11-07 08:40:10,closed,Fix typo and grammar mistakes,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,3,"['type: bug', 'status: accepted', 'reso: completed']"
1403,228140148,8396,3834332,2018-11-03 20:41:57,2018-11-05 23:00:32,closed,Fix small typo  [ci skip],,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1404,227438544,8389,3834332,2018-10-31 20:54:30,2018-10-31 21:25:20,closed,add dry run and more careful package*.json updates,"- [x] issues: fixes #8388

Adds `--dry-run` and more careful updates for `package*.json` files. New output of ry run:

```
(base) ❯ python deploy.py 1.0.1 --dry-run

================================================================================
            You are starting a Bokeh release deployment for '1.0.1'
================================================================================

!!! Running pre-checks for release deploy

[PASS] Running Python 3.x
[PASS] Command 'git' is available
[PASS] Git config user.email 'bryanv@anaconda.com' found in MAINTAINERS file
[SKIP] Skipping repo and checkout checks for dry run
[PASS] New version '1.0.1' is a valid Bokeh version (FULL RELEASE)
[PASS] New version '1.0.1' does not already have a tag
[PASS] Detected valid last dev/rc/full version '1.0.0'
[PASS] Detected valid last full release version '1.0.0'
[PASS] New version '1.0.1' is newer than last version '1.0.0'
[PASS] Release branch 'release_1.0.1' does not already exist
[PASS] Issue labels are BEP-1 compliant

!!! All pre-checks have passed

Would you like to continue to file modifications? (y/n): y

--------------------------------------------------------------------------------

[PASS] Checked out release branch 'release_1.0.1'
[PASS] Updated version from '1.0.0' to '1.0.1' in file 'bokehjs/src/lib/version.ts'
[PASS] Committed file 'bokehjs/src/lib/version.ts'
[PASS] Updated version from '1.0.0' to '1.0.1' in file 'bokehjs/package.json'
[PASS] Committed file 'bokehjs/package.json'
[PASS] Updated version from '1.0.0' to '1.0.1' in file 'bokehjs/package-lock.json'
[PASS] Committed file 'bokehjs/package-lock.json'
[PASS] Appended version '1.0.1' to 'sphinx/source/all_versions.txt'
[PASS] Committed file 'sphinx/source/all_versions.txt'
[PASS] Updated CHANGELOG with new closed issues
[PASS] Committed file '/Users/bryanv/work/bokeh/CHANGELOG'

!!! Here is a diff of the changes made on the release branch:

    diff --git a/CHANGELOG b/CHANGELOG
    index 52dab9e6d..0838c8955 100644
    --- a/CHANGELOG
    +++ b/CHANGELOG
    @@ -1,3 +1,16 @@
    +2018-10-31    1.0.1:
    +--------------------
    +  * bugfixes:
    +    - #4096 Bokeh server: color palette rgb is not recognized
    +    - #8356 [component: bokehjs] Datatable crashes layout if 'field' is key in columndatasource data
    +    - #8362 Combination of ""export_png()"" and ""show()"" causes error
    +    - #8374 [regression] Garbage collection of export_png()
    +    - #8375 [component: bokehjs] Ellipse and datetime axis
    +  * tasks:
    +    - #8367 [component: server] Documentlifecyclehandler should catch exception and clean up callbacks
    +    - #8369 [component: examples] Histogram example should take edges as argument to make_plot
    +    - #8387 [component: docs] Bryanv/101 misc docs
    +
     2018-10-24    1.0.0:
     --------------------
       * bugfixes:
    diff --git a/bokehjs/package-lock.json b/bokehjs/package-lock.json
    index 5b810e71b..4b5168155 100644
    --- a/bokehjs/package-lock.json
    +++ b/bokehjs/package-lock.json
    @@ -1,6 +1,6 @@
     {
       ""name"": ""bokehjs"",
    -  ""version"": ""1.0.0"",
    +  ""version"": ""1.0.1"",
       ""lockfileVersion"": 1,
       ""requires"": true,
       ""dependencies"": {
    diff --git a/bokehjs/package.json b/bokehjs/package.json
    index 08a0e1e02..d660fd95b 100644
    --- a/bokehjs/package.json
    +++ b/bokehjs/package.json
    @@ -1,6 +1,6 @@
     {
       ""name"": ""bokehjs"",
    -  ""version"": ""1.0.0"",
    +  ""version"": ""1.0.1"",
       ""description"": ""Interactive, novel data visualization"",
       ""keywords"": [
         ""bokeh"",
    diff --git a/bokehjs/src/lib/version.ts b/bokehjs/src/lib/version.ts
    index 4a62e4562..2b87e3c39 100644
    --- a/bokehjs/src/lib/version.ts
    +++ b/bokehjs/src/lib/version.ts
    @@ -1 +1 @@
    -export const version = '1.0.0'
    +export const version = '1.0.1'
    diff --git a/sphinx/source/all_versions.txt b/sphinx/source/all_versions.txt
    index 96d246331..82aa8a42a 100644
    --- a/sphinx/source/all_versions.txt
    +++ b/sphinx/source/all_versions.txt
    @@ -4,3 +4,4 @@
     0.12.16
     0.13.0
     1.0.0
    +1.0.1


================================================================================
    Bokeh '1.0.1' release deployment: DRY RUN (local checkout may be dirty)
================================================================================
```
",0,1,['status: accepted']
1405,227408440,8387,3834332,2018-10-31 19:07:20,2018-10-31 19:40:53,closed,Bryanv/101 misc docs,"
",0,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1406,227159154,8386,3834332,2018-10-31 04:53:22,2018-10-31 15:44:39,closed,Bryanv/8362 new temp doc for export,"- [x] issues: fixes #xxxx
- [x] tests added / passed

This is a simpler PR for #8362 that forces all export functions to set `aways_new=True` when generating their file output. This alleviates the problem of exporting a child of some layout before showing the layout causing a ""multiple document"" error, but does no change any semantics of `OutputDocumentFor` (not even just by expanding acceptable usage) and does not cause a costly references traversal. ",1,2,['status: accepted']
1407,227019750,8385,3834332,2018-10-30 17:44:56,2018-12-27 17:04:09,closed,Add figure's plot id in DOM structure as well,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8384
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,1,['status: accepted']
1408,227009121,8383,3834332,2018-10-30 17:13:30,2018-12-27 16:32:27,closed,Attempt to enable downstream tests for holoviews,"Just seeing if I can get this working at first.

- [x] tests added / passed
",14,9,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1409,226828825,8381,3834332,2018-10-30 08:22:06,2018-12-05 03:05:07,closed,Bokeh export csv example now discovers column heading names,"Export csv now discovers column heading names in data table before downloading csv file.

@jni went to some effort to work out how we could do this for datatables with arbitrary numbers of columns and column headings. It's a very neat solution.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8379
- [ ] tests added / passed (not necessary, no new functionality added)
- [ ] release document entry (not necessary, not a new feature)
",8,9,['status: accepted']
1410,226702606,8378,3834332,2018-10-29 20:28:57,2018-10-31 04:26:49,closed,Allow OutputDocumentFor to handle children with docs,"- [x] issues: fixes #8362
- [x] tests added / passed

Adds `_compute_current_docs` to private API of `bokeh.embed.utils`  and puts entire private API of `bokeh.embed.utils` under unit test (no tests previously):
```
def _compute_current_docs(objs):
    docs = set()
    for obj in objs:
        docs.add(obj.document)
        for ref in obj.references():
            docs.add(ref.document)
    return docs
```
The material change is to use this to compute the set of all currently used docs in a collection of models, ***including descending into references***. Previously, only the roots were considered, and `OutputDocumentFor`  did not descend into references. If a child models had any document different than the roots, an error would be triggered, e.g #8362 Now, if there are any children models with documents set, the behavior will work the same as when roots had documents set. 


### Acceptable change argument:

This PR fixes #8362 by allowing the dev API context manager `OutputDocumentFor` to correctly handle cases where children models have different models that documents roots (specifically a case where a child model has a document, but its root parents have None). Prior to this PR, this situation was **explicitly** an error condition (a test maintained that an error occurred). This change is deemed acceptable, because this PR only *relaxes the condition*, i.e. all previous situations that worked, are still handled exactly as before with no change, but new acceptable cases (which *should* be acceptable) are also now possible. 

In practice, almost no users will use `OutputDocumentFor` directly, and of those very few, arguably any that do would expect the behavor in this PR. That is, we can imagine no possible scenario in which anyone would rely on `OutputDocumentFor` failing as did previously in these cases. The practical outcome is simply that cases that currently fail, that should succeed (i.e. #8363), will now succeed. 

Additionally, defensive code was added to the private function `_unset_temp_theme`. Specifically, it is now idempotent. Previously it would fall over if called repeatedly, or called on a document that had not previously been acted on by `_create_temp_doc`. This restriction seems unnecessary, and as the function is private, any change is acceptable. 

---

cc @bokeh/core re: ""change argument"" Given that fixing bugs is by definition changing *some* behaviour, it can sometimes become a bit of a judgment call on our part about whether fixing a bug breaks the promise of API stability. In cases like this where there is any question at all, I'd like to document justifications and expected impact, such as the above in the PR. In this specific instance I would regard not-handling children in `OutputDocumentFor` to be *bug* since there is no good reason not to, and since simple things users expect to be able to do are broken by it. (But I would like to hear any other thoughts, or other ideas to fix)

",5,3,['status: declined']
1411,226396366,8377,3834332,2018-10-28 20:49:13,2018-10-28 21:33:36,closed,pass _angle value when rendering legends for EllipseOval,"- [x] issues: fixes #8375

Not sure how we can currently test this effectively, absent view-models, but open to suggestion. Otherwise I'd like to embark on a plan of moving view logic into testable view models in 2019. 
",0,1,['status: accepted']
1412,226374722,8376,3834332,2018-10-28 15:23:23,2018-10-28 20:32:26,closed,Always kill phantomjs at process exit,"fixes #8374 
",1,1,['status: accepted']
1413,226308773,8373,3834332,2018-10-27 17:10:10,2018-10-29 18:22:10,closed,minor dataspec cleanup,"- [x] issues: fixes #8356
- [x] tests added / passed

Much more modest PR. Makes the simple one line change to fix the linked issue:

<img width=""641"" alt=""screen shot 2018-10-27 at 10 08 12"" src=""https://user-images.githubusercontent.com/1078448/47607087-58bce700-d9d0-11e8-895b-4247f427c1de.png"">

and also adds a unit test to explicitly check that `{field: ""field""}` works.

Also cherry picks a few of the smaller cleanup commits from the other PR just so that they are done/out of the way for later. 
",5,11,['status: accepted']
1414,226294795,8372,3834332,2018-10-27 13:36:09,2018-12-18 20:34:20,closed,Extended BAD_COLUMN_NAME error ,"Extended BAD_COLUMN_NAME error to include suggestions and 
show key that caused error.



",10,3,"['status: accepted', 'type: task', 'reso: completed']"
1415,226261559,8371,3834332,2018-10-27 01:50:41,2018-10-27 16:05:09,closed,Color property now accepts css rgb(a) strings,"Fairly heavy-weight regex that allows the Color property to accept rgb(a) strings like:

```python
'rgb(10, 20, 30)'
'rgba(10, 20, 30, 1)'
'rgba(10, 20, 30, 0.5)'
```

Includes checks for bounds of both RGB and A values. Fixes the bug I observed in #4096, https://github.com/ioam/holoviews/issues/2777 and https://github.com/ioam/holoviews/issues/3107.

Would of course be happy to replace it with something simpler, e.g. a combined regex:

```
rgba?\(((25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*,\s*?){2}(25[0-5]|2[0-4]\d|1\d{1,2}|\d\d?)\s*,?\s*([01]\.?\d*?)?\)
```

but that would not error on ``rgba(0, 0, 0)`` and ``rgb(0, 0, 0, 0.5)``, but apparently even github renders those correctly, so maybe that's not an issue.

- [x] issues: fixes #4096
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
1416,226238844,8370,3834332,2018-10-26 22:09:08,2018-10-27 16:14:19,closed,Make BokehJS prop.spec Private,"- [x] issues: fixes #8356
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR addresses #8356, however after a brief closer look it became evident that with a little more work than the one-line fix, some serious tech debt around BokehJS properties could be paid down. 

This PR:

* makes the `spec` field on `Property` be private, i.e. `prop._spec`
* restricts all direct access to `_spec` to inside `properties.ts`
* ensures that only actual ""DataSpec"" properties (i.e. only those with `prop.dataspec = True`) have a `._spec` present
* some cosmetic variable renames to aid with confirming `spec` not used outside `properties.ts`

Some new methods provide uniform access to the fields inside `_spec`. These first four only work on DataSpec properties and will raise an error on non-dataspecs:

* `get_expr()` -- access a dataspec expression
* `get_field()` -- access a dataspec field
* `get_transform()` -- access a dataspec transform
* `array(...)` -- return CDS array for field (unchanged from existing)

These last two work uniformly on any property dataspec or nor:

* `value_optional()` -- return undefined if no value set
* `value()` -- raise error if no value set (unchanged from existing)

I don't think the naming is ideal, but `transform` already refers to the ""intrinsic"" transform a property can have, and I do not want to rename `value` to `get_value` e.g. because that breaks compatibility on something that might possibly reasonably be used by users [1]

This PR is currently WIP. further tasks:

* [ ] release notes
* [ ] more tests (explicit test for #8356 and others)
* [ ] convert test to TS

---

[1] Note that this is a ""breaking"" change to BokehJS, but does not contravene the ***Specific Commitment for BokehJS*** made in the announcement (all existing CustomJS examples and BokehJS models and properties  and events will stay compatible) Direct usage of `.spec` is not something we can reasonably support (and I have no reason to believe *anyone* has tried to use this)

cc @bokeh/core ",3,15,['status: declined']
1417,226189601,8368,3834332,2018-10-26 18:37:51,2018-10-28 21:46:49,closed,Improved handling of DocumentLifeCycleHandler callbacks,"Handles exceptions in Document.on_session_destroyed callbacks and discards them once they have been processed.

- [x] issues: fixes #8367
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",16,6,['status: accepted']
1418,225893806,8363,3834332,2018-10-25 20:30:51,2018-10-26 15:57:06,closed,Fixing autohide pan and wheel stutter,"- [x] issues: partially #8332 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

![pan_works](https://user-images.githubusercontent.com/4806877/47528486-5133fb80-d873-11e8-88cb-8a963f5965cf.gif)

```python
from bokeh.plotting import figure, show, output_file

output_file(""test0.html"")

p = figure(plot_width=300, plot_height=300)
p.scatter([1, 2, 3], [1, 2, 3])

p.toolbar.autohide = True

show(p)
```",8,3,['status: accepted']
1419,224824134,8353,3834332,2018-10-22 21:43:33,2018-10-31 16:47:42,closed,Boilerplate for bokeh/embed,"- [x] issues: addresses part of #8207 
- [x] tests added / passed

Adds boilerplate for bokeh/embed",1,4,['status: accepted']
1420,224733310,8352,3834332,2018-10-22 16:17:10,2018-10-23 17:35:14,closed,Bryanv/misc docs 1.0,"MIsc docs and examples
",0,22,['status: accepted']
1421,224493064,8350,3834332,2018-10-20 18:38:10,2018-10-20 22:57:07,closed,Initial boilerplate for bokeh/document,"- [x] issues: Partially addresses #8207 
- [x] tests added / passed

Adds boilerplate for bokeh/document",0,2,['status: accepted']
1422,224395118,8349,3834332,2018-10-19 20:00:03,2018-10-19 22:21:47,closed,Bryanv/8348 better glyph source msg,"
- [x] issues: fixes #8348
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @syhooper @jbednar @philippjfr 

Note one small thing, if a literal is passed fo the convenience param `""color""` then the error expands that and lists the actual property names instead:

> Expected y, fill_color and line_color to reference fields in the supplied data source.

I don't think that could be improved without adding a fair amount of complexity. ",0,3,['status: accepted']
1423,224144780,8345,3834332,2018-10-19 01:21:17,2018-10-19 15:12:48,closed,Chaco link is a 404 - changed to git repo URL ,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8344
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1424,224066446,8343,3834332,2018-10-18 19:09:07,2018-12-27 06:28:06,closed,Add log1p option to LogScale,"Add option to `LogScale` to use `math.log1p` for situations where there is a zero value. Ex. A histogram with empty bins.

- [x] issues: fixes #6536
- [ ] tests added / passed
- [x] documentation added

![image](https://user-images.githubusercontent.com/7515105/47177867-46132580-d2df-11e8-8e14-8f26c0875291.png)
",1,6,['status: declined']
1425,223782936,8341,3834332,2018-10-17 23:26:53,2018-10-18 21:50:46,closed,Boilerplate for bokeh/core,"- [ ] issues: fixes #8207 
- [x] tests added / passed

Adds the boilerplate code to bokeh/core and all subdirectories.
",2,8,"['status: accepted', 'type: task', 'reso: completed']"
1426,223736356,8340,3834332,2018-10-17 20:04:37,2018-10-18 23:04:06,closed,[WIP] MultiPolygons with holes,"Adding a new MultiPolygons glyph as outlined here https://github.com/bokeh/bokeh/wiki/Polygons-Patches-with-Holes#new-glyph. 

- [x] issues: fixes #2321
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

![multipolygons_hover](https://user-images.githubusercontent.com/4806877/47113068-0b00eb80-d226-11e8-9f6f-04ac2b2d851a.gif)


Example:
```html
<!doctype html>
<html lang=""en"">
<head>
<meta charset=""utf-8"">
<title>Complete Example</title>
<link rel=""stylesheet"" href=""./bokehjs/build/css/bokeh.css"" type=""text/css"" />
<script type=""text/javascript"" src=""./bokehjs/build/js/bokeh.js""></script>
<script type=""text/javascript"" src=""./bokehjs/build/js/bokeh-api.js""></script>
<!-- The order of CSS and JS imports above is important. -->
</head>

<body>
<div>
<script type=""text/javascript"">

var source = new Bokeh.ColumnDataSource({
    data: {
        //  i is one multipolygon
        //  j is one polygon
        //  k is either an exterior ring (0) or interior ring/hole (1:n)
        xs: [
            [ [ [1, 1, 2, 2]                             ]                    ],
            [ [ [1, 1, 3],    [1.5, 1.5, 2]              ]                    ],
            [ [ [2, 2, 4, 4], [2.5, 2.5, 3], [3.5, 3, 3] ], [ [3.5, 3.5, 4] ] ]
        ],
        ys:
            [
                [                       // multipolygon 0
                    [                   // polygon 0
                        [4, 3, 3, 4]    // exterior
                    ],
                ],
                [                       // multipolygon 1
                    [                   // polygon 0
                        [1, 3, 1],      // exterior
                        [1.5, 2, 1.5]   // hole 0
                    ],
                ],
                [                       // multipolygon 2
                    [                   // polygon 0
                        [2, 4, 4, 2],   // exterior
                        [3, 3.5, 3.5],  // hole 0
                        [2.5, 2.5, 3]   // hole 1
                    ],
                    [                   // polygon 1
                        [1, 1.5, 1.5]   // exterior
                    ]
            ]
        ]
    }
});

var plot = Bokeh.Plotting.figure({title:'New Glyph - MultiPolygons with Holes', height: 300, width: 300, tools: 'hover'});
var patchData = plot.multi_polygons(
    { field: ""xs"" },
    { field: ""ys"" },
    { source: source, fill_color:['red', 'limegreen', 'goldenrod']}
);

Bokeh.Plotting.show(plot, document.currentScript.parentElement);

</script>
</div>
</body>
</html>
```
",7,12,['status: accepted']
1427,223726597,8339,3834332,2018-10-17 19:29:24,2018-10-18 03:13:39,closed,Update Examples for 1.0,"- [x] issues: fixes #8319

OK there is a bit more I want to do with some catgorical docs/examples but will do that in a dedicated PR.

FYI this PR removes some very old examples that I don't think are helpful any longer:


* *app/pivot*: This large example was unfocused and unmaintained and has been
  removed
* *embed/simple*: Old example removed
* *howto/us_marriages_divorces*: Redundant notebook removed, script moved
  to *plotting/file/us_marriages_divorces_hover.py*
* *models/file/colorspec.py* Old example removed
* *models/file/external_resources.py* Moved to *latex_extension.py*
* *models/file/glyph1.py* Moved to *basic_plot.py*
* *models/file/grid.py* Old example removed
* *models/file/line.py* Old example removed
* *models/file/transform_jitter_coffee.py* Discouraged coffeescript example removed
* *plotting/file/bar_chart.py* Removed old/duplicative example
* *plotting/file/brewer.py*: Moved to *stacked_area.py*
* *plotting/file/bollinger.py* Old example removed",1,63,['status: accepted']
1428,223300837,8336,3834332,2018-10-16 15:41:55,2018-10-16 17:36:12,closed,Allow loading cached compiled models using hook,"Simplified implementation for loading cached compiled models until we settle on a public API. Works by allowing users to set a cache hook which should return the compiled code given the uncompiled implementation. Offers public methods to get and set this hook, available as:

```
bokeh.util.compiler.get_cache_hook
bokeh.util.compiler.set_cache_hook
```

Also splits the compilation code a bit so that it is easier for an external library to pre-compile a model and load it in the cache hook it registers.

- [x] issues: fixes #5345
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,6,['status: accepted']
1429,223293220,8335,3834332,2018-10-16 15:21:09,2018-10-16 17:15:52,closed,correct spatial index MBB for box glyphs,"- [ ] issues: fixes #8334

new result:

<img width=""520"" alt=""screen shot 2018-10-16 at 08 20 06"" src=""https://user-images.githubusercontent.com/1078448/47027488-634bc680-d11c-11e8-8b06-1071b3536983.png"">

",0,1,['status: accepted']
1430,223037466,8333,3834332,2018-10-15 20:45:32,2018-10-16 17:31:50,closed,Initial implementation of loading compiled CustomModel implementation from files,"This PR adds a new subclass of ``Implementation`` which allows loading a pre-compiled CustomModel implementation from file. The ``Compiled`` implementation takes two arguments, a path or dictionary containing the compiled code in a JSON format, and the original uncompiled ``Implementation``. The code then checks whether the ``hash`` stored inside the compiled JSON matches the hash of the uncompiled code. If the hashes do not match a warning is raised which will suggest the code needs to be recompiled.

Currently the code can be recompiled using the ``compile_models`` method and then saved out to a json file manually, however I'd be happy to add convenience functions around this and even a ``bokeh compile`` entrypoint if that is desirable.

In practice it looks something like this:

```python
class VegaPlot(LayoutDOM):
    """"""
    A Bokeh model that wraps around a Vega plot and renders it inside
    a Bokeh plot.
    """"""

    __implementation__ = Compiled(os.path.join(os.path.dirname(__file__), 'compiled', 'panel_vega_VegaPlot.json'),
                                  os.path.join(os.path.dirname(__file__), 'models', 'vega.ts'))
```

and I've used the following code to generate the compiled JSON:

```python
for k, v in compile_models([VegaPlot]).items():
    with open(os.path.join('../../panel/compiled/', k.replace('.', '_')+'.json'), 'w') as f:
        json.dump(v, f)
```

I have also not fully worked out how the bokeh version comes into it. It would be a shame if the compiled code is only useable with a very specific version of bokeh.

- [x] issues: fixes #5345
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,2,['status: superseded']
1431,222872058,8331,3834332,2018-10-15 11:28:41,2018-10-15 19:28:42,closed,embed_multiple: better arrangement,"#8319 

> embed_multiple: better arrangement",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1432,222745206,8330,3834332,2018-10-14 21:43:31,2018-10-14 23:28:09,closed,replace log.warn with log.warning,Noticed in test output that `log.warn` is deprecated. This PR replaces all instances with `log.warning` as indicated. ,0,1,"['status: accepted', 'type: task', 'reso: completed']"
1433,222734722,8329,3834332,2018-10-14 18:43:09,2018-10-15 00:46:11,closed,add webdriver_control and default to reuse,"Adds a module level object  to control and manage webdriver creation, defaults to re-using selenium webdrivers. 

- [x] tests added / passed
",1,2,"['type: feature', 'status: accepted', 'reso: completed']"
1434,222730025,8328,3834332,2018-10-14 17:26:36,2018-10-16 01:04:18,closed,Simple hdf5 example improvement,"#8319

> simple_hdf5: install h5py with test deps, make more interesting/attractive, auto generate data

I had h5py to examples dependencies instead of tests
I tried to make the example more intersting using a MultiSelect widget and a multi_line glyph
The auto generate data are done by importing create_hdf5.py, not sure if it's the more pythonic way",3,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1435,222686051,8327,3834332,2018-10-14 01:06:28,2018-10-14 03:06:22,closed,load themes from python modules instead of json files,"This PR moves the YAML theme definitions into strings in python modules, rather than external files. This is to support better integration with ""freeze"" tools like cx_freeze and pyinstaller. As a side effect it probably shaves a small amount off general import times 

This PR also pins sphinx to 1.7 as it was noticed 1.8 results in broken static image links. ",1,4,"['status: accepted', 'type: task', 'reso: completed']"
1436,222663041,8326,3834332,2018-10-13 17:16:10,2018-10-13 21:41:06,closed,"population example legend position -> ""bottom_right""","#8319

> populatation: legend position bad
",7,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1437,222662408,8325,3834332,2018-10-13 17:04:13,2018-10-13 18:00:43,closed,Correction selection histogram example,"#8319

> selection_histogram: needs update for selection changes",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1438,222660689,8324,3834332,2018-10-13 16:35:32,2018-10-14 00:02:47,closed,Compat: Get correct env when freezing with cx_Freeze,"Fixes #8323

",8,3,['status: accepted']
1439,222659168,8322,3834332,2018-10-13 16:08:37,2018-10-13 17:05:26,closed,Pandas warning removed in Gapminder example,"#8319 :

> gapminder: has pandas deprecation issues
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1440,222571241,8321,3834332,2018-10-12 19:59:23,2018-10-13 03:05:25,closed,Add adapter property to AjaxDataSource,This small PR adds an `adapter` property to `AjaxDataSource` that accepts a `customJS` that will convert any arbitrary JSON response into Bokeh CDS data format. The `ajax_source.py` is updated and simplified to demonstrate this new fearture. ,1,3,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples', 'tag: component: bokehjs']"
1441,222136931,8318,3834332,2018-10-11 13:24:56,2018-10-15 18:47:11,closed,Autohide toolbar,"- [x] issues: fixes #8284
- [x] tests added / passed - need help
- [x] release document entry (if new feature or API change)

### Demo
![autohide](https://user-images.githubusercontent.com/4806877/46807176-56ebf600-cd37-11e8-8617-df58115901b0.gif)

### To see it working - if you have built the js for this branch:

```html
<!doctype html>
<html lang=""en"">
<head>
<meta charset=""utf-8"">
<title>Complete Example</title>
<link rel=""stylesheet"" href=""./bokehjs/build/css/bokeh.min.css"" type=""text/css"" />
<script type=""text/javascript"" src=""./bokehjs/build/js/bokeh.min.js""></script>
<script type=""text/javascript"" src=""./bokehjs/build/js/bokeh-api.min.js""></script>
<!-- The order of CSS and JS imports above is important. -->
</head>

<body>

<div>
<script type=""text/javascript"">

// arrays to hold data
var source = new Bokeh.ColumnDataSource({
    data: { x: [1,2,3,4], y: [0,5,7,2] }
});

// make the plot and add some tools
var tools = ""pan,crosshair,wheel_zoom,box_zoom,reset,save"";

var plot = Bokeh.Plotting.figure({title:'Example of Random data', tools: tools, height: 300, width: 300});

plot.toolbar.autohide = true;

var scatterData = plot.line({ field: ""x"" }, { field: ""y"" }, {
    source: source,
    line_width: 2
});

// Show the plot, appending it to the end of the current
// section of the document we are in.
Bokeh.Plotting.show(plot,document.currentScript.parentElement);

</script>
</div>
</body>
</html>",50,17,['status: accepted']
1442,222117959,8317,3834332,2018-10-11 12:24:30,2018-10-11 19:19:11,closed,Only deduplicate some tool types,"Bokeh helpfully supports the option of deduplicating tools in a layout by creating tool proxies for any tool type that is added more than once. This is appropriate for tool types such as pan/zoom/save/help etc. but not for others such as the drawing tools.

For now this PR explicitly skips multi-gesture tools which is the ``event_type`` used by the drawing tools and ``CustomAction`` tools. This may not be the best approach and/or may not cover all the tool types that should be skipped during deduplication. 

I don't think you will generally want multiple navigation tools (BoxZoomTool, PanTool, WheelZoomTool, WheelPanTool, ZoomInTool), select tools (BoxSelectTool, LassoSelectTool, PolySelectTool , TapTool), inspection tools (HoverTool, CrosshairTool), or action tools (SaveTool, UndoTool, RedoTool, ResetTool). The only other tool I can imagine wanting multiple entries for is the ``CustomActionTool`` since each instance can trigger a different action and can have a different tooltip and icon.

Therefore the current check I'm doing to skip deduplication is ``(event_type == 'multi' || tool_type == ""CustomAction"")``. If someone can suggest a more principled way of determining which tools not to deduplicate I'd be happy to hear it.

- [x] issues: fixes #8074
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,4,['status: accepted']
1443,221504453,8313,3834332,2018-10-09 16:24:03,2018-10-10 18:32:46,closed,Boilerplate for bokeh/command,"- [ ] issues: addresses part of #8207 
- [ ] tests added / passed

Adding/updating boilerplate in files under bokeh/command directory",4,6,['status: accepted']
1444,221444425,8312,3834332,2018-10-09 13:42:27,2018-10-09 18:00:23,closed,update from_networkx for fixed layout,"- [x] issues: fixes #8311
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,3,['status: accepted']
1445,221240400,8310,3834332,2018-10-08 20:54:45,2018-10-11 17:21:44,closed,DataTable data model fixes,"- [x] issues: fixes #7116
- [x] issues: fixes #7417
- [x] issues: fixes #8021
- [x] issues: fixes #8201 
- [x] issues: fixes #8040
- [x] tests added / passed

This PR cleans up the data model around DataTables:

* data updates, including patch and stream, do not result in an unnecessary full update back to the server
* as a collateral result, DataTables do not now try to send back Typed Arrays, in particular
* cell editors use an efficient patch call to update underlying table date sources

   *UPDATE: for now, also set `.data` to goose update msg back to server*
* updating the grid always re-sorts the columns according to the latest sort
* filtered data sources are handled correctly by cell editors
* selenium tests are added

Things that are now under test:

* #7116

    test_server_source_patch_does_not_duplicate_data_update_event
    test_server_source_stream_does_not_duplicate_data_update_event
    test_server_source_update_does_not_duplicate_data_update_event
    test_server_edit_does_not_duplicate_data_update_event

* #8021 

    test_glyph_selection_updates_table

* #8201

    test_server_sorted_after_data_update

* general DataTable tests:

    test_server_basic_selection 
    test_server_basic_mulitselection 
    test_server_source_updated_after_edit
    test_server_source_callback_triggered_after_edit 

These tests about auto-maintaing sorting (#8201) are present but skipped (they work on all browsers I have tried locally but somer magic incantation is missing to have them work properly on selenium):

test_server_sorted_after_patch
test_server_sorted_after_stream 
test_server_sorted_after_edit

## Future work:

in order to make sure edits propogate changes and change events to the server, `setField` currently does a `source.data = data` type operation after the patch. A much bette thing would be to send a real patch event back to the server. That is better left to a separate PR, but the tests put in place for this PR should/must continue to work unchanged, which will help when that work is done. 

**UPDATE** this was also done

cc @mattpap 
",10,11,['status: accepted']
1446,220838405,8309,3834332,2018-10-05 22:21:40,2018-10-05 23:42:48,closed,Bryanv/reduce import code,"This PR claims some low hanging fruit for reducing Bokeh import times:

* Don't use `PackageLoader` for loading Bokeh Jinja templates (required `pkg_resources` import is very expensive)

* defer non-stdlib imports in sampledata modules (downloading sampledata is rare usage)

* reduce some dynamic docstring manipulations

All told this shaves ~200ms off `import bokeh.plotting` on my laptop. The results using:
```
python3.7 -X importtime -c ""import bokeh.plotting"" 2> bokeh3.log
tuna bokeh3.log
``` 
are:

<img width=""1238"" alt=""screen shot 2018-10-05 at 15 16 30"" src=""https://user-images.githubusercontent.com/1078448/46562596-a94d9280-c8b1-11e8-9062-d80670a12813.png"">

About half of that ~600ms appears to be NumPy and Pandas, which is borne out by this very rough timing:

```
In [1]: import pandas, numpy

In [2]:

In [2]: %time import bokeh.plotting
CPU times: user 190 ms, sys: 40.8 ms, total: 231 ms
Wall time: 309 ms
```

It's worth noting that 60-70 ms for computing `bokeh.__version__` disappears in real release packages where the version string is hardcoded. 

We can't do much about the NumPy/Pandas burden, but there are still some things we can do to reduce things on our end later:

* defer loading default temlate yaml files until requested (this will take a little more work/care)
* remove more dynamic module code (e.g dynamic glyph method construction)
* defer loading Jinja templates until needed
* move submodules of `bokeh.models` to `bokeh._modules` so that individual models can be imported internally without importing everything in `bokeh.models.__init__.py`

I would estimate ~150ms (relative reference on this laptop) is probably a floor for `import bokeh.plotting`",4,3,"['status: accepted', 'type: task', 'reso: completed']"
1447,220431477,8306,3834332,2018-10-04 15:58:19,2018-10-04 16:10:34,closed,Fix tiny typo in the document about GraphRenderer,fixes #8299 ,1,2,['status: accepted']
1448,220222043,8304,3834332,2018-10-04 01:03:17,2018-10-04 10:30:49,closed,Backports of unrelated changes from PR #8085,"This is the first batch, the obvious, almost non-conflicting changes.",1,24,['status: accepted']
1449,220169154,8303,3834332,2018-10-03 20:27:45,2018-10-03 21:20:36,closed,improve verify_all fail message," issues: fixes #8300

new output:
```
self = <bokeh._testing.util.api.verify_all.<locals>.Test___all__ object at 0x1168ebd68>

    def test___all__(self):
        if isinstance(module, string_types):
            mod = importlib.import_module(module)
        else:
            mod = module
        assert hasattr(mod, ""__all__"")
>       assert mod.__all__ == ALL, ""for module %s, expected: %r, actual: %r"" % (mod.__name__, set(ALL)-set(mod.__all__), set(mod.__all__)-set(ALL))
E       AssertionError: for module bokeh.core.properties, expected: {'Angdle'}, actual: {'Angle'}
```
",1,1,['status: accepted']
1450,220143379,8302,3834332,2018-10-03 18:55:51,2018-10-03 20:00:06,closed,Small build tasks,"This PR removes the package pin for Pillow now that Pillow 5.3 is available, and also disables a flaky integration test. 
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1451,220130699,8301,3834332,2018-10-03 18:11:35,2018-10-04 16:36:42,closed,Re-unify docs build,"This PR re-unifies the docs build, removing all reference to the disused static site *bokehplots.com* This is both to simplify and streamline maintenance for core devs and also to provide a clear demarcation at 1.0 for eventually shutting down the static site in the future (since previous docs versions depend on external assets from there).

I have taken the opportunity to streamline the orphan page content:

<img width=""294"" alt=""screen shot 2018-10-03 at 11 04 58"" src=""https://user-images.githubusercontent.com/1078448/46429962-95acfb00-c6fc-11e8-8080-b42cb9474ee8.png"">

This includes removing the longer *Technical Vision* and adding a fairly fleshed out ""Areas of Work"" (quasi-roadmap):

<img width=""928"" alt=""screen shot 2018-10-03 at 11 05 13"" src=""https://user-images.githubusercontent.com/1078448/46430114-f76d6500-c6fc-11e8-86e6-a616fdda00b1.png"">

Later, I would like to add an explicit section on Project Scope whenever the core group has a chance to collaborate on it. 

Finally, I do not think that moving *main.css* directly into the tree is a great long term solution, but it is all my time and experience permit the moment. In the future I would imagine restoring the `*.less* files and having the docs build start from these. 

cc @birdsarah for any thoughts. I plan to merge this tomorrow-ish. 
",0,1,"['tag: component: docs', 'status: ready', 'type: task', 'reso: completed']"
1452,219866024,8298,3834332,2018-10-02 22:35:03,2018-10-02 23:39:41,closed,request a render after clearing selection,"- [x] issues: fixes #8292

",0,1,['status: accepted']
1453,219829193,8297,3834332,2018-10-02 20:08:41,2018-10-03 04:40:36,closed,use standard args for gridplot,"This PR removes unnecessary arbitrary arg/kwarg processing in `gridplot` in favor of standard Python optional args 

- [x] issues: fixes #8273
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Now get for unknown arg:

```
TypeError: gridplot() got an unexpected keyword argument 'n_cols'
```",4,3,['status: accepted']
1454,219796783,8296,3834332,2018-10-02 18:13:14,2018-10-02 21:59:22,closed,Split up bokeh.properties,"The `bokeh.properties` module (and associated test module) was an enormous rats nest. This PR splits up `bokeh.properties` up into more sensible pieces under `bokeh.property` and splits up the tests as well. 

The only API change was `bokeh.core.property.containers` became `bokeh.core.property.wrappers` but this is deep low-level API (e.g `PropertyValueDict`) that no users should be using directly. ",1,17,"['status: ready', 'status: accepted', 'type: task', 'reso: completed']"
1455,219555245,8294,3834332,2018-10-02 00:39:51,2018-10-02 20:17:00,closed,"add minor ticks ""minor_ticks="" option in FixedTicker","This PR attempts to add an optional minor_ticks option for FixedTicker. 

Subsequently, one should be able to pass FixedTicker a list of minor tick values analogous to how one would pass a list of major tick values. 
```python
p.axis.ticker = FixedTicker(ticks=[0, 5, 10], minor_ticks=[1,2,3,4, 6,7,8,9])
```
past behavior should still work because `minor_ticks=[]` by default

I am new to typescript, so please doublecheck the work! Not sure where else to update (e.g. in [tests](https://github.com/bokeh/bokeh/blob/master/bokehjs/test/models/tickers/fixed_ticker.ts) or in docs)

- [x] issues: fixes #8295
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

## Tested example for reproducibility
```python
import numpy as np

from bokeh.io import show, output_file, output_notebook
from bokeh.plotting import figure
from bokeh.models.tickers import FixedTicker

#data (will not be plotted!)
major_data = [0.1, 1, 10, 100]
minor_data = [0.2, 0.3, 0.4, 0.5, 0.6, 0.7, 0.8, 0.9] + [2, 3, 4, 5, 6, 7, 8, 9] + [20, 30, 40, 50, 60, 70, 80, 90]

#original data will be viewed in log10 space
minor_ticks = np.log10(minor_data).tolist()
major_ticks = np.log10(major_data).tolist()
major_data_labels = [""10⁻¹"", ""10⁰"", ""10¹"", ""10²""]

#workaround to handle whole number floats being treated differently in override process
    #https://github.com/bokeh/bokeh/issues/8166
major_ticks_converted = [int(item)  if float(item).is_integer()  else item  for item in major_ticks]

major_label_overrides = dict(zip(major_ticks_converted, major_data_labels))
```
#### Default behavior
```python
p = figure(x_range=(-2,3))
p.circle(x=[-1,0,1,2,2], y=[1,1,1,1,1.5])

#p.axis.ticker = major_ticks  #to verify shorthand compatibility
p.xaxis.ticker = FixedTicker(ticks=major_ticks)
p.xaxis.major_label_overrides = major_label_overrides
 
#output_notebook()
output_file('FixedTicker_default.html')
show(p)
```
![image](https://user-images.githubusercontent.com/20694664/46326958-516f0d00-c5cd-11e8-882b-93fbca33c249.png)


#### New behavior after recompiling bokehjs and activating with `BOKEH_RESOURCES=inline`
```python
p = figure(x_range=(-2,3))
p.circle(x=[-1,0,1,2,2], y=[1,1,1,1,1.5])

p.xaxis.ticker = FixedTicker(ticks=major_ticks, minor_ticks=minor_ticks)
p.xaxis.major_label_overrides = major_label_overrides

#output_notebook()
output_file('FixedTicker_new.html')
show(p)
```
![image](https://user-images.githubusercontent.com/20694664/46326900-f4735700-c5cc-11e8-8f9c-2ef9fbd0372b.png)
",2,4,['status: accepted']
1456,219522591,8293,3834332,2018-10-01 21:30:58,2018-10-02 23:18:56,closed,bokeh/colors boilerplate,"Adds boilerplate for bokeh/colors

- [x] issues: partially addresses #8207 
- [ ] tests added / passed
",1,6,['status: accepted']
1457,219402653,8291,3834332,2018-10-01 14:45:13,2018-10-02 00:26:15,closed,Add an example to demonstrate node/edge attributes in from_networkx,"fixes #8286 

Result of the script:
http://nbviewer.jupyter.org/github/komo-fr/networkx2bokeh_note/blob/master/notebooks/graph_example_using_node_and_edge_attributes.ipynb",1,4,['status: accepted']
1458,218849946,8285,3834332,2018-09-28 04:19:57,2018-10-01 18:35:34,closed,Bryanv/5884 scatter,"- [x] issues: fixes #5884
- [x] tests added / passed
- [x] release document entry (if new feature or API change)


```
from bokeh.plotting import figure, show, output_file
from bokeh.sampledata.iris import flowers
from bokeh.transform import factor_cmap, factor_marker

from bokeh.models import CategoricalMarkerMapper

SPECIES = ['setosa', 'versicolor', 'virginica']
MARKERS = ['circle', 'diamond', 'triangle']

p = figure(title = ""Iris Morphology"")
p.xaxis.axis_label = 'Petal Length'
p.yaxis.axis_label = 'Petal Width'

p.scatter(""petal_length"", ""petal_width"", source=flowers, legend=""species"", 
          fill_alpha=0.4, size=12,
          marker=factor_marker('species', MARKERS, SPECIES),
          color=factor_cmap('species', 'Category10_3', SPECIES))
          
p.legend.location = ""top_left""

show(p)
```

<img width=""536"" alt=""screen shot 2018-09-27 at 19 54 48"" src=""https://user-images.githubusercontent.com/1078448/46187933-13a37900-c29b-11e8-87a0-5cb09f737018.png"">
",2,6,['status: accepted']
1459,218638409,8283,3834332,2018-09-27 12:45:12,2018-09-27 14:08:45,closed,Add computed_icon getter to ToolProxy,"Fixes missing icons on merged toolbars which use ToolProxy.

- [x] issues: fixes #8282 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,2,['status: accepted']
1460,218354645,8279,3834332,2018-09-26 15:11:34,2018-09-26 16:12:38,closed,"Fix {css,js}_resources block mismatch","Issue #8160 stated that there was a mismatch in `{css,js}_ressources` both in `file.html` template and documentation.
PR #8161 fixed only the mismatch in `file.html` template.

This PR fixes the mismatch in the documentation.

Have a nice day!

fixes #8160",1,1,['status: accepted']
1461,218349217,8278,3834332,2018-09-26 14:57:11,2018-09-27 17:57:48,closed,Remove global event listeners when deleting views to prevent memory leaks,"As promised in the [memory leak issue discussion](https://github.com/bokeh/bokeh/issues/5355), here is a PR for properly removing event listeners registered by BokehJS views on **window** and **document** global objects.
Because they constitute an active reference to the view, these listeners prevent garbage collection of most (all ?) of a Bokeh document's memory footprint after it has been entirely removed from the DOM.

I don't know what kind of testing is expected from such a PR. All I can say is these changes don't evidently break bokehjs' behavior and now re-running again and again the same cell in Jupyter Notebook shows the memory still increasing short-term, but being properly garbage-collected afterwards.

- [x] issues: fixes #5355 
- [ ] tests added / passed",4,3,['status: accepted']
1462,218019997,8276,3834332,2018-09-25 15:16:40,2018-09-27 14:32:08,closed,Boilerplate for bokeh/client,"- [x] issues: addresses part of #8207 
- [x] tests added / passed

Adding/updating boilerplate in files under bokeh/client directory",1,6,['status: accepted']
1463,217627858,8274,3834332,2018-09-24 11:39:47,2018-09-25 17:47:11,closed,Added ability to define custom tooltip and icon on EditTools,"Adds a ``custom_tooltip`` property to all tools, which if defined overrides the ``tool_name``. This allows telling apart multiple tools added for different purposes, which is mostly useful for the editing tools. If we think it's preferable to limit this to only those specific tool I'd be happy to remove it from other tools.

- [x] issues: fixes #7499
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",9,9,['status: accepted']
1464,217524098,8272,3834332,2018-09-23 18:39:23,2018-09-23 20:30:19,closed,"Resolve #8271 by adding "";"" to console.log command",,1,1,['status: accepted']
1465,217165077,8269,3834332,2018-09-21 03:54:52,2018-09-21 04:25:25,closed,warn on setting  attributes on empty splattable legend lists,"- [x] issues: fixes #5632
- [x] tests added / passed

This PR is narrow, it only adds a warning setting attributes on empty `p.legend`. It is far less common to not have axes or grids when using `bokeh.plotting` and I have never seen any reports of similar confusion happening with `p.axis`, etc. But legends are only created on demand so it is much easier to get in a situation trying to set `p.legend.location` before any legend exists. ",0,1,['status: accepted']
1466,217147343,8268,3834332,2018-09-21 01:16:45,2018-09-21 01:49:45,closed,let image_url compute bounds,"- [x] issues: fixes #3187
- [x] release document entry (if new feature or API change)
",2,1,['status: accepted']
1467,217118119,8267,3834332,2018-09-20 21:54:38,2018-09-20 22:43:14,closed,Adding mention of BOKEH_PHANTOMJS_PATH to RuntimeError exception message,"Resolves #8263 by adding text to exception message
- [x] issues: fixes #8263
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1468,216834221,8261,3834332,2018-09-20 03:25:30,2018-09-20 09:24:12,closed,make plots have default ranges,"- [x] issues: fixes #8231
- [x] release document entry (if new feature or API change)

cc @mattpap ",0,1,['status: accepted']
1469,216779391,8259,3834332,2018-09-19 21:17:28,2018-09-19 22:24:32,closed,suppress callback warning on image export,"- [x] issues: fixes #8020
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

I would have preferred to find a way to do this without adding another paramete to `file_html` but that would require a larger refactor. ",0,1,['status: accepted']
1470,216757210,8258,3834332,2018-09-19 19:55:06,2018-09-19 19:55:17,closed,add missing embed tempate,"- [x] issues: fixes #8257

`.html` files are git ignored under `examples` to prevent accidentally committing example output to the repo, but that cuts the opposite direction when adding HTML files is intended. 
",0,1,['status: accepted']
1471,216729387,8256,3834332,2018-09-19 18:11:33,2018-09-19 22:36:16,closed,add plumbing to make legends update changes,"- [x] issues: fixes #589

Re: testing, there is not any good current way. This needs an integration/selenium test since it involves executing an interaction to make an update to legend state. It's not merely enough to inspect the state however, the test needs to confirm the render (that was the actual issue to fix). That will require ""image-diff"" integration tests, which we do not have yet. I will add an issue to add those, and start a list linking back to specific issues like this that need one. 

Test script:
```
from bokeh.io import curdoc
from bokeh.layouts import column
from bokeh.plotting import figure
from bokeh.models import Button

x = [1,2,3,4,5, 10]
y = [5,6,2,3,4,10]

p = figure()
r = p.line(x, y, legend=""foo"")

def cb():
    p.circle(x, y, legend=""foo"")
    r.glyph.line_dash = ""dotted""
    r.glyph.line_color = ""black""
    p.line([1,4,8], [2, 12, 6], line_color=""red"", legend=""bar"")
    p.legend.background_fill_color = ""blue""
    p.legend.background_fill_alpha = 0.2

button = Button()
button.on_click(cb)

curdoc().add_root(column(p, button))
```

Before:

<img width=""469"" alt=""screen shot 2018-09-19 at 11 06 48"" src=""https://user-images.githubusercontent.com/1078448/45772412-72faec80-bbfc-11e8-9964-94ee2547356c.png"">

After:

<img width=""464"" alt=""screen shot 2018-09-19 at 11 06 56"" src=""https://user-images.githubusercontent.com/1078448/45772415-77bfa080-bbfc-11e8-86f4-e694d59255a0.png"">
",2,1,['status: accepted']
1472,216573691,8255,3834332,2018-09-19 09:35:05,2018-09-25 16:53:00,closed,Adding autoreload based on tornado,"- [x] issues: fixes #4236
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",28,7,['status: accepted']
1473,216152576,8254,3834332,2018-09-18 00:38:23,2018-09-18 02:18:22,closed,refine appveyor.yml settings,"Also had to disable ""push"" webhook, and leave only ""pr"" webhook following discussion here:

https://help.appveyor.com/discussions/questions/18437-skip_branch_with_pr-setting-doesnt-work",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1474,216151814,8253,3834332,2018-09-18 00:32:15,2018-09-18 00:36:52,closed,refine appveyor.yml,"Stop building twice on PR pushes.
",0,1,['status: declined']
1475,216111232,8252,3834332,2018-09-17 20:52:32,2018-09-17 21:59:54,closed,"Pandas is optional overall, but required for hexbin",,0,4,"['status: accepted', 'type: task', 'reso: completed']"
1476,216067946,8251,3834332,2018-09-17 18:09:10,2018-09-17 20:37:09,closed,update requests min version,"@mattpap this appears to resolve the CVE noted by GH regarding the `cryptiles` package. By updating `requests` we no longer pull in `cryptiles` at all. Is this the best way? I guess my only question is about adding it to ""dependencies"" since AFAIK it is a second order dependency. ",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1477,216060226,8249,3834332,2018-09-17 17:39:53,2018-09-17 22:58:57,closed,Ci windows appveyor,- [x]  issues: fixes #8225,3,6,['status: accepted']
1478,215965590,8248,3834332,2018-09-17 12:33:09,2018-09-18 02:35:05,closed,Add DocumentLifeCycleHandler and Document.on_session_destroyed,"As described in #8247 this adds a way to define ``on_session_destroyed`` callbacks on the Document which are executed by a ``DocumentLifeCycleHandler`` which is added to all ``Application`` instances by default.

Two things that need to be decided before I'm happy with this:

* Naming of the `DocumentLifeCycleHandler`
* Who is responsible for adding the `DocumentLifeCycleHandler`, currently the `Server` adds this handler to all applications (at minimum it might want to check whether the application already has such a handler)

Once these items have been decided I'll add some tests and add a bit about this in the server docs.

- [x] issues: fixes #8247
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,8,['status: accepted']
1479,215441229,8245,3834332,2018-09-13 23:13:37,2018-09-19 20:23:29,closed,Boilerplate for bokeh/bokeh/application,"- [x] issues: adresses part of #8207 
- [x] tests added / passed
Adds the boilerplate code for files in bokeh/bokeh/application.

Note:
The majority of the boilerplate in bokeh/bokeh/application was added to master prior to this PR",5,18,['status: accepted']
1480,215125641,8242,3834332,2018-09-12 23:37:06,2018-09-13 03:58:35,closed,allow pull_session to accept HTTP args,"- [x] issues: fixes #7785
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1481,215086101,8240,3834332,2018-09-12 20:28:48,2018-09-12 21:09:10,closed,project coords for segment glyphs on gmaps,"- [x] issues: fixes #7974 

Test code:
```
from bokeh.io import show
from bokeh.models import GMapOptions, ColumnDataSource
from bokeh.plotting import figure, gmap

map_options = GMapOptions(lat=37.76, lng=-121.9, map_type=""roadmap"", zoom=11)
plot = gmap(google_api_key=""AIzaSyAM1OHVm6Yr_i54Kt01mylfxyNxQdxmxHQ"", map_options=map_options)

source = ColumnDataSource( data = dict(
    y=[ 37.762260 ],
    x=[-121.96226],
    ym01=[37.762290 ],
    xm01=[-121.86189 ],
))

plot.segment(x0=""x"", y0=""y"", x1=""xm01"", y1=""ym01"",line_color=""green"", line_width=2, source=source)
plot.circle(x=[-121.96226, -121.86189], y=[37.762260, 37.762290], size=8)

show(plot)
```

Result:

<img width=""604"" alt=""screen shot 2018-09-12 at 13 15 27"" src=""https://user-images.githubusercontent.com/1078448/45451385-c4046100-b68f-11e8-8531-e19016450117.png"">
",0,1,['status: accepted']
1482,215063247,8239,3834332,2018-09-12 19:01:08,2018-09-12 19:01:19,closed,slight range docs improvements,"- [x] issues: fixes #7042
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1483,215036553,8238,3834332,2018-09-12 17:18:05,2018-09-12 18:37:24,closed,add clear method to CDS,"This PR adds a `clear` method to BokehJS CDS. Additionally:

* removes duplicative `column_names` property (use `columns()` consistently)
* fixes a bug preventing direct init of CDS from typed arrays

- [x] issues: fixes #7990
- [x] tests added / passed
",1,1,['status: accepted']
1484,214787894,8237,3834332,2018-09-11 22:43:16,2018-09-12 00:59:48,closed,Bryanv/8156 bold italic,"- [x] issues: fixes #8156
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
1485,214759059,8236,3834332,2018-09-11 20:38:08,2018-09-11 22:00:57,closed,typo for plotting_hex_tile_basic.py by ppplinday,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes plotting_hex_tile_basic.py: output_file(""hex_coords.py"")
- [ ] tests change it to :output_file(""hex_coords.html"")
",1,1,['status: accepted']
1486,214686994,8234,3834332,2018-09-11 16:11:17,2018-09-11 17:10:55,closed,Bryanv/8232 frombuffer writeonly,"Issue was change from `np.fromstring` to `np.frombuffer` The latter creates a non-writeable view which does not work with `patch`. Since `fromstring` was previously making a new array, the simple solution of adding an `np.copy` call should have similar performance. It's possible in the future we could defer copying until/unless it is needed (COW)

This also fixes an issue where exceptions in python 3 Bokeh apps were not printing tracebacks correctly. 

- [x] issues: fixes #8232
- [x] tests added / passed
",0,3,['status: accepted']
1487,214368845,8230,3834332,2018-09-10 16:14:55,2018-09-10 16:47:17,closed,properly use string_types for Instance properties and js_on_event,"Code was erroneously checking for `str`, changing to add `unicode_literals` exposed the error. 
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
1488,214120510,8228,3834332,2018-09-09 00:11:36,2018-09-10 15:15:53,closed,Improve docs for export functions,"- [ ] issues: fixes #8215

This PR does the following:
- Updates installation docs to add missing dependencies
- Improves doc on Exporting Plots. Additional dependencies are required for all export functions not just export_png.",1,2,['status: accepted']
1489,214043474,8226,3834332,2018-09-07 21:25:56,2018-09-17 17:37:36,closed,Ci windows appveyor pr,"- [ ] issues: fixes #8225

",4,20,['status: declined']
1490,214009504,8224,3834332,2018-09-07 18:44:51,2018-09-07 19:30:04,closed,use np.frombuffer instead of deprecated np.fromstring,"Not sure why this:

> C:\projects\bokeh\bokeh\util\serialization.py:516: DeprecationWarning: The binary mode of fromstring is deprecated, as it behaves surprisingly on unicode inputs. Use frombuffer instead
1911  array = np.fromstring(b64, dtype=data['dtype'])

is only showing up on tentative windows builds on Appveyor (see #8213) but might as well fix it up now. `np.frombuffer` appears in the NumPy 1.7.x docs:

https://docs.scipy.org/doc/numpy-1.7.0/reference/generated/numpy.frombuffer.html

so there should be no need to change our `REQUIRES`",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1491,213987672,8223,3834332,2018-09-07 17:04:38,2018-09-07 17:36:41,closed,remove dead testing code,"This PR initially set about to ensure we used humane naming throughout, but as it turns out the small amount of relevant code is actually no longer needed at all and can just be removed altogether. 
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1492,213982800,8222,3834332,2018-09-07 16:42:00,2018-09-07 17:15:19,closed,account for get_referrers change in python 3.7,"- [x] issues: fixes #8221
- [x] tests added / passed
",0,1,['status: accepted']
1493,213792434,8220,3834332,2018-09-07 01:26:13,2018-09-12 21:34:31,closed,Boilerplate for toplevel bokek/bokeh,"- [x] issues: adresses part of #8207 
- [x] tests added / passed

Adds the boilerplate code for top level files in bokeh/bokeh.",11,17,['status: accepted']
1494,213750499,8219,3834332,2018-09-06 21:06:40,2018-09-06 21:44:48,closed,don't report unversioned python in deps.py output,"Build is currently failing due to an apparent python 3.7 issue, which has uncovered that the current method of installation will always use the most recent python, instead of what is explicitly specified and intended. 

The issue is having an unversioned ""python"" in the conda install line:

<img width=""730"" alt=""screen shot 2018-09-06 at 14 05 33"" src=""https://user-images.githubusercontent.com/1078448/45185117-fb7d9400-b1dd-11e8-8b7d-1c6811caee87.png"">

This PR addresses that by removing ""python"" if it is present (it has to remain in the recipe, so our only option is to filter it out)",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'CRITICAL']"
1495,213712579,8218,3834332,2018-09-06 18:40:53,2018-09-06 20:20:00,closed,support specifying representative point from legend items,"- [x] release document entry (if new feature or API change)

This was raised on Gitter and falls under the category of low hanging but valuable fruit. This PR allows users to specify an explicit `index` on legend items, so that e.g. annotating each line in a multi_line is possible. With a little more follow-on work, #2603 would be within reach. Later work might also add a convenience API to `multi_line` and `patches` to make creating the legend items less manual. 

Unfortunately I can't think of a good direct test for this with the current view architecture, but I have added an expample that will show up under image diff tests. 

```
from bokeh.plotting import figure, output_file, show
from bokeh.models import Legend, LegendItem

p = figure()
r = p.multi_line([[1,2,3], [1,2,3]], [[1,3,2], [3,4,3]],
                 color=[""orange"", ""red""], line_width=4)

legend = Legend(items=[
    LegendItem(label=""orange"", renderers=[r], index=0),
    LegendItem(label=""red"", renderers=[r], index=1),
])
p.add_layout(legend)

output_file(""multi_legend.html"")

show(p)
```

<img width=""523"" alt=""screen shot 2018-09-06 at 11 41 10"" src=""https://user-images.githubusercontent.com/1078448/45178136-c8310a00-b1c9-11e8-8548-255c4c5cab2a.png"">
",1,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1496,213656485,8217,3834332,2018-09-06 15:18:32,2018-09-07 18:19:37,closed,Added unit/integration tests for python3.7,"See title. Not sure if python3.7 support is premature at this point, but I found some functions failing that worked in python3.6, so this is the first step in testing compatibility.",20,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1497,213364480,8214,3834332,2018-09-05 17:01:36,2018-09-05 18:41:55,closed,Bryanv/misc cleanup,"This is just some misc. code cleanup/gardening. It brings a number of modules up to 100% coverage (some important features had no coverage), as well as refactors some duplicate code in places, and simplifies some dynamic docstrings to static ones.
",1,7,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1498,213207334,8213,3834332,2018-09-05 08:22:28,2018-09-17 21:37:52,closed,Windows platform test corrections,"Python version      :  3.7.0 (default, Jun 28 2018, 08:04:48) [MSC v.1912 64 bit (AMD64)]
IPython version     :  6.5.0
Bokeh version       :  1.0.0dev6-14-g463049309
BokehJS static path :  g:\pythonworkspace\bokeh\bokeh\server\static
node.js version     :  v8.9.3
npm version         :  6.4.1

- [ ] issues: fixes #8146
- [ ] tests: 0 added / +11 passed / +1 skipped

===== 4 failed, 2999 passed, 698 deselected, 1 warnings in 106.19 seconds =====
",33,12,['status: accepted']
1499,213115909,8212,3834332,2018-09-04 22:00:45,2018-09-04 22:49:18,closed,handle vline/hline hover in corner cases,"- [x] issues: fixes #8198

ensures the vline/hline segments completely envelope the target line in the transverse direction (even if the line is vertical or horizontal)

<img width=""595"" alt=""screen shot 2018-09-04 at 14 58 01"" src=""https://user-images.githubusercontent.com/1078448/45060073-4b7c1f80-b053-11e8-8d90-6a9b14f403c6.png"">
",0,1,['status: accepted']
1500,213104066,8211,3834332,2018-09-04 21:06:54,2018-09-05 15:43:13,closed,8196 Add .copy method to ColumnDataSource,"fixes: #8196

Made the necessary changes to implement my own feature request [8196].
Added `__copy__` and `__deepcopy__` hooks to `PropertyValueColumnData` and changed `ColumnDataSource` to make a shallow copy by default as requested by @bryevdv.

I noticed that if the CDS is initialized from a DataFrame `index` is now the first key instead of the last, but I assume this is the result of other changes to the repo?
",4,8,['status: accepted']
1501,213067165,8210,3834332,2018-09-04 18:38:15,2018-09-16 00:21:11,closed,Convert NetworkX node/edge attributes to Bokeh node_renderer/edge_renderer data source. (#8183),"- [x] issues: fixes #8183
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
    - Is it necessary to change the document?

In the code that I pull requested this time, it doesn't correspond to the following case.
I will implement it if necessary.

#8183
> I think that it is necessary to consider how to handle it in the following case. (raising exceptions, etc.)
> 1. The case that nodes have a attribute named 'index'
> 2. The case that edges have a attribute named 'start' or 'end'
> ",22,15,['status: accepted']
1502,212778282,8206,3834332,2018-09-03 15:22:02,2018-09-05 03:43:34,closed,Add another theme: balanced,"I accidentally removed all commits (which automatically closed the other PR when I rebased) so here it is again...

(do I have to add an issue and tests for this?)
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This theme was inspired by plots seen around in https://serialmentor.com/dataviz/time-series.html

Here's the comparison between balanced and light_minimal
![image](https://user-images.githubusercontent.com/15331990/44994173-42eff000-af52-11e8-92a7-443d5251397a.png)

Theme applied on hvplot documentation: https://anaconda.org/ahuang11/hvplot_balanced_theme/notebook",8,4,"['type: feature', 'status: accepted', 'reso: completed']"
1503,212620088,8204,3834332,2018-09-03 00:42:22,2018-09-03 15:06:16,closed,Add balanced theme,"I'm not sure why it's showing commits from https://github.com/bokeh/bokeh/pull/8062; the only changes should be in __init__.py where I add 'balanced' to the built-in theme and a balanced.json file

(do I have to add an issue and tests for this?)
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This theme was inspired by plots seen around in https://serialmentor.com/dataviz/time-series.html

Here's the comparison between balanced and light_minimal
![image](https://user-images.githubusercontent.com/15331990/44962651-2f07a800-aed8-11e8-969b-657dd69feeb6.png)

Theme applied on hvplot documentation: https://anaconda.org/ahuang11/hvplot_balanced_theme/notebook",1,0,['status: declined']
1504,212559777,8202,3834332,2018-09-01 18:55:11,2018-09-06 21:48:49,closed,Using 'utf-8' codec to open python 3 scripts in bokeh app,"Using 'utf-8' codec to open python 3 scripts in bokeh app.

- [x] issues: fixes #682 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,3,['status: accepted']
1505,212483099,8200,3834332,2018-08-31 20:08:40,2018-09-01 01:15:19,closed,"change all instances of ""joy plot"" to ""ridge plot""","issues: fixes #8128 
",0,3,['status: accepted']
1506,212462137,8199,3834332,2018-08-31 18:29:02,2018-08-31 19:53:15,closed,issues: none type: bug tag: examples Updated main.py,"Removed BUFSIZE variable, which is not being used in this script.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).


issues: none
type: bug
reso: completed
tag: examples
milestone: unmilestoned
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1507,211259998,8194,3834332,2018-08-27 23:30:07,2018-08-28 00:11:28,closed,remove non-functional arguments parameter,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8140
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1508,211189501,8193,3834332,2018-08-27 18:23:52,2018-10-05 00:40:58,closed,Bryanv/5231 json embeds,"- [x] issues: fixes #5231
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

So far this PR adds the ability to make a simple JSON export of a Bokeh root model from Python and then embed it in JS using `Bokeh.embed.embed_item` (see example below). Notes:

* It is not yet possible to export JSON from a JS doc and also pass that to `embed_item`. It seems that `to_json` includes a lot of layout related attrs that are not present in the python export and this confuses re-constitution of the document. I think #8085 may solve this issue since layout is moved off of models there. 

* currently the target ID is specified in `json_item(p, ""myplot"")` and them embedded with `embed_item(item)` on the JS side. But maybe the converse is better for specifying the target? e.g `json_item(p)` on the export side with the target specified in JS `embed_item(item, ""myplot"")`

* currently can only export a single root this way, perhaps would be good to be able to embed multiple roots at once but open to not-doing that now as long as a reasonable pathway later is not precluded. 

This PR also switches to simple IDs by default. ",15,9,['status: accepted']
1509,210981890,8191,3834332,2018-08-27 00:50:32,2018-08-27 17:05:20,closed,Fix Past & Future Issue with boxplot.py & Pandas 0.23.x,Minor fix for https://github.com/bokeh/bokeh/issues/8190,1,5,['status: accepted']
1510,210532083,8184,3834332,2018-08-23 18:12:15,2018-08-24 17:07:54,closed,Bryanv/8179 show accumulation,"- [x] issues: fixes #8179
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR makes the following changes:

* `show` only adds content to `curdoc` when showing in the notebook. It is necessary in the notebook that *all* output be in the same global document, but this is not necessary or especially useful for typical usage outside the notebook. 

* Consolidates ill-specified and undocumented `_ModelInDocument` and `_ModelInEmptyDocument` into a documented context manager `OutputDocumentFor` that is comprehensively tested.

The old context managers seemed to try to handle cases that do no seem important. e.g. mixing documents and models together, making their behaviour overly complicated. 

`OutputDocumentFor` tries to just re-use an existing document where possible. If there is no existing document, it will create one, and make it the permanent new document (i.e. it will call `add_root` on them). If there are too many documents, or if we only want to consider a *subset of roots*.  then `OutputDocumentFor` creates a ""temp doc"" that effectively re-homes the models, to use inside the with-block

The last bit is what could be considered bit kludgy. Specifically, because the ""temp"" doc is not completely initialized, but is useful enough to use for the serialization cases we currently have. The *implementation* could be perhaps improved with a better internal API. Or perhaps the ""temp doc"" concept could be explicitly realized in a new type. Comments here are welcome. 

However, I believe the outward facing *behaviour* of `OutputDocumentFor` is fairly close to what it needs to be. I'd like to come to explicit agreement on this point. Then as long as those behaviours are fully codified in tests we can improve implementation now or later. 

cc @mattpap 

One thing to note also is that `OutputDocumentFor` is somewhat faster now, and especially with validation turned off, only takes on the order of miroseconds on my latptop. ",8,6,['status: accepted']
1511,209379473,8175,3834332,2018-08-19 21:02:08,2018-08-20 00:19:28,closed,Ensure TileRenderer renders despite aspect changes,"Having the TileRenderer skip rendering when the aspect changes caused visible flicker, which can be quite annoying. I suspect the tile is re-rendered immediately anyway because the aspect code will cause ranges to change but avoiding flicker should take priority over the small savings achieved by skipping rendering here.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/7378
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
1512,209139160,8173,3834332,2018-08-17 12:54:04,2018-08-20 22:20:23,closed,Make TileRenderer smoothing configurable,"As the title says, exposes control over canvas image smoothing on the TileRenderer.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8172
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,5,['status: accepted']
1513,207717045,8161,3834332,2018-08-10 20:40:21,2018-08-10 21:14:31,closed,"Define {css,js}_resources blocks in the correct order","fixes #8160 
",0,1,['status: accepted']
1514,207458398,8154,3834332,2018-08-09 22:11:44,2018-08-10 15:12:01,closed,Bryanv/more selenium,"Adds end-to-end selenium tests for:

* Button
* Toggle
* TextInput
* PasswordInput
* Div
* Paragraph
* PreText
* Select
* CheckboxGroup
* RadioGroup
* CheckboxButtonGroup
* RadioButtonGroup",1,8,"['tag: component: tests', 'status: accepted']"
1515,207105579,8149,3834332,2018-08-08 19:00:17,2018-08-10 15:27:23,closed,Added support for vertex snapping to PolyDrawTool and PolyEditTool,"This PR will implement vertex snapping for the PolyDrawTool and PolyEditTool (not yet implemented), allowing for more complex draw actions. Here is it in use for the PolyDrawTool:

![snapping](https://user-images.githubusercontent.com/1550771/43858317-9ddd8f52-9b45-11e8-83f1-0a93ae9e1ee3.gif)
 
- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8148
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,11,['status: accepted']
1516,206968626,8147,3834332,2018-08-08 10:56:20,2018-08-08 18:16:31,closed,Added FreehandDrawTool,"This PR adds a FreehandDrawTool which draws on click and drag events and also allows deleting previously lines by selecting them and hitting backspace.

It also needs an icon (ping @jbednar), I'm imagining something like [this](https://upload.wikimedia.org/wikipedia/commons/thumb/9/91/Inkscape_icons_draw_freehand.svg/2000px-Inkscape_icons_draw_freehand.svg.png) taken from Inkscape. 

Small demo:

![freehand](https://user-images.githubusercontent.com/1550771/43833366-6397d340-9b02-11e8-9aec-919bb40a033d.gif)

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8133
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",12,13,['status: accepted']
1517,206825554,8145,3834332,2018-08-07 21:00:57,2018-08-08 00:11:46,closed,Jsnsross/8142 span datetime,"- [x] issues: fixes #8142 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

resolved issue with Span not accepting a datetime by copying formulation used for x and y arguments in Label. Also added tests for Span.location and Label.x / Label.y to ensure that datetime is properly being converted to milliseconds-since-epoch",2,5,['status: accepted']
1518,206811259,8144,3834332,2018-08-07 20:04:25,2018-08-08 20:10:24,closed,Add context manager and decorator to control property validation,"This allows users to control whether or not they want validate checks when
updating properties.

Examples
--------

    with validate(False):
        ...

or

    @without_property_validation
    def update(attr, old, new):
        ...

Fixes #8138

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8138
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",9,6,['status: accepted']
1519,206583189,8139,3834332,2018-08-07 05:26:33,2018-08-07 06:43:39,closed,initial work to support server selenium tests,"This is an initial stab at a workflow for adding selenium tests for bokeh server apps. Some things will probably change, but this is enough to support other currently ongoing work.

Some questions (to be addressed in later PRs):

* should server tests e.g. for widgets, be located with all the other widget tests? Or should the be segregated? If so, in what sort of layout

* Should `single_plot_page` etc jsut be made to support server apps out of the box? Or should `bokeh_server_page` remain distinct?

Also note the workarounds for https://github.com/bokeh/bokeh/issues/7970 that should be removed when that issue is resolved. 

cc @philippjfr ",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1520,206460913,8137,3834332,2018-08-06 17:04:43,2018-08-07 20:24:03,closed,Ensure draw/edit tools sync data on bokeh server,"This PR ensures that the drawing/editing tools trigger server side events by explicitly setting the data when necessary. I'll also add some selenium tests to this PR to avoid regressions.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8032
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,10,['status: accepted']
1521,206147816,8135,3834332,2018-08-03 21:56:51,2018-08-04 16:59:26,closed,Replace use of return_future with gen.coroutine,Fixes #8134 ,1,1,['status: accepted']
1522,205799113,8132,3834332,2018-08-02 16:53:35,2018-08-02 19:12:45,closed,"Updating the docstring for the dimensions property for Band, Span and Whisker","Providing a clearer explanation on the usage of the ``dimensions`` property in the classes Band, Span, and Whisker.

- [x] issues: fixes #8131, documentation update 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,4,['status: accepted']
1523,205785724,8130,3834332,2018-08-02 16:03:26,2018-08-03 17:29:25,closed,Add tilt option to GMapOptions,"Relevant Google Groups discussion: https://groups.google.com/a/continuum.io/forum/#!msg/bokeh/Ko66-4PbhNc/0TEpR3S1CQAJ

I am trying to add support for the `tilt` option for GMapPlot.

Without knowing exactly what I'm doing I have added the `tilt` option analogous to the `scale_control` option.

There are two open issues:
1) I don't see how my added option is ever sent to the API, so I doubt this will actually have any effect yet. Please help me understand how this should work.
2) In the current state, using a non default tilt parameter (i.e. `tilt=0`) breaks the plot with the following error:
```
Uncaught Error: property GMapOptions.tilt wasn't declared
    at t.u.setv (bokeh-1.0.0dev4.min.js:31)
    at t.u [as constructor] (bokeh-1.0.0dev4.min.js:31)
    at t.i [as constructor] (bokeh-1.0.0dev4.min.js:31)
    at t [as constructor] (bokeh-1.0.0dev4.min.js:31)
    at new t (bokeh-1.0.0dev4.min.js:31)
    at Function.P._instantiate_object (bokeh-1.0.0dev4.min.js:31)
    at Function.P._instantiate_references_json (bokeh-1.0.0dev4.min.js:31)
    at Function.P.from_json (bokeh-1.0.0dev4.min.js:31)
    at bokeh-1.0.0dev4.min.js:31
    at bokeh-1.0.0dev4.min.js:31
```

After having made the changes in this commit, I ran
```
python setup.py develop --build-js
```

Running `python -m bokeh info` outputs:
```Python version      :  2.7.12 (default, Nov 19 2016, 06:48:10) 
IPython version     :  5.4.1
Bokeh version       :  1.0.0dev4-1-g9d7e3ea-dirty
BokehJS static path :  /home/nicolas/src/bokeh/bokeh/server/static
node.js version     :  v8.11.3
npm version         :  6.3.0
```
So I believe to have set up my development environment correctly.

Thank you for your help!",7,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1524,205437747,8127,3834332,2018-08-01 14:07:51,2018-08-06 16:07:51,closed,Allow ability to overwrite existing glyphs in drawing tools,"This PR addresses a feature requested from the existing drawing tools, which is to overwrite the last drawn glyph. This is useful when you only want to draw a single box or polygon.

The spelling to enable this behavior is to set the new property ``overwrite=True``, suggestions for alternative spelling would be welcome (@jbednar?).

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/7987
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,8,"['status: ready', 'status: accepted']"
1525,205202719,8126,3834332,2018-07-31 18:30:23,2018-10-04 21:55:12,closed,fix for https://github.com/bokeh/bokeh/issues/6822,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: https://github.com/bokeh/bokeh/issues/6822
- [ ] tests passed
- [ ] release document entry (if new feature or API change)
",9,3,['status: declined']
1526,205123158,8125,3834332,2018-07-31 14:00:47,2018-07-31 16:46:48,closed,Fixed Exception raising tests of test_sources,"As soon as an exception is caught, the enclosing with context is broken. So, the assertions are never reached. You can test this by putting assert 0 somewhere

- [ ] tests added / passed
",1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1527,204987187,8123,3834332,2018-07-31 03:37:21,2018-08-01 15:20:40,closed,Fix push_notebook support for JupyterLab,"- [x] issues: fixes #8122 
- [x] adds test

This PR:
* imports bokehjs.embed.notebook.kernels into bokehjs.embed.index so that it's available at Bokeh.embed as expected
* Adds an inline comment to explain this in order to prevent future regressions
",2,4,"['status: accepted', 'tag: notebook']"
1528,204964774,8121,3834332,2018-07-31 00:21:45,2018-07-31 18:45:18,closed,Update notebook.rst instructions using JupyterHub + Bokeh.,"Add documentation, instructions, and a reference implementation for using bokeh server in a JupyterHub environment.

- [x] issues: fixes #8120
- [x] release document entry (if new feature or API change)
",2,2,['status: accepted']
1529,204438512,8114,3834332,2018-07-27 13:53:28,2018-08-20 03:10:11,closed,Add Dash marker glyph,"A PR for #8109. This is currently still work in progress.

issues: fixes #8109 

- [ ] ~~~Adjust shader code for dash marker~~~
- [x] tests added / passed
- [x] release document entry (if new feature or API change)",15,8,['status: accepted']
1530,204063591,8112,3834332,2018-07-26 08:23:15,2018-08-29 15:44:44,closed,Decision Tree Visualizer,"I realized that there is no example to visualize tree structure. So, we have been working on tree visualizing especially decision trees. We contacted the community on gitter and we are advised to create PR.",31,21,['status: declined']
1531,204008565,8110,3834332,2018-07-26 01:59:08,2018-08-02 19:59:39,closed,Restore selenium tests,"- [x] issues: fixes #6495 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

",14,6,['status: accepted']
1532,203712852,8107,3834332,2018-07-25 03:40:21,2018-07-25 17:45:30,closed,REF: Use .loc instead of .ix in examples,"In continuation to #8104 and #8105

",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1533,203591530,8105,3834332,2018-07-24 16:51:55,2018-07-24 17:26:51,closed,REF: Use .loc instead of .ix in box_annotation example. Fixes #8104,"REF: Use .loc instead of .ix in box_annotation example.

- [x] issues: fixes #8104
",1,1,['status: accepted']
1534,203073155,8102,3834332,2018-07-22 19:46:42,2018-08-20 19:20:28,closed,WIP: Point hit-test for step,"I was working on hit testing for `step`, but something weird is going on. Even though the resulting `Selection` has the right `line_indices`, the wrong glyph is still selected. See this GIF. Even though `result.line_indices` is 2, glyph 3 is selected. @mattpap you have any idea what is going on?

![ezgif com-video-to-gif](https://user-images.githubusercontent.com/6404167/43049462-9f2a5e12-8df8-11e8-926b-fefc31424bdc.gif)

``` python
from bokeh.plotting import figure, output_file, show

# output to static HTML file
output_file(""test.html"")

p = figure(plot_width=400,
           plot_height=400,
           tools='hover')

p.circle([1, 2, 3, 4, 5], [6, 7, 2, 4, 5], 
          size=20,
          color=""navy"",
          alpha=0.5,
          )   

p.step([1, 2, 3, 4, 5,6,7,8], [6, 7, 2, 4, 5, 7, 2, 3], 
         color=""navy"",
         alpha=0.5,
         line_width=7,
         mode='before'
         )   

#p.line([1, 2, 3, 4, 5],
#        [6, 7, 2, 4, 5],
#        color=""navy"",
#        alpha=0.5,
#        )

# show the results
show(p)
```

- [ ] issues: fixes #7419 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,1,['status: declined']
1535,203070240,8101,3834332,2018-07-22 18:35:08,2018-07-23 16:13:26,closed,REF: Use generators inplace of lists #8092,"Use generators inplace of lists

- [x] issues: fixes #8092",2,1,['status: accepted']
1536,203032165,8099,3834332,2018-07-21 23:53:46,2018-07-23 16:28:52,closed,Add CustomAction toolbar action,"This is a slight diversion, but I intend to use this targetable toolbar button that executes callback code as a simple and standard means to inject JS code into selenium tests. Additionally, it seems like quite a useful feature for users in its own right. 

This PR also adds an `Image` property, that can be set from RGB(A) NumPy arrays, PIL image objects, or from filenames of images in disk. The transformed value is always a Base64 `data\image` string. In this way the icon for the toolbar tool may be set to an arbitrary choice by the user. 

This requires adding Pillow as a dependency, however Pillow is easily obtainable. Additionally, there was Gitter discussion about adding PNG, TIFF, etc. image glyphs, and Pillow will be needed for that work as well. 
",4,7,"['type: feature', 'status: ready', 'status: accepted', 'tag: component: bokehjs']"
1537,203021801,8098,3834332,2018-07-21 18:36:24,2018-07-21 19:18:22,closed,DOC: clean backticks in .rst docs #8097,"Cleanup backticks in .rst docs

- [x] issues: fixes #8097",1,1,['status: accepted']
1538,203016678,8095,3834332,2018-07-21 16:24:22,2018-07-23 20:01:19,closed,Fix Karel/7788 rangeslider minmax,"- [x] issues: fixes #7788
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",12,7,['status: accepted']
1539,203015749,8094,3834332,2018-07-21 16:00:18,2018-07-21 21:09:23,closed,Fixes 7890: Do not draw line if value is NaN in step,"Copied over the code in `line.ts`. Not sure if this maybe can/should be generalized and/or extended to the other line-like glyphs, e.g. arc and bezier.

- [x] issues: fixes #7890
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
1540,203011704,8093,3834332,2018-07-21 14:20:16,2018-07-31 16:49:46,closed,Fixes #6770. Flatten pandas columns and index explicitly on CDS creation,"Both df.index and df.columns can be a pd.MultiIndex. Bokeh
expects a 'flat' table. This change uses the pandas API to
flatten, solving some issues with naming + being more consistent
with pandas

Supersedes https://github.com/bokeh/bokeh/pull/8002

- [x] issues: fixes #6770
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",8,5,['status: accepted']
1541,202917715,8091,3834332,2018-07-20 18:00:21,2018-07-20 19:04:14,closed,Bryanv/test cleanup,"This is just some cleanup after the last PR. I do have a couple of local selenium tests running, but I want to make some additional support tools in a separate PR. For example, a `CustomJSAction` tool button that selenium tests could easily push, and run configured JS code to expose internal BokehJS state for testing comparisons. I will make that PR, then a follow on PR for adding back selenium tests. 

This PR:

* removes old selenium tests and support code
* renames `quality` test mark to `codebase` and moves codebase test to their own directory
* other general cleanup.  ",0,6,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1542,202752766,8090,3834332,2018-07-20 05:52:02,2018-07-20 15:48:04,closed,"REF: Rename ci scripts, use dot (.) instead of colon (:) #8089","Rename ci scripts, use dot (.) instead of colon (:)

- [x] issues: fixes #8089
",7,2,['status: accepted']
1543,202367355,8087,3834332,2018-07-18 20:16:16,2018-07-18 21:21:53,closed,REF: Simplify pie example #8086,"pie chart example - http://bokeh.pydata.org/en/latest/docs/gallery/pie_chart.html can be simplified by 
 removing `Counter` and use `data['value'].sum()`

- [x] issues: fixes #8086 ",1,1,['status: accepted']
1544,202101056,8085,3834332,2018-07-17 23:27:32,2019-02-01 16:18:51,closed,Improve the layout subsystem,"addresses #8084

fixes #4407 (new feature)
fixes #4643 (irrelevant)
fixes #5169 (fixed, needs a test)
fixes #5572 (fixed)
fixes #6294 (fixed)
fixes #6417 (fixed, needs a test)
fixes #6768 (fixed, needs a test)
fixes #7120 (fixed, needs a test)
fixes #7185 (irrelevant)
fixes #7497 (fixed)
fixes #7590 (fixed) [already closed?]
fixes #7771 (fixed)
fixes #8227 (fixed)
fixes #8229 (new feature, needs tests, examples)
fixes #6822 (fixed)
fixes #4395 (fixed)


fixes #8391 (fixed, needs test)
fixes #7260 (fixed)
fixes #7454 (fixed, needs test)
fixes #5749 (fixed)
fixes #6259 (fixed)
fixes #4608 (fixed)
fixes #8611 (fixed)",164,232,['status: accepted']
1545,201921915,8083,3834332,2018-07-17 12:18:03,2018-07-18 18:12:18,closed,Support for text glyph hit testing,"Added some initial work to support text glyph hit testing. 


- [X] issues: fixes #7618
",6,2,['status: accepted']
1546,201297819,8080,3834332,2018-07-13 13:52:51,2018-07-14 17:39:33,closed,always use zero angle for marker legends,"- [x] issues: fixes #8077


<img width=""319"" alt=""screen shot 2018-07-13 at 08 49 49"" src=""https://user-images.githubusercontent.com/1078448/42695160-1c24bc0e-867a-11e8-9450-1fe205e74379.png"">
",1,3,['status: accepted']
1547,201075507,8078,3834332,2018-07-12 17:41:19,2018-07-13 13:24:47,closed,Clean up Test Support,"The situation under `/tests` was a huge mess. The directory had dead code, duplicated code, lacked organization (no less than three ""util"" modules), and contained some broken/mistaken things. This PR cleans things up considerably:

* moves all testing support including utils, pytest plugins, etc to `bokeh._testing`. This includes removing `bokeh.util.testing`
* flattens the top level ""tests"" dir to only contain tests and not test support 
* removes dead and disused code, ""cross_browser"", etc. 
* split various ""util"" modules into meaningful submodules under `bokeh._testing.util`
* moved color/term functions to `bokeh.util.terminal`
* added a ""pandas"" plugin so that unweildy fixture imports could be removed throughout
* consolidated to a single top-level `conftest.py` with minimal plugins (test files require more specific plugins as needed)

I left the currently broken integration test code, which is now probably more broken. After this is merged I will rebuild selenium tests from the ground up (possibly removing several pytest dependencies)

Some of the remaining code is also still currently unused, I will use it or dispose of it in the follow on selenium PR. 

Here is `bokeh.testing` after the PR:

```
bokeh/_testing
├── __init__.py
├── plugins
│   ├── __init__.py
│   ├── bokeh_server.py
│   ├── examples_report.jinja
│   ├── examples_report.py
│   ├── file_server.py
│   ├── implicit_mark.py
│   ├── integration_tests.py
│   ├── jupyter_notebook.py
│   ├── log_file.py
│   └── pandas.py
└── util
    ├── __init__.py
    ├── api.py
    ├── chrome_screenshot.js
    ├── examples.py
    ├── filesystem.py
    ├── git.py
    ├── images.py
    ├── s3.py
    ├── screenshot.py
    ├── selenium.py
    └── travis.py
```",4,18,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1548,200751616,8076,3834332,2018-07-11 16:04:54,2018-07-11 17:16:05,closed,Ensure BoxDrawTool does not draw when tool inactive,"This PR adds a simple check to ensure the BoxEditTool does not draw when the tool is inactive. Also adds unit tests to avoid regressions.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/8075
- [x] tests added / passed",0,1,['status: accepted']
1549,200457410,8073,3834332,2018-07-10 16:38:51,2018-08-02 00:30:47,closed,Stark71/8072 prepend,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #8072
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,5,['status: declined']
1550,200208302,8069,3834332,2018-07-09 20:17:45,2018-07-09 22:54:28,closed,Update download_sample_data.py,"It doesn't reference the missing global variable. Instead it treats the string 'file' as part of the path.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: declined']
1551,200197541,8068,3834332,2018-07-09 19:32:14,2018-07-10 20:08:34,closed,clamp bar endpoints to viewport,"- [x] issues: fixes #8060
- [ ] tests added / passed

OP code now generates:

<img width=""603"" alt=""screen shot 2018-07-09 at 12 29 57"" src=""https://user-images.githubusercontent.com/1078448/42471791-e3848f36-8373-11e8-99ef-4e3454d88adc.png"">

Tested manually with `hbar`. Need to verify hover, etc is not impacted. Also need to add at minimum, unit tests for the viewport clamp function, but would like to add some selenium tests on travis directly. 
",2,1,['status: accepted']
1552,200178957,8067,3834332,2018-07-09 18:12:56,2018-07-10 20:09:08,closed,add header_row property to support hiding table headers,"- [x] issues: fixes #6454
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This is not an especially important feature in and of itself, but I plan to use this issue to figure out how to ad back some selenium tests on Travis. ",1,1,['status: accepted']
1553,199976662,8063,3834332,2018-07-09 02:17:11,2018-07-09 02:18:55,closed,replaced this.repaint with this.paint(),"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: declined']
1554,199910391,8062,3834332,2018-07-07 19:24:18,2018-07-11 18:31:46,closed,feature: add built in themes: dark_minimal and light_minimal,"https://github.com/bokeh/bokeh/issues/99
- [x] issues: fixes #99
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Examples of it applied:
Without:
![without_theme](https://user-images.githubusercontent.com/15331990/42413850-10e29d48-81de-11e8-9205-de7fd8308599.PNG)
Lite:
![with_lite](https://user-images.githubusercontent.com/15331990/42413851-10f9714e-81de-11e8-83bb-9a97f5606e71.PNG)
Dark Lite:
![with_dark_lite](https://user-images.githubusercontent.com/15331990/42413849-10cba926-81de-11e8-8935-de3cc1dc02e6.PNG)

Without:
![without_theme_img](https://user-images.githubusercontent.com/15331990/42413854-1cd08c1e-81de-11e8-8d2d-871a460db435.PNG)
Lite:
![with_lite_img](https://user-images.githubusercontent.com/15331990/42413856-203fa5a6-81de-11e8-811a-fd44f935de3b.PNG)
Dark Lite
![with_dark_lite_img](https://user-images.githubusercontent.com/15331990/42413858-2596c7fa-81de-11e8-8d56-3ead065b208c.PNG)

W/o
![without_fourier](https://user-images.githubusercontent.com/15331990/42413861-2a9afb18-81de-11e8-8341-5673e3d2914d.PNG)
lite
![with_lite_fourier](https://user-images.githubusercontent.com/15331990/42413862-2e2b43b4-81de-11e8-840c-fa216f22871d.PNG)
dark_lite
![without_fourier](https://user-images.githubusercontent.com/15331990/42413863-34081438-81de-11e8-8bef-b501175d02bf.PNG)

From hvplot:
w/o
![image](https://user-images.githubusercontent.com/15331990/42413876-63ab5c18-81de-11e8-9a40-f7e36be71335.png)
w/
![image](https://user-images.githubusercontent.com/15331990/42413878-65d517ea-81de-11e8-9092-c6e6e12195dd.png)

More examples of how it compares to
https://pyviz.github.io/hvplot/user_guide/Gridded_Data.html
https://anaconda.org/ahuang11/hvplot_theme/notebook
https://anaconda.org/ahuang11/hvplot_dark_theme

Issues noticed:
the title doesn't update according to the theme (holoviews specific)
the settings set by the theme do not seem to be overwriteable (holoviews specific?)
the theme doesn't scale well for subplots and categorical x (font size is too large, and get's crowded)
box whisker's are black in the dark theme",16,6,['status: accepted']
1555,199734948,8059,3834332,2018-07-06 12:37:17,2018-07-09 04:54:44,closed,fix annulus hit testing with screen units,"Corrects annulus hit testing where outer diameter is specified in screen units. 

Coincidently I noticed you can specify an annulus with an inner diameter greater than the outer diameter, in that case hover fails.

- [X] issues: fixes #2022
- [X] tests passed

",0,1,['status: accepted']
1556,199619002,8057,3834332,2018-07-06 00:40:15,2018-07-12 17:29:57,closed,Added x and y values to the geometries property of cb_data for TapTool,"The Tap Tool doesn't expose any direct access to the calculated range-specific x and y data coordinates. This is available in all the Select tools, and in the Hover tool. 

The method used here is similar to the approach used in the Select and Hover tools in that we step outside the Geometry classes and define a naked object to hold all the values. Most user-side js code will not reference or understand these internal classes and will access the values directly.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #8013 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,2,['status: accepted']
1557,199573331,8056,3834332,2018-07-05 20:03:28,2018-07-05 23:58:33,closed,remove code dependent on IPython pprint machinery,"IPython pretty printer won't work without `_repr_pretty`, having `_repr_pretty` spams the ipython console making it unusable. I am tired of try to work around this, so just removing the whole mess. Perhaps we can add back our own implementation that does not depend on IPython at all in the future. 

cc @mattpap 
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
1558,199562679,8055,3834332,2018-07-05 19:14:47,2018-07-06 18:22:49,closed,remove all deprecations,"Removes all deprecations for upcoming 1.0 release.


",2,2,"['status: accepted', 'type: task']"
1559,199322595,8051,3834332,2018-07-04 20:56:03,2018-07-05 19:52:36,closed,Addresses #8050 Change type of the selectable property of DataTable,"... to allow selectable be a checkbox
Fixes #8050 
",9,4,['status: accepted']
1560,199086897,8049,3834332,2018-07-03 21:25:03,2018-07-03 22:28:23,closed,add validation on extra range names,"- [x] issues: fixes #7320
- [x] tests added / passed

Also cleans up some other minor test and formatting issues. 

Generates this sort of error:
```
In [7]: p = figure()

In [8]: p.xaxis.x_range_name = ""junk""

In [9]: check_integrity([p])
ERROR:bokeh.core.validation.check:E-1020 (BAD_EXTRA_RANGE_NAME): An extra range name is configued with a name that does not correspond to any range: x_range_name='junk' [LinearAxis(id='db4bc5d5-79cf-4d64-89c2-39b7db443848', ...)]```",0,1,['status: accepted']
1561,199036983,8048,3834332,2018-07-03 17:40:02,2018-07-03 18:30:08,closed,format Bokeh warnings more nicely,"- [x] issues: fixes #6362
- [x] tests added / passed

With this change, (Bokeh) warnings are now streamlined:
```
In [5]: from bokeh.models import ColumnDataSource; source = ColumnDataSource(data=dict(a=[1], b=[1,2]))
BokehUserWarning: ColumnDataSource's columns must be of the same length. Current lengths: ('a', 1), ('b', 2)
```
The rationale for dropping the line and lineno is that warnings are typically emitted deep in Bokeh library code, which is not helpful, and also often as part of validation, so that raising the stacklevel is also not useful or practical. 

Non-Bokeh warnings should continue to function as normal. ",0,1,['status: accepted']
1562,198846399,8045,3834332,2018-07-03 04:23:29,2018-07-03 16:21:51,closed,fix ServerContext.sessions bug,"- [x] issues: fixes #7580
- [x] tests added / passed
",0,1,['status: accepted']
1563,198832259,8044,3834332,2018-07-03 02:13:59,2018-07-03 22:33:19,closed,allow recovery from transient script errors,"- [x] issues: fixes #8034
- [x] tests added / passed
",2,1,['status: accepted']
1564,198547705,8041,3834332,2018-07-01 23:06:04,2018-07-01 23:38:01,closed,add some ticker tests,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6117
- [x] tests added / passed
",0,1,['status: accepted']
1565,198292976,8038,3834332,2018-06-29 11:41:20,2018-06-30 05:09:55,closed,improved support for pyinstaller,"A better treatment for freezing bokeh with pyinstaller.

The `_templates` dir should better stay in its original subdirectory than in the project root as implemented in #8008, as it better fits pyinstaller directory layout: as documented [here](https://pythonhosted.org/PyInstaller/hooks.html), `collect_data_files()` as opposed to `--add-data` doesn't support the destination path.

See my [PR3607](https://github.com/pyinstaller/pyinstaller/pull/3607) with the associated pyinstaller hook file which uses the new _templates location.",7,1,"['status: accepted', 'type: task', 'reso: completed']"
1566,198215963,8037,3834332,2018-06-29 05:06:04,2018-06-29 19:12:15,closed,DOC typo (funtion -> function),,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1567,197984809,8036,3834332,2018-06-28 10:26:27,2018-07-02 16:24:39,closed,Added x and y values to the geometries property of cb_data when tapto…,"Addes two additional variables to the cb_data.geometries object when a callback is called from the taptool.

x, and y provide values for the calculated data values for the x and y screen coordinates sx and sy

- [x] issues: fixes #8013 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",4,1,['status: declined']
1568,197839148,8035,3834332,2018-06-27 20:08:05,2018-06-29 19:14:00,closed,add fixture to re-use webdriver in export tests,"- [x] issues: fixes #6548
- [x] tests added / passed
",0,1,['status: accepted']
1569,197739910,8033,3834332,2018-06-27 13:49:43,2018-07-02 16:58:23,closed,warning for large grouped legends,"- [x] issues: fixes #5365
- [x] tests added / passed

OK @bokeh/dev @birdsarah @philippjfr @jlstevens here is an implementation of an approximate  validation warning for when a user does `legend=""foo""` and gets a grouped legend without intending that. Do we want to do this? I guess I am questioning about performance concerns. Thoughts:

* This does not affect any case with explicit `value` or with a legend that does not match a column (or for that matter, a bad column name)
* For cases where grouping will happen, if the user to changes to `value` as a result of the warning then there is no ultimate cost once the change is made
 
So the cost (of uniquing the columns) is borne by anyone who *does* want grouped legends. Is this reasonable? If we do, is 7 the right heuristic cutoff to warn?",3,1,['status: declined']
1570,197681338,8031,3834332,2018-06-27 10:08:50,2018-06-27 18:30:10,closed,Image hover fix for inverted ranges,"
Simple PR to fix the ``ImageView._lrtb`` method, ensuring it returns the correct bounds when the ranges are inverted. Addresses issue #7959.

Here is an example where the y range starts at ten and ends at zero (see the screenshot in #7959 as an example of the incorrect behavior):

![image](https://user-images.githubusercontent.com/890576/41967692-0f98d3d0-79fa-11e8-94d0-a7826d601dab.png)

The code is relatively straightforward although I am not sure I've used the best approach for detecting the inverted ranges.",11,11,['status: accepted']
1571,197529590,8030,3834332,2018-06-26 19:39:29,2018-06-27 01:08:42,closed,handle pd.NaT,"Serializes `pd.NaT` as nan

- [x] issues: fixes #4215
- [x] tests added / passed
",0,1,['status: accepted']
1572,197510496,8029,3834332,2018-06-26 18:20:17,2018-06-26 19:40:52,closed,move log tick filtering to the very end,"- [x] issues: fixes #7976
- [x] tests added / passed
",0,1,['status: accepted']
1573,197480076,8028,3834332,2018-06-26 16:21:31,2018-07-09 17:35:25,closed,Add proof-of-concept Docker container,"As discussed in #2283. Container is pretty minimal now, I'd like @bryevdv to decide on some options, if you could answer yes-no-dont care to the following list that would be great. It is common practice to make Docker containers as minimal as possible. However, there is such a thing as 'too minimal'. Right now I'm only installing the pip/pypi version of bokeh. We could include more, namely:

- Optional dependencies
  - NodeJS
  - Pandas
  - psutil
  - Sphinx
- bokeh tests + dependencies
- bokeh examples
- bokeh source (using git pull & git checkout)
- (mini)conda distribution

Right now I only pin the `tornado` version for old bokeh builds. I could pin more, but I haven't had any trouble so far with this approach (down to `0.12.7`)

- [x] issues: fixes #2283
- Don't think tests are needed for these containers
- [x] release document entry (if new feature or API change)
- [ ] blurb in the release notes
- [x] Update docker-tools documentation (If it's already there (It's not))
- [x] Parameterize Dockerfile (?)
- [x] Implement suggestions build scripts
- [ ] Review
",34,19,['status: accepted']
1574,197244813,8027,3834332,2018-06-25 21:45:41,2018-06-26 00:17:12,closed,handle Pandas PeriodIndex and Timedelta properly,"- [x] issues: fixes #2266 fixes #5426
- [x] tests added / passed

Noticed quite a bit of silliness in working on those two issues, so added some other cleanup. This PR:

* adds proper handling for Pandas `Period` and `PeriodIndex`, also making sure the binary protocol is used for Pandas series when it should be

* clarifies internally that time delta values are not datetimes

* allows Range1d to accept time delta values

* allows DataRange1d to also accept datetimes and time delta values (cannot think of any reason they should not)

* fixes the bizarre `url = NumberSpec` type on `ImageURL`

Thanks to @miccoli for discussion and prompting",1,5,['status: accepted']
1575,196929372,8025,3834332,2018-06-24 02:32:00,2018-07-05 20:46:52,closed,Ellipse and oval hittesting,"WIP to add in hit testing for ovals and ellipse.  Will need some further direction to complete this PR

- [X] issues: fixes #6985
- [X] tests added / passed
",11,9,['status: accepted']
1576,196889090,8022,3834332,2018-06-23 08:06:39,2018-06-23 13:18:38,closed,raise validation error on duplicate factor range factors,"- [x] issues: fixes #3322
- [x] tests added / passed
",0,1,['status: accepted']
1577,196854752,8019,3834332,2018-06-22 22:00:38,2018-06-22 22:45:33,closed,make Plot.select compatible with Model.select usage,"This PR:

* makes the `Plot.select` usage compatible with the `Model.select` method it overrides. 
* moves the private functions in `util.plot_utils` to `models.plots` and deletes the `plot_utils` module.

Discovered during the PR that the exception tests for `Plot.select` were formed incorrectly and would always returned true. 

- [x] issues: fixes #8018
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1578,196796839,8017,3834332,2018-06-22 17:17:51,2018-06-22 19:11:26,closed,Added short usage instructions for examples/app/dash,"Added short usage instructions as per @bryevdv (#8011 comment: https://github.com/bokeh/bokeh/pull/8011#issuecomment-399509585)


",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1579,196768749,8016,3834332,2018-06-22 15:18:30,2018-06-22 21:17:56,closed,test with minimal packages,"This adds a `MINIMAL=1` flag to one unit test build that results in these dependencies being uninstalled:

> pandas scipy notebook scikit-learn sympy flask

As a side effect, all reliance on `unittest.TestCase` has been removed, all tests are ""pytest"" style. As a further result, all use of pandas in unit tests can now be moderated through a `pd` pytest fixture that will automatically skip a test if pandas is not installed, with one exception: The modules in `bokeh.sampledata` heavily depend on pandas and throw a runtime exception stating to install pandas even on just an import . To deal with this the unit test script adds `""and not sampledata""` when `MINIMAL` is set.

- [x] issues: fixes #2596
- [x] tests added / passed
",1,2,['status: accepted']
1580,195894545,8011,3834332,2018-06-19 16:56:59,2018-06-19 17:43:55,closed,Bryanv/013 docs,"
",5,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1581,195650200,8008,3834332,2018-06-18 21:13:37,2018-06-19 06:41:25,closed,Make Bokeh work in frozen scripts,"This PR fixes a bug concerning the interaction between Bokeh and PyInstaller by using Jinja2's `FileSystemLoader` instead of `PackageLoader` (which is currently not supported by PyInstaller), and adjusting the path to the `_templates` folder. It should also fix issues with other freezing tools (like py2exe in #799). However, PyInstaller is probably the most widely used freezing tool and is still actively maintained (unlike e.g. py2exe, whose last release is almost four years old).

Since the changes are in an `if getattr(sys, 'frozen', False)` block (as described in the [PyInstaller documentation](http://pyinstaller.readthedocs.io/en/stable/runtime-information.html)), this PR shouldn't break anything for the ""live"" use.

PyInstaller itself does not copy the `bokeh/core/_templates` folder (which contains files to be loaded by `bokeh/core/templates.py`). When a bundled app starts up, the bootloader stores the absolute path to the bundle folder in `sys._MEIPASS` – and this is where I tell Jinja2 to look for the `_templates` folder.

If you now freeze the script with PyInstaller, the `_templates` folder must be explicitly copied with `--add-data _templates:_templates` (or in the `.spec` file), but that's something the PyInstaller people should mention in their documentation (if my PR is merged, I can get this going).

I'm not sure how to test this (for continuous integration). Creating a bundled app and check if it works seems to be a bit too much for this, well, pretty special use case?

The changes are tested locally on my machine with Bokeh 0.12.16 and PyInstaller 3.3.1 on Ubuntu 18.04 and Python 3.6.5. This is the minimal example that worked:

```python
from bokeh.plotting import figure, output_file, show

# prepare some data
x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]

# output to static HTML file
output_file(""lines.html"", title=""line plot example"")

# create a new plot with a title and axis labels
p = figure(title=""simple line example"", x_axis_label='x', y_axis_label='y')

# add a line renderer with legend and line thickness
p.line(x, y, legend=""Temp."", line_width=2)

# show the results
show(p)
```

If there is anything else I can do, let me know!",4,1,['status: accepted']
1582,195548292,8006,3834332,2018-06-18 14:42:11,2018-06-18 17:42:57,closed,Ignore .vscode folder,"Ignore `.vscode` folder (similar to e.g. `.idea`), especially, in a view of #7494 .

Shall I also create an issue for that?

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: declined']
1583,195504996,8005,3834332,2018-06-18 12:11:56,2018-06-19 06:44:57,closed,bokeh server: reference leak fix,"The #7992 issue originates from the fact that `_callback_objs_by_callable` in document.py and `_next_tick_removers_by_callable` etc. in tornado.py are retaining references, as dictionary keys, to callable objects (and their wrapped versions, correspondingly), passed to `add_next_tick_callback` etc. document methods. I guess, the intention was to group multiple next tick or timeout callbacks for the same callback function in `defaultdict(set)`s. Though, the wrapped callbacks of the same callback function are already different objects and ""won't stack"" in `_next_tick_removers_by_callable`, while passing different callback functions will aggregate in both location, thus doubling the captured reference count.

This PR is fixing it by removing the `key, value` pairs completely, once the `value` is an empty set. This is, probably, the least invasive way to fix the issue, though, not the most performant. Arguably, a simple dict `{callback_obj: callback}` in document.py and `{callback_id: wrapped_callback}` in tornado.py might be better, and can also eliminate the separation between different types of document callbacks in different dictionaries(?). Not sure about the latter in a view of deprecated ways of adding/removing callbacks.

Maybe a couple of tests should be added to verify that the bokeh server doesn't hold (directly and indirectly) any refs to callback functions after their execution.

- [x] issues: fixes #7992 
- [ ] tests added / passed
",4,2,['status: accepted']
1584,195399189,8004,3834332,2018-06-17 22:50:02,2018-06-18 19:41:44,closed,Corrected docs for `dimensions` parameter to BoxZoomTool,"Closes https://github.com/bokeh/bokeh/issues/8000.  Nothing fancy, just cleaning up some docs.  Current version lives [here](bokeh.pydata.org/en/latest/docs/user_guide/tools.html)
",4,3,['status: accepted']
1585,195395512,8003,3834332,2018-06-17 21:11:31,2018-06-18 00:05:30,closed,Updated docs for two-way Jupyter communication,As discussed on gitter,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: notebook']"
1586,195392132,8002,3834332,2018-06-17 19:42:58,2018-07-21 14:20:28,closed,Added workaround when initializing CDS with column named index,"Was not 100% sure of the course of action here. I think that the user expects the column name to be the same, and cares less about the specific name of the index. Which is why I opted to adjust the index name, and not the column name. The warning should help either way for this edge case.

- [x] issues: fixes #6770
- [ ] tests added / passed
",6,1,['status: WIP']
1587,195391015,8001,3834332,2018-06-17 19:15:55,2018-06-18 19:06:39,closed,Fixes #7401: set range with pandas Series,"Access underlying `np.ndarray` when passing `pd.Series`. Also added tests, and made the pandas dependency optional (this is good-form, right?)

- [x] issues: fixes #7401
- [x] tests added / passed
",3,5,['status: accepted']
1588,195318280,7999,3834332,2018-06-16 05:26:48,2018-06-18 00:05:52,closed,Fix hit testing issues for wedge and annular wedge,"Corrects the issues discussed in #7428 and #2080. Namely the incorrect behaviour when the direction is set to clock, and also improving hover tool tip display position for wedge glyphs.

Might be some changing required depending on the exact intention of using angle_between.

- [X] issues: fixes #7428 and #2080
",5,4,['status: accepted']
1589,195280111,7998,3834332,2018-06-15 20:51:47,2018-06-15 21:25:58,closed,Bryanv/7985 gmap pos args,"This problem stemmed from the Bokeh `bokeh.plotting.gmap.GMap` model not being default constructible. Generally speaking all Bokeh models need to be default constructible. This PR also adds a test to assert that.  

- [x] issues: fixes #7985
- [x] tests added / passed
",5,2,['status: accepted']
1590,195048593,7996,3834332,2018-06-15 00:05:27,2018-06-15 19:06:39,closed,Using mappers documentation update,"fixes:  #7995

This is an update to the ""Styling Visual Attributes page"" to document the use of the mappers along with an example. 

A picture of the page (built locally) is attached here as well if folks just want to provide feedback on the text. 

This includes an example where 10 circles are drawn with an diverging color palette based on the y-axis. This pairs nicely with ""Using Palettes"" the first entry on the page. 

thanks



<img width=""1427"" alt=""using mappers documentation"" src=""https://user-images.githubusercontent.com/20745904/41443991-14f000b0-700e-11e8-84c5-a6e4215db3fd.png"">
",4,4,['status: accepted']
1591,194744508,7994,3834332,2018-06-13 23:42:15,2018-06-19 06:35:41,closed,Improve computing of available space for responsive layouts,fixes #7993 ,3,5,['status: accepted']
1592,194116197,7986,3834332,2018-06-11 22:05:09,2018-06-11 22:33:45,closed,Don't make assumptions on DOM/CSS in LayoutDOM.get_width_height(),"No extra CSS is required. `embed/embed_responsive_width_height` works. @Karel-van-de-Plassche's example works as well (to my surprise), but there are some off by a few pixels errors, that make plots cover CSS borders. This seems to be unrelated to the core of the issue and more to CSS box model we use (there is an issue for that).

fixes #7978 ",0,3,['status: accepted']
1593,194043590,7984,3834332,2018-06-11 17:00:09,2018-06-11 17:03:19,closed,temp partial fix allowing scale_both to work in some cases,"ref: #7978 

Not closing the linked issue with this since it is a partial bandaid, at best. 
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: layout']"
1594,193877396,7983,3834332,2018-06-11 05:29:05,2018-06-12 21:13:33,closed,Support line annotations like span but with slope,"Adds support for a sloped line annotation, https://github.com/bokeh/bokeh/issues/6386. 

Initial implementation takes user supplied gradient and y-intercept to render the line. No support worked in for screen units and css rendering, but happy to work these in if they are useful and can make sense.

- [X] issues: fixes #6386 
- [X] tests added / passed
- [X] release document entry (if new feature or API change)
",4,4,['status: accepted']
1595,193841423,7982,3834332,2018-06-10 19:10:33,2018-06-11 16:36:55,closed,fix up selection handling,"- [x] issues: fixes #7924 
- [x] issues: fixes #7891
- [ ] tests added / passed

These issues actually seem to be left over issues from the selection refactor. The first commit here fixes both issues but I need to do more testing to see if anything else is broken. ",2,1,['status: accepted']
1596,193686334,7980,3834332,2018-06-08 18:11:02,2018-06-10 16:55:42,closed,don't generate detail validation stings for purely internal checks,"- [x] issues: fixes #7977
- [x] tests added / passed

Will add tests after it is determined that this is of reasonable benefit. ",1,9,['status: accepted']
1597,193678538,7979,3834332,2018-06-08 17:34:39,2018-06-11 17:01:09,closed,Rewrite bokehjs' tests in TypeScript (part 2),addresses #7864,0,17,['status: accepted']
1598,193478497,7975,3834332,2018-06-08 00:06:47,2018-06-08 21:49:32,closed,cache jitter for identical input lengths,issues: fixes #7915 ,1,3,['status: accepted']
1599,193149751,7973,3834332,2018-06-06 21:45:43,2018-06-06 21:52:56,closed,Add new maintainer to the list,@bryevdv has asked me to make regular dev builds,0,1,"['status: accepted', 'type: task', 'reso: completed']"
1600,193135987,7972,3834332,2018-06-06 20:47:42,2018-07-02 21:51:29,closed,Add bokeh multi_line script,"The script target is to draw devices data traffic (Upbytes + Downbytes).
The Data.csv contain the concatenated data from multi CSV file.


- [x] issues: #7969 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,4,['status: declined']
1601,193120191,7971,3834332,2018-06-06 19:44:21,2018-07-17 23:30:04,closed,Manage plot aspect on layout level,"This is an early WIP and a playground for testing various approaches.

fixes #5186 (and more)
",1,1,['status: superseded']
1602,193058997,7968,3834332,2018-06-06 15:45:58,2018-06-06 17:29:01,closed,Typo fixed in image w parameter (height instead of width),"- [X] issues: fixes #7967
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1603,192840010,7963,3834332,2018-06-05 21:21:38,2018-06-05 22:01:31,closed,Run `npm install` automatically if package.json changed,fixes #7962 ,0,1,['status: accepted']
1604,192799132,7961,3834332,2018-06-05 18:36:46,2018-06-05 21:36:23,closed,add a cumsum transform to cumulatively sum a single column,"I ran across the SO question **[Create pie-chart using bokeh with dictionary
](https://stackoverflow.com/questions/50697847/create-pie-chart-using-bokeh-with-dictionary)** and thought I woudl see if it could be done with `Stack` but soon realized that it could not, since `Stack` stacks multiple entire columns element-wise. It occured to me that a cummulative sum was a very useful but missing piece that would also be trivial to implement, so I threw together this PR. 

I will add docs and tests in subsequent commits. 
",1,6,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1605,192664999,7958,3834332,2018-06-05 10:47:15,2018-06-05 20:07:41,closed,Replace esprima with TypeScript compiler API,"fixes #7957 
",0,4,['status: accepted']
1606,192561029,7956,3834332,2018-06-05 00:22:42,2018-06-05 05:29:03,closed,Changed default line_join from miter to bevel,"- [x] issues: fixes #7951
- [x] release document entry (if new feature or API change)

In every case where I can detect a difference from the current value, the change is an improvement.  E.g. from a [TriMesh example](https://holoviews.org/reference/elements/bokeh/TriMesh.html), before:
![image](https://user-images.githubusercontent.com/1695496/40948169-5b043768-682c-11e8-8200-21275ea03279.png)
and after:
![image](https://user-images.githubusercontent.com/1695496/40948180-698b325a-682c-11e8-9aec-1507d47b70e5.png)
(see all the spurious corners along the top edge of the image above, and how they disappear on the bottom image.)
Thanks to @bryevdv for the code.",6,4,['status: accepted']
1607,192508886,7955,3834332,2018-06-04 19:46:24,2018-06-05 01:06:03,closed,add option to set websocket_max_message_size,"- [x] issues: fixes #7374
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

I was going to raise the min Tornado version to 4.5 but @bdarnell advised that earlier versions will just silently ignore the value rather than error out, so I have merely documented this fact. 

The tests ",3,3,['status: accepted']
1608,192505731,7954,3834332,2018-06-04 19:32:39,2018-06-04 20:28:16,closed,Ensured the PolyDraw tool correctly handles typed array paths,"Small fix to allow the PolyDraw tool to edit a data source containing typed array paths, which have been added after starting to edit the data source when the arrays are usually converted.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/7953
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1609,192215570,7950,3834332,2018-06-02 20:11:03,2018-06-02 20:11:12,closed,Bryanv/build cleanup,This removes some junk from the CDN and docs server cutover. I was hoping to also get rid of `secrets.enc.tar` but will leave that for a separate PR. ,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1610,192194295,7948,3834332,2018-06-02 11:53:38,2018-06-04 20:07:15,closed,Exposed Range1d initial start/end properties,"This PR does two things, first of all it exposes the ``initial_start`` and ``initial_end`` attributes as properties on the ``Range1d`` model. Secondly it ensures that tile sources override these properties since they sometimes adjust the initial ranges on initialization to enforce the correct aspect ratio.

Setting the initial ranges is generally useful since you often want to toggle between different views and currently the reset tool is not very useful in these scenarios. The remaining question is whether to expose these properties on the ``DataRange1d`` model as well, I'm leaning towards not exposing them but I'm not entirely sure.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/6320 and https://github.com/bokeh/bokeh/issues/7936
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",12,6,['status: accepted']
1611,192011539,7947,3834332,2018-06-01 11:46:43,2018-06-01 15:16:53,closed,Upgrade to TypeScript 2.9.1,fixes #7946 ,0,2,['status: accepted']
1612,191264946,7942,3834332,2018-05-29 20:44:36,2018-05-29 23:54:02,closed,add a private _clear_extensions method that the docs can use for now,"- [x] issues: fixes #7905
- [ ] tests added / passed

@mattpap if you think this (or something like it) should be made public please let me know and I will add tests and docs. Otherwise I think this is just a stopgap measure until something more comprehensive can be undertaken. ",1,1,['status: accepted']
1613,191214706,7941,3834332,2018-05-29 17:16:15,2018-05-29 18:24:20,closed,"Update docs: the HoverTool attribute is ""formatters""",,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1614,191207224,7940,3834332,2018-05-29 16:45:13,2018-05-29 18:24:05,closed,Expired JSFiddle removed,,1,1,['status: accepted']
1615,191200834,7939,3834332,2018-05-29 16:19:54,2018-05-29 16:51:00,closed,ensure on_event works with unicode event names,"
- [x] issues: fixes #7935
- [x] tests added / passed
",0,1,['status: accepted']
1616,190794035,7938,3834332,2018-05-27 15:50:29,2018-05-30 21:50:38,closed,Addresses #7937 Add support for ajax data source in TableWidget,"Invokes source.setup() if the source has such a method, similar to [GlyphRenderer.ts#106](https://github.com/bokeh/bokeh/blob/965989c1335d64ea9742560c15feabfe72f6c1d9/bokehjs/src/lib/models/renderers/glyph_renderer.ts#L106)

issues: fixes #7937",6,7,['status: accepted']
1617,190645686,7934,3834332,2018-05-25 17:01:42,2018-05-25 20:34:16,closed,get gunicorn example working again (py3 only)," issues: fixes #7904
",0,1,['status: accepted']
1618,190436535,7932,3834332,2018-05-24 22:23:45,2018-05-24 23:50:13,closed,Make MultiSelect unselect previously selected items,fixes #7926 ,0,1,['status: accepted']
1619,190431784,7931,3834332,2018-05-24 21:58:35,2018-05-24 23:51:02,closed,Update docs regarding the implementation language of bokehjs,"fixes #7930 
",0,1,['status: accepted']
1620,190377003,7929,3834332,2018-05-24 18:15:49,2018-05-24 18:19:34,closed,Don't use known_hosts from secrets ,Part of #7922 ,0,1,['status: accepted']
1621,190356196,7928,3834332,2018-05-24 16:55:22,2018-05-24 17:26:54,closed,parameterize RS urls,"cc @lilmatt 

closes #7922 ",0,1,['status: accepted']
1622,189787357,7925,3834332,2018-05-22 20:46:58,2018-05-23 16:30:30,closed,Correct off-by-one error in example in documentation.,"Do this because it totally tripped me up when I used the example structure as a template to iterate from.

I know the Pull Request template requested an issue to be made first, but it seemed like overkill in this case.  I will go do so upon request though.

Thanks for the great tool!",1,1,"['type: bug', 'tag: component: docs', 'status: accepted']"
1623,189690346,7923,3834332,2018-05-22 14:49:56,2018-05-24 14:26:18,closed,Test removing encrypted environment variable,Part of #7922 ,0,6,['status: accepted']
1624,189212492,7921,3834332,2018-05-20 00:09:33,2018-05-25 01:57:36,closed,Bryanv/usability,"@pzwang suggested trying to get more in the ""user mind"" this PR is an attempt to make some common things easier than they currently are. In particular:

* add `$name` special variable to shoe glyph renderer `name`
* adds `tooltips` convenience arg to `Figure`
* adds `Plot.hover` accessor

all of which make simple hover tool cases much easier to get up and running. Also update various examples to pass dataframes or dicts directly as `source` where possible.  

I'd like to try and solve at least one more issue, which is there is not a good way to add a single hover tool to a `vbar_stack` etc that covers the stacked quantities. 

cc @mattpap for any early thoughts. 

- [x] tests added / passed
- [x] release document entry (if new feature or API change)


",7,8,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1625,189150586,7920,3834332,2018-05-18 22:45:46,2018-05-23 19:32:54,closed,Replace gulp with a more lightweight solution,"This drops gulp, all its plugins and a few other modules, reducing the size of our dependency tree by 2/3.

To run the build at this stage issue:
```sh
node make build # or other task name
```
To preserve the old workflow, e.g. in bash, you can add:
```
alias gulp='node make'
```
to `~/.bash_aliases`.

Issues to resolve:

- [ ] ~~make `gulp task-name` still work (assuming gulp is installed with `npm install -g gulp`)~~

This won't work, because even if gulp (or to be specific gulp-cli) is installed globally, it still requires 
`gulp` to be installed locally, which defeats the purpose of this PR. One can make an alias to `node gulpfile.js` to get around this.

- [x] rename `gulpfile.js` and `gulp/` to make it clear we don't use gulp anymore

`gulpfile.js` is gone and `gulp/` was renamed to `make/`.

- [ ] fix source map support for `*.min.js` files

This will be fixed in PR #7851

- [ ] ~~restore support for watch tasks~~

fixes #7919 ",1,28,['status: accepted']
1626,188809664,7918,3834332,2018-05-17 17:33:23,2018-05-19 23:19:52,closed,update to gulp 4,"- [x] tests added / passed

@mattpap I know I said I'd hold off on this, but the changes were minimal, and get audit  results down to:

```
[!] 4 vulnerabilities found [7118 packages audited]
    Severity: 1 Low | 3 Moderate
    Run `npm audit` for more detail
```

Additionally I'd like to consider the custom build question more. There are definitely benefits to owning everything, but also drawbacks, namely the ability to attract and integrate other JS contributors if everything we do is unique and bespoke. 
",9,3,['status: superseded']
1627,188729774,7917,3834332,2018-05-17 13:03:23,2018-05-17 13:36:07,closed,Pin pandas to version < 0.23,"fixes #7916 
",0,1,['status: accepted']
1628,188598360,7914,3834332,2018-05-17 00:57:43,2018-05-19 23:18:11,closed,Made tile attributions less distracting,"As described in https://github.com/bokeh/bokeh/issues/7908, the attribution text for tile sources is currently quite distractingly large, particularly for small plots:

![image](https://user-images.githubusercontent.com/1695496/40151049-2d1c8e6a-5943-11e8-8d0c-682a41d0a883.png)

After applying this PR, the text should still be readable, but is less distracting:

![image](https://user-images.githubusercontent.com/1695496/40150898-18a69512-5942-11e8-9872-aef8c2e25509.png)

Open issue: Is there a way to avoid coloring the link text blue?  It's very difficult to read in certain cases (see the black and white Stamen example above), and it's hard to make a background color that works well for both black and bright blue text when combined with various elements that might be in the map tiles.  I can see how to change any CSS elements that apply to the general text here, but not for link anchors.


",20,3,['status: accepted']
1629,188259462,7912,3834332,2018-05-15 21:21:53,2018-05-16 10:42:56,closed,Make bokehjs' unit tests more robust,fixes #7911 ,1,5,['status: accepted']
1630,188190385,7910,3834332,2018-05-15 16:45:47,2018-05-16 13:32:18,closed,Bryanv/test build cleanup,"WIP work toward #7880

cc @mattpap just FYI",2,31,['status: accepted']
1631,188109386,7907,3834332,2018-05-15 12:21:08,2018-05-15 13:27:13,closed,Fix release month for 0.12.16 in docs,"Does it makes sense to change Apr to May for 0.12.16 release?  Because the final version was released on 14 of May.

And should I create an issue for such minor change?

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted']"
1632,187864696,7902,3834332,2018-05-14 15:26:05,2018-05-14 16:02:35,closed,Bryan/01216 docs,"
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
1633,187711916,7895,3834332,2018-05-14 03:25:06,2018-05-14 15:36:46,closed,fix typos,"containtain --> contained
embeeded --> embedded

Issue #7896",1,2,['status: accepted']
1634,187675096,7893,3834332,2018-05-13 15:14:23,2018-05-25 20:35:01,closed,Fixes #3596: Warn on generating static HTML with Python callbacks,"Thought the safest way to check this is on static HTML generation. Does not warn when generating JSON though, but don't think it is needed. You can test this functionality with this snippet:

``` python
from bokeh.io import curdoc, show
from bokeh.plotting import figure
from bokeh.models.widgets import Button
from bokeh.models import CustomJS
from bokeh.layouts import column
from bokeh.events import ButtonClick

from IPython import embed

# Create plot and buttons
plot = figure(plot_height=400, plot_width=400)
click_button = Button()
change_button = Button()
event_button = Button()
change_js_button = Button()
event_js_button = Button()

# Define callbacks
def handler(*args):
    print('Clicked!')

def handler2(attr, old, new):
    print('Clicked!')

js_handler = CustomJS(code='console.log(""JS:Click"")')

# Connect callbacks
click_button.on_click(handler)
change_button.on_change('clicks', handler2)
event_button.on_event(ButtonClick, handler)
change_js_button.js_on_click(js_handler)
event_js_button.js_on_event(ButtonClick, js_handler)

# Add to layout. Run with `bokeh serve` for no warnings, or run with python or `bokeh html` for warnings
layout = column(plot, click_button, change_button, event_button, change_js_button, event_js_button)
curdoc().add_root(layout)
show(layout)
```

- [x] issues: fixes #3596
- [x] tests added / passed

Was not sure where and if to put a test for this, not very familiar with selinium, but looking into it.",15,7,['status: accepted']
1635,187630394,7892,3834332,2018-05-12 17:02:59,2018-05-12 20:53:04,closed,correctly export unicode content with unminified resources,"- [x] issues: fixes #7885
- [x] tests added / passed

cc @mattpap @philippjfr ",6,2,['status: accepted']
1636,187316258,7889,3834332,2018-05-10 21:46:20,2018-11-29 14:58:36,closed,"Don't use encode_utf8(), keep unicode and encode when writing","This is a bit excessive to fix #7885, however, I was curious how badly I will break bokeh when I remove all `encode_utf8()` calls. The only case where I needed to add `.encode(""utf-8"")` (in both 2 and 3) was when comparing HMAC. Otherwise it's sufficient to make sure files are open with `io.open(..., ""w"", encoding=""utf-8"")`. Lets see if tests are all green (I verified unit tests locally). This is a breaking change, I didn't update docstrings, etc. Some removed tests could be updated and restored.

fixes #7901 
",6,3,['status: declined']
1637,187278888,7887,3834332,2018-05-10 19:06:05,2018-05-10 20:33:44,closed,Fix detect_phantomjs() when shutil.which() returns None,"fixes #7886 
",0,1,['status: accepted']
1638,187087827,7882,3834332,2018-05-10 02:45:24,2018-05-10 14:44:32,closed,Work around various test stupidity,"ref: #7865

@mattpap this is a minimal PR that seems to get tests running again on mocha 4, I agree BokehJS unit tests need a top-to-bottom overhaul but that will have to be after this release.",8,3,"['tag: component: tests', 'status: accepted', 'type: task']"
1639,187021330,7881,3834332,2018-05-09 19:46:49,2018-05-10 18:18:19,closed,Image hover documentation and tests,"
This PR follows on from #7651 to add an example, an entry in the user guide, other miscellaneous documentation (e.g a pointer from the image glyph section) and unit tests.

In the first commit a new ``tools_hover_tooltips_image.py`` example is added which looks like this:

<img src=""https://user-images.githubusercontent.com/890576/39835969-cf3fe040-53c9-11e8-9df7-3b215c73b661.png"" width=""50%""></img>

I'm open to suggestions on how to improve this example. In particular, @bryevdv suggested that the bit mask would look better if the two colors contrasted less.",10,9,"['type: feature', 'tag: component: docs', 'status: accepted']"
1640,187016535,7879,3834332,2018-05-09 19:25:36,2018-05-09 22:04:20,closed,resolve reported npm issues,"@mattpap npm was reporting several vulnerabilities, some ""high"" or ""ciritical"". All of them were in `devDependencies` as far as I could tell, but I'd still rather be visibly in front of these things. I made the changes it suggested, things seem to build fine, and tests pass. Do you have any comments?

partial for #7880 ",9,4,"['status: ready', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
1641,187001277,7878,3834332,2018-05-09 18:22:09,2018-05-09 19:23:16,closed,add new MPL cividis palette,"- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Wanted to do this before forgetting about it:

<img width=""768"" alt=""screen shot 2018-05-09 at 11 16 19"" src=""https://user-images.githubusercontent.com/1078448/39832073-19f7d02e-537b-11e8-8d9c-2e622abcbcb7.png"">


<img width=""368"" alt=""screen shot 2018-05-09 at 11 16 31"" src=""https://user-images.githubusercontent.com/1078448/39832084-1e3cc932-537b-11e8-8fcc-e112180d6c95.png"">
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
1642,186912390,7876,3834332,2018-05-09 12:52:32,2018-05-16 10:44:13,closed,Remove unnecessary usage of any type from inspectors/hover_tool,"address #7875 
",1,5,['status: accepted']
1643,186817549,7874,3834332,2018-05-09 04:56:27,2018-05-09 05:29:41,closed,make grid bands handle ends correctly,"- [x] issues: fixes #6698
- [x] tests added / passed

Does not fix the flickering issue, going to punt on that. But makes sure the ends are always alternating from the first full band:

<img width=""362"" alt=""screen shot 2018-05-08 at 21 53 09"" src=""https://user-images.githubusercontent.com/1078448/39796296-9288b948-530a-11e8-8a01-a67a6d974dcb.png"">
",1,1,['status: accepted']
1644,186768857,7873,3834332,2018-05-08 22:06:28,2018-05-08 22:49:28,closed,update Dropdown.default_value docs,"- [x] issues: fixes #4915
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1645,186727492,7871,3834332,2018-05-08 19:07:13,2018-05-08 19:57:56,closed,use whole doc for saving,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7621
- [x] tests added / passed
",1,1,['status: accepted']
1646,186722107,7869,3834332,2018-05-08 18:46:11,2018-05-08 19:25:00,closed,return highest available resolution if that is all the is available,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7868
- [x] tests added / passed
",0,1,['status: accepted']
1647,186497134,7865,3834332,2018-05-08 00:17:34,2018-05-09 22:11:17,closed,Rewrite test/core in TypeScript,"addresses #7864 
",17,47,['status: accepted']
1648,186463537,7863,3834332,2018-05-07 21:01:22,2018-05-07 22:46:50,closed,use full year in default month format,issues: fixes #7858 ,0,1,['status: accepted']
1649,186456136,7862,3834332,2018-05-07 20:31:29,2018-05-07 22:45:17,closed,Update docstring,"issues: fixes #7860 
",0,1,['status: accepted']
1650,186374968,7861,3834332,2018-05-07 14:53:58,2018-09-05 21:40:34,closed,Proof of concept contributed module: ion.RangeSlider,"Based on:
https://github.com/bokeh/bokeh/issues/7852
https://github.com/Karel-van-de-Plassche/bokeh-ion-rangeslider

Related to:
https://github.com/bokeh/bokeh/issues/7853
https://github.com/bokeh/bokeh/issues/7852

To do:
- [ ] issues: fixes #7853 and #7852 
- [ ] Approve folder structure [by: @mattpap]
- [ ] Decide how to handle dependencies (`jquery` + `ion-rangeslider` + `@types/jquery` + `@types/ion-rangeslider`)
- [ ] Decide to split this into RangeSlider and SingleSlider, right now this is set by 'slider_type` attribute. [by @mattpap or @bryevdv ]
- [ ] Tests passed
- [ ] Add tests
- [ ] release document entry (if new feature or API change)

Fix bugs:
- [ ] `Uncaught Error: Model 'IonRangeSlider' does not exist. This could be due to a widget
                     or a custom model not being registered before first usage.`
- [ ] Dependency collision between `es6-promise` and `jquery` `@types`
- [ ] Python callbacks not working

Fixed in external repo (not in this pull request)
- Prettify CustomJS function",3,4,['status: declined']
1651,186134174,7859,3834332,2018-05-05 02:03:11,2018-05-25 16:12:43,closed,Add link to Bokeh tutorial notebooks,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: refs #7831 
",8,4,['status: accepted']
1652,185795089,7856,3834332,2018-05-03 18:07:14,2018-05-03 21:42:47,closed,misc docs,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7854 
- [x] issues: fixes #7840
- [x] issues: fixes #7835 
- [x] issues: fixes #6193
- [x] release document entry (if new feature or API change)
",0,4,['status: accepted']
1653,185384229,7855,3834332,2018-05-02 09:37:42,2018-05-02 17:18:35,closed,Added how-to set up conda environment using fish shell,"- [x] issues: Related to #7852
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)",1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1654,185208155,7851,3834332,2018-05-01 15:50:54,2018-05-25 12:59:19,closed,Improve speed of bokehjs' build,"- [x] minify individual files
- [ ] incremental compilation

fixes #7848 
",2,1,['status: declined']
1655,185206602,7850,3834332,2018-05-01 15:43:54,2018-05-01 19:41:49,closed,Fixed name collision in ion_range_slider example,"- [x] issues: fixes #7849
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",10,1,['status: accepted']
1656,185066180,7846,3834332,2018-04-30 21:12:43,2019-02-18 14:36:40,closed,Allow to configure gesture type with TapTool,"fixes #7845 
",1,3,['status: declined']
1657,185042196,7844,3834332,2018-04-30 19:26:44,2018-05-01 17:00:58,closed,Clean up package.json,"Removes unnecessary dependencies from `package.json`.

fixes #7841 ",1,6,['status: accepted']
1658,185031032,7843,3834332,2018-04-30 18:37:24,2018-05-01 08:52:52,closed,Proofread Quickstart,fixes #7842,1,1,['status: accepted']
1659,184843339,7839,3834332,2018-04-29 16:45:43,2018-06-07 20:28:58,closed,Add Range Tool,"Super WIP

- [x] issues: fixes #7795
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",15,12,['status: accepted']
1660,184697159,7836,3834332,2018-04-27 18:39:05,2018-04-27 20:09:00,closed,Minor fix in docs,"A missing ""<"" is added to an example in embed.rst.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1661,184133824,7833,3834332,2018-04-25 19:05:43,2018-04-25 23:32:27,closed,have expressions respond properly to stream/patch,"- [x] issues: fixes #7823
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This makes `v_compute` on the base class to do the caching, and delegate to `_v_compute`. If users make a subclass a subclass with `v_compute` it will now no longer cache. They can implement `_v_compute` if they desire that (docs updated accordingly). This is definitely more sensible. ",2,1,['status: accepted']
1662,183886592,7830,3834332,2018-04-24 22:58:07,2018-05-02 17:24:19,closed,Accommodate more color and size options in Crossfilter Example,"These changes accommodate including data features with less than 20 distinct values in the ""Color"" and ""Size"" options.   

- [x] issues: fixes #7725 
",3,4,['status: accepted']
1663,183806601,7829,3834332,2018-04-24 17:16:03,2018-04-24 17:49:27,closed,Update for npm 6,"
Other PRs will need to rebase/merge master after this. 

cc @mattpap ",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1664,183796983,7828,3834332,2018-04-24 16:38:07,2018-04-24 18:46:17,closed,use internal slider value for keypress action,"issues: fixes #7349

",0,1,['status: accepted']
1665,183541997,7827,3834332,2018-04-23 20:02:58,2018-04-24 18:48:40,closed,support axes at fixed locations,"- [x] issues: fixes #113
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This implements the plan outlined in #113 and produces output such as the following:

<img width=""335"" alt=""screen shot 2018-04-23 at 12 59 01"" src=""https://user-images.githubusercontent.com/1078448/39150234-7e4d283a-46f6-11e8-9f86-210fcf707183.png"">

Including working with categorgical coordinates:

<img width=""319"" alt=""screen shot 2018-04-23 at 12 59 27"" src=""https://user-images.githubusercontent.com/1078448/39150248-87bf9510-46f6-11e8-90eb-826ec8d4adee.png"">

It's worth noting here that at least for now, axes labels are suppressed when a fixed location is provided. 

@mattpap I'd like to add some more docs and examples (and a few tests) but before going further I'd like your comments. 
",2,6,['status: accepted']
1666,183512588,7824,3834332,2018-04-23 18:01:29,2018-04-23 19:32:10,closed,update docs for showing apps in notebooks,"- [x] issues: fixes #7080
- [x] release document entry (if new feature or API change)

Updated docs to reflect that `notebook_url=""*""` is not supportable, since Jupyter will not provide an API to determine the server location. ",0,1,['status: accepted']
1667,183280113,7821,3834332,2018-04-22 15:56:43,2018-04-22 15:57:18,closed,"Revert ""Set a data source's inspected taking multiple renderers into account""",Reverts bokeh/bokeh#7617,0,2,"['status: accepted', 'type: task', 'reso: completed']"
1668,183268144,7820,3834332,2018-04-22 11:23:36,2018-05-08 03:08:24,closed,Add support for center origin to box select/zoom tools,"fixes #3126
",2,2,['status: accepted']
1669,183146537,7818,3834332,2018-04-20 19:10:18,2018-04-21 16:00:36,closed,fix missing python and data table updates,"- [x] issues: fixes #7745
- [x] issues: fixes #7597 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This fixes both issues that got lumped into #7745

The part missing for python updates was a self-assign to `.data`, so that the doc notification machinery is invoked. The part missing for the table updates was a more explicit change signal on `.data`. Not sure why it worked before, though. Data tables have required that signal for a long time AFAICT. 

@philippjfr are there other places that the ""self-assign"" should go, e.g. for other tools, so that python gets updates at the appropriate times?

@mattpap any comments welcome

We do need to document that Python side updates will only happen at the end of these edit operations and not continuously throughout. ",7,2,['status: accepted']
1670,182959139,7817,3834332,2018-04-20 04:47:19,2018-04-20 05:29:56,closed,remove spurious surface3d color property,"
- [x] issues: fixes #7814
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1671,182918253,7816,3834332,2018-04-19 22:45:50,2018-04-20 15:46:40,closed,AjaxDataSource improvements,"- [x] issues: fixes #4286
- [x] issues: fixes #4298
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1672,182653497,7813,3834332,2018-04-19 02:57:48,2018-04-19 19:10:54,closed,add downstream test report,"fixes: #7720 

For now at least this test does not fail, it only generates a report. Want to avoid a situation where one or other project is intentionally out out of sync (major revision) and then the test can't be made to pass at all in any way for some interval",6,2,['status: accepted']
1673,182650726,7812,3834332,2018-04-19 02:33:32,2018-04-19 03:03:17,closed,Remove ad-supported CGE,"- [x] issues: fixes #5911

",2,1,['status: accepted']
1674,182484934,7808,3834332,2018-04-18 13:47:52,2018-04-18 22:24:11,closed,Less strict Callback.args and improve webgl/line_compare example,"I'm not sure why we did insist on having `args = Dict(String, Instance(Model))`, which is very limiting. `Dict(String, Any)` allows e.g. having a list of models or a constant (instead of using Python's string formatting).

fixes #7807 ",5,4,['status: accepted']
1675,182408913,7806,3834332,2018-04-18 08:53:14,2018-04-18 18:13:52,closed,DOM: add class to safely()'s error box,"Allow to hide, display, or relocate error box to be useful and valuable on complicated web pages.
Basic style do not support (and not aimed to do so) webpages with navbars, relative positioning 
and so on, this integration is delegated to webpage designer through `bokeh-error-box-into-flames` 
css class.

> All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7802
- [ ] **no** tests added
- [ ] **no** new release document entry (if new feature or API change)
",2,1,['status: accepted']
1676,182261529,7804,3834332,2018-04-17 18:53:04,2018-04-17 21:28:22,closed,Handle cases where TouchEvent.touches may be empty,"This needs to be verified on an actual mobile device.

fixes #7801 
",4,1,['status: accepted']
1677,182005025,7800,3834332,2018-04-16 22:26:37,2018-04-18 17:30:33,closed,Add relative path option and handling to sphinx ext.,"Add 'bokeh_plot_use_relative_paths' sphinx config option which places
relative path strings in the generated html to render bokeh plots served
statically.

Default is false which leaves the paths unchanged as they currently are.

-  partially addresses #5955 
",6,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1678,182004881,7799,3834332,2018-04-16 22:25:47,2018-04-19 00:11:34,closed,Make defaults match between bokeh and bokehjs,"fixes #7750
fixes #7803 ",13,6,['status: accepted']
1679,181932539,7798,3834332,2018-04-16 17:11:07,2018-04-16 18:26:52,closed,Add an epilog to 'bokeh --help` regarding subcommands' help,"fixes #7797 
",0,1,['status: accepted']
1680,181672042,7794,3834332,2018-04-14 23:24:32,2018-04-16 17:17:58,closed,Make handling of UI events more robust,"So far this fixes `z-index` mess and doesn't allow propagation of events from toolbar to plot area. This makes, however, the appearance of special overlays dependent on the order of insertion of tools.

fixes #7627
",1,1,['status: accepted']
1681,181042974,7792,3834332,2018-04-11 22:15:45,2018-04-12 14:00:43,closed,Finalize rename bokehjs/src/{coffee->lib},"fixes #7786
",0,2,['status: accepted']
1682,181037916,7791,3834332,2018-04-11 21:50:04,2018-04-12 08:44:47,closed,Add missing break statements to PlotCanvas.save(),fixes #7790 ,0,1,['status: accepted']
1683,180923460,7787,3834332,2018-04-11 14:30:04,2018-04-11 21:43:59,closed,Rename bokehjs/src/{coffee->lib},"Do **NOT** squash merge.

fixes #7786 ",1,2,['status: accepted']
1684,180889513,7784,3834332,2018-04-11 12:39:26,2018-04-11 19:36:06,closed,Make detection of a spec more robust,"fixes #7783 
",2,3,['status: accepted']
1685,180764505,7782,3834332,2018-04-11 00:53:26,2018-04-12 14:19:32,closed,Add docstring to get_screenshot_as_png,"This PR adds a docstring to `get_screenshot_as_png` in `bokeh.io.exports` as mentioned [on SO](https://stackoverflow.com/questions/49744664/how-to-generate-static-bokeh-plots-in-jupyter-notebook/49755653#49755653). Since it's the internal function to `export_png`, I treated it as though the docstring would be similar. Happy to modify it or any of the associated github text to suit project preferences.

- [ ] issues: fixes #7781 

",1,2,['status: accepted']
1686,180742571,7780,3834332,2018-04-10 22:15:17,2018-04-11 15:45:57,closed,Silence deprecation warning from selenium.webdriver.phantomjs,"I'm marking this as ""fixes"". We should open new issue for adding support for chromedriver (and firefoxdriver). With this PR we will only need to change one place in the code instead of a dozen. This also adds `try-finally` blocks to make sure `terminate_webdriver()` is actually called if failure occurs.

fixes #7510 
",2,1,['status: accepted']
1687,180731796,7779,3834332,2018-04-10 21:24:39,2018-04-10 22:19:50,closed,Establish Python 3 as the default for testing,"fixes #7777
",0,1,['status: accepted']
1688,180730361,7778,3834332,2018-04-10 21:18:33,2018-04-10 22:02:16,closed,Remove all deprecations before 0.12.15,,0,2,"['status: accepted', 'type: task', 'reso: completed']"
1689,180715351,7776,3834332,2018-04-10 20:15:51,2018-04-10 21:51:53,closed,rip out API decorators and spec tests,"- [x] issues: fixes #7774
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap @p-himik unless there is objection I'd like to merge this now and we can figure out the replacement convention separately. ",4,2,['status: accepted']
1690,180129277,7769,3834332,2018-04-07 23:00:13,2018-04-09 17:21:41,closed,factor and improve compute_renderers for tools,"- [x] issues: fixes #3442
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,8,['status: accepted']
1691,180063116,7767,3834332,2018-04-06 21:56:04,2018-04-07 02:40:23,closed,Type core/selection_manager and handle null hit test result,fixes #7705 ,0,2,['status: accepted']
1692,180003472,7765,3834332,2018-04-06 17:04:35,2018-04-06 19:13:08,closed,added 'pan' to the hexbin example,"When I was playing with this example I found myself wanting to pan after zooming in.
I thought this might be a sane default to add.  Granted others could add that in later but I thought it would be nice to have right off the bat.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1693,179815476,7764,3834332,2018-04-05 22:40:26,2018-04-06 16:08:26,closed,Don't report multiple S3 upload errors for PRs submitted from forks,"fixes #6240
",0,1,['status: accepted']
1694,179803046,7763,3834332,2018-04-05 21:34:33,2018-04-06 01:47:02,closed,Don't reopen temp files to avoid platform specific issues,fixes #7761 ,0,1,['status: accepted']
1695,179700616,7760,3834332,2018-04-05 14:49:18,2018-04-07 02:41:01,closed,Move outstanding integration tests to examples/integration,"fixes #7759 
fixes #7741",2,7,['status: accepted']
1696,179565115,7757,3834332,2018-04-05 03:38:01,2018-04-06 15:55:15,closed,add reset signal to plots,"- [x] issues: fixes #5071

example:

```py
from bokeh.io import show
from bokeh.layouts import column
from bokeh.models import Button, CustomJS
from bokeh.plotting import figure

p = figure(tools=""reset,pan,wheel_zoom,lasso_select"")
p.circle(list(range(10)), list(range(10)))

b = Button()
b.js_on_click(CustomJS(args=dict(p=p), code=""""""
    p.reset.emit()
""""""))

show(column(p, b))
```",3,2,['status: accepted']
1697,179553849,7756,3834332,2018-04-05 01:43:24,2018-04-05 13:35:57,closed,restore old custom.js contents if it exists,"- [x] issues: fixes #3903

AFAIK we aren't currently using this fixture, but we should start putting notebooks back under test soon. For now tested this code by hand. ",0,1,['status: accepted']
1698,179551771,7755,3834332,2018-04-05 01:22:43,2018-04-05 13:31:15,closed,Bryanv/6699 log filename,"- [x] issues: fixes #6699
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

My understanding of general good guidance is to always just log to stdout and let log aggregators handle persistence. But evidently some use cases, e.g. running the server as a subprocess from Node, do not offer good options for redirections. Willing to add this option given the simplicity of implementation. ",0,1,['status: accepted']
1699,179532650,7754,3834332,2018-04-04 22:49:20,2018-04-05 18:39:00,closed,Ignore OSError when terminating web driver,"fixes #7741
fixes #7734",5,2,['status: accepted']
1700,179529970,7753,3834332,2018-04-04 22:32:36,2018-04-05 00:11:17,closed,"Revert ""don't use --rerun""",Reverts bokeh/bokeh#7735,3,10,"['status: accepted', 'type: task', 'reso: completed']"
1701,179521449,7752,3834332,2018-04-04 21:46:55,2018-04-04 22:50:01,closed,Keep all declarations (d.ts) in external/,fixes #7751 ,0,1,['status: accepted']
1702,179481261,7749,3834332,2018-04-04 18:55:58,2018-04-04 21:40:10,closed,Replace RBush with SpatialIndex in glyphs/hex_tile,This was missed in PR #7583.,0,1,"['status: accepted', 'type: task', 'tag: component: bokehjs']"
1703,179466682,7748,3834332,2018-04-04 17:55:54,2018-04-05 00:12:04,closed,make ClientSession a context manager,"- [x] issues: fixes #7724
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1704,179418275,7747,3834332,2018-04-04 14:56:59,2018-04-04 15:43:46,closed,fix error with link highlighting and external links,"- [x] issues: fixes #7744

",1,1,['status: accepted']
1705,179399876,7746,3834332,2018-04-04 13:59:33,2018-04-04 21:43:12,closed,"Fix ""bad file descriptor"" error on travis ci",fixes #7741 ,4,1,['status: accepted']
1706,179273150,7743,3834332,2018-04-04 03:26:14,2018-04-04 15:25:56,closed,add option to disable wheel zoom on axes,"- [x] issues: fixes #2427 fixes #3125
- [x] release document entry (if new feature or API change)
",4,2,['status: accepted']
1707,179253909,7742,3834332,2018-04-04 00:30:37,2018-04-04 14:18:04,closed,better error message if show arg is bad,"- [x] issues: fixes #4923
- [x] tests added / passed
",0,1,['status: accepted']
1708,179250897,7740,3834332,2018-04-04 00:05:21,2018-04-04 22:10:04,closed,make CDS.column_names a read-only property,"- [x] issues: fixes #6657
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap @clairetang6 would appreciate any comments from you both. All of the existing tests of `source.column_names` pass without modification. ",0,2,['status: accepted']
1709,179246782,7739,3834332,2018-04-03 23:33:38,2018-04-04 14:16:10,closed,lower bad pong messages to trace,"- [x] issues: fixes #6175
",0,1,['status: accepted']
1710,179159792,7737,3834332,2018-04-03 16:57:09,2018-04-03 21:03:50,closed,add missing return to cell editor view validate(),"- [x] issues: fixes #7736
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

@mattpap If there are improvements (better return typings, or tests) let me know or feel free to add them to this branch
",1,1,['status: accepted']
1711,179135793,7735,3834332,2018-04-03 15:29:05,2018-04-03 21:03:21,closed,don't use --rerun,"- [x] issues: fixes #7734
- [x] tests added / passed
",6,1,['status: accepted']
1712,179037422,7732,3834332,2018-04-03 09:15:53,2018-04-03 15:26:19,closed,use IPython standard _repr_pretty_ method name,"ensures pretty-printer is used on bokeh classes by default and simplifies logic in `.pretty()` to avoid the temporary class definition.

This has the additional benefit that the default IPython display of these objects will use your pretty-print methods. Was avoiding the default pretty-printer intentional, or a typo in the method name?

Another fix if avoiding the default pretty-printer is intentional is to register as `type_printers[cls]` for the current class, rather than `type_printers[HasProps]` only on the less specific base class.

closes #7729",4,1,['status: accepted']
1713,178978350,7730,3834332,2018-04-03 02:29:35,2018-04-03 15:23:50,closed,temp delete custom repr so that ipython pprint does not use it,"- [x] issues: fixes #7729
- [x] tests added / passed

Can't say I am happy with this but don't have any better solution. This restores ipython pretty printing, and preserves the custom `repr` for outside ipython. Tested with ipython 5.6, 6.2, and 6.3",3,2,['status: superseded']
1714,178927691,7728,3834332,2018-04-02 20:41:57,2018-04-03 16:38:07,closed,process categorical coords properly for multi-glyphs,"- [x] issues: fixes #7462
- [x] tests added / passed
",9,2,['status: accepted']
1715,178868977,7726,3834332,2018-04-02 16:03:08,2018-04-03 17:02:27,closed,add support for rotating group and subgroup categorical tick labels,"- [x] issues: fixes #7643
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",6,3,['status: accepted']
1716,178701468,7723,3834332,2018-03-31 21:34:28,2018-04-01 16:38:03,closed,Markdown description for PyPI,"ref: https://dustingram.com/articles/2018/03/16/markdown-descriptions-on-pypi

",3,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1717,178698825,7722,3834332,2018-03-31 20:22:16,2018-03-31 21:21:42,closed,publish all release notes on one page,"Additionally this PR gets the `0.12.16` release notes started and removes several old version from the version dropdown (pages are still accessible via direct link)

- [x] issues: fixes #7715
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1718,178437430,7721,3834332,2018-03-29 20:47:10,2018-03-29 23:32:12,closed,remove useless botched deprecation code,"Accidentally added mistaken deprecation codepath for `row_header`, instead of correct `row_headerS`. 

- [x] issues: fixes #7719
- [x] tests added / passed
",0,1,['status: accepted']
1719,178187408,7716,3834332,2018-03-28 23:01:11,2018-03-29 03:16:26,closed,release docs for 0.12.15,"
",1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1720,178167682,7714,3834332,2018-03-28 21:20:59,2018-03-29 18:32:15,closed,Fix outstanding tslint errors and enable tslint on travis ci,"fixes #7713 
",0,3,['status: accepted']
1721,178166347,7712,3834332,2018-03-28 21:15:25,2018-03-28 22:29:42,closed,Fixed typos in palettes.py,Fixes #7711. ,0,2,['status: accepted']
1722,177885634,7708,3834332,2018-03-27 22:45:48,2018-06-07 20:18:04,closed,Allow easy customization of HTML templates,"Early work in progress.

fixes #4986
",60,30,['status: accepted']
1723,177792274,7704,3834332,2018-03-27 16:14:05,2018-03-27 16:52:02,closed,Make webgl renderer work with log scales,"This doesn't actually fix the webgl backend, just allows it to reliably fall back to canvas rendering. I'm not sure if the current implementation considers non-linear scales as a possibility at all.

fixes #7087 
",1,1,['status: accepted']
1724,177481648,7698,3834332,2018-03-26 15:23:18,2018-03-26 20:38:01,closed,Always clip frame in _paint_levels() despite output backend,"I'm not sure why clipping depended on output backed, but that definitively can't work when `webgl` and `canvas` glyphs are mixed together. In fact this also resolves clipping issues with SVG (not surprisingly).

fixes #6867
fixes #6787 ",15,4,['status: accepted']
1725,177462880,7697,3834332,2018-03-26 14:23:31,2018-03-26 15:21:36,closed,"Fix CSS in examples/howto/{events_app,js_events}",fixes #6871 ,0,1,['status: accepted']
1726,177461115,7696,3834332,2018-03-26 14:17:52,2018-04-18 21:06:21,closed,Replace flexx.pyscript with pscript,"This will have to wait for @almarklein to publish a conda package for `pscript`.

fixes #7576 ",10,1,['status: accepted']
1727,177429109,7695,3834332,2018-03-26 12:23:29,2018-04-12 15:39:00,closed,"Force ""use strict"" in CustomJS and related models","fixes #6306 
",4,3,['status: accepted']
1728,177423254,7694,3834332,2018-03-26 11:58:24,2018-04-18 22:30:26,closed,Make all tests compatible with xdist,Fixes #7679,6,3,['status: declined']
1729,177391688,7693,3834332,2018-03-26 09:41:45,2018-03-26 15:01:45,closed,Fix regression in GMapPlotCanvas' initialization code,"fixes #7688 
",5,1,['status: accepted']
1730,177272273,7691,3834332,2018-03-25 04:25:40,2018-03-25 22:37:17,closed,Update README.md for clarity and concision,"Reworded several sentences and paragraphs for clarity and concision. Corrected several spelling and grammatical errors. All original information was maintained.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7690
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,2,['status: accepted']
1731,177224971,7687,3834332,2018-03-24 07:22:44,2018-03-27 17:55:07,closed,Make adding callbacks thread-safe,Fix #7219 ,13,3,['status: accepted']
1732,177195428,7686,3834332,2018-03-23 22:12:52,2018-03-28 04:21:05,closed,bokeh server support for running in JupyterHub. (#7685),"- [x] issues: fixes #7685
- [x] tests added / passed
- [x] release document entry (if new feature or API change) - new docstrings added.
",15,6,['status: accepted']
1733,177180091,7684,3834332,2018-03-23 20:45:48,2018-03-23 21:53:16,closed,Fix initialization of multiple webgl plots,"I added a test, but this will fully make sense when we move away from phantomjs.

fixes #7681",0,2,['status: accepted']
1734,177160245,7683,3834332,2018-03-23 19:09:19,2018-03-26 15:02:40,closed,Add maintain_focus parameter to WheelZoomTool,Fix #5821 ,4,1,['status: accepted']
1735,177151019,7682,3834332,2018-03-23 18:27:38,2018-03-27 16:38:47,closed,Hex Tiling and Binning,"WIP but checking in for anyone that wants to get an early look. 

(Currently) Supports:

* point top or flat top orientation
* individual hex tile scaling
* point and line hit testing

Does *not* support WebGL, and I doubt I will be capable of adding that in this round. 

- [x] issues: fixes #4786
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,5,['status: accepted']
1736,177095952,7680,3834332,2018-03-23 15:00:57,2018-03-23 16:29:55,closed,Propagate settings from Bokeh Server to TornadoApplication,Fixes #6562,2,1,['status: accepted']
1737,176833838,7677,3834332,2018-03-22 16:21:17,2018-03-23 00:18:10,closed,Subtract padding when calculating dims for responsive modes,fixes #7645,5,1,['status: accepted']
1738,176794575,7676,3834332,2018-03-22 14:23:41,2018-03-22 14:54:05,closed,Fix frame clipping with webgl backend,"This was broken when the main coordinate system was switched from view to screen. Apparently webgl expects view coordinates, contrary to canvas' screen coordinates.

fixes #7211 ",0,1,['status: accepted']
1739,176643068,7674,3834332,2018-03-22 00:10:30,2018-05-03 22:44:25,closed,add CustomJSHover for formatting hover tooltip fields,"- [x] issues: fixes #7647
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Allows for:

```
custom=CustomJSHover(formatter=""""""
    return value + "" CUSTOM STUFF""
"""""")

p.add_tools(HoverTool(
    tooltips=[
        ( 'date',   '@date{%F}'            ),
        ( 'close',  '$@{adj close}{%0.2f}' ), # use @{ } for field names with spaces
        ( 'volume', '@volume{0.00 a}'      ),
    ],

    formatters={
        'date'      : 'datetime', # use 'datetime' formatter for 'date' field
        'adj close' : custom,   # use 'printf' formatter for 'adj close' field
                                  # use default 'numeral' formatter for other fields
    },

    # display a tooltip whenever the cursor is vertically in line with a glyph
    mode='vline'
))
```

Yielding:

<img width=""522"" alt=""screen shot 2018-03-21 at 17 03 51"" src=""https://user-images.githubusercontent.com/1078448/37744108-be2205e2-2d2a-11e8-97cb-0b70cbe1394b.png"">


WIP needs cleanup, tests, docs

I am not completely happy with the location of `CustomJSHover` under `tools` but it's not rally useful outside that context, and we have already used `bokeh.formatters` for tick formatters specifically. Any thoughts or ideas welcome though. ",21,4,['status: accepted']
1740,176633584,7673,3834332,2018-03-21 23:06:13,2018-03-28 15:23:39,closed,Enable user_guide examples in image diff tests,"fixes #2644
",10,4,['status: accepted']
1741,176555982,7669,3834332,2018-03-21 17:36:18,2018-03-21 20:56:32,closed,allow fow simpler mercator axis creation,"
- [x] issues: fixes #7642
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1742,176366416,7664,3834332,2018-03-21 01:51:20,2018-03-21 16:16:06,closed,Add support for doubletap drawing on BoxEditTool,"This PR adds support to the ``BoxEditTool`` to draw boxes by doubletapping on the canvas, moving the mouse, and then doubletapping again to finish drawing. This makes it more consistent with the ``PolyDrawTool``, while retaining the old behavior to draw on shift+drag.

- [x] issues: fixes #7553
- [x] tests added / passed",10,4,['status: accepted']
1743,176362353,7663,3834332,2018-03-21 01:07:22,2018-03-21 01:50:45,closed,have vbar and hbar stack return renderers,"- [x] issues: fixes #7492
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

With this PR, you can now have:

![screenflow](https://user-images.githubusercontent.com/1078448/37690635-809d8ed8-2c69-11e8-8810-15532790bbae.gif)
",1,1,['status: accepted']
1744,176317110,7661,3834332,2018-03-20 20:44:39,2018-03-20 22:12:14,closed,render initial values for multi selects,"
- [x] issues: fixes #7515
- [x] tests added / passed
",0,1,['status: accepted']
1745,176307858,7660,3834332,2018-03-20 20:07:40,2018-03-20 23:58:18,closed,manage checkbox active state more carefully,"- [x] issues: fixes #7562
- [x] tests added / passed
",2,2,['status: accepted']
1746,176252286,7659,3834332,2018-03-20 16:40:38,2018-03-26 20:07:20,closed,Add example of using Bokeh server with another Tornado service,"@bryevdv asked for a small example using an asynchronous data source.  This is such an example.  I do not expect this to be merged, but thought that submitting it as a PR would be a good way to have a conversation around it.  There are some thoughts on current issues and opportunities for improvement at the bottom.",10,1,['status: declined']
1747,176238949,7658,3834332,2018-03-20 15:58:41,2018-03-20 22:08:31,closed,add support for a hex scatter marker,"
- [x] issues: fixes #7638
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Had this lying around mostly ready to go

Works with canvas and webgl:

<img width=""598"" alt=""screen shot 2018-03-20 at 08 56 28"" src=""https://user-images.githubusercontent.com/1078448/37666407-bb900f18-2c1c-11e8-9d66-c3650945911c.png"">

<img width=""608"" alt=""screen shot 2018-03-20 at 08 56 39"" src=""https://user-images.githubusercontent.com/1078448/37666423-befaef60-2c1c-11e8-93af-71beecce663f.png"">
",1,1,['status: accepted']
1748,175998767,7655,3834332,2018-03-19 19:15:03,2018-03-19 22:07:26,closed,Bryanv/deprecate row header,"
- [x] issues: fixes #7654
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
1749,175967121,7653,3834332,2018-03-19 17:12:38,2018-03-21 23:45:41,closed,Restore code handling empty array shape tuples,"fixes #7652
",9,2,['status: accepted']
1750,175846736,7651,3834332,2018-03-19 09:42:30,2018-05-09 19:00:32,closed,Hover tool support for revealing values in image glyphs,"This PR aims to address issue #3886 by showing image values using the hover tool.

Although this PR is still WIP (e.g no typing yet), it is sufficiently complete to work with this example, demonstrating hover over an image containing integers and one containing floats:

![image_hover_demo](https://user-images.githubusercontent.com/890576/37586895-9fee7b90-2b55-11e8-9624-a8c1cfa44527.gif)

## Notes:

* I have only considered getting hover information working on the JS side and have not considered how image indexing might be useful or represented syncing with Python.
* At this time, I have only added support for the special variables described [here](https://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#hovertool).
* The ``_lrtb`` method is used both for finding the integer indexing and for the hit testing with ``RBush`` and was inspired by what I saw in ``quad.ts``.
* Typed arrays seem to need a linear index which I compute in the ``_hit_point`` method.
* I use ``data_source._shapes`` to find the columns that correspond to image values in `` replace_placeholders``. The alternative seems to be to get this information from the glyph at the hover tool level, but this means passing this information through several levels to get to ``replace_placeholders``.

## Outstanding items

- [ ] Updated/add typing information.
- [ ] Update docs
- [ ] Tests (though I don't know what sort of testing is recommended here)

It is likely that we will need some discussion around the representation used for image indexing and this PR should help illustrate what is required, at least in the context of implementing the (often requested!) image hover functionality.

fixes #3886",29,41,['status: accepted']
1751,175779568,7649,3834332,2018-03-18 23:13:21,2018-03-19 16:17:26,closed,Bug fix: slider keyboard navigation,"Small bug fix.  This fix could potentially hid some deeper problem; I don't have a very complete understanding of the javascript code.

- [x] issues: fixes #7622
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
1752,175771268,7648,3834332,2018-03-18 20:26:39,2018-03-21 16:24:08,closed,7125 show multiple plots in notebook,"Reopens #7126, which fixes #7125. The main issue from the previous PR is that the JS code was updated between the creation of the PR and the merge. Specifically, the template string was changed to support IE-11 (#7220), which is what caused the merge conflict.

- [X] issues: fixes #7125
- [X] tests added / passed
- [ ] release document entry (if new feature or API change)",3,9,['status: accepted']
1753,175725475,7646,3834332,2018-03-17 22:51:49,2018-06-14 16:45:48,closed,[WIP] Fix up selenium tests (part 1 of n) - interaction tests,"Works with Firefox 60 and latest geckodriver.
Works with Chrome and latest chromedriver

To Do:
* [x] test_pan_tool
* [ ] test_range_min_max - done except long pan on chrome doesn't work
* [ ] test_datatable
* [ ] test_hover
* [ ] test_patches_preselection
* [ ] test_reset_tool
* [ ] test_selection
* [ ] test_sizing_mode
* [ ]  test_tap
* [ ] test_tools
* [ ] test_wheel_zoom
* [ ] Update SauceLabs settings - use latest FF
* [ ] Re-enable these tests to run

fixes #7900 ",2,1,['status: declined']
1754,175413143,7637,3834332,2018-03-16 00:29:39,2018-03-22 18:07:37,closed,Fix all outstanding type errors,fixes #6481,1,11,['status: accepted']
1755,175390779,7636,3834332,2018-03-15 22:01:50,2018-03-16 01:50:06,closed,Fix type errors in models/tools/toolbar*,addresses #6481,0,1,['status: accepted']
1756,175323721,7635,3834332,2018-03-15 17:25:27,2018-04-07 02:42:16,closed,Clean up all rendering levels in PlotCanvasView.build_levels(),"~~The problem outlined in the issues is very general. Here I was able to get around it, but in the longer term, we will have to rethink document access in models and state management, especially related to models initialized in bokehjs.~~

fixes ~~#7497 (works around)~~
fixes #7476",11,1,['status: accepted']
1757,175304299,7634,3834332,2018-03-15 16:18:54,2018-03-17 21:44:45,closed,Bryanv/01215 docs,"Collects several doc edits, updates, and fixes:

* updates to work with Sphinx >= 1.6
* removes/re-consolidates small user guide sections to shorten TOC
* remove backbone mentions
* remove cruft images
* updates for content (geo, selections, concepts)
* NF sponsorship copy

issues: fixes #7520 fixes #7516

",1,13,['status: accepted']
1758,175080210,7630,3834332,2018-03-14 20:47:07,2018-03-16 02:40:56,closed,Fix type errors in models/glyphs/webgl,"addresses #6481
",1,2,['status: accepted']
1759,175049049,7629,3834332,2018-03-14 18:37:59,2018-03-14 20:18:51,closed,Fix type errors in models/widgets,addresses #6481,2,1,['status: accepted']
1760,174959457,7628,3834332,2018-03-14 13:45:24,2018-03-14 15:21:08,closed,Fix type errors in models/formatters,addresses #6481,1,1,['status: accepted']
1761,174715506,7625,3834332,2018-03-13 16:25:17,2018-03-13 18:06:55,closed,DOC: BUG: fix typo in user guide docs on embed,"* s/httsp/https/g

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7624
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1762,174709725,7623,3834332,2018-03-13 16:07:04,2018-03-13 23:02:20,closed,handle message send exceptions better,"This PR handles send errors (as might happen with an early disconnect) better across Tornado versions. Also cleans up/adds some docstrings and adds a test module for `ws.py`

- [x] issues: fixes #7619
- [x] tests added / passed
",3,2,['status: accepted']
1763,174501265,7620,3834332,2018-03-12 21:34:42,2018-03-12 22:10:29,closed,fix bad logger name configs,"- [x] issues: fixes #7602
- [x] tests added / passed
",0,1,['status: accepted']
1764,174198725,7617,3834332,2018-03-11 01:18:42,2018-04-20 19:14:14,closed,Set a data source's inspected taking multiple renderers into account,"This PR addresses the issue where a data source's `inspected` property gets overwritten by each renderer's inspection hit test. To fix the issue, the selection manager now calls `inspect` with a list of renderer views instead of a single renderer view, and `inspected` is set using the `UnionRenderers` policy. 


- [x] issues: fixes #7397
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,9,['status: accepted']
1765,174079862,7614,3834332,2018-03-09 18:48:54,2018-03-09 20:28:31,closed,Fix io_loop paramenter in examples/howto/server_embed/flask_embed.py,Added parameter io_loop in bk_worker() at examples/howto/server_embed/flask_embed.py for correct working with new version tornado.,1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
1766,173890967,7612,3834332,2018-03-09 00:42:01,2018-03-09 01:19:45,closed,have one unit test job use tornado 4.5,"- [x] issues: fixes #7483
- [x] tests added / passed

Rather than burden our already long build with a new job, this PR just makes one of the existing unit test jobs use Tornado 4.5.x",1,1,['status: accepted']
1767,173869067,7610,3834332,2018-03-08 22:28:43,2018-03-14 15:16:48,closed,Fix type errors in models/glyphs,"addresses #6481 
",3,6,['status: accepted']
1768,173819475,7609,3834332,2018-03-08 18:54:06,2018-03-08 21:30:43,closed,Datetime stream fix,"Fixes two regressions in datetime streaming, the first applies to attempts to stream pandas Index or Series objects, which are currently not appropriately transformed. The second deals with a difference between server and notebook streaming. When streaming data on the server the data is transformed from datetime64 types to integers, which ends up being synced. Since JS->Python is not synced in the notebook this does not occur there. To avoid this problem we only transform the data during streaming if the column it is being streamed to has also been transformed.

The two added tests cover these two conditions, one where the data has not been transformed (emulating the notebook) and one where the data has been transformed (emulating bokeh server).

- [x] issues: fixes #7587
- [x] tests added / passed
",6,3,['status: accepted']
1769,173690340,7608,3834332,2018-03-08 09:53:40,2018-03-08 19:20:43,closed,Fix typo in docstring,"`type: bug`
`tag: docs`
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1770,173354011,7605,3834332,2018-03-07 05:06:00,2018-03-07 16:53:04,closed,Fix WebDriverException when using export_png,Fixes #7168,3,1,['status: accepted']
1771,173287897,7604,3834332,2018-03-06 21:34:58,2018-03-12 17:08:43,closed,Address leaking memory,"This PR adds a `destroy` method to Document, that removes several places where there might be circular references. However, this alone does not (yet) solve the problem, and a call to `gc.collect()` is required to fully release memory. A fuller solution down the road might be to implement a `destroy` protocol on all models so that they can be responsible for cleaning up any cycles.

- [x] issues: addresses #7468
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",9,3,['status: accepted']
1772,173246000,7603,3834332,2018-03-06 18:41:08,2018-03-12 21:35:51,closed,fix for issue #7602: some loggers are named after __file__ instead of __name__,fix for issue #7602: a few loggers are named after `__file__` instead of `__name__`,11,1,['status: superseded']
1773,173160708,7601,3834332,2018-03-06 13:40:45,2018-03-08 21:34:40,closed,7600 image rgba alpha,"- [x] issues: fixes #7600 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Summary:
1. global_alpha kwarg added to ImageRGBA
2. convenience alpha kwarg now sets global_alpha for all three image types (Image, ImageRGBA, ImageURL)
3. example file image_alpha.py updated to include examples for all three image types
",3,4,['status: accepted']
1774,172968224,7599,3834332,2018-03-05 19:49:53,2018-03-08 22:30:50,closed,Fix type errors in models/sources,"This is another painful rewrite (after ui_events and serialization), because `data_source.data` can mix arrays with typed arrays, but most code doesn't bother to account for that, and when it does, it does this in atrocious ways.

addresses #6481 ",1,12,['status: accepted']
1775,172835947,7598,3834332,2018-03-05 11:04:20,2018-03-05 18:45:57,closed,Remove opts argument from models' constructors,"Previously we had `new Model(attrs, opts)`, now there is `new Model(attrs)`. `opts` was only used for deferred initialization. The best solution would be to have multiple constructors, but that's not supported by TypeScript. This approach seems a bit hackinsh, but at least we don't have to define `Opts` interface for all models. Also, having models configurable in general wasn't the best idea from the API design standpoint.

addresses #6481 
",2,1,['status: accepted']
1776,172405529,7588,3834332,2018-03-02 02:12:28,2018-03-03 07:01:31,closed,Sort all sphinx docs by file suffix. 'py' first,"Sphinx extension now sorts source doc files by filename suffix, putting
'.py' before any others. This make the python file parser process the
plot scripts before they are referenced in any of the other doc files.

- [x] issues: fixes #7505 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1777,172110170,7585,3834332,2018-03-01 00:10:04,2018-03-01 00:42:36,closed,rev CONDA_REQS and ignore built python files for docker images,"Follow on to updating `CONDA_REQS` on TravisCI, this PR updates docker files to match. Additionally adds a `.dockerignore` so that any local `.pyc` files are not copied to the image (causes issues with `pytest`)",0,1,"['status: ready', 'type: task', 'reso: completed', 'tag: component: build']"
1778,172057425,7584,3834332,2018-02-28 20:02:09,2018-02-28 20:57:51,closed,don't repeat base install for external PRs,"The previous CI scripts would unconditionally re-install miniconda on top of an previous install, when a PR from an outside fork was made. With the latests miniconda installers this causes conda errors. This PR changes the CI scripts to only perform the base install a single time in all cases. ",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1779,172049666,7583,3834332,2018-02-28 19:30:36,2018-04-04 18:43:08,closed,Switched from RBush to FlatBush,"As suggested in https://github.com/bokeh/bokeh/issues/7582, this PR attempts to switch out RBush for flatbush to perform the spatial indexing. As flatbush is very new is no ``@types/flatbush`` package yet, so I haven't typed everything properly yet. Before proceeding with this I'd like to find a principled way to perform some benchmarks. So far I've only seen noticeable improvements for very large number of points. 

- [x] issues: fixes #7582
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,3,['status: accepted']
1780,171943663,7581,3834332,2018-02-28 12:47:48,2018-02-28 15:59:26,closed,FuncTickFormatter: expose `index` and `ticks`,"Alternative to https://github.com/bokeh/bokeh/pull/7564.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/7563
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1781,171823413,7579,3834332,2018-02-28 00:21:56,2018-02-28 16:26:07,closed,Bryanv/7518 ajax data source endpoint undefined,"- [x] issues: fixes #7518 fixes #3723
- [x] tests added / passed

This PR fixes the regression introduced in the TypeScript conversion, and also factors `AjaxDataSource` into more testable chunks",1,2,['status: accepted']
1782,171807200,7578,3834332,2018-02-27 22:46:16,2018-03-01 18:45:46,closed,Fix type errors in core,"This is a bit chaotic PR, because it started as an attempt to fix all TS2339 errors, but then I managed proceed with core/ui_events rewrite (which was split off as PR #7555), and continued with fixing type errors in last bits of the core.

addresses #6481 
",4,18,['status: accepted']
1783,171753296,7577,3834332,2018-02-27 18:56:49,2018-02-27 21:05:15,closed,Added port parameter to show_app method.  ,"Added port parameter to show_app method.  This allows the user the override the default behavior of embedded servers listening on random ports.  This is necessary to allow users to use embedded servers remotely when firewalls may restrict available ports.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #7466
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
1784,171666712,7575,3834332,2018-02-27 13:46:56,2018-03-15 16:07:02,closed,Add node and npm version requirement specification,fixes #7571,1,2,['status: accepted']
1785,171258328,7570,3834332,2018-02-25 23:27:09,2018-02-27 21:10:58,closed,Alpha for images,,7,2,['status: accepted']
1786,171229026,7567,3834332,2018-02-25 12:59:11,2018-02-28 16:32:02,closed,Add support for JupyterLab comms,"This PR adds support for using ``push_notebook`` in JupyterLab when combined with https://github.com/bokeh/jupyterlab_bokeh/pull/20. The way it works is that it defines a ``Bokeh.embed.kernels`` registry which the JupyterLab extension registers kernels with on display. This allows the embed functions to register the Jupyter comm to send data from Python to JS.

I'd be happy to hear a different approach, and or make ``Bokeh.embed.kernels`` private to avoid cluttering the namespace. I've also made the ``Bokeh.embed.Receiver`` object public to allow other extensions (e.g. HoloViews) to register their own message handlers on platforms other than Jupyter.

- [x] issues: fixes #7566
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

@canavandl @bryevdv 
",15,8,['status: accepted']
1787,171204632,7565,3834332,2018-02-25 00:12:30,2018-02-25 22:30:03,closed,Issue #7474 addressed: image alpha implemented,"New ColorMapper attribute 'alpha', can be assigned directly or via 'global_alpha' Image kwarg.
Example provided in image_alpha.py.

- [x] issues: fixes #7474
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,3,['status: declined']
1788,171185392,7564,3834332,2018-02-24 16:21:23,2018-02-28 12:48:15,closed,Add `pass_all_ticks` argument to FuncTickFormatter,"Was unsure of the argument name. `array` seemed more explicit than `vectorized`. Open to suggestions.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/7563
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,2,['status: superseded']
1789,171113140,7560,3834332,2018-02-23 20:49:45,2018-02-28 20:03:42,closed,Fail travis ci tests when TS errors are present,"fixes #7559
",3,1,['status: accepted']
1790,170881053,7556,3834332,2018-02-22 22:14:02,2018-02-28 00:45:11,closed,More generic sphinx doc sorting.,"Addresses #7505 

- [x] issues: fixes #7505
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",22,10,['status: accepted']
1791,170840963,7555,3834332,2018-02-22 19:16:46,2018-02-26 21:45:56,closed,Fix type errors in core/ui_events and related code,addresses #6481,0,2,['status: accepted']
1792,170578064,7552,3834332,2018-02-21 20:21:30,2018-02-25 03:25:55,closed,Bryanv/2507 grid tick bounds,"- [x] issues: fixes #2507
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

With axis bounds but auto grid bounds:

<img width=""615"" alt=""screen shot 2018-02-21 at 12 09 09"" src=""https://user-images.githubusercontent.com/1078448/36503339-abc4925a-1701-11e8-9684-1be5bc8b5680.png"">


With axis bounds and different explicit grid bounds:

<img width=""622"" alt=""screen shot 2018-02-21 at 12 09 20"" src=""https://user-images.githubusercontent.com/1078448/36503350-b64f9cba-1701-11e8-9c12-6afbabf7356b.png"">
",4,5,['status: accepted']
1793,170536234,7551,3834332,2018-02-21 17:23:03,2018-02-21 17:49:14,closed,update docs to install flexx from conda-forge,"- [x] issues: fixes #7550
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1794,170271196,7547,3834332,2018-02-20 18:22:32,2018-02-21 17:54:29,closed,Implement rollover correctly in non-typed array case,fix #7546 ,0,1,['status: accepted']
1795,170002571,7542,3834332,2018-02-19 16:19:39,2018-02-19 17:42:47,closed,Fix typo in Figure.vbar_stack docstring,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1796,169995456,7541,3834332,2018-02-19 15:50:45,2018-02-19 18:15:14,closed,Configure side renderers' panels before setting up a toolbar,"fixes #7538
",3,1,['status: accepted']
1797,169993166,7540,3834332,2018-02-19 15:41:40,2018-02-19 19:12:50,closed,Stream as ndarray if any of old or new is an ndarray,fixes #7523,4,1,['status: accepted']
1798,169983694,7539,3834332,2018-02-19 15:03:45,2018-02-19 18:06:15,closed,Clean up tmp files and processes used by bokeh.io.export,"fixes #7537, #6525
",0,2,['status: accepted']
1799,169641506,7534,3834332,2018-02-16 14:45:54,2018-02-16 17:12:34,closed,"Replace Range1d(start, end) with Range1d({start, end}) in documentation","fixes #7531 
",0,1,['status: accepted']
1800,169621691,7533,3834332,2018-02-16 13:16:47,2018-02-16 15:56:04,closed,Fixed FutureWarning in json serialization of floating values,"The most recent version of NumPy raises a FutureWarning during serialization because the np.issubdtype expects a scalar baseclass instead of a specific dtype. Replacing np.float with np.floating addresses this issue.

- [x] issues: fixes #7526",1,1,['status: accepted']
1801,169374083,7530,3834332,2018-02-15 13:41:28,2018-02-19 14:15:36,closed,Add axis names to Scatterplot matrix,"type: feature
tag: examples",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1802,169148832,7527,3834332,2018-02-14 15:57:13,2018-02-14 23:21:19,closed,Fix type errors in api/plotting,"addresses #6481
",0,2,['status: accepted']
1803,168856034,7522,3834332,2018-02-13 14:18:31,2018-02-14 03:08:05,closed,Fix typo,"type: bug
tag: docs",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1804,168851863,7521,3834332,2018-02-13 14:00:56,2018-02-14 23:21:41,closed,Fix type errors in models/graphs,"addresses #6481
",0,1,['status: accepted']
1805,168697976,7519,3834332,2018-02-12 21:52:45,2018-02-14 23:22:01,closed,Fix type errors in models/callbacks,addresses #6481,0,1,['status: accepted']
1806,168552945,7517,3834332,2018-02-12 11:19:26,2018-02-14 23:22:29,closed,Fix type errors in models/tiles,"addresses #6481
",0,4,['status: accepted']
1807,168114570,7514,3834332,2018-02-08 23:20:57,2018-02-11 18:33:26,closed,Notify the user if package.json changed and `npm install` is needed,"For now this only notifies the user. It's not possible to run `npm install` and keep `gulp task_name` for running the build. This could be achieved in future by adding a layer above `gulp` or dropping `gulp` altogether (which I've been contemplating for some time).

fixes #7513 
",4,1,['status: accepted']
1808,168014111,7511,3834332,2018-02-08 16:04:04,2018-02-09 01:24:57,closed,Remove pytest-catchlog from test dependencies,"fixes #7509
",0,1,['status: accepted']
1809,167990298,7508,3834332,2018-02-08 14:42:14,2018-02-08 15:18:02,closed,Fix typo in docs,,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1810,167768283,7504,3834332,2018-02-07 18:09:24,2018-02-07 18:39:36,closed,Provide table cell editors with access to their models,fixes #7503 ,0,1,['status: accepted']
1811,167759392,7502,3834332,2018-02-07 17:31:48,2018-02-08 14:53:12,closed,Resolve compilation errors around Number.isInteger,"The previous fix was incorrect on the type-level, because `Number.isInteger` is not a part of the standard library (es5 + es2015.collections) that we use. This isn't needed for the release.

addresses #7373, PR #7493
",4,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1812,167636576,7501,3834332,2018-02-07 09:21:47,2018-02-07 17:30:56,closed,"Add tooltip to elements example, fix #7500","- accoding to https://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#basic-tooltips
- plus tiny bit of code cleanup (pylint)

- [x] issues: fixes #7500
- [ ] tests added / passed
  no tests needed, no new functionality, just example
- [ ] release document entry (if new feature or API change)
  no new feature or API chnge
",2,1,['status: accepted']
1813,167232961,7495,3834332,2018-02-05 19:26:55,2018-02-08 14:53:34,closed,Upgrade TypeScript to version 2.7.1,addresses #6481,1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: typescript']"
1814,167204536,7494,3834332,2018-02-05 17:19:50,2018-02-08 14:53:54,closed,Specify compilation inputs in tsconfig.json,"This is a further simplification of our build. This also makes bokehjs development with vscode finally possible.

addresses #6481
",3,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1815,167182048,7493,3834332,2018-02-05 15:56:27,2018-02-05 16:23:38,closed,Update polyfill.ts,"- [x] issues: fixes #7373
",1,1,['status: accepted']
1816,166876854,7489,3834332,2018-02-02 18:52:20,2018-02-02 19:43:26,closed,Improve state management for implicit toolbar panel,"fixes #7461, #7488 ",1,2,['status: accepted']
1817,166611809,7485,3834332,2018-02-01 18:08:49,2018-02-01 19:47:01,closed,only trigger set_data from FactorRange changes,"
- [x] issues: fixes #7475 fixes #7484
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)


@philippjfr @mattpap this seems to fix both the issues above, as well as keep the fix for #7083 but more testing appreciated.

My best guess is the the more general original code resulted in some kind of perpetual event ping-pong that made UI interactions difficult",1,1,['status: accepted']
1818,166146200,7482,3834332,2018-01-31 01:46:32,2018-02-01 15:06:39,closed,Ensured PolyEdit tool emits CDS data change event on vertex add,"I fixed this for the PolyDraw tool in my previous PR but somehow missed the same thing on the PolyEdit tool.

- [x] issues: fixes #7470",3,1,['status: accepted']
1819,166119141,7481,3834332,2018-01-30 22:46:56,2018-01-30 23:35:48,closed,update user guide embed docs,"
- [x] issues: fixes #7434
- [x] release document entry (if new feature or API change)
",0,2,['status: accepted']
1820,166043216,7480,3834332,2018-01-30 17:14:38,2018-01-30 19:20:44,closed,document min PhantomJS version and error on bad versions,"- [x] issues: fixes #7455
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",13,2,['status: accepted']
1821,166004796,7479,3834332,2018-01-30 15:01:02,2018-01-30 17:32:13,closed,Fix regression in rendering (non)selection glyphs,fixes #7478,0,2,['status: accepted']
1822,165812413,7473,3834332,2018-01-29 20:43:05,2018-01-30 14:37:27,closed,transform Date correctly on windows,"- [x] issues: fixes #7460
- [x] tests added / passed

This adds a catch for `OSError` to `Date.transform` which is the proper way to catch the exception on some platforms/versions. 

Note that `test_validate_milliseconds` was verified to fail without the associated code change, and is passing with the code change (on windows) 
",3,1,['status: accepted']
1823,165783441,7472,3834332,2018-01-29 18:35:46,2018-01-30 22:51:08,closed,Fixes for EditTools,"Fixes issue with PolyDrawTool not emitting event on completing a polygon/line with a double tap. Also renames remaining references to BoxDrawTool left over from a rename.

I'll leave this as a WIP until I've finished writing examples for higher level libraries, in case I find any further issues. 

- [x] issues: fixes #7470 
- [ ] tests added / passed",5,4,['status: accepted']
1824,165776999,7469,3834332,2018-01-29 18:05:57,2018-01-30 14:39:00,closed,handle legends better with data frame sources,"- [x] issues: fixes #7400
- [x] tests added / passed

This fixes the case where passing both a legend and a DataFrame for `source` caused errors, by moving the processing of `source` up earlier (so that the legend handling code always sees only a CDS)

However, this did uncover an (unrelated) issue with DF sources and legends, namely that this case will not work as expected:
```
source = pd.DataFrame(data=dict(x=[1, 2, 3], y=[1, 2, 3], label=['a', 'b', 'c']))
square = p.square(x='x', y='y', legend='label', source=source)
circle = p.circle(x='x', y='y', legend='label', source=source)
```
The ""combining"" is contingent on renderers sharing a source, but in this case each renderer will have a new source, created from the DataFrame. This should be fixed, but later as part of a more general clean up. Mentioning here to document. ",0,1,['status: accepted']
1825,165595127,7467,3834332,2018-01-28 23:52:05,2018-01-29 16:15:24,closed,Implement constructors and define visual attributes,"addresses #6481
",0,14,['status: accepted']
1826,165243071,7463,3834332,2018-01-25 22:16:18,2018-01-27 08:58:14,closed,Define attributes and interfaces for all models,"addresses #6481
",1,4,['status: accepted']
1827,164967827,7459,3834332,2018-01-24 21:30:12,2018-01-25 16:06:14,closed,Update version number in package-lock.json,"fixes #7458 
",1,1,['status: accepted']
1828,164936756,7457,3834332,2018-01-24 19:11:10,2018-01-24 21:21:10,closed,Revert upgrade of nouislider to version 11.0,"fixes #7452 
",0,2,['status: accepted']
1829,164921530,7456,3834332,2018-01-24 18:02:32,2018-01-24 19:17:33,closed,Enable more tslint rules and clean up code,"This PR enables a few more tslint rules for common issues (like using `Number` type instead of `number` or throwing strings instead of `new Error(...)`). 

addresses #6481 
",0,11,['status: accepted']
1830,164622991,7450,3834332,2018-01-23 16:23:48,2018-01-23 17:57:01,closed,Make trailing commas consistent across code base,addresses #6481,0,4,['status: accepted']
1831,164588907,7449,3834332,2018-01-23 14:23:02,2018-01-23 15:52:32,closed,Clean up mapping code in models/glyphs,"fixes #7448 
",0,1,['status: accepted']
1832,164544855,7447,3834332,2018-01-23 11:04:47,2018-01-23 14:29:04,closed,Don't set `float: left` on tabs' panels,"I'm not sure why this was done, but seems unnecessary anymore and fixes the overlapping layout issue.

fixes #7443 ",0,1,['status: accepted']
1833,164540940,7446,3834332,2018-01-23 10:47:53,2018-01-23 16:00:16,closed,Finalize cleanup of models' initialize() methods,addresses #6481,0,5,['status: accepted']
1834,164151236,7442,3834332,2018-01-20 23:30:32,2018-01-21 18:32:58,closed,Update package-lock.json after upgrading nouislider,addresses PR #7437,0,1,['status: accepted']
1835,164148963,7441,3834332,2018-01-20 22:28:27,2018-01-22 08:58:12,closed,Simplify for(;;) loops generated by decaffeinate,"Decaffeinate didn't have enough information to generate concise code for `for` loops. This PR cleans this up. I also made sure that every loop declares its loop counter, instead of having a function/method global.

addresses #6481",0,1,['status: accepted']
1836,164142240,7440,3834332,2018-01-20 19:37:57,2018-01-23 14:26:02,closed,Fixed regression in notebook plot embedding,"Simple fix for the regression described in #7439. Trying to open a notebook with embedded bokeh plots outside the notebook itself would cause it to fail to render the plots because an error occurred when trying to set up a Jupyter Comm. It now checks whether the Jupyter variable is defined.  

- [x] issues: fixes #7439 ",2,1,['status: accepted']
1837,164055624,7437,3834332,2018-01-19 19:59:53,2018-01-19 22:41:40,closed,update nouislider," issues: fixes #7433

",2,3,['status: accepted']
1838,163844453,7435,3834332,2018-01-18 22:57:19,2018-01-19 17:51:16,closed,allow push_notebook with empty events,"- [x] issues: fixes #7426
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1839,163815326,7432,3834332,2018-01-18 20:35:18,2018-01-19 09:55:26,closed,Remove attrs from HasProps.initialize(),"fixes #7431 
",1,3,['status: accepted']
1840,163772059,7430,3834332,2018-01-18 17:19:18,2018-01-18 20:00:49,closed,Unify static initialization of classes,"There were two different approach used in code that I rewrote manually and the code rewritten by decaffeinate. Now there is one, based on decaffeinate's approach.

addresses #6481 
",0,3,['status: accepted']
1841,163719159,7429,3834332,2018-01-18 14:01:07,2018-01-18 15:06:23,closed,Add preliminary support for tslint,"addresses #6481
fixes #6605",0,5,['status: accepted']
1842,163670883,7427,3834332,2018-01-18 10:17:12,2018-01-18 12:36:26,closed,Split off shaders in glyphs/webgl for readablility,"addresses #6481
",0,2,['status: accepted']
1843,163605952,7425,3834332,2018-01-18 02:42:08,2018-01-21 07:25:01,closed,Add support for path_args and path_kwargs in bokeh server,"- [x] issues: fixes #7424
- [x] tests added
- [x] release document entry (if new feature or API change)

This PR adds two properties, ```path_args``` and ```path_kwargs``` to ```BokehSessionContext``` to store capturing groups in Tornado ```RequestHandler```. Test cases has been added.",3,3,['status: declined']
1844,163524634,7423,3834332,2018-01-17 18:58:49,2018-01-18 08:19:13,closed,"Resolve TS6133, TS402x errors and more",addresses #6481,0,19,['status: accepted']
1845,163493689,7422,3834332,2018-01-17 16:45:47,2018-01-17 18:55:03,closed,Resolve last TS2304 and type widgets/date_picker,"addresses #6481
",1,1,['status: accepted']
1846,163469688,7421,3834332,2018-01-17 15:21:09,2018-01-18 03:29:26,closed,Remove gloo2.js and add a dependency on gloo2,fixes #7420 ,5,1,['status: accepted']
1847,163037692,7415,3834332,2018-01-15 20:44:31,2018-01-26 22:51:38,closed,Add drawing tools,"This PR adds a range of draw tools, which allow adding and editing points, multi-lines, boxes and polygons, addressing https://github.com/bokeh/bokeh/issues/6370. For a demo of each of the tools go here (currently these use HoloViews but I'm working on pure bokeh examples now): https://anaconda.org/philippjfr/drawing_tools/notebook

## BoxDrawTool

Allows drawing a rectangular bounding box, which will persist.

## PointDrawTool

Allows adding points, dragging points and deleting points:

* Add:     Click anywhere on the plot
* Drag:    Click on the point and drag it
* Delete: Tap on point (or use box_select tool) and hit ``delete``

## PolyDrawTool

The tool handles drawing multiple polygons/multi-lines. Holding shift will allow editing the previously drawn polygon. Without holding shift a new polygon is added.

* Add polygon/multi-line: Drag from one point to another
* Add vertex to polygon: Hold shift then click and drag to new vertex position
* Delete: Tap on polygon/multi-line and hit ``delete``

## PolyEditTool

The vertex editing tools allow double clicking on a polygon/polyline and edit its vertices.

* Double Tap: Selects a polygon/polyline for vertex editing
* Drag:       Clicking and dragging a vertex adjusts the polygon/polyline
* Delete:     Tap on a vertex and press ``delete``

## API

The API generally is very simple, pass the renderers to be edited to each of the tools. The VertexEditTool also requires a separate ``vertex_renderer`` to draw the vertices.

## ToDo

- [x] Agree on naming
- [x] Refactor a bit to reduce code duplication
- [x] Add docstrings
- [x] Add documentation and examples 
- [x] Resolve remaining TypeScript issues
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",66,71,['status: accepted']
1848,163004416,7414,3834332,2018-01-15 17:15:56,2018-01-15 17:54:05,closed,Resolve TS2304 errors,"fixes #7412 
addresses #6481
",0,1,['status: accepted']
1849,162958891,7413,3834332,2018-01-15 14:02:25,2018-01-15 15:36:26,closed,Declare variables in widgets SelectView constant,"This fixes some variables which were not declared properly in the widget SelectView. I suspect there's a few more of these so as I discover issues I'll add more.

- [x] issues: fixes #7412
- [ ] tests added / passed",3,1,['status: superseded']
1850,162790853,7410,3834332,2018-01-13 18:19:59,2018-01-18 21:33:02,closed,Remove deprecations from 0.12.7,,5,3,['status: accepted']
1851,162790264,7409,3834332,2018-01-13 18:03:42,2018-01-18 16:12:40,closed,Allow to accumulate CSS classes from parent views,"fixes #5420
",1,2,['status: accepted']
1852,162454174,7406,3834332,2018-01-11 18:30:47,2018-01-13 00:47:42,closed,Cleaned up tool icons,"As shown in issue https://github.com/bokeh/bokeh/issues/7405 and mentioned in issue https://github.com/bokeh/bokeh/issues/3250 the current icons have various visual artifacts or pixellation problems.  This PR doesn't address making them be a uniform size, but it does remove the artifacts and smooths out the pixellation problems. It may be hard to see that in the github diffs, but if you zoom in the differences should be clear on any tool with an arrow and on the wheelzoom tools; some of the other icons have only very minor differences. 

I'd be happy to make them a uniform size as well if someone tells me what size they should fit into.

Fixes #7405.
",3,3,['status: accepted']
1853,162429921,7402,3834332,2018-01-11 16:45:08,2018-01-11 17:41:04,closed,"Drop {Model,View}.getters, use get/set syntax instead","addresses #6481
",0,1,['status: accepted']
1854,162289584,7399,3834332,2018-01-11 04:13:44,2018-01-11 14:16:04,closed,Added missing includes import in tile_renderer.ts,"As described in #7398, decaffeination introduced a usage of ``includes`` without importing it.

- [x] issues: fixes #7398
- [ ] tests added / passed
",6,2,['status: accepted']
1855,162257491,7396,3834332,2018-01-10 23:29:42,2018-01-11 17:39:27,closed,add polyfill for Number.isInteger,"issues: fixes #7373

@mattpap I believe this is the required fix but please take a look (doing some cargo-cult TS learning)",1,1,['status: accepted']
1856,162214994,7395,3834332,2018-01-10 19:53:25,2018-01-11 16:31:14,closed,Rewrite api in TypeScript,"Rewrites api/charts in TypeScript and api/plotting in ES6. Also simplifies the build by removing coffeescript from the pipeline.

addresses #6481",1,10,['status: accepted']
1857,162209041,7393,3834332,2018-01-10 19:25:45,2018-01-10 20:56:33,closed,Rewrite models/widgets in TypeScript,"This is a partial rewrite. Everything under `models/widgets` and `models/widgets/tables` was rewritten in ES6 and a just few modules were either fully or partially typed.

addresses #6481 
",0,13,['status: accepted']
1858,162122293,7392,3834332,2018-01-10 13:27:28,2018-01-10 16:25:40,closed,Handle multi-gesture tools on ProxyToolbar,"As I described in https://github.com/bokeh/bokeh/issues/7391 while implementing support for multi-gesture tools I did not handle the initialization of a ``ProxyToolbar`` causing it to raise errors when you attempt to create a layout plot with a multi-gesture tool.

- [x] issues: fixes #7391 
- [x] tests added / passed",0,1,['status: accepted']
1859,162003482,7388,3834332,2018-01-09 23:38:59,2018-01-10 15:29:10,closed,Remove extraneous code,issues: fixes #7354,0,4,['status: accepted']
1860,161978801,7387,3834332,2018-01-09 21:22:59,2018-01-09 22:35:03,closed,Update categorical.rst,"issues: fixes #7386

",0,1,['status: accepted']
1861,161789456,7385,3834332,2018-01-09 05:40:41,2018-01-10 15:32:03,closed,fixed a broken link ('why anaconda'),"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1862,161745139,7383,3834332,2018-01-08 22:49:05,2018-01-10 17:37:00,closed,Decaffeinate bokehjs,"This uses `decaffeinate` to rewrite bokehjs (*.coffee) in ES6, which is the syntactical basis for TypeScript. The translation isn't fully automatic, but is fast enough. The output is much better than from CoffeeScript's compiler and thus usable for further translation to TypeScript. Generated files are checked by TS for syntactical compliance, but no typechecking is performed (so far).

addresses #6481 
",5,42,['status: accepted']
1863,161541523,7379,3834332,2018-01-07 22:09:54,2018-01-08 15:57:35,closed,Bryanv/6681 df index streaming,"This PR allows for `CDS.stream` to accept more data frames. In particular, DataFrames with unnamed indices would previously fail, since the index would be automatically captured at CDF creation, but would *not* be captured by ``stream``.  Other notes:

* This moves all pandas processing into `CDS._stream` and makes the interface for `PropertyValueDict` always assume a plain dict of named columns (lists/arrays/series/etc). This was necessary to properly process indices, but also makes the `PropertyValueDict` simpler. However, some changes to tests were necessary.

* Although it is not new, it's worth pointing out that with the conversion to CDS, there is no guarantee that streaming a new data frame will preserve the ""index-ness"" of the CDS index column (see comment below in test). This was true before, but now there are more opportunities to stream from dataframes. Users who need a valid index in the CDS at all times when streaming will have to take care to construct the stream dataframe index correctly (see example below)

- [x] issues: fixes #6681
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,3,['status: accepted']
1864,161451003,7376,3834332,2018-01-05 23:50:02,2018-01-06 00:55:47,closed,add traceback information to exception messages callbacks,"This came up in some other work. It's probably long overdue I wanted to get it put in immediately.  An exception in a periodic callback now yields e.g.

```
2018-01-05 17:45:40,670 Error thrown from periodic callback:
2018-01-05 17:45:40,670 Traceback (most recent call last):
  File ""/Users/bryanv/anaconda/lib/python3.6/site-packages/tornado/gen.py"", line 828, in callback
    result_list.append(f.result())
  File ""/Users/bryanv/anaconda/lib/python3.6/site-packages/tornado/concurrent.py"", line 238, in result
    raise_exc_info(self._exc_info)
  File ""<string>"", line 4, in raise_exc_info
  File ""/Users/bryanv/anaconda/lib/python3.6/site-packages/tornado/gen.py"", line 1069, in run
    yielded = self.gen.send(value)
  File ""/Users/bryanv/work/bokeh/bokeh/server/session.py"", line 51, in _needs_document_lock_wrapper
    result = yield yield_for_all_futures(func(self, *args, **kwargs))
  File ""/Users/bryanv/work/bokeh/bokeh/server/session.py"", line 154, in with_document_locked
    return func(*args, **kwargs)
  File ""/Users/bryanv/work/bokeh/bokeh/document/document.py"", line 1021, in wrapper
    return doc._with_self_as_curdoc(invoke)
  File ""/Users/bryanv/work/bokeh/bokeh/document/document.py"", line 1007, in _with_self_as_curdoc
    return f()
  File ""/Users/bryanv/work/bokeh/bokeh/document/document.py"", line 1020, in invoke
    return f(*args, **kwargs)
  File ""/Users/bryanv/tmp/foo.py"", line 54, in callback
    1/0
ZeroDivisionError: division by zero
```

This is useful to users but also makes certain kinds of core dev far more accessible. ",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1865,161128782,7371,3834332,2018-01-04 13:55:27,2018-01-04 17:27:09,closed,Connect GraphRenderer to range change events,"This PR fixes a regression when zooming on plots with a GraphRenderer. As described in #7370 zooming causes the nodes to snap to the origin. By connecting the ``GraphRenderer.set_data`` method to range change events just as was done for the ``GlyphRenderer`` in #7363 the issue is resolved.

- [x] issues: fixes #7370
- [ ] tests added / passed

  ",1,1,['status: accepted']
1866,161019873,7366,3834332,2018-01-03 23:02:24,2018-01-03 23:30:58,closed,Correct datetime conversion when subsecond fractions are present,"The existing code called `total_seconds` on a TimeDelta, as well as explicitly added `microseconds` back in. However, this resulted in a doubling of the microsecond component, since `total_seconds` already includes this portion:

https://docs.python.org/2/library/datetime.html#datetime.timedelta.total_seconds

This was never discoverd because all tests of `convert_datetime_type` on datetime values only exercised ""exact date"" values.

- [x] issues: fixes #6680
- [x] tests added / passed
",2,1,['status: accepted']
1867,160804813,7363,3834332,2018-01-02 21:14:43,2018-01-03 15:04:57,closed,Support updates to factor range factors,"- [x] issues: fixes #7084 fixes #7083
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,2,['status: accepted']
1868,160668446,7361,3834332,2018-01-02 01:57:23,2018-01-02 18:13:24,closed,Fix errant scroll to end on DataTable with no selection,"This problem was caused by applying the scroll computation in the case where there was an empty selection. In this instance, the scroll index was computed using `Math.min.apply(null, [])` which is `Infinity`, resulting in a scroll to the very end. The moves the logic for computing the index in to a method on the model (with the fix for empty selections) and places it under test.

- [x] issues: fixes #7139
- [x] tests added / passed
",1,2,['status: accepted']
1869,160666624,7360,3834332,2018-01-02 01:00:15,2018-01-03 16:46:25,closed,Fix broken generic text legend.,"This PR updates `draw_legend_for_index` render empty space in legends.  The previous implementation simply rendered the word ""text"" unconditionally which is not useful. Now text glyphs can added to legends in combination with other glyphs in order to be able to hide or mute them together:

<img width=""561"" alt=""screen shot 2018-01-03 at 09 23 14"" src=""https://user-images.githubusercontent.com/1078448/34527086-0c2a775e-f06a-11e7-94ca-ee6f5aa9ef91.png"">


issues: fixes #7337



  ",0,2,['status: accepted']
1870,160564353,7353,3834332,2017-12-29 21:55:06,2017-12-30 01:19:49,closed,Add integration/layout to examples.yaml,"Followup on PR #7350.

fixes #7164
",1,1,['status: accepted']
1871,160547436,7352,3834332,2017-12-29 18:33:18,2017-12-30 17:39:22,closed,Rewrite models/tools (except toolbars) in TypeScript,"I don't want to even count the time I burned on this.

addresses #6481 
",2,14,['status: accepted']
1872,160409604,7350,3834332,2017-12-28 16:08:38,2017-12-28 17:55:36,closed,Add test_axis_label_extra_x_ranges integration test,"fixes #7164 
",7,2,['status: accepted']
1873,160157931,7347,3834332,2017-12-26 18:56:43,2017-12-27 16:59:04,closed,fix initialization order issue,"- [x] issues: fixes #7304
- [ ] tests added / passed

cc @mattpap this seems to resolve the issue, do you have any additional comments?",1,1,['status: accepted']
1874,160151344,7346,3834332,2017-12-26 17:30:34,2017-12-26 18:10:55,closed,Resolve pytest --log-file conflict,"Recent versions of pytest fail with this error:
```
argparse.ArgumentError: argument --log-file: conflicting option string: --log-file
```

This PR changes the cusotm option added in `tests/conftest.py` to be `--examples-log-file` instead. A grep of the CI tests did not find any usage of the old `--log-file` argument (the default value is ""examples.log"" which is what seems to be being used).

",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1875,160129498,7345,3834332,2017-12-26 13:26:55,2017-12-26 17:25:39,closed,Fix minor typos in bokeh server docs,"Fixes #7344
",1,1,['status: accepted']
1876,159721513,7342,3834332,2017-12-21 18:26:19,2017-12-26 23:00:34,closed,delay match_aspect adjustment,"The commit moves the aspect ratio adjust (for a single plot update) to after the unioned bounds are computed for the DataRange renderers. Previously the aspect correction happened on all the individual renderer bounds, before the call to update. This could result in incorrect aspect-corrected overall bounds in some situations.

Note: use of match_aspect with linked DataRange1d across multiple plots will probably yield undefined/undesirable behavior and should be considered unsupported.

- [x] issues: fixes #7218
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
#",2,4,['status: accepted']
1877,159543300,7340,3834332,2017-12-20 23:36:24,2017-12-21 18:05:23,closed,Sweet phantomjs dependency,"- [#7327 ] issues: fixes 
- [NA] tests added / passed - Can add, just need to know preferred test directory I should add to.
- [NA] release document entry (if new feature or API change)
",5,4,['status: accepted']
1878,159478545,7339,3834332,2017-12-20 17:45:20,2017-12-20 19:03:03,closed,remove bokeh.client 'app' examples,"issues: fixes #6887
",0,2,['status: accepted']
1879,159217579,7334,3834332,2017-12-19 16:49:04,2017-12-19 18:13:22,closed,"Compute correct attachment side when value = ""vertical""","Recent change to remove ""view"" coordinates and use screen coordinates throughout did not fix this codepath up.

- [x] issues: fixes #7291
- [x] tests added / passed
",2,2,['status: accepted']
1880,159014829,7333,3834332,2017-12-18 20:55:07,2017-12-19 16:50:45,closed,Initialize Box's layout variables in initialize(),fixes #7332 ,0,1,['status: accepted']
1881,158981003,7331,3834332,2017-12-18 18:05:53,2017-12-18 19:27:36,closed,replace strict fp equality with allclose,"These tests are failing for me locally, which has been fairly annoying. ",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
1882,158807990,7329,3834332,2017-12-17 22:50:23,2018-02-01 15:43:45,closed,Tornado 5 Compatibility ,"- [x] issues: fixes #7308
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,2,['status: accepted']
1883,158689048,7326,3834332,2017-12-15 20:38:46,2017-12-16 20:34:34,closed,Components warning,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7323
- [ ] tests added / passed (not relevant here?)
- [ ] release document entry (if new feature or API change) (not relevant here?)",3,17,['status: accepted']
1884,158673118,7325,3834332,2017-12-15 19:11:44,2017-12-16 00:16:44,closed,Fix for themes in notebooks,"
This PR proposes a small change that seems to fix the issue described in #7319 where bokeh themes fail to apply in the notebook environment. 

I've had this diff outstanding for a while in my local copy of bokeh and I have not yet noticed any issues in other contexts (e.g bokeh server). That said, here might be other implications/issues that I am currently unaware of so maybe this simple fix isn't sufficient.",2,1,['status: accepted']
1885,158640465,7324,3834332,2017-12-15 16:20:25,2017-12-16 00:12:35,closed,Bryanv/more cleanup,"This PR renames and applies the API decorators `general` and `dev` for public APIs across the entire codebase. Also updates the `bokeh.application` subpackage to have consistent module template and testing conventions. 
",1,4,['status: accepted']
1886,158482057,7322,3834332,2017-12-14 22:44:17,2017-12-15 14:45:29,closed,make docs version warning banner stick to the top always," issues: fixes #7318
 tests added / passed

",1,2,['status: accepted']
1887,158207450,7316,3834332,2017-12-13 21:17:52,2017-12-13 22:11:50,closed,Sort app names,issues: fixes #7289 ,1,1,['status: accepted']
1888,158131627,7315,3834332,2017-12-13 15:55:11,2017-12-13 20:14:11,closed,Rewrite embed in TypeScript,"addresses #6481
",0,5,['status: accepted']
1889,157922140,7314,3834332,2017-12-12 19:48:19,2017-12-13 14:54:37,closed,Add support for npm 5 and upgrade no nodejs 8.8+,"Update to nodejs 8.8+ isn't strictly necessary, but would be a nice step forward. This is required for build/tests, but at runtime (custom models) node 6.10+ is sufficient (I didn't update requirements in `bokeh.util.compiler`).

fixes #7267",1,8,['status: accepted']
1890,157567809,7311,3834332,2017-12-11 13:52:17,2017-12-11 17:21:50,closed,Remove dependency on PhantomJS when the default webdriver is not used,"Resolves [#7298](https://github.com/bokeh/bokeh/issues/7298).
",1,1,['status: accepted']
1891,157394117,7306,3834332,2017-12-09 16:38:59,2017-12-13 15:03:27,closed,Rewrite layouts and plots in TypeScript,"This rewrites `models/{layouts,plots,canvas,grids,scales}`.

addresses #6481",1,24,['status: accepted']
1892,157376910,7305,3834332,2017-12-09 06:56:47,2017-12-15 15:17:02,closed,Using 'utf-8' codec to open scripts in windows,"Using 'utf-8' codec to open scripts in bokeh app in windows

- [x] issues: fixes #7272 

",6,1,['status: declined']
1893,157284583,7300,3834332,2017-12-08 16:41:44,2017-12-11 17:25:03,closed,Make it possible to specify fixed attachment to HoverTool,Fixes #7292,5,2,['status: accepted']
1894,157126007,7295,3834332,2017-12-07 23:12:24,2017-12-08 06:19:48,closed,Removed a broken link from server.rst,"Removed a broken link. No changes made to code.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1895,157083576,7294,3834332,2017-12-07 19:39:20,2017-12-08 15:50:04,closed,Added snap_to_zoom option for MercatorTileSource,"As discussed in https://github.com/bokeh/bokeh/issues/6655 and https://github.com/bokeh/bokeh/issues/5126, when using a map tile source the plot will snap to the nearest zoom level, which is not always desirable and often makes it very difficult to initialize the plot to a reasonable zoom range.

This PR adds an option called ``snap_to_zoom`` to the ``MercatorTileSource`` which disables this behavior and instead simply tries to maintain the appropriate aspect ratio. It does this by finding the supplied range which is closest to the next zoom level and then adjusts the other range by scaling it as a fraction of the range of the closest zoom level. In my testing this produces much better results overall, but I've left the option set to True by default to maintain backward compatibility.

Here is a before and after comparison. I've added two points to the plot which also correspond to the lower and upper bounds for each axis. As you can see the default (and current) behavior result in a suboptimal plot:

<img width=""604"" alt=""screen shot 2017-12-07 at 7 36 43 pm"" src=""https://user-images.githubusercontent.com/1550771/33735022-ff03d956-db85-11e7-9e32-902ea877470c.png"">

When we disable the ``snap_to_zoom`` option we can see that it still maintains the aspect but now tries to respect the extents as much as possible:

<img width=""600"" alt=""screen shot 2017-12-07 at 7 36 34 pm"" src=""https://user-images.githubusercontent.com/1550771/33735090-3c972f48-db86-11e7-9a00-e0233b88feb3.png"">

Before going further down this path it would be great to get your feedback @bryevdv. Personally I think this behavior is much preferable over the default behavior but I didn't want to unilaterally change default behavior. I also think this is preferable over respecting user supplied ranges even if they distort aspect because that's never a good thing to do. However we could consider allowing that by adding a ``snap_extents`` parameter instead, with 'zoom', 'aspect' and ``None`` options. 

- [x] issues: fixes #xxxx
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,3,['status: accepted']
1896,157060430,7293,3834332,2017-12-07 17:49:18,2017-12-07 20:50:11,closed,Fix BoxZoomTool match_aspect regression,"This PR fixes a regression in the BoxZoomTool when used with the ``match_aspect`` introduced in https://github.com/bokeh/bokeh/pull/7108 and adds unit tests to avoid future regressions.

- [x] issues: fixes #7290
- [x] tests added / passed",1,1,['status: accepted']
1897,156814919,7286,3834332,2017-12-06 19:13:34,2017-12-06 19:46:08,closed,add test to check for reserved windows filename roots,"- [x] issues: fixes #7283
- [x] tests added / passed
",5,2,['status: accepted']
1898,156756056,7284,3834332,2017-12-06 15:16:33,2017-12-06 15:37:37,closed,exclude Typescript typings from sdist tarball,"issues: fixes #7283
",5,1,['status: accepted']
1899,156568375,7282,3834332,2017-12-05 20:39:40,2017-12-05 21:12:38,closed,add missing return statements to get_indices TypeScript version,"Function always returned `undefined` due to missing `return` statements, caused `OpenURL` to fail.
",3,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1900,156370875,7278,3834332,2017-12-05 04:41:23,2017-12-05 16:58:56,closed,changed example to include import statement,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7279
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: accepted']
1901,156302499,7277,3834332,2017-12-04 20:50:52,2017-12-05 16:19:00,closed,Add proper error message when invalid BOKEH_LOG_LEVEL (#7276),"
- [x] issues: fixes #7276

",2,1,['status: accepted']
1902,156219971,7275,3834332,2017-12-04 15:04:41,2017-12-08 12:08:31,closed,Rewrite axes in TypeScript,"This rewrites axes, ranges, some of renderers and last bits of the core (visuals, mixins and layout).

addresses #6481 ",1,35,['status: accepted']
1903,155935276,7269,3834332,2017-12-01 19:12:05,2017-12-05 18:17:26,closed,Separate standalone notebook embed path ,"Makes standalone notebook path non-deferred for now in order to restore notebook comms functionality. In the future probably just a ""comms init"" step can be non-deferred, and a subsequent ""comms start"" step can be deferred along with everything else. 

- [x] issues: fixes #7268
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,2,['status: accepted']
1904,155683134,7265,3834332,2017-11-30 18:20:20,2017-11-30 18:44:16,closed,update for jinja exposed an issue with Options processing,fix formatting for new jinja2 version ,1,1,"['tag: component: docs', 'status: accepted', 'type: task']"
1905,155658731,7264,3834332,2017-11-30 16:37:41,2017-12-08 15:54:59,closed,Use HTTPS to get tiles from CartoDB,"I took the opportunity to update the URLs to https in the attributions as well.
I haven't changed the URL to the stamen tiles. They seem to be available through https but the certificate is invalid which results in browser showing an error message.

- [x] issues: fixes #3551
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,1,['status: accepted']
1906,155265068,7261,3834332,2017-11-29 07:12:56,2018-02-09 17:44:05,closed,Selection model and selection architecture refactor,"This PR is an overhaul of the selection architecture. The goal is to clarify the roles of each piece of the selection machinery and also to create a new models to represent selections and inspections. 

There's more information about the goals of the selection architecture refactor and notes on the selection machinery on [this page](https://github.com/bokeh/bokeh/wiki/Selection-Architecture-Refactor) in the wiki. 

- [x] issues: fixes #6845 #7416 #7054
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",30,40,['status: accepted']
1907,154905864,7257,3834332,2017-11-27 20:14:41,2017-11-27 21:07:43,closed,Don't cut corners and implement proper get_size() method,"Performance is still worse than before, but that's expected. This should improve with further refinements to layout and rendering pipeline.

fixes #7255 
",2,1,['status: accepted']
1908,154679265,7253,3834332,2017-11-26 13:34:33,2018-02-28 21:45:37,closed,Add MetricTickFormatter and tests,"- [x] issues: fixes #7252
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)",8,4,['status: declined']
1909,154677561,7251,3834332,2017-11-26 12:46:25,2017-11-27 15:42:14,closed,Fix incorrect values of all-integers Sliders,"Fixes #7250 
",1,1,['status: accepted']
1910,154296192,7247,3834332,2017-11-23 04:05:49,2017-11-27 16:46:25,closed,REF: Simplify examples/plotting/file/brewer.py dataframe creation and stacked function,"Stacked area chart example - https://bokeh.pydata.org/en/latest/docs/gallery/brewer.html can be simplified in 2 parts.

- generation of dataframe
- `stacked` function

- [x] issues: fixes #7236 

",0,1,['status: accepted']
1911,153987382,7241,3834332,2017-11-21 20:00:50,2017-11-22 22:09:17,closed,Missing figure import on graph network example,"Fixes missing figure import on graph network example.

https://bokeh.pydata.org/en/latest/docs/user_guide/graph.html#edge-and-node-renderers



- [ X] issues: fixes #7240
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted']"
1912,153399502,7233,3834332,2017-11-17 21:37:10,2017-12-01 21:44:49,closed,Rewrite core in TypeScript,"This transitions most of core (excluding visuals), document and model to TypeScript.

addresses #6481",1,50,['status: accepted']
1913,153364723,7232,3834332,2017-11-17 18:32:32,2017-11-17 20:02:15,closed,Bryanv/small fixes 01211,"Just clearing out some simple docs/examples PRs

- [x] issues: fixes #7229 fixes #7190  fixes #7172 fixes #6626
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,7,['status: accepted']
1914,153363080,7231,3834332,2017-11-17 18:23:31,2017-11-27 16:43:48,closed,Fix app/spectrogram example,fixes #7230,9,2,['status: accepted']
1915,152897822,7225,3834332,2017-11-15 22:05:46,2017-11-16 14:58:02,closed,Invert range_info.sdy after switch to screen coordinates,"fixes #7224
",0,1,['status: accepted']
1916,152892110,7223,3834332,2017-11-15 21:39:04,2017-11-15 22:02:29,closed,Double encode escapes (e.g. \n) in HTML-safe JSON strings,"fixes #7222 
",1,1,['status: accepted']
1917,152838056,7221,3834332,2017-11-15 17:29:02,2017-11-15 18:18:56,closed,Add support for IE 11 and Edge 14 to canvas image smoothing fixups; fixes #7213.,"(Depends on #7220) 

IE11 screenshot:

<img width=""906"" alt=""screen shot 2017-11-15 at 5 14 55 pm"" src=""https://user-images.githubusercontent.com/1929/32850557-68ac08d2-ca2a-11e7-9b15-26862bd4c5ea.png"">


- [x] issues: fixes #7213 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
1918,152837731,7220,3834332,2017-11-15 17:27:42,2017-11-15 17:55:06,closed,Remove unsupported-by-IE11 template string (see #7212).,"Screenshot shows bokeh now successfully loading in notebook in IE11:

<img width=""906"" alt=""screen shot 2017-11-15 at 5 14 55 pm"" src=""https://user-images.githubusercontent.com/1929/32850452-19a7e5d0-ca2a-11e7-9713-f4e71d0e3864.png"">

- [x] issues: fixes #7212
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I haven't yet run any other tests.",0,1,['status: accepted']
1919,152739082,7215,3834332,2017-11-15 10:38:53,2017-11-30 15:12:45,closed,Allow ES6 output from bokehjs' build,"The default is still ES5. To generate ES6 issue `gulp build --es6`. Everything else works the same. Nice side effect is size reduction of bokeh.min.js from 651 to 580 kB.

fixes #7214 
",0,3,['status: accepted']
1920,152312548,7208,3834332,2017-11-13 18:28:31,2017-11-30 15:11:14,closed,Rewrite models/tickers/* in TypeScript,addresses #6481,2,13,['status: accepted']
1921,152295420,7207,3834332,2017-11-13 17:11:01,2017-11-15 17:58:51,closed,add kwargs documentation for DirectoryHandler,"- [ ] issues: none
- [x] tests added / passed: none
- [x] release document entry (if new feature or API change)

Added so that the required filename keyword is exposed to docs in https://bokeh.pydata.org/en/latest/docs/reference/application/handlers/directory.html#bokeh.application.handlers.directory.DirectoryHandler.__init__",4,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1922,152038484,7204,3834332,2017-11-11 02:59:32,2017-11-27 16:53:52,closed,fix tooltip rendering with CDSview,fixes issue #7189,7,4,['status: accepted']
1923,152015698,7203,3834332,2017-11-10 22:25:06,2017-11-15 15:29:27,closed,Encode JSON into application/json script for standalone HTML,"This splits off docs JSON from javascript script into a HTML-safe encoded application/json script in standalone HTML output mode. Otherwise it uses HTML-safe encoded JavaScript string with JSON content. As long as one uses `script_for_render_items()` as the **only** way to generate bokeh script, then vulnerability described in #7039 is fixed. 

fixes #7039 ",2,2,['status: accepted']
1924,151935280,7201,3834332,2017-11-10 15:31:01,2017-11-15 16:20:00,closed,multi_line() Documentation Addition,"Adding in additional Information regarding  CDS data structure used in multi_line() to clarify usage.


- [ X] issues: fixes #7198
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,3,['status: accepted']
1925,151922450,7200,3834332,2017-11-10 14:37:54,2017-11-10 15:26:26,closed,Adding additional information in the multi_line() documentation,"The notice was a little unclear in how to use  CDS formatted for multi_line (#7198). Adding another example source code may help as well.


- [ X] issues: fixes #7198
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1926,151903061,7199,3834332,2017-11-10 13:06:13,2017-11-10 22:05:34,closed,Missing import of logger in toolbar.coffee,"Missing import of logger.
https://github.com/bokeh/bokeh/edit/master/bokehjs/src/coffee/models/tools/toolbar.coffee#L35
Error is logged if event_type does not match and therefore a Reference error was raised because of the missing import.
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1927,151788989,7197,3834332,2017-11-09 23:18:05,2017-11-15 17:50:28,closed,Allow to recompute layout when panels' dimensions change,"fixes #4394
fixes #6676 
~~~fixes #6356~~~
",10,4,['status: accepted']
1928,151670272,7196,3834332,2017-11-09 14:45:19,2017-11-09 17:26:00,closed,Make extensions_ion_range_slider work with CoffeeScript 2,fixes #7193 ,2,2,['status: accepted']
1929,151667423,7195,3834332,2017-11-09 14:34:49,2017-12-20 19:00:31,closed,Don't require CSS width/height for responsive sizing modes,fixes #7014,10,1,['status: accepted']
1930,151461401,7192,3834332,2017-11-08 18:36:41,2017-11-14 19:00:19,closed,Reduce (multi) plot initialization time,"This so far reduces initialization time of the 60 plot example from 37 to 22 seconds on my hardware. Further optimization is possible, but not as cheap as this. I may add some more if time permits. Otherwise I will look into this more after release.

addresses #6294 ",1,3,['status: accepted']
1931,151263893,7188,3834332,2017-11-08 00:24:27,2017-11-08 17:31:12,closed,Change css_classes property type to List,"In order for in place updates such as `.append` to properly trigger events, the property type must be `List` (so that `PropertyValueList` is used to wrap the value). This PR changes the type to `List`, but also adds an `accept` clause so that setting from tuples, etc. still functions.


- [x] issues: fixes #6841
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
1932,151209841,7187,3834332,2017-11-07 19:48:14,2017-11-07 21:42:14,closed,Permit ColumnsStreamedEvent to accept DataFrames,"When calling CDS stream with DataFrames, the DataFrame would make it all the way to the `ColumnsStreamedEvent`, which presented it as-is for JSON encoding. This fails because DataFrames are not directly JSON serializable.

For compartmentalization and ease of testing, the issue is resolved by teaching `ColumnsStreamedEvent` how to convert DataFrames to the appropriate serializable dict itself. Other possible solutions not pursued at this time:

* ensure `ColumnsStreamedEvent` only ever receives a dict (higher level)
* teach the Bokeh JSON encoder how to handle DataFrames (lower level)

- [x] issues: fixes #7184
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1933,151102134,7182,3834332,2017-11-07 12:36:24,2017-11-07 13:20:32,closed,"Move annotations' ""integration"" tests to examples/integration",fixes #7181 ,1,1,['status: accepted']
1934,151054722,7180,3834332,2017-11-07 08:50:06,2017-11-07 16:16:55,closed,Docs: Update zeppelin integration,"Specify the usage of  bkzep for bokeh functionality in zeppelin

- [x] issues: fixes #7179
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
1935,151024740,7177,3834332,2017-11-07 04:51:19,2017-11-07 17:41:58,closed,Add missing GraphRendererView.node/edge_renderer.data_source.change signal listeners,"- [ ] issues: fixes #6946 
- [ ] ~~~tests added / passed~~~
- [ ] ~~~release document entry (if new feature or API change)~~~
",7,1,['status: accepted']
1936,150943159,7175,3834332,2017-11-06 19:50:51,2017-11-06 22:25:44,closed,add init and validation check for map ranges,"- [x] issues: fixes #7028 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

Not super happy with this but it will do for now. Nothing is done with ""extra"" ranges but I don't think that's common enough to bother with. ",1,3,['status: accepted']
1937,150727765,7171,3834332,2017-11-05 15:36:20,2017-11-05 16:42:33,closed,Correction to example,"It was lacking the ""application"" variable and was pointing only to the modify_doc function

Signed-off-by: Christian Tremblay <christian.tremblay@servisys.com>

- [ ] issues: fixes #7170

Please forget the /scripts file modified here... 
",2,1,['status: declined']
1938,150540519,7162,3834332,2017-11-03 14:24:47,2017-11-03 20:23:24,closed,Fix documentation for properties.RGB,"Fix copy&paste error in documentation.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
1939,150539280,7161,3834332,2017-11-03 14:19:38,2017-11-06 13:20:03,closed,Implement 'disabled' for 'Select' and 'MultiSelect' widgets,"See issue: #1376 
- [X] tests passed

",1,2,['status: accepted']
1940,150355429,7158,3834332,2017-11-02 17:27:50,2017-11-07 09:57:16,closed,Upgrade to CoffeeScript 2,"fixes #7154 
",7,12,['status: accepted']
1941,150349699,7157,3834332,2017-11-02 17:03:59,2017-12-20 16:00:43,closed,Add new widget NumberInput for floating point numbers.,"Add a new widget type: NumberInput.
This widget is useful for cases where using a slider is to imprecise or the range of possible values is large. Just like a slider it updates it's value while it is being changed. The code enforces that all values passed to the callback are inside the range defined by start and end. 

Supersedes #6237

- [X] issues: fixes #6173
- [X] tests passed
- [ ] release document entry (if new feature or API change)
",3,2,['status: declined']
1942,150233077,7153,3834332,2017-11-02 08:50:53,2017-11-02 14:47:09,closed,Update TypeScript to 2.6.1 and fix examples,"Contrary to my previous understanding, ""^2.6.1"" means that only first number (major version) can't change. Given that TypeScript introduces breaking changes in minor versions, I locked its version to 2.6.1 and will update when new compilers are available.",2,3,['status: accepted']
1943,150150619,7151,3834332,2017-11-01 21:26:27,2017-11-08 17:30:10,closed,Select widget optgroup feature enhancement #7150,"Added optgroup feature to Select widget, implemented as a Dict containing lists.

Code listing provided in Issue #7150 

I will require guidance with regards to possible tests for this feature. 


Thanks.",9,6,['status: accepted']
1944,150131593,7149,3834332,2017-11-01 20:00:02,2017-12-01 21:44:05,closed,Add support for multi-gesture tools,"All the current tools in bokeh are tied to a particular gesture, e.g. pan, box_zoom, box_select all make use of the pan gesture, however more complex tools like the draw tools suggested in (https://github.com/bokeh/bokeh/issues/6370) will require responding to multiple gestures to work effectively. This PR makes it possible to create a multi tool by declaring multiple ``event_types`` as an array rather than a single string. The tool will appear in its own section of the the toolbar and toggle all other tools sharing one of the same event types as inactive when it is activated.

In the example below I've added a few multi-tools (currently they don't have their own distinct icons), and have activated the pan and tap tools. When I select a multi-tool (the one with the lasso icon) which uses the ``pan`` and  ``tap`` events, both other tools are deactivated, and when I do the inverse and select pan and tap tools the multi-tool is also inactivated:

![multi_tool](https://user-images.githubusercontent.com/1550771/32294873-700533ce-bf3f-11e7-978c-cb774d681a0d.gif)

This PR simply provides the support for adding multi-gesture tools but does not yet add any concrete instance of such a tool. I'm therefore not quite sure how best to test this yet. Also let me know if you want any documentation entries for this. Hopefully this will allow us to eventually merge such tools back into bokeh (if deemed general enough). 

- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,4,"['status: accepted', 'reso: completed', 'tag: component: bokehjs']"
1945,149900400,7143,3834332,2017-10-31 20:31:54,2017-11-07 16:14:32,closed,note start/end of interactive periods on document,"- [x] issues: fixes #5937
- [x] tests added / passed

This PR adds support for ""linked"" LOD by making the document centrally responsible to note the start/end/duration of interactive periods. This simplifies the code at the point of usage and allows for some simple unit tests to be added. 

With this work, LOD start/end events are only triggered on the plot that originated the interactive period. 

Here is an example script that can be used:
```
import numpy as np

from bokeh.plotting import figure, show, output_file
from bokeh.layouts import row

N = 4000
x = np.random.random(size=N) * 100
y = np.random.random(size=N) * 100
radii = np.random.random(size=N) * 1.5
colors = [
    ""#%02x%02x%02x"" % (int(r), int(g), 150) for r, g in zip(50+2*x, 30+2*y)
]

p0 = figure()

p0.scatter(x, y, radius=radii,
          fill_color=colors, fill_alpha=0.6,
          line_color=None)

x = np.random.random(size=N) * 100
y = np.random.random(size=N) * 100
radii = np.random.random(size=N) * 1.5
colors = [
    ""#%02x%02x%02x"" % (int(r), int(g), 150) for r, g in zip(50+2*x, 30+2*y)
]

p1 = figure(x_range=p0.x_range, y_range=p0.y_range)

p1.scatter(x, y, radius=radii,
          fill_color=colors, fill_alpha=0.6,
          line_color=None)

output_file(""color_scatter.html"", title=""color_scatter.py example"")

show(row(p0, p1))  # open a browser
```

There are further refinements that could be made in the future. In particular the same simple LOD threshold applies for all plots but this is not always ideal. In particular default settings do not trigger LOD on the second plot in the `vector.py` example, because the data size for the `multi_line` is small (92) even though the total number of points that make up those lines is much larger.",5,1,['status: accepted']
1946,149746966,7140,3834332,2017-10-31 10:29:16,2017-11-07 16:15:11,closed,Make slider handles updatable from arrow keys,"- [x] issues: fixes #6862 

This was adapted from this [example](https://refreshless.com/nouislider/examples/#section-keyboard) in the nouislider documentation.

Tested this with the sliders example app and it works well, but I have yet to try this for sliders with multiple handles.

![image](https://i.imgur.com/0AqcuVq.gif)",4,3,['status: accepted']
1947,149651984,7137,3834332,2017-10-30 22:18:31,2017-11-06 16:33:51,closed,7131 caching of node js compilation on model bundling,"- [ ] issues: fixes #7131 
",10,10,['status: accepted']
1948,149624008,7136,3834332,2017-10-30 20:06:02,2017-10-30 20:49:55,closed,Suggest to install nodejs from defaults channel,fixes #7104 ,0,1,['status: accepted']
1949,149622820,7135,3834332,2017-10-30 20:00:43,2017-10-30 20:38:18,closed,"Implement {x,y}wheel_pan in bokehjs' plotting API","fixes #7114 
",0,1,['status: accepted']
1950,149618143,7134,3834332,2017-10-30 19:39:55,2017-10-30 20:16:11,closed,Allow using a function for range.callback in bokehjs,fixes #7130,1,1,['status: accepted']
1951,149594314,7133,3834332,2017-10-30 17:57:16,2017-10-30 18:25:23,closed,handle model=None for server_session,"- [x] issues: fixes #7128
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Handling of `model=None` was broken in the `embed.py` refactor for `0.12.10`. This PR restores the capability and adds a unit test to explicitly test this use case.  

With the change so far, this code functions as expected:
```
bokeh serve sliders.py --allow-websocket-origin=localhost:8080
```

```
from flask import Flask, render_template

from bokeh.client import pull_session
from bokeh.embed import server_session

import bokeh
print(bokeh.__version__)

app = Flask(__name__)

@app.route('/', methods=['GET'])
def bkapp_page():
    session = pull_session(url=""http://localhost:5006/sliders"")
    script = server_session(None, session.id, url='http://localhost:5006/sliders')
    return render_template(""embed.html"", script=script, template=""Flask"")

if __name__ == '__main__':
    app.run(port=8080)
```

However, if a `session.push` is added to the flask app, the app renders but is unresponsive. I would like to resolve this issue in this PR before merging. *Update:* it appears this second problem was also present in `0.12.9`",2,1,['status: accepted']
1952,149420442,7126,3834332,2017-10-30 01:35:57,2018-02-28 21:43:51,closed,Add JS script to correct element when showing plot,"This PR makes it possible to correctly display multiple bokeh plots in a single jupyter notebook cell.

The array index was hard-coded as 0, meaning only first plot was properly added to notebook cell. Now, add JS script to more recently added bokeh element, so that multiple plots in the same cell will be embedded.

_I'm not sure how to add a test for this fix. I'd appreciate any help to add the appropriate tests._

- [x] issues: fixes #7125 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",27,5,['status: declined']
1953,149393596,7122,3834332,2017-10-29 16:32:26,2017-10-29 17:15:28,closed,documentation - fix version,"probably a typo, `0.12.0` in document title should be `0.12.10`

- issues: fixes #7121
",1,1,['status: accepted']
1954,148911407,7108,3834332,2017-10-26 11:46:35,2017-11-08 17:36:43,closed,Switch layout to use screen coordinates,"~~Very early work-in-progress.~~

fixes #6447
",11,47,['status: accepted']
1955,148909879,7107,3834332,2017-10-26 11:39:05,2017-12-07 02:41:41,closed,7091 how to keep state in bokeh server across more than one worker,"PROTOTYPE for adding session storage

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #7091 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,13,['status: declined']
1956,148826056,7105,3834332,2017-10-26 02:48:16,2017-10-27 17:05:01,closed,Fixes issue #7103 by updating documentation on BokehJS standalone installation guidelines,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #7103 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1957,148691057,7102,3834332,2017-10-25 14:51:47,2017-10-25 15:27:19,closed,Fix typescript compilation failures of gulp build files,,0,1,"['type: bug', 'status: accepted', 'tag: component: build']"
1958,148549240,7100,3834332,2017-10-25 01:14:25,2017-10-25 15:28:05,closed,Renamed Custom attribute from range to slider,No issue number as per gitter conversation. ,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
1959,148508813,7099,3834332,2017-10-24 20:47:41,2017-10-25 15:53:56,closed,compute rect dists more carefully,"- [x] issues: fixes #6583
- [x] tests added/passed

@clairetang6 this is your suggested function only modified to always set `vpt_corner` to something. If you have suggestions for additional/better tests please let me know (or just add them). TBH I am still not 100% clear on `sx0` and `sy1` but digging into the details will have to be another day. 
",2,1,['status: accepted']
1960,148499777,7098,3834332,2017-10-24 20:07:20,2017-10-24 22:21:32,closed,Bryanv/some docs,"- [x] issues: closes #7081, closes #1007
- [x] release document entry (if new feature or API change)

*  Removes `notebook_div` from Bokeh ""Embedding"" user guide. Does not replace with `notebook_content` as it is too specialized for general use.

* adds newer/better information about buiding the docs, a link to open docs issues, more information about different types of docs and where they are located, and expected conventions

* move `notebook_content` to public *dev* API

* add warnings for raw JS/HTML cases",0,4,['status: accepted']
1961,148430014,7097,3834332,2017-10-24 15:22:37,2017-10-24 15:39:52,closed,Fix typo in server.rst,"- [ ] issues: fixes #7096 
",2,1,['status: accepted']
1962,148012949,7086,3834332,2017-10-22 20:51:48,2017-10-24 15:41:04,closed,factor rect hit-testing against an index out to glyph view,"- [x] issues: fixes #5298
- [x] tests added / passed

In the interest of remaining consistent with `rect` behaviour, and also re-using code, I have factored the rect-rect index hit testing up to glyph to also be used by `Box` subclasses. Will add test before merging. ",1,2,['status: accepted']
1963,147695900,7078,3834332,2017-10-20 00:32:20,2017-10-20 08:29:17,closed,no diff for random jitter example, issues: fixes #7053,0,1,['status: accepted']
1964,147689367,7077,3834332,2017-10-19 23:31:28,2017-10-20 20:01:55,closed,allow passing callables to Server as a convenience,"- [x] issues: fixes #6565
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @mrocklin ",2,2,['status: accepted']
1965,147683263,7076,3834332,2017-10-19 22:45:00,2017-10-22 19:30:26,closed,fix distance spec hierarchy,"- [x] issues: fixes #6409
- [x] tests added / passed

This PR makes `ScreenDistanceSpec` and `DataDistanceSpec` properly be `UnitsSpec` subclasses. Since there is only one valid unit value, in order to keep existing semantics identical, and not avoid a useless `_units` property that can only accept one value the descriptor machinery for each was specialized. 
",1,1,['status: accepted']
1966,147610502,7073,3834332,2017-10-19 16:54:18,2017-10-23 21:25:45,closed,compute 'nearest' to span only in one dimension," issues: fixes #6174

When computing the nearest point for determining where to position a tooltip, when the hit geometry is a span, only compute the distance along the transverse dimension.

This PR also:

* deletes a duplicative ""color to hex"" function in favor of one in utils
* factors out some common code

In general this is all too complicated and untested. A larger refactor should be considered, perhaps in conjunction with selection refactor work, or immediately after. ",5,3,['status: accepted']
1967,147406709,7069,3834332,2017-10-18 20:48:55,2017-10-20 20:03:59,closed,ignore locked callbacks when a session is destroyed,"- [x] issues: fixes #3538 
- [x] tests added / passed

@havocp this is a trivial change, but I'd appreciate your input. I believe the test changes reflect your intent in the original issue, but please confirm if you can. ",3,1,['status: accepted']
1968,147373194,7068,3834332,2017-10-18 18:14:15,2017-10-20 20:06:56,closed,"slice indices must be non-negative, not positive","- [x] issues: fixes #6545
- [x] tests added / passed

@nleclercq can you test this PR to confirm that it matches your expectations? 
",1,1,['status: accepted']
1969,147370494,7067,3834332,2017-10-18 18:01:58,2017-10-20 20:05:35,closed,allow notebook URLs to specify protocol,"- [x] issues: fixes #6599
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
1970,147165129,7064,3834332,2017-10-17 22:03:59,2017-10-18 17:26:19,closed,Add basic support for Step glyph,"This PR adds a `Step` glyph (and `Figure.step`) method that supports three modes: `before`, `center`, `after`. No support for hit-testing is included in this work (can be added in follow-on work based on user interest).

Additionally, the hex color formatting for all `examples/reference/models` scripts has been made consistent. 

- [x] issues: fixes #3644
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap please confirm the correctness of the TS API changes. ",5,3,['status: accepted']
1971,147117427,7063,3834332,2017-10-17 18:26:11,2017-10-18 14:13:33,closed,only consider renderers on the selection tool's associated plot,"- [x] issues: fixes #7062
- [ ] tests added / passed

@mattpap do you have any suggestions for putting this better under test? ",1,1,['status: accepted']
1972,146886091,7061,3834332,2017-10-16 20:53:59,2017-10-17 02:37:12,closed,Fix axis label positioning,"![image](https://user-images.githubusercontent.com/27475/31634753-de1e4864-b2c4-11e7-9942-6c015ae8ac54.png)

fixes #7060 
",0,2,['status: accepted']
1973,146761367,7058,3834332,2017-10-16 11:35:29,2017-10-16 15:00:44,closed,"Remove bk-logo-{medium,large}",fixes #7056,1,1,['status: accepted']
1974,146632936,7055,3834332,2017-10-15 03:49:13,2017-10-15 17:23:00,closed,use class module hack to always return new copies of tile providers,"- [x] issues: fixes #6590
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap given the limited scope of this PR I intent to merge tomorrow for an RC2",1,3,['status: accepted']
1975,146538812,7052,3834332,2017-10-13 19:40:13,2017-10-13 20:38:50,closed,Upgrade TypeScript to version 2.5.3,"Should fix build failures.
",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
1976,146429270,7050,3834332,2017-10-13 11:00:34,2017-10-13 18:07:05,closed,fixes: Datepicker returns one day earlier than picked in IE (#7048),"- [ ] issues: fixes #7048
Replaces my former PR for #4965.",2,2,['status: accepted']
1977,146301222,7049,3834332,2017-10-12 20:02:57,2017-10-12 20:34:51,closed,sort the results of _mask_data so patch draw order is stable," issues: fixes #3601

I tested this with existing choropleth examples and it seems fine. 

@philippjfr I can't get HV to work at all right now, and there is no MRE in the issue, so someone else needs to confirm that it functions as desired with overlapping patches. ",2,1,['status: accepted']
1978,146264696,7047,3834332,2017-10-12 17:08:45,2017-10-12 17:50:29,closed,Properly maintain active tools when proxying toolbars,"This makes shared tools initialize properly, but this doesn't fix the overall mess that tool/toolbar initialization is. I will address the broader issue after PR #7008.

fixes #6921",1,1,['status: accepted']
1979,146249975,7046,3834332,2017-10-12 16:03:56,2017-10-12 16:36:26,closed,ensure Document modules are properly disposed of,"- [x] issues: fixes #7044
- [x] tests added / passed

This PR adds a detailed check in `Document.delete_modules` that saved modules only have the expected set of referrers. The method `delete_modules` is made responsible for clearing the internal list of modules so that they may be correctly reaped. Additionally some extra logging has been added to trace the session destruction codepath. ",1,1,['status: accepted']
1980,146051369,7043,3834332,2017-10-11 20:18:21,2017-10-11 21:52:07,closed,Update properties.py,issues: fixes #6258 ,0,4,['status: accepted']
1981,146039256,7041,3834332,2017-10-11 19:24:14,2017-10-11 19:32:46,closed,"Changed to handle nx2 scale ""kwarg error","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
1982,146035492,7040,3834332,2017-10-11 19:07:30,2017-10-11 20:04:29,closed,update hover_tool,"issues: fixes #6891 
",0,2,['status: accepted']
1983,145849692,7037,3834332,2017-10-11 03:38:25,2017-10-11 18:13:30,closed,Update slider.coffee,"issues: fixes #6831 
",0,2,['status: accepted']
1984,145817493,7036,3834332,2017-10-10 22:32:15,2017-10-11 04:26:00,closed,force cds view indices to be recomputed on table updates,"- [x] issues: fixes #7035

",1,1,['status: accepted']
1985,145712424,7034,3834332,2017-10-10 14:41:16,2017-10-10 15:07:31,closed,update docs to reflect new behavior of session_context,"Docs were not updated to reflect changes made to session_context in #5901. The docs reference to users having access to `request.cookies ` (and other attributes) which was removed in v0.12.5. New wording reflects the current restrictions.

Issue related to this PR is #7031.

",1,1,['status: accepted']
1986,145600026,7029,3834332,2017-10-10 05:02:29,2017-10-10 16:47:04,closed,fixed URL typo in examples app & changed README URL to https,"fixed URL typo(""hhttp"" -> ""https"") in examples app & also changed README URL to https.


- issues: None
- reso: completed 
- type: bug
- milestone: short-term

",1,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
1987,145555731,7027,3834332,2017-10-09 21:51:13,2017-10-11 14:44:17,closed,Fix bug : DatePicker errors on input from Chrome on Windows 8.1,"closes #4965

- [ ] issues: fixes #4965
",1,1,['status: accepted']
1988,145525233,7025,3834332,2017-10-09 19:03:50,2017-10-10 16:44:01,closed,call formatter for major categorical ticks,"- [x] issues: fixes #7015
- [ ] tests added / passed

A small change applies formatting to the major ticks adjacent to to the axis:

<img width=""639"" alt=""screen shot 2017-10-09 at 13 59 14"" src=""https://user-images.githubusercontent.com/1078448/31353982-38908c88-acfa-11e7-9e00-2042c7bfbae3.png"">

However, not in the nested case, it does *not* apply formatting to the higher level:

<img width=""555"" alt=""screen shot 2017-10-09 at 13 58 56"" src=""https://user-images.githubusercontent.com/1078448/31353996-494ee970-acfa-11e7-89dd-57e306c58ca5.png"">

@hiramf @hafen is this OK for now? Another change *can* produce this:

<img width=""554"" alt=""screen shot 2017-10-09 at 13 58 39"" src=""https://user-images.githubusercontent.com/1078448/31354022-5d72645e-acfa-11e7-9c1a-f47e93a67667.png"">

but it's not ideal &mdash; the only info available to the (one single) formatter is the local tick value, not what level it is for, or a complete compound category value. I think this is not ideal so I don't want to push it now. It might be better to have separate formatters for mid or top level ticks, or possibly there could be a way to pass more info to the formatter, so that a single formatter can intelligently switch on the category level. 

If this seems OK for the immediate issue I will figure out some tests and merge. 
",1,1,['status: accepted']
1989,145361043,7022,3834332,2017-10-09 00:23:37,2017-10-09 18:26:25,closed,Clean up sampledata,"This PR is an extensive cleanup of `bokeh.sampledata`:

* package local data files moved to `sampledata/_data`
* factored much code to new `bokeh.util.sampledata`
* added test file for ever sample data module
* applied module file template
* fixed comment length issue across all boilerplate comments",5,6,"['status: accepted', 'type: task', 'reso: completed']"
1990,145348477,7021,3834332,2017-10-08 19:08:18,2017-10-09 01:09:22,closed,Canonicalize more top level modules,"This PR makes a few minor improvements to the testing machinery (re-use `verify_all` code, have `verify_api` return a class to simplify boilerplate) and also brings the following modules under API test and canonical module structure:

* `bokeh.__init__`
* `bokeh.__main__`
* `bokeh.driving`
* `bokeh.tile_providers`
* `bokeh.transform`

This PR also makes the `_force` function in `bokeh.driving` be public, `force`",1,8,"['status: accepted', 'type: task', 'reso: completed']"
1991,145049386,7017,3834332,2017-10-06 00:15:40,2017-10-06 00:43:54,closed,try conditional stages,"
",1,2,"['status: declined', 'type: task']"
1992,145020558,7016,3834332,2017-10-05 21:03:40,2017-10-05 22:01:25,closed,fix codebase issues,PRs from external contributors currently untestable due to miniconda installer bug. ,0,1,"['status: accepted', 'type: task', 'reso: completed']"
1993,144768525,7013,3834332,2017-10-04 20:32:24,2017-10-06 11:55:49,closed,Raise error when jupyter notebook is not installed or is obsolete,"fixes #7005
",0,1,['status: declined']
1994,144735622,7012,3834332,2017-10-04 17:57:50,2017-10-04 19:16:22,closed,Make travis ci logs smaller,"This silences progress bars from `git`, `conda` and `npm`.

fixes #7009 
",2,3,['status: accepted']
1995,144498621,7008,3834332,2017-10-03 18:47:01,2017-10-25 16:23:20,closed,Allow toolbar in side panels,"This is early work in progress. ~~Currently tooltips and detached toolbars don't work~~. I removed all special code handling toolbars and allowed them in panels. Styling is the same as before, but there are no more overlapping toolbars with other entities.

![toolbars](https://user-images.githubusercontent.com/27475/31142978-287a482a-a87c-11e7-8443-4485f9e0d3d4.png)

fixes #6990
fixes #4874
fixes #1651
fixes #6466 
fixes #6065 
fixes #4574 
fixes #7075 ",38,73,['status: accepted']
1996,144221700,7000,3834332,2017-10-02 16:04:39,2017-10-05 20:30:37,closed,"Add ""-tables"" css and js includes to the docs (#6999)","* add `-tables` resources in `embed.rst` and `installation.rst`
* add reference to `embed.rst` to the `components` docstring
* touch up the `0.12.7.rst` to highlight that these resources must be manually loaded in any scenario where Bokeh is not loading resources itself.

I couldn't build and check the docs yet (need a dev install) but wanted to push the PR anyway.

- [x] issues: fixes #6999 
- [ ] ~~tests added / passed~~
- [ ] ~~release document entry (if new feature or API change)~~",6,3,['status: accepted']
1997,144129111,6998,3834332,2017-10-02 08:07:46,2017-10-02 19:39:11,closed,Remove custom ColorBar's positioning code,"fixes #6993
",1,1,['status: accepted']
1998,144085912,6997,3834332,2017-10-01 20:04:43,2017-10-23 20:36:34,closed,add Scalar versions of property mixins,"- [x] issues: fixes #5648
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

@mattpap if you agree with this general approach, I will:

* add a real `FontSize` prop instead of `String`
* apply these scalar props other places to reduce code dupe (some annotations)
* add more tests
* general clean up ",6,3,['status: accepted']
1999,144084397,6996,3834332,2017-10-01 19:25:57,2017-10-02 07:47:11,closed,Remove stub ResizeTool,"
",0,1,"['status: accepted', 'type: task']"
2000,144084015,6995,3834332,2017-10-01 19:16:15,2017-10-01 20:52:49,closed,allow cat cmapper factors to be pd Index,"- [x] issues: fixes #6978
- [x] tests added / passed

Solution was to make `if` tests explicitly check for `None`, otherwise array errors about using `.any` or `.all` pop up when arrays are used. 

With this change, the following code:
```
import pandas as pd
from bokeh.io import show, output_file
from bokeh.models import ColumnDataSource, FactorRange
from bokeh.plotting import figure
from bokeh.transform import factor_cmap
from bokeh.palettes import Spectral6

output_file(""test.html"")

fruits = ['Apples', 'Pears', 'Nectarines', 'Plums', 'Grapes', 'Strawberries']
years = ['2015', '2016', '2017']

data = {'2015'   : [2, 1, 4, 3, 2, 4],
        '2016'   : [5, 3, 3, 2, 4, 6],
        '2017'   : [3, 2, 4, 4, 5, 3]}

df = pd.DataFrame(data, index=fruits)
fruits = df.index
years = df.columns # THIS FAILED BEFORE

x = [ (fruit, year) for fruit in fruits for year in years ]
counts = sum(zip(data['2015'], data['2016'], data['2017']), ())

source = ColumnDataSource(data=dict(x=x, counts=counts))

p = figure(x_range=FactorRange(*x), plot_height=250, title=""Fruit Counts by Year"", toolbar_location=None, tools="""")

p.vbar(x='x', top='counts', width=0.9, source=source, line_color=""white"", fill_color=factor_cmap('x', palette=Spectral6, factors=years, start=1, end=2))

p.y_range.start = 0
p.x_range.range_padding = 0.1
p.xaxis.major_label_orientation = 1
p.xgrid.grid_line_color = None

show(p)
```
Now yields:

<img width=""584"" alt=""screen shot 2017-10-01 at 14 14 35"" src=""https://user-images.githubusercontent.com/1078448/31058073-12c9845c-a6b3-11e7-84fe-b6e1493cdecd.png"">
",1,1,['status: accepted']
2001,144082402,6994,3834332,2017-10-01 18:33:22,2017-10-02 04:07:26,closed,canonicalize bokeh.colors,"* adds API declarations
* splits named colors into bokeh.colors.named
* adds bokeh.colors.groups
* adds docstrings and missing docs from refguid
* sphinx extension for dispaying colors in docs
* 100% test coverage for the package",3,1,"['status: accepted', 'type: task', 'reso: completed']"
2002,144076781,6992,3834332,2017-10-01 16:07:33,2017-10-01 17:30:51,closed,Remove out-of-date matplotlib reference from ColorBar user guide.,"Also, modify text to match surrounding style.

- [x] issues: fixes #6991 
- (n/a) tests added / passed
- (n/a) release document entry (if new feature or API change)",0,1,['status: accepted']
2003,144039533,6988,3834332,2017-09-30 18:41:06,2017-10-01 17:38:21,closed,Fix bug : no URL in IE,"issues: fixes #6982

no URL in IE",1,1,['status: accepted']
2004,144026561,6987,3834332,2017-09-30 12:18:22,2017-10-01 17:26:58,closed,Clip MercatorTicker coordinates to officially defined bounds,"This PR fixes issues with poorly defined behavior of the MercatorTicker when the axis ranges exceed the officially defined bounds of the pseudo-mercator projection (as described in 
https://github.com/bokeh/bokeh/issues/6986). The coordinates the ticks are drawn between are clipped to the officially defined bounds defined [here](https://epsg.io/3857), resulting in consistent behavior when zoomed out.

<img width=""809"" alt=""screen shot 2017-09-30 at 1 13 25 pm"" src=""https://user-images.githubusercontent.com/1550771/31045728-cf95ef62-a5e1-11e7-911f-965735da142c.png"">
",7,5,['status: accepted']
2005,143754938,6981,3834332,2017-09-28 21:01:12,2017-10-16 17:46:46,closed,Rewrite client/* and protocol/* in typescript,addresses #6481,7,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2006,142918400,6972,3834332,2017-09-25 15:47:29,2017-10-11 19:33:13,closed,Updated to handle networkx 2.0 Views,"This is not backward compatible Views were added in nx 2.0

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #6971 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",23,4,['status: accepted']
2007,142776969,6969,3834332,2017-09-24 23:58:11,2017-09-25 23:47:01,closed,Bryanv/canonical embed,"I am planning to work on ""templatable roots"" for apps. This PR is prelimary work to ""canonicalize"" `bokeh.embed` using the module templates and API declarations, and to split it into more manageable chunks. This work:

* splits `bokeh.embed` into the following modules:
  - bundle.py
  - notebook.py
  - server.py
  - standalone.py
  - util.py
* preserves all existing tests (converts all to pytest) 
* fixes several broken no-op tests
* adds many new tests
* removes no longer useful / not-always-usable `notebook_div`
* considerably cleans up `server_document` and `server_session`

I will add more tests and docs while traveling tomorrow, and plan to merge tomorrow night. ",1,8,['status: accepted']
2008,142768907,6967,3834332,2017-09-24 20:10:56,2017-10-03 15:45:20,closed,fix rendering of filtered data sources for previously broken glyphs,"This PR fixes the rendering of glyphs that use a subset of data, through filtering with CDSView. It also fixes some bugs with the hover tool and filtered plots that were introduced with GraphRenderer work. 

The problem was at line 141 in bokehjs/src/coffee/models/renderers/glyph_renderer.coffee. I had mistakenly thought that `all_indices` was in subset space when it really is in full data space. `all_indices` contains the indices of the filtered data source (e.g. [1, 20, 45]) in the full data space. It needs to be converted to `indices` in subset space (i.e. [0, 1, 2]). This previously was working for the circle glyph, because `mask_data` using the spatial index would return the correct subset space `indices`. However, for glyphs that don't have `_mask_data`, `indices` was incorrectly in the full data space. The fix is just to convert `indices` to subset space if it wasn't converted by `mask_data`. 

I also made sure that the Line glyph was being handled properly. It needs special selected/non-selected handling ([PR where line selection rendering is improved](https://github.com/bokeh/bokeh/pull/6491)). I made it so that hovering when a line renderer has a hover_glyph displays the whole line (can be a subset using CDSView) using the hover style.

- [x] issues: fixes #6820 #6910 #6955
- [ ] tests added / passed
",3,2,['status: accepted']
2009,142764990,6966,3834332,2017-09-24 18:32:32,2017-09-29 16:02:08,closed,Clairetang6/6947 cdsview colors,"This PR addresses the issue that vectorized visual properties were not working with the CDSView and filtered data sources. 

The problem was the `@visuals` of a glyph would contain the full lists of visual property values when a property was vectorized, but would use subset indices to index into those lists. That is, if you had a data source with three items and a filtered view with only the last item (index 2 in full data space), the last item has an index of 0 in subset space. Then if the `fill_color`'s were `['blue', 'blue', 'red']` and you indexed with 0, you would get `'blue'` instead of the correct `'red'`.

I considered two ways of fixing this. One would be to change the index at the glyph level. This would mean saving the full data space indices on the glyph and changing all lines like `@visuals.fill.set_vectorize(ctx, i)` to `@visuals.fill.set_vectorize(ctx, @all_indices[i])`. But there are >50 lines across all of the glyphs that would need to be changed. 

The second way, which is implemented here, is to have the `Visuals` object know the full data space indices. The indices are passed to the `visuals` by the glyph in `set_data`. Then the `visuals` instance of each glyph can correctly pass back the correct values.

- [x] issues: fixes #6947 
- [x] tests added / passed
",1,4,['status: accepted']
2010,142675193,6965,3834332,2017-09-22 21:40:33,2017-10-01 18:59:40,closed,#6960: Derive ResizeTool from Tool not object,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6960 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,1,['status: declined']
2011,142541602,6963,3834332,2017-09-22 10:01:05,2017-09-22 23:33:04,closed,Correct gridplot doctext so that ncols parameter name is rendered,"Doctext formatting change.

- [ ] issues: fixes #6962 

(I have not yet been able to run sphinx myself due to an error running sphinx/build)",1,1,['status: accepted']
2012,142079831,6958,3834332,2017-09-20 11:55:41,2017-09-20 12:17:16,closed,use uuid's for script id instead of serial nos or filename hash,"- [x] issues: fixes #6957
",0,1,['status: accepted']
2013,141989909,6956,3834332,2017-09-20 01:06:41,2017-09-20 11:53:13,closed,Add tests for ndarray,"ndarray tests for both integers and factors

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6951 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: superseded']
2014,141933372,6954,3834332,2017-09-19 19:20:41,2017-09-19 19:54:57,closed,fix missing screen units handling for Ray,"- [x] issues: fixes #6949
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
2015,141932637,6953,3834332,2017-09-19 19:17:08,2017-09-20 15:41:46,closed,Update helpers.py #6951,"Allow range_input to be an np.ndarray

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6951 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,4,['status: accepted']
2016,141914017,6952,3834332,2017-09-19 17:49:27,2017-09-19 18:57:49,closed,canonicalize bokeh.client,"This PR canonicalizes `bokeh.client` with module and test module templates and API declarations. 

Additionally it adds some additional tests, and fixes a few style updates changed in this work back to `bokeh.io`
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2017,141510855,6945,3834332,2017-09-18 00:59:39,2017-09-18 20:51:00,closed,Use Bokeh protocol to implement push_notebook,"
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@bokeh/dev I am marking this as `ready` I still plan to add some docs and tests later today but no implementation changes.  ",9,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server', 'tag: notebook']"
2018,141492306,6943,3834332,2017-09-17 16:16:59,2017-09-17 17:50:08,closed,Fix docstrings,Just a few typos I noticed while reading the project documentation.,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2019,141468768,6941,3834332,2017-09-17 01:20:35,2017-09-17 20:09:42,closed,Bryanv/hold events,"(This is marked `WIP` but the only additions planned are examples/docs/tests)

- [x] issues: fixes #4911
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR adds `hold` and `unhold` methods to `Document`  that can suppress updates/callbacks while a hold is active. There are two hold polices:

* `collect`
* `combine`

In `collect` mode, all held events are ""played back"" in order, as-is, when `unhold` is called. In `combine` mode, Bokeh will collapse compatible events when `unhold` is called e.g. several updates to the same `slider.value` during a hold will all be collapsed down to one update/callback corresponding to the last one. The default policy is `combine`

This PR also adds tests for `bokeh.document.events` which previously had no tests. 

@havocp @fpliger I am sure you are both busy but I have what is hopefully just a quick question of a  historical nature. Do either of you recall why the dispatch mechanism of document events ""chains up"" the inheritance hierarchy? e.g. consider this test:
```
def test_ModelChangedEvent_dispatch():
    e = bde.ModelChangedEvent(""doc"", ""model"", ""attr"", ""old"", ""new"", ""snew"")
    e.dispatch(FakeEmptyDispatcher())
    d = FakeFullDispatcher()
    e.dispatch(d)
    assert d.called == ['_document_changed', '_document_patched', '_document_model_changed']
```
Dispatching to a `ModelChangedEvent` will call all the dispatch methods for all the superclasses, if they are present on the receiver. I think it might be more flexible to not ""chain up"". Then if on receiver dispatch method wants to chain up, it can explicitly (or not). Right now there is no choice in matter.  ~~~I don't think anything in bokeh actually relies on this, and I'd like to consider changing it to be simpler as I just described.~~~ *At least a couple of tests fail if I make this change, so leaving things as they are for now*",3,7,['status: accepted']
2020,141414552,6938,3834332,2017-09-15 22:37:53,2017-09-15 22:56:28,closed,stop computing unused and expensive bokeh.__base_version__,"- [x] release document entry (if new feature or API change)

This PR removes ``bokeh.__version__`` which was computed on every import of Bokeh and could take hundred of milliseconds. 

Ref: https://github.com/dask/distributed/issues/1399#issuecomment-329834414",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2021,141336853,6937,3834332,2017-09-15 15:19:50,2017-09-15 17:45:09,closed,Fix typo in notebook.rst,"There was no issue for this. Just noticed a typo in the docs. 
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2022,141326303,6936,3834332,2017-09-15 14:36:29,2017-09-16 19:39:43,closed,"Refactor bokeh.io as ""model"" package with API version declarations","- [ ] issues: fixes #xxxx
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

The `bokeh.io` module had gotten very large and cumbersome (~1 kLOC). This work started as merely breaking up the module in a package and submodules, but while doing do, I decided to pursue some ideas about how an ""ideal"" Bokeh package should be structured. 

First, some clarifying definitions about the types of API objects in the project:

* **public** commonly used by all users, e.g, `bokeh.plotting.figure` 
* **internal** used to implement public API, or used by developers or advanced users, e.g. `bokeh.io.notebook.destroy_server`
* **private** The objects have names with leading underscores, e.g. `bokeh.io.saving._get_save_args`

  *A distinguishing feature of private objects is that they should never be imported or used outside the module in which they are defined*

Any **public** or **internal** object is ""visible"" (i.e. no leading underscore) and will be rigorously maintained between non-major releases. Any **private** object is subject to change at any (they should not be imported or relied on by anything outside the immediate module they reside in)

To facilitate these notions, this PR adds the `bokeh.util.api` module with `@public` and `@internal` decorators. There are used to decorate any visible functions, classes, methods, or properties. (i.e. non-private, no leading underscore) with the version they were first introduced in, e.g.
```
@public(1,0,0)
def a_public_function(): pass

@internal(1,0,0)
def an_internal_function(): pass
```

This PR adds a new test mark `api` that can be used to verify a module's API against a specifcation:
```
api = {
    PUBLIC: (
        ( 'curdoc', (1, 0, 0) ),
    ), INTERNAL: (
        ( 'set_curdoc', (1, 0, 0) ),
    )
}

test_public_api, test_internal_api, test_all_declared, test_all_tested = verify_api(bid, api)
```
Tests will fail if:

* any visible functions, classes, methods, or properties of the module are not declared `public`  or `internal`
* and visible that are declared, are not accounted for int the specifiction
* the declaration in the module does not match the specification in the test

Additionally all tests were converted to `pytest` style. 

Later work will add Sphinx extension to inspect these annotations to automatically add ""first introduced in version..."" information to the reference guide, as well as to off the option to see only smaller public API when viewing the reference. 

---

With regards to the actual refactoring, `bokeh.io` was split into the following pieces:
```
doc.py
export.py
notebook.py
output.py
saving.py
showing.py
state.py
util.py
```
Every submodule has the exact same top header: 
```
#-----------------------------------------------------------------------------
# Copyright (c) 2012 - 2017, Anaconda, Inc. All rights reserved.
#
# Powered by the Bokeh Development Team.
#
# The full license is in the file LICENSE.txt, distributed with this software.
#-----------------------------------------------------------------------------
'''

'''

#-----------------------------------------------------------------------------
# Boilerplate
#----------------------------------------------------------------------------
from __future__ import absolute_import, division, print_function, unicode_literals

import logging
logger = logging.getLogger(__name__)

from bokeh.util.api import public, internal ; public, internal

#-----------------------------------------------------------------------------
# Imports
#-----------------------------------------------------------------------------

# Standard library imports

# External imports

# Bokeh imports
```

There is a similar header for test modules. I'd like to eventually have these the start of every Python module under `bokeh`.

Modules are split into sections for public, internal, private. Objects are in alphabetical order in each section, as are all imports in their sections.

cc @bokeh/dev for any thoughts. Once there is agreement about any details that anyone might comment on, this structure can be phased in in smaller PRs, one package at a time. ",4,9,['status: accepted']
2023,140804183,6930,3834332,2017-09-13 11:53:03,2017-09-14 05:45:48,closed,Issue #6704: Fix hover hittest on horizontal/vertical segments,"Horizontal/vertical segments have zero bbox area and hence
are almost impossible to coincide with a point for hittest search.
Hence RBush.indices() was never returning such segments.
We now instead search rbush with a square of size 4x4 instead of a
point to find such segments as well.
Ideally, the square size should be maximum of the the line_width,
but the current state is in itself a great improvement.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6704 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,3,['status: accepted']
2024,140716209,6929,3834332,2017-09-13 01:20:53,2017-09-13 15:59:15,closed,Jan 1st display incorrect - Changed %G to %Y,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

This is my first pull request, please let me know if I did something wrong.

- [x]  issues: fixes #6926 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,4,['status: accepted']
2025,140694363,6928,3834332,2017-09-12 22:09:49,2017-09-13 01:04:36,closed,Bryanv/cleanups,"Remove several deprecations and dead code, and add one for `responsive`. Work is outlined in individual commits. 

The only thing possibly of note:

> Glyphs methods now only accept either all sequence literals, OR all column names

i.e. mixing will trigger an error",8,13,"['tag: component: docs', 'status: ready', 'type: task', 'reso: completed', 'MIGRATION']"
2026,140485265,6923,3834332,2017-09-12 04:20:31,2017-09-12 05:05:59,closed,ensure all ipython imports are deferred,"- [x] issues: fixes #6922
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,1,['status: accepted']
2027,140467629,6920,3834332,2017-09-12 01:05:59,2017-11-09 16:04:36,closed,"added render line to allow programatic change of tabs, fixes Issue #6502","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6502
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,1,['status: accepted']
2028,140433221,6918,3834332,2017-09-11 20:54:37,2017-09-12 17:58:00,closed,js code error in documentation,"Attributes are accessible directly from `cb_obj`.
Use `cb_obj.x` instead.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2029,140372508,6915,3834332,2017-09-11 16:01:56,2017-09-11 22:34:14,closed,Bryanv/docs tests,"cc @canavandl can add things to this PR
",0,7,['status: accepted']
2030,140082533,6913,3834332,2017-09-08 16:58:28,2017-09-08 20:46:50,closed,Canavandl/6909 notebook fixes,"Canavandl/6909 notebook fixes

- [ ] issues: fixes #6909 #6908 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,5,['status: accepted']
2031,140061791,6911,3834332,2017-09-08 15:16:07,2017-09-10 18:50:33,closed,Add convenience function for datetime values,issues: fixes #6895 ,1,2,['status: accepted']
2032,139951805,6906,3834332,2017-09-08 04:09:52,2017-09-10 21:26:50,closed,Binary array transport,"- [x] issues: fixes #5984
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Comments:

This PR adds support for transporting arrays as pure binary data from the server to clients, when the array type is compatible with JavaScript typed array type. The following sorts of updates to a column data source will trigger binary transport:

```
# replacing an entire data dict
source.data = dict(x=x, y=y)

# setting a single column
source.data[x] = x

# updating multiple columns
source.update(x=x, y=y)
```
Additionally, in the latter two cases, all updates now only send the columns there were actually set, instead of always sending the entire data dict (whether binary transport is available or not).

Since the many various functions involved in serialization were geared towards *returning* JSON or JSON strings, the implementation approach take was to add an optional **out-paramter** to collect binary buffers in to the functions, and to propagate it through the call chain when present. When not supplied, the default behaviour remained identical to the previous behaviour, making this approach reasonably non-intrusive. 

On the JS side, few changes were needed apart from providing an option to circumvent old/new value equality testing on ` ColumnDataChangedEvent` since it is a given that the update should take place. This results in a considerable performance improvement. 

Some limitations:

* base64 encoding still used for initial page load, hopefully can fix in a follow-on effort
* binary transport TO the server is not supported (including from python clients)
* ~~~no detection or correction for byte order is undertaken. Binary data is sent out as-is~~~

Finally, code under `bokeh.client` has been split up and refactored with additional tests added. ",13,15,['status: accepted']
2033,139897655,6904,3834332,2017-09-07 20:28:59,2017-09-07 23:44:22,closed,Cleanup BokehJS client code and add tests,"This is another supporting PR to lead up to binary array support. The buffer handling on the BokehJS had never been exercised, appeared to be wrong, and had no tests. This PR:

* makes a clean port of `Message` and `Receiver` from python and adds full tests
* splits up client session and client connection and has the use the new `Message` and `Receiver` classes
* adds some missing tests on the python side

None of the existing BokehJS tests for client connections were changed (they did move location, though)

I am still not completely happy with the split of code between BokehJS client connections and sessions. I'd like for the python and JS classes to be essentially as near to straight ports of each other as they can be (or at least each responsible for the same things). But this is good enough for now. ",0,1,['status: accepted']
2034,139897326,6903,3834332,2017-09-07 20:27:29,2017-09-07 23:54:21,closed,Expose airport_routes data via bokeh.sampledata,"Expose airport_routes data via bokeh.sampledata

- [ ] issues: fixes #6902 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Data need to be uploaded to S3 before merging.",0,2,['status: accepted']
2035,139763987,6898,3834332,2017-09-07 10:00:12,2017-09-07 23:20:05,closed,[doc] Adjust docstring indentation,"@bryevdv If this is not a reasonable request, never mind, just discard...

When submitting this pull request it says:

> All pull requests must have an associated issue in the issue tracker. If there
> isn't one, please go open an issue describing the defect, deficiency or desired
> feature. You can read more about our issue and PR processes in the
> [wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
> 
> - [ ] issues: fixes #xxxx
> - [ ] tests added / passed
> - [ ] release document entry (if new feature or API change)

Great.

I wonder whether for such small corrections like I'm doing now there could be a simpler approach (create an issue). On my side I am almost ashamed of submiting such small correction to you, but since I think documentation is really important (and painful to maintain) I think it is still valid. And since it is that small, I just wanted it to be as fast as possible.


Best,
Carlos",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2036,139404240,6890,3834332,2017-09-05 19:39:17,2017-09-06 18:34:32,closed,add trace log level,"issues: closes #6888 

This adds a `trace` log level and uncomments any commented `debug` log calls, replacing them with uncommented `trace` instead.

@bokeh/dev any comments on whether there are any downsides to monkey patching `logging` ?",1,1,['status: accepted']
2037,139384013,6889,3834332,2017-09-05 17:53:39,2017-09-05 19:13:10,closed,remove cruft from top level bokeh module,Just cleaning out some junk. ,1,1,"['status: accepted', 'type: task']"
2038,139216437,6886,3834332,2017-09-04 23:09:30,2017-09-05 03:32:39,closed,fix table DateFormatter using tz,"- [x] issues: fixes #6859
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR fixes `DateFormatter` but in doing so updates it to use `strftime` formats instead of the JQ style formats. The previous special format names are still accepted, except `TICKS` which has been removed. 

Original example now shows:

<img width=""409"" alt=""screen shot 2017-09-04 at 17 02 17"" src=""https://user-images.githubusercontent.com/1078448/30039840-2a90d2a6-919c-11e7-8a85-55b5daf112b5.png"">
",1,1,['status: accepted']
2039,139205815,6885,3834332,2017-09-04 20:05:02,2017-09-04 23:10:26,closed,Typo in EdgesAndLinkedNodes docstring,Typo only,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2040,139187228,6883,3834332,2017-09-04 16:16:23,2017-09-04 18:22:05,closed,Bryanv/6852 bar hittests," issues: fixes #6852

This PR fixes the point hover problem with `HBar`. This issue is that the coordinate specification was given in reverse. This is fixed in the first commit. The PR goes on to refactor bars and quads to share most implementation in a non-public `Box` base. Finally, in the third commit it adds a simple `_hit_span` so that all bars and quads now respond to `hline` and `vline` hovers.

An example is shown below (cursor was to the right of the bar, with mode `hline`)

<img width=""538"" alt=""screen shot 2017-09-04 at 11 12 00"" src=""https://user-images.githubusercontent.com/1078448/30033714-70b45a94-9162-11e7-8829-3a3433631a77.png"">
",1,3,['status: accepted']
2041,139169582,6882,3834332,2017-09-04 14:28:26,2017-09-04 15:46:37,closed,return comms handles to show,"- [x] issues: fixes #6844
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

Fairly simple fix, just return the handle. Not sure what tests could be added. ",0,1,['status: accepted']
2042,139166226,6881,3834332,2017-09-04 14:10:29,2017-09-04 16:18:33,closed,DataTable should prefer global jquery if available,"fixes #6880
",0,1,['status: accepted']
2043,139059936,6879,3834332,2017-09-03 20:07:18,2017-09-05 02:28:28,closed,Add support for multi line text,"fixes #994
",5,3,['status: accepted']
2044,139029043,6878,3834332,2017-09-02 22:51:59,2017-09-04 16:19:24,closed,Bryanv/document cleanup,"This work started as an effort to add binary array transport. I got a good part of the way and then realized there was a little BokehJS work (probably) to accept buffers, and also that I had been generally cleaning up code related to document along the way. I decided to finish the latter task, leaving a clean foundation for the remaining array transport work. 

This PR:

* adds a custom descriptor and property container for `ColumnData` so that all accesses to `source.data` can be easily specialized
* adds a `ColumnDataChanged` document event (hint) and uses it to implement the existing base64 array encoding 
* removes some duplicate/cruft/unused functions
* splits the enormous `document.py` in a `document` package with:
  - `document.py` much slimmed down (almost under 900 lines!)
  - `events.py` for document events like `ModelChanged` (**finally** they are in the right place)
  - `locking.py` for funcs and classes around doc locking
  - `util.py` alot of things that don't need to clutter `document.py`
* make properties responsible for doing their own container wrapping if necessary instead of unpleasant global centralizing in property base
* make doc events themselves encapsulate the code to generate their JSON message (as well as updating refs or buffers)

I will add docs and alot of tests tomorrow before marking `ready` but do not expect any additional code changes. 

@mattpap, @canavandl  the commits are more or less compartmentalized and atomic (I tried to run tests in between every commit) if you'd like to examine them individually. 

@havocp I don't expect you to have any time to look at this in depth but if you have time for a quick scan, and anything happens to jump out at you, comments certainly appreciated. 

---
After this, the path or binary array transport is pretty straightforward:
* use the isolated code path for `ColumnData` updates to generate buffers in the protocol message in one place
* use those buffers on the BokehJS side (need to double check BokehJS message receiving buffers correctly)

As a bonus we could also use the new descriptor and `ColumnDataChanged` event to send only the parts of CDS that change. e.g 
```
source.data['foo'] = array(...)  # only send foo column, not all of CDS
```",1,15,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server']"
2045,139027833,6877,3834332,2017-09-02 22:00:12,2017-09-03 15:00:38,closed,added new Reset event,See bokeh issue #6876,4,4,['status: accepted']
2046,139022477,6874,3834332,2017-09-02 18:45:06,2017-09-02 20:45:23,closed,Don't double encode text in StringFormatter,"fixes #6873 
",2,1,['status: accepted']
2047,139011164,6872,3834332,2017-09-02 12:40:53,2017-09-03 18:09:23,closed,Switch from `pt` font size units to `px`,"This changes all `pt` font size units to `px`. I rounded inexact `px` numbers to whole numbers. Integration tests' images need updating, thus WIP.
",1,1,['status: declined']
2048,139007094,6870,3834332,2017-09-02 09:57:56,2017-09-02 20:46:16,closed,Remove leftover code after PR #6752,"fixes #6869 
",0,3,['status: accepted']
2049,139006859,6868,3834332,2017-09-02 09:47:27,2017-09-03 17:35:05,closed,Align attribution to frame's lower right corner,"fixes #4876
",0,1,['status: accepted']
2050,138994023,6866,3834332,2017-09-02 00:59:35,2017-09-07 23:03:13,closed,Allow supplying explicit edge paths for graphs,"When plotting a graph using the GraphRenderer and StaticLayoutProvider there is no way to supply an explicit set of paths because StaticLayoutProvider draws straight line paths from the start and end points. This PR allows supplying explicit 'xs' and 'ys' to the ``MultiLine`` CDS, which the ``StaticLayoutProvider`` will use rather than computing the straight line paths. Since the ``StaticLayoutProvider`` already expects ``start`` and ``end`` columns I think it's fine and consistent if it also looks for xs and ys, although I'd be open to respecting names set for 'xs' and 'ys' on the MultiLine glyph. Still needs tests and documentation. 

- [x] issues: fixes #6865 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",12,7,['status: accepted']
2051,138925016,6860,3834332,2017-09-01 16:10:32,2017-09-07 23:21:05,closed,Patch color_sliders.py,"Partially addresses #6831 by preventing non int values from being passed to hex conversion
",4,3,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
2052,138750625,6857,3834332,2017-08-31 19:45:37,2017-09-03 18:13:11,closed,Fix positioning of axis label,"This takes advantage of axis' panel to position axis label. ~~Note that currently this results in incorrect positioning, because panels are aligned to canvas and not frame (see #6472). I intentionally went with the correct solution and not using frame for alignment, so that we finally start using proper tooling (assuming #6472 is fixed).~~

fixes #6850
fixes #6472
",7,16,['status: accepted']
2053,138745443,6856,3834332,2017-08-31 19:17:56,2017-09-05 22:07:56,closed,Checks for finite values of bounds before doing the calculation for match_aspect bounds,"# Summary
Checks for finite values of bounds before doing the calculation for `match_aspect `bounds.
- [x] issues: fixes #6851
- [ ] tests added / passed

## Explanation
When trying to plot a figure which contains a glyph without specified bounds. The default value given to these glyphs is Infinity. If you also specified the `match_aspect` for the figure, it would fail to draw the initial ranges since the computation done to to insure `match_aspect` would turn the `Infinity` values into `NaN`. This fixes the issue by checking that all values are finite before doing any calculation for the bounds. 

## Example
```
p = figure(match_aspect=True)
source = ColumnDataSource(data={'x': [], 'y': []})
p.circle(x='x', y='y', source=source)
p.circle(x=1, y=2)
```
Without the fix the ranges fail to set. However, with `match_aspect=False` the figure will set the ranges properly.",5,1,['status: accepted']
2054,138726545,6854,3834332,2017-08-31 17:44:01,2018-02-08 14:58:26,closed,Enable notebook examples in examples tests,"Enable notebook examples in examples tests

- [ ] issues: fixes #6853 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,8,['status: declined']
2055,138660953,6848,3834332,2017-08-31 13:02:06,2017-09-01 23:02:37,closed,Check nodejs version number in bokeh.util.compiler,fixes #6847 ,2,2,['status: accepted']
2056,138468479,6843,3834332,2017-08-30 16:12:54,2017-08-30 19:24:53,closed,Add widgets.sliders doc,"Add missing widgets.sliders doc
- [x] issues: fixes #6842
- [x] release document entry (if new feature or API change)
",3,2,['status: accepted']
2057,138268340,6839,3834332,2017-08-29 19:49:35,2017-10-11 14:46:14,closed,Make Grid.dimension an enum,"fixes #1000
",3,2,['status: declined']
2058,138238771,6838,3834332,2017-08-29 17:21:13,2017-08-29 23:13:03,closed,Don't test on Python 3.4 anymore,"fixes #6819
",1,3,['status: accepted']
2059,138236855,6837,3834332,2017-08-29 17:12:06,2017-08-29 18:42:42,closed,Remove MPL and bokeh.charts,This PR removes all support for MPL and `bkcharts` combat. ,1,4,"['status: ready', 'type: task', 'reso: completed']"
2060,138149432,6834,3834332,2017-08-29 11:06:31,2017-08-30 20:55:41,closed,Use default action when detecting file name in jupyter,"This covers common cases where previously detected file names were unhelpful (e.g. `runpy.html`).

fixes #6560",8,3,['status: accepted']
2061,138068363,6832,3834332,2017-08-29 00:46:00,2017-08-29 14:11:58,closed,Simplify data frame length calculation.,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2062,138044603,6830,3834332,2017-08-28 21:43:44,2017-08-28 23:03:45,closed,Use setv to silent set data_source.inspected (not not trigger render),"Use setv to silent set data_source.inspected (not not trigger render)

- [ ] issues: fixes #6829 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,2,['status: accepted']
2063,138033643,6828,3834332,2017-08-28 20:45:08,2017-08-28 21:22:32,closed,Don't fail silently when inline resources aren't available,"fixes #6827 
",1,1,['status: accepted']
2064,137847629,6823,3834332,2017-08-27 20:46:29,2017-08-28 15:05:27,closed,Improve styling of slider widget,"![sliders](https://user-images.githubusercontent.com/27475/29753818-d838ae20-8b79-11e7-9247-7dc8eaeb628f.png)
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2065,137838997,6818,3834332,2017-08-27 16:17:28,2017-09-01 23:03:34,closed,Have notebook mime renderer use application/javascript mime message for nbconvert compat,"Have notebook mime renderer use application/javascript mime message for nbconvert compat

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",7,13,['status: accepted']
2066,137734582,6817,3834332,2017-08-25 18:47:46,2017-08-25 20:22:48,closed,Revert JLab integration changes,"This reverts commit e45e24f8e32534d64a386f5d36357bb5f351814b, reversing
changes made to c3ee83210d75ea0dbbb5ab92fe69dc4756ec2e88.

Revert ""add mechanism to install external notebook display hooks (#6799)""

This reverts commit 33c2356663e5747296ac5576af74d4a1dad1b0c2.

Revert ""Add mime message for jupyter lab load mime renderer (#6797)""

This reverts commit 6120d89d99d69b6f1756be6eb216b1ba1441683a.

Revert ""Merge pull request #6774 from bokeh/canavandl/nb_register_mime""

This reverts commit 2788ce89fce47527d980c8ccbb83010e462023b0, reversing
changes made to e244cc4603f0bf7b50a43f2e91ddc562b93b5e0e.

Fix revert conflicts

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #6808 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,2,['status: accepted']
2067,137702270,6814,3834332,2017-08-25 15:45:29,2017-08-25 22:59:31,closed,Add aspect example,"Add example for the new aspect ratio control behavior introduced in #6784 

- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,2,['status: accepted']
2068,137586576,6812,3834332,2017-08-25 02:01:58,2017-08-25 16:22:43,closed,use separate display_data to display status div,"- [x] issues: fixes #6809
- [ ] tests added / passed
",5,2,['status: accepted']
2069,137586296,6811,3834332,2017-08-25 01:58:37,2017-08-25 23:01:40,closed,Call load_notebook via notebook hook,"- [ ] issues: fixes #6810 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

It is just a trivial and straightforward change to allow non-builtin notebook works",3,3,['status: accepted']
2070,137320872,6807,3834332,2017-08-23 21:19:52,2017-08-28 15:04:49,closed,Add plotting/file/eclipse example,fixes #6796 ,0,6,['status: accepted']
2071,137252396,6805,3834332,2017-08-23 15:42:16,2017-08-23 16:30:49,closed,Position labels relative to frame if in center region,"fixes #6786
",3,1,['status: accepted']
2072,137228254,6804,3834332,2017-08-23 14:08:40,2017-08-23 15:01:15,closed,Use 0[.]00 format in numerical sliders,"fixes #6800
",0,1,['status: accepted']
2073,137117292,6802,3834332,2017-08-23 02:19:52,2017-08-23 03:21:06,closed,Support bokeh app in Apache Zeppelin,"- [ ] issues: fixes #6788
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Manually verify it. 
<img width=""930"" alt=""screen shot 2017-08-23 at 10 18 01 am"" src=""https://user-images.githubusercontent.com/164491/29595812-62853abc-87ec-11e7-9e45-b831b6ba6987.png"">


Known issue: Server is not stopped when cell is removed.  ",4,1,['status: declined']
2074,137098196,6801,3834332,2017-08-22 23:04:41,2017-08-23 14:09:02,closed,Derive Slider.format from other arguments,fixes #6800 ,3,1,['status: superseded']
2075,137052406,6799,3834332,2017-08-22 18:46:49,2017-08-23 01:13:09,closed,add mechanism to install external notebook display hooks,"- [x] issues: fixes #6788
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

cc @canavandl @zjffdu @mattpap @clairetang6 ",3,3,['status: accepted']
2076,137032476,6797,3834332,2017-08-22 17:06:24,2017-08-22 22:30:37,closed,Add mime message for jupyter lab load mime renderer,"Add mime message for jupyter lab load mime renderer

- [x] issues: fixes #6700 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2077,136649391,6790,3834332,2017-08-20 16:28:53,2017-08-21 16:41:59,closed,Refactor bokeh.server module,"issues: closes #6439

* All protocol-related code was moved to a new module ``bokeh.protocol``

* The ``Server`` class was split into ``Server`` (no API changes) and a new ``BaseServer`` that can be used when explicit coordination of low level Tornado components is required.

* Missing sections added to reference guide, and docsctring coverage greatly expanded.

* Old cruft code to handle Tornado < 4.3 (which is no longer supported) was removed.

ping @mattpap @canavandl I still need to update a few examples and hopefully add a few more tests, but this is generally ready. Apologies for some extraneous updates included but refactoring the docs code can be a pain and sometimes I need to get similar kinds of changes out of the way in the same place/time for my own sanity.   

The majority of this PR is adding documentation and some file moves. The files to look for for code changes are mostly `server.py` and `tornado.py`",4,6,['status: accepted']
2078,136632826,6789,3834332,2017-08-20 06:36:04,2017-08-22 18:50:15,closed,Support embed bokeh app in Zeppelin,"
- [ ] issues: fixes #6788 
- [ ] tests added / passed, I didn't find a proper way to add unit test for this feature. I just manually verify it in Apache Zeppelin.
- [ ] release document entry (if new feature or API change)

Screenshot of my verification in Zeppelin. I run the same example of embedding bokeh app in Jupyter.
![image](https://user-images.githubusercontent.com/164491/29492623-9c1206a0-85b4-11e7-8b24-9c86d16eb11f.png)
",8,1,['status: superseded']
2079,136562258,6784,3834332,2017-08-18 20:51:32,2017-08-22 22:59:12,closed,Basic aspect ratio control,"## Summary
This PR adds a simple aspect ratio control tool.

- [x] issues: fixes #474, #517
- [ ] tests 
- [ ] release document entry (if new feature or API change)

## Latest commit
This PR adds a two properties to the plot object.

`match_aspect` which indicates whether Bokeh should attempt the match the (width/height) of *data space* to the (width/height) in pixels of *screen space*.

`aspect_scale` which allows for further control of aspect control behavior by multiplying on top of the ratio calculated at `match_aspect`. This property allows the user to distort the axis at will. For example, with `aspect_scale= 2` a square in *data* units will be drawn as a rectangle with twice the *pixel* units in width than in height.

#### `match_aspect=True`
This fixes the bug shown in #6603.
![bokeh_plot 32](https://user-images.githubusercontent.com/27960786/29531839-645b31ae-8678-11e7-960c-ba3c3b612697.png)

#### `match_aspect=True, aspect_scale=2`
![bokeh_plot 47](https://user-images.githubusercontent.com/27960786/29589097-f268486c-8761-11e7-859c-b125d7812315.png)


## Explanation

Hello Bokeh team,

From my understanding the current behavior when plotting the data ranges is to use the bounds of the glyphs. The method proposed in this PR for aspect control is to instead set the data ranges values with new ones calculated based on the glyph bounds and the inherent aspect ratio of the plot. It also allows an arbitrary user defined aspect ratio. 

### A few examples:
#### Current behavior
![bokeh_plot 42](https://user-images.githubusercontent.com/27960786/29581170-82c13480-8746-11e7-8f26-b7f77ae71ecb.png)

#### New behavior with aspect ratio of 1:
![bokeh_plot 40](https://user-images.githubusercontent.com/27960786/29581229-ab0cbedc-8746-11e7-9311-47ced5276bd1.png)


#### New behavior with aspect ratio of 16/9:
![bokeh_plot 41](https://user-images.githubusercontent.com/27960786/29581189-92f8d466-8746-11e7-80f6-177e1e10aafa.png)


### What it doesn't fix
This isn't a perfect fix, since it simply uses the built in ranges for trying to maintain the aspect ratio. As described in #517, there seems to be a deeper problem with pixel per distance being different on each axis. I'm currently studying the information in those threads to see if my current solution can be improved.

### Todo
- [ ] tests 
- [ ] release document entry (if new feature or API change)

I'm assuming a new feature like this requires tests and unfortunately I haven't used mocha before, but I will do my best to get the tests done.

### Final remarks
I hope this PR is appreciated. It's always of pleasure contributing to a project like Bokeh. Feel free to dismiss this PR if you are working on something more comprehensive that also fixes issues like #6603 and #517. I've also left some more comments on specific parts about the code. I'm welcome to all suggestions or improvements. I'll be available to work some more on the PR after the weekend.

To the whole team, enjoy your weekend and thank you for such a great project.
Corey


",20,8,['status: accepted']
2080,136537479,6783,3834332,2017-08-18 18:23:27,2017-10-19 18:30:56,closed,Added support for nbconvert preprocessors in NotebookHandler,"This PR extends the ``NotebookHandler`` which processes``.ipynb`` files in ``bokeh serve`` to support nbconvert preprocessors. There are two main aims:

* Strip out magics from notebooks so that the bokeh server does not choke on them. This will be beneficial to all bokeh users that serve notebooks, whether or not they are using HoloViews.
* Add the HoloViews preprocessors to support holoviews magics. This will make it much easier for notebooks using holoviews to use the bokeh server with minimal modification.

Here is an example of what this enables. Given the following notebook:

![image](https://user-images.githubusercontent.com/890576/29471762-1b70e992-8449-11e7-92d6-c2e9baf05aac.png)

You can now run:

```
bokeh serve --show notebook.ipynb
```

To get:

![image](https://user-images.githubusercontent.com/890576/29471812-49ea0114-8449-11e7-8923-ab4b7f7523c1.png)

Note that the holoviews magic setting the curve to 'red' is now respected due to the preprocessors used to turn the magics into standard Python syntax. I have tried to write this code fairly defensively so that this is only applied when holoviews is available, making sure that any error backs off the the old behavior of not using any preprocessors at all.

There is a correspond PR (ioam/holoviews#1811) where I am working on further improving the HoloViews preprocessors.

## Outstanding actions

- [ ] Discuss how preprocessors might be enabled/disabled in general.
- [ ] Add the ``StripMagicsProcessor`` to bokeh so that all bokeh users can take advantage of this step without needing holoviews installed.
- [ ] Explore ways the boilerplate code in the notebook can be further reduced.
- [ ] Add new unit tests both to bokeh and holoviews.

I have marked this PR as WIP for now as I am still experimenting with the concept.
",2,2,['status: declined']
2081,136119964,6774,3834332,2017-08-16 20:53:01,2017-08-21 20:53:53,closed,Have output_notebook register custom bokeh mimetype to renderer ``show`` msg,"Have output_notebook register custom bokeh mimetype to renderer ``show`` msg

todo:
- [x] unbreak Zeppelin support (fix notebook_div return value)
- [x] implement cell clean-up logic
- [x] don't register mimetype in certain cases (not in classic notebook or already registered)
- [x] show server cells using custom mimetype
- [x] add server cell cleanup logic (done, but need to remove element from Bokeh.index)

old:
- [ ] issues: fixes #6791 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

",6,22,['status: accepted']
2082,135878471,6772,3834332,2017-08-15 19:58:03,2017-09-08 01:18:45,closed,Add Figure.graph method,"Add Figure.graph method

- [x] issues: fixes #6612
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,9,['status: accepted']
2083,135446456,6764,3834332,2017-08-12 03:57:53,2017-08-15 19:34:48,closed,Example test improvements,"* [x] Seed random algos inside of examples
* [x] Remove session callbacks from documents inside of server examples
* [x] Enable app examples

- [ ] issues: fixes #6762
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,6,['status: accepted']
2084,135219383,6759,3834332,2017-08-10 20:49:43,2017-09-03 18:11:44,closed,Use screen coordinates in canvas layout,,1,3,['status: declined']
2085,135201856,6758,3834332,2017-08-10 19:20:16,2017-08-10 21:15:00,closed,pass SAMPLE_RATE as integer,issues: fixes #6757 ,0,1,['status: accepted']
2086,135092827,6756,3834332,2017-08-10 10:37:27,2017-08-10 21:15:22,closed,Add support for special color transparency in ColorMapper,"In https://github.com/bokeh/bokeh/issues/6755 I described an issue handling transparency for special colors (e.g. nan_color, low_color and high_color) when specifying the color as an RGBA tuple. It took me a very long time to work out that bitwise math in Javascript tops out at 31-bits, which means the previous approach to bit shifting the colors no longer worked and I had to use a bit of actual math to handle the alpha value correctly. Additionally the ``color2hex`` utility was not correctly converting the alpha value to a hex value.

I have also put together a notebook demonstrating the original issue and the new behavior with the fix: https://anaconda.org/philippjfr/bokeh_alpha/notebook

Let me know what tests you think I should add and whether you have any concerns with the approach I had to take.

- [x] issues: fixes https://github.com/bokeh/bokeh/issues/6755
- [x] tests added / passed
",2,5,['status: accepted']
2087,134936770,6753,3834332,2017-08-09 16:33:03,2017-08-09 20:22:29,closed,Add graph documentation,"Add graph documentation

- [ ] addresses #6612 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,6,['status: accepted']
2088,134774182,6752,3834332,2017-08-08 22:38:23,2017-08-09 12:42:18,closed,remove resize tool,"- [x] issues: fixes #4196
- [x] release document entry (if new feature or API change)

This makes the resize a no-op (with warning) on the python side and removes it entirely from BokehJS.

documentation:

<img width=""1135"" alt=""screen shot 2017-08-08 at 16 36 23"" src=""https://user-images.githubusercontent.com/1078448/29097604-5b64ccc6-7c60-11e7-9b05-ca49018986fc.png"">
",1,1,['status: accepted']
2089,134760367,6751,3834332,2017-08-08 21:14:28,2017-08-09 13:59:45,closed,fix BOKEH_DOCS_CDN handling," issues: fixes #6739

",1,1,['status: accepted']
2090,134749026,6750,3834332,2017-08-08 20:17:34,2017-08-28 16:42:31,closed,0.12.7 docs/examples,"@bokeh/dev if there are smaller docs/examples tasks let's collect them in this one PR.
",20,13,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2091,134706612,6749,3834332,2017-08-08 16:41:16,2017-08-09 14:01:21,closed,Expose webdriver as kwarg to export_png and export_svgs,"Expose webdriver as kwarg to export_png and export_svgs

- [ ] issues: fixes #6747 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2092,134578304,6743,3834332,2017-08-08 05:24:14,2017-08-10 18:05:41,closed,Allow arbitrary nested lists in layout function,"I have moved the creation of the grid in the layout into a separate function which recursively calls itself which should allow for arbitrary lists.

At this point I haven't added any tests. I couldn't find any current tests of the layout function, and am not sure how to test correctness.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #4538
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,3,['status: accepted']
2093,134561696,6742,3834332,2017-08-08 02:01:09,2017-08-10 04:15:58,closed,Add additional instructions to /docs/dev_guide/setup.html,"There are instructions added for running the examples from the examples
directory in the development setup guide. This is modelled on the user_guide
setup.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6627 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",4,4,['status: accepted']
2094,134546012,6741,3834332,2017-08-07 23:16:59,2017-08-08 19:53:44,closed,Correctly handle single node graph,"Correctly handle single node graph by filling w/ NaNs instead of nulls

- [ ] issues: fixes #6740 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2095,134434603,6738,3834332,2017-08-07 13:10:46,2017-08-20 16:01:43,closed,Fix steaming for DataFrame-based ColumnDataSource,"Fixes #6667
",5,3,['status: accepted']
2096,134389119,6737,3834332,2017-08-07 08:47:43,2017-08-07 13:58:29,closed,Make sure AjaxDataSource is initialized only once,Fixes #6736,1,1,['status: accepted']
2097,134378337,6735,3834332,2017-08-07 07:38:33,2017-08-20 16:08:01,closed,Fix zero range_padding causing empty plot,Fixes #6730,4,2,['status: accepted']
2098,134372262,6734,3834332,2017-08-07 06:51:30,2017-08-20 20:47:12,closed,Fix False renderer args not being set,"Fixes #6731

Apart from fixing `False`, also fixes potential use of `None` as an argument value",6,3,['status: accepted']
2099,134358781,6733,3834332,2017-08-07 03:54:43,2017-08-07 14:11:59,closed,Removed hard-coded zoom levels on Mercator Tile calculations,"- [ ] issues: fixes #6709 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Removed the hard coded 0 and 30 for Zoom levels during resolution calculation, and used the preconfigured min_zoom and max_zoom options, which are defaulted to 0 and 30, but are configurable when defining the tile source.",1,1,['status: accepted']
2100,134297501,6729,3834332,2017-08-05 16:48:57,2017-08-09 18:05:11,closed,DataTable pre-selection,"This PR fixes the issue of pre-selection for the DataTable, or being able to programmatically specify the selected rows ahead of time to be rendered as highlighted by the DataTable. The issue is described more fully in [a comment I posted to the issue](https://github.com/bokeh/bokeh/issues/6616#issuecomment-320453934).

- [x] issues: fixes #6616 
- [x] tests added / passed
",1,7,['status: accepted']
2101,134293753,6727,3834332,2017-08-05 14:35:08,2017-08-05 15:54:21,closed,Update docstring in bokeh.io.push_notebook to reflect changes released in 0.12.0 #6717,"
- [x] issues: fixes #6717 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

#6717: Fix a docstring in bokeh.io.push_notebook. plot.title has been deprecated in 0.12.0 and superseded with plot.title.text.
",1,8,['status: accepted']
2102,134218873,6726,3834332,2017-08-04 17:53:51,2017-08-04 19:09:04,closed,Canavandl/6725 linked selection,"- [ ] issues: fixes #6725 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,3,['status: accepted']
2103,134188683,6724,3834332,2017-08-04 15:08:34,2017-08-05 15:56:13,closed,Set initial value of DatePicker() in models/file/widgets,"fixes #6546
",0,1,['status: accepted']
2104,134141074,6722,3834332,2017-08-04 10:54:49,2017-08-07 20:42:33,closed,Drop support for TSX templates,"I removed support from bokehjs and rewrote everything that still used TSX. Custom module compiler still allows TSX for compatibility, though this was deprecated.

fixes #6721 
",0,1,['status: accepted']
2105,133806365,6715,3834332,2017-08-02 20:54:46,2017-08-04 23:51:49,closed,Remove deprecated functions,"
",0,5,"['status: accepted', 'type: task', 'reso: completed']"
2106,133765941,6714,3834332,2017-08-02 17:31:39,2017-08-02 19:03:11,closed,Experimental PR to diagnose build issues. Do Not Merge,Experimental PR to diagnose build issues. Do Not Merge,0,1,['status: declined']
2107,133726295,6712,3834332,2017-08-02 14:39:11,2017-08-04 19:10:29,closed,Remove out-dated Plot.add_graph method,"Remove orphaned Plot.add_graph method

- [ ] addresses #6612 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2108,133526947,6705,3834332,2017-08-01 17:20:14,2017-08-08 14:30:34,closed,Canavandl/3935 examples tests 3,"supercedes: #6589 

- [x] issues: fixes #3935 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Overall - this PR does the minimum to get the server examples working by using our application handler code to parse scripts into Documents and push them into a running bokeh server process. It doesn't use any of our screenshot code but continues to our our phantomjs CLI script code.

Feedback points of discussion:
* Bokeh.documents race condition issue, see inline comment below
* Is minor refactor of server examples structure ok?
  * Using curdoc, not Document, and explicitly adding roots
  * Moving session stuff into ``if __name__ == ""__main__"": conditional
  (benefits include examples now work via bokeh server and python script.py into running bokeh server process. Also they feel ""cleaner"" to me)
* The server logs get included in the Travis logs re: each example. They're a little verbose but may be helpful in bug situations. Are they ok as-is or should be try to silence them?

Here's the report: 
https://s3.amazonaws.com/bokeh-travis/259919782/examples.html#models/server/buttons

The fourier_animated.py example is slow enough to load that it intermittently isn't screengrabbed before a timeout. We'll need to resolve this issue too.

As an aside, I think we could/should refactor the script examples tests to use our handlers in the same way. It's reduce some code duplication and test complexity (right now we're eval-ing code strings :( ).",2,15,['status: accepted']
2109,133327093,6702,3834332,2017-07-31 20:15:21,2017-08-04 19:11:48,closed,Add examples/models/files/graphs.py example,"needs to be merged after #6686 

looks like (each with different interactions):
<img width=""815"" alt=""screen shot 2017-07-31 at 5 25 01 pm"" src=""https://user-images.githubusercontent.com/2198981/28796778-3a107e72-7615-11e7-942b-ccc6a8344f5e.png"">
",0,2,['status: accepted']
2110,133046656,6693,3834332,2017-07-28 20:31:37,2017-08-01 17:27:43,closed,Add PolySelectTool.callback,"- [ ] issues: fixes #6658
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This brings PolySelectTool in alignment with the other selection tools",1,1,['status: accepted']
2111,133029021,6691,3834332,2017-07-28 18:44:32,2017-07-28 19:29:13,closed,issues: closes #6687,Fixes a typo (missing parenthesis) in the code for the [server docs](http://bokeh.pydata.org/en/latest/docs/user_guide/server.html).,1,1,['status: accepted']
2112,132863291,6688,3834332,2017-07-27 22:56:28,2017-07-28 18:51:16,closed,Make bokehjs work in notebook,"I ended up commenting UMD code. This is suboptimal, but a proper solution is much harder than I expected, and requires deeper changes to how autoload works.

fixes #6679 ",1,6,['status: accepted']
2113,132834573,6686,3834332,2017-07-27 20:08:56,2017-08-01 17:21:53,closed,Add EdgesAndLinkedNodes policy,"- [x] addresses some of #6612 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,8,['status: accepted']
2114,132811237,6685,3834332,2017-07-27 18:09:21,2017-07-29 21:09:00,closed,Add a note on jinja2 and pyyaml dependencies,"Fixes #6684
",10,1,['status: accepted']
2115,132439073,6675,3834332,2017-07-26 06:25:00,2017-08-22 19:40:57,closed,Documentation for filtering data with CDSView,"This PR adds documentation for the CDSView and each type of Filter. I have added a page to the User Guide called ""Sharing Data Between Plots"", which talks about sharing ColumnDataSources between plots and how that can be done with filtered data using the CDSView as well. 

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,10,['status: accepted']
2116,132362320,6674,3834332,2017-07-25 19:36:38,2017-07-25 19:43:20,closed,Config file for pyup.io,"Hi there and thanks for using pyup.io!

Since you are using a non-default config I've created one for you.

There are a lot of things you can configure on top of that, so make sure to check out the [docs](https://pyup.io/docs/configuration/) to see what I can do for you.",2,1,['status: declined']
2117,132315147,6672,3834332,2017-07-25 15:45:06,2017-07-27 02:25:36,closed,Add selection/inspection interactions to GraphRenderers,"- [ ] issues: fixes #6612 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Adds selection/inspection interactions to GraphRenderers",2,13,['status: accepted']
2118,131910614,6665,3834332,2017-07-22 19:44:38,2017-07-25 17:47:46,closed,Fix DataTable resize regression by computing indices when source data changes,"This PR fixes the DataTable resize regression. It also updates the export_csv app, so that the range of the slider better matches the example data. 

- [x] issues: fixes #6642
- [x] tests added / passed
",0,3,['status: accepted']
2119,131823208,6659,3834332,2017-07-21 17:37:00,2017-07-21 17:37:35,closed,Add a Gitter chat badge to README.md,"### bokeh/bokeh now has a Chat Room on Gitter

@bryevdv has just created a chat room. You can visit it here: [https://gitter.im/bokeh/bokeh-notifications](https://gitter.im/bokeh/bokeh-notifications?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:


[![Gitter](https://badges.gitter.im/bokeh/bokeh-notifications.svg)](https://gitter.im/bokeh/bokeh-notifications?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.


PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
",0,1,['status: declined']
2120,131784670,6656,3834332,2017-07-21 14:19:45,2017-07-25 17:50:13,closed,Ensure provided and expected signature strings have same encoding,"Fixes #6653
",8,3,['status: accepted']
2121,131670254,6654,3834332,2017-07-20 23:22:26,2017-08-07 19:19:20,closed,Bryanv/categoricals,"issues: closes #4369
issue: fixes #516

Allows for nested categoricals, upt to three levels, much easier to produce e.g. bar charts like this:

<img width=""606"" alt=""screen shot 2017-08-03 at 11 03 50"" src=""https://user-images.githubusercontent.com/1078448/28931394-8913e16c-783b-11e7-864d-73b500c3afac.png"">


Some things were removed, at least for now:

* `offset` 

This was only for MPL compat which is being dropped, so I have no qualms removing it entirely. Some things were changed (these now accept synthetic coordinates, which is much simpler/more straighforward)

* `bounds`
* `min_interval` 
* `max_interval`

Planned work:

* [x] expand `factors` property to accept nested categories in addition to simple lists of factors
* [x] update `synthetic` to properly compute synthetic coords for hierarchical categories
* [x] add support for display padding between categories 
* [x] update axis to be able to display ranges for multi-level categories
* [x] make CategoricalColorMapper support nested categories
* [x] fix up JS API
* [x] computed expressions
* [x] sugar for dodging, jitter, and stacking things
* [x] add tests
* [ ] add examples
* [ ] add docs

ping @bokeh/dev ",25,24,['status: accepted']
2122,131622129,6652,3834332,2017-07-20 18:36:28,2017-07-20 23:24:44,closed,update documentation for `bokeh.models.CrosshairTool`,fixes issue #6651 : minor update to documentation to reflect expected values of `dimensions` attribute of `bokeh.models.CrosshairTool`.,8,4,['status: accepted']
2123,131355188,6648,3834332,2017-07-19 15:44:38,2017-07-19 16:00:45,closed,"re-enable ""secrets filter""","From Travis Support

> This is a follow-up to say that we believe that we have a solution in place for the truncated logs (though not yet for the colorized output). Could you try and remove `filter_secrets: false` from your configuration? Please let us know if you would encounter a truncated log again.

",1,1,['status: declined']
2124,131319016,6647,3834332,2017-07-19 13:18:51,2017-07-19 14:17:52,closed,Fix bokehjs' plotting API and add categorical example,"Note this is based on PR #6585.

fixes #6576",0,37,['status: accepted']
2125,131213926,6645,3834332,2017-07-19 00:20:18,2017-07-19 14:16:48,closed,Fix streaming with filterable CDS,"This PR fixes streaming in the presence of CDSViews. The if statement is to guard against cases where the data source of a renderer is not a columnar data source and therefore doesn't have a `streaming` signal and when there is no data source.

One thing I considered was that for each streaming event, of the CDSView and GlyphRenderer, you would want the CDSView to respond first to update its indices before the GlyphRenderer responds with its set_data. Otherwise the first streaming event would not cause a re-render of the new data. This seems to be what happens (I checked with the following script that streams new_data on a button click), but I don't know if there is a way to guarantee that one slot is called before another one? 

- [x] issues: fixes #6628 
- [x] tests added / passed

```python
from bokeh.layouts import column
from bokeh.models import ColumnDataSource
from bokeh.plotting import curdoc, figure
from bokeh.models.widgets import Button

from numpy import random

source = ColumnDataSource(dict(x=[1], y=[2]))
x_val = 2

p = figure(plot_height=500, tools=""xpan,xwheel_zoom,xbox_zoom,reset"", y_range=(0, 10))
p.circle(x='x', y='y', source=source)

def add_data():
    global x_val
    new_data = dict(x=[x_val], y=[random.randint(10)])
    source.stream(new_data, 300)
    x_val = x_val + 1
    
button = Button(label=""Add"")
button.on_click(add_data)

curdoc().add_root(column(p, button))
```",2,3,['status: accepted']
2126,131191950,6644,3834332,2017-07-18 21:31:49,2017-07-24 23:55:08,closed,Canavandl/6612 graph interactions 2,"- [ ] issues: fixes #6612 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

todo
- [x] review SelectionManager tests (they were just removed)
- [x] add GlyphRenderer.hit_test tests
- [ ] add GraphRenderer.hit_test tests
- [ ] have GraphRenderer figure into Plot.bounds
- [ ] add 'examples' examples
- [ ] add documentation

This PR:
* Refactors the GraphRenderer implementation to have graph nodes and edges be sub-GlyphRenderers in order to support selections/hovers/etc.
* Refactors the `SelectionManager.inspect` and `SelectionManager.select` to push selection/inspection logic onto Renderers, in order to support renderer-specific selections/inspections.
* Adds basic selection/inspection of graph nodes (similar to a GlyphRenderer)",1,25,['status: accepted']
2127,131169161,6643,3834332,2017-07-18 19:36:10,2017-07-18 20:52:58,closed,Update hbar and vbar,"issues: fixes #6593
",0,1,['status: accepted']
2128,131126621,6641,3834332,2017-07-18 16:04:18,2017-07-18 19:39:29,closed,normalize tap tool callback calling convention,"- [x] issues: fixes #6581
- [x] release document entry (if new feature or API change)
",2,1,['status: accepted']
2129,130941294,6638,3834332,2017-07-17 20:15:19,2017-07-18 23:32:27,closed,Bryanv/3466 deprecate dmap,"- [x] issues: fixes #3466
- [x] release document entry (if new feature or API change)
",0,3,['status: accepted']
2130,130926306,6636,3834332,2017-07-17 18:57:24,2017-08-10 18:09:40,closed,Add missing reference documentation,issues: fixes #6629,3,4,['status: accepted']
2131,130778578,6635,3834332,2017-07-17 02:58:39,2017-07-17 18:50:30,closed,Custom Tooltip Example #6634.,"issues: #6634 

Adds example to example plotting library utilising the custom tooltip.

![image](https://user-images.githubusercontent.com/23170709/28254361-9b55ac66-6a71-11e7-83e2-b36e09a571f0.png)
",4,3,['status: accepted']
2132,130731302,6632,3834332,2017-07-15 22:05:44,2017-07-17 21:18:13,closed,Independent dependency parser for new dev setup ,"Addresses #6620

``` 
conda install `python scripts/deps.py build run test`
```
works in both conda 4.3 and 4.4.0 (unreleased) ",5,8,['status: accepted']
2133,130730587,6631,3834332,2017-07-15 21:37:47,2017-07-17 14:41:13,closed,Add sample data for server_embed examples,"- [x] issues: fixes #6619


",3,3,['status: accepted']
2134,130730158,6630,3834332,2017-07-15 21:20:55,2017-07-18 19:49:12,closed,Add metadata support to bokeh server applications,"

- [ ] issues: fixes #6621 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",11,5,['status: accepted']
2135,130727851,6625,3834332,2017-07-15 19:58:47,2017-07-16 17:27:00,closed,Move tests/glyphs to examples/reference/models,"Moving tests/glyphs to examples/reference and changing docs references to reflect change. 

- [x] issues: fixes #3917
",0,4,['status: accepted']
2136,130727289,6624,3834332,2017-07-15 19:38:41,2017-07-19 14:18:52,closed,Issue6577_make stream setter accessible only in the private API,"- [x] issues: fixes #6577 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Addresses issue 6577 by making the stream setter argument only accessible in a private method (_stream).

test__stream_good_data  tests the private method and 
test_stream_good_data tests the public method.

Tested on linux using 
py.test -m ""unit and not selenium""
999 passed
",2,2,['status: accepted']
2137,130724604,6622,3834332,2017-07-15 18:12:28,2017-07-16 17:25:38,closed,Prevent user select of toolbar,"Fixes #4295. 

Tested against the lasso tool in color_scatter example (per issue), and tests to select within the toolbar and its buttons passed manually.

Please let me know if we're able to see *any* places to select text/elements that I might have missed.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
2138,130277576,6609,3834332,2017-07-13 03:04:53,2017-07-17 14:46:25,closed,fix localhost for autoload_server in io.py,"- 1 issue: fixes #6598
- 0 tests added / passed
- 0 release document entry (if new feature or API change)
",5,3,['status: accepted']
2139,130209066,6608,3834332,2017-07-12 18:44:46,2017-07-13 00:23:16,closed,Add width and height kwargs to export_png,"Add width and height kwargs to export_png

- [ ] issues: fixes #6369 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,6,['status: accepted']
2140,130205509,6607,3834332,2017-07-12 18:27:11,2017-07-13 01:38:30,closed,"Rename 'TapSelect"" to ""Tap"" in docs","issues: fixes #6606
",0,8,['status: accepted']
2141,129924639,6604,3834332,2017-07-11 14:37:16,2017-07-11 16:46:30,closed,6592 webgl save,"Fix save tool when `output_backend= ""webgl""`.
Fix webgl docs for the example without webgl.

- [x] issues: fixes #6592 
- [x] tests added / passed
",4,3,['status: accepted']
2142,129807703,6602,3834332,2017-07-11 01:43:57,2017-07-17 01:01:38,closed,GH6601 Added major_label_overrides to ColorBar,"First PR.

==1168 tests deselected ==
== 4 passed, 2 skipped, 1168 deselected, 1 warnings in 27.02 seconds ==


- [X] issues: fixes  #6601
- [X] tests added / passed
- [X] release document entry (if new feature or API change)

# Useful Test Code:
```
## Imports:
import bokeh.plotting as bkp
from bokeh.io import output_notebook, show
from bokeh.models import ColorBar, FixedTicker, Range1d, LinearColorMapper
from bokeh.palettes import viridis
from bokeh.resources import INLINE

import numpy as np

output_notebook(INLINE)

## Create data
ar = np.zeros((20,20))
ar[10:20, 10:20] = 1
ar[0:10, 10:20] = 2
ar[10:20, 0:10] = 3

## Plotting
plt = bkp.figure()

ticks = np.array([0.5, 1.5, 2.5, 3.5])
color_mapper = LinearColorMapper(palette=viridis(4), low=0, high=4)

color_bar = ColorBar(color_mapper=color_mapper, ticker = FixedTicker(ticks=ticks),
                     label_standoff=5, border_line_color=None, location=(0,0),
                     major_label_overrides={0.5:'a', 1.5:'b', 2.5:'c', 3.5:'d'})

plt.image([ar], x=0, y=0, dh=1, dw=1, color_mapper=color_mapper)
plt.add_layout(color_bar, 'right')

plt.x_range = Range1d(0,1)
plt.y_range = Range1d(0,1)

show(plt)
```",10,5,['status: accepted']
2143,129733644,6597,3834332,2017-07-10 17:35:43,2017-07-12 18:39:58,closed,Add TypeScript version of extensions_putting_together.py,fixes #6596 ,5,2,['status: accepted']
2144,129676166,6595,3834332,2017-07-10 13:15:26,2018-03-26 15:18:36,closed,Add support for image diff in headless chrome,"This isn't going to work right now, because it's not yet hooked into testing infrastructure, and we need newer version of nodejs available as a conda package first. To play with this locally, install most recent google chrome (chromium won't work) and nodejs 8.1.x, and then issue:
```
/opt/google/chrome/chrome --headless --remote-debugging-port=9222 & # or in another console
node bokehjs/headless.js examples/models/file/anscombe.html
```
This will generate `output.png` with rendered plots. You can visit `localhost:9222` for remote debugger.

EDIT: `--disable-gpu` is needed only on Windows at this point.

fixes #6594 ",8,4,['status: accepted']
2145,129255619,6589,3834332,2017-07-06 18:50:04,2017-08-01 17:22:29,closed,Enabling server example tests experiment,"Enabling server example tests experiment

- [ ] issues: fixes #3935 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)",4,2,['status: declined']
2146,128989889,6586,3834332,2017-07-05 15:22:14,2017-07-17 19:10:36,closed,Canavandl/6521 deprecate tool events,"- [x] issues: fixes #6521 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,10,"['status: accepted', 'MIGRATION']"
2147,128809170,6585,3834332,2017-07-04 13:58:10,2017-07-19 14:16:18,closed,Mattpap/6584 webpack,fixes #6584 ,8,35,['status: accepted']
2148,128456490,6573,3834332,2017-06-30 21:50:16,2018-02-02 10:15:03,closed,Don't use model instances to collect defaults,"fixes #6572 
",1,2,['status: declined']
2149,128432284,6571,3834332,2017-06-30 19:06:40,2017-06-30 19:35:01,closed,export GOOGLE_API_KEY in test:docs,Maybe fixes doc builds for external contributors. cc @bryevdv.,0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
2150,128399928,6570,3834332,2017-06-30 15:52:42,2017-06-30 16:43:11,closed,Remove unused daylight data download func to remove requests build dep,"Remove unused daylight data download func to remove requests build dep

- [ ] issues: fixes #6543 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2151,128388650,6569,3834332,2017-06-30 14:58:31,2017-06-30 16:05:18,closed,hotfix for Travis log truncation,"issues: fixes #6568

ping @canavandl @mattpap just FYI",2,1,['status: accepted']
2152,128378952,6567,3834332,2017-06-30 14:12:18,2017-06-30 14:46:03,closed,Update Jitter.png to reflect new code base (#6550),"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ X] issues: fixes #6550
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
2153,128218537,6563,3834332,2017-06-29 18:34:40,2017-06-29 19:03:12,closed,Fix up stages install order issues,"This PR attempts to 

* prevent installs when they are not needed
* make sure installs happen when they are needed in the deploy stage",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2154,127999753,6558,3834332,2017-06-28 19:21:20,2017-07-02 15:25:31,closed,Clean up and simplify bokehjs' build,"fixes #6557 
",3,8,['status: accepted']
2155,127778151,6551,3834332,2017-06-27 19:54:03,2017-06-28 13:35:10,closed,Upgrade typescript to 2.4 and ts-node to 3.1,"ts-node needed to be upgraded, because it didn't implement appropriate interfaces when working with TS 2.4, which resulted in ts-node not being able to resolve modules. This works locally, but lets see if this works on travis ci as well, because previously had to pin ts-node ( #6395). 

fixes #6549 
fixes #6395",1,1,['status: accepted']
2156,127718262,6547,3834332,2017-06-27 15:05:09,2017-06-28 14:39:05,closed,clean up phantomjs procs in unit tests,"clean up phantomjs procs in unit tests

- [ ] issues: fixes #6525 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2157,127552475,6544,3834332,2017-06-26 20:08:28,2017-07-13 17:13:06,closed,Canavandl/187 graph vis,"- [x] issues: fixes #187 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Todo:
- [x] Add a `from_networkx`
- [x] GraphDataSource (python) validation (assert nodes.index col, assert edges.start/end col, that layout nodes exist in nodes?)
- [x] add ``Plot.add_graph`` method.
- [x] connect signals
- [x] rename GraphDataSource -> GraphSource
- ~~~[ ] documentation~~~ will do in followup",3,33,['status: accepted']
2158,127534343,6542,3834332,2017-06-26 18:30:27,2017-06-29 14:34:32,closed,TravisCI stages,"This PR implements travis stages. A successful build looks like:

<img width=""392"" alt=""travisci"" src=""https://user-images.githubusercontent.com/1078448/27670330-e86bb140-5c51-11e7-9eea-a65801a0935d.png"">

This PR also removes some cruft scripts and setup.py accommodation for *very* old command line args `--build_js` (with underscore)

Also completely rewrites dev guide chapter. 

A clean run of the build takes ~16 minutes. We could probably shave another minute or possibly two off that at the expense of some added complexity:

* don't install anything on deploy stage if not tagged
* js tests don't install any python deps (run `gulp test` manually)
* quality tests skip sampledata (and download) for `-OO` test 
* storing/retrieving `node_modules` from S3 (maybe)

I think that's about it, thougth. ",0,4,['status: accepted']
2159,127531680,6541,3834332,2017-06-26 18:17:12,2017-06-26 18:21:52,closed,TravisCI stages,Extreme WIP,0,1,['status: WIP']
2160,127529137,6540,3834332,2017-06-26 18:04:08,2017-06-26 18:14:07,closed,TravisCI Stages,"Extreme WIP
",0,1,['status: declined']
2161,127490070,6539,3834332,2017-06-26 14:55:48,2017-06-26 15:30:15,closed,try self contained report for integration test call too,"issues: fixes #6535

Try #2",1,1,['status: accepted']
2162,127475435,6538,3834332,2017-06-26 13:52:13,2017-06-26 14:30:07,closed,try using --self-contained-html to fix report CSS,"issues: fixes #6535
",4,1,['status: accepted']
2163,127350021,6534,3834332,2017-06-25 02:17:59,2017-06-30 19:33:18,closed,Add password input (Simplified),"This branch adds a Input text for passwords.

- [ ] issues: fixes #6492
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,12,['status: accepted']
2164,127344396,6533,3834332,2017-06-24 21:35:56,2017-06-25 03:50:54,closed,Remove bokehjs/src/vendor and all associated logic,fixes #6532 ,0,6,['status: accepted']
2165,127338286,6531,3834332,2017-06-24 18:05:54,2017-06-25 03:51:28,closed,Add password input,"This branch adds a Input text for passwords.

- [ ] issues: fixes ##6492
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,6,['status: superseded']
2166,127266998,6529,3834332,2017-06-23 18:48:51,2017-06-23 19:23:09,closed,only run js tests on py3 builds for now,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2167,127260539,6528,3834332,2017-06-23 18:11:02,2017-06-23 18:44:00,closed,Hotfix/ci image,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,10,['status: declined']
2168,127231645,6527,3834332,2017-06-23 15:26:31,2017-06-24 18:50:49,closed,Bryanv/build improvements,"This is a WIP PR to clean up some of our build code as well as provide some tools and docs to help new contributors get started more easily. 

The last commit relaxes some constraints in `meta.yaml` will probably have to experiment to get things right. ",3,12,"['status: accepted', 'reso: completed', 'tag: component: build']"
2169,127184779,6526,3834332,2017-06-23 11:09:11,2017-06-23 14:55:24,closed,Fix signature() utility function for Python 2.7.9,"This fixes five unit tests that were broken under Python 2.7.9 (but not under Python 2.7.10+). No new tests were added since it was necessary to change the code to pass existing tests.

List of previously broken tests:
* `test_property_on_change_good_partial_function`
* `test_property_on_change_good_partial_method`
* `test_event_on_change_good_partial_function`
* `test_event_on_change_bad_partial_function`
* `test_event_on_change_good_partial_method`

All tests broke with the same issue:
```
bokeh/util/callback_manager.py:35: in on_event
    _check_callback(callback, ('event',), what='Event callback')
bokeh/util/callback_manager.py:12: in _check_callback
    sig = signature(callback)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _

func = <functools.partial object at 0x7f8453a16cb0>

    def signature(func):
        # The modifications in this function are to make results more in line
        # with Python 3, i.e. self is not included in bound methods, supplied
        # parameters are not reported in partial, etc. This simplifies the
        # downstream code considerably.
        from inspect import getargspec, isfunction, ismethod
        from functools import partial

        if isfunction(func) or ismethod(func):
            sig = getargspec(func)
            if ismethod(func):
                sig.args.remove('self')
            return sig

        elif isinstance(func, partial):
            sig = getargspec(func.func)
            if 'self' in sig.args: sig.args.remove('self')
>           for name in func.keywords.keys():
E           AttributeError: 'NoneType' object has no attribute 'keys'

bokeh/util/future.py:85: AttributeError
```

- [o] issues: fixes #6512 
- [o] tests added / passed",2,1,['status: accepted']
2170,126900752,6520,3834332,2017-06-22 03:02:12,2017-06-22 15:21:39,closed,log more verbose app paths," issues: fixes #5431

Additionally, this makes `--show` work correctly with `--address`
",3,1,['status: accepted']
2171,126900480,6519,3834332,2017-06-22 02:59:02,2017-06-22 15:19:09,closed,trigger set_data normally off glyph property changes,"issues: fixes #6185

This removed the gorpy `propchange` signal in favor of calling `set_data` in response to standard property change events. If it's found we need an optimization we can be smarter about it (i.e. by splitting up `set_data` into different pieces, and triggering only what is necessary)
",1,1,['status: accepted']
2172,126783213,6515,3834332,2017-06-21 14:48:42,2017-06-21 16:58:44,closed,don't spawn new PhantomJS sessions inside bokeh.io._get_svgs if driver arg,"don't spawn new PhantomJS sessions inside bokeh.io._get_svgs if driver arg

- [x] issues: fixes #6514 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2173,126616468,6510,3834332,2017-06-20 19:57:09,2017-06-20 21:14:05,closed,Maximize window for png screenshot to capture whole output,"Maximize window for png screenshot to capture whole output

- [x] issues: fixes #6509
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2174,126428646,6506,3834332,2017-06-20 01:13:34,2017-06-20 21:11:40,closed,Collect small docs and examples improvements,"issues: fixes #6453 fixes #6507 fixes #6377 fixes #4859 fixes #3245 fixes #4752

",0,7,['status: accepted']
2175,126411902,6504,3834332,2017-06-19 22:33:59,2017-06-19 23:56:36,closed,add mode for synthetic data if no pyaudio installed," issues: fixes #5628

Produces this now, when `pyaudio` is not installed:

<img width=""971"" alt=""screen shot 2017-06-19 at 17 26 28"" src=""https://user-images.githubusercontent.com/1078448/27308638-58e6b44a-5515-11e7-80b0-b99c81eba79d.png"">


@philippjfr if you care interested in making the fake data better or more interesting, let me know. 
",0,1,['status: accepted']
2176,126368609,6499,3834332,2017-06-19 18:33:20,2017-06-19 20:07:18,closed,add scales automodule,issues: fixes #6496 ,1,1,['status: accepted']
2177,126366269,6498,3834332,2017-06-19 18:21:35,2017-06-19 20:06:45,closed,update TravisCI to latest (supported) linux dist,fixes #6497,3,1,['status: accepted']
2178,126199307,6491,3834332,2017-06-18 19:14:39,2017-06-19 17:33:31,closed,fix line glyph rendering with selected points,"This PR fixes the weird behavior of the line glyph with selected and non-selected points. 

In the example, I added some NaNs to show how they are handled.
Before:
![line_selection_before](https://user-images.githubusercontent.com/4241244/27263420-7d31381e-541d-11e7-8bc4-2ed4c6549c7f.gif)

After:
![line_selection](https://user-images.githubusercontent.com/4241244/27263419-7d29861e-541d-11e7-9d7f-d3abaceda1ce.gif)

One potential way to improve the rendering of the non-selected points in the line would be to extend from the non-selected points one back and one forward, so that there wouldn't be a gap between the selected and non-selected points. But then the line glyph view would need to know whether it is rendering selected or non-selected points, which is info at the glyph renderer level. The glyph renderer could tell the line glyph when it calls glyph.render(...) (with an additional parameter as a selected flag?), but I wasn't sure if that was worth it or necessary. 

![line_selection_example](https://user-images.githubusercontent.com/4241244/27263449-286c4160-541e-11e7-8147-2fceed6b97b5.png)


- [x] issues: fixes #515 
- [x] tests added / passed

```python
import numpy as np
from bokeh.plotting import figure
from bokeh.models import ColumnDataSource
from bokeh.io import show

N = 30
x = np.linspace(-2, 2, N)
y = np.sin(2*x)
y[15] = np.NaN
y[17] = np.NaN
y[20] = np.NaN

source = ColumnDataSource(dict(x=x, y=y))

fig1 = figure(tools=['tap', 'box_select', 'hover', 'save'], plot_width=500, plot_height=300)
fig1.line(x=""x"", y=""y"", source=source, line_color=""#F46D43"", line_width=6, line_alpha=0.6)
fig1.circle(x=""x"", y=""y"", source=source)

show(fig1)
```",5,3,['status: accepted']
2179,126175217,6489,3834332,2017-06-18 03:04:50,2017-06-19 17:28:15,closed,add option to upload binary files to CDN,"issues: fixes #6464

This adds an option to upload binary data such as the examples zip file correctly to CDN. 

Tested locally by hand, however for good measure examples upload has also been moved last so that if it fails, nothing else is impacted. 

Would like to merge this before `0.12.7dev2`",4,2,['status: accepted']
2180,126174690,6488,3834332,2017-06-18 02:35:12,2017-06-19 15:26:38,closed,send all datetimes to BokehJS timezone-naive,"- [x] issues: fixes #6480
- [x] tests added / passed

The intent behind this PR is to send all datetime values to BokehJS ""as-is"". If a user wanted to perform timezone conversion, that could be done explicitly with a custom tick formatter. LAter perhaps we can add optional properties to specify an assumed timezone for the values, as well as a display timezome for automatic conversions when displaying. ",0,1,['status: accepted']
2181,126171030,6487,3834332,2017-06-17 23:12:31,2017-06-19 15:40:50,closed,remove all 0.12.4 deprecations,"This removes all the deprecations up to those made in `0.12.4`

Our recent informal policy has been to remove deprecations after two release cycles which means we should do our best to get any remaining deprecations into `0.12.7` before removing *all* deprecations for 1.0",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2182,126169616,6486,3834332,2017-06-17 22:06:02,2017-06-18 02:20:36,closed,revert conda build to --no-test,"`--build-only` does not leave build artifacts in `conda-bld/noarch` for whatever reason


Will test with a `0.12.7dev2`",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
2183,126165550,6485,3834332,2017-06-17 19:29:36,2017-06-19 17:29:06,closed,add mark for tests needing selenium and support pytest --unmarked,"issues: fixes #6441

Non-integration tests that require selenium can now be selected with `py.test -m selenium` This includes, e.g.some png and svg export unit tests. 

Additionally `py.test -m unit` will run all tests otherwise unmarked (i.e the basic python unit tests)",9,3,['status: accepted']
2184,126056839,6483,3834332,2017-06-16 15:23:15,2017-06-16 18:27:10,closed,Restore workaround to properly trigger changes in source.data from data_tables,"Restore workaround to properly trigger changes in source.data 
Fix typo in tests for data_table.setItem

The workaround used was restored from 260f5765b63060b60680f7f3c7e91df0a5ed637e using the new emit API.


- [x] issues: fixes #6478 
- [ ] tests added / passed

",1,2,['status: accepted']
2185,126039399,6482,3834332,2017-06-16 14:00:38,2017-06-16 16:20:31,closed,Start rewriting bokehjs in TypeScript,"Rewrite randomly picked modules in TypeScript (mostly core, utils and some tests).

addresses #6481 ",1,22,['status: accepted']
2186,125653531,6471,3834332,2017-06-14 17:42:06,2017-06-15 21:12:47,closed,Canavandl/bokeh png command,"- [x] issues: fixes #6291
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Decreases time of 3 exports by 50%:

<img width=""682"" alt=""screen shot 2017-06-14 at 3 30 12 pm"" src=""https://user-images.githubusercontent.com/2198981/27148381-74d48ff4-5116-11e7-9ab7-6aa2a374c385.png"">

Note: This only works for scripts where the layouts have been added to curdoc explicitly.
",0,9,['status: ready']
2187,125478319,6469,3834332,2017-06-13 22:49:25,2017-06-15 21:15:20,closed,Bryanv/6467 noarch,"issues: fixes #6467

This PR updates the pinned conda build dependencies to latest versions and updates the build and deploy machinery to create and upload conda ""noarch"" packages. 
",0,9,['status: accepted']
2188,125320408,6456,3834332,2017-06-13 09:42:14,2017-06-19 20:58:15,closed,Drop Tool.plot property,fixes #6455 ,4,2,['status: accepted']
2189,125268605,6452,3834332,2017-06-13 02:52:11,2017-06-16 18:34:40,closed,Bokeh application note doesn't work in jupyter,"Trivial fix for the issue of #6451, also unit test is added

- [ ] issues: fixes #6451
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: declined']
2190,125249817,6449,3834332,2017-06-12 23:19:45,2017-06-13 00:11:30,closed,protect against exceptions when running inline code,"Without this `try/finally` if there is an exception in the the load callback then it is not deleted, and the next time output is attempted, the old callback is tried to run again, again resulting in an error. (i.e. permanently corrupting a notebook until a clear restart)",3,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: notebook']"
2191,125236990,6448,3834332,2017-06-12 21:47:08,2017-08-09 15:30:57,closed,Review and improve layout constraints,"This is an attempt to fix issues like #4972, where constraints are badly created, resulting in collapsed plots or ""unsatisfiable constraint"" error.

fixes #4972
fixes #4599 
fixes #6578 ",1,21,['status: accepted']
2192,125186656,6445,3834332,2017-06-12 17:18:22,2017-06-12 22:38:08,closed,bump required bkcharts version to 0.2,This should be merged AFTER the new bkcharts is available in `defaults`,0,1,"['status: accepted', 'type: task', 'reso: completed']"
2193,125183958,6444,3834332,2017-06-12 17:02:51,2017-06-12 17:43:59,closed,Canavandl/bump canvas2svg release,"- [x] issues: fixes #6443
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,2,['status: accepted']
2194,125036888,6438,3834332,2017-06-11 19:20:15,2017-06-11 20:04:44,closed,Fix merging of 2d selections,"This PR fixes the merging of 2d selections. The merge function was moved into object.ts from hittest in [PR 6202](https://github.com/bokeh/bokeh/pull/6202). Before the move, the result of merge was created by `result = {}`. When it was moved to typescript, it became `result = Object.create(null)`. But `result = {}` creates an object whose prototype is Object.prototype, so in object.ts, it should be `result = Object.create(Object.prototype)`. We need the returned object to have Object methods, like `hasOwnProperty`. 

The test ""Selector should merge 2d selections with append=true"" fails before the change.  

```
  1) Selector should merge 2d selections with append=true:
     TypeError: obj1.hasOwnProperty is not a function
      at Object.merge (build/js/tree/core/util/object.js:43:25)
      at HitTestResult.exports.HitTestResult.HitTestResult.update_through_union (build/js/tree/core/hittest.js:63:46)
      at Selector.exports.Selector.Selector.update (build/js/tree/core/selector.js:27:21)
      at Context.<anonymous> (test/core/selector.coffee:73:9)
```

- [x] issues: fixes #6433 
- [x] tests added / passed
",1,1,['status: accepted']
2195,124742008,6420,3834332,2017-06-08 20:52:54,2017-06-12 15:54:25,closed,Move js_on_change() connections to connect_signals(),"- [x] fix initialization order
- [ ] add tests for initialization order
- [x] add aliases for `streaming` and `patching`
- [x] add deprecation warning

fixes #6419 ",8,2,['status: accepted']
2196,124682222,6418,3834332,2017-06-08 15:41:02,2017-06-08 18:44:28,closed,fix nearest mode for hover on multi-lines,"issues: fixes #6416

Tested with the code in the issue. All this complicated code in HoverTool needs much better unit tests at some point. ",1,1,['status: accepted']
2197,124637730,6415,3834332,2017-06-08 12:26:26,2017-06-16 18:58:53,closed,Pass HTTP arguments to autoload_server (#5992),"Needed that feature for an app so I figured I'd do a PR. 
It's my first one though, so all suggestions are welcome :)

- [x] issues: fixes #5992
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",9,1,['status: accepted']
2198,124597919,6413,3834332,2017-06-08 08:51:25,2017-06-08 12:04:22,closed,Fix properties to work in when pandas is not installed,"fixes #6411 
",1,1,['status: accepted']
2199,124596363,6412,3834332,2017-06-08 08:43:22,2017-06-08 14:54:23,closed,Fix handling of click events in button widgets,"@bryevdv, I included your changes from PR #6410.

fixes #6402
",2,2,['status: accepted']
2200,124518948,6410,3834332,2017-06-07 21:10:48,2017-06-08 12:09:05,closed,make buttons respect disabled property,"- [x] issues: fixes #6402
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

ping @bokeh-dev @jlstevens This PR makes it so that buttons with `enabled=False` no longer generate click events. 

Perhaps this merits a migration note?",5,1,['status: superseded']
2201,124468783,6408,3834332,2017-06-07 16:52:18,2017-06-12 17:06:05,closed,General 0.12.6 examples and docs tasks,"This PR is for collecting small fixes to examples (to silence validation warnings, or improve appearance, etc) or other docs related tasks (e.g. expanding the gallery)",0,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2202,124339462,6404,3834332,2017-06-07 05:33:30,2017-06-07 15:18:05,closed,extract data source correctly on line selections,"issues: fixes #6400

The loop was iterating over an object indexed by data source id's and passing the id as the data source to the callback. This PR correctly grabs the actual data source.

<img width=""621"" alt=""screen shot 2017-06-07 at 00 31 48"" src=""https://user-images.githubusercontent.com/1078448/26863543-d9a1c16c-4b18-11e7-80e4-e6c8d58f1235.png"">

If there is any good test that is reasonable to add I'd appreciate suggestions. ",1,2,['status: accepted']
2203,124336231,6403,3834332,2017-06-07 04:53:40,2017-06-07 14:11:15,closed,Bryanv/6398 webgl canvas regression,"- [x] issues: fixes #6398
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR fixes the missing canvas error.  On safari. some scatter examples still fail with 
```
RuntimeError: RuntimeError:OpenGL got errors (after draw): 1282
```

I believe this was an existing problem on safari, but if there are ideas to fix it I would like to fix it in this PR. 

Would also like to add tests for the canvas creation. ",1,1,['status: accepted']
2204,124322910,6397,3834332,2017-06-07 02:10:36,2017-06-07 02:31:30,closed,More explicit match cases,"This PR adds handling of Pandas types explicitly, as well as adds back overall exception fallback in any case. 

Without this, `export_csv` example would work but show errors like

```
2017-06-06 20:36:45,200 error handling message Message 'PATCH-DOC' (revision 1): ValueError('The truth value of a Series is ambiguous. Use a.empty, a.bool(), a.item(), a.any() or a.all().',)
```

With this, dicts of arrays, series, and indices are compared correctly (tests added)

ping @mattpap ",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: server']"
2205,124243563,6394,3834332,2017-06-06 17:16:35,2017-06-06 18:22:12,closed,fix property match checking when there are dicts of arrays,"- [x] issues: fixes #6393
- [x] tests added / passed

@philippjfr @mattpap please test/have a look at this",2,2,['status: accepted']
2206,124214613,6392,3834332,2017-06-06 15:08:00,2017-06-06 17:13:57,closed,Use @types/gulp 3.x with gulp 3.x,"fixes #6391 
",8,2,['status: accepted']
2207,124187378,6390,3834332,2017-06-06 13:13:43,2017-06-06 13:56:57,closed,handle renderers that return null hit test results,"- [x] issues: fixes #6388
- [x] tests added / passed

",4,2,['status: accepted']
2208,124103522,6387,3834332,2017-06-06 03:38:10,2017-06-06 21:34:23,closed,Fixed typos in setup doc,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2209,124032919,6385,3834332,2017-06-05 18:33:56,2017-06-05 19:36:13,closed,rely on request_render and fix up CS code,"@mattpap `@_set_bokeh_ranges` implies `request_render` so I've just reduced to that. It performs OK, or at least better than nothing in any case. ",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2210,124006766,6384,3834332,2017-06-05 16:03:36,2017-06-09 19:37:11,closed,Use a two pass bottom-up algorithm for computing layout,"This PR switches from a chaotic signal-based layout algorithm to a bottom-up one. This is still a two pass approach, but at least it was narrowed down and doesn't introduce performance penalty due to excessive painting (painting is done only after second pass). This PR is a bit chaotic on its own, but for now I just wanted to make things work and naming convention, etc. I will leave for later. I tested this on server examples from 0.12.6 milestone and a few `plotting/file`. After running examples on travis ci I will be able to figure out how badly I broke things and how much further work is needed. Note that unit tests are broken right now due to code shuffling and changes in method names.  

fixes #5518 
fixes #6213 
fixes #4810
fixes #4764
fixes #5131
fixes #5879
fixes #6287
possibly more
",44,22,['status: accepted']
2211,123963594,6382,3834332,2017-06-05 11:56:47,2017-06-05 12:36:20,closed,attempt to properly redraw when gmaps change size,"issues: fixes #6091

As motioned in the issue this does not seem to be a 100% fix, but an improvement. Tested also that notebook usage was not affected. ",0,1,['status: accepted']
2212,123896813,6381,3834332,2017-06-04 23:43:05,2017-06-05 18:22:20,closed,Whisker annotation,"- [x] issues: fixes #2352 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,11,['status: accepted']
2213,123886095,6380,3834332,2017-06-04 17:52:52,2017-06-05 12:44:31,closed,add a toggleable property to inspectors," issues: fixes #6064

Until there is a better solution to consolidating multiple hover tools in toolbars, this feature at least allows users who have multiple hover tools the option of hiding some or all of the buttons in the toolbar. ",4,1,['status: accepted']
2214,123882833,6379,3834332,2017-06-04 16:08:39,2017-06-05 12:52:03,closed,Do not over-execute range slider render,"fixes #6123

Not 100% about this solution but it seems like a ""good-enough"" solution for the immediate term. It makes things usable at all (and for probably most common use cases) until broader jq refactor can take place. 

This code:
```
from bokeh.io import curdoc
from bokeh.models import RangeSlider
from bokeh.plotting import figure

slider = RangeSlider(start=0, end=10, range=(1,9), step=.1, title=""Stuff"")

def cb(attr, old, new):
    print(slider.range)

slider.on_change('range', cb)

curdoc().add_root(slider)
```

Behaves as expected:

<img width=""1107"" alt=""screen shot 2017-06-04 at 11 03 25"" src=""https://cloud.githubusercontent.com/assets/1078448/26763284/fc4792aa-4915-11e7-81bf-3eb3a82dc759.png"">

",3,1,['status: accepted']
2215,123831334,6375,3834332,2017-06-03 06:11:59,2017-07-16 19:37:30,closed,Developer docker tools,I've created this docker container so I could more easily run the tests. I thought maybe this might be of interest to the project in order to facilitate external contributions. Let me know what you think!,27,5,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: build']"
2216,123816904,6374,3834332,2017-06-02 23:28:20,2017-06-05 15:06:23,closed,Bryanv/6317 fix warnings," issues: fixes #6317

@mattpap @canavandl I'd appreciate close review of this PR. ",1,2,['status: accepted']
2217,123736314,6373,3834332,2017-06-02 14:57:44,2017-06-02 18:30:45,closed,"Don't use implicit slots, e.g. `@connect(@change, @set_data)`","I went ahead and fixed everything, besides:
```
bokehjs/src/coffee/models/tools/toolbar.coffee:        @connect(tool.properties.active.change, @_active_change.bind(null, tool))
bokehjs/src/coffee/models/tools/toolbar_box.coffee:          @connect(proxy.properties.active.change, @_active_change.bind(null, proxy))
```
which looks suspicious on its own.

fixes #6365 ",1,1,['status: accepted']
2218,123593595,6371,3834332,2017-06-01 21:04:21,2017-06-16 19:08:03,closed,Add height/width kwarg support to bokeh.io.export,"- [x] issues: fixes #6369 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,2,['status: declined']
2219,123545000,6368,3834332,2017-06-01 16:47:26,2017-06-05 14:34:36,closed,Canavandl/svg headless export,"- [x] issues: related #6345 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

The main point of discussion is that I have this functionality as a separate function than ``bokeh.io.export``. Is that the correct idea? I think it is because A) users would potentially want a PNG screenshot of an SVG plot-containing layout and B) the product is different enough (a single PNG vs multiple SVGs) that I think it'd cause confusion if they were the same method. Perhaps we'd better rename ``export`` to ``export_as_png``?
",3,11,['status: accepted']
2220,123505488,6367,3834332,2017-06-01 13:57:55,2017-06-01 15:55:31,closed,Fix up webgl and x/y_mapper_type deprecation,"Fix up webgl and x/y_mapper_type deprecation. Was missing adding the deprecated attrs as __deprecated_attributes__ so the property system would defer to the models getters/setters.

- [x] issues: fixes #6366
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2221,123449766,6364,3834332,2017-06-01 09:02:53,2017-06-05 12:54:44,closed,Make DataTable index column optional,"
- [ ] issues: fixes #6099 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)


As discussed in posts on issue #6099, I can't run or test this so initial PR to help work out what's going wrong. Any advice much appreciated.

Note: I tried running all tests using py.test and got the following error (in multiple modules - just one shown below):

________________________________ ERROR collecting bokeh/core/tests/test_json_encoder.py ________________________________
bokeh/core/tests/test_json_encoder.py:14: in <module>
    import pandas as pd
../../anaconda3/envs/bokehdev/lib/python3.6/site-packages/pandas/__init__.py:51: in <module>
    plot_params = pandas.plotting._style._Options(deprecated=True)
E   AttributeError: module 'pandas' has no attribute 'plotting'

",8,1,['status: declined']
2222,123407843,6363,3834332,2017-06-01 02:37:23,2017-06-15 14:23:27,closed,Embed exclude resource files,"This is a WIP pull request for issue #6341.

After looking more closely at the codebase, I think it might be best to introduce a parameter to `autoload_server` instead of introducing an entirely new method (e.g. `connect_server` as previously suggested) after all. I understand that the term ""auto"" sort of implies that it would automatically load everything. However, the point of this PR is just to exclude the resource *files* so that they can be served from elsewhere (most typically a caching server). After this change, `autoload_server` would still provide other resources (e.g. inline JS/CSS).

Also, a more practical reason is that the term ""auto"" is already used in a lot of places (`AutoloadJsHandler`, `AUTOLOAD_JS`, etc.) and therefore extending the terminology would probably require adding a lot of boilerplate code for little benefit in the end.

Finally, I've added the parameter in a way that would be backwards-compatible. Let me know if I've missed anything though!

Let me know what you think. I'm happy to make adjustments and also to write tests and documentation once we settle on the final API.

 Thanks!",22,9,['status: accepted']
2223,123376136,6361,3834332,2017-05-31 21:44:48,2017-06-02 15:20:29,closed,fix promblems with render pause/unpause,"issues: fixes #6328

This fixes issues with `pause` and `unpause`. These functions were being called in the `PlotCanvasView` initializer, but *not* in the subclass `GMapPlotView` initializer. This could result in calls to `request_render` too early.  Specifically wrt to gmaps, this could cause `_build_map` to be called before the plot was otherwise initialized and ready to render, which in turn results in a blank gmap. 

To fix pause/unpause for now, needed to change from simple boolean to a condition counter to keep track of ""pause level"", so that on pause/unpause pair nested in side another (via a function call, say) would be handled correctly. Additionally, put an explicit guard in `render` itself to prevent any renders during a pause regardless of how they were triggered. I don't think this is strictly necessary, but seems like a reasonable preventative measure. 

With this change I am unable to reproduce any issues with gmaps inside or outside of notebooks, with either inline or server resources. 

I also fixed a problem with zoom range updates that could lead to unbalanced pause/unpause. 
",3,2,['status: accepted']
2224,123329461,6358,3834332,2017-05-31 17:43:32,2017-05-31 19:12:22,closed,Fix regression in legend location,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6142 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This change makes the origin for legends in the left/right panel be based on the top left corners of the left/right side panels instead of the bottom left corner. This matches the behavior from 0.12.4.

Adds comment from #6354 ",0,2,['status: accepted']
2225,123327750,6357,3834332,2017-05-31 17:34:17,2017-05-31 17:34:24,closed,"Revert ""Fix regression in legend location""",Reverts bokeh/bokeh#6354,0,1,"['status: accepted', 'type: task']"
2226,123322169,6354,3834332,2017-05-31 17:03:14,2017-05-31 17:29:40,closed,Fix regression in legend location,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6142 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This change makes the origin for legends in the left/right panel be based on the top left corners of the left/right side panels instead of the bottom left corner. This matches the behavior from 0.12.4.",2,1,['status: accepted']
2227,123283874,6352,3834332,2017-05-31 14:15:24,2017-05-31 16:41:45,closed,Hack around unset document in Box's layout computations,"I feel dirty writing code like this, but I don't see any other option, perhaps besides restoring old logic with invalidating all models every time `children` change (which isn't any better). Now I know why this code was there before. There are two proper solutions to this issue. One is fix document to attach itself to all new objects, which, to my surprise, doesn't work or at least doesn't work early enough. The other is move layout logic to views, but due to `LayoutCanvas` model and lack of `LayoutCanvasView`, it's pretty much impossible right now to do so.

fixes #6261 
",1,1,['status: accepted']
2228,123256454,6351,3834332,2017-05-31 11:50:38,2017-05-31 14:48:10,closed,Fix memory leak when updating panel constraints,fixes #6311,2,1,['status: accepted']
2229,123237843,6350,3834332,2017-05-31 10:04:33,2017-05-31 23:34:25,closed,server.py: add max_buffer_size argument,"Configurable maximum upload size, see  #6338

Fixes  #6338",9,1,['status: accepted']
2230,123206195,6349,3834332,2017-05-31 07:05:20,2017-06-05 11:55:33,closed,"gallery toctree path should not use os separator, always backslash","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #6331
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",18,3,['status: accepted']
2231,123146284,6347,3834332,2017-05-30 21:19:18,2017-05-31 19:21:31,closed,Canavandl/6345 deprecate webgl attr,"Deprecate ``webgl`` attr in place of ``output_backend=""webgl""``.

This is one to prevent conflicts between the new SVG backend and webgl.

- [x] issues: related to #6345
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",2,6,"['status: accepted', 'MIGRATION']"
2232,123114998,6344,3834332,2017-05-30 18:34:55,2017-05-30 19:14:18,closed,Fix scale/range incompat,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #6343 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2233,123082078,6342,3834332,2017-05-30 15:44:47,2017-06-06 10:14:58,closed,Implement proper rendered finished (idle) algorithm,"- [x] support `ImageURL`
- [x] support `GMapPlotCanvas`
- [ ] support `TileRenderer`

fixes #5879 
",5,1,['status: superseded']
2234,123042054,6340,3834332,2017-05-30 12:50:16,2017-12-07 02:45:25,closed,Add support for namespace models,"fixes #3674
",11,5,['status: declined']
2235,122937226,6337,3834332,2017-05-29 19:33:51,2017-05-29 23:33:13,closed,Silence all change events during initialization of models,"This is a side effect of work on layout. Changes in this PR:

- [x] silence change events on init
- [x] fix double initialization bug in `Signal.constructor`
- [x] better printing of properties (to better visualize change signals)
- [x] don't include `@type` in `@id`, because `toString()` already handles this
- [x] make `uniqueId` produce simple ids in dev mode (requires setting `dev` in `core/util/string`)

fixes #6336 ",1,8,['status: accepted']
2236,122936331,6335,3834332,2017-05-29 19:22:35,2017-06-24 18:51:39,closed,Proof of concept removal of jquery and jquery-ui,"- [x] remove `bk-ui-` prefixing
- [x] rewrite widgets using DOM APIs
- [x] drop backbone's javascript
- [x] remove dependency on jquery{-ui}
- [x] make sure all widgets sill work
- [x] reimplement autocomplete widget
- [x] import slick grid from fork (don't use vendor)
- [x] upgrade slick grid to newest version
- [x] fix slick grid's cell editors
- [x] use pikaday in date picker widget
- [x] merge PR #5774 into this
- [x] restore title attribute in sliders
- [x] make sliders' style less bulky
- [x] make slickgrid respect strict mode
- [x] include jquery for data table widget

fixes #6332 
fixes #6474 
fixes #6490
fixes #5502 
fixes #2527 
fixes #5506
fixes #6308
fixes #6530 ",25,115,['status: accepted']
2237,122912059,6334,3834332,2017-05-29 15:11:15,2017-06-02 14:15:36,closed,add script to dump complete JSON specification for all Bokeh models," issues: closes #5950


",5,2,['status: accepted']
2238,122459995,6327,3834332,2017-05-25 15:10:56,2017-05-25 15:50:32,closed,Adds the renderer object to cb_data,"To be able to identify which renderer invoked the callback from within the JS

- [x] issues: fixes #6326 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2239,122280252,6325,3834332,2017-05-24 17:15:57,2017-05-24 19:19:47,closed,downstream URL for dynamic_map.py has SSL issue,disabling for now should evaluate more later,0,1,"['status: accepted', 'type: task', 'reso: completed']"
2240,122276860,6324,3834332,2017-05-24 16:58:36,2017-05-24 19:21:08,closed,Add curdoc().add_root() to bokeh command example,"Otherwise, the resulting document is empty.

Closes #5634.",2,1,['status: accepted']
2241,122244494,6323,3834332,2017-05-24 14:36:49,2017-05-24 19:20:22,closed,add bkcharts shim and dependency,"Add compat shim for `bokeh.charts` and dependency on `bkcharts` (both to be removed at `1.0`)

",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2242,121996736,6322,3834332,2017-05-23 13:23:14,2017-05-23 14:09:42,closed,Fix #6319: close HTTP server explicitly when closing Bokeh server,"issues: fixes #6319 

This avoids a ResourceWarning with the HTTP server's listening socket(s).
",1,1,['status: accepted']
2243,121989374,6321,3834332,2017-05-23 12:49:28,2017-07-14 17:02:04,closed,Exposed initial_start and initial_end in models/Range1d. This allows …,"…the user to change the 'default' range after a graph has been created and before the user knows the range of the data that is going to be plotted

- [x] issues: fixes #6320 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,1,['status: declined']
2244,121981683,6318,3834332,2017-05-23 12:09:02,2017-05-23 15:26:02,closed,Ensure DataSpec.to_serializable returns new dict,"Fixes issue #6316 associated with ``ScreenDistanceSpec`` and ``DataDistanceSpec`` attempting to set ``units`` directly on a container, triggering a validation error. I'm still looking for a small reproducible example that could be tested but this seems to be the safer approach regardless.",2,4,['status: accepted']
2245,121859257,6315,3834332,2017-05-22 20:33:08,2017-05-22 20:55:12,closed,add tornado version to server.py string,issues: fixes #6309 ,0,1,['status: accepted']
2246,121677251,6313,3834332,2017-05-21 21:42:44,2017-05-23 00:07:30,closed,Extend CDS patching to sub-elements in columns,"This PR extends the CDS patch capability to more kinds of patch values. In particular, it can now patch sub-portions of ""array"" element. This is most useful for, e.g. updating data for image, patches, and multi-line glyphs.

Patches are still of the form `(index, new_data)` but now the index can be a slice, or a list of integers and slices (with correspondingly sized new data) The kinds of patches now accepted are summarized below:
```
# patch entire elements of ""typical"" columns
(10, 100)
(slice(2), [100, 101])

# column is ""list of 1d array""
([1, 4], [6])
([0, slice(2, 4)], [100, 101])

# column is ""list of 2d array""
([1, 4, slice(None)], [1, 2, 3, 4, 5])
([0, slice(2, 4), 2], [100, 101])
```

- [x] issues: fixes #6285
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,5,['status: accepted']
2247,121613903,6310,3834332,2017-05-20 07:06:26,2017-05-20 14:30:47,closed,Enabling/ Disabling re-ordering of columns in DataTable (freezing columns in place),"Addresses allowing fixed columns in datatable. https://github.com/bokeh/bokeh/issues/6286

Assuming no extra documentation is needed. 

If a test is needed I can do that too tomorrow.

* [x] issues: fixes #6286 
* [ ] tests added / passed
* [X] release document entry (if new feature or API change)
",1,6,['status: accepted']
2248,121320002,6304,3834332,2017-05-18 16:00:21,2017-05-19 04:14:53,closed,Make HoverTools' tooltips reconfigurable,fixes #6085,0,3,['status: accepted']
2249,121123499,6302,3834332,2017-05-17 18:31:29,2017-05-17 19:25:03,closed,Use stock data from bokeh.sampledata.stocks instead of yahoo ichart api,"Use stock data from bokeh.sampledata.stocks instead of yahoo ichart api

Use stock data from bokeh.sampledata.stocks instead of yahoo ichart api
- [x] issues: fixes #6301
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2250,121077864,6300,3834332,2017-05-17 14:52:23,2017-05-18 20:37:20,closed,Replace underscore with underscore.template,"This removes last imports of underscore and uses underscore.template for templating and code under `core/util` otherwise.

fixes #6207
",0,6,['status: accepted']
2251,120880924,6297,3834332,2017-05-16 17:18:38,2017-05-19 00:43:43,closed,update MANIFEST.in," issues: fixes #6295

Update `MANIFEST.in` in light of recent examples re-orgs and `bkcharts` split. 

The also changes to include the docs in the source tarball.",8,5,['status: accepted']
2252,120875695,6296,3834332,2017-05-16 16:51:32,2017-05-16 18:31:53,closed,Pin sphinx==1.5.1 and clean up dev_guide/documentation deps section,"* Pin to sphinx=1.5.1
* Remove duplicate `packaging` entry in meta.yaml
* Clean up dev_guide/documentation deps sections

- [x] issues: fixes #6228
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,3,['status: accepted']
2253,120669308,6292,3834332,2017-05-15 18:52:44,2017-05-30 22:32:10,closed,Add user guide documentation for bokeh.io.export,"Add user guide documentation for bokeh.io.export

- [x] issues: fixes #6290
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,7,['status: accepted']
2254,120232526,6282,3834332,2017-05-12 01:22:12,2017-05-12 16:59:35,closed,"allow plot ranges to accept (start, end) tuples","- [x] issues: fixes #1112
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Just trying to pass over old tickets to close or complete if they are trivial. This should be uncontroversial. ",5,1,['status: declined']
2255,120221562,6281,3834332,2017-05-11 23:22:44,2017-05-14 19:30:50,closed,Add plumbing for streaming and patching annoations," fixes #4872

Arrow, Band, and LabelSet were missing signal connections to `source.streaming` and `source.patching` necessary for these annotations to update when their data sources are streamed or patched.

This PR adds the missing signal connections. When reasonable, a `request_render` was moved to `set_data` (this is ok when there is not any CSS/dom rendering path)

Test case:

```
from random import randrange
from bokeh.io import curdoc
from bokeh.plotting import figure
from bokeh.layouts import layout
from bokeh.models import ColumnDataSource, Arrow, NormalHead

plot = figure(x_range=(0, 10), y_range=(0, 10))
source = ColumnDataSource(data={'x0': [], 'y0': [], 'x1': [], 'y1': []})
# if the plot only contains annotations it screws up range and scrolling
plot.circle(x=0, y=0)
plot.add_layout(
        Arrow(end=NormalHead(size=4), x_start='x0', y_start='y0', x_end='x1',
        y_end='y1', source=source))

def callback():
    source.stream({k: [randrange(10) for _ in range(5)] for k in ('x0', 'y0', 'x1', 'y1')})

curdoc().add_root(layout([[plot]]))
curdoc().add_periodic_callback(callback, 1000)
```

Results in:

<img width=""632"" alt=""screen shot 2017-05-11 at 18 21 05"" src=""https://cloud.githubusercontent.com/assets/1078448/25975920/d0874996-3676-11e7-9183-3de9d616b7b1.png"">


",0,1,['status: accepted']
2256,120140187,6278,3834332,2017-05-11 15:47:31,2017-05-13 12:50:37,closed,Allow datetime values for number specs by default,"This PR adds a parameter `accept_datetime` to NumberSpec that defaults to True. When enabled, NumberSpecs will accept and immediately convert datetime values to serialized ms-since-epoch values. This allows glyphs and annotations to be positioned using datetime values.

NumberSpec was also modified to always accept and convert timedelta objects. 

This also fixes a future warning from pandas regarding `pd.tslib`

Datetime/timedelta detection and conversion was moved to `bokeh.util.serializtion` so that the code might be shared. As part of this, the handling of Python `datetime` values was corrected to match the handling of NumPy `datetime64`

- [x] issues: fixes #6274, fixes #5831 fixes #5499
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap @canavandl I would appreciate a close review of this PR",7,4,"['status: accepted', 'MIGRATION']"
2257,119969106,6275,3834332,2017-05-10 20:16:49,2017-05-10 20:22:20,closed,COMPAT: Avoid FutureWarning from pandas.tslib,"pandas.tslib is deprecated and will be removed in a future version of pandas.
The only use of that is in pandas.Timestamp, which has been available in
the public API since at least pandas 0.16.

- [x] issues: fixes #6274 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

I can add a test asserting a warning isn't raised if you want.
It also looks like Bokeh *recommends* at least pandas >= 0.16.1; I was able to verify that pandas 0.16+ had Timestamp in the top-level namespace. If you prefer, I can remove the compatibility logic.",2,1,['status: superseded']
2258,119951730,6273,3834332,2017-05-10 18:43:05,2017-05-11 16:04:26,closed,Disable URL checking in bokeh GH sphinx directives,"closes #6269

Standard URLs are not verified in any way in normal Sphinx usage, that should be the case here as well. Link checking should be left to other tools.

Also makes an internal helper function private. ",0,1,['status: accepted']
2259,119949467,6272,3834332,2017-05-10 18:31:17,2017-05-11 15:38:40,closed,edits to bokeh.io docstrings,"- [x] issues: fixes #6188
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
2260,119934074,6270,3834332,2017-05-10 17:09:27,2017-05-10 18:15:17,closed,Make bokehjs work in IE again and improve tests,"fixes #6212
",4,2,['status: accepted']
2261,119834592,6268,3834332,2017-05-10 09:06:08,2017-05-10 13:38:35,closed,Merge test/common into test/core in bokehjs,fixes #6267 ,0,1,['status: accepted']
2262,119747957,6265,3834332,2017-05-09 20:36:52,2017-05-10 14:50:23,closed,Validate document inside of _ModelInDocument and _ModelInEmptyDocument,"Validate document inside of _ModelInDocument and _ModelInEmptyDocument

- [x] issues: fixes #6263
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)",3,6,['status: accepted']
2263,119723658,6264,3834332,2017-05-09 18:32:23,2017-05-09 20:05:51,closed,remove bokeh.charts from the Bokeh core library,"@canavandl @mattpap please look over this as soon as possible. 

@bokeh/dev The removes `bokeh.charts` and all references from the Bokeh core project. In the near future, the https://github.com/bokeh/bkcharts repo will be completed and a new `bkcharts` package made available Once this occurs, there are still some actions to perform before the next Bokeh release:

* package and release `bkcharts` to `defaults` and pypi
* make Bokeh depend on `bkcharts` 
* uncomment temporary `bkcharts` imports in the core library
* deploy and link to `bkcharts` docs from bokeh docs

The decision to go ahead with the removal before `bkcharts` is compelte was taken because a new version of Pandas is breaking `bokeh.charts` tests. 

fixes #5246 ",7,2,"['status: accepted', 'type: task']"
2264,119660986,6262,3834332,2017-05-09 13:34:40,2017-05-09 20:50:27,closed,"properly check for ImageURL w, h for None","- [x] issues: fixes #6095
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

The issue was that the view properties like `@_w` are now converted to lists `[null]` when `@model.w` is `null` (or `None` on the python side). I have no opinion on whether this is reasonable (it could probably be argued either way). So this PR fixes things by checking `@model.w` directly, which is an unequivocal and always-correct source of truth in this question. 

I have also removed the note about possibly changing the property names to `dw` and `dh`. That ship has sailed. 

Finally, I changed the example to pass an empty CDS to the last ""values-only"" call to `ImageURL`. This is because we normally ""broadcast"" values to the size of the CDS. this results in the same image being rendered 5 times. The broadcasting is a reasonable thing in general. It could be simply considered a usage error to pass a CDS with data when there are not data specs with fields. (Maybe a validation warning would be advised?) Otherwise, to avoid this we would need to check for and special-case whenever a CDS has data but a glyph has all ""value"" data specs. 

I added a unit test to confirm that when `model.w` and `model.h` are `null` then expected `NaN` is generated for `view.sw` and `view.sh` but this is not ideal. Perhaps a strict image diff test?

<img width=""648"" alt=""screen shot 2017-05-09 at 08 34 26"" src=""https://cloud.githubusercontent.com/assets/1078448/25853428/572ee332-3492-11e7-82f6-3a12209a0178.png"">

",0,1,['status: accepted']
2265,119550740,6260,3834332,2017-05-08 22:46:23,2017-05-19 17:59:53,closed,Canavandl/5268 mapper type,"- [x] issues: fixes #5268 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

supercedes reverted PR #6235 ",23,34,"['status: accepted', 'MIGRATION']"
2266,119539395,6257,3834332,2017-05-08 21:29:54,2017-05-08 22:29:34,closed,have gmap canvas retrieve ranges from the frame," issues: fixes #6248

Unfortunately I can't think of any god way to unit test this code as-is. Suggestions welcome, an image test is probably difficult with gmaps, too. 


<img width=""545"" alt=""screen shot 2017-05-08 at 16 27 31"" src=""https://cloud.githubusercontent.com/assets/1078448/25826185/755f6eb2-340b-11e7-9fdb-a9ecc7cad9f2.png"">
",0,1,['status: accepted']
2267,119533754,6256,3834332,2017-05-08 20:58:55,2017-05-10 05:04:27,closed,Rewrite bokehjs' build in TypeScript,fixes #6251,2,10,['status: accepted']
2268,119506990,6254,3834332,2017-05-08 18:32:28,2017-05-08 18:32:33,closed,"Revert ""Deprecate x/y_mapper_type Plot kwargs in place of first-class Scale models""","Reverts bokeh/bokeh#6235

There was an uncaught incompat with a recently merged PR to master. ",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2269,119506892,6253,3834332,2017-05-08 18:31:58,2017-05-08 18:35:22,closed,fix mismatched length,"example had mismatching lengths

https://github.com/bokeh/bokeh/issues/6252

- [x] issues: fixes #6252
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2270,119288035,6246,3834332,2017-05-06 05:40:42,2017-05-06 19:11:06,closed,Escape HTML title,"This changes the default Jinja template to escape the title value.

- [x] issues: fixes #6245
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2271,119229873,6243,3834332,2017-05-05 18:13:59,2017-05-05 20:15:47,closed,Canavandl/remove computed props,"Canavandl/remove computed props

- [ ] issues: fixes #6242 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

todo:
- [ ] Need to do some profiling to ensure that performance isn't worsened",2,7,['status: WIP']
2272,119176073,6239,3834332,2017-05-05 13:30:30,2017-05-05 20:24:15,closed,fixed reference to delta in scroll event - fixes #6238,"I came across a bug in the MouseWheel event. The bug can be shown by running this app from the howto section:
bokeh/examples/howto/events_app.py

The value for ""delta"" of the scroll event was showing up as NaN / None in both js_on_event and on_event callbacks.

Without fully understanding how everything's connected, I was able to trace the problem to line 162 of bokeh/bokehjs/src/coffee/core/bokeh_events.ts

Changing 
~~~
  static from_event(e: any, model_id: string = null) {
    return new this({
      sx: e.bokeh['sx'],
      sy: e.bokeh['sy'],
      delta: e.delta,
      model_id: model_id,
    })
  }
~~~
to 
~~~
  static from_event(e: any, model_id: string = null) {
    return new this({
      sx: e.bokeh['sx'],
      sy: e.bokeh['sy'],
      delta: e.bokeh['delta'],
      model_id: model_id,
    })
  }
~~~
fixes the problem, and allows the delta parameter to pass through.

There may be other issues with this, but it appears to simply be a typo. I took a quick look to see if I could add a test for this, but didn't come up with much.

- [x] issues: fixes #6238
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: accepted']
2273,118986897,6237,3834332,2017-05-04 14:29:28,2017-07-19 16:14:17,closed,WIP: Add NumberInput.,"This adds a new input for numbers with spin buttons. It works but the rendering is broken. In #6173 I was asked to open an pull request anyways. PLEASE DO NOT COMMIT THIS AT THIS TIME!

Current rendering
![image](https://cloud.githubusercontent.com/assets/753225/25708192/122df25a-30e6-11e7-8712-75348511451f.png)

Correct rendering (from https://jqueryui.com/spinner/):
![image](https://cloud.githubusercontent.com/assets/753225/25708227/2a5e7d22-30e6-11e7-8802-b4e592a2113a.png)

The code is quite similar to that of the slider implementation. I suspect it might have to do something with that I don't run `@_prefix_ui()` but if I include this line the control doesn't work at all. 


- [x] issues: fixes #6173
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,1,['status: declined']
2274,118886964,6236,3834332,2017-05-04 01:38:12,2017-05-04 02:05:01,closed,rev coffee-script to >= 0.12.5," issues: fixes #6226

",0,1,['status: accepted']
2275,118868483,6235,3834332,2017-05-03 22:28:21,2017-05-08 18:19:07,closed,Deprecate x/y_mapper_type Plot kwargs in place of first-class Scale models,"Deprecate x/y_mapper_type Plot kwargs in place of first-class Scale models

- [ ] issues: fixes #5268
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",12,8,['status: accepted']
2276,118731376,6233,3834332,2017-05-03 10:29:55,2017-05-08 17:59:45,closed,Replace backbone events with signaling API,"fixes #4153 
fixes #6244
fixes #6242
fixes #6247",12,60,['status: accepted']
2277,118584491,6229,3834332,2017-05-02 15:41:50,2017-05-30 18:08:47,closed,Proof of concept: client-side SVG generation,"Experimental PR to investigate generating SVGs on the client side instead of 

borrows from: #3867

- [x] issues: fixes #538 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

What doesn't currently work:
* ~~SaveTool (should be easy to fix, just needs to use `getSerializedSvg` method instead of `getDataURI` on mock canvas element)~~ fixed
* Glyph clipping needs some tweaking, they are able to be dragged outside of the frame
* There's some artifact-ing from glyphs that are dragged off the canvas, leaving some lines on the canvas edge
* Performance (when panning, which causes lots of rerenders) isn't as fast as canvas. Unclear if is limitation of svg output.
* ~~Exporting layouts. This makes each plot a unique SVG, so it'd require some work to grab all of the SVGs then stitch them together.~~ out-of-scope for PR
* ~~It's not headless. I'd waiting until the ``export`` PR is merged then build on top of that to support headless generation using PhantomJS/headless Chrome. I also haven't experimented with node-canvas to see what the issues are with using that approach recently, though I suspect there are several.~~ out-of-scope for PR

Things that won't work with this approach:
* Exporting plot with a toolbar (the tool icons are overlaid HTML elements, so the exported SVG won't contain the toolbar)
* Exporting plot with webgl glyphs (the webgl glyphs are contained in a overlaid webgl layer, this also won't be exported along with the svg)

Usage/Test suggestions:
* set `Plot.background_fill_color = None` and `Plot.border_fill_color` so that the plot whitespace is transparent and not filled white.
* set `Plot.toolbar_location = None`, so that the toolbar (that isn't exported) doesn't figure into the layout solver (making the plot unnecessarily small to accomodate). But then you can't use the save tool... I need to think about this. Alternatively, you could right-click and save element (at least in FireFox)
",9,17,['status: accepted']
2278,118491888,6225,3834332,2017-05-02 06:17:33,2017-05-02 16:57:39,closed,Bryanv/1671 tick overrides,"- [x] issues: fixes #1671
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,4,['status: accepted']
2279,118470416,6223,3834332,2017-05-02 01:23:04,2017-05-02 05:13:03,closed,Shinxext plot,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5951
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",1,6,['status: accepted']
2280,118416864,6221,3834332,2017-05-01 18:38:31,2017-05-01 22:30:14,closed,Added section reference to DEFAULT_HELP_URL,Fixes #5430.,2,5,['status: accepted']
2281,118261266,6216,3834332,2017-04-29 03:50:42,2017-05-01 18:54:25,closed,add gulp test:coverage,"issues: fixes #5694

I am sure there is a better way to do this but this gets this provides useful information now. This adds a new command `gulp test:coverage` which can be run locally. It adds general coverage stats to the end of the test run:

<img width=""596"" alt=""screen shot 2017-04-28 at 22 48 39"" src=""https://cloud.githubusercontent.com/assets/1078448/25552637/dd064c74-2c64-11e7-9fbd-4a9695d44587.png"">

And also saves a detailed HTML coverage report

<img width=""1048"" alt=""screen shot 2017-04-28 at 22 44 28"" src=""https://cloud.githubusercontent.com/assets/1078448/25552642/ed99421c-2c64-11e7-936f-25ec439e749d.png"">

Obviously the report would be improved if it referenced the original coffee or TS source files instead of the built JS. ",2,1,['status: accepted']
2282,118249685,6215,3834332,2017-04-28 23:12:39,2017-05-02 16:54:44,closed,fix up hit testing with 'next' policy,"issues: fixes #5198 

Ok this does not add any tests but the current hover tool code is basically untestable. Here is a screenshot for evidence:

<img width=""656"" alt=""screen shot 2017-04-28 at 18 13 14"" src=""https://cloud.githubusercontent.com/assets/1078448/25550422/612ab6a6-2c3e-11e7-87dc-8ff724584502.png"">


I'd like to make a separate issue to cleanup and refactor all the hover tool code and add tests. I am fairly certain the multiglyph double loop is doing wasted work (i.e. it loops `'i` over 1d then masks `i` to loop over 2d inside that loop)

",2,1,['status: accepted']
2283,118203912,6214,3834332,2017-04-28 18:00:47,2017-04-28 19:49:40,closed,Correctly set gesture tool state when toggling,"- [x] issues: fixes #6208 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Fixes regression where deactivating gesture tool didn't stop the gesture interaction.",0,1,['status: accepted']
2284,118142396,6211,3834332,2017-04-28 12:31:33,2017-05-03 20:29:04,closed,Initialize properly plot canvas in plot's subclasses,"fixes #6210 
",7,1,['status: accepted']
2285,118014420,6206,3834332,2017-04-27 19:30:02,2017-04-27 19:57:46,closed,Upgrade typescript and fix tests,"fixes #6205 
",1,2,['status: accepted']
2286,117976860,6204,3834332,2017-04-27 16:13:29,2017-04-28 21:48:14,closed,Bryanv/mappers,"- [x] issues: fixes #5268
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@mattpap @canavandl @bokeh/dev This PR cleans up the transform/mapper/scale structure. It is the basis of some other work around fixing categoricals,  adding custom mappers, and getting rid of the gorpy `mapper_type` junk. But I'd like to get the big disruptive re-org part merged first, and then follow on with other work in other PRs. 

Question: do we update `@xmapper`, `@x_mappers[]` etc to use the ""scale"" terminology everwhere? It's definitely the ""right"" thing to do, but is also somewhat disruptive. I think we'd have to leave back-compat aliases in for awhile at least. We should decide to do it (or not) and if yes, then I will do it as part of this PR. 

I also plan to add some docs (including some migration notes) and tests to this PR before merging but I wanted to get these questions out of the way. 

@mattpap I also need your help specifically to fix up the TS typings appropriately. 

---

Description:

* `Transform` is represents a computation in JS, and always has `compute` and `v_compute`
* `ColorMapper` is now subclasses of `Transform` which allows `DataSpec` to be cleaner. Continue to call color ""mapper"" because that is common terminology
* `Scale` is a subclass of `Transform` and represents and *invertible* computation. It adds `invert` and `v_invert`. All the old non-color mappers are now scales, e.g. `LinearScale`

Future work this supports:

* get rid of `mapper_type` gorp, in favor of sending scale models explicity 
* add a `CustomJSScale`
* clean up categorical handling  ",8,8,['status: accepted']
2287,117912054,6203,3834332,2017-04-27 10:57:35,2017-04-27 23:31:14,closed,Update documentation regarding BokehJS API split,Addresses issues in #6184.,10,4,['status: accepted']
2288,117839460,6202,3834332,2017-04-27 00:56:16,2017-05-16 14:20:12,closed,Fix selections on plots with multiple glyph renderers,"This PR fixes the issue where a selection made on a plot containing multiple renderers that share the same data source only works with the last renderer added to the plot. The problem is that the selection manager writes over its data sources `.selected` property on every select call, but the select tool can make multiple select calls per selection event because the tools loop through the renderers and call select for each renderer. 

This PR fixes the issue by changing the `renderer_view` parameter for the select method on the selection manager to `renderer_views` so that multiple renderers (which are associated with that data source/selection manager) can be passed in together for one selection event. So then, each select tool groups its renderers by the data sources that they share and calls select for each group of renderers. 

Also, I removed the selection manager's `selectors` dict (which mapped renderers to selectors) in favor of a single `selector` because:

1. the `selected` rows of a column data source should be shared across all glyph renderers that use it.
2. each cds is associated with a selection manager in a one-to-one way.

This PR additionally fixes #5044, so that you can now shift-select to append to the selection across different plots when they have renderers that share the same data source.

- [x] issues: fixes #2136, #5044
- [x] tests added / passed

![selection](https://cloud.githubusercontent.com/assets/4241244/25463214/8531e24a-2aa9-11e7-9a26-182f39c5e20d.gif)

```python
from bokeh.io import output_file, show
from bokeh.layouts import gridplot
from bokeh.models import ColumnDataSource
from bokeh.plotting import figure

output_file(""selection_multiple_renderers.html"")

x = list(range(-20, 21))
y0 = [abs(xx) for xx in x]
y1 = [xx**2 for xx in x]
y2 = range(len(x))

source = ColumnDataSource(data=dict(x=x, y0=y0, y1=y1, y2=y2))

TOOLS = ""box_select,lasso_select,help""

left = figure(tools=TOOLS, plot_width=300, plot_height=300, title=None)
left.circle('x', 'y0', source=source)
left.circle('x', 'y2', source=source, color='red')

right = figure(tools=TOOLS, plot_width=300, plot_height=300, title=None)
right.circle('x', 'y1', source=source)

p = gridplot([[left, right]])

show(p)
```",14,10,['status: accepted']
2289,117817224,6200,3834332,2017-04-26 21:46:37,2017-04-27 13:43:30,closed,fix typo,"issues: fixes #6199 
",0,1,['status: accepted']
2290,117796578,6198,3834332,2017-04-26 19:56:15,2017-04-27 16:37:33,closed,Remove confusing aliases from LayoutCanvas,"fixes #6197 
",7,4,['status: accepted']
2291,117353552,6192,3834332,2017-04-24 20:45:15,2017-04-27 14:17:51,closed,Fix deprecated call to datetime64 for NP_EPOCH.,"Fixes #6191
/cc @shoyer",1,2,['status: accepted']
2292,117307124,6189,3834332,2017-04-24 16:34:58,2017-05-15 17:09:01,closed,Canavandl/export png,"Canavandl/export png

- [x] issues: fixes #538 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Todo:
- [x] check that phantomjs is installed and raise dependency exception if not
- [x] better figure out layout width/height
- [x] check browser console for errors and warn
- [x] test that themes work
- [ ] better figure out render wait time
- [x] test that custom templates work

Questions:
* Do we allow for specified output size or just use document size?
* How will we support or warn about sizing modes?
* Is it ok to force inline resources?",9,20,['status: accepted']
2293,117222312,6187,3834332,2017-04-24 09:29:17,2017-05-01 18:12:46,closed,Support themes in file_html embedding,"Currently, themes are only applied when using `components` to embed plots.

Trivial fix

- [x] issues: fixes #6186
",7,2,['status: accepted']
2294,117123847,6183,3834332,2017-04-22 20:21:58,2017-04-26 20:54:48,closed,Provide richer formatting options for tooltip fields,"Adds a `.formatters` property to HoverTool that maps CDS column names to a fomatter type (one of: ""numeral"", ""datetime"", ""printf"") When column values are looked up, any format is interpreted according to the `.formatters` dict. If no type is specified, ""numeral"" is assumed, which preserves existing behavior.

- [x] fixes #1239 
- [x] fixes #2595
- [x] fixes #6079 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

WIP PR, adding docs next 
",1,3,['status: accepted']
2295,117029772,6182,3834332,2017-04-21 17:14:03,2017-04-21 19:20:58,closed,properly trigger events on del m.foo,"- [x] issues: fixes #3386
- [x] tests added / passed
",0,1,['status: accepted']
2296,117005104,6181,3834332,2017-04-21 15:03:18,2017-04-24 14:20:55,closed,Add support for absolute range padding amounts,"Adds range_padding_units property to DataRange1d which can be either
""percent"" or ""absolute"". The default is ""percent"" (matching existing
behaviour)

Also tightens up the follow property with a proper enum.

- [x] issues: fixes #1482
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
2297,116904596,6180,3834332,2017-04-21 03:17:52,2017-05-05 01:31:14,closed,stab at fixing selections + sorting in data table,"- [x] issues: fixes #3564 
- [x] issues: fixes #6115
- [x] tests added / passed

This PR allows for sorting and selection on data tables to work properly together. Except for explicit cell editing, this PR changes the table implementation so that no modifications are made to the input data source (except by explicit user edits). Instead, an index is created (and stored outside the source data). The index is permuted by sorts, and is used to inform get, set, and selections operations. ",6,1,['status: accepted']
2298,116892879,6179,3834332,2017-04-21 00:54:40,2017-04-25 23:01:03,closed,better validation for font size values,"- [x] issues: fixes #4948
- [x] tests added / passed

This PR doesn't add any validation on the JS side but should alert to bad values set from python. 

makes the assumption that column names do not begin with digits (or if they do, that `field` is used explicitly)",1,4,['status: accepted']
2299,116848038,6178,3834332,2017-04-20 19:36:20,2017-04-20 22:43:11,closed,use proper alignment for vertical ticks below a plot,"issues: fixes #5914

with this fix:

<img width=""886"" alt=""screen shot 2017-04-20 at 14 35 18"" src=""https://cloud.githubusercontent.com/assets/1078448/25249201/b31c9e5c-25d6-11e7-9038-5d2e3fd9dce9.png"">
",3,1,['status: accepted']
2300,116846501,6177,3834332,2017-04-20 19:27:47,2017-05-02 17:14:04,closed,FilledArea Annotation,"Part of #2352

- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",17,17,"['type: feature', 'status: accepted']"
2301,116844405,6176,3834332,2017-04-20 19:15:49,2017-04-25 15:56:54,closed,be more strict about valid dataspec keys,"- [x] issues: fixes #2680
- [x] tests added / passed
",1,1,['status: accepted']
2302,116685307,6169,3834332,2017-04-20 03:45:36,2017-04-20 16:01:51,closed,implement _hit_span for all markers,"issues: fixes #5907

<img width=""827"" alt=""screen shot 2017-04-19 at 22 43 42"" src=""https://cloud.githubusercontent.com/assets/1078448/25212742/df3f8f38-2551-11e7-805c-0d836fbc46a2.png"">
",1,1,['status: accepted']
2303,116683625,6168,3834332,2017-04-20 03:23:58,2017-04-20 16:06:37,closed,Use cache select to get line_widths correctly in all cases,"issues: fixes #6130

Not really a good way to add a  test for a view, definitely want to visit adding view models to hold ""view state"" that's not directly part of the model. 
",2,1,['status: accepted']
2304,116672669,6167,3834332,2017-04-20 01:15:19,2017-04-20 01:15:43,closed,Fix callback docs errors,"issues: fixes #6040

",0,1,['status: accepted']
2305,116671865,6166,3834332,2017-04-20 01:05:47,2017-04-20 16:03:05,closed,Add hover tool support for Segment,"issues: closes #6161

adds _hit_point and _hit_span to the Segment glyph so that it can work with hover tools.

Also updates HoverTool docstring to indicate segments is not functional with hover tools (as well as multi line which was erroneosly listed as unsupported)

Also makes a minor change to line hit-testing. From inspection the existing code would appear to fail on lines that ""go backwards""
",4,3,['status: accepted']
2306,116614893,6164,3834332,2017-04-19 18:43:16,2017-04-20 14:17:23,closed,remove deprecations up to 0.12.3,"- [x] release document entry (if new feature or API change)

@bokeh/dev this removes all deprecations up through `0.12.3` which includes some fairly gorpy code that will be good to jettison. Absent comments or concerns I will plan to merge this tomorrow. 
",2,2,"['status: ready', 'type: task', 'reso: completed', 'MIGRATION']"
2307,116399676,6162,3834332,2017-04-18 19:13:25,2017-07-14 16:55:39,closed,2828 multi line input,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ X ] issues: fixes #2828
- [ - ] tests added / passed
- [ X ] release document entry (if new feature or API change)

Didn't get a chance to write the tests yet. It will take me some time to get to them.",21,128,['status: declined']
2308,116362672,6159,3834332,2017-04-18 16:00:47,2017-04-18 18:46:04,closed,Steven c howell/6158 muted color,"This updates the example by including the visual property `muted_color`. 

- [x] issues: fixes #6158 ",8,2,['status: accepted']
2309,116349292,6157,3834332,2017-04-18 15:03:45,2017-04-20 16:06:57,closed,Optimized python execution fails due to missing __doc__ instantiation.,"I just added some simple if-clauses before using accessing ```__doc__```s.

[x] issues: fixes #6156",9,2,['status: accepted']
2310,116242161,6155,3834332,2017-04-18 03:00:25,2017-04-18 13:08:49,closed,Updates to maintain compat with Tornado >= 4.5,"issues: fixes #6152

Explicitly check for None and do not rely on BadYieldError being raised
",4,1,['status: accepted']
2311,116240055,6154,3834332,2017-04-18 02:36:32,2017-04-18 02:52:49,closed,Update to provide Tornado 4.5 compat,"issues: fixes #6152

This PR updates functions in `bokeh.util.tornado` to no longer rely on old
behaviour where `gen.convert_yielded` would raise `gen.BadYieldedError` when
passed `None`. Additionally code was made safer against infinite loops by
explicitly checking that potential arguments to `convert_yielded` are
Futures to begin with.

Comments also edited for length and style",1,1,['status: declined']
2312,116079446,6149,3834332,2017-04-17 01:31:32,2017-04-18 14:35:24,closed,Allow for richer property assertion messages,"issues: closes #6044

Previously, `Property.asserts` could be provided a function accepting no
arguments to call when an assertion failed. This PR modifies he Property
machinery to expect and call a function accepting `(obj, name, value)` so
that error messages can be more informative.

This PR also adds a new ``core/property/tests/test_bases.py`` to maintain the
property assertion functionality.

Finally, this PR removes an unused code path for assertions that would
automatically raise a ValueError if the assertion function returned a
value other than `True` or` False`, on the grounds that explicitly
separating th check and message is preferable, and to simplify the
logic. A (python) assertion was added to enforce that a (Bokeh) assertion
returns a bool, always.",0,1,['status: accepted']
2313,116072241,6148,3834332,2017-04-16 21:37:07,2017-04-18 13:46:23,closed,update openurl docs,"issues: closes #5819

This makes it clear that OpenURL is only for TapTool and only happens on
selections. Offers link to CustomJS for UI events section for general
tap callbacks.

Also rationalizes sphinx link names in this section, and removes unused
link refs for ""specialized"" callbacks.",0,1,['status: accepted']
2314,115983981,6146,3834332,2017-04-14 20:19:37,2017-05-05 05:05:38,closed,Allow callback add functions to accept args and kwargs,"- [x] issues: fixes #6041
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

OK I am not super happy with these tests, but I think they are the best that can be added for now absent a refactor of some of the plumbing. (Unless I am missing a different approach)

Ultimately I think some of these private classes can/should be made public so that testing them directly is less unreasonable. ",1,1,['status: paused']
2315,115967950,6145,3834332,2017-04-14 18:14:33,2017-04-16 20:11:01,closed,Update obsolete output examples in bokeh.embed docs,"issues: fixes #6047

Also:

* updates versions for CDN example links
* edits some output text for line length
* adds a note that components does not apply to server apps
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2316,115964367,6143,3834332,2017-04-14 17:47:43,2017-04-16 21:44:03,closed,Properly apply --prefix to links on the app index page,"issues: fixes #6080
",3,1,['status: accepted']
2317,115832711,6140,3834332,2017-04-13 20:07:20,2017-04-28 15:02:21,closed,Use tslib instead of per module generated helpers,fixes #6139 ,3,1,['status: accepted']
2318,115805065,6138,3834332,2017-04-13 17:27:33,2017-04-19 15:43:52,closed,Properly configure vectorized properties of overlays,"fixes #6005 

",1,1,['status: accepted']
2319,115802926,6137,3834332,2017-04-13 17:14:34,2017-04-19 16:48:25,closed,Make invisible glyph renderers not participate in hit testing,fixes #6120,7,3,['status: accepted']
2320,115780992,6136,3834332,2017-04-13 15:20:56,2017-04-19 17:11:04,closed,Enable TS' strict options and fix errors,"fixes #5854 
",2,3,['status: accepted']
2321,115525826,6133,3834332,2017-04-12 12:01:25,2017-04-12 15:50:14,closed,Silence invalid type cast error in core/dom.ts,"This is wrong on top of being wrong. The problem is that DOM doesn't have a reasonable solution for maintaining a group of HTML elements. I'm gradually replacing templates with inline code, so this branch will be removed sooner or later.

fixes #6124",0,1,['status: accepted']
2322,115483255,6132,3834332,2017-04-12 07:55:54,2017-04-12 14:10:38,closed,Fix bokehjs to work in IE again,fixes #6127 ,1,1,['status: accepted']
2323,115458363,6131,3834332,2017-04-12 03:42:17,2017-04-20 02:52:13,closed,Add support for Toolbar.active_inspect property,"Add support for Toolbar.active_inspect property, so that users can specify which inspect tools are active on plot initialization.

- [x] issues: fixes #5599 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,8,['status: accepted']
2324,115447598,6129,3834332,2017-04-12 01:30:22,2017-04-12 13:24:16,closed,Fix typo in ISSUE_TEMPLATE.md,"Do this so it is a bit more polished.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2325,115428503,6128,3834332,2017-04-11 22:27:12,2017-04-11 22:45:47,closed,Add ability to use github api token,"issues: fixes #6102 

I ran this six times without a token and got a 403 Forbidden message.

With the token, I was able to consistently get the following output

``` 
$ BOKEH_GITHUB_API_TOKEN=<token> python issues.py -c -p 0.12.4
INFO:root:finding issues...
WARNING:root:issue with no type label: #6109 Notebook embed example is not working
WARNING:root:closed issue with no reso label: #6109 Notebook embed example is not working
```",1,1,['status: accepted']
2326,115416807,6126,3834332,2017-04-11 21:16:16,2017-04-11 22:28:21,closed,Use noUnusedLocals to discover unused imports,"fixes #6125 
",1,2,['status: accepted']
2327,115222777,6122,3834332,2017-04-11 01:16:46,2017-04-11 14:41:00,closed,Canavandl/log zero handling,"- [x] issues: fixes #6035 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,7,['status: superseded']
2328,115151687,6119,3834332,2017-04-10 17:28:18,2017-04-10 19:57:13,closed,Update build_upload.py,"issues: fixes #6104
",0,2,['status: accepted']
2329,115151204,6118,3834332,2017-04-10 17:25:38,2017-04-10 19:24:26,closed,Update setup.py,"issues: fixes #6105 
",0,1,['status: accepted']
2330,114958990,6114,3834332,2017-04-08 19:59:26,2017-04-10 15:31:05,closed,Fix packaging,"Fixes https://github.com/bokeh/bokeh/issues/6113

* Excludes `scripts` and `tests` when looking for packages to install.
* Packages the `tests` so they remain accessible from PyPI packages.",4,2,['status: accepted']
2331,114942004,6112,3834332,2017-04-08 11:29:28,2017-04-27 21:29:54,closed,hover span example plots should be the same,"- [x] issues: fixes #6093 


This PR:
* avoids using scientific notation for 'year' values
* adjusts a few of the hover_span.py plots to use the same plotting arguments as the other plots in the example.  Doing so will demonstrate a real issue that I'd like to investigate in a further ticket.",4,2,['status: declined']
2332,114926797,6111,3834332,2017-04-08 01:58:46,2017-04-10 15:29:00,closed,Fix typo in selection documentation.,"Do this because it misled me for quite a while until I figured out what was going on.

I respect wanting matching issues, but I really couldn't bring myself to do so for such a small thing.  Feel free to reject of course.",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2333,114837029,6110,3834332,2017-04-07 15:10:29,2017-04-10 16:50:05,closed,Fix regression in 'get_best_ticker' handling empty data ranges,"- [x] issues: fixes #6108
- [x] (hella) tests added / passed
- [ ] release document entry (if new feature or API change)
",10,12,['status: accepted']
2334,114417472,6100,3834332,2017-04-05 16:22:20,2017-04-05 17:38:16,closed,Correct cursor handling,Only use crosshair cursor if inspector-type tool is active.,2,2,"['type: bug', 'status: accepted', 'reso: completed']"
2335,113968271,6094,3834332,2017-04-03 16:15:32,2017-04-03 19:51:40,closed,Use --install-js not install_js to silence warn,"tiny tweak. Use --install-js (not --install_js) in gulp install task to silence warn.
",0,1,['status: accepted']
2336,113734415,6089,3834332,2017-03-31 21:15:11,2017-04-02 11:23:10,closed,fixed animated example in embed,"Same as 6084 but for version of animated in embed.
",0,1,['status: accepted']
2337,113725991,6088,3834332,2017-03-31 20:24:45,2017-04-18 16:07:10,closed,Fixing up examples/models/file/,"## Before and After 


<img width=""320"" alt=""screen shot 2017-03-31 at 4 18 35 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567955/e3c99c98-162d-11e7-8952-e7f7e6fc23c5.png""><img width=""320"" align=""right"" alt=""screen shot 2017-03-31 at 4 17 33 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567958/e6e37d18-162d-11e7-876e-099b280c4831.png"">
<img width=""320"" alt=""screen shot 2017-03-31 at 4 18 22 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567961/ebbd7c6c-162d-11e7-80da-0eb4c8149730.png""><img width=""320"" align=""right"" alt=""screen shot 2017-03-31 at 4 17 54 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567963/ed1df15e-162d-11e7-9260-4a30270a43e5.png"">
<img width=""320"" alt=""screen shot 2017-03-31 at 4 19 24 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567966/f024dea8-162d-11e7-8e81-a94bcab44d8a.png""><img width=""320"" align=""right"" alt=""screen shot 2017-03-31 at 4 17 03 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24567970/f3bc18e2-162d-11e7-80d8-6690c607e273.png"">






",2,5,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2338,113474244,6086,3834332,2017-03-30 16:45:56,2017-04-12 16:01:53,closed,Polar example,"See discussion in #6068

<img width=""721"" alt=""screen shot 2017-03-30 at 11 23 35 am"" src=""https://cloud.githubusercontent.com/assets/4806877/24515836/c2043a06-1546-11e7-8c58-753739ba8e74.png"">
",4,3,['status: declined']
2339,113206614,6084,3834332,2017-03-29 14:08:52,2017-03-29 21:26:17,closed,fix missing glyph and color  in plotting/server/animated.py,"- [x] issues: fixes #6054
",0,2,['status: accepted']
2340,113026874,6082,3834332,2017-03-28 17:41:15,2017-04-03 19:51:15,closed,Ensure Range1d triggers start/end change events on reset,"After discussing https://github.com/bokeh/bokeh/issues/6075 with @canavandl we determined that for the time being it should be safe to trigger Range1d change events on reset. Unlike DataRange1d the ranges on Range1d are not recomputed by ``PlotCanvasView.update_dataranges``, which ends up triggering a ""loud"" change when it eventually call ``DataRange1d.update``. So this change simply ensures that both trigger the appropriate changes. In future it might be nice to move some of the logic on PlotCanvasView onto the ranges and handle triggering of events more consistently but for the time being this addresses the immediate issue.

WIP as I probably need to update some tests.",4,5,['status: accepted']
2341,112668719,6076,3834332,2017-03-27 04:50:28,2017-04-03 20:57:19,closed,Canavandl/uievents testing,"cleans up `UIEvents._trigger` special case handling (i.e. clicking on legends)
Adds tests for 
* UIEvents._trigger
* UIEvents._bokify_hammer
* UIEvents._bokify_point_event
* All applicable UIEvents._event methods",3,7,['status: accepted']
2342,112596028,6070,3834332,2017-03-25 18:04:10,2017-03-29 11:17:44,closed,Updated chemical element names in elements.csv (in sampledata),"Issues: fixes #6071 
Updated chemical element names in elements.csv. Trivial fix.

- [x] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2343,112587912,6069,3834332,2017-03-25 14:17:03,2017-03-25 17:27:37,closed,fixed broken link to gapminder example,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2344,112554108,6068,3834332,2017-03-24 22:27:44,2017-03-30 17:02:17,closed,Style improvements to plotting/file/ examples,"Before | After
<img width=""250"" alt=""screen shot 2017-03-24 at 6 10 38 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24315750/66bd4b96-10bf-11e7-836d-79273f7a610c.png""> <img width=""300"" align=""right"" alt=""screen shot 2017-03-27 at 10 40 02 am"" src=""https://cloud.githubusercontent.com/assets/4806877/24362281/4c8d11ee-12da-11e7-9b3a-6918a0ecb995.png"">


",19,15,['status: accepted']
2345,112527215,6067,3834332,2017-03-24 19:27:16,2017-03-31 15:11:44,closed,change default for relative_url to False,"- [x] issues: fixes #6066
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,2,['status: accepted']
2346,112500957,6063,3834332,2017-03-24 17:00:45,2017-03-24 18:25:04,closed,fixed href,"Changed from:
https://github.com/bokeh/bokeh-demos/tree/master/weather
To:
https://github.com/bokeh/bokeh/tree/master/examples/app/weather

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2347,112445028,6062,3834332,2017-03-24 12:23:27,2017-04-04 19:00:44,closed,Event system fixes and improvements,"
This PR fixes the issue described in #6059 and tweaks how JS callbacks are used.

The fix was to make sure the event managers ``subscribed_models`` attribute was being updated when Python callbacks are registered without needing a corresponding JS callback. The model now also listens to changes to the ``subscribed_events`` property instead of just listening to changes to the ``js_event_callbacks`` property.

In addition, the event instance is now passed as the ``cb_obj`` which is more consistent with how the Python callbacks are defined as well as with other usage of ``CustomJS`` callbacks.
",21,23,['status: accepted']
2348,112378129,6061,3834332,2017-03-24 02:47:50,2017-03-24 02:47:56,closed,upload sdists dev builds,"issues: fixes #5827

Merging to try out more tasks before full release
",0,1,['status: accepted']
2349,112336322,6058,3834332,2017-03-23 20:55:35,2017-03-23 21:39:55,closed,Added a tiler with a valid URL for second plot in plotting/file/airport_map,"Before:

<img width=""1227"" alt=""screen shot 2017-03-23 at 4 55 06 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24269932/7e3bf85c-0fe9-11e7-82cb-4c91f7b71e69.png"">

After:

<img width=""1229"" alt=""screen shot 2017-03-23 at 4 52 07 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24269827/1c2b98ac-0fe9-11e7-91c3-2571a9e584ca.png"">",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2350,112315484,6056,3834332,2017-03-23 19:04:47,2017-03-24 01:46:29,closed,Use cross-browser compatible offset(),"fixes #6051
fixes #5986",2,1,['status: accepted']
2351,112306105,6055,3834332,2017-03-23 18:19:23,2017-03-23 19:15:27,closed,Use math library instead of numpy for nan/inf checks,Math is much faster than NumPy for scalar checks,7,1,"['type: feature', 'status: accepted', 'reso: completed']"
2352,112283897,6053,3834332,2017-03-23 16:41:25,2017-04-12 15:54:13,closed,Do not replace NaN or Infinite with 0,"NaN/Infinite values should not be replaced with a finite value, since this breaks line plotting code with 'NA' in data series using a log scale. Fixes #6035.
",14,9,['status: accepted']
2353,112254748,6049,3834332,2017-03-23 14:44:10,2017-03-23 18:12:54,closed,Added section on datashader,"Fixes #6048
",0,2,['status: accepted']
2354,112230558,6045,3834332,2017-03-23 12:52:55,2017-03-23 18:13:56,closed,fixed hover on gapminder to display country,"Fixes a hover tools bug introduced in #5972.

Country names were not being shown on hover. 

Before:
<img width=""822"" alt=""screen shot 2017-03-23 at 8 54 34 am"" src=""https://cloud.githubusercontent.com/assets/4806877/24248576/5e82650c-0fa6-11e7-94ad-5e9b4634a416.png"">

After:
<img width=""920"" alt=""screen shot 2017-03-23 at 8 53 38 am"" src=""https://cloud.githubusercontent.com/assets/4806877/24248577/638fc31e-0fa6-11e7-9c9a-34b1522c4734.png"">

",1,3,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
2355,112228279,6043,3834332,2017-03-23 12:39:44,2017-03-23 14:59:56,closed,Avoid isinstance checks in _visit_value_and_its_immediate_references,"Isinstance checks can be surprisingly costly when applied to many small
objects.  This avoids many calls to isinstance in
_visit_value_and_its_immediate_references by doing two things:

1.  Short circuiting on common types.  These appear to be 90% of all
    inputs to this funciton
2.  Rearranging the if-tree to prefer more commonly succeeding checks
    before less commonly succeeding ones

In my benchmark isinstance calls took up around 5% of computation time
and now they take up around 2%
",0,4,"['type: feature', 'status: accepted', 'reso: completed']"
2356,112134983,6039,3834332,2017-03-22 23:44:13,2017-03-22 23:44:24,closed,when embedding with autoload into a page with a different public URL need relative_urls=False,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2357,112088649,6038,3834332,2017-03-22 19:12:38,2017-03-22 20:14:11,closed,added back in _ModelInEmptyDocument to improve notebook performance,"- [x] issues: fixes #6037 

",2,1,['status: accepted']
2358,112049273,6036,3834332,2017-03-22 16:12:30,2017-03-22 19:56:45,closed,Updating embed examples,"
<img width=""771"" alt=""screen shot 2017-03-22 at 12 11 59 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24207994/cd6e72b6-0ef8-11e7-9241-4e779a513e4a.png"">
<img width=""782"" alt=""screen shot 2017-03-22 at 12 12 07 pm"" src=""https://cloud.githubusercontent.com/assets/4806877/24207999/cef34008-0ef8-11e7-8b2e-33f9c7f118d9.png"">



",0,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2359,111896001,6034,3834332,2017-03-21 22:41:29,2017-03-23 03:42:34,closed,Improve propagation of events in UIEvent._trigger(),"This fixes the problem, but this logic is very cumbersome. This needs to be revisited in the next dev cycle.

fixes #6030",12,3,['status: accepted']
2360,111841616,6033,3834332,2017-03-21 17:54:55,2017-03-22 04:58:54,closed,Make multiple selection work again,"fixes #6032 
",2,11,['status: accepted']
2361,111679686,6028,3834332,2017-03-21 00:28:42,2017-03-21 00:28:56,closed,empty string for filtered-out names instead of None,"fixes #6016

",0,1,['status: accepted']
2362,111666223,6027,3834332,2017-03-20 22:36:04,2017-03-21 00:29:50,closed,restore --host behavour to copy values to --allow-websocket-origin to preserve compat,"- [x] issues: fixes #6023
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
2363,111567382,6022,3834332,2017-03-20 14:40:57,2017-03-20 15:50:13,closed,fix typo that breaks sdists,"fixes #6014
",0,1,['status: accepted']
2364,111562800,6021,3834332,2017-03-20 14:21:00,2017-03-20 16:05:09,closed,Adding readonly layout_width and layout_height,"- [x] issues: fixes #4927
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2365,111522049,6020,3834332,2017-03-20 10:24:46,2017-03-20 13:00:08,closed,Set tooltips' foreground color to black,fixes #6006,0,1,['status: accepted']
2366,111519738,6019,3834332,2017-03-20 10:10:31,2017-03-20 13:01:06,closed,Upgrade numbro,fixes #6018,0,1,['status: accepted']
2367,111468856,6017,3834332,2017-03-19 21:29:59,2017-03-20 15:49:15,closed,Bryanv/2940 gmap axes,"This PR adds support for choosing and formatting ""nice"" lat/lon axis ticks when the underlying coordinate system is Mercator (e.g. wth `GMapPlot`). 

- [x] issues: fixes #2940 fixes #5826
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

New classes added:

* `MercatorTicker` which converts mercator values to lat/lon, calls `get_ticks` on `BasicTicker` superclass to generate nice ticks in ""lat/lon units"" then converts these tick locations back to mercator before returning. 

* `MercatorTickFormatter` which converts mercator values to lat/lon before calling `doFormat` on `BasicTickFormatter` superclass 

Because the projected coordinate system is not ""separable"", the main change required was for Axes to communicate not just the information about the range they draw for, but also to provide the location on the ""cross range"".  This is seen in the new parameter to `get_ticks` and `doFormat`, etc. All previous tickers and formatters just ignore this new value. 

One quirk to note: ColorBar also calls out to a ticker. Because it just passes `null` for this new `cross_loc` argument, it will probably not work to use these tickers and formatters with colorbars. 

Example output below:

<img width=""629"" alt=""screen shot 2017-03-19 at 16 22 15"" src=""https://cloud.githubusercontent.com/assets/1078448/24084941/5a274dac-0cc1-11e7-84ed-27370e4a82d8.png"">


",7,6,['status: accepted']
2368,111463267,6015,3834332,2017-03-19 19:13:30,2017-03-20 13:31:36,closed,Fixed bug in Model._process_event method,"
Small fix to code merged from #5941: in ``Model._process_event`` the variable``event_name`` is undefined and it should be ``event.event_name``. 

After this fix, there are no more exceptions in the web console when running ``events_app.py``. Note this code path isn't executed when running ``js_events.py`` which is why I didn't notice this problem earlier.",5,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
2369,111443008,6013,3834332,2017-03-19 09:23:41,2017-03-20 15:46:29,closed,Make sure `node --version` terminates and is evaluated lazily,fixes #6012,2,2,['status: accepted']
2370,111413456,6011,3834332,2017-03-18 15:11:44,2017-03-18 18:06:09,closed,Bryanv/5788 deprecate mpl support in bokeh,"One more attempt. Would like to have comment from @bokeh/dev  and give @pzwang time to offer any input as well  

- [x] issues: fixes #5788
- [x] tests added / passed
- [x] release document entry (if new feature or API change)",5,3,['status: accepted']
2371,111413398,6010,3834332,2017-03-18 15:10:03,2017-03-18 15:10:08,closed,"Revert ""deprecate mpl compat""",Reverts bokeh/bokeh#6008,0,1,"['status: accepted', 'type: task', 'reso: completed']"
2372,111385613,6008,3834332,2017-03-17 23:56:38,2017-03-18 15:06:05,closed,deprecate mpl compat,"- [x] issues: fixes #5788
- [x] release document entry (if new feature or API change)

This PR deprecates all MPL compat capability, to be removed when Bokeh 1.0 is released. It also cleans up the release notes and adds a rough cut of ""what's in the release"".

@bokeh/dev and especially @pzwang, any comments on the text of the deprecation announcement?",5,4,['status: declined']
2373,111302570,6003,3834332,2017-03-17 15:17:12,2017-03-17 19:44:03,closed,check for transform listener on glyph,"- [x] issues: fixes #5174
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,5,['status: accepted']
2374,111138622,6000,3834332,2017-03-16 18:44:03,2017-03-16 22:34:43,closed,Use custom PRNG in bokehjs examples that participate in image diff,"This fixes the last two examples that constantly fail image diff.

fixes #5254
",0,1,['status: accepted']
2375,111105442,5999,3834332,2017-03-16 16:09:11,2017-03-20 15:47:02,closed,Make custom models' bundle part of embed instead of resources,"This allows to use custom models with `components()` by moving custom models' bundles from resources to embed.

fixes #5353",4,1,['status: accepted']
2376,111081479,5998,3834332,2017-03-16 14:33:34,2017-03-16 14:33:45,closed,Update docs upload to work now that host site is behind cloudflare,"Can't SSH by DNS name any longer, must use IP address.",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2377,111035738,5997,3834332,2017-03-16 10:29:20,2017-03-16 22:42:34,closed,Move webgl glyphs and related code to bokeh-gl bundle,"Reduces `bokeh.min.js` size from 699 to 636 kB. `gloo2` and `models/glyphs/webgl` were moved to `bokeh-gl` bundle, which is automatically included if `Plot.webgl == True`. The logic is the same, i.e. there are no new models and `webgl` is left. This also means that the code is still a mess, with webgl popping up everywhere, but at least the bulk of the webgl code is in the new bundle.

fixes #4321
",1,1,['status: accepted']
2378,110898518,5995,3834332,2017-03-15 17:23:11,2017-03-20 18:50:38,closed,Add support for CustomJSTransform,"issues: fixes #5015

Todo:
- [x] tests added / passed
- [x] Add `from_py_func` method for transform via flexx
- [x] Add `from coffeescript`
- [x] Add example to docs",5,10,['status: accepted']
2379,110506666,5990,3834332,2017-03-13 21:56:50,2017-03-14 14:25:38,closed,remove output_server and support functions,"- [x] issues: fixes #5989
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",4,1,['status: accepted']
2380,110304784,5982,3834332,2017-03-12 16:28:22,2017-07-03 17:48:35,closed,Filterable and groupable CDS with new model CDSView,"This PR is a third attempt to create a filterable CDS ([First](https://github.com/bokeh/bokeh/pull/5828) and [Second](https://github.com/bokeh/bokeh/pull/5933)). This attempt keeps the ColumnDataSource largely unchanged, so it continues to be in charge of its data. The filtering is instead done by the new CDSView, which represents a row-wise subset of a CDS used by a GlpyhRenderer when it renders glyphs. 

The CDSView is composed of individual Filters, a new model that represents subsets created by one type of filtering operation. In the initial PR (first commit), the Filter's `filter` can only be a `Seq(Int)` representing the indices of the subset, but this will be expanded to include `Seq(Bool)` and a new callable type that could operate on data values or data indices to return True or False. 

This PR also introduces GroupFilters which are a specific type of Filter that can be used for grouping. It has a `column_name` and `group` attribute. 

One important note is that the CDSView as it's implemented now is not optional in a sense (but looks optional from a user pov). The GlyphRenderer has to have both a source and a view. However, if a view is not passed in, then one is created on initialization that represents the full data set. If the view were to be truly optional, the internal code of the GlyphRenderer would need to be a bit messier (with checks to see if a view is there or not at potentially multiple points). 

Example:
![cds_view](https://cloud.githubusercontent.com/assets/4241244/23833678/2d46ef88-0706-11e7-9dfb-136d03546188.gif)

```python
from bokeh.plotting import figure
from bokeh.layouts import row, column
from bokeh.models.sources import ColumnDataSource, CDSView
from bokeh.models.filters import Filter, GroupFilter
from bokeh.models.tools import HoverTool
from bokeh.io import output_file, show

output_file(""cds_view.html"")

data = {'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [10, 5, 2, 6, 1, 4, 8, 2, 7, 3],
        'z': ['a', 'a', 'a', 'b', 'b', 'b', 'c', 'c', 'c', 'c']}

cds = ColumnDataSource(data)
view = CDSView(source=cds, filters=[Filter(filter=[0, 1, 2, 3, 4]),
                                    GroupFilter(column_name='z', group='b')])

plot_size_and_tools = {'plot_height': 220, 'plot_width': 220,
                        'tools':['box_select', 'reset'],
                        'x_range':[0, 11], 'y_range':[0, 11]}

fig1 = figure(title="""", **plot_size_and_tools)
c1 = fig1.circle(x='x', y='y', source=cds, view=view, color='black', hover_fill_color='red')
fig1.add_tools(HoverTool(tooltips=None, renderers=[c1], mode='hline'))

fig2 = figure(title="""", **plot_size_and_tools)
c2 = fig2.circle(x='x', y='y', source=cds, color='black', hover_fill_color='red')
fig2.add_tools(HoverTool(tooltips=None, renderers=[c2], mode='hline'))


show(row(fig1, fig2))
```

- [x] issues: fixes #4070 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",19,30,['status: accepted']
2381,110298448,5981,3834332,2017-03-12 13:21:29,2017-03-13 23:13:22,closed,Remove blocking server.start() from flask_embed example,"This PR fixed the issue for the flask_embed.py example

- [x] issues: fixes #5980
- [NA] tests added / passed
- [NA] release document entry (if new feature or API change)
",1,1,['status: declined']
2382,110239567,5979,3834332,2017-03-11 01:27:12,2017-03-15 23:56:46,closed,Support relative URLs / deprecate --host arg ,"- [x] issues: fixes #5692
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",34,12,['status: accepted']
2383,110204043,5978,3834332,2017-03-10 20:33:01,2017-03-15 15:01:41,closed,Correctly infer document from bokeh.io._state for bokeh.io.save (instead of creating new one),"- [x] issues: fixes #5977
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Refactor _save_helper to use internally use `_ModelInDocument` (via `bokeh.embed.file_html`) in order to correctly handle document state.

For testing purposed, you can use the bug example from the issue (#5977)

Migration Note: 

* `bokeh.io.save` now will only accept a LayoutDOM item and no longer a document. I don't think this should be much of an interruption, as I don't think any users are saving documents. This also brings the `save` method in line with the `bokeh.io.show` method, making things more intuitive.
* `validate` kwarg to `bokeh.io.save` has been deprecated
* `bokeh.embed.standalone_html_page_for_models` has been marked as deprecated in place of `bokeh.embed.file_html`",4,13,['status: accepted']
2384,110149723,5976,3834332,2017-03-10 15:27:38,2017-04-26 19:42:17,closed,Another attempt to make layout more reliable,"- [x] implement per-root layout solver
- [ ] make layout reinitializable

fixes #5967 
? #5518
? #4810
fixes #4449

? #1650 -- not fixed because constraints are still bound to models, and there are other issues to resolve (e.g. we shouldn't touch `plot.renderers`).",88,86,['status: accepted']
2385,109973100,5975,3834332,2017-03-09 18:10:13,2017-03-14 15:24:01,closed,ColumnDataSource.from_dataframe using arrays,- [x] issues: fixes #5973,1,8,['status: accepted']
2386,109950656,5972,3834332,2017-03-09 16:22:15,2017-03-09 17:15:31,closed,"Don't use ""Dummy"" bokeh models","issues: fixes #5152

The original code created a CDS for every year of data, but only used the first CDS in the document, switching out .data on upates. It's worth investigating why this caused a problem separately, but this usage is not advised in any case. (The new code is also faster) Bokeh models should be created when they are intended to be put in a Document. Internal data storage is best left to non-Bokeh data structures.

",0,1,['status: accepted']
2387,109945123,5971,3834332,2017-03-09 15:59:30,2017-03-09 17:41:20,closed,Move examples/models/{*.py->file/},fixes #5878,0,3,['status: accepted']
2388,109862723,5970,3834332,2017-03-09 08:33:21,2017-03-09 15:04:50,closed,Update interactive legend inactive defaults,"Fixes #5969 

![bokeh_plot](https://cloud.githubusercontent.com/assets/1796208/23742003/c1b20e02-0470-11e7-8d89-59226b58ed99.png)
",0,1,['status: accepted']
2389,109838129,5968,3834332,2017-03-09 04:20:59,2017-03-09 15:05:58,closed,DOC : Transforms methods dedent for Sphinx,"issues: fixes #5887 

Looks like the methods to be implemented were indented one space too many, and missed by sphinx.

",1,1,['status: accepted']
2390,109772219,5966,3834332,2017-03-08 19:59:38,2017-03-08 20:34:41,closed,"Set pointer cursor on Legend only when click_policy != ""none""","fixes #5965 
",0,1,['status: accepted']
2391,109769249,5964,3834332,2017-03-08 19:44:02,2017-03-08 20:33:13,closed,Provide exports variable in CustomJS's callback function,fixes #5963,0,1,['status: accepted']
2392,109349429,5961,3834332,2017-03-06 21:09:53,2017-03-10 18:44:19,closed,Fix integration tests,"- [x] issues: fixes #5947 
- [x] tests added / passed
",8,14,['status: accepted']
2393,109322199,5960,3834332,2017-03-06 18:44:08,2017-03-09 18:11:29,closed,added visible checks to legend and box_annotation,"- [x] issues: fixes #5488
",13,8,['status: accepted']
2394,109209053,5958,3834332,2017-03-06 08:23:11,2017-03-06 14:42:17,closed,Fix scripts in user_guide/examples/extensions_*.py,fixes #5954 ,0,1,['status: accepted']
2395,109197202,5957,3834332,2017-03-06 06:28:42,2017-03-06 14:46:26,closed,add linenos flag option to sphinxext.bokeh_plot,fixes #5956,1,1,['status: accepted']
2396,108814935,5948,3834332,2017-03-02 17:51:22,2017-03-03 17:44:47,closed,Custom 404 for docs,"- [x] issues: fixes #4241

This builds a reasonable looking 404.html, but the nav links are all relative. 
",6,5,['status: declined']
2397,108792757,5946,3834332,2017-03-02 16:09:44,2017-03-02 16:32:25,closed,Disable Saucelabs tests for now,Disable Saucelabs tests until time can be set aside to diagnose the current unexpected failures. ,0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2398,108779464,5945,3834332,2017-03-02 15:11:06,2017-03-02 16:33:17,closed,Updates exports from models and export all bases,"fixes #5861
",0,2,['status: accepted']
2399,108598717,5942,3834332,2017-03-01 18:23:13,2017-03-03 23:01:05,closed,Creates tempfile when output_filename is not writable (notebook),"- [x] issues: fixes #5677
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,5,['status: accepted']
2400,108592936,5941,3834332,2017-03-01 17:51:49,2017-03-15 22:51:48,closed,Generalized event system,"This PR is one I have been working on with @bryevdv on my fork (https://github.com/jlstevens/bokeh/pull/4) that aims to fix issue #5278 and will possibly help address issue #3393. This PR supersedes #5276.

## Aim

The goal is to allow users to specify Python and Javascript callbacks associated with events. Some suggestions for potential events include UIEvents (including hammer events such as 'tap', 'press', keypress events), model related events such as button click events as well as document level events such as 'busy'.  Other proposals for events may be found on [this wiki page](https://github.com/bokeh/bokeh/wiki/Generalizing-Events).

As there are many potential event types, the goal is to introduce a very general mechanism that abstracts over all these potential event types (hammer, DOM, model related, document). This would be a very useful feature to have for building bokeh apps as well as for third party libraries used to build interactive Bokeh visualizations such as HoloViews.

## Architecture outline

The API is very similar to the existing ``on_change`` and ``js_on_change`` API used to register callbacks triggered by property changes. 

Events callbacks are defined on ``Model`` and stored on the JS side as a property ``js_event_callbacks`` and on the Python side in the ``_event_callbacks`` attribute of the``EventCallbackManager`` mixin class (which is analogous to the ``PropertyCallbackManager``  class - formerly known as ``CallbackManager``).

An ``EventManager`` instance exists per document in both on Python and Javascript - its job is to route events from wherever they are generated to the appropriate models that can process them. ``Model`` instances are responsible for actually invoking the registered callbacks in response to an event, triggered on the event manager. The ``EventManager`` also handles the communication of events from Javascript to Python as necessary.

To achieve this, ``Model`` has a ``subscribed_events`` property which specifies which events are being listened to on the Python side. These are the events that are to be communicated to Python so that Python callbacks can respond accordingly. Both Javascript and Python callbacks receive an event instance (e.g ``Tap``) which contains information such as the position of the tap. In terms of the communication protocol, there is a single new ``Event`` message that is converted into corresponding event instances once received.
 
## Current status

You can now use ``on_event`` and ``js_on_event`` with the currently defined set of events to execute either Javascript or Python callbacks. You can see the API in action in the [fourier_animated.py](https://github.com/bokeh/bokeh/files/811526/fourier_animated.py.zip) example I am currently using for testing. I intend to write a new example app from scratch and include it in this PR later.

## Open questions

The main architectural issue right now is that I need a way to supply event instances with a particular model id in order to target a particular model. For instance, events from a given ``UIEvents`` instance only apply to a particular ``Plot`` instance. What is the best way to get the appropriate model id - at the point where the events are generated? For more information about the problem, see  https://github.com/jlstevens/bokeh/pull/4.

## TODO

I have already listed various TODO items at https://github.com/jlstevens/bokeh/pull/4 and here are the most important outstanding items:

- [x] Write an example of a Button widget click event.
- [x] Make sure all classes have decent docstrings
- [x] Illustrate custom events by building a custom model.
- [x] Testing

**Edit**: to avoid having to refer back to the PR on my fork, here are the other TODO items I assigned myself:

- [x] Rename ``js_callbacks`` to ``js_property_callbacks``
- [x] Add more event types and check they have useful contents
- [x] Make a new bokeh app example specifically for illustrating events
 (*edit*: superseded for now with two demos in ``examples/howto`` ).
- [x] Type annotations for typescript

## Possible Future work

Currently events originating in JS can be communicated to Python but events originating in Python cannot currently be communicated to JS. An earlier prototype demonstrated that this feature is possible with the proposed architecture but this feature involves some tricky issues connecting up the communication protocol that are outside the scope of this PR.

In addition, it is trivial to add a Javascript API to the current system. This was successfully prototyped but is omitted here as there was no obvious naming scheme for the JS methods.",94,103,"['status: accepted', 'PROTOCOL']"
2401,108511947,5938,3834332,2017-03-01 10:49:50,2017-03-01 12:12:22,closed,Force proj4 < 2.4 because of source code incompatibility,fixes #5936 ,0,1,['status: accepted']
2402,108494292,5935,3834332,2017-03-01 09:06:05,2017-03-01 14:31:02,closed,Enable noImplicitAny and fix any errors,"fixes #5934
",0,1,['status: accepted']
2403,108455413,5933,3834332,2017-03-01 02:31:29,2017-03-12 16:29:39,closed,Filterable and groupable CDS,"This PR is a second attempt to create a filterable CDS. The first attempt in [this PR](https://github.com/bokeh/bokeh/pull/5828) created a new data source called the TableDataSource. This second attempt instead puts the filtering functionality into the ColumnDataSource (CDS). 

In this approach, the data and filters are separated by pulling out the CDS's data into a new model called the ColumnDataStore (data store). The data store would be responsible for holding the data as well as the selection on the full data set. (It would also be responsible for streaming and patching the data and the CDS could have stream and patch methods that called the data store's stream and patch methods.)

I additionally added a group property to the CDS, which specifies a column name and a group name to restrict to. This allows for an API that looks like (described by @bryevdv [here](https://github.com/bokeh/bokeh/issues/5884#issuecomment-280669400))

```python
fig.circle('sepal_width', 'petal_width', source=source, group=('species', 'setosa'))
```

With the first two commits in this PR, you can have something like:

![iris_groups](https://cloud.githubusercontent.com/assets/4241244/23443241/578a736e-fde2-11e6-9863-a87f930828b4.gif)

```python
from bokeh.plotting import figure
from bokeh.layouts import row, column
from bokeh.models.sources import ColumnDataSource
from bokeh.models.data_stores import ColumnDataStore
from bokeh.io import output_file, show

from bokeh.sampledata.iris import flowers

output_file(""filter_group_cds.html"")

import numpy as np

data_store = ColumnDataStore(flowers)
source0 = ColumnDataSource(data_store)
source1 = ColumnDataSource(data_store, filter=lambda cds: np.array(cds.data_store.data['species']) == 'setosa')
source2 = ColumnDataSource(data_store, group=['species', 'versicolor'])
source3 = ColumnDataSource(data_store, group=['species', 'virginica'])

plot_size_and_tools = {'plot_height': 300, 'plot_width': 300,
                        'tools':['box_select', 'reset']}

fig1 = figure(title=""Full data set"", **plot_size_and_tools)
fig1.circle(x='petal_length', y='petal_width', source=source0, color='black')

fig2 = figure(title=""Composed of filtered and grouped data"", x_range=fig1.x_range, y_range=fig1.y_range, **plot_size_and_tools)
fig2.circle(x='petal_length', y='petal_width', source=source1, color='red')
fig2.square(x='petal_length', y='petal_width', source=source2, color='green')
fig2.diamond(x='petal_length', y='petal_width', source=source3, color='blue')

show(row(fig1, fig2))
```

One issue shown the GIF above is that selecting points on the right figure only works with the last renderer. This issue is discussed in [issue 2136](https://github.com/bokeh/bokeh/issues/2136) and [issue 2989](https://github.com/bokeh/bokeh/issues/2989).

This PR is still in early stages, and I'm looking for feedback at any level. The group property may not be strictly necessary. Users can filter as in source1 in the above example for a specific group on their own and a higher-level plot.scatter method (with a groupby parameter) could use filter internally as well. 

With this PR, each filter is represented through one CDS. Another approach could be to have a CDS contain a mapping of renderers to filters. Then, each renderer could use the same CDS. The filter could be made on the creation of a renderer and be added to the CDS's renderer-filter mapping. 

- [ ] issues: fixes #4070
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,2,['status: superseded']
2404,108354407,5932,3834332,2017-02-28 15:32:40,2017-03-01 18:32:53,closed,Fix embed themed models,"Changes to using curdoc rather than new doc when embedding

- [x] issues: fixes #4952 and fixes #4722
- [x] removed a test that checked for whether `_ModelInEmptyDocument` had been called
- [x] added example of themed embedding components
",9,16,['status: accepted']
2405,108351669,5931,3834332,2017-02-28 15:20:33,2017-02-28 19:39:29,closed,Align bokehjs' imports with custom models,"This allows to import `core/util/array` instead of `../../../core/util/array`. Also typescript is now responsible for reporting bad imports, so pay attention to those `TSxxxx` errors.

fixes #5930 

",2,13,['status: accepted']
2406,108263843,5929,3834332,2017-02-28 05:58:37,2017-02-28 19:33:38,closed,TST: Don't assume current dir is source directory.,"- [x] issues: fixes #5928
- [ ] tests added / passed

Adding a test for this would probably require a whole extra CI build, unless you feel like changing one to run on the installed copy.",1,1,['status: accepted']
2407,108260198,5927,3834332,2017-02-28 05:15:14,2017-03-01 15:54:44,closed,TST: Skip tests that use optional dependencies,"- [x] issues: fixes #5926
- [N/A] tests added / passed",3,3,['status: declined']
2408,108211850,5925,3834332,2017-02-27 22:05:20,2017-03-01 18:37:17,closed,Handle theming of property value containers,"- [x] issues: fixes #5644
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",10,6,['status: accepted']
2409,108191338,5924,3834332,2017-02-27 20:09:21,2017-02-27 20:51:40,closed,Make sure properties are updated on (deferred) init,"- [x] issues: fixes #4875

Previously, a call to `prop.update` for model properties happened in `attach_document`. But attach_document was not being called for new models added in patches to existing documents, causing problems. This PR adds a (deferred) initializer to HasProps that ensures proper property setup for all models is completed in a consistent way, always.

I don't have a good test to add at the moment. I am going to add a separate issue to improve/refactor BokehJS properties to split up the creation/initialization into more usable and testable chunks. 



",0,1,['status: accepted']
2410,107937634,5921,3834332,2017-02-25 01:08:53,2017-02-26 19:58:59,closed,Fix for small bug in array intersection method,"The intersection method in core.util.array returns the intersection between an array and others by looping over values in the first array and seeing whether each value is in all other arrays. There was a small bug where the outer loop would terminate if any value in the first array was not in all others instead of continuing to the next value. 

The only place that intersection is used currently is [here in document.coffee](https://github.com/bokeh/bokeh/blob/master/bokehjs/src/coffee/document.coffee#L463), and I didn't investigate that any further. 

I'm just probably going to need this method for CDS filtering/grouping.

I didn't create an issue since it was such a small fix, but let me know if anyone thinks I should. 

~- [ ] issues: fixes #xxxx~
- [x] tests added / passed
",1,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
2411,107899167,5920,3834332,2017-02-24 20:04:00,2017-02-24 22:22:55,closed,Remove ggplot.py examples and references.,"Bokeh has not been able to be used with recent versions of ggplot.py
already for some time. The difficulty of installing older versions for
python 3.6 means the docs are effectively not buildable by python 3.6.

Given the questionable future for all MPL compat for Bokeh, this PR
takes the simple route for making the docs buildable across all Python
versions, and removes the handful of ggplot.py examples, which were not
very compelling to begin with.

ping @bokeh/dev I don't expect this to be especially controversial but any feedback is welcome. ",5,1,"['tag: component: docs', 'status: accepted', 'type: task', 'tag: component: build', 'tag: component: examples', 'MIGRATION']"
2412,107893587,5919,3834332,2017-02-24 19:30:21,2017-02-27 21:16:43,closed,Updating figure width and height to standard,issues: fixes #5185 ,0,8,['status: accepted']
2413,107693253,5915,3834332,2017-02-23 19:19:58,2017-02-23 19:51:04,closed,Including the color option in the embed simple example,"The color information was passed to the template but was not used at all. I did very minor changes to:

1. Send the color name instead of the color numerical code in the simple.py app.
2. Use conditional `if` in the `embed.html` template in order to put the `selected` parameter in the right color.

With this changes, the selected color in the form is used for the default value.",3,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2414,107633233,5913,3834332,2017-02-23 14:19:45,2017-02-24 16:28:01,closed,Fix #5793: remove logging.basicConfig() calls from library,issues: closes #5793 ,2,2,['status: accepted']
2415,107622638,5912,3834332,2017-02-23 13:19:40,2017-02-23 14:37:16,closed,Fix failing tests on travis ci,fixes #5910,0,2,['status: accepted']
2416,107513688,5909,3834332,2017-02-22 22:29:44,2017-02-27 17:43:49,closed,Cleaning find_documents method to increase performance,"supercedes #5906 
fixes #5905",10,10,['status: accepted']
2417,107433756,5906,3834332,2017-02-22 15:40:08,2017-02-22 22:30:20,closed,added use_cached kwarg to references,"- [x] issues: fixes #5905

profiling this example:

```python
from bokeh.plotting import figure
from bokeh.embed import components

x1 = [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10]
y1 = [0, 8, 2, 4, 6, 9, 5, 6, 25, 28, 4]

p1 = figure()
p1.scatter(x1, y1)

script, div = components(p1)
```

before:
<img width=""1127"" alt=""screen shot 2017-02-22 at 10 26 12 am"" src=""https://cloud.githubusercontent.com/assets/4806877/23218724/f87bd79c-f8ea-11e6-9cc8-8bb748990a03.png"">

after:
<img width=""1124"" alt=""screen shot 2017-02-22 at 10 22 22 am"" src=""https://cloud.githubusercontent.com/assets/4806877/23218720/f676503a-f8ea-11e6-9698-d74198bff1f3.png"">

raw after:
9642 function calls (9573 primitive calls) in 0.008 seconds

Ordered by: internal time

ncalls  tottime  percall  cumtime  percall filename:lineno(function)
1834    0.000    0.000    0.001    0.000 {built-in method builtins.isinstance}
 3    0.000    0.000    0.001    0.000 encoder.py:203(iterencode)
100    0.000    0.000    0.003    0.000 bases.py:259(prepare_value)
732    0.000    0.000    0.000    0.000 {built-in method builtins.hasattr}
125    0.000    0.000    0.000    0.000 has_props.py:554(themed_values)
149    0.000    0.000    0.001    0.000 bases.py:354(validate)
185/161    0.000    0.000    0.000    0.000 model.py:703(_visit_value_and_its_immediate_references)
298    0.000    0.000    0.004    0.000 {built-in method builtins.getattr}
25    0.000    0.000    0.005    0.000 model.py:690(_visit_immediate_value_references)
281    0.000    0.000    0.004    0.000 descriptors.py:615(_get)
39    0.000    0.000    0.000    0.000 json_encoder.py:118(default)
80/75    0.000    0.000    0.002    0.000 properties.py:669(validate)
100    0.000    0.000    0.003    0.000 bases.py:135(themed_default)
25    0.000    0.000    0.001    0.000 has_props.py:515(query_properties_with_values)
101    0.000    0.000    0.000    0.000 {method 'join' of 'str' objects}
377    0.000    0.000    0.004    0.000 descriptors.py:414(__get__)
100    0.000    0.000    0.004    0.000 descriptors.py:521(instance_default)
167/152    0.000    0.000    0.001    0.000 bases.py:227(is_valid)
47    0.000    0.000    0.001    0.000 properties.py:1246(validate)
50    0.000    0.000    0.000    0.000 has_props.py:569(apply_theme)
225/215    0.000    0.000    0.001    0.000 properties.py:672(<genexpr>)
100    0.000    0.000    0.004    0.000 descriptors.py:643(_get_default)
100    0.000    0.000    0.000    0.000 copy.py:67(copy)
 1    0.000    0.000    0.000    0.000 decoder.py:345(raw_decode)
225    0.000    0.000    0.000    0.000 <frozen importlib._bootstrap>:996(_handle_fromlist)
100    0.000    0.000    0.000    0.000 bases.py:114(_copy_default)
 2    0.000    0.000    0.001    0.000 document.py:1070(_recompute_all_models)
84    0.000    0.000    0.000    0.000 properties.py:419(__str__)
42    0.000    0.000    0.000    0.000 properties.py:1231(__str__)
75    0.000    0.000    0.000    0.000 properties.py:660(transform)
51    0.000    0.000    0.000    0.000 string.py:38(nice_join)
100    0.000    0.000    0.000    0.000 has_props.py:202(accumulate_dict_from_superclasses)
51    0.000    0.000    0.000    0.000 has_props.py:241(__setattr__)
100    0.000    0.000    0.000    0.000 bases.py:244(_wrap_container)
42    0.000    0.000    0.000    0.000 properties.py:644(__str__)
25    0.000    0.000    0.001    0.000 model.py:544(_to_json_like)
81    0.000    0.000    0.000    0.000 descriptors.py:239(serializable_value)
 1    0.000    0.000    0.005    0.005 model.py:25(collect_models)
53    0.000    0.000    0.000    0.000 abc.py:178(__instancecheck__)
50    0.000    0.000    0.000    0.000 theme.py:95(apply_to_model)
96    0.000    0.000    0.000    0.000 descriptors.py:603(serialized)
83    0.000    0.000    0.000    0.000 bases.py:125(_raw_default)
100    0.000    0.000    0.000    0.000 has_props.py:506(_overridden_defaults)
84    0.000    0.000    0.000    0.000 properties.py:426(instance_type)
276    0.000    0.000    0.000    0.000 bases.py:210(validate)
185    0.000    0.000    0.000    0.000 properties.py:647(type_params)
25    0.000    0.000    0.000    0.000 has_props.py:179(accumulate_from_superclasses)
57    0.000    0.000    0.000    0.000 _weakrefset.py:70(__contains__)
100    0.000    0.000    0.000    0.000 bases.py:103(_has_stable_default)
64    0.000    0.000    0.000    0.000 model.py:301(ref)
 1    0.000    0.000    0.001    0.001 document.py:1094(_references_json)
37    0.000    0.000    0.000    0.000 six.py:580(iteritems)
96    0.000    0.000    0.000    0.000 has_props.py:504(<lambda>)
40    0.000    0.000    0.000    0.000 model.py:46(queue_one)
 1    0.000    0.000    0.008    0.008 embed.py:52(components)
68/63    0.000    0.000    0.002    0.000 {built-in method builtins.any}
25    0.000    0.000    0.000    0.000 model.py:522(_attach_document)
 1    0.000    0.000    0.005    0.005 model.py:655(_find_some_document)
96    0.000    0.000    0.000    0.000 has_props.py:394(lookup)
 2    0.000    0.000    0.000    0.000 serialization.py:47(make_id)
51    0.000    0.000    0.000    0.000 bases.py:359(<listcomp>)
 1    0.000    0.000    0.008    0.008 <string>:2(<module>)
 3    0.000    0.000    0.000    0.000 runtime.py:115(__init__)
 1    0.000    0.000    0.005    0.005 model.py:725(__init__)
51    0.000    0.000    0.000    0.000 string.py:54(<listcomp>)
 1    0.000    0.000    0.008    0.008 {built-in method builtins.exec}
 1    0.000    0.000    0.001    0.001 document.py:234(add_root)
 2    0.000    0.000    0.000    0.000 {built-in method posix.urandom}
25    0.000    0.000    0.000    0.000 model.py:534(_detach_document)
10    0.000    0.000    0.000    0.000 os.py:720(__getitem__)
 2    0.000    0.000    0.000    0.000 uuid.py:601(uuid4)
 1    0.000    0.000    0.000    0.000 document.py:85(__init__)
25    0.000    0.000    0.000    0.000 has_props.py:408(properties_with_refs)
126    0.000    0.000    0.000    0.000 bases.py:64(__str__)
50    0.000    0.000    0.000    0.000 theme.py:80(_for_class)
22    0.000    0.000    0.000    0.000 properties.py:1740(prepare_value)
96    0.000    0.000    0.000    0.000 bases.py:149(serialized)
 1    0.000    0.000    0.002    0.002 embed.py:531(_standalone_docs_json_and_render_items)
25    0.000    0.000    0.001    0.000 has_props.py:483(properties_with_values)
 2    0.000    0.000    0.000    0.000 serialization.py:194(traverse_data)
 3    0.000    0.000    0.001    0.000 json_encoder.py:151(serialize_json)
 3    0.000    0.000    0.000    0.000 runtime.py:55(new_context)
10    0.000    0.000    0.000    0.000 _collections_abc.py:594(get)
 2    0.000    0.000    0.000    0.000 uuid.py:106(__init__)
 1    0.000    0.000    0.000    0.000 serialization.py:229(transform_column_source_data)
 1    0.000    0.000    0.002    0.002 document.py:721(to_json_string)
 2    0.000    0.000    0.000    0.000 embed.py:476(_check_models)
 1    0.000    0.000    0.000    0.000 embed.py:442(_script_for_render_items)
15    0.000    0.000    0.000    0.000 descriptors.py:846(serializable_value)
10    0.000    0.000    0.000    0.000 settings.py:26(_get)
 9    0.000    0.000    0.000    0.000 properties.py:1465(to_serializable)
 3    0.000    0.000    0.001    0.000 __init__.py:182(dumps)
 1    0.000    0.000    0.002    0.002 document.py:708(to_json)
 6    0.000    0.000    0.000    0.000 properties.py:1705(isconst)
 2    0.000    0.000    0.000    0.000 document.py:1170(_with_self_as_curdoc)
 2    0.000    0.000    0.005    0.002 model.py:394(references)
95    0.000    0.000    0.000    0.000 copy.py:110(_copy_immutable)
100    0.000    0.000    0.000    0.000 bases.py:198(transform)
30    0.000    0.000    0.000    0.000 model.py:294(document)
51    0.000    0.000    0.000    0.000 {method 'union' of 'set' objects}
160    0.000    0.000    0.000    0.000 {built-in method builtins.len}
 1    0.000    0.000    0.000    0.000 document.py:594(remove_root)
 5    0.000    0.000    0.000    0.000 containers.py:92(__init__)
 3    0.000    0.000    0.000    0.000 environment.py:974(render)
10/5    0.000    0.000    0.000    0.000 settings.py:42(_get_bool)
52    0.000    0.000    0.000    0.000 {method 'startswith' of 'str' objects}
100    0.000    0.000    0.000    0.000 {method 'get' of 'dict' objects}
 2    0.000    0.000    0.000    0.000 enums.py:77(__contains__)
10    0.000    0.000    0.000    0.000 os.py:796(encode)
 3    0.000    0.000    0.000    0.000 environment.py:1015(new_context)
 3    0.000    0.000    0.000    0.000 doc_js.js:5(root)
29    0.000    0.000    0.000    0.000 {method 'pop' of 'list' objects}
10    0.000    0.000    0.000    0.000 properties.py:1251(<genexpr>)
117    0.000    0.000    0.000    0.000 {method 'items' of 'dict' objects}
105    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
 1    0.000    0.000    0.000    0.000 decoder.py:334(decode)
 3    0.000    0.000    0.001    0.000 encoder.py:181(encode)
 9    0.000    0.000    0.000    0.000 {built-in method builtins.all}
 2    0.000    0.000    0.000    0.000 uuid.py:226(__str__)
 3    0.000    0.000    0.000    0.000 nodes.py:81(__init__)
 2    0.000    0.000    0.000    0.000 io.py:245(curdoc)
10    0.000    0.000    0.000    0.000 settings.py:22(_environ)
 1    0.000    0.000    0.000    0.000 embed.py:35(_wrap_in_safely)
 1    0.000    0.000    0.001    0.001 model.py:744(__enter__)
 2    0.000    0.000    0.001    0.000 document.py:1062(_pop_all_models_freeze)
 2    0.000    0.000    0.000    0.000 embed.py:32(_indent)
 1    0.000    0.000    0.000    0.000 embed.py:41(_wrap_in_onload)
 5    0.000    0.000    0.000    0.000 containers.py:260(__init__)
10/5    0.000    0.000    0.000    0.000 settings.py:33(_dev_or_default)
 5    0.000    0.000    0.000    0.000 properties.py:1551(prepare_value)
41    0.000    0.000    0.000    0.000 {built-in method builtins.iter}
 2    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
25    0.000    0.000    0.000    0.000 {method 'add' of 'set' objects}
 3    0.000    0.000    0.000    0.000 encoder.py:104(__init__)
 6    0.000    0.000    0.000    0.000 properties.py:1721(to_serializable)
80    0.000    0.000    0.000    0.000 bases.py:192(serialize_value)
 1    0.000    0.000    0.000    0.000 events.py:125(__init__)
 2    0.000    0.000    0.000    0.000 document.py:1140(_trigger_on_change)
 4    0.000    0.000    0.000    0.000 io.py:223(set_curdoc)
 1    0.000    0.000    0.000    0.000 model.py:740(__exit__)
76    0.000    0.000    0.000    0.000 {method 'keys' of 'dict' objects}
 2    0.000    0.000    0.000    0.000 embed.py:33(<listcomp>)
 5    0.000    0.000    0.000    0.000 copy.py:125(_copy_with_constructor)
 2    0.000    0.000    0.000    0.000 properties.py:1642(prepare_value)
 3    0.000    0.000    0.000    0.000 settings.py:127(pretty)
 1    0.000    0.000    0.000    0.000 string.py:8(encode_utf8)
 3    0.000    0.000    0.000    0.000 datatypes.py:12(__init__)
 2    0.000    0.000    0.000    0.000 script_tag.html:5(root)
 5    0.000    0.000    0.000    0.000 {method 'values' of 'dict' objects}
10    0.000    0.000    0.000    0.000 {method 'encode' of 'str' objects}
 2    0.000    0.000    0.000    0.000 plot_div.html:5(root)
 5    0.000    0.000    0.000    0.000 settings.py:29(_is_dev)
 3    0.000    0.000    0.000    0.000 _compat.py:29(<lambda>)
 1    0.000    0.000    0.000    0.000 __init__.py:271(loads)
 2    0.000    0.000    0.000    0.000 {built-in method from_bytes}
 2    0.000    0.000    0.000    0.000 settings.py:133(simple_ids)
 2    0.000    0.000    0.000    0.000 properties.py:1625(prepare_value)
 1    0.000    0.000    0.000    0.000 properties.py:1293(serialize_value)
 2    0.000    0.000    0.000    0.000 {method 'match' of '_sre.SRE_Pattern' objects}
 4    0.000    0.000    0.000    0.000 serialization.py:211(<genexpr>)
 1    0.000    0.000    0.000    0.000 embed.py:509(_div_for_render_item)
25    0.000    0.000    0.000    0.000 document.py:150(theme)
 2    0.000    0.000    0.000    0.000 document.py:108(roots)
 2    0.000    0.000    0.000    0.000 state.py:46(document)
 5    0.000    0.000    0.000    0.000 runtime.py:149(resolve)
 4    0.000    0.000    0.000    0.000 embed.py:484(<genexpr>)
 1    0.000    0.000    0.000    0.000 events.py:137(__init__)
 2    0.000    0.000    0.000    0.000 document.py:1056(_push_all_models_freeze)
 2    0.000    0.000    0.000    0.000 embed.py:143(<genexpr>)
 2    0.000    0.000    0.000    0.000 {method 'lower' of 'str' objects}
 1    0.000    0.000    0.000    0.000 {method 'remove' of 'list' objects}
 2    0.000    0.000    0.000    0.000 document.py:1145(invoke_callbacks)
 1    0.000    0.000    0.000    0.000 six.py:574(iterkeys)
 2    0.000    0.000    0.000    0.000 {method 'end' of '_sre.SRE_Match' objects}
 3    0.000    0.000    0.000    0.000 runtime.py:126(<genexpr>)
 2    0.000    0.000    0.000    0.000 events.py:11(__init__)
 4    0.000    0.000    0.000    0.000 state.py:54(document)
 3    0.000    0.000    0.000    0.000 {method 'pop' of 'dict' objects}
 1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects}
 2    0.000    0.000    0.000    0.000 {method 'count' of 'list' objects}
 3    0.000    0.000    0.000    0.000 {built-in method builtins.callable}
 1    0.000    0.000    0.000    0.000 document.py:175(title)
",2,3,['status: superseded']
2418,107422666,5903,3834332,2017-02-22 14:49:13,2017-02-22 15:39:21,closed,Fixed typo in user_guide/annotations.rst,"Added missing comma to example code as described in Issue #5902

- [x] issues: fixes #5902 
",1,1,['status: accepted']
2419,107306974,5901,3834332,2017-02-22 00:02:30,2017-02-23 14:38:29,closed,pass HTTP request args more explicitly to session,"- [x] issues: fixes #5582
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,2,['status: accepted']
2420,107276340,5900,3834332,2017-02-21 20:54:17,2017-03-02 18:41:54,closed,Attempt to make layout less fragile,"I'm submitting this to run examples' and integration tests. There will be obvious unit failures.

fixes partially #5518
",10,3,"['type: bug', 'status: ready', 'reso: completed', 'tag: component: bokehjs']"
2421,107039193,5898,3834332,2017-02-20 16:28:31,2017-05-03 21:31:27,closed,Allow to get autoload.js without an element,Sometimes it is necessary to get `autoload.js` without providing element id. Thus you can get necessary scripts and load Bokeh sessions later manually.,6,1,['status: declined']
2422,106980303,5897,3834332,2017-02-20 10:45:27,2017-02-20 10:47:05,closed,Global urls for JS and CSS resources,Add urls for JS and CSS resources,1,3,['status: declined']
2423,106934234,5896,3834332,2017-02-20 03:26:08,2017-03-21 13:02:41,closed,Typo corrections and clarifications for user_guide/server (#5895),"- [x] issues: fixes #5895 

I have some feedback on the server docs.  I've made it through the UserGuide page and wanted to post this to get any dialog started.  I hope to follow up with anything I find in the DevGuide page in the next day or two.",4,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2424,106928273,5894,3834332,2017-02-20 01:49:01,2017-03-14 15:27:19,closed,Add example app: pivot chart maker,"This bokeh app creates pivot charts from data, similar to Excel's pivot chart functionality, but with the additional ability to explode into multiple pivot charts.

- fixes #5640
- no tests added
",21,15,['status: accepted']
2425,106916321,5893,3834332,2017-02-19 21:01:53,2017-02-19 21:01:58,closed,"Revert ""Allow configuring server to provide relative URLS for resources""","Reverts bokeh/bokeh#5830

Needs more work. ",0,1,['status: accepted']
2426,106879221,5892,3834332,2017-02-18 22:22:22,2017-02-19 02:05:09,closed,Fix broken link in top of dev_guide/server.html (#5891),"* Just fixing a typo so that the link at the top of dev_guide/server.html
  correctly points to user_guide/server.html

- [x] issues: fixes #5891
- [x] tests added / passed
  * doc change only.  locally built docs to confirm fixed link
",2,1,['status: accepted']
2427,106741377,5889,3834332,2017-02-17 14:20:04,2017-02-17 16:00:31,closed,Use `master@{upstream}` instead of `origin/master` as the default diff-ref,"Using `origin` is presumptuous and works only for core dev workflow, but not necessarily in forks, which can have the origin (upstream) configured to something different than the literal `origin`.

fixes #5888",1,1,['status: accepted']
2428,106662952,5886,3834332,2017-02-17 03:38:25,2017-04-18 18:19:43,closed,Support visualization for zeppelin,"[Apache Zeppelin](https://zeppelin.apache.org/) is a web-based notebook that enables interactive data analytics. I'd like integrate bokeh into Apache Zeppelin as Jupyter notebook. As the first step, I just want to visualize the chart in zeppelin directly. 

- [x] issues: fixes #5885 
- [x] tests: not added yet.
- [ ] release document entry (if new feature or API change)

- Screenshot in Zeppelin with this PR
![image](https://cloud.githubusercontent.com/assets/164491/23051640/88a10124-f505-11e6-8a5a-e8d594aa180f.png)
",28,4,['status: accepted']
2429,106643244,5883,3834332,2017-02-17 00:15:48,2017-02-20 15:11:28,closed,Test bokehjs examples and run them on travis ci,"fixes #5882
",0,11,['status: accepted']
2430,106623048,5881,3834332,2017-02-16 21:57:06,2017-02-20 15:56:48,closed,flake8 everything,"fixes #5880
",1,5,['status: accepted']
2431,106206991,5875,3834332,2017-02-14 22:35:27,2017-02-14 22:40:00,closed,Use explicit bs4 HTML parser and fix tests,Fixes failing travis ci's jobs.,4,1,['status: declined']
2432,106201627,5874,3834332,2017-02-14 22:02:30,2017-02-14 22:33:08,closed,explicitly require lxml for testing,"Beautiful soup was using different HTML parsers across different  builds, causing tests to fail. Explicitly require `lxml`, which `bs4` regards as the ""best"" (and which matches our current tests)
",1,1,['status: accepted']
2433,106191254,5873,3834332,2017-02-14 21:01:59,2017-03-14 21:43:07,closed,Updating docs to show how to disable whitelist in bokeh serve.,The only way to figure out how to disable the whitelist in bokeh server has been to read the code.  Here's a simple fix if you want it.,2,1,['status: declined']
2434,106148885,5872,3834332,2017-02-14 17:05:56,2017-02-15 18:28:32,closed,ColumnDataSource constructor optimization,"As described in https://github.com/bokeh/bokeh/issues/5871, the ColumnDataSource constructor triggers validation on all the columns for every column that is passed to the constructor, which is highly inefficient. By using ``self.data.update`` the validation is only triggered once resulting in considerably speed improvements for large datasets.

It would be important to know if there is any particular reason why it was using ``.add`` in the first place.",10,1,['status: accepted']
2435,106141090,5870,3834332,2017-02-14 16:29:53,2017-02-14 17:13:55,closed,bump conda and conda-build verision,"fixes #5818
",3,1,['status: accepted']
2436,105758082,5859,3834332,2017-02-11 16:13:43,2017-02-14 01:29:01,closed,Update installation.rst to include note on `bokeh-api`,"Addresses one component of #5858 
",1,1,['status: accepted']
2437,104827222,5853,3834332,2017-02-06 16:03:36,2017-02-06 19:36:41,closed,Don't use TypedArray.map() in log_mapper.coffee,"Change to `core/util/math` resulted in being unrelated.

fixes #5810
",1,2,['status: accepted']
2438,104769760,5851,3834332,2017-02-06 10:21:44,2017-02-07 13:12:01,closed,Document: fix memory leak by explicitly deleting sys.modules on session destroy,"Previously, due to circular references, a Document was never GC'd, and thus
sys.modules kept increasing for each page request.

This patch explicitly cleans up sys.modules after a session is destroyed.

Verified that `len(sys.modules)` does not increase over time (which it did before).

Fixes #5848

TODO: add tests",4,3,['status: accepted']
2439,104724789,5850,3834332,2017-02-06 01:28:42,2017-02-06 15:45:56,closed,demonstrate argparse usage that works across platofrms,"issues: fixes #5834 

Usage such as `--host='*'` fails on windows, but not OSX or Linux. Only demonstrate usage such as `--foo bar`, which will work on all platforms, instead of `--foo=bar`",1,1,['status: accepted']
2440,104684656,5849,3834332,2017-02-05 02:28:29,2017-05-11 21:51:39,closed,Ensure all dataspec properties are updated before glyph render,"Currently, if only dataspec properties change for a given glyph, when `push_notebook` is called, the graphs are not updated because the `View`'s properties never get updated. By calling `set_data` in the `render` function, it makes sure that all dataspec properties of the given `Glyph` are updated with the new properties of the `Model`.

- [x] issues: fixes #5811
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,1,['status: declined']
2441,104628811,5845,3834332,2017-02-03 23:00:33,2017-02-04 16:20:26,closed,add support for GMap scale control,"issues: fixes #5442
",0,1,['status: accepted']
2442,104578204,5844,3834332,2017-02-03 17:35:12,2017-02-03 23:03:19,closed,Allow to debug tests with `gulp test --debug`,"fixes #5720
",3,1,['status: accepted']
2443,104280225,5839,3834332,2017-02-02 06:10:43,2017-02-02 16:22:56,closed,add detailed name in counties sampledata api to enable matching by name,"Deals with #5835. I did not add any tests. I put relevant info in the docstring of the us_counties module.

I know this is just sample data but it is actually an incredibly useful source of data. This PR enables people to match to counties by name and state (in the case that the FIPS code is not in the data). Here is some code showing the data contains duplicates on 'state' and 'name':

![dups](https://cloud.githubusercontent.com/assets/6889910/22538889/ba2a767c-e8ca-11e6-9590-0b970ef2efc4.png)

and here is an example of an occurrence of a duplicate in the data source:

![example](https://cloud.githubusercontent.com/assets/6889910/22538907/daf917dc-e8ca-11e6-9fc8-43c26b0da8ba.png)

This issue came about because I had some data without FIPS codes for the states and counties but had the names of the states and counties. I happened to be plotting Virginia and I immediately noticed that some of the counties were not being found in the sample data:

![before](https://cloud.githubusercontent.com/assets/6889910/22538928/0490e2f0-e8cb-11e6-8e49-632a8faeb276.png)

Then I did my little hack that I propose here so that I could match all the counties:

![after](https://cloud.githubusercontent.com/assets/6889910/22538947/239469f6-e8cb-11e6-99e9-6266c29f8218.png)

Let me know what you think about having both the 'name' and 'detailed name'. For me I know it was very useful..

",1,1,['status: accepted']
2444,104274167,5838,3834332,2017-02-02 04:42:36,2017-02-02 23:11:18,closed,use sinon.test to increase layout test robustness,"issues: fixes #4539 

In this PR, I wrapped test functions with `sinon.test`. From [""Best Practices for Spies, Stubs and Mocks in Sinon.js""](https://semaphoreci.com/community/tutorials/best-practices-for-spies-stubs-and-mocks-in-sinon-js):

> Use sinon.test Whenever Possible
When you use spies, stubs or mocks, wrap your test function in sinon.test. This allows you to use Sinon's automatic clean-up functionality. Without it, if your test fails before your test-doubles are cleaned up, it can cause a cascading failure - more test failures resulting from the initial failure. Cascading failures can easily mask the real source of the problem, so we want to avoid them where possible.

These changes fix the errors from the layout tests for me. @mattpap 
",5,1,['status: accepted']
2445,104272614,5837,3834332,2017-02-02 04:18:16,2017-02-03 16:40:35,closed,fix selection manager tests after getter/setter PR 5106,"fixes #5121 

These tests originally relied on the `get` method which was removed in PR [5106](https://github.com/bokeh/bokeh/pulls/5106). I updated them and added a comment about why the stub objects are the way there are. ",1,2,['status: accepted']
2446,104147476,5833,3834332,2017-02-01 14:34:56,2017-02-01 14:50:12,closed,bump conda and conda-build versions,issues: fixes #5818,1,1,['status: accepted']
2447,104022939,5830,3834332,2017-01-31 21:08:00,2017-02-17 17:09:35,closed,Allow configuring server to provide relative URLS for resources,"- [x] issues: fixes #5692
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR makes it possible for the server to supply relative URLs for resources, which may be needed for certain kinds of deployments behind proxies. It's not yet clear if the WS code also needs changing, awaiting more input from @dhuebner",19,4,['status: accepted']
2448,103891547,5828,3834332,2017-01-31 08:41:58,2017-03-09 17:40:19,closed,TableDataSource: the filterable CDS,"This PR is still in its early stages, so feedback on the more basic design and API would be appreciated. 

The goal of this PR is to create a filterable CDS. I wrote about the current pain point and a potential solution in [this wiki working document page](https://github.com/bokeh/bokeh/wiki/Filterable-Data-Source). I just updated it to make it current and to reflect the API I implemented in this PR so far. 

The most important thing for this feature is to separate the data from the filters, so that data would not need to be duplicated. The approach that I took was to create a new DataSource, the TableDataSource, which has an instance of a CDS as a property to hold its data, instead of having a data property. Another approach could be to separate Data and DataSources for all types of DataSources (i.e. make ColumnData into its own model that just holds the data). Then this type of filtering behavior can be given to the CDS.

The TDS is basically a data source with a `cds` and `filter` property. The `cds` is a CDS. The `filter` was initially implemented (first commit) as a `Seq(Int)` and was the row indices to use for the subset. I then made it so that the `filter` could also be a `Seq(Bool)` and also allowed it to be a callable when a TableDataSource is created through its own constructor. I would need some guidance on how to make a new property type that is a callable that returns some other type. 

I implemented a basic `__getitem__` that has two cases. `tds['a']` returns its cds's data['a']. `tds[bool_list]` returns a new tds with a filter of `bool_list` (a list of bools for filtering rows). This allows for the API:

```python
fig.circle(x='x', y='y', source=tds[tds['x'] > 10])
``` 

Example of the result:

![tds](https://cloud.githubusercontent.com/assets/4241244/22457695/ba2ebaa8-e74d-11e6-9aae-8067b88c17ab.gif)

```python
from bokeh.plotting import figure
from bokeh.layouts import row, column
from bokeh.models.sources import ColumnDataSource, TableDataSource
from bokeh.io import output_file, show

output_file(""tds.html"")

data = {'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [10, 5, 2, 6, 1, 4, 8, 2, 7, 3]}

# create a TDS from dict, creating another TDS through the first links them.
tds1_1 = TableDataSource(data)
tds1_2 = tds1_1[tds1_1['y'] == 4]

# create a TDS from a CDS. All TDS's associated with the same CDS are linked.
cds = ColumnDataSource(data)
tds2_1 = TableDataSource(cds)
tds2_2 = TableDataSource(cds, filter=[0, 1, 9]) # filter = Seq(Int)
tds2_3 = TableDataSource(cds, filter=[True, False]*5) # filter = Seq(Bool)
tds2_4 = TableDataSource(cds, filter=(lambda tds: tds['y'] < 4)) # filter = (self) -> Either(Seq(Int), Seq(Bool))
tds2_5 = tds2_1[tds2_1['y'] < 8] # created through __getitem__

plot_size_and_tools = {'plot_height': 220, 'plot_width': 220,
                        'tools':['box_select', 'reset'],
                        'x_range':[0, 11], 'y_range':[0, 11]}

fig1 = figure(title=""TDS 1_1, created with data"", **plot_size_and_tools)
fig1.circle(x='x', y='y', source=tds1_1, color='black')

fig2 = figure(title=""TDS 1_2, created by TDS 1_1"", **plot_size_and_tools)
fig2.circle(x='x', y='y', source=tds1_2, color='black')

fig3 = figure(title=""Full data set, CDS"", **plot_size_and_tools)
fig3.circle(x='x', y='y', source=cds, color='green')

fig4 = figure(title=""Full data set, TDS 2_1"", **plot_size_and_tools)
fig4.circle(x='x', y='y', source=tds2_1, color='green')

fig5 = figure(title=""TDS 2_2, filter=Seq(Int)"", **plot_size_and_tools)
fig5.circle(x='x', y='y', source=tds2_2, color='green')

fig6 = figure(title=""TDS 2_3, filter=Seq(Bool)"", **plot_size_and_tools)
fig6.circle(x='x', y='y', source=tds2_3, color='green')

fig7 = figure(title=""TDS 2_4, filter -> Seq(Bool)"", **plot_size_and_tools)
fig7.circle(x='x', y='y', source=tds2_4, color='green')

fig8 = figure(title=""TDS 2_5, created by TDS 2_1"", **plot_size_and_tools)
fig8.circle(x='x', y='y', source=tds2_5, color='green')

show(column(row([fig1, fig2, fig3, fig4]), row(fig5, fig6, fig7, fig8)))
```

- [ ] issues: fixes #4070
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,4,['status: superseded']
2449,103872100,5825,3834332,2017-01-31 04:53:22,2017-01-31 15:06:55,closed,Change hovertool default for line to closest instead of previous point,"- [x] issues: fixes #5822 
- [x] release document entry (if new feature or API change)
",3,3,['status: accepted']
2450,103620942,5817,3834332,2017-01-28 19:03:47,2017-01-28 19:29:02,closed,deprecate VBox and HBox,"issues: fixes #5710
",0,1,['status: accepted']
2451,103617328,5816,3834332,2017-01-28 17:04:38,2017-01-28 19:22:44,closed,improve the helpstring for CDS selected property,"fixes #5718

New section renders like this:

<img width=""738"" alt=""screen shot 2017-01-28 at 11 03 55 am"" src=""https://cloud.githubusercontent.com/assets/1078448/22398218/82afd996-e549-11e6-8bce-32a961dcc2e6.png"">

@birdsarah is this reasonable, is there anything else to add?",1,1,['status: accepted']
2452,103616496,5815,3834332,2017-01-28 16:36:05,2017-01-28 17:48:20,closed,Add missing template,"issues: fixes #5742 

This also adds a missing example for `autoload_static` requested in #5798 ",0,1,['status: accepted']
2453,103435739,5806,3834332,2017-01-27 04:07:12,2017-01-30 16:04:03,closed,fix Rect with log axis (and don't break them with FactorRanges),"New PR to address issue #5336 and fix Rects plotted with a log axis. The original merged and reverted [PR](https://github.com/bokeh/bokeh/pull/5669) fixed the issue but introduced new bugs with Rects and categorical axes. 

This PR fixes the new bugs so Rects work with linear, log, and categorical axes. 

- [x] issues: fixes #5336, #2058
- [x] tests added / passed
",10,19,['status: accepted']
2454,103328370,5799,3834332,2017-01-26 15:31:49,2017-01-26 16:01:25,closed,"Revert ""fix Rect rendering with log axis""",Reverts bokeh/bokeh#5669,1,1,"['status: accepted', 'type: task', 'reso: completed']"
2455,103316402,5798,3834332,2017-01-26 14:30:32,2017-01-26 19:36:28,closed,Use Element.dataset instead of $(...).data(),fixes #5778,4,1,['status: accepted']
2456,103287188,5797,3834332,2017-01-26 10:59:27,2017-02-06 01:03:05,closed,Documented dependency on python versions,"- [X] issues: fixes #5796 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",9,6,['status: accepted']
2457,103210896,5794,3834332,2017-01-25 21:46:38,2017-01-26 17:58:32,closed,store materialized shape data under canonical property names,"- [x] issues: fixes #5706
- [x] tests added / passed

This fixes #5706 by storing any materialized shape information under the canonical property name, not the field name. Also adds tests for `materialize_dataspecs`",8,1,['status: accepted']
2458,103154783,5791,3834332,2017-01-25 16:33:11,2017-02-01 13:28:39,closed,Provide an abstraction layer on top of rbush,"Originally this was supposed to fix issue #5783, but as kdbush doesn't support rectangles, it cannot be universally used, just as an optimization for point search, but a cleanup and addition of an abstraction layer is still useful. This can be used to add support for kdbush in fugure.",0,6,['status: accepted']
2459,103055572,5790,3834332,2017-01-25 04:53:31,2017-01-26 17:16:38,closed,Integration tests for python 2.7,"Fixes integration tests that fail when run with python 2.7. 

I also added some additional documentation on running screenshot tests. 

- [x] issues: fixes #5789 
",2,3,['status: accepted']
2460,102826741,5787,3834332,2017-01-23 23:57:07,2017-01-24 02:53:04,closed,pin MPL < 2.0,"MPL 2.0 is breaking our mpl compat tests. Assuming this pinning works, we should probably add a note to the release notes, and possibly an explicit version check and error in `bokeh.core.compat`

ping @bokeh/dev",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2461,102809588,5786,3834332,2017-01-23 21:59:03,2017-01-24 19:56:50,closed,Clean up document.py,"Move things not of general interest into other modules. Add more docstrings.


@mattpap this should be ready but I'd like to check building docs. Am currently blocked by #5785
",1,3,"['tag: component: docs', 'status: accepted', 'type: task', 'MIGRATION']"
2462,102797606,5784,3834332,2017-01-23 20:49:24,2017-01-24 18:22:50,closed,move abstract out of model.py,"issues: fixes #5704

This PR moves `abstract` to `has_props.py`, and also has makes the application of `abstract` add an admonition to the class docstring stating that the class is not useful to instantiate on its own. So this does not have to be remembered to be added by hand every time. There may be other classes that should be marked `abstract` (e.g. `MercatorTileSource`?)




",4,3,['status: accepted']
2463,102632557,5781,3834332,2017-01-22 19:36:53,2017-05-05 01:07:28,closed,WIP: Allow reselection of objects,"Related https://github.com/bokeh/bokeh/issues/2326

Instead of computing the union of indices, simply concatenate the previously selected indices with the currently provided ones. This should allow for things like deselection on a second click. Though it doesn't require that per se as it could also be interpreted as selecting the same object again thus resulting in later selections being no-ops.",20,1,['status: declined']
2464,102631273,5780,3834332,2017-01-22 18:58:16,2017-03-15 22:59:23,closed,"Remove time zone info, if any, before deserialization (#4965)","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- 1 issue: fixes #4965",5,1,['status: declined']
2465,102405686,5777,3834332,2017-01-20 05:50:45,2017-01-20 05:50:50,closed,correctly implement PUT,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2466,102386522,5776,3834332,2017-01-20 01:57:11,2017-01-20 01:57:14,closed,globs don't work in subprocesses w/o shell=True,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2467,102381820,5775,3834332,2017-01-20 01:06:47,2017-01-20 01:06:51,closed,"try token with repr, add some diagnostics",,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2468,102377542,5774,3834332,2017-01-20 00:28:27,2017-06-21 20:13:30,closed,Unify all types of sliders with nouislider,"- [ ] restore title attribute

fixes #5502
fixes #2527",6,28,['status: superseded']
2469,102370340,5773,3834332,2017-01-19 23:25:16,2017-01-19 23:25:21,closed,fix path for CSS upload,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2470,102363596,5772,3834332,2017-01-19 22:37:25,2017-01-19 22:37:29,closed,need to call chdir for persistent effect,,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2471,102354231,5771,3834332,2017-01-19 21:40:38,2017-01-19 21:40:43,closed,break up conda operations to prevent timeout,"
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2472,102338863,5770,3834332,2017-01-19 20:06:24,2017-01-19 20:53:36,closed,Bryanv/build fixups,This fixes up some remaining issues with the recent build automation update. ,0,3,"['status: ready', 'type: task', 'reso: completed', 'tag: component: build']"
2473,102307408,5767,3834332,2017-01-19 17:03:19,2017-01-19 18:53:41,closed,"Show bokehjs version in ""successfully loaded"" message",fixes #5705,1,1,['status: accepted']
2474,102305837,5766,3834332,2017-01-19 16:55:28,2017-06-24 08:15:46,closed,Use border-box as the default box model under bk-root,fixes #5668,2,1,['status: superseded']
2475,102304672,5765,3834332,2017-01-19 16:49:32,2017-02-04 17:52:50,closed,Enable unit tests under Python 3.6 on Travis CI,fixes #5666,11,2,['status: accepted']
2476,102175364,5760,3834332,2017-01-18 23:54:52,2017-01-19 00:50:14,closed,Bryanv/refactor build,"Trying again again.

issues: closes #5209 closes #5679

* Refactor the `setup.py` nightmare into simple `setup.py` and `_setup_support.py`
* Update to current tool versions: `conda=4.3.4`, `conda-env=2.6.0`,  `conda-build=2.1.1`
* Adhere to PEP 440 versions:
  - `0.12.5`
  - `0.12.5dev2` (will be normalized)
  - `0.12.5rc1`
  and on travis, local versions like `bokeh-0.12.4+20.gddad8b0-py27`

* remove all `__conda_version__` and `TRAVIS_BUILD_NUMBER` junk
* remove `get_bump_version.py`
* simplify `meta.yaml` with jinja templates
* store classifiers in sidecar file `classifiers.txt`

**HERE is the change that merits discussion:**

* use `setuptools` in ALL cases now

This allows cutting out a special case for windows, removing out custom `develop` and `find_packages` code, and handling entry points correctly. There were some reasons ~5 years ago not to use setuptools but I think that it's now OK. 

ping @mattpap @damianavila @bokeh/dev 

Still to do:
* [x] replace `noarch` packages for: `flexx`, `pytest-base-url`, and `pytest-selenium`
* [x] rewrite `build_and_upload.sh` as a python script with detailed status and error checks
  - [x] use `conda convert` to create non-`noarch` packages
  - [x] update upload for non-`noarch` packages
  - [x] create and upload examples tarball 

We do need to verify that Bokeh works in venv's still but AFAICT it should now be fine still. ",4,9,['status: accepted']
2477,102166666,5759,3834332,2017-01-18 22:49:36,2017-01-19 16:38:44,closed,Typo in axes docs,I think this is the correct fix.,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2478,102161677,5758,3834332,2017-01-18 22:18:45,2017-01-19 16:39:16,closed,Remove kiwi from bokehjs/src/vendor and use bokeh/kiwi,"fixes #5757
",0,2,['status: accepted']
2479,102152246,5756,3834332,2017-01-18 21:23:07,2017-01-18 21:23:18,closed,"Revert ""Bryanv/refactor build""",Reverts bokeh/bokeh#5755,0,1,"['status: accepted', 'type: task', 'reso: completed']"
2480,102135929,5755,3834332,2017-01-18 19:46:12,2017-01-18 20:10:10,closed,Bryanv/refactor build,"Trying again.

issues: closes #5209 closes #5679

* Refactor the `setup.py` nightmare into simple `setup.py` and `_setup_support.py`
* Update to current tool versions: `conda=4.3.4`, `conda-env=2.6.0`,  `conda-build=2.1.1`
* Adhere to PEP 440 versions:
  - `0.12.5`
  - `0.12.5-dev2`
  - `0.12.5rc1`
  and on travis, local versions like `bokeh-0.12.4+20.gddad8b0-py27`

* remove all `__conda_version__` and `TRAVIS_BUILD_NUMBER` junk
* remove `get_bump_version.py`
* simplify `meta.yaml` with jinja templates
* store classifiers in sidecar file `classifiers.txt`

**HERE is the change that merits discussion:**

* use `setuptools` in ALL cases now

This allows cutting out a special case for windows, removing out custom `develop` and `find_packages` code, and handling entry points correctly. There were some reasons ~5 years ago not to use setuptools but I think that it's now OK. 

ping @mattpap @damianavila @bokeh/dev 

Still to do:
* [x] replace `noarch` packages for: `flexx`, `pytest-base-url`, and `pytest-selenium`
* [x] rewrite `build_and_upload.sh` as a python script with detailed status and error checks
  - [x] use `conda convert` to create non-`noarch` packages
  - [x] update upload for non-`noarch` packages
  - [x] create and upload examples tarball 

We do need to verify that Bokeh works in venv's still but AFAICT it should now be fine still. ",3,6,['status: accepted']
2481,102127227,5754,3834332,2017-01-18 18:55:39,2017-01-18 18:56:06,closed,"Revert ""clean up and refactor build""",Reverts bokeh/bokeh#5735,0,1,"['status: accepted', 'type: task', 'reso: completed']"
2482,102040423,5751,3834332,2017-01-18 10:47:18,2017-01-19 16:40:02,closed,Use `git ls-files` to collect files for code quality tests,"I simplified how files for testing are collected and now use `git ls-files` (with some exclusions) instead of custom directory tree traversal. Many more files are tested and `.gitignore` files are taken into account out of the box.

fixes #5748",0,6,['status: accepted']
2483,101907815,5747,3834332,2017-01-17 17:17:51,2017-01-17 18:07:40,closed,Use div with display table instead of actual tables in tooltips,"fixes #5102
",0,1,['status: accepted']
2484,101899762,5746,3834332,2017-01-17 16:37:59,2017-03-17 19:20:12,closed,Automatically destroying servers in the notebook embed example,"
This PR continues on from #5717 but using a local branch. See #5717 for previous comments and discussion.",2,16,['status: accepted']
2485,101652095,5739,3834332,2017-01-16 09:10:41,2017-06-16 18:31:45,closed,bokehjs fix for height calc,"This pull Requests fix incorrect height calcs

See: https://github.com/bokeh/bokeh/issues/5716",6,3,['status: declined']
2486,101582997,5735,3834332,2017-01-15 03:06:34,2017-01-18 18:14:03,closed,clean up and refactor build,"issues: closes #5209 closes #5679

* Refactor the `setup.py` nightmare into simple `setup.py` and `_setup_support.py`
* Update to current tool versions: `conda=4.3.4`, `conda-env=2.6.0`,  `conda-build=2.1.1`
* Adhere to PEP 440 versions:
  - `0.12.5`
  - `0.12.5.dev2`
  - `0.12.5rc1`
  and on travis, local versions like `bokeh-0.12.4+20.gddad8b0-py27`

* remove all `__conda_version__` and `TRAVIS_BUILD_NUMBER` junk
* remove `get_bump_version.py`
* simplify `meta.yaml` with jinja templates
* store classifiers in sidecar file `classifiers.txt`

**HERE is the change that merits discussion:**

* use `setuptools` in ALL cases now

This allows cutting out a special case for windows, removing out custom `develop` and `find_packages` code, and handling entry points correctly. There were some reasons ~5 years ago not to use setuptools but I think that it's now OK. 

ping @mattpap @damianavila @bokeh/dev 

Still to do:
* [x] replace `noarch` packages for: `flexx`, `pytest-base-url`, and `pytest-selenium`
* [x] rewrite `build_and_upload.sh` as a python script with detailed status and error checks
  - [x] use `conda convert` to create non-`noarch` packages
  - [x] update upload for non-`noarch` packages
  - [x] create and upload examples tarball 

We do need to verify that Bokeh works in venv's still but AFAICT it should now be fine still. ",19,4,['status: accepted']
2487,101568126,5734,3834332,2017-01-14 17:35:14,2017-01-14 18:40:47,closed,pin conda version to 4.2.15,"- [x] issues: fixes #5731
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
2488,101567028,5733,3834332,2017-01-14 16:55:33,2017-01-15 06:37:00,closed,Wire up DataTable for streaming and patching events,"- [x] issues: fixes #5732
- [ ] tests added / passed

",0,1,['status: accepted']
2489,101537146,5730,3834332,2017-01-13 23:49:46,2017-01-17 18:45:47,closed,Use what we need from underscore,"fixes #5729, #4135
",21,97,['status: accepted']
2490,101518856,5727,3834332,2017-01-13 21:18:56,2017-01-17 23:06:46,closed,added tooltip font color to avoid being masked by color:white property from outside css,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5726
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",15,5,['status: accepted']
2491,101472253,5717,3834332,2017-01-13 16:02:43,2017-01-17 16:41:08,closed,Automatically destroying servers in the notebook embed example,"
This PR aims to address one of the issues raised in #3461 regarding the new [notebook embed](https://github.com/bokeh/bokeh/blob/master/examples/howto/server_embed/notebook_embed.ipynb) example, namely the problem of cleaning up servers when cells are deleted/re-executed. The approach shown here has been developed with a lot of helpful input from  @bryevdv.

Right now I would consider this PR to illustrate one possible implementation that can work. It does not track cell deletion/replacement in a particularly elegant way and I am still hoping to find a better approach.

## What it does

When a cell with output from ``show_app`` is deleted or replaced, a callback is fired using ``kernel.execute`` to destroy the corresponding server sessions (and then stop it).

## Approach

1. The ``watch_server_cells`` is called at the top of the notebook. This sets up a ``MutationObserver`` on 'notebook-container' div, allowing it to detect when any DOM nodes with ``class='bokeh_class'`` are deleted. To detect removal of DOM nodes, the ``MutationObserver`` needs to be set on a DOM element holding those nodes (i.e I could not get this working by setting the mutation observer on the cells themselves).

2. Invoking ``show_app`` uses the ``server_cell`` function to wrap the HTML output in a div that holds a freshly generated uuid. This uuid is associated with the server instance in the ``_state.uuid_to_server`` dictionary.

3. When these cells containing the wrapping div (with a class of 'bokeh_class') are deleted, ``kernel.execute`` is used to pass the uuid to ``bokeh.io._destroy_server``. This can then lookup the server instance and perform the necessary clean up.

## Outstanding issues

* Running 'Edit -> Undo Delete Cells' in the notebook menu restores a div associated with a server that will have been destroyed. This is why ``_destroy_server`` can receive a uuid corresponding to a  server that has already been destroyed.
* I don't think the clean up code is actually stopping the server instances properly. After running 'Undo Delete Cells', the app is still responsive! I understand it might be waiting for the tornado event loop to terminate?
* The ``MutationObserver`` is on a DOM node nearer the root than is ideal and the callback is invoked a lot, especially using ``subtree:true``.

It might be worth asking the notebook devs how they would recommend detecting the removal/update of cells. At any rate, I think the prospect of being able to embed the bokeh server in notebook cells is very exciting!",5,15,['status: superseded']
2492,101308162,5713,3834332,2017-01-12 17:49:52,2017-02-16 15:54:10,closed,Add a heuristic for determining when bokeh finished rendering,"To test things locally, it recommend the following command line:
```
py.test -v -s --tb=line --diff-ref master --incremental test_examples.py
```
Details:
- `-v` is necessary to get inline logs
- `-s` is necessary to actually show inline logs
- `--tb=line` reduces clutter in case of failures
- `--diff-ref master` specifies the revision to compare to
- `--incremental` writes report.html after each example

You can use `-m examples` instead of `test_examples.py`, but the former is slower and can show unrelated garbage in the output given `-s` flag.

To filter examples use `-k` option, e.g. `-k 'models and not server'` will select models' file examples.

TODO:

- [ ] ~~improve heuristic for non-plot examples (e.g. `css_classes`, `slider_callback_policy`).~~

fixes #5712 
fixes #5232 
fixes #5254 
fixes #4111
fixes partially #4285",10,86,"['status: accepted', 'MIGRATION']"
2493,101215881,5709,3834332,2017-01-12 08:40:32,2017-01-12 17:23:33,closed,#5691: Fix a typo in LayoutDOM,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5691
- [x] tests added / passed
- [x] release document entry (if new feature or API change). See below

#5691: Fix a typo in LayoutDOM",4,6,['status: accepted']
2494,101205507,5707,3834332,2017-01-12 06:51:16,2017-01-18 00:11:19,closed,removed unnecessary for loop on source data update,"issues: fixes #5699
",4,3,['status: accepted']
2495,101086462,5700,3834332,2017-01-11 15:23:00,2017-01-11 16:21:11,closed,safe-tag-fix,"CoffeeScript variable substitution requires double quotes, not single quotes. 
",4,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
2496,100976394,5698,3834332,2017-01-10 23:41:07,2017-01-11 19:37:23,closed,allow auto for non/selection glyphs,"issues: fixes #2414 

Makes it possible to specify `selection_glyph=None` to mean no policy (i.e. use regular glyph)

Default behaviors are unchanged. ",3,1,['status: accepted']
2497,100906263,5696,3834332,2017-01-10 16:25:54,2017-01-10 17:32:49,closed,Minor fix in palettes documentation,"- [x] issues: fixes #5695
",1,1,['status: accepted']
2498,100891678,5693,3834332,2017-01-10 15:13:05,2017-01-26 23:13:04,closed,Fix several GMap issues,"- [x] issues: fixes #5592 fixes #2822 fixes #4835 fixes #3737

This PR:

* fixes reload issue. Was building map too soon, before div dims were set. Moved call to build map to `_map_hook`. Allowed simplifying API load logic, callback is now just a call to request render

* makes `MapOptions` a proper `Model` and wires up missing plumbing to respond to map options properties changes

* stores initial center and zoom correctly so that reset tool functions properly

There is more to fix, but that can happen in follow on PRs

",11,8,['status: accepted']
2499,100796014,5690,3834332,2017-01-10 01:37:59,2017-01-11 19:32:39,closed,allow arrow heads to contribute clipping regions,"- [x] issues: fixes #4667
- [x] tests added / passed


This test code

```
from bokeh.plotting import figure, output_file, show
from bokeh.models import Arrow, OpenHead, NormalHead, VeeHead

output_file(""foo.html"")

p = figure(plot_width=600, plot_height=600, x_range=(-0.1,1.1), y_range=(-1,6))

p.add_layout(Arrow(start=VeeHead(line_width=1, fill_color=""white""), x_start=0, y_start=2, x_end=1, y_end=5, line_width=10))
p.add_layout(Arrow(start=NormalHead(line_width=1, fill_color=""white""), x_start=0, y_start=0, x_end=1, y_end=0, line_width=10))
p.add_layout(Arrow(start=OpenHead(line_width=1), x_start=0, y_start=1, x_end=1, y_end=2, line_width=10))

show(p)
```

generates

<img width=""628"" alt=""screen shot 2017-01-09 at 7 36 41 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/21790597/10b72d80-d6a3-11e6-8665-5509e0b2d54f.png"">
",5,2,['status: accepted']
2500,100782588,5689,3834332,2017-01-09 23:30:00,2017-01-10 23:01:53,closed,have legends respect marker angle,"- [x] issues: fixes #4694
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Screenshot: 

<img width=""290"" alt=""screen shot 2017-01-09 at 5 28 37 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/21787858/268a6fc6-d691-11e6-96fb-06ebb1f5b6c2.png"">",0,1,['status: accepted']
2501,100780521,5688,3834332,2017-01-09 23:15:11,2017-01-10 19:58:23,closed,limit heavyweight imports to only when used,"- [x] issues: fixes #5060
- [x] tests added / passed

Open to suggestions for more places to remove or testing strategies",3,1,['status: accepted']
2502,100746189,5686,3834332,2017-01-09 19:35:20,2017-01-09 20:27:38,closed,Only upload one sdist to pypi,issues: fixes #5683,0,1,['status: accepted']
2503,100745615,5685,3834332,2017-01-09 19:32:01,2017-01-09 20:24:13,closed,Remember to commit CHANGELOG on deploy,issues: fixes #5678,0,1,['status: accepted']
2504,100744466,5684,3834332,2017-01-09 19:24:58,2017-01-09 20:23:43,closed,Remove invalid classifier,issues: fixes #5682,0,1,['status: accepted']
2505,100602040,5672,3834332,2017-01-08 13:13:12,2017-01-10 17:33:08,closed,Remove old deprecations,"- [x] removed deprecations since 0.11.x
- [x] removed deprecations since 0.12.0

fixes #5664",9,10,['status: accepted']
2506,100599482,5671,3834332,2017-01-08 11:20:06,2017-01-09 22:03:13,closed,Use custom code instead of gulp-mocha for running tests,"gulp-mocha doesn't work and is unmaintained, so just use `child_process.spawn()` and run mocha natively.

fixes #5659
",1,1,['status: accepted']
2507,100582582,5669,3834332,2017-01-07 21:18:04,2017-01-23 22:17:40,closed,fix Rect rendering with log axis,"This PR is to make the Rect glyph behave better when used with log axes. 

Previously, Rect rendering relied on mapping the center point (x, y) to screen space and then rendering a rectangle with the top left corner point (sx - sw/2, sy - sh/2) and a width and height of sw and sh (mapped from w, h). This is a problem for log axis where the center point of the rectangle is not exactly in the center in screen space. 

This PR fixes this by computing the top left corner point in data space, then mapping that point to screen space, and using that mapped point for rendering.

I added some tests, but then realized we need a screenshot test here. Also, hit-testing is not working exactly right yet (because it also uses sw/2 and sh/2). 

- [x] issues: fixes #5336
- [x] tests added / passed
~~- [ ] release document entry (if new feature or API change)~~
- [x] fix hit-testing for log axis
- [x] add screenshot test",36,12,['status: accepted']
2508,100575827,5667,3834332,2017-01-07 17:39:41,2017-01-09 15:59:39,closed,Use <div> instead of <button> for tool buttons,"fixes #5661
",10,4,['status: accepted']
2509,100315586,5657,3834332,2017-01-05 16:05:00,2017-01-05 16:40:58,closed,#5655 ResizeTool: new_height should be based on @ch not @cw,"- [x] issues: fixes #5655
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

#5587: Fixed an issue where ResizeTool would use the width to compute the height",2,3,['status: accepted']
2510,100194091,5654,3834332,2017-01-04 21:43:50,2017-01-09 16:13:13,closed,Misc docs and tests for 0.12.4 release," issues: fixes #4877

",2,10,['status: accepted']
2511,99968214,5650,3834332,2017-01-03 15:10:02,2017-01-03 17:46:55,closed,Show node/npm version numbers in `bokeh info`,"fixes #5649 
",4,5,['status: accepted']
2512,99932187,5647,3834332,2017-01-03 10:10:47,2017-01-11 19:39:14,closed,Make the default hover tooltip work for Donut charts.,"Also fix a typo in the documentation for these options.

Related to issue #3621, though doesn't address every aspect discussed there.",5,1,"['status: accepted', 'type: task', 'reso: completed']"
2513,99931046,5646,3834332,2017-01-03 10:01:09,2017-01-03 14:53:39,closed,Use proc.returncode to detect failed node/npm run,"fixes #5645
",0,1,['status: accepted']
2514,99796589,5643,3834332,2016-12-31 03:40:54,2017-01-03 17:28:13,closed,Refactor bokeh.core.properties to support better documentation,"issues: closes #5626 

This is an WIP PR for some early feedback @mattpap @havocp @pzwang @philippjfr (anyone who has a little time to comment). 

This PR:

* keeps all existing tests passing
* makes everything that is actually a python descriptor be called ""descriptor"" in some way, and makes anything that is not a python descriptor not be called a descriptor
* now makes it easy to explain: properties are things that create descriptor for themselves (that delegate back to the property for validation, etc.).  HasProps is the thing that coordinates using properties to add those descriptors to classes.
* splits the enormous `bokeh.core.properties` module and also moves other related super low level modules into a `property` dir:
  - `bokeh.core.property.bases`
  - `bokeh.core.property.container`
  - `bokeh.core.property.descriptors`
  - `bokeh.core.property.factory`
  - `bokeh.core.property.override`
* everything left in `properties.py` is jsut the stuff users writing extensions might care typically about

Here is the relevant portion of the class hierarchy:

![classes_bokeh](https://cloud.githubusercontent.com/assets/1078448/21575608/d599695c-ced7-11e6-8098-4c00165e35c1.png)

This seems fairly reasonable to me and makes much more sense.

More importantly, here is the module dependencies:

![packages_bokeh](https://cloud.githubusercontent.com/assets/1078448/21575610/e82cf6ba-ced7-11e6-82d1-ff4cc6485ce2.png)

Note that all arrows point in the same direction (there is one circular internal dependency that does not seem to show up here) I am sure this could still be improved, suggestions very welcome. 

Things still to do:

* add a ton of docs
* get all of `bokeh.core` up to 100% coverage
* find a way to move `_sphinx_type` off the classes
",11,2,['status: accepted']
2515,99744543,5642,3834332,2016-12-30 11:40:09,2017-01-03 17:26:53,closed,GeoJSONDataSource no longer inherits from ColumnDataSource,"As described in https://github.com/bokeh/bokeh/issues/5636, the GeoJSONDataSource has various issues associated with syncing the dynamically computed ``data`` property. This was not an issue previously because before #5544 the ``data`` never ended up roundtripping for reasons that are not quite obvious to me. However I have confirmed that this is not the result of a new issue in the serialization and deserialization introduced by the binary protocol. It seems to be the case that when the JS code sends the unpacked columnar data to Python ‘Nan’ values get interpreted as Nones, and do not get reinterpreted as NaNs on the roundtrip. This might be worth investigating separately.

This PR makes sure that ``GeoJSONDataSource`` no longer directly inherits directly from ``ColumnDataSource``, which means it does not inherit the ``data`` property. On the Python end this is very straightforward because all that has to be sent to the frontend is the geojson representation itself. However on the JS end the ``GeoJSONDataSource`` does have to mirror the ColumnDataSource API without exposing a publicly accessible ``data`` attribute. Therefore I have introduced an intermediate ``ColumnarDataSource`` class, which both the ``ColumnDataSource`` and the ``GeoJSONDataSource`` can inherit from. The PR also avoids the ``Glyph refers to nonexistent column name: xs, ys`` which was generated previously.",24,6,['status: accepted']
2516,99732343,5641,3834332,2016-12-30 08:43:20,2017-01-10 15:32:51,closed,Add default_server_port to server_kwargs,"Fixes the issue with ""None"" reported by Bokeh server. I apologize in advance if the PR is not made as intended.

- [x] issues: fixes #5629 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,6,['status: accepted']
2517,99727674,5639,3834332,2016-12-30 07:13:19,2017-02-04 17:59:56,closed,corrected README for location of Jupyter chart examples,"Issue created at #5638

trivial adjustment to README.md file
",6,3,['status: accepted']
2518,99724425,5637,3834332,2016-12-30 05:58:11,2016-12-30 17:52:03,closed,Overhaul bokeh.core docs,"issues: fixes #5627 

This PR splits the overly long docs page for `bokeh.core` up into individual pages for each module [*]. It also adds expanded and complete docstrings for all public and private functions, with the exception of:

* `bokeh.compat` I have described this as unmaintained until MEP25, and have also removed the directory from the test reporting

* `bokeh.properties` A follow on PR is planned to move low level things into `property_bases.py` and will update the docs then. 

This PR also:

* removes the `encoder` argument to `serialize_json` as it was unused
* removes `bokeh.core.validation.exceptions` which was unused. 
* fixes a small bug in `export_csv` app example

[*] slight fib, the `bokeh.validation` package is documented as if it was a single module (which it probably should be)",2,1,['status: accepted']
2519,99682640,5633,3834332,2016-12-29 18:02:30,2016-12-29 18:02:35,closed,Update .travis.yml,"missing `--yes` hangs dev release build
",0,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: build']"
2520,99678480,5631,3834332,2016-12-29 17:16:35,2016-12-29 17:17:04,closed,pin build job to py3.4,"Failed to notice `.travis.yml` build job was pinned also to python 2.7, when fabric3 PR went in",0,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: build']"
2521,99672448,5630,3834332,2016-12-29 16:17:06,2017-01-13 19:46:13,closed,Drop jquery from core bokehjs,"fixes #5625, #5670",13,79,['status: accepted']
2522,99517975,5624,3834332,2016-12-28 07:37:21,2017-05-03 21:37:42,closed,Render labels as HTML,"There's no need for raw text labels for form elements here, afaik. On
the other hand there are a lot of reasonable reasons to want to use HTML
tags in labels, for example adding a link or a help dialog widget.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5623
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: declined']
2523,99516547,5622,3834332,2016-12-28 07:15:48,2017-01-11 23:34:14,closed,Updating versioneer to 0.17+,"First cut, still need to check local changes. Somehow windows is expanding `""*""` as a glob in `subprocess.Popen([.., ""*"", ..], shell=False)`, I'm hoping its just an issue with my environment setup 😦 .

Rebuilt versioneer using latest version, which has some windows
compatibility fixes and so forth. The main migration is moving
configuration for versioneer from `setup.py` to `setup.cfg`.

All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5613 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",15,7,['status: accepted']
2524,99506666,5621,3834332,2016-12-28 04:09:52,2017-03-02 20:51:59,closed,Add custom extensions for autocompletion widgets,"**Not ready to merge.** Just an initial kind of working attempt at replacing autocomplete widget. Please let me know if the scope of this change looks okay, for example since the `textext` and `tokeninput` extensions are currently non-functional, I can drop them out or spend a bit more time seeing if they can be made to work. There are several other issues mentioned in the TODOs.

The existing jquery-ui based autocompletion widget is non-functional (at
the very least, no css is loaded for the dropdown menu etc). These
custom extensions implement several variations of an autocompletion
widget, using a few of the many available libraries (jquery-ui,
awesomplete, jquery-textext, jquery-tokeninput), as well as a demo app
that can be served by bokeh server.



The jquery-ui and awesomplete extensions are roughly functional, the
textext and tokeninput are just proofs of concept and are effectively
non-functional currently.

- [x] issues: fixes #5596
- [ ] tests added / passed: N/A?
- [ ] release document entry (if new feature or API change)
",5,2,['status: declined']
2525,99490288,5620,3834332,2016-12-27 22:41:07,2017-01-01 23:36:32,closed,Calculate bounds correctly for log axis,"This PR is to fix bugs that are caused when plotting data on a log scale when some of the data values are <= 0. To correctly calculate the minimum and maximum data values that can be plotted in a log axis, you have to take the min and max of only the positive values. Currently, there isn't any way for a range to know what the `min(data[data > 0])` because the ranges are passed `bounds` which contain `min(data)` and `max(data)`. The approach that I took to fix this in this PR was to add a new method `log_bounds` to the `GlyphView` in analogy to the `bounds` method that returns `minX`, `minY`, `maxX`, `maxY` values are determined based on positive values of x and y. Then the `log_bounds` can be passed to the range for a log axis instead of the `bounds`.

- [x] issues: fixes #5549
- [x] tests added / passed
~~- [ ] release document entry (if new feature or API change)~~
- [x] using glyph-specific `_bounds` in the `log_bounds` method
- [x] turn `_mapper_type` into  public `mapper_hint`

(I'm not sure if adding a method on GlyphView is an API change?)
",7,11,['status: accepted']
2526,99481431,5619,3834332,2016-12-27 20:39:40,2016-12-27 22:33:20,closed,Improve palettes docs and docs automation,"* re-purpose `bokeh-palette` to display single palettes inline
* add `bokeh-palette` group to display groups of palette matrices
* add `:noindex:` option to `bokeh-enum`
* add complete docstrings to `bokeh.palettes`
* streamline property creation in `bokeh.palettes`

Regarding the last, it adds a little magic, in this instance I'd very much like the palettes to be expressed as near as possible to ""just the data"" without alot of dressing around them. 




",5,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'MIGRATION']"
2527,99422193,5616,3834332,2016-12-27 09:11:09,2016-12-28 21:02:15,closed,Make use of Fabric3,"Since Bokeh is moving towards Python3, it would make sense to use Python 3 fork of Fabric.

Reference Conversation: https://github.com/bokeh/bokeh/issues/5557

- [x] issues: fixes #5557 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,2,['status: accepted']
2528,99409542,5615,3834332,2016-12-27 06:20:20,2016-12-27 15:15:59,closed,Deserialize a deque as a JSON list.,Fixes issue #4918. I didn't make a changelog entry because I didn't see a heading for version 0.12.4 and I wasn't sure what to do.,1,1,['status: accepted']
2529,99394749,5614,3834332,2016-12-26 23:47:04,2017-01-02 20:07:54,closed,Resolve overlapping histogram bars (#3315),"Trivial fix that skips rounding of `center` position strings.

- [x] issues: fixes #3315
- [x] tests passed
",4,2,['status: accepted']
2530,99369014,5612,3834332,2016-12-26 13:09:32,2016-12-27 14:54:50,closed,Columndatasource autoconvert,"Many times, we want to pass a data structure to a plotting function as
a data source. To do so, an explicit conversion is required. Often, the
converted object does not serve any purpose, except for the conversion
itself. This commit adds auto-conversion to reduce boilerplate code.

Reference conversation: https://github.com/bokeh/bokeh/issues/5578

- fixes #5578 
- 2 tests added and  passed

",2,4,['status: accepted']
2531,99279121,5610,3834332,2016-12-23 20:28:41,2016-12-24 17:16:17,closed,"Remove autoadd, autosave and autopush","Apparently all those were no-ops. 

fixes #5609 
",0,1,['status: accepted']
2532,99166016,5608,3834332,2016-12-22 20:35:17,2016-12-22 21:28:35,closed,Add VBar and HBar glyphs to chart.py,"issues: fixes #5607 
",0,1,['status: accepted']
2533,99165222,5606,3834332,2016-12-22 20:28:46,2016-12-27 20:57:11,closed,Various small docs updates for 0.12.4," issues: fixes #3931 fixes #4778 fixes #5595 fixes #4991 fixes #5602
",1,8,['status: accepted']
2534,99136013,5605,3834332,2016-12-22 16:53:17,2016-12-22 18:38:02,closed,Don't inherit __future__ flags in compile(),"Apparently `__future__` flags (imports) from the parent environment (so `code_runner.py`) are forwarded to `compile()`. There exists `dont_inherit` boolean argument that doesn't allow that. I tested this manually, but we may want to write tests for this some how. It's sufficient to test for `exec(""print 'XXX'"")`, but I'm not sure what to do about Python 3. 

fixes #5590
",1,2,['status: accepted']
2535,99130613,5603,3834332,2016-12-22 16:20:02,2016-12-24 17:21:51,closed,Fix autoload templates to inject data into JS templates properly,"Previously we relied on Python's `str()` returning valid JS. Sometimes it actually and very deceptively does.

fixes #5558",3,3,['status: accepted']
2536,98975207,5600,3834332,2016-12-21 17:40:52,2016-12-22 22:17:46,closed,Custom context arguments for the jinja template,"With this you can use something like:
```
curdoc().template_variables['myvariable'] = '42'
```
And add `{{ myvariable }}` to the `index.html`.

I wasn't quite sure if `Document.template_variables` needs a setter as well. Thoughts?

fixes #5583",7,7,['status: accepted']
2537,98608002,5588,3834332,2016-12-19 17:38:04,2016-12-19 18:56:11,closed,#5587: Fixed a NumberSpec typo,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5587
- [x] tests added / passed: Not required
- [x] release document entry (if new feature or API change)

#5587: Fixed a typo in MultiLine docstring
",2,1,['status: accepted']
2538,98607471,5586,3834332,2016-12-19 17:34:29,2016-12-20 19:51:54,closed,Add support for readonly properties,"fixes #5199, #5585",5,10,['status: accepted']
2539,98420720,5580,3834332,2016-12-16 23:39:09,2016-12-20 15:56:00,closed,Adding size attribute to MultiSelect model,"Closes #5579

* Adds size attribute to MultiSelect model
* Small note in docs about BOKEH_MINIFIED env var, as it took me a while to figure out how to directly use the unminified JS.",6,3,['status: accepted']
2540,98301386,5577,3834332,2016-12-16 09:21:43,2016-12-16 17:28:18,closed,Return stable value from ColumnDataSource.get_length(),"fixes #525
",1,1,['status: accepted']
2541,98227741,5574,3834332,2016-12-15 20:45:50,2016-12-15 22:36:36,closed,Remove nbextensions,"Alternative to #5567, let see how it goes...",10,5,['status: declined']
2542,98204581,5573,3834332,2016-12-15 18:26:07,2016-12-20 16:33:31,closed,Make custom models work in Notebook again,fixes #5591 ,3,1,['status: accepted']
2543,98202554,5571,3834332,2016-12-15 18:13:04,2016-12-15 18:52:56,closed,Don't use FINALIZE_JS if hide_banner is True,"This was revealed after PR #5533. Switching from jquery to less forgiving APIs is definitively step in right direction.

fixes #5570 


",1,1,['status: accepted']
2544,98148412,5569,3834332,2016-12-15 13:15:36,2016-12-19 10:44:43,closed,Upgrade jsdom,fixes #5568,4,3,['status: accepted']
2545,98042254,5567,3834332,2016-12-14 21:45:55,2016-12-15 23:17:22,closed,explicitly kill stray processes on travis,"

",9,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2546,98041600,5566,3834332,2016-12-14 21:42:27,2016-12-14 21:42:30,closed,"Revert ""Try sudo=true for travis ci problem""",Reverts bokeh/bokeh#5565,0,1,"['status: declined', 'type: task', 'tag: component: build']"
2547,98023021,5565,3834332,2016-12-14 19:50:54,2016-12-14 21:41:20,closed,Try sudo=true for travis ci problem,"
",2,5,"['status: declined', 'type: task', 'tag: component: build']"
2548,98000414,5564,3834332,2016-12-14 17:40:52,2016-12-14 19:26:54,closed,"Deprecate ImageRGBA.{rows,cols}",fixes #5562,1,2,['status: accepted']
2549,97895637,5561,3834332,2016-12-14 06:41:27,2016-12-19 20:03:56,closed,hotfix for data<=0 in log axes,"Changing the way log ranges compute their `start` and `end` values in PR [5477](https://github.com/bokeh/bokeh/pull/5477) introduced a bug where plot bounds cannot be computed if there are values <= 0 in the data. 

This first commit is a hotfix and results in (check related issue #5549 for test code):
![image](https://cloud.githubusercontent.com/assets/4241244/21171912/e5fe2104-c183-11e6-8245-d53da7ec4f9f.png)
for `values = np.linspace(-0.1, 10, 21)`

and
![image](https://cloud.githubusercontent.com/assets/4241244/21171928/ff8191ba-c183-11e6-855b-86b66ec50d51.png)
for `values = np.linspace(-0.1, 0.9, 21)`

The reason the second one looks worse than the first is because the maximum value is less than the hotfixed minimum value of 1. Line plots where there is a value of 0 in the log axis also show lines pointing to -Infinity. 

I can add on to this PR once I've figured out a better solution (there's a comment in related issue #5549 about what would be necessary), or start another PR if this new bug needs a fast fix. 


EDIT: I created a new issue #5576 that is fixed by this PR. Addressing #5549 will take some more investigation and I won't have that much time in the next couple days. After this PR the plots generated by the test code in #5576 are restored to their original (semi-broken) selves. 

- [x] issues: fixes #5576
- [x] tests added / passed

",6,5,['status: accepted']
2550,97858002,5556,3834332,2016-12-13 23:29:26,2016-12-14 16:28:49,closed,Fix bokehjs' examples,"Next logical step is to add support for bokehjs examples' test automation.

fixes #5555
",1,1,['status: accepted']
2551,97856452,5554,3834332,2016-12-13 23:17:23,2016-12-14 17:06:01,closed,Enable custom models examples' automation,"fixes #5553
",3,1,['status: accepted']
2552,97854949,5552,3834332,2016-12-13 23:06:39,2016-12-14 16:29:13,closed,Fix up running selenium tests locally,Fixes: #5560,0,7,['status: accepted']
2553,97836685,5551,3834332,2016-12-13 21:14:15,2016-12-14 00:22:42,closed,Update travis.yml,"Fixes: #4785 

- use saucelabs add on (as opposed to doing it ourself)
- switch to matrix include (allows for easy targeted use of saucelabs addon)
- clean-up file in general to hopefully make it easier to read",1,11,['status: accepted']
2554,97801853,5547,3834332,2016-12-13 17:52:29,2016-12-13 20:03:31,closed,fix JS logic for CDS col lengths check,"- [x] issues: fixes #5546
- [x] tests added / passed

",3,2,['status: accepted']
2555,97780773,5545,3834332,2016-12-13 16:06:25,2017-03-20 10:05:07,closed,Add support for namespace models,"fixes #3674
",3,2,['status: declined']
2556,97759742,5544,3834332,2016-12-13 14:21:27,2016-12-29 16:28:17,closed,Base64 serialization,"Reopened PR #5504 as bokeh/bokeh branch to allow running image diffs. This PR implements some of the suggestions in https://github.com/bokeh/bokeh/issues/2204. In further discussion and initial testing (see https://github.com/bokeh/bokeh/pull/5429) we found that simple base64 encoding offers huge performance gains compared to the current implementation. A more complex binary json format is therefore not necessary at this time.

## Motivation

Currently sending large arrays to the browser can take a very long time, particularly when sending relatively large images. This is because all data is sent as raw strings, which is highly inefficient both in terms of size of the data that has to be sent to the frontend and in terms of processing because both backend and frontend iterate over the arrays to validate them. For a simple 2x2 image column data source the JSON representation would previously have looked like this:

```
{'image': [[[0.19593542932534513, 0.8104239473495675], [0.3907588555073921, 0.15267810064366616]]]}
```

the new JSON representation looks as follows:

```
{'image': [{'data': 'yKTPhb3b2j/Qy4BxlXzvP1bfkgIid9Q/kz0MlC4F4T8=', shape: [2,2], dtype: 'float64'}]}
```

In the case of a 2000x2000 image it took up to 30 seconds to serialize and send the image. Through initial investigation we found that simple base64 encoding of arrays can result in huge performance gains for sending array data via web sockets. Overall this has the potential to bring 10-50x improvements in sending large arrays via the comms in the notebook and will also offer some more limited improvements for bokeh server.

## Design

1. The encoding should happen as a last step during serialization on the Python end and as the first step after deserialization on the JS end, ensuring no other code has to deal with base64 encoded data avoiding any backward compatibility issues.
2. The data should be wrapped in a simple JS object along ith the shape and type information. A dedicated model might be considered in future but is not necessary.
3. The column data source on the fronted will unpack and store the shape information on the _shapes attribute.
4. The encoding behavior should be configurable, e.g. do not encode unless the array is larger than a configurable size.
5. All numeric column data source data should potentially be encoded, i.e. both 1-D and 2-D arrays.

## Caveats

Currently this PR will correctly encode and decode any numerical types except for numpy int64 arrays. Since there is no native 64-bit integer type in Javascript (internally ints are handled as double precision floats where the maximum safe integer is 2**53), we cannot directly encode and decode 64-bit integer data. Using the npm ``int64-buffer`` package I managed to decode an ``int64`` ArrayBuffer but the advantages and disadvantages of various approaches should be evaluated in a subsequent PR:

```coffeescript
view = new Int32Array(bytes)
array = []
for i in [0...view.length/2]
  int = new Int64LE(view.buffer.slice(i*8,(i+1)*8))
  array.push(int)
```

## To-Do

- [x] Add configurable options ``BOKEH_USE_BINARY_ARRAYS`` and ``BOKEH_BINARY_ARRAY_CUTOFF`` and document them
- [x] Add server and client side decoding and encoding
- [x] Handle patch events
- [x] Handle stream events
- [ ] Ensure current tests pass and add extensive tests
- [ ] Add release document entry (if new feature or API change)

",58,77,['status: accepted']
2557,97623308,5543,3834332,2016-12-12 20:05:23,2016-12-13 01:52:09,closed,disable conda nb extension on travis,"issues: fixes #5375
",13,4,['status: ready']
2558,97603191,5542,3834332,2016-12-12 18:04:49,2016-12-12 21:07:38,closed,have Color convert tuples to css rgb(a) values),"- [x] issues: fixes #5324
- [x] tests added / passed

The following code
```
import numpy as np
from bokeh.plotting import figure, output_file, show
from bokeh.models import LinearColorMapper, ColumnDataSource
from bokeh.palettes import viridis

x = np.linspace(0, 1, 100)
z = np.linspace(0, 1, 100)
z[40:45] = np.NaN

p = figure(plot_width=800, plot_height=400)

source= ColumnDataSource(data=dict(x=x, z=z))
cmapper = LinearColorMapper(viridis(256), low=0.25, high=0.75, nan_color='#ff33dd',
                            low_color='grey', high_color=(100, 100, 255, 0.3))
p.scatter(x='x', y=1, size=10, color={'field': 'z', 'transform': cmapper}, source=source)

output_file(""foo.html"")

show(p)
```

Generates the output:

<img width=""871"" alt=""screen shot 2016-12-12 at 12 04 23 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/21110522/2307d6f2-c063-11e6-9d67-6ade38d9453c.png"">

",3,1,['status: accepted']
2559,97579191,5540,3834332,2016-12-12 15:58:28,2016-12-12 18:09:19,closed,Fix #5524: fix --num-procs following Bokeh server refactor,I gave up writing a test for this because it appears Tornado's bult-in process-forking is fragile and can leave processes around: https://github.com/tornadoweb/tornado/issues/1912,8,2,['status: accepted']
2560,97464904,5537,3834332,2016-12-11 16:57:46,2016-12-12 19:39:35,closed,Drop BackboneView.$,"fixes #5536
",1,3,['status: accepted']
2561,97433331,5535,3834332,2016-12-10 18:25:46,2016-12-10 19:04:56,closed,use io.open with encoding whenever file writing by hand," issues: fixes #5306


Went ahead and updated all the examples that did an explicit `open` and `write`",1,1,['status: accepted']
2562,97432895,5534,3834332,2016-12-10 18:09:59,2016-12-11 01:44:11,closed,merge gridplot tools in nested cases,"
- [x] issues: fixes #5479
- [x] tests added / passed

",1,1,['status: ready']
2563,97429424,5533,3834332,2016-12-10 16:06:06,2016-12-12 16:35:35,closed,Deprecate Bokeh.$ and Bokeh._,"fixes #5532
",1,5,['status: accepted']
2564,97393659,5531,3834332,2016-12-09 22:45:44,2016-12-09 23:08:39,closed,get fonts to load properly on IE11," issues: fixes #5522 

Solves the problem for real. c.f. http://bokeh.pydata.org/en/test/ on Win7 IE11

Also:

<img width=""1533"" alt=""screen shot 2016-12-09 at 4 44 24 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/21067125/e9ff4e5c-be2e-11e6-9896-2d351b674b08.png"">



",0,1,['status: accepted']
2565,97371602,5529,3834332,2016-12-09 20:05:50,2016-12-09 20:30:20,closed,Get IE docs page rendering correctly,"issues: fixes #5522

",1,1,['status: accepted']
2566,97354990,5527,3834332,2016-12-09 18:12:59,2016-12-09 20:08:07,closed,fixups for some versions if IE11,"issues: fixes #5526

This is hard for me to test on different windows VMs from dev. I tested that `image.py` `image_url.py` and `color_data_map.py` work on Win7 + IE 11. I'd like to merge this and make a dev build, which will be much easier to test. 

ping @bokeh/dev ",1,1,['status: accepted']
2567,97328370,5525,3834332,2016-12-09 15:30:42,2016-12-12 18:38:15,closed,Replace Icon (font-awesome) with an example,"Based on issue #5513. I created an example instead, because we don't have yet any infrastructure for maintaining extensions. However, it will be trivial to create one when we are ready. This also adds support for resolving dependencies with npm. Just note this is not fully though through, so many cases may not work, though resolving external less files (font-awesome) works perfectly. 

fixes #5513 
",7,8,['status: accepted']
2568,96971108,5517,3834332,2016-12-07 17:34:07,2016-12-07 18:49:43,closed,small fixups to make sphinx 1.5 work,"Sphinx 1.5 seems to more aggresively try to automatically create ref
targets. Two issues resulted in duplicate targets causing a build error",9,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2569,96964722,5516,3834332,2016-12-07 17:01:57,2016-12-09 15:24:02,closed,Make location/anchor naming consistent (and add aliases),"fixes #5292

",3,3,"['status: ready', 'status: accepted']"
2570,96951748,5515,3834332,2016-12-07 15:59:46,2016-12-07 19:10:21,closed,Reduce bootstrap's size,"All that's left is what we use.

fixes #5514 ",1,5,['status: accepted']
2571,96943971,5512,3834332,2016-12-07 15:23:02,2016-12-08 16:15:05,closed,Fix #5492: expose and print actual port number,"This makes the Server more usable when port=0 is passed.
Based on PR #5511.

- [x] issues: fixes #5492
- [x] tests added / passed
",3,6,['status: accepted']
2572,96930362,5511,3834332,2016-12-07 14:12:13,2016-12-07 21:40:47,closed,Fix #5493: avoid calling sys.exit from library code,"- [x] issues: fixes #5493
- [x] tests added / passed

",6,4,['status: accepted']
2573,96761544,5508,3834332,2016-12-06 16:48:02,2016-12-06 23:19:54,closed,Use native methods instead of underscore,"Quick clean up. A lot more could be done, but those changes may be a lot more subtle than these. Note that compatibility isn't an issue, because all browsers and IE 9+ support these methods.

fixes #5507 
",2,12,['status: accepted']
2574,96597800,5505,3834332,2016-12-05 19:56:04,2016-12-07 18:50:06,closed,Fix #5494: make Tornado server library-friendly,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #5494
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

",10,9,['status: accepted']
2575,96439605,5504,3834332,2016-12-04 17:35:15,2016-12-13 14:16:24,closed,Base64 serialization,"This PR implements some of the suggestions in https://github.com/bokeh/bokeh/issues/2204. In further discussion and initial testing (see https://github.com/bokeh/bokeh/pull/5429) we found that simple base64 encoding offers huge performance gains compared to the current implementation. A more complex binary json format is therefore not necessary at this time.

## Motivation

Currently sending large arrays to the browser can take a very long time, particularly when sending relatively large images. This is because all data is sent as raw strings, which is highly inefficient both in terms of size of the data that has to be sent to the frontend and in terms of processing because both backend and frontend iterate over the arrays to validate them. For a simple 2x2 image column data source the JSON representation would previously have looked like this:

```
{'image': [[[0.19593542932534513, 0.8104239473495675], [0.3907588555073921, 0.15267810064366616]]]}
```

the new JSON representation looks as follows:

```
{'image': [{'data': 'yKTPhb3b2j/Qy4BxlXzvP1bfkgIid9Q/kz0MlC4F4T8=', shape: [2,2], dtype: 'float64'}]}
```

In the case of a 2000x2000 image it took up to 30 seconds to serialize and send the image. Through initial investigation we found that simple base64 encoding of arrays can result in huge performance gains for sending array data via web sockets. Overall this has the potential to bring 10-50x improvements in sending large arrays via the comms in the notebook and will also offer some more limited improvements for bokeh server.

## Design

1. The encoding should happen as a last step during serialization on the Python end and as the first step after deserialization on the JS end, ensuring no other code has to deal with base64 encoded data avoiding any backward compatibility issues.
2. The data should be wrapped in a simple JS object along ith the shape and type information. A dedicated model might be considered in future but is not necessary.
3. The column data source on the fronted will unpack and store the shape information on the _shapes attribute.
4. The encoding behavior should be configurable, e.g. do not encode unless the array is larger than a configurable size.
5. All numeric column data source data should potentially be encoded, i.e. both 1-D and 2-D arrays.

## Caveats

Currently this PR will correctly encode and decode any numerical types except for numpy int64 arrays. Since there is no native 64-bit integer type in Javascript (internally ints are handled as double precision floats where the maximum safe integer is 2**53), we cannot directly encode and decode 64-bit integer data. Using the npm ``int64-buffer`` package I managed to decode an ``int64`` ArrayBuffer but the advantages and disadvantages of various approaches should be evaluated in a subsequent PR:

```coffeescript
view = new Int32Array(bytes)
array = []
for i in [0...view.length/2]
  int = new Int64LE(view.buffer.slice(i*8,(i+1)*8))
  array.push(int)
```

## To-Do

- [x] Add configurable options ``BOKEH_USE_BINARY_ARRAYS`` and ``BOKEH_BINARY_ARRAY_CUTOFF``
- [ ] Handle patch events
- [ ] Handle stream events
- [ ] Ensure current tests pass and add extensive tests
- [ ] Add release document entry (if new feature or API change)
- [x] Document environment variables",12,16,['status: superseded']
2576,96327719,5503,3834332,2016-12-02 18:20:30,2016-12-05 21:55:55,closed,Add support for specifying CSS classes on all LayoutDOM,"- [x] issues: fixes #5471
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Adds .css_classes property to LayoutDOM, which accepts a sequence of strings. These are added as-is to the LayoutDOM element.",6,2,['status: accepted']
2577,95984181,5498,3834332,2016-11-30 22:09:45,2016-12-05 19:02:54,closed,Add Model.js_on_change method,"- [x] issues: fixes #5435
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Allows to add a CustomJS callback to any backbone event. As a convenience, if the event name is the same as one of the model properties, the event `""change:prop_name""` is generated instead.",7,1,['status: accepted']
2578,95605455,5491,3834332,2016-11-29 00:42:22,2016-11-30 19:47:30,closed,Include Greys256 in Palettes enumeration,"fixes #5490
",4,2,['status: accepted']
2579,95553205,5487,3834332,2016-11-28 18:35:50,2016-11-28 21:48:10,closed,small docs fixes,"issues: closes #5384 closes #5382 closes #5190 closes #5403
",0,6,['status: accepted']
2580,95378897,5486,3834332,2016-11-26 18:26:14,2016-11-27 19:54:52,closed,Pass keyword arguments through Serve,"This helps with the manual creation of a Bokeh Server with a predefined Tornado IOLoop.  We pass a few keyword arguments through `invoke` and return the server object.  This enables the following example:

```python
In [1]: from tornado.ioloop import IOLoop

In [2]: loop = IOLoop()

In [3]: import argparse
   ...: argv = ['bokeh', 'examples/app/crossfilter']
   ...: parser = argparse.ArgumentParser(prog=argv[0])
   ...: from bokeh.command.subcommands.serve import Serve
   ...: serve = Serve(parser)
   ...: args = parser.parse_args(argv[1:])
   ...: server = serve.invoke(args, start_loop=False)
   ...: 
2016-11-26 13:25:39,015 Starting Bokeh server version 0.12.3dev4-283-g0db3db9-dirty
2016-11-26 13:25:39,017 Starting Bokeh server on port 5006 with applications at paths ['/crossfilter']
2016-11-26 13:25:39,018 Starting Bokeh server with process id: 15055

In [4]: server.io_loop is loop
Out[4]: True

In [5]: server.io_loop._running
Out[5]: False

In [6]: server.io_loop.start()  # everything works fine
```",3,2,['status: declined']
2581,95084966,5484,3834332,2016-11-23 21:51:03,2016-11-27 20:19:14,closed,"WIP, ENH: Deselect previously selected objects on second selection","Fixes https://github.com/bokeh/bokeh/issues/2326

This should allow things like `Shift+Click`-ing on an object twice to add and then remove it from the selected group. Of course, a third click should reselect them. Currently clicking on any object that is already selected is a no-op.

cc @bryevdv",4,1,['status: declined']
2582,94607435,5482,3834332,2016-11-21 12:38:38,2016-11-28 17:23:00,closed,Replace lists with slices in qualitative brewer palettes,"This address #5376, but only the python code https://github.com/bokeh/bokeh/blob/master/bokeh/palettes.py.  I am less familiar with JavaScript so I did not edit the coffee code, https://github.com/bokeh/bokeh/blob/master/bokehjs/src/coffee/api/palettes.ts.  I expect that could be changed as well to provide a cleaner implementation.

- [ ] issues: fixes #5376 
- [ ] tests passed


",11,11,['status: accepted']
2583,94571859,5481,3834332,2016-11-21 08:30:32,2016-12-02 16:39:51,closed,Adding custom HTML classes to Bokeh layouts,"This example addresses the issue until proper support is added to Bokeh.

No internal Bokeh changes are made, only demonstration example 

- [1 ] issues: #5471
",1,2,['status: declined']
2584,94568380,5480,3834332,2016-11-21 07:56:23,2016-12-10 18:10:16,closed,Making gridplot work properly when complex layouts (Row/Column) added…,"- Fixes #5479
",6,2,['status: superseded']
2585,94530126,5478,3834332,2016-11-20 20:00:31,2016-11-20 20:36:24,closed,Wrap long error output correctly,"- [ ] issues: fixes #5322

Adds `overflow-x: auto;` style to messages generated by `safely.coffee`

New output:

<img width=""1069"" alt=""screen shot 2016-11-20 at 1 58 13 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/20465716/ad9b7850-af29-11e6-9469-a7db439151b9.png"">
",1,1,['status: accepted']
2586,94506667,5477,3834332,2016-11-20 04:20:09,2016-12-12 17:24:08,closed,Fix for log scale plotting bug,"This PR is for fixing a bug in log plotting, where plots are empty or where axes use incorrect initial ranges under some circumstances (related to the minimum and maximum value of the data and the `range_padding`). This bug is caused when a DataRange1d determines that its `start` should be a negative value. This can happen even when all the data are positive values (necessary to be shown on a log plot since log(x) is only defined for x>0) because the `range_padding` calculation is done linearly. 

There are three main ways of approaching a fix. 
1. Have the DataRange1d (or something above it) check whether it's being used linearly or log-ly. 
2. Have the DataRange1d know whether it's linear or log. 
3. Delegate the range bounds calculation to the tickers. 

This PR implements approach 2. by adding a new property `mapper_type` to the DataRange1d. Then the range calculation can be done correctly whether linear or log by the DataRange1d. 

Cons for approach 1.
-It would be a little convoluted to figure out whether the DataRange1d is linear or log. The  DataRange1d doesn't know whether it is an x_range or y_range. The plot_canvas that updates the  DataRange1d knows which dimension the DataRange1d is, but then would need to find the matching Axis from its Plot's `renderers` to inspect that Axis's ticker. 

Cons for approach 3. 
-Ranges are currently in charge of figuring out data-derived bounds which are compared to user-supplied bounds to determine the bounds. If the ranges no longer take into account the padding into their data-derived bounds, then the comparison between data and user bounds will need to use logic moved into the ticker. 
-Range `start` and `end` values are set by pan/zoom tools. If the ticker defaults to adding padding, the ticker will need to know not to add padding when panning/zooming. 


Some other things to consider:
-When a user creates a DataRange1d to use in a log plot instead of using the default, they will need (not absolutely, but they will probably want) to supply `mapper_type=""log""` if they don't supply a `start` and `end` and want the correct range padding. If they do supply a `start` and `end` (and they are both positive values), but don't supply a `mapper_type=""log""`, then the plot will still be correct. This is because the ticker and mapper are still log and will produce the correct ticks and screen-mapped values. 

- [x] issues: fixes #3834 #5389 #2789
~~- [ ] support different exponential bases~~ (Log bases are all scaled the same, so my original thinking about supporting different bases is not needed. `default_span` could be made to span in terms of powers of `base` instead of only powers of 10, but that would minimally affect ux)
- [x] tests added / passed
~~- [ ] release document entry (if new feature or API change)~~
",9,4,['status: accepted']
2587,94062137,5468,3834332,2016-11-16 22:16:44,2016-11-16 23:08:55,closed,Correcting docstring for function push_notebook,"#issues: fixes #5467

Correcting docstring for function push_notebook. Adding missing key word, ""handle"".
https://github.com/bokeh/bokeh/blob/master/bokeh/io.py#L572",1,2,['status: accepted']
2588,93849317,5465,3834332,2016-11-15 21:14:07,2016-12-10 18:26:29,closed,Fixed write file error in examples; encode to UTF-8 (#5306,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

",5,1,['status: superseded']
2589,93496616,5461,3834332,2016-11-14 01:28:16,2016-11-14 21:41:22,closed,Add svg logo,This adds the svg version of the Bokeh logo to the same location as the current png version.,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2590,93491657,5460,3834332,2016-11-13 23:15:09,2016-11-17 21:40:25,closed,Hovertool safe tags,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).

- [x] issues: fixes #2833  
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
- [x] reticulated splines

Check if the format tag included in HoverTool templating
is == safe, and will disable any HTML escaping if true.

Updated docs, and updated existing example",33,3,['status: accepted']
2591,93413711,5459,3834332,2016-11-11 23:18:00,2016-11-12 00:00:56,closed,Fix off-by-one and missing test in LinearInterpolator,"- [x] issues: fixes #5370
- [x] tests added / passed

There was no test that the final control point matched, which is how this bug crept in. The problem was the predicate for `_.findLastIndex`, which was `x >= num`. This could return the last index for `@_x_sorted`, and the subsequent `x2 = @_x_sorted[ind+1]` would then yield `null` -> `NaN`.

The predicate was changed to `num < x` which will always be at most the next to last index. But this also necessitates special casing the first control point, so the following check was added first:
```
if x == @_x_sorted[0]
  return @_y_sorted[0]
```",3,1,['status: accepted']
2592,93371980,5457,3834332,2016-11-11 17:56:04,2016-11-11 19:00:47,closed,Bryanv/5445 warning dirstyle apps run main,"- [x] issues: fixes #5445
- [x] tests added / passed

This adds a warning whenever `bokeh serve` is called on a `main.py`, which will hopefully reduce the high incidence of support questions that have been generated specifically about this. ",5,1,['status: accepted']
2593,93370941,5456,3834332,2016-11-11 17:48:16,2016-11-11 18:32:42,closed,Fake API key for external PRs.,"Resolves #5455.
",0,1,['status: accepted']
2594,93257192,5454,3834332,2016-11-11 00:13:03,2016-11-11 16:37:02,closed,Fix tab completion for bokeh.palettes,"Fixes the implementation of `__dir__` on the dynamically generated
`palettes` module. Previously this would fail on python 2, due to a
quirk in how globals were handled (this is fixed in python 3).

Fixes #5453.",3,1,['status: accepted']
2595,93126697,5451,3834332,2016-11-10 10:46:22,2016-12-06 22:27:57,closed,Add support for *.tsx source files,"Added support for `*.tsx` (pretty naive see `core/util/dom.ts`) and replaced `toolbar_template.eco` with `toolbar_template.tsx`. This TSX template could be less verbose, but unfortunately TypeScript inherits a lot of garbage from ES, so this is the best we can achieve. For now I converted only one template, as an experiment, but we can follow up with changing the rest. 

fixes #5450",23,21,['status: accepted']
2596,92628871,5447,3834332,2016-11-07 17:36:50,2016-11-09 17:57:34,closed,wrap glyph methods in a better signature,"issues: fixes #5446 

With this change, e.g. help for `p.square` looks like this in Jupyter notebooks:


<img width=""514"" alt=""screen shot 2016-11-07 at 11 35 01 am"" src=""https://cloud.githubusercontent.com/assets/1078448/20068443/5d5f5fb4-a4de-11e6-9123-44939a70f032.png"">

@mattpap @birdsarah if either of you have comments or suggestions for tests that could be added please let me know
",8,2,['status: accepted']
2597,92031480,5437,3834332,2016-11-02 18:43:15,2016-11-02 19:23:18,closed,Don't use tail calls in getters/setters to avoid a bug in Safari,"@bryevdv, if I understand https://bugs.webkit.org/show_bug.cgi?id=164306#c4, this should fix the problem. We use other getters (setters are uncommon), but they aren't used as intensively as those used for property access.

fixes #5392 

",11,2,['status: accepted']
2598,91939940,5433,3834332,2016-11-02 10:05:34,2016-11-02 13:40:01,closed,Extend TextInput with `placeholder` attribute,"issues: fixes #5417 

",3,1,['status: accepted']
2599,91859003,5432,3834332,2016-11-01 20:39:45,2016-11-02 13:36:51,closed,need to ask mapper to return synthetic coords,"issues: fixes #5413 

The refactor for the zoom in/out tools neglected to maintain the pure synthetic coordinate mappings necessary for zooming to work for categorical axes. 

This does some light refactoring so that some tests can be added for the new functions. Testing `scale_range` itself is too difficult to set up because it accepts a `CartesianFrame` but the new tests should ensure the functionality on categorical mappings.",2,1,['status: accepted']
2600,91716762,5429,3834332,2016-11-01 00:42:32,2016-12-05 17:14:17,closed,experimental junk,"Experimental PR for discussion: DO NO MERGE
",19,2,['status: superseded']
2601,91678938,5428,3834332,2016-10-31 19:57:31,2016-10-31 19:57:44,closed,Update animated.py," fixes #5305

",0,1,['status: accepted']
2602,91677323,5427,3834332,2016-10-31 19:47:52,2016-10-31 19:49:09,closed,fix animated example,"issue: fixes #5305
",4,2,['status: accepted']
2603,91656100,5425,3834332,2016-10-31 17:45:56,2016-12-12 17:51:14,closed,Configure code runner so that full class paths are preserved,"fixes #5315
",41,9,['status: accepted']
2604,91654569,5424,3834332,2016-10-31 17:37:06,2016-10-31 18:41:44,closed,Prefer const over let in *.ts,"fixes #5423

",0,1,['status: accepted']
2605,91647961,5422,3834332,2016-10-31 17:00:25,2016-12-09 12:36:30,closed,Minor layout cleanup,"Improves readability and removes bulky code.
",1,2,['status: declined']
2606,91642551,5421,3834332,2016-10-31 16:31:18,2016-11-01 16:43:39,closed,"Use className instead of attributes: {class: ""name""}","fixes #4680, #5398

",1,1,['status: accepted']
2607,91056604,5410,3834332,2016-10-26 18:03:34,2016-10-31 14:57:24,closed,Set box-sizing explicitly to make bokehjs work under bootstrap,"fixes #5398, #4680
",2,2,['status: declined']
2608,91051874,5409,3834332,2016-10-26 17:35:22,2016-10-27 18:28:12,closed,Fix FuncTickFormatter.from_py_func missing return value and update examples,"Fix FuncTickFormatter.from_py_func missing return value and update examples
- [x] issues: fixes #5404 
- [x] tests added / passed
",5,3,['status: accepted']
2609,90874601,5407,3834332,2016-10-25 19:25:12,2016-10-28 18:23:11,closed,bokeh.sphinxext improvements,"[WIP: Needs tests]

This PR supercedes #5399
- [x] issues: closes #5411 closes #3020 closes #4774
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)

This is a more comprehensive overhaul of `bokeh.sphinxext` machinery. In general, old and unused code (such as non-HTML builder visitors) has been deleted, and things have been streamlined and made to re-use other existing code instead of duplicating fucntionality. Some highlights:
- `bokeh-plot` re-uses server code runner, and adds a custom parser for `.py` files. This also causes a dedicated page for the example to be generated. Any docstring in the example will be rendered as ReST at the top of this page (but _not_ at the directive embd location) making indexing and additional information simple to add. 

<img width=""425"" alt=""screen shot 2016-10-25 at 2 15 36 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/19700859/9b1e9358-9abe-11e6-8fa2-f185bc97dfc3.png"">
- `bokeh-enum` to collapse huge enums:
  
  <img width=""432"" alt=""screen shot 2016-10-25 at 2 04 49 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/19700717/03d3df8a-9abe-11e6-8c86-876a691bb89b.png"">
- `bokeh-prop` code simplified and shortened, type information and links improved:
  
  <img width=""297"" alt=""screen shot 2016-10-25 at 2 05 57 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/19700739/17cd9a30-9abe-11e6-9d4a-b4c7306b327d.png"">
- adds `Option` class and `bokeh-options` to validate and document sets of configuration options:
  
  <img width=""321"" alt=""screen shot 2016-10-26 at 9 35 12 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/19752816/b55ae1f6-9bc5-11e6-8b6a-eb370476fa92.png"">
",11,25,['status: accepted']
2610,90857860,5406,3834332,2016-10-25 17:50:54,2016-10-25 19:29:43,closed,Fix $x and $y in hover tool by not shadowing variables,"fixes #4861
",0,1,['status: accepted']
2611,90667940,5401,3834332,2016-10-24 18:36:04,2016-10-25 19:25:50,closed,Add IMDb usage notice,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #5400

Add IMDb notice per IMDb usage page, http://www.imdb.com/help/show_leaf?usedatasoftware.
",0,1,['status: accepted']
2612,90649919,5399,3834332,2016-10-24 16:44:32,2016-10-25 19:25:36,closed,Improvements to bokeh-plot directive,"[This is WIP]

The `bokeh-plot` directive in `bokeh.sphinxext` has been somewhat rickety for some time. This PR makes some cleanup and improvements:
- keeps track of out-of-date `.py` examples file in a robust way using built-in Sphinx machinery
- re-uses code runner from server instead of customized redundant code runner and fragile custom monkeypatching
- generates a dedicated page for every `.py` example, in addition to wherever the `bokeh-plot` embed is
- initial docstrings in `.py` examples are rendered as ReST above the example in the dedicated page. Can be used to add additional indexing, information, etc. 
- Better sphinx build output
- moves `source_examples` to just `examples` subdir (The vast majority of files changes just reflect this renaming)

Please note: This PR adds a custom `Parser` for `*.py` files. _Any_ `.py` files in the Sphinx source dir will be treated as examples to run and build. They should really also always go in an `examples` subdirectory as a convention. 

A few issues to note:
- The source read order had to be controlled, to read  all the `.py` files first. 
- except the ""extension"" examples, which are currently made last to avoid a giant build slowdown (see https://github.com/bokeh/bokeh/issues/5101#issuecomment-254684325)
- currently assumes `curdoc().add_root` is called, but `show` and `save` are automatically patched to do this. Examples that create and manage their own `Document` don't work (there were only two) 

I've also had to disable the extensions widget example until https://github.com/bokeh/bokeh/issues/5315 is fixed 

Final note: this stanza had to be added to the `server` block in the nginx config for the docs:

```
        location /scripts {
            if ($http_referer ~* (.*)en\/(.*?)\/(.*)) {
                set $v $2;
                rewrite ^(.*)\/(.*).js$ http://bokeh.pydata.org/en/$v/scripts/$2.js redirect;
            }
        }
```

This allows the autoload scripts to have an ""absolute"" location `/scrips/bokeh-plot-foo.js` etc. but that is correctly prefixed by the version that it was referred from. There might be a better way to configure nginx (separate server block for every version?) that would handle this more automatically, without having to inspect $http_referer but this will do for now.
",3,1,['status: superseded']
2613,90549408,5396,3834332,2016-10-24 04:54:16,2016-10-25 19:27:03,closed,"Added classifiers to setup, Addresses #5395","All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [ ] issues: fixes #5395 
- [ ] tests added / passed: N/A
- [ ] Classifiers will be visible on pypi and in pip show -v bokeh
",7,1,['status: accepted']
2614,90268611,5390,3834332,2016-10-20 19:49:12,2016-10-24 16:12:01,closed,Add tool argument,"issues: fixes #5329 
",0,2,['status: accepted']
2615,89943660,5380,3834332,2016-10-19 05:21:11,2016-10-24 16:14:54,closed,Add Colorblind friendly and D3 Category palettes,"This PR superseeds #5359.

I added 5 palettes, category10, category20, category20b, and category20c from D3 and a [colorblind friendly palette](http://jfly.iam.u-tokyo.ac.jp/color/).  I originally thought the D3 palettes were from vega but they were just pulled in.  I did not find a license for the colorblind friendly plot, but it is also referenced by [ggplot2](http://www.cookbook-r.com/Graphs/Colors_%28ggplot2%29/) and they just provide the url hyperlink.

As mentioned by @birdsarah and @mattpap, I updated both of the pertinent bokehjs files in addition to the python files:
https://github.com/bokeh/bokeh/blob/master/bokehjs/src/coffee/api/typings/palettes.d.ts
https://github.com/bokeh/bokeh/blob/master/bokehjs/src/coffee/api/palettes.ts

Where is the release document?  I expect an entry related to the added palettes should be added.
- [x] issues: fixes #5317 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,14,['status: accepted']
2616,89887234,5379,3834332,2016-10-18 19:57:53,2016-10-26 21:06:47,closed,Clean up toolbar,"- [x] replace dropdown with buttons
- [x] drop bootstrap from core bokehjs
- [x] no more divider after last button group
- [x] custom icons for `{x,y}pan` (related issue #5135)
- [ ] add grouping for hover tools?
- [ ] #4613?
- [ ] #4787?

fixes #4290, #3817
",2,16,['status: accepted']
2617,89878242,5378,3834332,2016-10-18 19:02:58,2016-10-18 19:40:42,closed,Correct comment in syling dimension example,"changed comment to apply to example content
- [x] issues: fixes #5377 
- [ ] tests added / passed
- [x] release document entry (if new feature or API change)
",1,1,['status: accepted']
2618,89831929,5374,3834332,2016-10-18 14:51:42,2016-10-18 16:07:36,closed,Drop broken Dialog widget,"Joining the ""removing things"" themed party.

fixes #4652
",5,1,['status: accepted']
2619,89827425,5373,3834332,2016-10-18 14:29:56,2016-10-18 15:12:00,closed,remove develop mode stub code for server,"- [x] issues: fixes #5372
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

ping @bokeh/dev this is ready
",1,1,['status: accepted']
2620,89695047,5369,3834332,2016-10-17 20:20:38,2016-10-18 16:02:52,closed,Don't set browser title for autoload_server,"- [x] issues: fixes #5346
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,2,['status: accepted']
2621,89660577,5367,3834332,2016-10-17 16:46:39,2016-10-18 15:28:29,closed,fix errors in Document.destructively_move,"- [x] issues: fixes #5333
- [x] tests added / passed

In fixing the typo, I added a test, which uncovered other logic errors. Is this actually used anywhere? If not we can just remove it. 

ping @mattpap @havocp this is ready, comments welcome. 
",7,2,['status: accepted']
2622,89643886,5364,3834332,2016-10-17 15:16:19,2016-10-18 14:35:48,closed,remove old bokeh-server completely,"- [x] issues: fixes #5362
- [x] release document entry (if new feature or API change)

@bokeh/dev this is ready 
",0,1,['status: accepted']
2623,89642248,5363,3834332,2016-10-17 15:08:15,2016-10-18 17:26:58,closed,New release deploy script," issues: fixes #5325

This is WIP but would appreciate early feedback, in particular suggestions for how to add testing for it. Things remaining:
- [x] generate `CHANGELOG`
- [x] ~~~test upload to CDN?~~~

I'm not a huge fan of the global ""config"" object but I wanted the test flow call sequence to be clear above all else. I also wanted this code (with the exception of `issues.py` which is useful by itself) to all be in ""one place"".
",6,7,['status: accepted']
2624,89505575,5359,3834332,2016-10-15 20:28:47,2016-10-18 15:02:02,closed,Add seaborn and vega color palettes,"I added the 6 qualitative seaborn and 4 categorical vega palettes.  I also cleaned up `bokeh/palettes.py`, grouping the code for all the new matplotlib palettes together and making the white space in dictionaries match.  A minor point, I noticed some long lines in the matplotlib dictionaries that were not flagged by the flake8 test (because of the comment at the end of the line?) but I did not wrap these as I was not sure if that was intended.

Which file generates [this doc page](http://bokeh.pydata.org/en/latest/docs/reference/palettes.html)?  I may still need to update that, unless it autogenerates from `./bokeh/palettes.py`.  I expect not because I noticed an extra `""` symbol above the BrBG plot.  
- [ ] issues: fixes #5317 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",8,13,['status: declined']
2625,89112364,5349,3834332,2016-10-12 23:25:19,2017-03-08 15:48:50,closed,Add support for interactive legends,"This allows for clickable legends. Try `examples/models/synthetic`, which was designed to outline issues with event handling and propagation, so it's perfect to test this. For example, currently clicking on a legend doesn't prevent from making selection if there's a glyph underneath.

fixes #2274, #3715
",27,36,['status: accepted']
2626,89095319,5348,3834332,2016-10-12 21:14:41,2016-10-12 21:46:45,closed,update simple.py example to remove deprectated usage and bad links," issues: fixes #5335
",0,1,['status: accepted']
2627,89093327,5347,3834332,2016-10-12 21:02:25,2016-10-14 12:34:08,closed,check for all valid CSS font size units,"- [x] issues: fixes #5337
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Took list of units from here:

http://www.w3schools.com/cssref/css_units.asp

Tested every unit by hand to see that:
- it rendered
- it changed size when the value changed
",10,4,['status: accepted']
2628,88937011,5344,3834332,2016-10-12 01:00:13,2016-10-12 21:21:28,closed,Support special colors on image glyph,"- [x] issues: fixes #5323
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

~~Todo: add tests~~

~~This PR is probably more proof that we need to outline our needs for the color mappers and then refactor.~~ was able to make relatively small changes

~~Note: only hex colors are now supported for Image glyph special colors (nan/high/low)~~ Resolved
",5,6,['status: accepted']
2629,88893381,5340,3834332,2016-10-11 19:16:47,2016-10-12 15:05:44,closed,Remove src/vendor/font-awesome and use npm,"fixes #5339
",0,1,['status: accepted']
2630,88875307,5338,3834332,2016-10-11 17:27:20,2016-10-12 18:05:39,closed,made change to fix figure constructor title object bug,"https://github.com/bokeh/bokeh/issues/5318

This is still WIP until a test is added...
",8,6,['status: accepted']
2631,88589802,5331,3834332,2016-10-09 18:35:58,2016-10-12 21:03:52,closed,Replace JS' str.trim() with Python's str.strip(),"fixes #5330
",2,2,['status: accepted']
2632,88474464,5327,3834332,2016-10-07 17:08:27,2016-10-11 13:43:40,closed,fix deprecations,"issues: fixes #5326 
",3,2,['status: accepted']
2633,88360326,5321,3834332,2016-10-06 23:40:23,2016-10-11 17:35:45,closed,Use ES6 import/export instead of require() and module.exports,"This takes advantage of import/export syntax in CoffeeScript and uses TypeScript compiler to generate `require()` calls and `module.exports`. CoffeeScript, by design, provides only syntax and leaves to the user how imports and exports will be translated into the chosen module system. Web browsers currently don't support modules. We use commonjs. I originally attempted to use Babel for translating import/export, but this was a disaster. However, TypeScript works pretty well. This approach gives us opportunity to integrate TypeScript modules together with CoffeeScript.

If you want to try this out, it builds as usually now. If you want to see errors reported by TypeScript compiler, you can add `--tsjs` to any build task (starting with `scripts:tsjs` and above). Note that this results in hundreds  of errors being printed on stdout. Some of them are real (yes, I already fixed a few bugs with this) and some are results of TypeScript not getting enough type information (not unexpectedly, as we don't provide almost any; almost because there are typings, so e.g. jquery or underscore are already typed).

fixes #5320
",20,55,"['status: accepted', 'MIGRATION']"
2634,88358901,5319,3834332,2016-10-06 23:25:17,2016-10-07 14:24:35,closed,issues release notes,"- Add release notes for `0.12.3`
- make it so that dupe issues do not require a type

@canavandl the func tick formatter section needs text from you.

@bokeh/dev If there are any small last minute example or docs fixes, this is the place for them
",0,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2635,88167144,5314,3834332,2016-10-05 22:12:51,2016-10-05 22:14:06,closed,quick fix for custom model implementations in apps,"issues: fixes #5304
",1,1,['status: accepted']
2636,88162616,5313,3834332,2016-10-05 21:40:46,2016-10-05 22:35:20,closed,best practice for updating source.data in cluster app,"issues: fixes #5312

Behaves much better (no flickering, etc.)
",1,1,['status: accepted']
2637,88156515,5310,3834332,2016-10-05 21:02:16,2016-10-05 21:53:54,closed,Fix Gapminder on Py2 / handle source codings better,"- [x] issues: fixes #5302
- [x] tests added / passed

@birdsarah @mattpap @canavandl @havocp would appreciate quick eyes on this. 

AFAICT the correct thing to do is to read the scripts in as bytes, then pass along any coding comment to `compile` to deal with, instead of using `codecs.open` to always read in `utf-8` (then we have to try and strip out coding comments which seems unreliable)

Additionally, gapminder data has unicode characters, so I added the encoding to `read_csv`. 

With this changes gapminder runs without error on py3 and py3
",3,3,['status: accepted']
2638,88138494,5309,3834332,2016-10-05 19:11:58,2016-10-26 19:49:48,closed,JQueryUI RangeSlider implementation,"Implementation of the JQueryUI RangeSlider from #5258 into the core models
- [x] issues: fixes #1996 
- [x] tests added / passed - are there tests for individual widgets?
- [x] release document entry
",13,10,['status: accepted']
2639,88129237,5307,3834332,2016-10-05 18:15:28,2016-10-05 21:52:42,closed,Append conda channels to wrangle channel precendence,"- [x] issues: fixes #5299 #5105

This PR:
- Appends (instead of prepends via the --add arg) the bokeh and conda-forge channels so that our channel precedence (high to low) is ""defaults, bokeh, conda-forge"" instead of ""conda-forge,bokeh,default"".
  - This appears to reduce the CI unit test matrix times to 5:45-7:00min (as opposed to over 9min). It's unclear if the defaults CDN is faster or we're installing fewer dependencies. [ninja edit: it seems to be both]
- Also removes the (unused) javascript channel from our meta.yaml (we're now installing nodejs from conda-forge)
",5,6,['status: accepted']
2640,88115315,5300,3834332,2016-10-05 16:48:12,2016-10-05 18:41:17,closed,"Use () => @resize() instead of $.proxy(@resize, @)",,2,2,['status: accepted']
2641,88015011,5295,3834332,2016-10-05 04:34:34,2016-10-05 05:50:02,closed,Fix broken responsive layouts on window resize,"In #5205 we added support for width/height argument to the document.resize method, so that we could suggest resize sizes in non-window layouts (i.e. jupyterlab (phosphorjs) panels)). This causes a regression where `jquery.proxy` would pass the jquery event as an argument to the resize function as the first arg (this didn't fail previous because JS is fun and ignores extra arguments to functions signatures)

This PR adds a positional argument to placehold the jquery event
- [x] issues: fixes #5294 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,2,['status: accepted']
2642,88010583,5293,3834332,2016-10-05 03:23:17,2016-10-05 07:10:04,closed,Bryanv/4926 aload static,"issues: fixes #4926

The problem was that the function that got called for embedding static plots was passed the `bk-root` div but then called `replaceWith`. Changing to `append` fixes. The custom server example was failing before. After, with `BOKEH_RESOURCES=server` it looks correct:
<img width=""609"" alt=""screen shot 2016-10-04 at 10 21 29 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/19100048/2135ffb0-8a81-11e6-934f-0188619f13a5.png"">
",5,4,['status: accepted']
2643,87976423,5291,3834332,2016-10-04 21:19:15,2016-10-05 07:22:32,closed,docserver.py fix,"@bryevdv - I just tested the fix in #5272 on a different machine, and it didn't have the `builtins` module, and I'm not sure where it came from, so I changed it to catch any exception and return, terminating the server.
",3,8,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2644,87976366,5290,3834332,2016-10-04 21:18:56,2016-10-04 22:37:07,closed,fix typo,"- [ ] issues: fixes #5288 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2645,87974990,5289,3834332,2016-10-04 21:10:31,2016-10-04 21:10:59,closed,Stvn66 5288 fix legend docs typo,"- [ ] issues: fixes #5288 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,9,['status: declined']
2646,87971753,5287,3834332,2016-10-04 20:50:56,2016-10-05 07:07:49,closed,"misc docs fixes, etc for 0.12.3","issues: fixes #5107 fixes #5262 fixes #4900 fixes #4897
",2,10,['status: accepted']
2647,87945623,5286,3834332,2016-10-04 18:12:12,2016-10-04 19:33:55,closed,"Add typings for {Log,Categorical}ColorMapper","fixes #5284
",2,1,['status: accepted']
2648,87929368,5283,3834332,2016-10-04 16:30:47,2016-10-04 16:47:44,closed,Change indentation from 4 to 2 spaces in *.ts files,"fixes #5251
",3,1,['status: accepted']
2649,87901610,5282,3834332,2016-10-04 14:09:45,2016-10-04 15:57:28,closed,Change 0.12.{4->3} deprecation due to delayed release,"fixes #5250
",1,1,['status: accepted']
2650,87900606,5281,3834332,2016-10-04 14:04:26,2016-10-04 15:27:44,closed,Update test_bokehjs.py,"issues: fixes #5277
",1,1,['status: accepted']
2651,87895772,5280,3834332,2016-10-04 13:38:53,2016-10-04 19:34:22,closed,Add support for Eco template in custom models,"This should be used in PR #5258.

fixes #5279
",6,1,['status: accepted']
2652,87802607,5276,3834332,2016-10-03 22:20:36,2016-10-26 18:17:46,closed,UIEvents model,"- [ ] issues: fixes #5278 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This PR is a partially an experiment in whether such UI events would accommodate what the custom interactions that the HoloViews team to hopes to implement. Further discussion of UI and tool events is taking place in #5278 
",5,4,['status: declined']
2653,87783018,5274,3834332,2016-10-03 20:13:09,2016-10-04 16:18:28,closed,Fix deprecation warnings,"@bokeh/dev, please join and help out as time permits.

TODO:
- [x] ~~`text_font_size=""10pt""` -> `text_font_size=value(""10pt"")`~~
- [x] `plot.title = ""title""` -> `plot.title.text = ""title""`

fixes #5273
",4,2,"['status: accepted', 'MIGRATION']"
2654,87774278,5272,3834332,2016-10-03 19:17:39,2016-10-04 17:16:55,closed,Changed input to raw_input,"- [x] issues: fixes #5271
- [x] tests added / passed - no tests for docserver.py
- [x] release document entry (if new feature or API change) - no new feature or API change

Output is now:

```
Press <ENTER> to exit...

Asked Server to shut down.
Server shut down.
```
",8,4,['status: accepted']
2655,87740165,5270,3834332,2016-10-03 15:44:41,2016-10-03 17:17:14,closed,Add transforms to reference guide and toc tree,"issues: fixes #5239
",0,1,['status: accepted']
2656,87685752,5266,3834332,2016-10-03 09:25:56,2016-10-04 16:29:58,closed,Clean up common/ and util/,"This is based on PR #5265. There is `get_indices()` in `utils/` left, because I wasn't sure what to do with it.

fixes #5263
",6,13,"['status: accepted', 'MIGRATION']"
2657,87685547,5265,3834332,2016-10-03 09:24:19,2016-10-04 12:25:26,closed,Split off Events and don't use Backbone.Model if not necessary,"One of many PRs to clean up bokehjs. `Events` is the only part of of Backbone that we use without change. That's why I split it off. Backbone `Model` and `View` will likely merge with `HasProps` and `BokehView`.

fixes #5264
",2,3,['status: accepted']
2658,87619656,5261,3834332,2016-10-01 23:59:54,2016-10-03 09:36:03,closed,Fix memory usage regression introduced in PR #5106,"fixes #5260
",4,1,['status: accepted']
2659,87506930,5258,3834332,2016-09-30 14:45:04,2016-10-06 22:00:43,closed,Double ended sliders extension example,"issue: #1996 - this PR adds a documentation extensions example implementing two variants of a double ended slider, which maybe a useful starting point for fixing #1996 
",28,24,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2660,87464476,5256,3834332,2016-09-30 09:49:04,2016-10-01 21:43:08,closed,BoxPlot outlier_line_color,"issues: fixes #5255
",1,1,['status: accepted']
2661,87409340,5253,3834332,2016-09-29 23:00:44,2016-10-26 15:28:58,closed,Canavandl/4614 range update callbacks,"This PR moves the range callback execution handling inside of the range models themselves (previously PlotCanvasView would change range attributes then execute the callbacks manually). This has the benefit of simplifying callback handling (#4614 reported some cases where callbacks weren't being handled) and makes the callback handling testable/tested.
- [x] issues: fixes #4614 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

supercedes #5140 
",11,6,['status: accepted']
2662,87397821,5252,3834332,2016-09-29 21:30:10,2016-10-03 23:29:19,closed,Fix CSV Reading of Samples for Py 3,"Fixes Issue #5029 where downloading sample US_Counties data on Ubuntu 16 with an ansi preferred local encountered issues decoding the csv encoded as utf-8.

Replaces Rejected/Abandoned PR #5030
",7,7,['status: accepted']
2663,87326193,5249,3834332,2016-09-29 14:38:21,2016-09-29 17:23:09,closed,Add a polyfill for Math.log1p(),"fixes #5248
",1,1,['status: accepted']
2664,87273283,5247,3834332,2016-09-29 09:09:45,2016-10-03 09:41:26,closed,Replace DatetimeTickFormatter.formats with individual fields,"`formats` was deprecated and now `DatetimeTickFormatter` has all `format`'s keys as its properties. The second commit isn't strictly necessary, but shows usage of ""expression statements"" (switch and if) to produce more compact and, I think, more readable code.

fixes #5234
",2,5,['status: accepted']
2665,87189062,5245,3834332,2016-09-28 19:55:41,2016-09-30 08:21:11,closed,Fix regression in wheel_zoom_tool zoom origin,"Fixes regression in wheel_zoom_tool where zoom origin wasn't around scroll cursor. Added tests to prevent future regression.
- [x] issues: fixes #5235
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",4,9,['status: accepted']
2666,87037571,5243,3834332,2016-09-28 00:46:41,2016-10-04 04:21:52,closed,Catch any exception in `import_optional`,"Imports can trigger side effects which may result in any exception
potentially being thrown. In this case simply return None rather than
crashing on an optional import.

Fixes #5242
",30,8,['status: accepted']
2667,86937774,5237,3834332,2016-09-27 14:10:28,2016-09-28 08:52:08,closed,Unify and simplify deprecation of things,"This replaces the old `bokeh.util.deprecate` (500+ loc) with `bokeh.util.deprecation` (30+ loc). There is now one function `deprecated()` that does the job. There are two signatures:
- `deprecated((x, y, z), old, new, extra=None)`

e.g. `deprecated((0, 12, 4), 'Plot.abc', 'Plot.xyz')`
- `deprecated(message)`

e.g. `deprecated(""This needs custom deprecation."")`

Do NOT use `warnings.warn()` directly for this purpose, because it doesn't use `BokehDeprecationWarning`, which is required to always display deprecation warnings, and for consistency sake (previously we had over 10 variations on deprecation styles).

fixes #5236
",2,1,['status: accepted']
2668,86724160,5233,3834332,2016-09-26 11:22:24,2017-02-28 18:48:53,closed,Split off webgl code into bokeh-gl bundle,"This reduces size of `bokeh.min.js` to 698 kB. This is based on PR #5189. This isn't as pretty as I expected, but it does the job, well hopefully, because I can't test it. I can only test that it falls back to 2D rendering if webgl is not available. @bokeh/dev, someone has to test this. The API had to be partially changed, because `Plot.webgl` had to be removed, but that didn't affect any examples, because they use `figure(webgl=True)` and this is left as it was. I tried to move as much code as possible to `bokeh-gl` bundle, but there are some leftovers (you can grep for `webgl`), specifically in `PlotCanvas` and `GlyphView`. It may be possible to improve this, but for now it seemed to be unnecessary. One big disadvantage of this PR is that you can't use webgl with gmap plots. This isn't an intrinsic limitation, but just I don't want to add webgl mirror classes for gmap\* classes. I think we should get rid of gmap plots and use tile layers. This would resolve the issue in the proper way.

fixes #4321, #4739
",6,4,['status: declined']
2669,86656949,5229,3834332,2016-09-25 17:44:30,2016-10-03 23:55:58,closed,Add LegendItem,"All pull requests must have an associated issue in the issue tracker. If there
- [x] issues: fixes #5202 #4526
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Still TODO:
- [x] Add validation on legend items #5228
- [x] Remaining deprecations as per #4526
",23,38,"['status: accepted', 'MIGRATION']"
2670,86586207,5226,3834332,2016-09-23 21:46:56,2016-09-28 20:52:05,closed,Canavandl/color bar tool,"Do Not Merge 
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,4,['status: declined']
2671,86575076,5225,3834332,2016-09-23 20:22:20,2016-09-29 14:02:31,closed,Remove 'x' and 'y' aliases from Dimension enumeration,"fixes #5223
",7,2,"['status: accepted', 'MIGRATION']"
2672,86565114,5224,3834332,2016-09-23 19:08:00,2016-09-23 20:03:34,closed,Fix legend merging broken,"- [x] issues: fixes #5202
- [x] tests added / passed

This fixes #5202. @bryevdv also suggested a legend_mode that lets users explicitly decide the behavior they want.

I'm doing that in a separate PR as this one should be straight forward to merge for an RC. The other one might require futher API discussion.

This restores the behavior where a user sets the same string for multiple legend and auto-magically gets a compound legend glyph.

It also keeps the recently added behavior where if a label is a field on the column data source then the actual data will be used as the legend's label.

This leads to a potential conflict where a user defined label matches with the a column name, and they actually just want a string - and the explicit modes will provide this ability.
",1,4,['status: declined']
2673,86422017,5219,3834332,2016-09-22 21:57:36,2016-09-25 21:54:19,closed,Restore original definition of API for markers using new paths,"fixes #5218
",4,1,['status: accepted']
2674,86418891,5217,3834332,2016-09-22 21:35:05,2016-09-25 22:49:44,closed,Upgrade to typescript 2.0 and use typings from npm,"fixes #5216
",1,1,['status: accepted']
2675,86305978,5212,3834332,2016-09-22 09:40:57,2016-09-26 21:58:37,closed,Upgrade timezone and remove its copy from vedor,"fixes #5211
",6,4,['status: accepted']
2676,86287531,5210,3834332,2016-09-22 07:01:48,2016-09-22 20:04:37,closed,Canavandl/pin build deps,"potential hotfix
",5,9,['status: accepted']
2677,86242432,5205,3834332,2016-09-21 21:13:26,2016-09-22 02:06:24,closed,Support passing suggested height/width values to document.resize method,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #5204 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,1,['status: accepted']
2678,86218509,5203,3834332,2016-09-21 18:42:15,2016-09-22 01:18:35,closed,Make Datatable Editable,"Fixes: #4616 

This is a PR of @bgyarfas' work from #4660 that is submitted by a core dev so we can have the selenium tests run.
",3,21,['status: accepted']
2679,86180156,5201,3834332,2016-09-21 14:59:37,2016-09-21 17:02:50,closed,Deprecate output_server,"issues: fixes #5154
",0,2,"['status: accepted', 'MIGRATION']"
2680,86023345,5197,3834332,2016-09-20 17:45:27,2016-09-21 15:57:47,closed,Add very crude HTML representation of models,"By default this displays concise representation consisting of model's name, id and expand button. After expansion, it shows all model's properties and their values (formatted with `repr()`) and collapse button, which allows to return to concise representation. This is very crude, doesn't work recursively (thus `repr()`) and doesn't take too much advantage of HTML/CSS (colors, at al.). All this can be improved later, but for now we have something that works and doesn't interfere with notebook workflow. Note this is implemented in vanilla JS, so there are no assumptions about JQuery, etc. We shouldn't use bokehjs' JQuery, because HTML repr of a model may be displayed before `output_notebook()`. Also note that this makes original (commented out) `_repr_html_`, that displayed a plot automatically, obsolete and resolves that discussion as well.

fixes #5164
",10,2,['status: accepted']
2681,85854480,5189,3834332,2016-09-19 19:30:35,2016-09-30 08:20:28,closed,GlyphView is not a RendererView,"This originally started as webgl splitoff (hence `mattpap/webgl` floating around), but realized that I need to do some restructuring and cleanups and in end we got this. Some of those changes may seem unrelated, but if you look specifically `PlotCanvas` and `GlyphView`, you should see the point. You may also see some minor code duplication. This may be factored out in future using mixin composition. At least there is no fake code reuse as it was before. There is a lot of work still to be done to stabilize bokehjs' APIs, but this is a valuable first step. I tested every commit with `gulp test` and a few, fairly representative examples. However, there might be some breakage, so examples have to be verified more carefully.

fixes #5188
",6,21,"['status: accepted', 'MIGRATION']"
2682,85840530,5187,3834332,2016-09-19 18:00:48,2016-09-20 03:38:07,closed,Add deprecation warning if user supplies iterables and user-defined s…,"issues: fixes #2056 
",10,2,"['status: accepted', 'MIGRATION']"
2683,85748675,5183,3834332,2016-09-19 07:38:45,2016-09-19 16:52:57,closed,Move palettes in bokehjs to bokeh-api bundle,"fixes #5182
",1,5,"['status: accepted', 'MIGRATION']"
2684,85711513,5181,3834332,2016-09-18 14:19:28,2016-09-19 19:22:43,closed,matplotlib2.0.0b4 compatibility fix,"should fix https://github.com/bokeh/bokeh/issues/5180
",7,3,['status: accepted']
2685,85677689,5179,3834332,2016-09-17 15:35:34,2016-09-21 19:21:22,closed,Make `from bokeh.palettes import whatever` always return fresh list,"Previously it was possible to import and modify a palette in-place, making it different from the original for consecutive imports. It's trivial to achieve a copying API, but it would be incompatible with the original, because Python doesn't implement uniform access principle. All work in this PR is directed towards getting the desired functionality and keeping the old API. E.g.

```
In [1]: import bokeh.palettes as p

In [2]: p.Magma7
Out[2]: ['#000003', '#2B115E', '#711F81', '#B53679', '#F0605D', '#FEAE76', '#FBFCBF']

In [3]: p.Magma7[0] = 1

In [4]: p.Magma7
Out[4]: ['#000003', '#2B115E', '#711F81', '#B53679', '#F0605D', '#FEAE76', '#FBFCBF']

In [5]: from bokeh.palettes import Magma7

In [6]: Magma7[0] = 1

In [7]: Magma7
Out[7]: [1, '#2B115E', '#711F81', '#B53679', '#F0605D', '#FEAE76', '#FBFCBF']

In [8]: p.Magma7
Out[8]: ['#000003', '#2B115E', '#711F81', '#B53679', '#F0605D', '#FEAE76', '#FBFCBF']

In [9]: from bokeh.palettes import Magma7

In [10]: Magma7
Out[10]: ['#000003', '#2B115E', '#711F81', '#B53679', '#F0605D', '#FEAE76', '#FBFCBF']
```

Tested in Py 2.7 and 3.5. Also made sure that auto-completion works as expected.

`WIP` status, because tests need updating and I don't have energy right now to deal with nonsense in `test_palettes.py`.

fixes #5170
",2,5,['status: accepted']
2686,85669190,5178,3834332,2016-09-17 09:21:54,2016-09-21 15:23:05,closed,"Make Slider handle title=None and title="""" properly","1. `title=None` means no title and no current value.
2. `title=""""` means just no title (without the annoying colon).

fixes #5175
",5,1,['status: accepted']
2687,85622920,5176,3834332,2016-09-16 18:58:40,2016-09-19 00:02:38,closed,Add support for low color and high color for linear and log mappers,"issues: fixes #5011 
",1,1,['status: accepted']
2688,85485836,5172,3834332,2016-09-15 21:42:31,2016-09-17 08:53:33,closed,"Replace jsnlog with a custom, line number preserving logger","This implements a custom logger. It preserves line numbers and allows for logger naming (prefixes). This also slightly reduces bokehjs size and avoids issues that were present in jsnlog (`window.onerror` and AJAX requests). This should work across modern web browsers, but unfortunately it may be broken in some versions of Firefox (you will get '(unknown)' location). This is FF's bug.

fixes #5171
",1,1,['status: accepted']
2689,85365930,5168,3834332,2016-09-15 08:50:25,2016-09-15 10:57:46,closed,"Revert ""Pin conda-build version to 1.21.14""","Our builds are currently failing with an exception, because there is API incompatibility between newest conda and obsolete pinned conda-build. This reverts #5084, because conda-build 2.0.1 fixes the original issue with building noarch package. Note that conda-build 2.0.1 was released several days ago, so if only there was a followup on issue #5084, then we wouldn't need to fix this in hurry and deal with a dozen of PRs which now need updating.
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
2690,85363677,5167,3834332,2016-09-15 08:32:06,2016-09-15 14:05:34,closed,Replace obj.unset('prop_name') with obj.prop_name = null,"This was an oversight in PR #5147.
",0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2691,85362637,5166,3834332,2016-09-15 08:24:05,2016-09-17 08:51:57,closed,Bring some structure to *.less files,"fixes #5165
",1,12,['status: accepted']
2692,85260785,5162,3834332,2016-09-14 16:26:28,2016-09-14 16:26:34,closed,"Revert ""Make DataTable cells editable""","Reverts bokeh/bokeh#5146
",0,1,['status: accepted']
2693,85237151,5161,3834332,2016-09-14 14:22:30,2016-09-21 18:31:33,closed,use npm phantomjs for tests #5159,"- [x] issues: fixes #5159 

As py.test uses `bokehjs/node_modules/.bin/gulp`, it should also use the phantomjs installed by npm as the default rather than expecting it to be found correctly in the user's path.
",5,2,['status: accepted']
2694,85125582,5158,3834332,2016-09-13 21:07:29,2016-12-10 17:51:10,closed,"Fix linked selections, unify select tools and remove selection manager model","This PR 
- Removes the SelectionManager model by moving it's (relatively simple) methods onto the Selector models and replaces the SelectionManager as the selector attribute on DataSources.
  - This has the benefit of fixing linked selections (broken since #2136)
- Factors out a lot of duplicated code onto the parent SelectTool class
  - unifies the behavior of the various select tools

todo: 
- ~~update the API typings~~
- [x] issues: fixes #2136 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

supercedes #5066 #5067 
",5,35,['status: declined']
2695,85079238,5157,3834332,2016-09-13 16:14:22,2016-09-13 18:29:21,closed,session.show(): take into account browser and new keywords,"This little patch fixes the ignorance of `browser` and `new` keywords into `session.show()` and `show_session()`. 
- [x] issues: fixes #5156
- [x] tests passed

Now, it is possible to call a customized browser:

```
# ...
session = push_session(curdoc())
custom_firefox = '/usr/bin/firefox -P ipython --new-tab %s'
session.show(browser=custom_firefox)
```
",4,1,['status: accepted']
2696,85057581,5155,3834332,2016-09-13 14:21:01,2016-09-14 21:48:53,closed,Add support pretty printing (in IPython) of HasProps and Model,"fixes #5153
",12,4,['status: accepted']
2697,84934711,5150,3834332,2016-09-12 20:02:15,2016-09-14 16:04:18,closed,Add new platform component descriptor,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Standardizing documentation.
",2,2,['status: declined']
2698,84926292,5149,3834332,2016-09-12 19:05:47,2016-09-13 12:09:45,closed,Fix IMDB typo,"Fixes #5148 
",1,1,['status: accepted']
2699,84916174,5147,3834332,2016-09-12 18:01:25,2016-09-15 07:16:56,closed,"Replace {get,set} ->{get,set}v and deprecate {get,set}","This is to ease transition from `get,set` to getters and setters. This way using `get,set` will be discouraged. At some point in future I will change deprecation to a hard error. Additionally, `{get,set}v` are easier to distinguish from uses of different `get,set` in other contexts. Note that complete removal of at least `setv()` may not be possible, due to features like ""simultaneous"" and silent assignment.

fixes #5160
",0,10,['status: accepted']
2700,84880184,5146,3834332,2016-09-12 14:22:42,2016-09-14 15:42:38,closed,Make DataTable cells editable,"This is a re-PR of #4660 which had to get reverted after merge.
",7,18,['status: accepted']
2701,84875621,5145,3834332,2016-09-12 13:56:47,2016-09-13 12:10:36,closed,Fix tooltips after replacing computed properties with getters,"~~@bryevdv's fix in a form of PR.~~ Nope, that didn't work, I had to restore `ttmodels` as a computed property. This needs to be changed appropriately in future.

fixes #5123
",5,1,['status: accepted']
2702,84783819,5140,3834332,2016-09-11 11:23:46,2016-10-07 20:33:42,closed,Executing range callbacks on reset_range (additional fix) and initialization (new),"I experienced update issues with #4615, concretely the range callbacks are not executed correctly. I had to call reset twice for my callbacks to work correctly. This pull request fixes this.

Additionally I added the analog calls to the callbacks within the initialization such that dynamic `update_datarange` is followed by a call to the callbacks here too.

It may be preferable to move the callback executions to `update_datarange` directly
- [x] issues: fixes #4614 #4615
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,2,['status: superseded']
2703,84742325,5137,3834332,2016-09-10 02:47:49,2016-09-10 02:47:51,closed,"Revert ""Hotfix to make DataTables editable""","Reverts bokeh/bokeh#4660
",0,1,['status: accepted']
2704,84742315,5136,3834332,2016-09-10 02:47:19,2016-09-10 02:47:22,closed,"Revert ""fix bad merge""","Reverts bokeh/bokeh#5134
",0,1,['status: accepted']
2705,84741118,5134,3834332,2016-09-10 02:01:00,2016-09-10 02:01:18,closed,fix bad merge,,0,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: bokehjs']"
2706,84740377,5133,3834332,2016-09-10 01:34:41,2016-09-10 02:01:44,closed,handle non dev/rc last release,"- [x] issues: fixes #5132
",0,1,['status: accepted']
2707,84644101,5130,3834332,2016-09-09 12:43:01,2016-09-09 15:14:52,closed,Correct typo in the notebook docs,,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2708,84631277,5129,3834332,2016-09-09 10:53:36,2016-09-14 21:52:20,closed,"Allow to require(""bokehjs"") in node.js","It would be nice to share code with `bokehjs/test/index.coffee`, but for whatever reason my attempts to do so failed. The new `require()` would work, but it isn't picked up by node.js.

fixes #5125
",6,14,['status: accepted']
2709,84609665,5128,3834332,2016-09-09 08:06:58,2016-09-22 02:34:52,closed,Remove yield tests and other minor test tweaks,"Fixes #5076 

Also, updates a number of tests to use pytest style (ping @brittainhard) -  we have agreed to slowly move tests over to pytest style so although some tests don't conform to it all new tests should (this should have been picked up in code review).

Adds a marker `api_test` to the api diff test as the test leaves cruft behind in working directory - ping @brittainhard.
",3,15,['status: accepted']
2710,84603670,5127,3834332,2016-09-09 07:10:05,2016-09-14 07:54:05,closed,Fix deserialization of Instance(HasProps) and add HasProps.__eq__,"fixes #5118
",7,7,['status: accepted']
2711,84523897,5122,3834332,2016-09-08 17:57:06,2016-09-08 19:34:56,closed,Fix ColorBar tests by overriding frame height and width getters with deterministic values,"addresses #5121

Fix ColorBar tests by overriding frame height and width getters with deterministic values
",0,1,['status: accepted']
2712,84477756,5120,3834332,2016-09-08 13:31:29,2016-09-09 20:29:04,closed,Don't require tornado to run non-server bokeh,"I don't like this solution, but don't see anything better right now to make, e.g., `bokeh.io` (and related) not fail to import without tornado.

fixes #5119
",3,2,['status: accepted']
2713,84443172,5116,3834332,2016-09-08 09:28:53,2016-09-08 14:22:07,closed,Make HasProps.id a first class citizen,"Previously `id` was a special case in several places, so now it's a property.
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2714,84440528,5115,3834332,2016-09-08 09:10:51,2016-09-08 19:37:17,closed,"Replace ""else if"" with switch statement","issues: closes #5124 
",0,1,['status: accepted']
2715,84419017,5114,3834332,2016-09-08 06:00:33,2016-09-08 14:58:19,closed,Add legend glyph for vbar and hbar,"Fixes #5113 

Adds an example of using hbar and vbar for a stacked and a grouped plot too.

<img width=""945"" alt=""screen shot 2016-09-07 at 10 58 58 pm"" src=""https://cloud.githubusercontent.com/assets/1796208/18338588/db1caf16-754e-11e6-8eb8-87963774a5b5.png"">
",2,3,['status: accepted']
2716,84378771,5111,3834332,2016-09-07 21:40:58,2016-09-09 23:01:19,closed,Add CategoricalColorMapper,"Fixes: #5013

See #5090 for discussion.
",5,15,['status: accepted']
2717,84373570,5110,3834332,2016-09-07 21:05:40,2016-09-07 21:05:52,closed,"Revert ""Add categorical color mapper""","Reverts bokeh/bokeh#5090

merged too early
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2718,84271052,5106,3834332,2016-09-07 10:02:08,2016-09-08 09:05:58,closed,Replace mget/mset/get/set with getters and setters,"This supersedes PR #5099 and goes all the way to make bokehjs use getters and setters. The issues with the original PR are still present, i.e. some of the tests need major rework and some computed properties are still there. Some of `set()` calls are still there, because they use `silent=true`. Note that we use bare `Backbone.Model` in a few cases, so a few extra instances of `get()` and `set()` are still there. This PR must be reviewed and merged today.
",8,41,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2719,84207512,5103,3834332,2016-09-06 22:29:00,2016-09-06 22:52:50,closed,Fix code block in 0.12.2 release doc,"hotfix to fix code block in 0.12.2 release document (was missing a carriage return)
",0,1,"['tag: component: docs', 'status: accepted', 'reso: completed']"
2720,84152182,5100,3834332,2016-09-06 16:15:07,2016-09-06 18:36:10,closed,Add 0.12.2 release notes,"add 0.12.2 release notes
",4,3,['status: accepted']
2721,84127139,5099,3834332,2016-09-06 13:57:41,2016-09-07 10:08:30,closed,Remove computed properties,"This attempts at removing computed properties. At this point all computed properties with no dependencies or dependencies on `this` were removed (replaced with getters). The remainder (5 instances) are properties dependent on some other instance (e.g. tools depending on a plot). Those need additional care, because changes to a dependency propagate through change events. I'm not sure if anyone depends on this behavior, but at least no one listens on specific properties. Tests are broken and need considerable amount of work to be fixed (see bokeh-internal).
",2,23,['status: superseded']
2722,84050873,5097,3834332,2016-09-06 02:03:10,2016-09-06 04:39:35,closed,update docstring and UG docs for push_notebook,"- [x] issues: fixes #5096
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
2723,83904325,5093,3834332,2016-09-03 19:51:55,2016-09-03 19:57:40,closed,Initialize notebook comms on the frontend,"This PR provides an alternative to the way Comms are currently initialized. The current approach registers a Comms target on the frontend and the Comms is then created on the first `push_notebook` call in the notebook. The problem with this approach is that it is possible for the frontend to take some time to receive and execute the code that registers the target (and renders the plot), so that the attempt by Python to create the Comm fails.

This PR simply inverts the responsibility for registering and initializing the Comm. The Python process immediately registers a Comm target and the backend then initializes the Comm, triggering a callback on the python process, which set the `_comms` attribute on the `_CommsHandle`. Until the frontend has displayed the plot all attempts at sending data will be ignored.
",0,2,['status: declined']
2724,83897467,5092,3834332,2016-09-03 14:50:57,2016-09-05 16:12:33,closed,Ensure Jupyter.notebook.kernel exists before connecting to comm,"Fixes #5081, ensuring that a comm is only initialized when a Jupyter.kernel.notebook is defined.
",0,1,['status: accepted']
2725,83895299,5091,3834332,2016-09-03 13:07:57,2016-09-07 21:43:40,closed,Demo of new legends and categorical color mapper,"This is a demo of what's possible when #5089 and #5090 are merged, not intended to be merged.

``` python
from bokeh.io import show
from bokeh.models import ColumnDataSource, CategoricalColorMapper
from bokeh.palettes import RdBu3
from bokeh.plotting import figure

source = ColumnDataSource(dict(
    x=[1, 2, 3, 4, 5, 6],
    y=[2, 1, 2, 1, 2, 1],
    label=['hi', 'lo', 'hi', 'lo', 'hi', 'lo']
))
color_mapper = CategoricalColorMapper(factors=['hi', 'lo'], palette=[RdBu3[2], RdBu3[0]])

p = figure(x_range=(0, 7), y_range=(0, 3), height=300, tools='save')
p.circle(
    x='x', y='y', radius=0.5, source=source,
    color={'field': 'label', 'transform': color_mapper},
    legend='label'
)
show(p)
```

![bokeh_plot](https://cloud.githubusercontent.com/assets/1796208/18224976/bab30398-719c-11e6-8f3c-01611f2959e2.png)
",1,20,['status: declined']
2726,83894995,5090,3834332,2016-09-03 12:54:12,2016-09-07 21:01:06,closed,Add categorical color mapper,"Fixes #5013
",3,4,['status: accepted']
2727,83890678,5089,3834332,2016-09-03 09:07:09,2016-09-09 17:45:39,closed,Support multiple legend entries for same glyph renderer,"Fixes: #3856

Follows on from PR #5088 
",3,20,['status: accepted']
2728,83884305,5088,3834332,2016-09-03 03:08:13,2016-09-07 22:56:40,closed,get_reference_point can look up and index (w/tests),"Add capacity for get_reference_point to look-up an index based on a field and value. This is currently not used as only call to get_reference_point does not yet take advantage of this feature.

Partially fixes: #3856

Should be merged after #5087 
",5,4,['status: accepted']
2729,83883723,5087,3834332,2016-09-03 02:38:07,2016-09-07 21:18:40,closed,Clarify draw_legend on glyph vs on glyph_renderer,"Previously both glyph_renderer and glyph had the draw_legend function.
The glyph functions would ""look up"" a reference point - except that this
always returns none. Looking up a reference point is probably best done on
the glyph_renderer where actual data is stored.

This commit renames glyph.draw_legend to glyph.draw_legend_for_index and moves
the responsibility for looking up an index up to the glyph renderer.

In a future PR we will use this capability to allow drawing multiple legend entries for the
same glyph_renderer. For now, this should be a no-op change.

Part of, but does not fix, #3856.
",1,2,['status: accepted']
2730,83870374,5085,3834332,2016-09-02 22:01:07,2016-09-02 22:58:40,closed,Pin conda-build version to 1.21.14,"- [ ] issues: fixes #5084 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,1,['status: accepted']
2731,83842144,5082,3834332,2016-09-02 18:05:59,2016-09-19 19:52:17,closed,Don't use Any in ColumnDataSource.data,"This is nice to have, but it comes with a price: speed degradation. The original type, `Seq(Any)` is pretty much instantaneous when it comes to validation. Here I introduce a special type `Scalar` which encompasses primitive types and date/datetime/delta. This way, `Seq(Scalar) | Seq(Seq(Scalar))` (this is the most precise type) is almost as fast as `Seq(T) | Seq(Seq(T))` where `T` is a primitive type like `Int`. This is about 6 time slower than the original type (when validating all items, i.e. type is correct), when validating a 100k element list. This is in turn about 5~6 times faster than naive `Seq(Either(long_list_here)) | Seq(Seq(Either(long_list_here)))`. Validating 100k element list takes about 200 ms on my machine. 
",3,4,['status: declined']
2732,83818676,5080,3834332,2016-09-02 15:15:47,2016-09-07 07:39:54,closed,Use custom proj4 to reduce bokeh.min.js' size,"This shaves off about 55 kB from bokeh.min.js. This PR removes unnecessary imports and projections from `proj4/index.js`, so this isn't the same ""custom"" approach as e.g. with backbone.js. Just make sure to use `common/proj4` instead of `proj4` in new code.
",3,2,['status: accepted']
2733,83780794,5079,3834332,2016-09-02 10:41:33,2016-09-07 07:39:13,closed,Use custom backbone.js,"This PR removes all unneeded code from backbone.js, reducing it's line count by over 60% and shaving off 16k from bokeh.min.js. No changes to logic were done at this point. The main point, however, is to reduce cognitive burden.  This PR is an effect of lack of results in fixing issue #4153 (strict events). 
",2,24,['status: accepted']
2734,83757803,5078,3834332,2016-09-02 07:38:10,2016-09-02 19:12:19,closed,Only run integration tests for non external contributors,"Fixes #5077 

Assuming this passes, can merge and then can test with bgyarfas' PR
",5,1,['status: ready']
2735,83744799,5075,3834332,2016-09-02 04:43:16,2016-09-05 15:42:17,closed,Fixes #5074. need to package .html in bokeh/server/views,"- [x] issues: fixes #5074 

one-liner to include .html files from bokeh/server/views/
",3,1,['status: accepted']
2736,83691796,5072,3834332,2016-09-01 19:25:50,2016-09-01 20:53:21,closed,Update hover styling to match other bokeh elements,"Fixes: #5008

Updates the hover styling to match other bokeh elements. See #5008 for description.
Also adds a gray line between elements for when you're hovered over multiple elements.

Notebook was a big pain
",5,4,"['status: accepted', 'MIGRATION']"
2737,83549802,5067,3834332,2016-08-31 23:56:29,2016-09-13 21:08:23,closed,Canavandl/2136 linked selections,"Fixed linked selections
- [x] issues: fixes #2136 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

todo: 
- [x] make sure `inspected` changes haven't broken anything.
- [x] write a test about the selection clearing
- [ ] ~~there's some weirdness w/ the PolySelectTool regarding the overlay and making the dbl-click selection. May be in a follow up PR (it's present in master)~~ will do in follow up PR
",2,18,['status: superseded']
2738,83494245,5066,3834332,2016-08-31 17:21:24,2016-09-13 21:07:50,closed,Refactor of select tools,"supercedes: 5054
- [ ] issues: fixes #5065 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,4,['status: superseded']
2739,83444969,5062,3834332,2016-08-31 12:42:23,2016-09-01 15:58:05,closed,Minor Fix: boxplot example indexing,"Fixes #5061 
",4,3,['status: accepted']
2740,83396525,5059,3834332,2016-08-31 06:40:50,2016-08-31 17:04:17,closed,Use underscore map function in ColorBar,"Fixes #5056

I've opened a separate issue about testing for this: #5058
",1,2,['status: accepted']
2741,83392386,5055,3834332,2016-08-31 05:51:10,2016-09-19 15:24:18,closed,Build hit testing assets in _map_data not _render,"- [x] issues: fixes #4967 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This fixes #4967, but has no effect, as _map_data is called on every render. See #4967 for more info.
",1,1,['status: declined']
2742,83354869,5054,3834332,2016-08-30 21:56:09,2016-08-31 17:22:04,closed,Canavandl/refactor selection tools,"Need to create discussion issue
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,13,['status: superseded']
2743,83340579,5053,3834332,2016-08-30 20:24:41,2016-09-13 19:24:46,closed,Add WheelPan tool,"prototype of WheelPan tool
- [x] issues: fixes #5052
- [ ] tests added / passed (will do)
- [ ] release document entry (if new feature or API change)
",11,9,['status: accepted']
2744,83304222,5051,3834332,2016-08-30 16:30:22,2017-02-22 20:25:56,closed,Function Signatures and Build Integration,"Finishes out API crawling feature, first parts of integration with the build process.
closes #5050 
closes #5049 
",9,32,['status: declined']
2745,83291644,5048,3834332,2016-08-30 15:18:38,2016-12-13 16:47:10,closed,Make different column length error more vocal,"This is a proof of concept for replacing validation (where possible) with early and hard failure.

fixes #5000
",11,8,['status: ready']
2746,83109026,5043,3834332,2016-08-29 14:34:12,2016-08-30 02:08:26,closed,Make ColumnDataSource.data stricter,"This is a follow up on issue #4932 and PR #4933. In principle this disallows `set` type to be used in `ColumnDataSource.data`. If you wonder why I still left `Any` there, then I already changed that locally, but speed penalty is too great to include it in this PR. I need to optimize property validation first.

fixes #5042 
",4,3,['status: accepted']
2747,82756440,5037,3834332,2016-08-25 17:00:08,2016-09-21 22:54:34,closed,Exposing tooltips columns in Charts API,"issues: fixes #4347 

Charts have a kw argument for tooltips, but if the columns do not exist then the hover tool will display '???' This change will find columns that are specified by the tooltips kw argument and add them to the glyph data source if they do not already exist. Currently only the ScatterBuilder is affected. If the change is amenable as supplied I can work on adding the solution to the other Builders.
",18,6,['status: accepted']
2748,82631805,5036,3834332,2016-08-24 22:57:32,2016-08-30 22:41:56,closed,Canavandl/4936 lasso select bugfix,"- [x] issues: fixes #4936 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Todo:
- Make sure that changing canvas coordinate transforms to return new array instead of mutating array (that is also returned?) doesn't introduce new problems or performance issues?
  - Spot testing suggests the PR does neither, but I should be more complete
- Write some mocha tests for the hit testing and/or select tools. I suspect this regression could have been caught with some straightforward unit tests, but we didn't have them.
",6,2,"['status: accepted', 'MIGRATION']"
2749,82618978,5034,3834332,2016-08-24 21:16:24,2016-08-28 20:34:33,closed,fix spatial indexing for vbar/hbar,"issues: fixes #4924 #5035 
",4,3,['status: accepted']
2750,82612297,5033,3834332,2016-08-24 20:33:24,2016-08-27 16:10:48,closed,Add `request_handle` bool to `show` method to optionally return notebook comms handle,"supercedes #5032 
- [x] issues: fixes #4697 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Adds `request_handle` bool to bokeh.io.show method, to optionally return notebook comms handle or not.
",2,1,['status: superseded']
2751,82606017,5032,3834332,2016-08-24 19:51:37,2016-08-24 20:33:51,closed,Canavandl/4687 hide notebook handle,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #4697
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: superseded']
2752,82600989,5030,3834332,2016-08-24 19:17:23,2016-09-19 15:14:24,closed,Fix CSV Reading of Samples for Py 3,"Fixes Issue #5029 where downloading sample US_Counties data on Ubuntu 16 with an ansi preferred local encountered issues decoding the csv encoded as utf-8.
",15,5,['status: declined']
2753,82471705,5026,3834332,2016-08-24 02:21:09,2016-08-24 18:02:48,closed,Add ColorBar JS API,"Add ColorBar JS API

fixes #4989
",2,2,['status: accepted']
2754,82377642,5024,3834332,2016-08-23 14:40:10,2016-09-14 08:02:21,closed,Make core bokeh independent of numpy,"This is a proof of concept for issue #1280. It's easy to make numpy optional, but the real trouble is testing this.

fixes #1280
",5,1,['status: declined']
2755,82313237,5023,3834332,2016-08-23 07:05:09,2016-08-23 07:43:59,closed,Switch to isNaN,"`_.isNaN` seems to be too strict.
",2,1,['status: accepted']
2756,82307063,5022,3834332,2016-08-23 05:52:27,2016-08-23 17:01:06,closed,Switch resource ordering,"- [x] issues: fixes #5021
",4,1,['status: declined']
2757,82304355,5019,3834332,2016-08-23 05:11:03,2016-08-23 06:09:04,closed,ColorMapper - support NaN's and clamp_data,"- [x] issues: fixes #5010 #5016
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",0,9,['status: accepted']
2758,82299212,5018,3834332,2016-08-23 03:44:36,2016-08-23 22:55:45,closed,Canavandl/reverse vertical ticking order,"- [x] issues: fixes #4990
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Reverses the direction of the vertical ColorBar (high values are at the top)
",4,5,['status: accepted']
2759,82296644,5017,3834332,2016-08-23 03:03:23,2016-08-29 15:56:03,closed,Reduce markers size by ~13k with generative techniques,"Since this marker code is so completely ossified and established at this point, I think that a little obfuscation at this point can be tolerated, for other gains. in addition to the space savings, since these are now just plain functions, we can easily add tests for them. I expect there is some very slight performance penalty. I will try to characterize it in the future,  but informal testing with ~5k points seem indistinguishable. 

All markers (regular and GL) visually confirmed correct in `webgl/marker_compare.py`

@mattpap can you share your thoughts? I'm also not sure what work on the API might need to be fixed up. 
",14,1,"['status: accepted', 'type: task', 'tag: component: build', 'tag: component: bokehjs']"
2760,82280299,5014,3834332,2016-08-22 23:25:01,2016-08-29 15:23:38,closed,Notebook output waits until bokehJS is loaded,"With this PR the code which initializes plots polls whether bokehJS is initialized, delaying rendering of the plot until it is fully loaded. It fixes the issue with Run All (#4987) and nbconvert works again (#4980). To test it you run `output_notebook`, clear the notebook and reload the page to ensure bokehJS is no longer loaded and then display a plot. The plot will wait to display until you run `output_notebook` a second time to load bokehJS. 
- [x] Add a customizable timeout.
- [x] Inject warning into DOM when timeout is reached.
- [x] Update tests

Since keeping around a registry of handles is quite expensive maybe there should be some way to explicitly request a comms handle to be created.
",33,21,"['status: accepted', 'MIGRATION']"
2761,82264810,5006,3834332,2016-08-22 21:16:06,2016-08-22 21:27:39,closed,Remove trailing whitespace,"Hotfix to remove trailing whitespace in docs/user_guide/embed.rst
",4,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2762,82255157,5005,3834332,2016-08-22 20:14:45,2016-08-22 22:31:55,closed,Add support for scale_alpha argument (make scale alpha configurable),"- [x] issues: fixes #4993
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Wrap plot_canvas outline draw in ctx save/restore to not poison ctx object.
",4,4,['status: accepted']
2763,82239299,5004,3834332,2016-08-22 18:28:04,2016-08-22 22:12:36,closed,Canavandl/4992 bad tick locations,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #4992
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: accepted']
2764,82229517,5003,3834332,2016-08-22 17:21:30,2016-08-24 16:08:26,closed,Update LabelSet visual properties on model and model.source change ,"- [x] issues: fixes #4996 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Update LabelSet visual properties on model and model.source change 
",3,3,['status: accepted']
2765,82227725,5002,3834332,2016-08-22 17:08:46,2016-08-22 18:28:52,closed,noted CDN resources are available via HTTPS,"Fixes documention issue #5001

per discussion here: http://stackoverflow.com/a/39070704/528729
",2,2,['status: accepted']
2766,82215476,4999,3834332,2016-08-22 15:49:21,2016-08-22 16:47:21,closed,arrow.coffee typo correction,"issues: fixes #4998 
",1,1,['status: accepted']
2767,82213989,4997,3834332,2016-08-22 15:40:47,2016-08-22 18:17:50,closed,models examples validation,"issues: fixes #4960 
",0,2,['status: accepted']
2768,82171524,4995,3834332,2016-08-22 11:03:16,2016-08-22 16:05:54,closed,Split off JS/TS APIs into bokeh-api(.min).js bundle,"fixes #4976
",1,1,"['status: accepted', 'MIGRATION']"
2769,82117876,4994,3834332,2016-08-21 21:35:02,2016-08-22 03:53:13,closed,add link to sizing_mode in Responsive Dimensions section of Styling user guide,"This adds a link to the `sizing_mode` reference documentation in the Responsive Dimensions section of the Styling user guide. I'm not entirely sure whether `responsive` is deprecated in favor of `sizing_mode` or not (for my own purposes, it turned out that `sizing_mode` wouldn't even give me the behavior I want, so I ended up not using either), so I opted to just link to those docs. I'll be happy to rework this as needed.
- [x] issues: fixes #4869 
- **N/A** tests added / passed
- **N/A** release document entry (if new feature or API change)
",1,1,['status: accepted']
2770,82015123,4988,3834332,2016-08-19 17:18:48,2016-08-24 17:40:00,closed,"bugfix: w_units, h_units support for ImageURL glyph","- [x] issues: fixes #4984 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Refactor ImageURl.Model 's w, h attributes to be DistanceSpecs (not NumberSpec), to match Bokeh model. Also implement support for data/screen units.
",5,8,['status: accepted']
2771,81786904,4983,3834332,2016-08-18 09:49:29,2016-08-20 09:49:29,closed,Transform data with ColorMapper,"- [x] issues: fixes #4981
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

``` python
import numpy as np

from bokeh.io import show
from bokeh.models.sources import ColumnDataSource
from bokeh.models.mappers import LinearColorMapper, LogColorMapper
from bokeh.palettes import Viridis3
from bokeh.plotting import figure

x = np.random.random(2500) * 10
y = np.random.normal(size=2500) * 2 + 5
source = ColumnDataSource(dict(x=x, y1=y, y2=y - 10))

log_mapper = LogColorMapper(palette=Viridis3)
lin_mapper = LinearColorMapper(palette=Viridis3)

p = figure()
opts = dict(x='x', line_color=None, source=source)
p.circle(y='y1', fill_color={'field': 'x', 'transform': log_mapper}, legend=""Log mapper"", **opts)
p.triangle(y='y2', fill_color={'field': 'x', 'transform': lin_mapper}, legend=""Lin mapper"", **opts)

show(p)
```

![bokeh_plot 1](https://cloud.githubusercontent.com/assets/1796208/17769665/84e441d8-64ee-11e6-9c9e-4d21e8d4f3bd.png)
",5,16,['status: accepted']
2772,81773068,4982,3834332,2016-08-18 08:08:10,2016-08-18 09:43:52,closed,Transform data with ColorMapper,"- [x] issues: fixes #4981
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

``` python
import numpy as np

from bokeh.io import show
from bokeh.models.sources import ColumnDataSource
from bokeh.models.mappers import LinearColorMapper, LogColorMapper
from bokeh.palettes import Viridis3
from bokeh.plotting import figure

x = np.random.random(2500) * 10
y = np.random.normal(size=2500) * 2 + 5
source = ColumnDataSource(dict(x=x, y1=y, y2=y - 10))

log_mapper = LogColorMapper(palette=Viridis3)
lin_mapper = LinearColorMapper(palette=Viridis3)

p = figure()
opts = dict(x='x', line_color=None, source=source)
p.circle(y='y1', fill_color={'field': 'x', 'transform': log_mapper}, legend=""Log mapper"", **opts)
p.triangle(y='y2', fill_color={'field': 'x', 'transform': lin_mapper}, legend=""Lin mapper"", **opts)

show(p)
```

![bokeh_plot](https://cloud.githubusercontent.com/assets/1796208/17766489/35a46f48-64e0-11e6-8da7-3f0137d899b1.png)
",5,4,['status: superseded']
2773,81634233,4971,3834332,2016-08-17 12:33:18,2016-08-17 18:38:48,closed,added checks to test that data contains at least one outlier in any c…,"Fixes #4970 
",1,1,['status: accepted']
2774,81401699,4964,3834332,2016-08-16 01:23:41,2016-08-17 05:50:37,closed,correct version updates and other build improvements," issues: fixes #4882

This PR does a few things:
- removes some junk/cruft under `scripts`
- adds missing release entry from docs toctree
- splits the version updating into separate scripts for `bokehjs` and `sphinx`
- streamlines `deploy.sh` to remove duplicated code

One question: after refactoring I realized we could go back to not needing `-p` except on full releases. Or even better, could auto-deduce `-p` tag from last full release tag so it's never needed? Is that desirable? Some other possible improvements:
- verify `-d` tag is actually `dev` or `rc`
- verify `-r` tag is not
- verify any new tag is actually new
- verify `-p` tag is not `dev` or `rc`
- better output
- print/save release branch diff for inspection, or ask for confirmation on review
- make deploy script a python script and use argparse
- add some tested util functions for checking/manipulating version strings

I'm also like to rename the completely no-longer-accurately named `get_bump_version.py` It just returns the base version by running `git`, it no longer tries to compute a ""next"" version. or maybe just get rid of it entirely, if possible. I think `bokeh.__version__` might just have everything needed. 
",3,3,['status: accepted']
2775,81397235,4963,3834332,2016-08-16 00:17:28,2016-08-17 20:35:35,closed,Add color_mapper model listener to Image glyph for callback driven updates,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #4612 
- [x] tests added / passed (will do, should be easy pair of mocha tests)
- [ ] release document entry (if new feature or API change)
",1,6,['status: accepted']
2776,81387013,4962,3834332,2016-08-15 22:32:30,2016-08-16 12:51:56,closed,Update glyph test examples to fix #4959,"- [x] issues: fixes #4959 
  As requested by @bryevdv 
",4,2,['status: accepted']
2777,81383732,4961,3834332,2016-08-15 22:05:53,2016-08-31 15:34:26,closed,Don't end up with white screen under an unhandled exception,"This is a first step to give the user some feedback when bokeh fails (and that happens a lot even if you know how to put pieces together). This only takes care of unhandled exceptions, showing a box with exception's message. Note `<hr>` tag is there intentionally, so that this error stands out from the remainder of a page. The look and feel is modeled after jsmath, so we may want to change that or perhaps attribute the fact.

This is just a tip of the ice berg, because there are plenty of ways bokeh can fail. A nice example is ""could not set initial ranges"" warning, which can be either a user's mistake resulting in a defunct plot or expected behavior when the plot starts with no data and is updated incrementally.

To test this, use:

```
from __future__ import print_function

from bokeh.models import Plot
from bokeh.document import Document

plot = Plot()

doc = Document()
doc.add_root(plot)
doc.validate()

if __name__ == ""__main__"":
    from bokeh.embed import file_html
    from bokeh.resources import INLINE
    from bokeh.util.browser import view

    filename = ""some.html""
    with open(filename, ""w"") as f:
        f.write(file_html(doc, INLINE, ""some""))
    print(""Wrote %s"" % filename)
    view(filename)
```
",21,6,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
2778,81101926,4954,3834332,2016-08-12 11:00:19,2016-08-17 05:48:59,closed,Keep ordering of resources,"- [x] issues: fixes #4950
- [x] tests added / passed
",4,7,['status: accepted']
2779,81099822,4953,3834332,2016-08-12 10:41:17,2016-08-16 21:19:28,closed,Store scss on renderer not on glyph,"- [x] issues: fixes #4949
- [x] tests added / passed

This allows the sxss to be available for hit testing - which is not done on the main glyph (but on the selection and nonselection glyph)
",1,3,['status: accepted']
2780,80993441,4947,3834332,2016-08-11 17:02:24,2016-08-11 18:14:06,closed,extend safe_to_fork reporting to all handlers,"- [x] issues: fixes #4945
- [x] tests added / passed
",2,1,['status: accepted']
2781,80982855,4946,3834332,2016-08-11 15:53:40,2016-09-07 07:38:00,closed,Pre-compile custom models and code fragments,"This removes run-time `bokeh-compiler.js` bundle. Custom models are now precompiled, dependencies extracted (to reasonable extent) and verified. JavaScript is parsed and syntax analyzed as well. There is support for importing Less/CSS stylesheets. node.js is a required dependency for custom models, where CoffeeScript is the default and dependency parsing necessary. In CustomJS/FuncTickFormatter JavaScript is still the default and dependencies are not resolved by default. This way one can create CustomJS without node.js. See `custom.py` and `transform_jitter*.py` under `models/`. This all needs some further polishing and perhaps additional changes to package build files, so that `bokehjs/build/js/{compile.js,modules.json}` are included. I squashed all changes to a single commit (original history was garbage).

fixes #4879, #4886
",26,28,"['status: accepted', 'MIGRATION']"
2782,80685057,4939,3834332,2016-08-09 20:04:25,2016-08-17 15:35:16,closed,update dev setup docs,"This change adds directions for installing the base dependencies for Bokeh in addition to the dev specific ones.  Additionally, it changes

```
``--build_js``
``--install_js``
```

to 

```
``--build-js``
``--install-js``
```
- [x] issues: fixes #4938 
- [x] tests added / passed
",2,8,['status: accepted']
2783,80678316,4937,3834332,2016-08-09 19:18:20,2016-08-17 15:49:36,closed,update `devdeps.py` to including the missing dependencies,"fixes #4824 
Added `flake8` and `boto` as well as the base dependencies required for bokeh: 
- `backports_abc`,
- `jinja2`,
- `markupsafe`,
- `mkl`, (pending correct import call)
- `bumpy`,
- `dateutil`,
- `pyyaml`, (pending correct import call)
- `requests`,
- `six`,
- `tornado`,
- `yaml`
- [x] issues: fixes #4824 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",7,5,['status: accepted']
2784,80457837,4933,3834332,2016-08-08 14:12:22,2016-08-28 20:49:36,closed,Make set() a serializable data type,"fixes #4932
",7,1,['status: declined']
2785,80325375,4931,3834332,2016-08-06 00:58:53,2016-08-20 02:03:27,closed,Canavandl/1441 colorbar 2,"supercedes #4916 
- [x] issues: fixes #1441
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

This version doesn't have the Legends -> GuideRenderer refactor. I need to rethink how to do that part.
",25,41,['status: accepted']
2786,80235232,4929,3834332,2016-08-05 12:27:47,2016-08-08 17:55:18,closed,Fixing value checking to work with js arrays rather than with python,"This fixes #4928 by changing the js to look for the specific values rather than the indices of the array.

The is a possibility that `examples/app/line_on_off.py` also has the original problem but I couldn't test it as don't have much experience with the server/app mode.
",13,3,['status: accepted']
2787,80129920,4925,3834332,2016-08-04 18:50:12,2016-08-22 18:45:44,closed,WIP: Vbar hbar hittest,"- [ ] issues: fixes #4924
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This is a very rough draft and first pass. I'm still working on getting a good development environment setup.
",11,2,['status: superseded']
2788,79927409,4921,3834332,2016-08-03 15:30:16,2016-08-24 20:20:45,closed,Module Crawl and Version Diff," fixes #4891 fixes #4892 
- [x] Script to crawl folders and grab classes and functions from each file.
- [x] Script to diff between old and new versions
",10,28,['status: accepted']
2789,79654724,4916,3834332,2016-08-01 23:37:08,2016-08-06 01:17:16,closed,Canavandl/1441 colorbar,"(ninja edit) Note: this branch is branched from #4851 and should only be merged after the parent.

Proof-of-concept color bar
- [ ] issues: fixes #1441
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

The code is a mess (lots of copy pasta from axis.coffee and hardcoded values), but serves to generate a POC color bar. (this uses a LogColorMapper, but Linear looks identical except for the tick spacing).

<img width=""639"" alt=""screen shot 2016-08-01 at 6 36 27 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/17312238/e4525aa4-5816-11e6-9318-bdd5e3d7bd87.png"">
",5,18,['status: superseded']
2790,79601178,4914,3834332,2016-08-01 16:59:14,2016-08-09 18:17:00,closed,Add support for loading external resources in output template,"- [x] issues: fixes #4127
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Needs tests/example
",16,13,['status: accepted']
2791,79485352,4912,3834332,2016-07-31 13:46:43,2016-08-09 13:58:33,closed,pass http requests arguments to app documents,"This is a pull request that extends on pull request. Note that it is relative to the branch of bryanv and not to master. 
- [x] issues: fixes #4858
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,4,['status: accepted']
2792,79476153,4910,3834332,2016-07-31 04:54:33,2016-08-07 03:27:52,closed,remove line in Makefile to make bad soft link,"fixes #4909 
- [removes line in Makefile that creates the bad soft link]
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: declined']
2793,79422021,4908,3834332,2016-07-29 20:48:40,2016-08-03 18:52:14,closed,Canavandl/4855 plot fill,"- [x] issues: fixes #4855
- [x] tests added / passed

Correctly handles `background_fill_color=None` and `border_fill_color=None` on Plot. 
Expands clearRect call to properly clear frame.

example of no-fill plot (on ""lightblue"" html background):
<img width=""650"" alt=""screen shot 2016-07-29 at 3 47 58 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/17262922/db3bf152-55a3-11e6-9715-15f3725bd250.png"">
",0,5,['status: accepted']
2794,79385167,4907,3834332,2016-07-29 16:14:10,2016-08-06 23:54:50,closed,Add HoverTool.show_arrow,"This patch adds a `show_arrow` to `HoverTool`. It is a simple boolean to disable arrow on toolip. `True` by default.
- [x] issues: fixes #4906 and [this question on Stack Overflow](https://stackoverflow.com/questions/38651060/how-to-remove-arrow-on-tooltip-from-bokeh-plot/)
- [x] release document entry

Usage (check the last line):

``` python
hover = p.select_one(HoverTool)
hover.point_policy = ""follow_mouse""
hover.tooltips = [
    (""Name"", ""@name""),
    (""Unemployment rate)"", ""@rate%""),
    (""(Long, Lat)"", ""($x, $y)""),
]
hover.show_arrow = False
```
",7,1,['status: accepted']
2795,79382593,4905,3834332,2016-07-29 15:56:39,2016-08-03 15:47:35,closed,skip flaky tests for now until they can be fixed,,2,1,"['tag: component: tests', 'status: declined', 'type: task']"
2796,79372319,4903,3834332,2016-07-29 14:53:55,2016-07-29 15:30:41,closed,deploy.sh needs explicit list of files updated,"This fixes a problem with committing the updated BokehJS version file. Note: because of this bug BokehJS `0.12.1` incorrectly reports `Bokeh.version` as `0.12.0`. Will need to have another point release very soon. 
",0,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: build']"
2797,79253442,4898,3834332,2016-07-28 19:25:22,2016-08-02 16:30:40,closed,Version Mismatch Fix,"Fixes the problem of tagging between Bokeh and BokehJS. Development builds now also run `scripts/version_update.py`, to change the value of the version strings in `version.coffee` and `package.json`. 

Submitting a new release candidate or development release now requires a previous version argument in addition to a new version argument. 

fixes #4882 
",8,7,['status: accepted']
2798,79233406,4896,3834332,2016-07-28 17:11:22,2016-07-28 17:15:08,closed,0.12.1 release notes,,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2799,79132769,4895,3834332,2016-07-28 03:37:52,2016-07-28 15:48:16,closed,Made a couple copy edits to User Guide pages.,"Some punctuation, some stylistic suggestions, all copy editing goodness.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2800,79097238,4894,3834332,2016-07-27 21:02:09,2016-07-31 13:35:18,closed,Use of the query string,"-  issues: fixes #4893
- no tests added yet, discuss api first
- no release document entry yet, for discussion
",3,5,['status: superseded']
2801,79072958,4890,3834332,2016-07-27 18:23:15,2016-07-28 00:12:48,closed,Bryanv/4889 changelog,"issues: closes #4889

@damianavila @bokeh/dev propose to merge this last PR for `0.12.1`
",3,2,['status: accepted']
2802,78937140,4887,3834332,2016-07-26 22:31:18,2016-08-10 17:31:58,closed,Add hit testing support for multiline,"Adds hit test support for MultiLine glyph
- [x] issues: fixes #3110
",6,7,"['status: accepted', 'MIGRATION']"
2803,78866763,4885,3834332,2016-07-26 14:56:04,2016-07-26 20:32:34,closed,Gloo2 typo in Int32Array/Uint32Array,"Fixes #4884 

A very small change.
",4,2,['status: accepted']
2804,78766777,4883,3834332,2016-07-25 23:01:17,2016-07-26 16:22:46,closed,Remove duplicated override member from PolyAnnotation,"fixes #4878
",0,1,['status: accepted']
2805,78702745,4873,3834332,2016-07-25 15:34:31,2016-08-04 17:28:42,closed,Maggie m/4840 quantified code,"issues: fixes #4840 
",2,6,['status: accepted']
2806,78551801,4868,3834332,2016-07-22 23:03:00,2016-07-24 18:52:21,closed,Add visible property to all renderers,"Fixes #4866

Added examples for both server and CustomJS.

![visible_property](https://cloud.githubusercontent.com/assets/1796208/17073488/d672db76-5036-11e6-9a1b-f91f2445b7de.gif)
",0,6,['status: accepted']
2807,78536701,4864,3834332,2016-07-22 20:39:12,2016-07-25 16:37:46,closed,Support wheelzoom on dual touch monitors better,"Fixes #4862 

Also partially fixes wheel zoom tool on Edge #4863 - WheelZoom Tool now enables pinch.
",1,3,['status: accepted']
2808,78411485,4858,3834332,2016-07-22 01:09:26,2016-08-16 14:10:46,closed,pass http requests arguments to app documents,"- [x] issues: fixes #4828
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

@havocp I would appreciate your feedback on this.  If there are request arguments like the session id, those are included in the results passed to doc. Does that seem OK? Is `curdoc` the best place to put these? Is there a reason to have a mode that does not pass request args?
",10,10,['status: accepted']
2809,78409860,4857,3834332,2016-07-22 00:43:43,2016-07-26 18:29:10,closed,Correctly perform resize,"Fixes #4560 

ToDo:
- [x] write a test (could also write tests for reset and that true/false on reset_size works)
- [ ] discuss what to do when plot is in a layout
",5,6,['status: accepted']
2810,78400285,4856,3834332,2016-07-21 22:47:45,2016-07-25 15:45:30,closed,Use correct toolbar positioning and not hacky css,"Fixes #4853 

I have tested this manually, I don't think we have any other tests for this - and I'm not sure what that would be off the top of my head.

Note to test this thoroughly you need to test all combinations of:
- sizing_modes 
- toolbar in below and right position (note that the below toolbar was suffering from the same problem as right toolbar, but no-one had caught it yet)
- toolbar_sticky is True and False
- single plots and more complex layouts
",3,1,['status: accepted']
2811,78235359,4852,3834332,2016-07-20 23:16:05,2016-07-21 02:05:33,closed,use specific call signatures for select and inspect," issues: fixes #4839

ping @mattpap this seemed to be an overzealous optimization -- `select` and `inspect` have different function signatures. 
",0,1,['status: accepted']
2812,78226846,4851,3834332,2016-07-20 21:58:58,2016-08-07 20:49:50,closed,Canavandl/4848 refactor legend as guide,"Ground work to support adding ColorBar (also intended to be a Guide subclass)
- [x] issues: fixes #4848
- [x] tests added / passed
- n/a: release document entry (if new feature or API change)

Todo:
- ~~add compat/deprecation warn for importing legend from bokeh.models.annotations~~
",6,14,['status: declined']
2813,78224454,4850,3834332,2016-07-20 21:41:22,2016-07-20 22:41:59,closed,Bryanv/some docs,"issues: closes #4845 closes #4846 closes #4849
",0,4,['status: accepted']
2814,78191348,4843,3834332,2016-07-20 17:58:22,2016-08-02 15:34:58,closed,Canavandl/add colorbar,"- [ ] issues: fixes #1441
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,3,['status: superseded']
2815,78169396,4842,3834332,2016-07-20 15:36:00,2016-07-20 16:27:39,closed,"Fixes typo: ""go"" -> ""of""",,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2816,78165346,4841,3834332,2016-07-20 15:13:51,2016-09-22 04:27:16,closed,Refactor wheel_zoom_tool. Add zoom button tools #916,"- [x] issues: fixes #916
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

Refactors models/tools/gestures/wheel_zoom_tool into
a scale_range() helper provided by models/tools/zoom_util.

scale_range() is then used to add zoom_in_tool and zoom_out_tool
to models/tools/actions, implementing toolbar buttons that will
zoom

Remaining work on #916 includes:
- [x] add new models to bokehjs/src/coffee/api/typings/models/tools.d.ts. somehow I missed those in my initial commit
- [X] ~~actual design done for icons/Zoom{In,Out}.png.~~ I think what I slapped together is good enough until the tool icons are revisited en masse in #3250 
- [X] ~~ensure zoom-in and zoom-out are ""bundled""~~ won't be included in this issue, will address at some point in the future.
- [x] add 'factor' as a parameter on the zoom buttons.  Currently, it
  is hardcoded to 10%
- [x] review user-guide for documentation needs
- [x] ~~possibly rebase this into multiple commits~~. won't do since squash merge will be used per [this comment by mattpap](https://github.com/bokeh/bokeh/pull/4907#issuecomment-238055182)

Possible work for future (or already existing) tickets:
- Does it make sense to expose zoom-only mode on wheel-zoom? I
  personally find it awkward to use wheel-zoom when it pans and zooms
  at the same time.  This could be implemented easily now by
  programmatically eliding the 'center' parameter to scale_range().
  Perhaps it could be implemented as wheel-zoom button having a dropdown
  radio-button list like tap tool that lets the user choose to lock down the center of the plot and only scale in and out
  - I think this should be attempted in #5135. I made this comment [over there as well.](https://github.com/bokeh/bokeh/issues/5135#issuecomment-247895010)
",12,15,['status: accepted']
2817,78062025,4836,3834332,2016-07-19 22:43:24,2016-07-19 23:18:42,closed,update to use new bounds format,"issues: fixes #4834
",3,1,['status: accepted']
2818,77849960,4833,3834332,2016-07-18 17:56:24,2016-07-19 01:50:14,closed,Make conda recipe work on Windows,"fixes #2488

cc @msarahan 
",2,2,['status: accepted']
2819,77833637,4831,3834332,2016-07-18 16:02:15,2016-07-18 16:02:29,closed,"Revert ""moved the wheel speed zoom from internal to defined.""","Reverts bokeh/bokeh#4826

Need to update ""defaults checking"" tests.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2820,77748850,4827,3834332,2016-07-17 23:04:19,2016-07-21 22:48:11,closed,Stvn66 4786 hex markers,"Wrote the python code and started writing the coffee code to draw hexagon glyphs.  Not fully functional yet.  In the coffee code, the `_hit_` sections and `_mask_data` section are commented out.
",1,2,['status: superseded']
2821,77738384,4826,3834332,2016-07-17 15:42:12,2016-07-18 15:34:16,closed,moved the wheel speed zoom from internal to defined.,"moved the wheel speed zoom from internal to defined. 
Default 1/600.
High values will be clipped.
- [x] issues: fixes #3125
- [x] release document entry (if new feature or API change)
",3,1,['status: accepted']
2822,77721974,4825,3834332,2016-07-16 23:18:56,2016-07-18 15:17:35,closed,Improvements to docs,"- Fixes #4816 (if it still fails, its likely a `BOKEH_DOCS_CDN` issue; it works for me)
- Fixes the spew of warnings when running `make html` without having done a `make clean`.
- Fixes a few genuine errors and warnings
- Remove inheritance diagram --- which did not show up in the online docs anyway, thereby dropping the graphviz dependency.
",0,11,['status: accepted']
2823,77721554,4823,3834332,2016-07-16 22:54:26,2016-07-18 17:59:38,closed,Update meta.yaml,"fixes #2488

try not using no-arch on windows 
",3,1,['status: superseded']
2824,77721396,4822,3834332,2016-07-16 22:45:35,2016-07-21 21:30:04,closed,added the color brewer qualitative palettes,"fixes #4758 
- [ added the qualitative palettes from ColorBrewer ] issues: 
- [ updated and modified the palette test (now checking the last int from the string name instead of the first int ] tests added / passed
- [ ] release document entry (if new feature or API change)
",5,6,['status: accepted']
2825,77720442,4821,3834332,2016-07-16 21:51:45,2016-07-19 01:41:02,closed,added black outline and hover color,"Fixes #2610
",2,1,['status: accepted']
2826,77716834,4819,3834332,2016-07-16 18:57:01,2016-07-16 22:46:08,closed,added the color brewer qualitative palettes in response to issue #4758,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [ added the qualitative palettes from ColorBrewer ] issues: fixes #4758
- [ updated and modified the palette test (now checking the last int from the string name instead of the first int ] tests added / passed
- [ ] release document entry (if new feature or API change)
",2,1,['status: superseded']
2827,77715311,4818,3834332,2016-07-16 17:45:22,2016-08-04 13:40:26,closed,Fix rendering of arrow with broad lines,"fixes #4667
",4,2,['status: declined']
2828,77711571,4815,3834332,2016-07-16 15:05:42,2016-07-20 22:09:19,closed,Vbar hbar,,24,36,['status: accepted']
2829,77710187,4814,3834332,2016-07-16 14:01:14,2016-07-16 22:50:59,closed,add npm install to win build; add nodejs to win build deps,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [ ] issues: fixes (partially) #2488
- [ ] tests added / passed - Your build on win should now work in CI for windows
- [ ] release document entry (if new feature or API change)
",2,1,"['type: bug', 'status: accepted', 'reso: completed']"
2830,77686015,4812,3834332,2016-07-15 22:13:20,2016-07-20 02:00:05,closed,fix multiselect to allow values or values and labels,"- [x] issues: fixes #4800
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",5,3,"['status: accepted', 'MIGRATION']"
2831,77679893,4811,3834332,2016-07-15 21:18:44,2016-07-19 03:30:52,closed,Bryanv/4808 stream,"Adds a `.patch` method to CDS for efficient partial updates. 
- [x] issues: fixes #4808
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",2,1,['status: accepted']
2832,77646793,4809,3834332,2016-07-15 17:01:35,2016-07-20 01:43:59,closed,Split interaction.rst into three sections,"Everything's almost ready to go, save for the link descriptions in interaction.rst
",1,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2833,77462126,4805,3834332,2016-07-14 14:08:13,2016-07-14 15:09:42,closed,Updates add_glyph docstring,"Fixes #4806 
",1,1,['status: accepted']
2834,77376913,4803,3834332,2016-07-13 23:10:03,2016-07-16 16:37:38,closed,Make WebGL work on Safari,"Fixes #4795 
Fixes #2683 

The main fix has been applied in https://github.com/vispy/vispy.js/blob/master/scripts/gloo2.py, which is the code that generates gloo2.js. While in there I also improved the API a bit, so this PR also updates the Bokeh code accordingly. Further, I snuck in a quick fix for #4795.

Todo:
- [x] Test on other OS / browsers whether all webgl examples still work.
- [x] Test whether line width issue exists on non-retina displays as well, (and that it is now fixed).
- [x] Look into FF warning ""Texture has not been initialized prior to a partial upload, forcing the browser to clear it. This may be slow.""
",10,4,['status: accepted']
2835,77347834,4801,3834332,2016-07-13 19:33:55,2016-07-14 01:03:40,closed,"Split annotations from plotting, into its own section.","issues: closes #3078
",1,2,['status: accepted']
2836,77283903,4799,3834332,2016-07-13 12:59:09,2016-07-24 18:50:12,closed,Fix for issue with functools @wraps and partial in python 2.7,"- [ ] issues: fixes #4783
",7,4,['status: accepted']
2837,77142381,4794,3834332,2016-07-12 15:37:15,2016-07-12 16:37:47,closed,update last bounds computations to use correct rbush format,"issues: fixes #4793

glyphs notebook now fully works:

<img width=""535"" alt=""screen shot 2016-07-12 at 10 35 56 am"" src=""https://cloud.githubusercontent.com/assets/1078448/16773170/77e6a9ec-481c-11e6-9e0a-4971e87d8c87.png"">
",1,1,['status: accepted']
2838,77016189,4792,3834332,2016-07-11 20:19:15,2016-07-12 02:47:37,closed,fix docstring of add_tools,"fixes #4791
",2,1,['status: accepted']
2839,76966636,4789,3834332,2016-07-11 14:47:29,2016-07-11 14:50:47,closed,Fix broken source code link in gallery.rst,"issues: fixes #4788
",1,1,['status: accepted']
2840,76896907,4782,3834332,2016-07-11 03:55:48,2016-07-12 16:57:01,closed,"more robust checking for BokehJS load, enable re-rerun of output_note…","- [x] issues: fixes #3639
- [x] tests added / passed

This PR should prevent the notebook from becoming unusable without a complete re-start in the event that `show` is called when BokehJS is not truly loaded. It also allows for re-trying `output_notebook`

<img width=""1033"" alt=""screen shot 2016-07-10 at 2 08 36 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/16719552/6c9595de-46f1-11e6-8c5d-a5e4955a5096.png"">
",9,3,['status: accepted']
2841,76863117,4781,3834332,2016-07-10 03:15:01,2016-07-10 03:15:22,closed,remove unused import,"Old PR from before `flake8` was made strict again. 
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
2842,76832941,4779,3834332,2016-07-09 01:08:20,2016-07-09 01:35:03,closed,"jqui 1.12 breaks everything, pin to old version",,0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
2843,76814334,4777,3834332,2016-07-08 21:05:18,2016-07-09 21:28:28,closed,add cartodb tile provider,"- [x] issues: fixes #4775
- [ ] tests added / passed: tile_providers aren't currently tested so far as I can tell and I'm not sure how I would test this at the moment?
- [ ] release document entry (if new feature or API change) -  would you like a release notes entry (seems kinda minor to me)?

Note: I assume retina or non-retina could be detected somehow on the fly and switched. But this is useful as it is at least for me.
",9,5,['status: accepted']
2844,76792443,4773,3834332,2016-07-08 18:15:58,2016-07-09 01:14:02,closed,Small fix in example code for bokeh.client,"- [x] issues: fixes #4766 
",2,1,['status: accepted']
2845,76510640,4763,3834332,2016-07-06 22:10:45,2016-07-06 23:34:02,closed,don't overwrite previously merged tools,"- [x] issues: fixes #4759
- [x] tests added / passed
",0,2,['status: accepted']
2846,76502574,4761,3834332,2016-07-06 21:11:15,2016-07-06 22:52:10,closed,fix overlooked change for rbush update,"issues: fixes #4760
",2,2,['status: accepted']
2847,76348298,4756,3834332,2016-07-05 21:44:35,2016-07-07 02:21:32,closed,Added `merge_tools` option to gridplot,"- [x] issues: fixes #4755 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",6,9,['status: accepted']
2848,76331145,4754,3834332,2016-07-05 19:43:37,2016-07-06 17:01:49,closed,Fixed typo in plot title,"Fixes #4753
",3,1,['status: accepted']
2849,76297385,4751,3834332,2016-07-05 15:48:13,2016-07-07 21:59:50,closed,Palette Testing & Grey Function,"Supersedes #4696
Partially Resolves #3347 
- Adds grey/gray function similar to magma, plasma, and viridis
- Adds Greys10 & Greys11
- Adds testing for Bokeh palettes
",6,21,['status: accepted']
2850,76203086,4748,3834332,2016-07-04 22:21:15,2016-07-05 02:05:47,closed,Provide minimum pandas version in installation doc,"Resolves #4743
",1,1,['status: accepted']
2851,76114212,4744,3834332,2016-07-04 05:30:54,2016-07-05 14:46:57,closed,Bryanv/3511 windows tests,"issues: fixes #3511

Gets running: 
- JS unit test
- Python unit tests
- code quality tests
",1,6,['status: accepted']
2852,76081028,4741,3834332,2016-07-03 05:01:58,2016-07-10 02:44:13,closed,remove all 0.11 io-related deprectations,"[x] issues: fixes #3383

@bokeh/dev thoughts on when to merge this? I'm fine with it going in a `0.12.1`
",0,1,['status: accepted']
2853,76080857,4740,3834332,2016-07-03 04:48:25,2016-07-03 05:50:49,closed,add missing test dependency,"[x] issues: fixes #3041
",0,1,['status: accepted']
2854,76073774,4738,3834332,2016-07-02 20:21:16,2016-08-04 13:14:53,closed,spectrogram improvements,"issues: fixes #4737

@birdsarah when you return I'd like to just collaborate on this one PR to improve the spectrogram in various ways. 
",3,3,['status: accepted']
2855,76072883,4734,3834332,2016-07-02 19:31:39,2016-07-05 18:49:37,closed,tests to maintain build artifact sizes,"- [x] issues: fixes #3528
- [x] tests added / passed

ping @bokeh/dev 
",4,3,['status: accepted']
2856,76056432,4732,3834332,2016-07-02 05:13:17,2016-07-03 20:35:37,closed, code quality testing improvements,"- [x] issues: fixes #4730 fixes #4533
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,5,['status: accepted']
2857,76055868,4731,3834332,2016-07-02 04:36:52,2016-07-02 06:03:42,closed,Fix documented name for ResizeTool,"issues: none

Latest (0.12.0) [docs](http://bokeh.pydata.org/en/latest/docs/user_guide/tools.html#resizetool) specify `'resize_select'` as the name for ResizeTool tool, but correct name is just `'resize'`. Fixes doc.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
2858,76043890,4729,3834332,2016-07-01 22:26:03,2016-07-05 16:51:43,closed,update to rbush 2.0.1,"- [x] issues: fixes #4691
",5,5,['status: accepted']
2859,76042453,4728,3834332,2016-07-01 22:07:25,2016-07-01 22:28:48,closed,Corrected error in first quickstart example,"Fixes #4727
",1,1,['status: accepted']
2860,76023520,4724,3834332,2016-07-01 19:02:44,2016-07-03 21:34:44,closed,allow scripts failures to fail the build,"issues: fixes #4525

The problem was that the `scripts` task was configured to ""log"" errors, instead of letting them fail the build, as described here:

https://github.com/contra/gulp-coffee#error-handling

With this change, e.g. a syntax error now results in:

<img width=""724"" alt=""screen shot 2016-07-01 at 2 02 01 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/16531919/770231bc-3f94-11e6-9b72-8f035c66b1c6.png"">
",3,2,['status: accepted']
2861,76019213,4723,3834332,2016-07-01 18:26:29,2016-07-05 14:45:38,closed,"factor JS version into version.coffee, compare to document version","issues: fixes #3008

versions show up on `debug` when they match:

<img width=""457"" alt=""screen shot 2016-07-01 at 1 21 08 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/16530751/2fcebe3c-3f8f-11e6-8373-af294bd87b20.png"">

but accompany a warning if they fail to match:

<img width=""460"" alt=""screen shot 2016-07-01 at 1 22 03 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/16530744/2aaeae9e-3f8f-11e6-900f-a8ea14317afc.png"">

Assumption is that `x.y.z-FOO` matches `x.y.z-BAR` 
",5,10,['status: accepted']
2862,75883586,4718,3834332,2016-06-30 20:17:41,2016-07-02 16:38:58,closed,Geom_Point Fix,"Fixed issue mentioned in #4424 

Previously converting mpl Paths or PathCollections to Bokeh glyphs was not supported. Unfortunately, mpl.gcf() for whatever reason returns a PathCollection instead of a Line2D when handling geom_point from ggplot. This caused the geom_point-turned-PathCollection not to render on the Bokeh plot. Shamelessly copying the draw_markers function from bokeh_renderer into a new draw_path_collection and modifying it a bit to work allows for the paths to be turned into Bokeh glyphs.

Unfortunately there are three limitations:
1. Since the PathCollection stores the shape of the glyph as a path and Bokeh does not yet handle custom glyph shapes, all converted paths default to circle.
2. If someone were to pass a PathCollection for a type of graph other than a scatter plot, it would most likely (untested) result in a scatter plot of the major points instead of, for example, a line plot. Although, this is still better than drawing nothing at all imo.
3. My method of calculating the sizes is no where close to an exact science.

Before Fix:
![3c419be0-28d2-11e6-8161-0b7964395ab0](https://cloud.githubusercontent.com/assets/19802403/16502728/63f8e166-3ed5-11e6-96ce-94b43ebdbaf6.png)

After Fix:
![ggplot_works_mostly](https://cloud.githubusercontent.com/assets/19802403/16502794/ba946f9a-3ed5-11e6-91dd-00d7d05d0ea6.png)
",3,7,['status: accepted']
2863,75882655,4717,3834332,2016-06-30 20:11:25,2016-06-30 21:44:14,closed,Fix 'defult' -> 'default' in TapTool.behavior attr,"Fix 'defult' -> 'default' in TapTool.behavior attr
- [x] issues: fixes #4716 
",0,1,['status: accepted']
2864,75826257,4702,3834332,2016-06-30 14:11:42,2016-07-01 12:51:49,closed,Improve PyPy compatibility,"- [x] issues: fixes #4701
",17,8,['status: accepted']
2865,75820990,4700,3834332,2016-06-30 13:40:12,2016-06-30 13:48:35,closed,Replace additional 0.11.1 to 0.12.0 in confy.py,"Fixes issue #4692, again
",1,1,['status: accepted']
2866,75753754,4699,3834332,2016-06-30 03:05:20,2016-07-02 06:04:52,closed,Change div class to bk-root from bokeh-container,"- [x] issues: fixes #4693 

Testing: this code isn't very well tested. I'm not sure the best way to ensure against regressions.

Example code: https://github.com/beenje/flask_bokeh_app

ping @beenje for testing
",3,3,['status: accepted']
2867,75677202,4696,3834332,2016-06-29 16:11:52,2016-07-05 15:55:13,closed,Function for Grays,"Partially responds to #3347:
- Adds grey/gray function similar to magma
- Adds greys256 palette
- Adds warning for when more than 256 colors are requested since more than 256 colors is not always possible
",6,2,['status: superseded']
2868,75666180,4695,3834332,2016-06-29 15:10:31,2016-06-30 13:34:45,closed,Changed second 0.11.1 to 0.12.0,"I haven't created the recreated the docs, but I think this fixes issue #4692
",4,1,['status: superseded']
2869,75350259,4687,3834332,2016-06-27 17:37:19,2016-06-27 22:33:56,closed,Last docs 012,"fixes some remaining small issues, remove out of date bokehjs reference, makes it an error if plots fail to build
",0,11,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2870,75293428,4686,3834332,2016-06-27 11:10:30,2016-07-02 06:05:19,closed,Draw annotation level after WebGL blitting,"Fixes #4679 

cc @bryevdv @brendancol 
",7,2,['status: accepted']
2871,75272583,4685,3834332,2016-06-27 08:24:57,2016-06-27 08:25:12,closed,Bryanv/hotfix examples,"very minor examples-only fixes
",0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2872,75269263,4684,3834332,2016-06-27 07:53:01,2016-06-27 07:53:14,closed,code quality,"Tripped up by code quality again...

@mattpap This is resulting in lots of ugly little fixup commits. I at least need a GH pre-commit hook, if we are to keep it. The problem is that it is hard to run locally, it picks up things it should not (e.g. stray HTML files under `sphinx`, if I've been testing source examples there) 
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2873,75243967,4683,3834332,2016-06-26 23:28:25,2016-09-19 15:15:44,closed,Broken dialog ,"This is a WIP to get dialog working again.

As far as I can tell this was broken before the layout work - my guess is that the bk-root work broke it - but I'm not sure.

The layout work has complicated this further - you now have two instances of the same object on the model - the children of buttons_box and the buttons - this creates duplicated edit variables which is no longer ok.

Can't get this working quickly, and am out of time.

Close #4652
",4,2,['status: declined']
2874,75241371,4682,3834332,2016-06-26 21:36:09,2016-06-26 23:32:14,closed,add deprectated getter/setter for Plot.responsive,"issues: fixes #4620
",2,1,['status: accepted']
2875,75184025,4678,3834332,2016-06-24 22:49:36,2016-06-27 07:38:25,closed,general docs improvements for 0.12,"# issues: closes #4485 closes #3329 closes #4669 closes #4368

Other things to close in this PR:
- [x] `FuncTickFormatter` subsection in styling
- [x] legend outside plot area subsection in styling
- [x] ~~~split annotations into separate section~~~
- [x] new JS API section 
- [x]  custom models section
- [x] update apps examples README
- [x] update gallery for new apps examples to be deployed
- [x] docs for `bokeh.layouts`
",10,21,['status: accepted']
2876,75168402,4677,3834332,2016-06-24 20:22:31,2016-06-24 21:54:39,closed,undeprecate from_df,"issues: fixes #4675 
",0,1,['status: accepted']
2877,75167581,4676,3834332,2016-06-24 20:15:44,2016-06-25 23:04:24,closed,more examples tweaks for 0.12,"This should try to collect the last set up examples updates. 
",2,8,"['status: accepted', 'type: task', 'reso: completed']"
2878,75161909,4674,3834332,2016-06-24 19:28:31,2016-06-24 21:54:19,closed,remove call to deprecated attribute and replace with new ones,"issues: fixes #4672 
",4,1,['status: accepted']
2879,75161273,4673,3834332,2016-06-24 19:23:12,2016-06-25 15:09:16,closed,"docs update for layout deprecations, etc","issues: closes #4466

ping @birdsarah 
",0,1,['status: accepted']
2880,75100408,4671,3834332,2016-06-24 11:25:40,2016-06-26 23:35:37,closed,Pretty-up gapminder example,"Just some aesthetic choices and some streamlining
",13,5,"['status: accepted', 'type: task', 'reso: completed']"
2881,75096249,4670,3834332,2016-06-24 10:44:32,2016-06-24 12:59:30,closed,Clean up notebook examples,"Just really minor tweaks
",0,6,"['status: accepted', 'type: task', 'reso: completed']"
2882,75090117,4668,3834332,2016-06-24 09:51:52,2016-06-24 10:57:24,closed,Correctly call resize,"Fixes #4666
",1,1,['status: accepted']
2883,75087725,4664,3834332,2016-06-24 09:32:10,2016-06-24 10:55:44,closed,Fix widget calls in wrong order,"Fixes: #4663 

I started using super - and put it in the wrong place - in the recent widgets PR.
",1,2,['status: accepted']
2884,75061697,4662,3834332,2016-06-24 04:04:08,2016-06-24 10:54:56,closed,examples cleanup ,"remaining in modes: dropdown bug? and from_df deprecation
",1,6,"['status: accepted', 'type: task', 'reso: completed']"
2885,75024655,4661,3834332,2016-06-23 20:48:30,2016-06-24 12:58:31,closed,Add support for Google Maps API Key,"Fixes: #4658 

Rough around the edges still, but tested locally with my own api key and works.

We should probably add a python warning.

@bryevdv - I have some thoughts about what to do about docs, but that should probably be in a seperate PR.
",1,7,['status: accepted']
2886,75023085,4660,3834332,2016-06-23 20:38:35,2016-09-09 22:31:32,closed,Hotfix to make DataTables editable,"`BooleanFormatters` are still broken, but I'm able to edit a DataTable now
- [x] issues: fixes #4616
- [ ] tests added / passed
- Changed CellEditor to be a subclass of Widgets.Model
- Changed order of initializer for CellEditorView (probably not best practice)
",22,18,['status: ready']
2887,75022349,4659,3834332,2016-06-23 20:33:20,2016-09-09 17:46:46,closed,Feature/functickformatter args,"Will be merged into 0.12.1 or 1.0
- [x] issues: fixes #4621
- [x] tests added / passed

Adds support for bokeh models as args to FuncTickFormatter.
",29,19,"['status: accepted', 'MIGRATION']"
2888,75016409,4656,3834332,2016-06-23 19:53:24,2016-06-24 14:06:45,closed,Updated ggplot & mpl_exporter Legend Fix,"Fixes #4559
Partially Fixes #4424 (geom_point with colors still unpredictable at best)
Supersedes #4628 

Updated .draw() to .make() to match yhat ggplot API changes.

Replaced mpl exporter legend line drawing with a warning due to it causing issues with seaborn_tsplot and ggplot_density by graphing the legend as line glyphs.
",4,2,['status: accepted']
2889,74951733,4655,3834332,2016-06-23 13:09:26,2016-06-23 13:32:17,closed,Skip 3 more flaky JS tests,"Flaky JS tests are really slowing things down.

I have an open issue to go back and really figure out what's going on. All seem to be the same problem of a poorly stubbed Solver.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2890,74946220,4654,3834332,2016-06-23 12:30:39,2016-06-23 15:54:59,closed,Examples tweaks,"This is branched of #4651 

Tweaks a few examples.
",1,26,"['status: accepted', 'type: task', 'reso: completed']"
2891,74906580,4651,3834332,2016-06-23 07:17:46,2016-06-23 15:51:20,closed,Render widgets and widget box correctly,"This PR takes care of some clean-up that should have been done before, and fixes a bug in widgetbox rendering. Fixes: #4601, #4636, #3346, probably #2549

1) All widgets should not pollute their widget wrapper. The widget wrapper looks something like this `<div id=""1234"" class=""bk-widget bk-layout-fixed"">` and may have a width/height/x/y position. All html and classes related to the widget should be inside this box for predictable widget results. I did some of this during the layout PR, but forgot to go back and clean-up the others.  (I'm leaving data_table as an exception to this as it's very complicated and I wouldn't want to break it, and I think it'll be ok).
2) I have fixed some rendering issues with the WidgetBox. Some of this was due to bugs introduced by the initialization PR, I also now set a sensible default for a fixed widgetbox (which has some implications, but is overall a good thing).

There's also some small clean-up of the `buttons_server.py` example, which could have been in a different PR, but snuck in here.
",18,23,['status: accepted']
2892,74886645,4650,3834332,2016-06-23 02:18:31,2016-06-27 22:33:09,closed,New Bokeh server spectrogram,"issues: fixes #4589

Still needs a custom model for the waterfall, but ~80 lines of python (_no_ JS so far) get this:

<img width=""970"" alt=""screen shot 2016-06-22 at 9 19 39 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/16289932/2abc8360-38bf-11e6-9f3f-e5a137f6aeb5.png"">
",1,8,['status: accepted']
2893,74851025,4645,3834332,2016-06-22 20:26:05,2016-06-23 15:52:50,closed,Fix LOD downsampling,"Fixes #4622
",9,3,['status: accepted']
2894,74850658,4644,3834332,2016-06-22 20:24:03,2016-06-23 01:34:16,closed,Update scale on mainGlGlyph obj and not self,"- [x] issues: fixes #4633

I'm not entirely sure of the consequences of the changes. It seems that the computed attributes were being set on the wrong object (self and not the mainGlGlyph arg), so I just changed it.

The webgl examples still seem to work... 

ping @almarklein 

Discussion:
- Any good strategies for preventing regressions beyond a selenium test?
",1,2,['status: accepted']
2895,74844843,4641,3834332,2016-06-22 19:45:28,2016-06-23 13:15:39,closed,Should not have a toolbarbox warning when making a grid plot,"Fixes #4583
",2,2,['status: accepted']
2896,74840088,4640,3834332,2016-06-22 19:12:25,2016-06-22 23:02:23,closed,Hotfix/division by zero in logmapper,"- [x] issues: fixes #4639 
- [x] tests added / passed

Refactor as: `Math.log1p(x/y)` -> `Math.log1p(x) - Math.log1p(y)`
",5,3,['status: accepted']
2897,74839042,4638,3834332,2016-06-22 19:05:04,2016-06-23 04:58:54,closed,Keep fixed listen to and solve zoom issue,"Fixes: #4611 #4488
",4,7,['status: accepted']
2898,74832795,4637,3834332,2016-06-22 18:24:08,2016-06-22 19:53:44,closed,Update nvertices on rerender,"- [ ] issues: fixes #4633

Fix implementation to match webgl/markers.coffee
",3,1,['status: superseded']
2899,74813429,4630,3834332,2016-06-22 16:15:15,2016-06-22 16:57:03,closed,Birdsarah/4629 styling tweaks,"Fixes: #4629
",7,3,['status: accepted']
2900,74803202,4628,3834332,2016-06-22 15:18:06,2016-06-23 19:53:58,closed,"Unpinned ggplot version and fixed step, line","Partially fixes #4559 and relates to #4424 

ggplot changed .draw() to .make() between versions so updated that in 2 out of 3 examples. Unpinned version fro Travis. Did not update ggplot_density.py due to .make() incorrectly displaying and unable to fix in time for next rc.
",1,1,['status: superseded']
2901,74795979,4627,3834332,2016-06-22 14:39:13,2016-06-22 15:36:40,closed,small updates to compat,"issues: fixes #4626

Some very tiny changes to shore up mpl compat. ping @bokeh/dev 
",0,1,['status: accepted']
2902,74785813,4625,3834332,2016-06-22 13:41:32,2016-06-22 15:23:17,closed,"Revert performance regression ""fix"" from #4493","This fixes #4611, but reverts #4493, so #4488 performance regression is still there. I shouldn't be using the word _fixes_ at all right now, because I don't fully understand what is going on in the rendering pipeline.
",1,1,['status: accepted']
2903,74680435,4618,3834332,2016-06-21 20:33:02,2016-06-21 22:34:19,closed,Gapminder server example and cleanup," issues: fixes #4501

supersedes #4596

Original work by @HuntJSparra 
",1,6,['status: accepted']
2904,74643705,4615,3834332,2016-06-21 16:28:29,2016-06-21 20:35:53,closed,Execute range callbacks on reset_range (called by reset_tool),"- [x] issues: fixes #4614
- [ ] tests added / passed (in progress)

ping @philippjfr for testing
",8,3,['status: accepted']
2905,74592538,4609,3834332,2016-06-21 11:10:47,2016-06-21 20:36:26,closed,Remove hack unneeded since #4607 introduced in #4312,"Remove leftover after #4607.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2906,74561265,4607,3834332,2016-06-21 07:10:17,2016-06-21 10:29:17,closed,Ensure toolbars give themselves space in complex layouts,"Fixes: #4606
",10,5,['status: accepted']
2907,74549995,4605,3834332,2016-06-21 04:30:23,2016-06-21 08:42:29,closed,Bryanv/children layout,"- [x] issues: fixes #3546
- [x] tests added / passed
",0,20,['status: accepted']
2908,74543409,4604,3834332,2016-06-21 02:37:40,2016-06-21 02:38:00,closed,specify columns explicity in ajax source," issues: fixes #4603
",0,1,['status: accepted']
2909,74459798,4596,3834332,2016-06-20 15:11:37,2016-06-21 20:34:57,closed,Gapminder CSS Fix & Server Example,"Fixed CSS on Gapminder example so it displayed correctly and added a server example of Gapminder using python callbacks instead of CustomJS.

Resolves #4501

Have not touched the Jupyter Notebook example.
",2,2,['status: superseded']
2910,74457253,4595,3834332,2016-06-20 14:56:49,2016-06-21 02:03:28,closed,Work around pandas bug in weather app example,"Fixes #4594
",1,2,['status: accepted']
2911,74396703,4592,3834332,2016-06-20 06:54:12,2016-06-21 16:09:32,closed,Surface3d custom,"- [x] issues: fixes #4591
- [x] release document entry (if new feature or API change)

Intend to add more comments about what the parts of the custom model are. Also plan to delete `random_tiles` in another PR as it just confuses people. Comments welcome.

---

UPDATE: Here is the latest, I've also added lots of comments in the code about building custom modes. I will merge this after noon unless comment @bokeh/dev 

<img width=""672"" alt=""screen shot 2016-06-21 at 10 24 35 am"" src=""https://cloud.githubusercontent.com/assets/1078448/16235416/6cee357e-379a-11e6-95ec-c0a1b728591b.png"">
",1,7,['status: accepted']
2912,74370374,4590,3834332,2016-06-19 18:27:16,2016-06-23 02:16:11,closed,Fix up spectrogram,"issues: fixes #4589
",5,1,['status: declined']
2913,74364734,4588,3834332,2016-06-19 14:28:12,2016-06-19 17:40:45,closed,fix title props mismatch,"issues: fixes #4587

make text_align and text_baseline internal and set up text @visuals by
hand. Also, protect the ctx change in the initializer with a
save/restore.

Side question: seems like JS tests should have complained about this before
",1,1,['status: accepted']
2914,74361090,4586,3834332,2016-06-19 11:25:22,2016-06-20 04:00:23,closed,Fix toolbar display in fixed mode gridplot,"Fixes: #4578 
",1,1,['status: accepted']
2915,74360820,4585,3834332,2016-06-19 11:09:19,2016-06-20 03:59:25,closed,Set default gridplt toolbar position to above,"Fixes: #4584 
",2,1,['status: accepted']
2916,74354982,4576,3834332,2016-06-19 05:10:45,2016-06-22 15:38:29,closed,General Examples Improvements for 0.12,"A selection of improvements to examples for layouts or other improvements

Partially fixes #4397
",6,18,['status: accepted']
2917,74347367,4573,3834332,2016-06-18 21:07:46,2016-06-18 21:52:05,closed,properly update button appearance on button_type,"issues: fixes #4572

`@$el.empty()` does not remove classes, so CSS classes for the type were
simply accumulating. Use `@$el.removeClass()` to properly remove all CSS
classes on start of render.
",0,1,['status: accepted']
2918,74339042,4571,3834332,2016-06-18 14:53:56,2016-07-01 13:21:55,closed,minimal server + notebook support,"- [x] issues: fixes #3461
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

With this, the notebook can either be run with:

```
bokeh serve --allow-websocket-origin=localhost:8888
```

in one terminal, and

```
ipython server_animated.ipynb
```

and _Cell -> Run All_. This uses `bokeh.client` to connect the python code running in the Jupyter kernel to the server, the same as the examples in `examples/plotting/server`.

Alternatively, the app can be run directly in the server with:

```
bokeh server server_animated.ipynb
```

Running this way, the server monkey patches all the relevant `bokeh.io` and `bokeh.client` to duo nothing, and runs the code from the notebook as a true app, directly in the server. 
",10,7,['status: declined']
2919,74326168,4570,3834332,2016-06-18 03:20:38,2016-06-18 03:21:47,closed,fix bokeh logo in notebook load,"issues: fixes #4569
",1,1,['status: accepted']
2920,74316715,4566,3834332,2016-06-17 23:04:13,2016-06-21 04:08:33,closed,pin ggplot version preceding uploading new versions to anaconda.org,"This is needed as part of #4559, otherwise when new ggplot pkgs are uploaded, the tests will break. The open should be removed when #4559 is completed. 
",1,3,"['status: accepted', 'type: task', 'reso: completed']"
2921,74299293,4565,3834332,2016-06-17 20:18:17,2016-07-20 18:48:21,closed,Allow user to choose not to optimize on addConstraint,"Easy performance win when adding all the constraints in add_root.

Ref: #4395 

ping @sccolbert @bryevdv @mattpap 

I need to do some more benchmarking, but I wanted to get early eyes as modding kiwi.js is something I do with trepidation.  This isn't earth shattering but does speed things up.
",7,1,['status: declined']
2922,74298101,4563,3834332,2016-06-17 20:08:20,2016-06-20 03:59:08,closed,In a notebook div send a document with only the model needed for show,"Fixes: #4506 

Significantly improves notebook performance. Ref: #4395
",20,6,['status: accepted']
2923,74296312,4562,3834332,2016-06-17 19:54:08,2016-06-18 03:01:54,closed,Changed title_text and issue #4547,"Replaced some deprecated title_parameter with the new title.parameter.

Solves issues #4547 also
",3,3,['status: accepted']
2924,74256556,4557,3834332,2016-06-17 15:00:37,2016-06-19 04:24:30,closed,Improvements to layout functions,"Don't have an issue on this yet. Have just been tweaking as I have been using layout and wanting to improve my convenience.

1) supply a plot_width and plot_height to griplot and it sets them all for you (great for a fixed layout with lots of plots and less typing) `gridplot([[p1, p2, p3, p4], [p5, p6, p7, p8]], plot_width=200, plot_height=200)`

2) supply a list of plots (and/or None's) to gridplot and a number of columns (as opposed to a list of lists) and it'll make the grid for you. `gridplot([p1, p2, p3, p4, p5, p6, p7, p8], ncols=4, plot_width=200, plot_height=200)`
",2,5,"['status: accepted', 'type: task', 'reso: completed']"
2925,74197550,4555,3834332,2016-06-17 07:04:48,2016-06-18 02:11:46,closed,Fix broken layouts,"Fixes #4554 
",0,1,['status: accepted']
2926,74186741,4552,3834332,2016-06-17 04:12:57,2016-06-18 02:21:36,closed,implement a scheme to be able to select active gesture tools programatically,"- [x] issues: fixes #3054
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",21,8,['status: accepted']
2927,74181476,4551,3834332,2016-06-17 02:40:35,2016-06-17 15:40:52,closed,validation warning when sticky toolbars might overlap,"issues: closes #4550
",1,2,"['status: accepted', 'MIGRATION']"
2928,74167611,4549,3834332,2016-06-16 23:16:28,2016-06-17 23:08:46,closed,Add viridis and related color palettes,"- [x] issues: fixes #4548

Add viridis, plasma, magma and inferno colormaps from matplotlib.

Discussion:
- Am i correctly citing their work? I had to derive the hexcolors from their rgb values and didn't need the mpl glue code, so none of their original code (which is [here](https://github.com/BIDS/colormap/blob/master/colormaps.py)) is actually included.
",6,8,['status: accepted']
2929,74156922,4546,3834332,2016-06-16 21:38:45,2016-06-16 22:15:59,closed,Fix scale_both,"Fixes #4537

Still having some trouble to run Selenium locally, so trying like this first.
",1,3,['status: accepted']
2930,74154567,4544,3834332,2016-06-16 21:22:25,2016-06-16 22:17:52,closed,New layout does better when not specifying sizes for boxes,"issue fixes: #4543
",0,1,"['status: accepted', 'MIGRATION']"
2931,74148728,4542,3834332,2016-06-16 20:42:49,2016-06-16 21:13:29,closed,fixes for recent changes,"issues: fixes #4541
",1,1,"['status: accepted', 'MIGRATION']"
2932,74105605,4534,3834332,2016-06-16 15:51:44,2016-06-16 15:53:02,closed,Update link to w3schools.com,"This PR fixes the hyperlink in [this file](https://github.com/bokeh/bokeh/blob/9491d517a84edc528ac84970cb338b5c24ac1d66/sphinx/source/docs/includes/colors.txt)

Associated with issue #4530 
",1,1,['status: accepted']
2933,74097976,4531,3834332,2016-06-16 15:09:08,2016-06-16 18:04:25,closed,remove ResizeTool from set of default tools," issues: fixes #4520
",2,2,['status: accepted']
2934,74068266,4529,3834332,2016-06-16 12:01:11,2016-06-16 17:24:32,closed,Update docs,"- Remove table layouts
- Bad widgets page (http://bokeh.pydata.org/en/dev/docs/user_guide/interaction.html) is fixed after #4473 is merged
- [x] Needs a css update to bokehplots.com 
- [x] There is a css problem with slider on the page (the fix for this may help other things)
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
2935,74013090,4527,3834332,2016-06-16 02:20:15,2016-06-16 20:50:04,closed,make sizing_mode distinct from responsive,"issues: closes ~~#4484~~ #4514
",15,16,['status: accepted']
2936,73992722,4524,3834332,2016-06-15 22:08:42,2016-06-20 15:59:58,closed,Undeprecate HBox and VBox and add docstrings,"- [ ] issues: fixes #4496 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Undeprecate HBox and VBox and add docstrings explaining behavior and return value (instances of Row and Column).
",7,1,['status: accepted']
2937,73992361,4523,3834332,2016-06-15 22:05:53,2016-06-16 17:49:27,closed,Add new layout functions for row & column,"Partially fixes: #4384 

The other part of #4384 is for layout functions to accept arbitrarily nested lists. But this can wait till later. These functions should make it quick enough to spell out layouts.
",6,6,['status: accepted']
2938,73984939,4522,3834332,2016-06-15 21:11:38,2016-06-16 18:12:20,closed,Add a default Title,"Fixes: #4464 

Default title means that #4464 will no longer blow-up.

Also add a warning when someone tries to replace a title object - this doesn't work (similar to how you can't replace an axis)
",15,16,['status: accepted']
2939,73983836,4521,3834332,2016-06-15 21:04:26,2016-06-16 01:29:09,closed,Canavandl/4373 lasso improvements,"- [x] issues: fixes #2297 #4373 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)

Contains:
- Constrains lasso overlay to plot frame
- Adds callback support on select (to match BoxSelectTool)

<img width=""561"" alt=""screen shot 2016-06-15 at 4 02 39 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/16097287/b60effd6-3312-11e6-9242-d6c7d53a103d.png"">

discussion:
- Perhaps gives resolution path for #3412 via a CustomJS callback (can mark as resolved?)
- Should we make the default change to `select_every_mousemove=False` per #4172 to match BoxSelectTool?
",0,4,['status: accepted']
2940,73938068,4517,3834332,2016-06-15 15:57:00,2016-06-15 16:26:04,closed,Add missing import,"issues: fixes #4513 
",1,1,['status: accepted']
2941,73935845,4516,3834332,2016-06-15 15:44:59,2016-06-16 01:30:38,closed,test_code_quality.py use explicit utf-8 encoding to read source files,"Fixes #4515
",2,2,['status: accepted']
2942,73927504,4512,3834332,2016-06-15 14:59:52,2016-06-15 15:09:49,closed,A few fixes to the typings,"I think this can be considered part of the layout work #4392
- Add new legend prop introduced in #4452 
- Remove `resize_width_height`
- Add `Document.resize` which should now be used in place of `resizie_width_height`

cc @mattpap 
",3,1,"['status: accepted', 'type: task', 'reso: completed']"
2943,73927393,4511,3834332,2016-06-15 14:59:15,2016-06-15 22:22:34,closed,Change Title.title_padding to Title.offset and Title.title_align to title.align,"Fixes #4381
",5,4,['status: accepted']
2944,73924364,4510,3834332,2016-06-15 14:43:10,2016-06-15 16:26:47,closed,Update docstring on Title.title_padding,"Fixes: #4382
",0,1,['status: accepted']
2945,73855546,4504,3834332,2016-06-15 05:54:43,2016-06-15 19:51:39,closed,Add FuncTickFormatter for arbitrary python/javascript/coffeescript-based tick formatting,"- [x] issues: fixes #4462
- [x] tests added / passed (needs tests)
- [ ] release document entry (if new feature or API change)

example code:

``` python
from bokeh.plotting import output_file, show
from bokeh.models import Plot, Range1d, LinearAxis, FuncTickFormatter

output_file('format.html')

def add_prefix(x):
    return ""python_%d"" % (x,)

left_formatter = FuncTickFormatter.from_py_func(add_prefix)

below_formatter = FuncTickFormatter(code=""""""
function (x) {
    return ""javascript_"" + x
};
"""""")

plot = Plot(plot_width=400, plot_height=400,
            x_range=Range1d(0,10), y_range=Range1d(0,10))
plot.add_layout(LinearAxis(formatter=left_formatter), 'left')
plot.add_layout(LinearAxis(formatter=below_formatter), 'below')

show(plot)

```

yields:
<img width=""441"" alt=""screen shot 2016-06-15 at 12 49 55 am"" src=""https://cloud.githubusercontent.com/assets/2198981/16069342/3731e522-3293-11e6-9c52-5b392cf3bfcf.png"">
",4,10,['status: accepted']
2946,73771916,4499,3834332,2016-06-14 16:29:13,2016-06-14 19:22:29,closed,Fixed Dropdown Type Bug,"Resolved issue #4498 by changing @mget(""type"") to @mget(""button_type""))
- [x] issues: fixes #4498
- [ ] tests added / passed
",1,1,['status: accepted']
2947,73693908,4495,3834332,2016-06-14 07:46:21,2016-06-14 18:24:47,closed,Remove unused layout css,"Fixes: #4494
",0,1,['status: accepted']
2948,73691424,4493,3834332,2016-06-14 07:23:34,2016-06-16 18:41:58,closed,Don't listenTo resize events if fixed.,"- [x] issues: fixes #4488
- [x] tests added / passed
",2,7,['status: accepted']
2949,73688377,4492,3834332,2016-06-14 06:52:26,2016-06-15 09:20:04,closed,Tweaks to almar's resize PR,"See comments on #4473
",2,4,"['status: accepted', 'type: task', 'reso: completed']"
2950,73670298,4491,3834332,2016-06-14 02:07:02,2016-09-14 15:39:35,closed,working date slider for discussion,"addresses #2268 

Opening this PR for discussion of a better solution. The problem is the build. The jq date slider has ""dynamic"" dependencies that are just expected to be present. There are no `require` calls so our build did not pick them up. This PR has ""working"" date range slider, but I am sure there is a better way. 

ping @mattpap 
",3,2,['status: declined']
2951,73664026,4490,3834332,2016-06-14 00:29:21,2016-06-15 18:28:44,closed,Canavandl/4372 log color mapper,"- [x] issues: fixes #4372 
- [x] tests added / passed (needs more)
- [ ] release document entry (if new feature or API change)

Todo:
Currently doesn't handle instances where elements in image have value in the range (0, 1). Those pixels end up being black. Need to research what mpl does.

example code:

``` python
import numpy as np
from matplotlib.mlab import bivariate_normal

from bokeh.plotting import figure, output_file, show
from bokeh.models import Range1d, LinearColorMapper, LogColorMapper

output_file('image.html')

N = 100
X, Y = np.mgrid[-3:3:complex(0, N), -2:2:complex(0, N)]

# A low hump with a spike coming out of the top right.  Needs to have
# z/colour axis on a log scale so we see both hump and spike.  linear
# scale only shows the spike.
Z1 = bivariate_normal(X, Y, 0.1, 0.2, 1.0, 1.0) +  \
    0.1 * bivariate_normal(X, Y, 1.0, 1.0, 0.0, 0.0)

image = Z1

mapper = LogColorMapper(palette=""Spectral11"")

p = figure(x_range=Range1d(0,1), y_range=Range1d(0,1))
p.image(image=[image], color_mapper=mapper,
        dh=[1.0], dw=[1.0], x=[0], y=[0])

show(p)
```

yields (sorry for the bad palette choice): 

<img width=""603"" alt=""screen shot 2016-06-14 at 1 15 02 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/16054279/0ad29a50-3232-11e6-9317-0333a019d7d8.png"">

compared to LinearColorMapper:

<img width=""627"" alt=""screen shot 2016-06-13 at 7 25 38 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/16027593/c1170fbc-319c-11e6-8756-3e5239902e92.png"">
",14,19,['status: accepted']
2952,73661551,4489,3834332,2016-06-13 23:56:05,2016-06-14 18:17:21,closed,functioning but poorly styled datepicker,"partially addresses #4204 

This PR provides a functioning (but unstyled) date picker. It is attached to an `<input>` and the input shows the currently selected date. If someone else can get the styling working, great. Otherwise at least it functions correctly. 

Note: I removed the code from the ""render"" method because it seems to be getting called alot, unnecessarily, and there is no reason to recreate the objects every time (also doing so cleared the input so that the date did not show)
",4,1,['status: accepted']
2953,73508459,4484,3834332,2016-06-12 21:54:14,2016-06-14 20:16:15,closed,update all the responsive modes,"issues: fixes #4396

ping @birdsarah could use some help verifying this set of change is complete, etc. 
",17,3,['status: accepted']
2954,73506030,4483,3834332,2016-06-12 20:20:49,2016-06-14 00:34:46,closed,Adding Callback Instances to Group class,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #2715
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Have not been able to test this PR, but just followed the example for Ranges: https://github.com/bokeh/bokeh/blob/master/bokeh/models/ranges.py#L26
",7,10,['status: accepted']
2955,73505074,4482,3834332,2016-06-12 19:40:37,2016-06-12 20:39:51,closed,quiet boto log level,"Addresses one bullet of #4285
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
2956,73503902,4481,3834332,2016-06-12 18:54:59,2016-06-12 19:13:54,closed,Initialize colorama on Windows,"From https://github.com/tartley/colorama#initialisation: on Windows `colorama.init()` should be called. On other platforms initialization call should not have any effect, but anyway I limited the call only for Windows

closes #4480
",1,1,['status: accepted']
2957,73484908,4479,3834332,2016-06-12 03:19:04,2016-06-12 14:24:07,closed,simplify erroring test,"issues: fixes #4195

Maybe this will help. Will run CI tests on it repeatedly. 
",1,1,['status: accepted']
2958,73484270,4478,3834332,2016-06-12 02:42:32,2016-06-13 14:55:26,closed,Bryanv/4363 notebook unminified,"- [x] issues: fixes #4362

ping @mattpap OK this sucks for sure, but it works to let un-minified inline resources work in the notebook. I'd like to propose merging this for now, until you figure out what to do longer term for `bokeh-compiler.js`
",4,2,['status: accepted']
2959,73483301,4477,3834332,2016-06-12 01:43:29,2016-06-12 01:44:05,closed,remove junk template,"issues: fixes #4222
",1,1,['status: accepted']
2960,73475991,4475,3834332,2016-06-11 19:15:42,2016-06-14 15:06:28,closed,"remove dupe props in PlotCanvas, cleanup",,8,24,"['status: accepted', 'type: task', 'reso: completed']"
2961,73444042,4473,3834332,2016-06-10 22:20:53,2016-06-16 17:23:35,closed,Improving resizing and initialization,"Issues: fixes #4401

Other related issues that we might fix in this PR:
- #4386, #4403
- #3783

This is a WIP. I spend a lot of time trying to figure out how the events propagate and which part of the code sets solver constraints, etc. For some examples (e.g. `howto/dashboard.py`) work fine now, but I just saw that `howto/words_and_plots.py` is not initialized entirely correct yet.

Any comments and suggestions are very welcome.
@birdsarah @bryevdv 
",22,22,['status: accepted']
2962,73388819,4471,3834332,2016-06-10 15:09:34,2016-06-12 19:14:41,closed,Move toolbar to right of plots,"issues: fixes #4399

<img width=""610"" alt=""screen shot 2016-06-10 at 10 04 11 am"" src=""https://cloud.githubusercontent.com/assets/1417520/15968917/4f938f38-2ef3-11e6-841f-93df637bd3f6.png"">

The new toolbar location leaves the top of the y-axis flush with the top of the browser window

<img width=""614"" alt=""screen shot 2016-06-10 at 10 05 18 am"" src=""https://cloud.githubusercontent.com/assets/1417520/15968935/647022ae-2ef3-11e6-9675-b4b2db8fcb04.png"">
",6,4,['status: accepted']
2963,73118172,4463,3834332,2016-06-08 20:52:08,2016-06-12 14:43:17,closed,Removing more non-spec CSS,"- [x] issues: fixes #4275 

extending https://github.com/bokeh/bokeh/pull/4276
",3,1,['status: accepted']
2964,73081788,4459,3834332,2016-06-08 16:49:19,2016-06-21 04:30:43,closed,fix crossfilter / responsive children updates,"BokehJS was not correctly updating when the `.children` of a container were updated or when `.children` was replaced entirely. Fixed up and and updated the crossfilter example as a motivating test case as part of this PR. 
",5,6,['status: superseded']
2965,72970031,4457,3834332,2016-06-08 00:26:40,2016-06-09 00:11:26,closed,explicitly document installing into the bokehjs directory,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
2966,72798859,4454,3834332,2016-06-07 00:21:58,2016-06-07 16:09:39,closed,DOC: mentioning ``ulimit -n`` in dev guide,"Small addition to the dev docs as discussed in #4450. 

cc @birdsarah 
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
2967,72788621,4453,3834332,2016-06-06 22:26:43,2016-06-12 02:11:20,closed,4344/Better handle pd.DatetimeIndex in bokeh.charts ,"- [x] issues: fixes #4344
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",3,10,['status: accepted']
2968,72773087,4452,3834332,2016-06-06 20:33:34,2016-06-09 16:55:47,closed,Fixes to legend rendering,"Fixes #4390

There were several things wrong with the current implementation of the legend rendering:
- It followed a rather peculiar version of the box model:
  - the `legend_padding` was used as padding _and_ as margin
  - the `legend_spacing` was used as spacing _and_ as padding
- the legend items were not rendered at their correct position (which was the main cause of #4390)
- The text height was not correctly taken into account
- the `label_standoff` was not used, instead the `legend_spacing` was used as standoff.

It now should follow the standard box model. I added a `legend_margin` property to complete it. Further I reduced the default value of the `label_width`, because some labels are just real short (and the actual text length is taken into account anyway), an of the `label_standoff` because it was huge.

cc @birdsarah 
",4,4,['status: accepted']
2969,72708177,4448,3834332,2016-06-06 13:23:14,2016-06-09 00:27:08,closed,De-duplicate helptools with the same redirect,"Fixes #4385

Helptools that have the same `redirect` attribute are ""combined"" (as in only the first is used). The `help_tooltip` attribute is ignored in the comparison.

To test (a variation on the code mentioned in #4385):

``` python
import numpy as np

from bokeh.plotting import figure, gridplot, output_file, show
from bokeh.models.tools import HelpTool, WheelZoomTool

n = 50

x = np.linspace(0, 4*np.pi, n)
y = np.sin(x)

tools = ""pan,wheel_zoom,box_zoom,reset,save,crosshair,help""

l = figure(title=""line"", tools=tools, plot_width=300, plot_height=300)
l.line(x,y, line_width=3, color=""gold"")

aw = figure(title=""annular wedge"", tools=tools, plot_width=300, plot_height=300)
aw.annular_wedge(x, y, 10, 20, 0.6, 4.1, color=""navy"", alpha=0.5,
    inner_radius_units=""screen"", outer_radius_units=""screen"")

bez = figure(title=""bezier"", tools=tools, plot_width=300, plot_height=300)
bez.bezier(x, y, x+0.4, y, x+0.1, y+0.2, x-0.1, y-0.2,
    line_width=2, color=""olive"")


tools = WheelZoomTool(), HelpTool(redirect='http://stackoverflow.com/', help_tooltip='look it up')
q = figure(title=""quad"", tools=tools, plot_width=300, plot_height=300)
q.quad(x, x-0.2, y, y-0.2, color=""tomato"", alpha=0.4)

# specify ""empty"" grid cells with none
p = gridplot([[l, None, aw], [bez, q, None]])

output_file(""grid.html"", title=""grid.py example"")

show(p)
```
",2,1,['status: accepted']
2970,72700112,4447,3834332,2016-06-06 12:21:05,2016-06-07 19:23:39,closed,Edit dev guide's documentation section,"Closes #4446 

This PR was created during the PyCon sprints run by @birdsarah. The PR adds commands to assist documentarians and edits the text for increased end user clarity. 
",1,1,['status: accepted']
2971,72617878,4443,3834332,2016-06-05 01:32:28,2016-06-10 15:26:06,closed,Add styling to bokeh apps index page and add docs,"Solves issue #4425 

This makes the server app index presentable

Here is a screenshot of the index page for two running applications:

<img width=""796"" alt=""screen shot 2016-06-04 at 6 33 40 pm"" src=""https://cloud.githubusercontent.com/assets/1609952/15803115/fe6b2054-2a82-11e6-8802-493ecfff85a2.png"">
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",15,5,['status: accepted']
2972,72617330,4442,3834332,2016-06-05 00:55:35,2016-06-07 16:30:41,closed,Fix bug in throttling of render,"This PR fixes a bug where multiple calls to `request_render` in the same throttling interval will cause two renders when it should only cause one.

The fix is to make sure that any calls to `request_render` don't generate a new render (through setTimeout) when one is already pending. 

I didn't add any tests for this. I would need some guidance on how that should be done if anyone has any ideas. 
- [x] issues: fixes #4439
- [ ] tests added / passed
- [ NA ] release document entry (if new feature or API change)
",3,1,['status: accepted']
2973,72613885,4441,3834332,2016-06-04 21:42:06,2016-06-04 22:09:53,closed,Update README structure and edit grammar,"Closes #4440.

This PR makes the following enhancements to the introduction:
- Edit the introduction text
- Reorder the phrases that link to docs/quickstart/social media and add headings
- Add install command using conda to give experienced users a way to quickly install Bokeh
",0,3,['status: accepted']
2974,72588163,4438,3834332,2016-06-04 01:08:32,2016-06-12 04:07:35,closed,Feature/multiple processes,"- [x] issues: fixes #4363
- [x] tests added / passed
- [ ] release document entry

This PR is to continue the work done in PR #4364, which addresses Issue #4363 

From the Tornado docs:

> Note that multiple processes are not compatible with the autoreload
> module (or the `autoreload=True` option to `tornado.web.Application`
> which defaults to True when `debug=True`).
> When using multiple processes, no IOLoops can be created or
> referenced until after the call to `TCPServer.start(n)`.

I'd like to think more about how this affects bokeh and the way it references IOLoops
",12,12,['status: accepted']
2975,72587721,4437,3834332,2016-06-04 00:56:41,2016-06-07 22:38:00,closed,added encoder for timedeltas AND a test to confirm,"- [X] issues: fixes #2583
- [X] tests added / passed
",8,2,['status: accepted']
2976,72578751,4436,3834332,2016-06-03 22:28:10,2016-06-03 23:32:56,closed,Chord diagram colors,"Color generation in the chord builder is on line 138. 

``` python
colors = [color_in_equal_space(area / areas_in_radians.shape[0]) for area in range(areas_in_radians.shape[0])]
```

In Python 2.7, `colors` becomes a list of all the same color because `area / area_in_radians.shape[0]` is always 0. 

To fix this, I added `division` to the `from __future__` import statement. 
- [x] issues: fixes #4435
- [x] tests added / passed
- [ NA ] release document entry (if new feature or API change)
",1,2,['status: accepted']
2977,72574405,4434,3834332,2016-06-03 21:44:18,2016-06-07 21:14:37,closed,fix broken defaults test and fix defaults mismatch,"issues: fixes #4432

This PR fixes a really dumb error in `defaults.coffee` that caused the property matching test to always pass. As a result, ~50 mismatches accrued. I have fixes the test, and all the mismatches. Some review of a few of the cases will be helpful.

ping @canavandl please check out the fixes for `Title` for now I special cased some things in the test but would l like to improve that if possible

ping @birdsarah @mattpap 
",4,6,['status: accepted']
2978,72443288,4430,3834332,2016-06-03 01:46:34,2016-06-04 04:00:02,closed,Initial fix for touch events with multiple plots,"Fixes Issue #2997 

only tested on desktop with dual touch mouse
",3,1,['status: accepted']
2979,72438631,4429,3834332,2016-06-03 00:30:58,2016-06-21 16:26:57,closed,#4397 (partial) examples/models update layout,"Updated examples/models to use new layout (Row, Column, WidgetBox). 

I'm not set up to run the tests yet, but I did check each of the changes by hand with bokeh serve. The buttons_server is giving me the  Dropdown.get('type') that is not a Bokeh problem.
",18,12,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
2980,72333300,4423,3834332,2016-06-02 11:54:19,2016-06-02 17:29:44,closed,Changed docserver shutdown instruction.,"As commented on my previous PR #4033, changed message during docserver startup from 

```
Press any key to exit...
```

to

```
Press <ENTER> to exit...
```
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
2981,72332340,4422,3834332,2016-06-02 11:46:04,2016-06-07 20:49:30,closed,Updated package requirements for building docs,"Fixes #4020, among others.
Removed `sphinxcontrib-httpdomain`, `ggplot` and `seaborn` from the list of packages required to build the docs. Added `flask` (which is required to run the docserver). I wasn't exactly sure about `ggplot` and `seaborn`, but I could successfully build the docs without them and had the impression that everything was where it belonged. Are these still required anywhere?
",4,1,['status: superseded']
2982,72268026,4420,3834332,2016-06-01 23:19:58,2016-06-12 19:15:45,closed,Initial work to integrate the new ComputedTransforms into the DataSpe…,"The following is a duplicate message from closed PR: #4243 (Closed and reopened to get the PR correct)

This PR will integrate the new Computed Transforms into the DataSpec system.  This will allow the user to apply transforms to the data provided to various plotting functions.

As an example usage, the following line will apply a random jitter to the x coordinate of a set of circles

```
bk.circle(x={'field': 'xvalues', 'transform': Jitter(width=0.3)}, y='yvalues', source=mydata)
```
- [x] issues: fixes #4205 
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This is no where near ready but I wanted to put the PR in to begin the necessary work.
",1,7,['status: accepted']
2983,72193572,4417,3834332,2016-06-01 14:44:17,2016-06-02 23:18:20,closed,Put webgl examples in own directory,"Closes #4279
",8,3,['status: accepted']
2984,72075591,4415,3834332,2016-05-31 19:54:36,2016-06-02 16:38:04,closed,Server: Implement a RootHandler to `/`,"Implement a RootHandler to `/` that lists available applications or redirects
- [x] issues: fixes https://github.com/bokeh/bokeh/issues/4412
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,3,['status: accepted']
2985,72071391,4414,3834332,2016-05-31 19:24:33,2016-06-01 20:23:31,closed,addressing issue 4355,"- [x] issues: fixes #4355
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

Addressing changes needed to fix [issue 4355: problem enabling zoom on Image_url object](https://github.com/bokeh/bokeh/issues/4355#)
",3,1,['status: accepted']
2986,72067703,4413,3834332,2016-05-31 18:58:15,2016-05-31 20:21:01,closed,addressing issue 4355,"- [x] issues: fixes #4355
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",1,2,['status: superseded']
2987,72059235,4411,3834332,2016-05-31 18:00:25,2016-06-04 21:18:31,closed,Canavandl/title_annotation_improvements,"- [x] issues: fixes #4379 #4380 #4382 
- [x] tests added / passed
- [ ] release document entry (if new feature or API change)
- update `Title` default `title_align` prop in Bokeh to match BokehJS
- text_align anchor to frame edges, not canvas
- fix bug in title_padding direction while `title_align=right` (was reversed from other locations) 
",3,4,['status: accepted']
2988,72030235,4410,3834332,2016-05-31 14:55:20,2016-06-02 16:40:50,closed,update layout mode names,"issues: fixes #4396

changes:

box_ar    -> scale
width_ar  -> width_scale
height_ar -> height_scale
",6,1,['status: declined']
2989,72026651,4409,3834332,2016-05-31 14:35:32,2016-06-01 14:50:39,closed,"Use correct ""property names""","issues: fixes #4356 

Needed update glyph.x -> glyph._x after properties PR
",3,1,['status: accepted']
2990,71812726,4405,3834332,2016-05-28 22:04:43,2016-06-03 01:46:20,closed,Adjust hidpi on browser zoom,"Supersedes #4378. Fixes #4345 and fixes #4367.

This makes the hidpi pixel ratio adapt when the browser zoom changes. This turned out to be easier than the original PR that I made against master earlier (#4346), because we already get an update now when the browser zoom changes.

I tested that all the HIDPI stuff works in embedded plots as well. This means that the document does an update when it gets a `window.resize` event, regardless whether the size did not actually change, and regardless whether the plot is embedded or not. In case someone ever tries to add efficiency here, please keep in mind this use-case.
",7,3,['status: accepted']
2991,71633110,4378,3834332,2016-05-26 22:12:02,2016-05-28 22:05:51,closed,Adjust hidpi on browser zoom (against layout branch),"Fixes #4345 and fixes #4367.

This makes the hidpi pixel ratio adapt when the browser zoom changes. This turned out to be easier than the original PR that I made against master earlier (#4346), because we already get an update now when the browser zoom changes.

I tested that all the HIDPI stuff works in embedded plots as well. This means that the document does an update when it gets a `window.resize` event, regardless whether the size did not actually change, and regardless whether the plot is embedded or not. In case someone ever tries to add efficiency here, please keep in mind this use-case.

cc @birdsarah 
",1,2,['status: superseded']
2992,71428602,4366,3834332,2016-05-25 17:09:06,2016-05-25 17:39:05,closed,Update simple_hdf5/main.py,"issues: fixes #4365 
",1,1,['status: accepted']
2993,71410423,4364,3834332,2016-05-25 15:20:15,2016-06-04 02:53:34,closed,Feature/multiple processes,"- [x] issues: fixes #4363
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,3,['status: superseded']
2994,71228385,4360,3834332,2016-05-24 14:18:21,2016-05-25 16:49:18,closed,Merges the hipdi work into the layout PR,"Works!
",5,2,"['status: accepted', 'type: task', 'reso: completed']"
2995,71151398,4359,3834332,2016-05-24 03:00:58,2016-05-24 23:43:39,closed,Make hidpi work for webgl - again,"Reverts bokeh/bokeh#4358

Ping @almarklein. #4358 reverts your original PR. This PR exists to restore that work. I had bad merge results and so wanted to look at this again. Sorry for the noise.

---

Original message:

Issues: fixes #4293. This is like #4346 but without the browser-zoom update stuff.

This PR:
- makes WebGL aware of the pixel_ratio for HDPI support. 
- improves/simplifies the blitting of the gl canvas into the 2d canvas. 
- tweaks some WebGL markers to look better when zoomed in.
- ~~makes plot update when the browser zoom is changed.~~

Consequently, our WebGL glyphs have never looked so nice! Maybe even nicer than the 2D glyphs (due to better aa). Should also look great on retina displays now.
",2,1,['status: superseded']
2996,71151220,4358,3834332,2016-05-24 02:58:06,2016-05-24 02:58:24,closed,"Revert ""Make hidpi work for webgl""","Reverts bokeh/bokeh#4348

Having problems merging with layout - need to talk to @almarklein 
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
2997,70992812,4353,3834332,2016-05-23 00:02:15,2016-05-25 17:32:49,closed,Fix toolbar for chrome,"Fixes: #1848 

This is effectively a revert of commit 9e57a12

Couldn't do an actual clean revert due to file having been subsequently moved.

Ping @bryevdv - the original commit is yours. I have done a quick test and I found that, on my phone, I could still click toolbar buttons - but this was not a thorough test. 

We have lots of woes in touch support land (#2997) so I would propose putting this change back in to get desktop users working again and then we can focus on touch later.

I haven't added a test, as I have a lot going on at the moment, and it would be a somewhat involved selenium tests to detect the regression. There's already a test that detects whether buttons can be selected or deselected. But to test the regression we'l'l need to have that test not only run against standard firefox, as all our tests do now, but against a browser with the joint touch functionality. I've added an issue: #4352
",8,1,['status: accepted']
2998,70963717,4349,3834332,2016-05-21 23:55:53,2016-06-09 18:44:06,closed,Ranges can have minimum range to constrain min zoom level,"fixes #572

Implemented by allowing a third parameter in the `bounds` argument. 
",26,3,['status: accepted']
2999,70962168,4348,3834332,2016-05-21 22:30:24,2016-05-23 20:51:40,closed,Make hidpi work for webgl,"Issues: fixes #4293. This is like #4346 but without the browser-zoom update stuff.

This PR:
- makes WebGL aware of the pixel_ratio for HDPI support. 
- improves/simplifies the blitting of the gl canvas into the 2d canvas. 
- tweaks some WebGL markers to look better when zoomed in.
- ~~makes plot update when the browser zoom is changed.~~

Consequently, our WebGL glyphs have never looked so nice! Maybe even nicer than the 2D glyphs (due to better aa). Should also look great on retina displays now.
",3,1,['status: accepted']
3000,70921606,4346,3834332,2016-05-20 21:45:06,2016-05-21 22:34:48,closed,WebGL supports HDPI and HDPI is updated on browser zoom,"Issues: fixes #4345, fixes #4293.

This PR:
- makes WebGL aware of the pixel_ratio for HDPI support. 
- improves/simplifies the blitting of the gl canvas into the 2d canvas. 
- tweaks some WebGL markers to look better when zoomed in.
- makes plot update when the browser zoom is changed.

Consequently, our WebGL glyphs have never looked so nice! Maybe even nicer than the 2D glyphs (due to better aa). Should also look great on retina displays now.
",6,2,['status: superseded']
3001,70792430,4343,3834332,2016-05-20 02:10:00,2016-05-27 18:50:24,closed,Improve Bokeh Layout,"Fixes: #4164 (and a list of other things which I need to document here).

---
### ToDo
##### Tasks / bugs (in priority order)
- [x] Decide what to do with breaking API on VBoxForm (previously you could put plots in it, but you can't put plots in WidgetBox) - we could just do some work in the deprecation method so that it doesn't break people's work, but we don't compromise WidgetBox.
- [x] Titles (almost done - just a little deprecation)
- [x] Crosshair tool with server
- [x] Tabs - work as standalone, but can't be put in a layout (see `examples/models/glyphs`)
- [x] Add layout function
##### Could do after first
- [ ] ~~Helptool is not deduped on ToolbarBox~~ #4385
- [ ] ~~Make the resize event customizable - may not want it to be on window~~ #4386 
- [ ] Restore public resize method from plot - even if it just calls document.resize for now.

Tests
- [ ] models/layouts/box.coffee
- [ ] models/tools/toolbar_\* - especially _init_tools and _merge_tools

Docs
- [ ] Document off-canvas annotations
- [ ] Note that off-canvas legends require (x, y)
- [ ] Document responsiveness
- [ ] Changes for use of embed with box responsive (you need to make sure the parent has a size)
##### Do after first
- [ ] BoxAR is only known to work for a single plot in a single box.
- [ ] Legend is too tall (and maybe too wide) if more than two items
- [ ] Ensure that we have the hooks we need for phosphor (or similar) widgets having removed the method from Plot.
- [ ] Better document / investigate all the _ar modes which haven't been a focus.
- [ ] Mixed mode - start with limited support for a fixed box of widgets next to a resizable plot.
##### Done (or not doing)
- [x] Two plots in a Row is having a rough time in initialization - you have to manually resize for things to get ironed out.
- [x] put toolbar back into view 
- [x] don't resize based on window size
- [x] Restore aspect ratio capability for box responsiveness (was previously on plot.coffee resize_width_height method) - inc. responsive_width_height example 
- [x] Notebook support
- [x] In a grid of plots, toolbars can be set to any combination of `None`, `left`, `above` without a problem. But `right` or `below` will break layout - they do work on a single plot though. I'm not happy with how the constraints are being done for right & below either (including the gorpy hand-coded offset so they're not behind the plot) - the layout bug may sort itself out if the constraints improve.
- [x] tests - models/plots/plot.coffee
- [x] GridPlot is completely broken & needs re-implementing.
- [x] Make WidgetColumn and WidgetRow. Fixing the left toolbar problem will probably fix mixed layout with a fixed widgetrow/column.
- [x] Widget boxes at top of plot e.g. ohlc - deprecations, WidgetRow and left toolbar problem will probably fix this.
- [x] ~~Do more in deprecations. Construct Columns or rows for people if they have mixed plots and widgets.~~ assuming we're ok with the small breaking change, this is now looking ok - widgets are auto-wrapped
- [x] Reset tool should trigger a resize event
- [x] ~~Resize tool should only be usable with responsive=fixed mode and should trigger a resize event on mouse_up~~ it's actually ok, with the reset tool resize for its limited use.
- [x] Allow rows & columns to accept None as a spacer (makes grid plot work again)
- [x] Spacer - have grid plot try and to the right thing in a fixed layout when passed None
- [x] Spacer - make it behave in a box layout
- [x] Fixed gridplot with left toolbar - column needs moving over
- [x] GMapPlot canvas
#### Known bugs/not-yet-features (planning to live with for a while)
- If responsive mode is `height_ar`, toolbar box `above` or `below` doesn't work
- `box_ar` mode doesn't work in grid plots
- zooming/panning so the axis labels increase in size does not trigger other plots to re-align - not sure whether we want this - seems expensive (maybe could do at the end of a gesture)
",25,280,['status: accepted']
3002,70683779,4341,3834332,2016-05-19 12:17:30,2016-05-19 13:28:01,closed,Refactor WebGL into smaller chunks,"Implements first part of #4321. This is essentially #4331 without the part that builds a separate `bokeh-gl.js`.

This does not change any code, but only refactors it into multiple files. I know that each file introduces some overhead, but the single `bokehgl.coffee` has become rather huge, making it difficult to maintain.
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
3003,70434391,4334,3834332,2016-05-17 21:33:35,2016-05-24 23:42:58,closed,Deprecate old layouts,"This is part of the #4164 series of chained PRs, it is opened against a branch so that the changes just to deprecate the old layouts can be reviewed.

DO NOT MERGE THIS!

The main PR is: #4343
",8,12,['status: superseded']
3004,70434113,4333,3834332,2016-05-17 21:31:32,2016-05-20 02:10:49,closed,4164: WIP,"# WIP DO NOT REVIEW
",0,129,['status: declined']
3005,70370514,4332,3834332,2016-05-17 14:48:31,2016-05-19 16:20:43,closed,Fix step plot fail on Windows with datetime data,"Fixes #3616
",3,2,['status: accepted']
3006,70357622,4331,3834332,2016-05-17 13:34:46,2016-05-19 12:24:13,closed,Refactor WebGL code and provide as bokeh-gl.js,"Fixes #4321

This basically splits the `bokehgl.coffee` code into a few smaller files. No actual changes to that code, other than the gulp files. 
",4,2,['status: paused']
3007,70167759,4330,3834332,2016-05-16 08:56:04,2016-05-17 21:35:21,closed,4164: WIP,"Do not review.
",3,110,['status: superseded']
3008,70138704,4328,3834332,2016-05-16 00:29:26,2016-05-16 08:54:24,closed,Turn plot into box 2,"WIP - Do not merge, do not review. Using for CI.
",0,79,['status: declined']
3009,70118231,4326,3834332,2016-05-15 10:59:02,2016-05-19 16:24:02,closed,Fix handling of host wildcard: --host '*',"Fix #4325. Apparently the `match_host` function in `bokeh/server/tornado.py` was not designed to handle a port number while the `_create_hosts_whitelist` function in `bokeh/server/server.py` always append a port number (`:80`) if none is provided in the CLI therefore setting the whitelist to `*:80` which would previously not match anything.

This PR changes two things:
- Setting `--host '*'` will result in accepting requests on any port (instead of just "":80"")
- It's now also possible to use the wild card with a specific port, e.g.: `--host *:8080` or with any port with a specific hostname or ip `--host hostname:*`  explicitly.

The behavior that `:80` is appended to non-wildcard host names is preserved to follow what was previously documented.
",20,2,['status: accepted']
3010,70111812,4324,3834332,2016-05-15 04:31:44,2016-05-20 02:10:27,closed,Turn plot into box,"Part of #4164 

This PR:
- re-implements resize based on document resize and solver, not js on plot
- makes a toolbar a widget

ToDo moved to #4164 
",5,70,['status: superseded']
3011,70111579,4323,3834332,2016-05-15 04:15:07,2016-05-15 12:33:29,closed,Move Plot to PlotCanvas,"Part of #4164

Plot will become a Box that will hold a Toolbar (widget) and a PlotCanvas.
This commit just empties plot.coffee into plot_canvas.coffee

It should have no effect on Bokeh, but is important to get in early otherwise
I'm going to have unmanageable merge conflicts.
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
3012,70105888,4322,3834332,2016-05-14 22:35:51,2016-06-13 20:40:07,closed,Using ArrayBuffers instead of arrays,"Issues: related to #2204 and #2590

Currently, we serialize arrays to a list of scalars on the Python side, which is then interpreted as a JS Array. When the example contains larger datasets, this bloats the generated HTML document, but JS Arrays are also know to be inefficient (memory wise and speed wise). 

This PR is a start at a possible approach to improve this, to get some discussion going on this topic. This only covers the bit for exporting a plot to an HTML document (i.e. does not include server/websocket stuff yet), and how to unpack it at the JS side. Also, the rest of BokehJS would need some changed to correctly deal with the data being an ArrayBuffer rather than an Array.

For reference, the scatter10k example exports to 222kb instead of 1340kb (6x smaller) with this change (though the difference will be much smaller for examples with little data).

(Higher level discussions should probably occur in #2240 or in a new issue.)
",2,2,['status: WIP']
3013,70049344,4318,3834332,2016-05-13 19:53:59,2016-05-15 12:33:58,closed,Typo?,"1-char change in documentation.  
- [x] issues: fixes none
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

It should be `bokeh serve` not `bokeh bserve`, right?
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3014,70022925,4317,3834332,2016-05-13 16:26:57,2016-05-25 17:29:22,closed,Save Tool Fix,"Fixes #[4313](https://github.com/bokeh/bokeh/issues/4313) @birdsarah let me know what you think.
",14,2,['status: accepted']
3015,69650609,4312,3834332,2016-05-11 10:43:42,2016-06-20 03:58:33,closed,JS/TS charts API,"This is really preliminary stuff.
- [x] pie chart
- [x] bar chart
- [ ] line chart
- [x] hover centered on slices, not glyph
- [x] hover glyph sometimes doesn't deactivate (tooltip hides properly)
- [ ] hover can affect only certain properties (e.g. can't change `AnnularWedge`'s radius) (#2367)
- [x] tooltip attachment in the vertical dimension
- [x] `Quad` supports categorical axes
- [x] allow to anchor tooltip to `Quad` glyph's sides

Those are related:
- [ ] fix `range_padding` when constructing plots in JS
- [ ] `DataRange1d` should consider only visible part of `AnnularWedge`
- [ ] `AnnularWedge.bounds()` always returns `[0, 0, 0, 0]`

fixes #4311 
",68,80,['status: accepted']
3016,69618255,4309,3834332,2016-05-11 05:51:13,2016-05-25 19:45:58,closed,Canavandl/add title annotation,"- [ ] issues #4307
- [ ] tests added / passed
",6,39,['status: accepted']
3017,69597841,4308,3834332,2016-05-11 00:12:54,2016-05-20 01:59:52,closed,Add box layout with widgets supported,"Continues work on #4164 

Fixes: #2504, #3346, #2344, #1710, #2451, #4180

The goal of this PR is to add the initial box layout with a `Row` and `Column`. For this PR, only widgets can be gracefully laid out in a `Row`, and `Column`.

This work builds off #4305, which should be merged first.

This PR also updates the default styling of widgets to try and give a more unified default across plots and widgets.

There may be widgets that still need small tweaks so they play nicely with the new layout.
- [ ] test DataTables
- [ ] test DataTables on server
- [ ] test on server
- [ ] test with components
- [ ] specifying width & height for a widget fixes its width/height
- [ ] fix expanding to fill width/height of window
- [ ] fix templating on button
",12,47,['status: superseded']
3018,69558126,4305,3834332,2016-05-10 18:51:52,2016-05-11 16:10:15,closed,Add ability to put annotations on side panels,"Work towards #4164 

Fixes: #2865 #4267

This is the uncontroversial part of #4282. It allows annotations to be added onto side panels. This provides the path for a Label-like annotation to be a title and to be added to any side of a plot.
",2,26,['status: accepted']
3019,69426893,4304,3834332,2016-05-09 23:20:50,2016-05-27 17:57:45,closed,Added label update on model change,"- [x] issue #4282
- [ ] tests added / passed INCOMPLETE

Update label annotation on server change events (either bokeh serve or push_notebook)

demo code:

``` python
from bokeh.io import output_notebook, show
from bokeh.plotting import figure

output_notebook()

# Have to specify x/y range as labels aren't included in the plot area solver
plot = figure(plot_height=600, plot_width=600,
            x_range=Range1d(0, 10), y_range=Range1d(0, 10),
            toolbar_location=None)

label1 = Label(x=1, y=6, x_offset=25, y_offset=25,
               text=[""Demo Label""],
               text_font_size='38pt', text_color='red', text_alpha=0.9,
               text_baseline='bottom', text_align='left',
               background_fill_color='green', background_fill_alpha=0.2,
#                    angle=15, angle_units='deg',
               render_mode='canvas')

label2 = Label(x=3, y=5.5, text=[""(I'm Canvas)""], text_font_size='20pt',
               border_line_color='black', border_line_width=2, border_line_dash='8 4',
               render_mode='canvas')

label3 = Label(x=1, y=2, x_offset=25, y_offset=25,
               text=[""Demo Label""],
               text_font_size='38pt', text_color='red', text_alpha=0.9,
               text_baseline='bottom', text_align='left',
               background_fill_color='green', background_fill_alpha=0.2,
#                    angle=0.261, angle_units='rad',
               render_mode='css')

label4 = Label(x=3, y=1.0, text=[""(I'm CSS)""], text_font_size='20pt',
               border_line_color='black', border_line_width=2, border_line_dash='8 4',
               render_mode='css')

plot.renderers.extend([label1, label2, label3, label4])
```

update code:

``` python
label1.set(text=['new text'])
label3.set(text=['also new'])
push_notebook()
```
",2,1,['status: superseded']
3020,69406817,4303,3834332,2016-05-09 20:38:54,2016-05-11 00:22:55,closed,Add box layout with widgets supported,"DO NOT REVIEW :D 

Continues work on #4164 

Fixes: #2504, #3346, #2344, #1710, #2451

The goal of this PR is to add the initial box layout with a `Row` and `Column`. For this PR, only widgets can be gracefully laid out in a `Row`, and `Column`.

This work builds off #4282, which should be merged first.

This PR also updates the default styling of widgets to try and give a more unified default across plots and widgets.

There may be widgets that still need small tweaks so they play nicely with the new layout.
- [ ] test DataTables
- [ ] test DataTables on server
- [ ] test on server
- [ ] test with components
- [ ] specifying width & height for a widget fixes its width/height
- [ ] fix expanding to fill width/height of window
",3,40,['status: superseded']
3021,69400092,4302,3834332,2016-05-09 19:51:13,2016-05-09 20:47:36,closed,Pin less version to 2.6.1,"- [x] issues: fixes #4299

Pin less version to 2.6.1.

I'd be open to adding a comment to remove this dep in the future, but npm doesn't seem to support comments in package.json files.
",1,1,['status: declined']
3022,69374251,4300,3834332,2016-05-09 16:38:42,2016-05-09 20:51:42,closed,Comment out css sourcemap generation,"- [x] issues: fixes #4299 

This hotfix comments out the css sourcemap initialization/write steps, so that css sourcemaps aren't generated during the gulp build process.

This should be a **temporary solution** until the ""less"" project maintainers merge a bugfix and publish a new release. Here's their issue that tracks the regression: https://github.com/less/less.js/issues/2896

Alternatively, we could shrinkwrap our npm dependencies and modify the less dependency of gulp-less. This would allow us to continue building the css sourcemaps in the interim, but would require more work to modify the travis builds that doesn't seem worth the benefit.

I expect the less folks to have the issue resolved in a matter of hours to a couple of days, then we just uncomment the css sourcemap stuff in a new PR.
",3,1,['status: declined']
3023,69284536,4297,3834332,2016-05-09 00:20:06,2016-05-10 17:11:12,closed,Add anglespec attribute to Label annotation,"supercedes: #4283 
- [x] issues: fixes #xxxx
- [x] tests added / passed

There is one thing to note (and this is mentioned in the Label `angle` attr docstring):

> The center of rotation for canvas and css render_modes is different. For `render_mode=""canvas""` the label is rotated from the top-left corner of the annotation, while for `render_mode=""css""` the annotation is rotated around it's center.

Getting rotated label locations to match for css and canvas modes seems very difficult and not worth resolving, so I'm ok with adding a warning.

todo:
- Need new screenshot but currently struggling to build bokehjs locally.
",3,6,['status: accepted']
3024,69221963,4292,3834332,2016-05-06 23:03:50,2016-05-12 09:14:27,closed,Add WebGL support for more kinds of markers,"Implements part of #2590

Markers that we already have:
- circle
- square

Markers that can be done:
- [x] triangle and inverted_triangle
- [x] diamond
- [x] cross, circle_cross, square_cross, diamond_cross
- [x] x, circle_x, square_x
- [x] asterix

Markers that we can/should (probably) not do:
- annulus - can make the shape, but cannot parametrize at this point and API has no default ratio, so skipping for now
- oval, ellipse - same as annulus, but is also more difficult to make shape (can be done though, I think)
- rect
- bezier stuff, etc.

Other tasks in this PR:
- [x] WebGL was broken again (related to canvas element)
- [x] It appears that all WebGL markers are drawn a few pixels off the correct position
- [x] A (visual) test for the above
- [x] Update docs on WebGL
- [x] Investigate WebGL blurryness
",10,6,"['status: accepted', 'type: task', 'reso: completed']"
3025,69122006,4291,3834332,2016-05-06 08:53:37,2016-06-13 14:53:41,closed,Clean up toolbar's CSS,"This is very preliminary work to make toolbar's CSS maintainable.  I'm submitting this is such early form so that @birdsarah will know what I'm doing to the toolbar.

fixes #4290 
",5,1,['status: declined']
3026,68948793,4283,3834332,2016-05-04 23:35:52,2016-05-09 00:24:35,closed,Fix angle attr for Label annotation,"- [x] issues: fixes #4278 
- [x] tests added / passed

Now:

<img width=""594"" alt=""screen shot 2016-05-04 at 6 23 00 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/15032338/656f9b20-1225-11e6-9312-7d848e8e2777.png"">

There is one thing to note (and this is mentioned in the Label `angle` attr docstring):

> The center of rotation for canvas and css render_modes is different. For `render_mode=""canvas""` the label is rotated from the top-left corner of the annotation, while for `render_mode=""css""` the annotation is rotated around it's center.

Getting rotated label locations to match for css and canvas modes seems very difficult and not worth resolving, so I'm ok with adding a warning.
",5,3,['status: superseded']
3027,68947933,4282,3834332,2016-05-04 23:26:11,2016-05-10 19:21:54,closed,Make title an annotation,"Work towards: #4164 

Fixes: #149, #1085, #2081, #2865, #4267

Includes a generic fix for putting any annotation (including legends) in a side panel - although annotations other than legend and title may need tweaks to work properly.

ToDo:
- [ ] Figure out the API
- [ ] properly calculate extent of a rotated title (wait for @canavandl's rotating label PR to get merged)
",33,30,['status: superseded']
3028,68938058,4281,3834332,2016-05-04 21:51:33,2016-05-05 14:06:46,closed,it at all -> if at all,"extremely minor grammar correction, didn't feel it was appropriate to create an issue for this.
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
3029,68788536,4276,3834332,2016-05-03 22:56:09,2016-05-04 18:33:43,closed,Remove problem styles for SASS/Autoprefixer support,"- [x] issues: fixes #4275
",1,1,['status: accepted']
3030,68777650,4274,3834332,2016-05-03 21:24:45,2016-05-09 08:20:24,closed,TapTool improvements and new bokehjs example,"- [x] add click behavior to `TapTool`
- [x] add `HitTestResult` class in place of raw object data structure
- [x] add `bokehjs/examples/donut`
- [x] make `ImageURL` work again for unspecified width and height
- [x] don't fetch undefined urls in `ImageURL`
- [x] expose `sprintf()` in JS API
- [x] ~~add data attribution~~ (#4284)

fixes #4261
",2,8,['status: accepted']
3031,68706747,4269,3834332,2016-05-03 13:38:33,2016-05-05 14:05:45,closed,Make webgl work again,"- Fixes #4265 
- Partly address #4240
- Partly address #4279
- Leaving as WIP to include a fix for #4248 if necessary
",3,4,['status: accepted']
3032,68661348,4266,3834332,2016-05-03 06:04:32,2016-05-03 08:43:40,closed,Make title an annotation,"Part of #4164 

Requires #4203 to be merged first.
",3,32,['status: superseded']
3033,68596347,4264,3834332,2016-05-02 18:07:02,2016-05-04 01:03:51,closed,only wrap autoload_static in an onload handler,"issues: fixes #4254

This PR changes the embedding code to only wrap the JS for `autoload_static` in a document `onload` handler, and reverts the notebook embedding code to the way it was previously. 

I have verified that the notebook functions with this PR. 

@seanlaw if possible, can you check whether `autoload_static` functions as expected for you? (Looking at the output in an ipython console, it looks good, but independent verification is certainly welcome)

@mattpap I do want to take a deeper dive into all of our embedding/templating soon, but I'd like to get your opinion if this is acceptable as an immediate fix. 
",2,2,['status: accepted']
3034,68469967,4258,3834332,2016-04-30 14:59:47,2016-05-02 15:42:17,closed,"fix ""missing last grid band"" problem","issues: fixes #3434

Additionally simplifies grid implementation by converting computed properties to method calls. 

@birdsarah @canavandl I'd be interested in adding a test based on the code in the linked issue to prevent regressions, but I might need some help. 
",3,1,['status: accepted']
3035,68459696,4256,3834332,2016-04-30 06:09:24,2016-05-01 05:58:30,closed,add sample apache config,"- [x] issues: fixes #4242
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
3036,68459291,4255,3834332,2016-04-30 05:46:08,2016-05-01 05:58:58,closed,minor dev guide tweaks,"- [x] issues: fixes #4076
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

In this PR:
- make it clear the dev guide has content
- fix some broken references
- rename section ""objects"" -> ""models"" for consistency
- delete hopelessly out of date BokehJS info
",3,1,['status: accepted']
3037,68321351,4252,3834332,2016-04-29 03:39:13,2016-04-29 19:42:31,closed,Add note to testing docs about installing bokeh,"Small docs addition

Fixes: #4253 
",2,2,['status: accepted']
3038,68305313,4250,3834332,2016-04-28 23:14:35,2016-05-07 14:25:31,closed,add new Histogram stat to expose np.histogram,"issues: fixes #3576

Also includes support for list of scalars as bins, to allow customized non uniform bins
",4,18,['status: accepted']
3039,68211277,4245,3834332,2016-04-28 12:24:51,2016-06-13 14:55:39,closed,Add GridSpec and plotting/file/graphs example,"- [x] preliminary implementation of `GridSpec` (matplotlib inspired)
- [x] `plotting/file/graphs`

`GridSpec` allows to create a grid plot without dealing with lists of lists manually. Instead you use `row, col` indexes or slices. The proper implementation would allow plots spanning multiple positions (again using slices) (outside of scope of this PR, because grid plot doesn't support spans yet).

fixes #4244
",13,4,['status: accepted']
3040,68149763,4243,3834332,2016-04-28 01:09:48,2016-06-01 23:16:49,closed,Integrate ComputedTransforms into the DataSpec System,"This PR will integrate the new Computed Transforms into the DataSpec system.  This will allow the user to apply transforms to the data provided to various plotting functions.

As an example usage, the following line will apply a random jitter to the x coordinate of a set of circles

```
bk.circle(x={'field': 'xvalues', 'transform': Jitter(width=0.3)}, y='yvalues', source=mydata)
```
- [ ] issues: fixes #4205 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)

This is no where near ready but I wanted to put the PR in to begin the necessary work.
",16,1,['status: superseded']
3041,68099215,4239,3834332,2016-04-27 18:14:51,2016-04-27 22:01:28,closed,Add a prominent banner to previous and development docs,"issues: fixes #4100
",10,4,['status: accepted']
3042,68090851,4237,3834332,2016-04-27 17:16:27,2016-05-07 16:09:43,closed,Maggie m/add chart methods,"issues: partially addresses #3908 
",12,6,['status: accepted']
3043,67911834,4232,3834332,2016-04-26 15:57:40,2016-04-26 21:21:41,closed,Small updates to dev docs,"Issue: Fixes #4230 
- Adds some info on screenshot tests
- Surfaces the environment variables
- Small note on heading conventions
",2,5,['status: accepted']
3044,67691142,4228,3834332,2016-04-25 09:43:06,2016-05-05 11:45:44,closed,Add support for SaveTool (immediate PNG file download),"This works for most standards compliant browsers (FF, Chrome, Opera, Edge) and IE 10+. Doesn't work in Safari. This gives us >95% coverage of web browser market (as of March 2016). For Safari we could add fallback to ""preview/save"" or open a new tab with with an image (which could be a universal fallback).

~~(almost)~~ fixes #219.
",16,3,['status: accepted']
3045,67643441,4226,3834332,2016-04-24 17:17:01,2016-04-27 15:45:27,closed,Better docs for the Chord chart.,"Closes #4234

In order to make easier for the users the creation of Chord charts, the basic documentation has been enhanced as seen in this PR.

This should let everyone to make chord charts from pandas.Dataframe as well as squared numpy.array.

An example can be found too in the docs as well as in the examples directory at the root of the repository.
",2,1,['status: accepted']
3046,67642223,4225,3834332,2016-04-24 16:30:33,2016-04-26 17:19:22,closed,Fix #4224: make extra_x_ranges accept CategoricalAxis / FactorRange,"- [x] issues: fixes #4224 
- [x] tests added / passed
- [x] ~~~release document entry (if new feature or API change)~~~
",2,2,['status: accepted']
3047,67611385,4223,3834332,2016-04-23 16:32:13,2016-04-27 15:50:07,closed,"send date without TZ as-is, do not assume gmt","- [x] issues: fixes #4139
- [x] tests added / passed
- [x] ~~~release document entry (if new feature or API change)~~~

This PR changes the JSON encoder to not use `calendar.timegm`, which converts to local timestap, assuming that the datetimes provided are already GMT, causing them to be offset incorrectly. 
",3,4,['status: accepted']
3048,67573017,4220,3834332,2016-04-22 21:05:50,2016-04-23 15:47:35,closed,store computed final props on a private attribute,"- [x] issues: fixes #4219
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR makes the ""internal"" formats dict on a datetime tick formatter actually be internal. This PR also removes some unused ""function"" formats that were not compatible with serialization. 

Note that it is less than ideal that the `formats` bokeh property is always set from the JS side, it migh tbe better to set ""base formats"" and overlay the ""diff formats"" from python. This PR does not address that. 
",3,3,['status: accepted']
3049,67541497,4218,3834332,2016-04-22 16:52:49,2016-04-22 19:04:35,closed,Add paragraph and pretext widgets and examples to user guide.,"issues: fixes #4217 
",0,1,['status: accepted']
3050,67523177,4216,3834332,2016-04-22 14:46:43,2016-04-26 21:21:05,closed,Adding built assets to npm,"- [x] issues: fixes #4210 

Steps to publish are documented in #4210 
",10,1,['status: accepted']
3051,67431099,4212,3834332,2016-04-21 22:14:34,2016-05-05 11:36:24,closed,More TS API improvements,"- [x] always create legend, so that we can style it before adding glyphs
- [x] toolbar is now a `<div>` and its CSS is fixed
- [x] toolbar is rendered immediately, instead of in `render()`
- [x] fix `Legend`'s typings
",22,15,"['status: accepted', 'type: task', 'reso: completed']"
3052,67300874,4207,3834332,2016-04-21 05:59:08,2016-04-30 14:43:13,closed,adds server app example for exporting ColumnDataSource data to csv,"Opening this PR at the reccomendation of @bryevdv . This addresses #4206 . This is a simple bokeh server app that can be ran with `bokeh serve --show csv_export.py`. Upon launching the app you will see a data table render. The sliders allow one to change the max salary of this data. The download button is configured with a CustomJS callback to export the data to csv in the users browser.  I suspect we do not need to tests given that this is an example server app and not a a feature being added to the Bokeh library.

I have currently only tested this on chrome. It should work on Firefox and IE as well. 

NOTE: this is my first PR to bokeh, so please bear with me. 

Also, I completely understand if we want to avoid allowing people to add their own sample data .csvs to this repo in Pull Requests. It could pollute the repo. We can discuss using some of the Bokeh sample data to accomplish this same task if needed. 

the customJS is defined as follows:

``` python
js_callback = """"""
var data = source.get('data');
var filetext = 'name,income,years_experience\\n';
for (i=0; i < data['name'].length; i++) {
    var currRow = [data['name'][i].toString(),
                   data['salary'][i].toString(),
                   data['years_experience'][i].toString().concat('\\n')];

    var joined = currRow.join();
    filetext = filetext.concat(joined);
}

var filename = 'data_result.csv';
var blob = new Blob([filetext], { type: 'text/csv;charset=utf-8;' });

//addresses IE
if (navigator.msSaveBlob) {
    navigator.msSaveBlob(blob, filename);
}

else {
    var link = document.createElement(""a"");
    if (link.download !== undefined) {
        var url = URL.createObjectURL(blob);
        link.setAttribute(""href"", url);
        link.setAttribute(""download"", filename);
        link.style.visibility = 'hidden';
        document.body.appendChild(link);
        link.click();
        document.body.removeChild(link);
    }       
}""""""

button.callback = CustomJS(args=dict(source=source), code=js_callback)
```
",19,10,['status: accepted']
3053,67274516,4203,3834332,2016-04-20 23:24:31,2016-05-04 10:56:02,closed,Document is responsible for gathering all Solver Constraints,"Fixes: #3563, #2759, #4251

Work towards: #4164 

This implements just the re-working of Solver to be top-down from the document.

Added in the fix for #3563 as it's also easy and stand-alone.
",19,37,['status: accepted']
3054,67270050,4202,3834332,2016-04-20 22:38:23,2016-04-22 14:35:43,closed,make reset tool behaviour configurable,"issues: closes #4201 

@mattpap This is done except for whatever changes are needed to update the TypeScript API. Please make those ASAP

ping @dwillmer 
",2,2,['status: accepted']
3055,67268166,4200,3834332,2016-04-20 22:20:32,2016-04-20 23:25:51,closed,Bryanv/some docs,"issues: closes #4186 closes #4187
",0,2,['status: accepted']
3056,67258768,4198,3834332,2016-04-20 21:08:56,2016-04-26 17:21:49,closed,Histogram deals better with ill-defined ranges (#3660),"Fixes #3660 

I played with different approaches to deal with this problem, but this seemed to be the least intrusive. The problem can be considered an upsteam problem of pandas: Pandas selects bin bounds that are 1% wider than the actual min/max range, to ensure inclusion of all values. When the data is no range (e.g. `[3, 3, 3]`), the bin width seems to be 1% of the (mean) _value_ of the data. This breaks down for values that are zero or smaller than zero though. This PR fixes this by specifying bin bounds when the data std is zero.
",4,2,['status: accepted']
3057,67218934,4193,3834332,2016-04-20 16:34:11,2016-04-20 18:35:01,closed,Skip pandas_dataframe test,"issues: closes #4194

This has caused me a lot of problems in the past and is causing problems again.
",4,1,['status: accepted']
3058,67217086,4192,3834332,2016-04-20 16:22:04,2016-04-30 00:38:01,closed,Improve Bokeh Layout,"Issues: fixes #4164

Things to add back that have been removed early:
- [ ] Title (should be a proper renderer - see deleted commend from bev bokeh/models/plots.py ~L434)
- [ ] Padding

Things not to forget:
- [ ] Clean-up reference to panel on frame. Needed because of loop that adds axes to the sides of frame and each other in add_constraints in plot.
- [ ] Responsive flag
- [ ] Resize tool
",2,27,['status: superseded']
3059,67156482,4191,3834332,2016-04-20 09:41:49,2016-04-20 16:03:06,closed,Let toggle button have consistent state (#4190),"Fixes #4190 

The problem was the `<button ... data-bk-bs-toggle=""button"">` which made bootstrap override the style that we set in the render method. Also snuck in a typo-fix in the server-code.
",0,1,['status: accepted']
3060,67017337,4189,3834332,2016-04-19 13:23:03,2016-04-20 19:06:01,closed,Force JS execution after page/DOM fully loads,"All pull requests must have an associated issue in the issue tracker. If there
isn't one, please go open an issue describing the defect, deficiency or desired
feature. You can read more about our issue and PR processes in the
[wiki](https://github.com/bokeh/bokeh/wiki/BEP-1:-Issues-and-PRs-management).
- [x] issues: fixes #4188 
- [x] tests added / passed
- [x] ~~~release document entry (if new feature or API change)~~~
",13,2,['status: accepted']
3061,66832790,4185,3834332,2016-04-18 10:47:13,2016-04-18 13:33:41,closed,"Expose {x,y}axis in TS plotting API","fixes #4184
",0,1,['status: accepted']
3062,66642674,4181,3834332,2016-04-15 13:31:40,2016-05-12 23:34:40,closed,Set defaults to none so that the HTML will render with auto unless sp…,"This is a simple PR to change the default settings for the width and the height of the various Markup widgets (Paragraph, Div) to ""None"".  This change will result in generated HTML with no specification for width or height.  If the user wants to have a specific size, for layout purposes, he or she can specify them when they instantiate, or update the object model.
- [x] issues: fixes #4180 
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",3,1,['status: superseded']
3063,66526003,4177,3834332,2016-04-14 17:51:01,2016-04-15 15:19:17,closed,"Add 'div' widget to interaction.rst, create example","issues: fixes #4122 

Though a lot of the text could use some work.
",1,2,['status: accepted']
3064,66513563,4176,3834332,2016-04-14 16:23:17,2016-04-23 15:44:33,closed,Bryanv/3962 server templates,"- [x] issues: fixes #3962
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR adds initial support for overriding the default `FILE` template for Bokeh apps with a custom user-specified template. 
",13,7,['status: accepted']
3065,66483665,4174,3834332,2016-04-14 13:27:42,2016-04-14 15:22:03,closed,Add serve subcommand to make.bat in Sphinx docs,"Fixes #4173
",1,1,['status: accepted']
3066,66479157,4171,3834332,2016-04-14 12:56:12,2016-06-07 16:31:04,closed,Don't render twice after selection,"fixes #4170
",4,1,['status: superseded']
3067,66478192,4169,3834332,2016-04-14 12:49:11,2016-06-01 18:35:24,closed,Add custom code quality analytics,"fixes #4168
- [x] add custom code quality checks
- [x] exclude `bokeh/server/static/{js,css}`
- [ ] ~~use `.gitignore` to exclude files, e.g. `bokehjs/examples/*/*.js`~~
- [x] fix all errors
- [ ] ~~clean up `setup.cfg`~~
",12,13,['status: accepted']
3068,66472618,4167,3834332,2016-04-14 12:05:55,2016-05-03 02:01:42,closed,Fix previewSaveTool' modal view,"Fixes #4058 and fixes #4081, by attaching the tool's element to the DOM under the plot' element. 

Would perhaps be a bit nicer if we could put it directly under `bk-root` instead of under the plot, but the plot is not attached to the DOM at the time that the tool initializes, and fiddling with timeouts seems too much fuss. 

cc @mattpap 
",19,3,['status: declined']
3069,66398089,4166,3834332,2016-04-13 21:53:36,2016-04-15 17:20:10,closed,Use setuptools if available in setup.py,"fixes  #4119, fixes #4178
- Try to import setuptools, ignore if not available. If installing with pip (in which case setuptools is available) this will make the entry_points being picked up, and thus the .exe being created on Windows.
- Change how the `packages` is constructed (automatic instead of manually).
- Fix `site_packages` detection on Windows
- Able to cleanup existing bokeh installs that were installed via setuptools, (e.g. `bokeh-0.11.1 blabla`)
",11,8,['status: accepted']
3070,66207368,4163,3834332,2016-04-12 18:44:11,2016-04-14 19:25:27,closed,added support for GeoJSON GeometryCollection,"This PR address the issue: https://github.com/bokeh/bokeh/issues/3881
- [x] Add Support for GeometryCollection as GeoJSON Geometry Type

A Geometry Collection means that a feature has multiple geometries and those geometries map to a single properties object.  This PR handles that scenario by flattening that list of geometries and repeating the properties object for each geometry.  I feel this is an acceptable approach for supporting this feature. 

Example:

``` python
from bokeh.io import output_file, show
from bokeh.plotting import figure
from bokeh.models import Range1d, GeoJSONDataSource
output_file('test_multigeometry.html')

x_range=(-122.44255, -122.44285)
y_range=(37.80, 37.81)

def base_plot(tools='pan,wheel_zoom,reset',plot_width=900, plot_height=600, **plot_args):
    p = figure(tools=tools, plot_width=plot_width, plot_height=plot_height,
        x_range=x_range, y_range=y_range, outline_line_color=None,
        min_border=0, min_border_left=0, min_border_right=0,
        min_border_top=10, min_border_bottom=0, **plot_args)

    p.axis.visible = True
    p.xgrid.grid_line_color = None
    p.ygrid.grid_line_color = None
    return p

fig = base_plot()

geojson = '''{""type"":""FeatureCollection"",""features"":[{""type"":""Feature"",""geometry"":{""type"":""GeometryCollection"",""geometries"":[{""type"":""LineString"",""coordinates"":[[-122.4425587930444,37.80666418607323,0],[-122.4428379594768,37.80663578323093,0]]},{""type"":""LineString"",""coordinates"":[[-122.4425509770566,37.80662588061205,0],[-122.4428340530617,37.8065999493009,0]]}]},""properties"":{""name"":""SF Marina Harbor Master"",""visibility"":""0""}}]}'''

geojson_ds = GeoJSONDataSource(geojson=geojson)

fig.multi_line(xs='xs',
               ys='ys',
               color=""blue"",
               alpha=0.7,
               line_width=1,
               source=geojson_ds)
show(fig)
```
",2,3,['status: accepted']
3071,66040851,4162,3834332,2016-04-11 18:36:35,2016-04-11 19:51:24,closed,Add process id logging on bokeh serve startup,"issues: fixes #4149 
",0,1,['status: accepted']
3072,66010230,4161,3834332,2016-04-11 15:10:15,2016-04-20 16:17:36,closed,Enable xul browser to show plots standalone (not in browser),"issues: would close #3885 

This is a quick demonstration of what I mean in point 2 of #3885. You can show a plot using `show(p, 'xul')` or `view(.., 'xul')`, and it will end up in a native looking window with a Bokeh icon in the task bar. To test, run the `plotting/file/les_mis.py` example. You need flexx installed (`conda install -b bokeh flexx`).

@bryevdv if you're still -1 on this, we can just close it. It was simple enough to demo it quickly so that I'm sure you know what I mean :)
",8,1,['status: declined']
3073,65990628,4160,3834332,2016-04-11 13:10:00,2016-04-11 15:02:59,closed,Add linked plotting example to bokehjs,"- [x] create an example based on `linked_brushing.py` and `linked_panning.py`
- [x] make axes and grids appear for data ranges
- [x] add `GridPlot(children)` syntax (on top of `new GridPlot({children: children})`)
- [x] allow to reuse the same data source; create unique indexed field names to avoid conflicts

fixes #4159
",2,5,['status: accepted']
3074,65971385,4158,3834332,2016-04-11 10:29:53,2016-04-11 13:42:33,closed,Use model.document.solver() instead of plot.solver,"fixes #4157
",0,1,['status: accepted']
3075,65964176,4156,3834332,2016-04-11 09:33:01,2016-04-11 10:32:10,closed,Fix bokehjs plotting API after making HasProps.set() strict,"We have to test bokehjs' examples on travis ci, otherwise we will get more PRs like this.

fixes #4155
",0,3,['status: accepted']
3076,65893566,4152,3834332,2016-04-09 21:49:03,2016-04-13 14:34:37,closed,add a decorator to allow callbacks to execute without a lock,"issues: fixes #3702
",15,9,['status: accepted']
3077,65889930,4151,3834332,2016-04-09 19:25:16,2016-04-11 18:05:30,closed,Add per-app static file handling,"- [x] issues: fixes #4150
- [x] tests added / passed
- [x] release document entry (if new feature or API change)

This PR causes an `app/static` route to be added whenever a directory format app has a `static` subdirectory. It also improves the startup logging output to make the available routes more legible:

```
DEBUG:bokeh.server.tornado:Patterns are:
DEBUG:bokeh.server.tornado:  [ ( '/movies/?',
DEBUG:bokeh.server.tornado:      <class 'bokeh.server.views.doc_handler.DocHandler'>,
DEBUG:bokeh.server.tornado:      { 'application_context': <bokeh.server.application_context.ApplicationContext object at 0x107be5128>,
DEBUG:bokeh.server.tornado:        'bokeh_websocket_path': '/movies/ws'}),
DEBUG:bokeh.server.tornado:    ( '/movies/ws',
DEBUG:bokeh.server.tornado:      <class 'bokeh.server.views.ws.WSHandler'>,
DEBUG:bokeh.server.tornado:      { 'application_context': <bokeh.server.application_context.ApplicationContext object at 0x107be5128>,
DEBUG:bokeh.server.tornado:        'bokeh_websocket_path': '/movies/ws'}),
DEBUG:bokeh.server.tornado:    ( '/movies/autoload.js',
DEBUG:bokeh.server.tornado:      <class 'bokeh.server.views.autoload_js_handler.AutoloadJsHandler'>,
DEBUG:bokeh.server.tornado:      { 'application_context': <bokeh.server.application_context.ApplicationContext object at 0x107be5128>,
DEBUG:bokeh.server.tornado:        'bokeh_websocket_path': '/movies/ws'}),
DEBUG:bokeh.server.tornado:    ( '/movies/static/(.*)',
DEBUG:bokeh.server.tornado:      <class 'tornado.web.StaticFileHandler'>,
DEBUG:bokeh.server.tornado:      {'path': '/Users/bryan/work/bokeh/examples/app/movies/static'}),
DEBUG:bokeh.server.tornado:    ('/static/(.*)', <class 'bokeh.server.views.static_handler.StaticHandler'>)]
```
",8,5,['status: accepted']
3078,65872294,4148,3834332,2016-04-09 06:01:17,2016-04-11 16:43:29,closed,add option to have box zoom respect plot frame aspect,"issues: #4065

@bokeh/dev please review 

There are a few slightly rough edges. In particular, there seems to be an off by pixel error somewhere, if the aspect controlled box hits up against plot range ends (left or bottom).

But, I think this is important and useful enough as-is to merge and make issues to fix any small things later. 
",15,2,['status: accepted']
3079,65869584,4147,3834332,2016-04-09 03:35:04,2016-04-12 13:55:23,closed,update in streaming lists in place,"issues: closes #4077

@mrocklin can you compare/benchmark and see if this PR offers improvement?

@havocp the only thing I was slightly wary of was using a `hint` to short circuit the `unchanged` computation. It seems ok, but if you have any thoughts, please share. 
",27,5,['status: accepted']
3080,65866749,4146,3834332,2016-04-09 01:33:21,2016-04-11 13:40:58,closed,overlay annotations respond to backbone changes,"issues: fixes #3992

Noticed that `PolyAnnotation` almosts had the same issue. Also realized that the `update` functions only purpose was to be for silent updates (normal updates that trigger `change` can just use standard `.set`) so removed that internal property and simplified associated logic)
",3,2,['status: accepted']
3081,65866115,4145,3834332,2016-04-09 01:14:09,2016-04-11 13:41:37,closed,properly redraw span annotations on updates in canvas render mode,"issues: fixes #3993
",2,1,['status: accepted']
3082,65853204,4144,3834332,2016-04-08 21:58:51,2016-04-11 18:14:01,closed,protect notebook comms init against unexpected exceptions,"issues: fixes #3639
",3,1,['status: accepted']
3083,65833675,4142,3834332,2016-04-08 19:13:12,2016-05-04 09:05:48,closed,Canavandl/arrow annotation,"Add support for arrow annotation
- [x] closes #180
- [x] ref #177
- [x] tests added / passed
- [] ~~~release document entry (if new feature or API change)~~~
",14,23,['status: accepted']
3084,65783288,4138,3834332,2016-04-08 13:07:18,2016-04-11 08:40:45,closed,Declarative property management,"issues: closes #4141
- [x] all public (serializable) properties use `@define`
- [x] all private (nonserializable) properties use `@internal`
- [x] all overrides use `@override`
- [x] all cases of `defaults` are removed
- [x] `defaults`, `nonserializable_property_names` etc. are removed
- [x] `set(prop)` and `get(prop)` throw exception when `prop not in @props`
- [x] computed properties participate in override analysis
- [x] make sure bokehjs works after all those changes
",13,50,['status: accepted']
3085,65769983,4137,3834332,2016-04-08 11:02:31,2016-04-13 16:49:12,closed,WIP: More layout work 2,"Some more layout work. Builds off #4067 but now supporting widgets. Some screengrabs of various test cases below.
",3,88,['status: superseded']
3086,65706471,4136,3834332,2016-04-07 21:55:24,2016-04-08 17:23:34,closed,Fix resizing of embedded plots,"fixes #4110, supersedes #4120
",6,10,['status: accepted']
3087,65688295,4133,3834332,2016-04-07 19:48:01,2016-04-07 20:17:57,closed,Fix resize_height_width,"issues: fixes #4110

alternative to #4120 

do not merge - the test on #4120 is good.
",0,1,['status: declined']
3088,65657881,4132,3834332,2016-04-07 16:15:25,2016-04-07 17:13:17,closed,Hotfix - Fix path to phantomjs executable,"issues: follow-up #4099 
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3089,65591304,4130,3834332,2016-04-07 08:27:13,2016-04-07 16:13:44,closed,Change type of Bokeh.index to Map<View<Component>>,"issues: fixes #4131
",4,4,['status: accepted']
3090,65515445,4129,3834332,2016-04-06 18:41:20,2016-04-06 19:54:52,closed,Update tool overlays section,"issues: fixes #2239 
",0,3,['status: accepted']
3091,65507737,4128,3834332,2016-04-06 17:48:42,2016-04-21 16:57:52,closed,fix charts legend sorting,"issues: fixes #4057 
",2,16,['status: accepted']
3092,65503875,4125,3834332,2016-04-06 17:20:29,2016-04-06 18:01:25,closed,Remove unused logo_url,"issues: closes #3083
",0,1,['status: accepted']
3093,65495225,4123,3834332,2016-04-06 16:20:55,2016-04-06 19:53:44,closed,Update to phantomjs=2.1.7 (now phantomjs-prebuilt) hosted by GH,"issues: fixes #4099
",6,5,['status: accepted']
3094,65441564,4121,3834332,2016-04-06 10:16:29,2016-04-06 17:05:48,closed,Remove obsolete CSS classes and bokehjs/src/templates,"issues: fixes #4124
",1,2,['status: accepted']
3095,65374983,4120,3834332,2016-04-05 21:37:27,2016-04-07 21:55:44,closed,Fix resizing of embedded plots,"fixes #4110 
",31,22,['status: superseded']
3096,65343423,4114,3834332,2016-04-05 17:31:06,2016-04-05 19:50:58,closed,change unused-session-lifetime to 15 seconds:,"- [x] issues: fixes #3770
- [x] tests added / passed
- [x] release document entry (if new feature or API change)
",0,1,['status: accepted']
3097,65272380,4109,3834332,2016-04-05 09:23:21,2016-04-05 15:16:50,closed,Fix function naming in embed.coffee,"This makes server work again. Why this wasn't caught earlier? Because server code in bokehjs catches all errors, even if they are unrelated to user input. Logging programming errors isn't the right approach. Wrong code should fail as soon as possible. This also raises a question if our testing framework could do a better job in such situation.
",5,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server']"
3098,65250567,4108,3834332,2016-04-05 04:45:47,2016-04-07 15:00:03,closed,Fix box select for reversed ranges,"This PR fixes the bug where the box select tool doesn't work if any of the ranges are reversed. 

I added a function `validate_bbox_coords([x0, x1], [y0, y1])` to the hittest module, which takes x and y coords and returns the correct bounding box coordinates for [rbush](https://github.com/mourner/rbush), making sure it's `[minX, minY, maxX, maxY]`.

I also added some tests for the selection manager. The last test, `it ""should work when mappers are reversed""`, fails before the fix.  
- [x] issues: fixes #3996 
- [x] tests added / passed

~~\- [ ] release document entry (if new feature or API change)~~
",4,3,['status: accepted']
3099,65207084,4107,3834332,2016-04-04 20:25:12,2016-04-04 22:56:39,closed,"Add deprecation for {AbstractButton,ButtonGroup}.{->button_}type","fixes #4101
",9,1,['status: accepted']
3100,65193584,4106,3834332,2016-04-04 18:48:01,2016-04-07 16:00:52,closed,Canavandl/rebased label annotation,"supercedes #3956 (in which I added a bunch of unrelated LaTeX stuff)
- [x] issues: fixes #3822 
- [x] tests added / passed
- [x] ~~~release document entry (if new feature or API change)~~~
",10,52,['status: accepted']
3101,65191126,4105,3834332,2016-04-04 18:30:41,2016-04-29 19:45:31,closed,Crossfilter example fixes,"This PR addresses some bugs in the crossfilter bokeh server example introduced by changes in bokeh core:

TypeScript API updates:
- [x] https://github.com/bokeh/bokeh/issues/4103

Cannot repull session: type is not a function error:
- [x] https://github.com/bokeh/bokeh/issues/4104
- [ ] JS Error on after invoking server callbacks:
  `Bokeh: Error handling message: TypeError: Cannot read property 'solver' of null, [object MessageEvent]`
  This happen after changing a dropdown and recreating the Figure object
- [ ] move models and coffee to top-level directory instead of `models`
",14,9,['status: accepted']
3102,65184102,4102,3834332,2016-04-04 17:42:54,2016-04-04 22:41:26,closed,Change units of unused session lifetime,"Fixes #3730.

Units were originally in seconds and are now in milliseconds.
",3,1,['status: accepted']
3103,65127781,4098,3834332,2016-04-04 11:03:33,2016-04-15 17:19:23,closed,Allow getting ref to view again in line click/select event,"Fixes #4069. Supersedes #4094. Related to an earlier PR #3191.

This PR proposes a fix to #4069 by adding a get_view() function to the ""event object"" when a line is clicked or selected. By allowing the user to get a ref to the view via the event object, we avoid having to put a reference of the view on the model. Could not give the event object a direct reference to the view, because that results in a recursion error in HasProps._value_record_references(). Thus the workaround using a function.

This whole selection system needs thought. This is just a quick fix to get line selection working again (we use it in a client project) until its solved in a proper way.
",3,4,['status: accepted']
3104,65093154,4097,3834332,2016-04-04 03:44:33,2016-04-04 14:44:37,closed,Renamed connection.py to _connection.py  Issue #3514,"This PR solves the task in the issue #3514 .
1. Renamed `connection.py` to `_connection.py`.
2. `connection.py` was being imported in `session.py`. Changed `from .connection import ClientConnection` to `from ._connection import ClientConnection`.
",1,1,['status: accepted']
3105,65060337,4095,3834332,2016-04-03 06:09:23,2016-04-04 16:27:52,closed,add canonical link to sphinx template,"issues: fixes #3217 
",3,1,['status: accepted']
3106,65048335,4094,3834332,2016-04-02 19:55:06,2016-04-04 11:04:20,closed,Allow getting ref to view again in line click/select event,"fixes #4069

This PR proposes a fix to #4069 by adding a `get_view()` function to the ""event object"" when a line is clicked or selected. By allowing the user to get a ref to the view via the event object, we avoid having to put a reference of the view on the model. Could not give the event object a direct reference to the view, because that results in a recursion error in `HasProps._value_record_references()`. Thus the workaround using a function.
",3,3,['status: superseded']
3107,65038537,4093,3834332,2016-04-02 13:50:56,2016-04-05 19:30:14,closed,Improve docs for python -m bokeh command,"Issues: fixes #4092 

The ability to use `python -m bokeh` was added when we implemented `__main__.py` sometime ago. It is mentioned in the docs [here](http://bokeh.pydata.org/en/latest/docs/user_guide/server.html) but there are two places where it makes sense mentioning it too (which is what this PR does).
",4,1,['status: accepted']
3108,64853821,4091,3834332,2016-03-31 20:31:37,2016-03-31 20:49:14,closed,Point to the correct location when you look for the noarch package,"- [X] issues: fixes #4090
",1,1,['status: accepted']
3109,64834526,4088,3834332,2016-03-31 18:17:07,2016-03-31 18:19:39,closed,Update Anaconda token,"- [x] issues: fixes #4087

For the record:
1. `conda create -n ruby -c bioconda ruby`
2. `gem install travis`
3. `anaconda auth --create -n travisci_anaconda -o bokeh -s 'api:read api:write'`
4. `travis encrypt ANACONDA_TOKEN=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx`
5. Add secret to `.travis.yml`

Will merge immediately and test the devel build again... we have to be sure the scopes in the `anaconda auth` are the correct ones.
",0,1,['status: accepted']
3110,64783019,4085,3834332,2016-03-31 12:39:29,2016-04-04 20:40:34,closed,More TypeScript API,"This is continuation of PR #4037.

fixes #4086
",10,31,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3111,64679102,4084,3834332,2016-03-30 19:00:29,2016-04-26 17:20:13,closed,Add Ellipse glyph,"- [x] fixes #3848
- [x] added test in `tests/glyphs/Ellipse.py`
- [x] .rst files were edited to add the new documentation (and to edit the Oval one)

The Ellipse glyph is implemented with the CanvasRenderingContext2D.ellipse()
function, which is currently marked as experimental, and unsupported on some
mobile platform. A more robust implementation would need to use Bezier curves
until more platforms support the function.
",21,3,['status: accepted']
3112,64670608,4083,3834332,2016-03-30 18:02:30,2016-04-04 16:52:53,closed,exposed geometries as part of TapTool callback data,"This PR adds a `cb_data` object to the TapTool `callback.execute` call which contains the geometries from `plot_model.get('tool_events')`

https://github.com/bokeh/bokeh/issues/4082
",2,2,['status: accepted']
3113,64473897,4080,3834332,2016-03-29 14:25:44,2016-04-04 20:41:34,closed,Don't attach document multiple times when traversing the graph,"This fixes the problem with `_doc_attach()` being called multiple times, specifically `Canvas._doc_attached()`, which caused substantial performance degradation.
",8,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3114,64445039,4078,3834332,2016-03-29 10:37:56,2016-04-04 18:41:22,closed,Remove support for backbone collections,"This is based on top of `ts_api` branch. When #4037 is merged there should be one commit left with actual related changes. Backbone collections weren't used for a long time, so just removing the dead weight here.
",11,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3115,64279903,4074,3834332,2016-03-28 00:34:24,2016-04-20 19:23:49,closed,ColumnDataSource subsets,"issues: #4117

[Plotting with subsets (row-wise) of ColumnDataSources (like filtered data)](https://github.com/bokeh/bokeh/issues/4070)

This is definitely a work-in-progress, but I got some basic linked selection working. The approach that I took was to create a new model, ColumnData (which is basically what the ColumnDataSource is now), which holds the data and column names. The ColumnData can then be associated with multiple ColumnDataSources. Then I made ColumnDataSource aware of which indices of the data it would use so that you can use subsets of data held in the ColumnData. 

Here's an example of what it looks like:
![cds_subsets](https://cloud.githubusercontent.com/assets/4241244/14068657/29b5547a-f43f-11e5-8977-22032663b21b.gif)

``` python
from bokeh.plotting import Figure, output_file, show
from bokeh.models.sources import ColumnDataSource, ColumnData
from bokeh.io import gridplot

output_file(""cds_subsets.html"", mode=""relative-dev"", root_dir=""/users/claire/documents/bokeh/bokehjs/build/"")

data = {'x': [1, 2, 3, 4, 5, 6, 7, 8, 9, 10], 'y': [10, 5, 2, 6, 1, 4, 8, 2, 7, 3]}

#create one ColumnData object to be associated with three different subsets
column_data = ColumnData(data)
data1 = ColumnDataSource(column_data=column_data)
data2 = ColumnDataSource(column_data=column_data, indices=[i for i, val in enumerate(data['y']) if val < 8 ])
data3 = ColumnDataSource(column_data=column_data, indices=[i for i, val in enumerate(data['y']) if val > 2 ])

#creating a ColumnDataSource directly from the data defaults to include all the points
data4 = ColumnDataSource(data)

plot_size_and_tools = {'plot_height': 200, 'plot_width': 200, 
                        'tools':['lasso_select', 'box_select', 'reset'],
                        'x_range':[0, 11], 'y_range':[0, 11]}

fig1 = Figure(title=""Full dataset"", **plot_size_and_tools)
fig1.circle(x='x', y='y', source=data1, color='black')

fig2 = Figure(title=""Subset 1"", **plot_size_and_tools)
fig2.circle(x='x', y='y', source=data2, color='green')

fig3 = Figure(title=""Subset 2"", **plot_size_and_tools)
fig3.circle(x='x', y='y', source=data3, color='red')

fig4 = Figure(title=""CDS not linked"", **plot_size_and_tools)
fig4.circle(x='x', y='y', source=data4, color='black')

show(gridplot([[fig1, fig2, fig3, fig4]]))
```

This is still missing a lot, but I think it could be a really useful feature! 
- [ ] issues: fixes #xxxx
- [ ] tests added / passed
- [ ] release document entry (if new feature or API change)
",10,12,['status: declined']
3116,64272029,4073,3834332,2016-03-27 18:27:56,2016-04-05 18:07:47,closed,Try printing log file on fail,"WIP
",0,3,"['reso: working as intended', 'type: task', 'status: paused']"
3117,64272009,4072,3834332,2016-03-27 18:27:05,2016-04-05 18:08:21,closed,Hotfix: print out examples log on fail,"WIP
",2,102,"['reso: working as intended', 'type: task', 'status: paused']"
3118,64123825,4067,3834332,2016-03-25 02:13:45,2016-04-08 19:01:17,closed,WIP: More layout work,"@bryevdv @havocp 

(probably not going to have time to work on this till after strata)

Made some progress on the layout. Still to do:
- [ ] add titles back - I think we should do this properly with title being added via add_layout - it will be less hacky and easier to reason about constraints.
- [ ] toolbar (sigh - this could be hard)
- [ ] shouldn't go off the window size but the outer div size so
- [ ] does it work with embed, components?
- [ ] does it work with server?
- [ ] does it work in notebook?
- [ ] tests (there are currently none)
- [ ] ability to turn it off if you want a fixed size!
- [x] implement so widgets line up nicely too
- [ ] there's no customizations - apart from having a fixed box, what else do we want?
- [ ] what happens when Rows are used with components?
- [ ] implement layouts_legacy
- [ ] twin axes (left and right: #2006)

Optional:
- it would be nice to specify %ages e.g. `Column(children=[row1, row2])` default assumes you want  an equal split of space (so 50/50 in the case of two rows). But maybe you don't: you could do `Column(children=[(row1, 33%), (row2, 66%)])`. This is marked as optional as it should be straight forward to work around this with a custom template.

Questions:
- [ ] ~~@havocp - Box.Model (coffee/layouts/box.coffee) is an exact copy/paste from your layout-demo branch except that I canned all the whitespace stuff: it didn't seem to be doing anything and I was trying to get a smaller surface area to reason about - what am I missing - what should it be doing?~~
- [ ] @bryevdv - how do you feel about layouts_legacy for all the old layouts - similar to the chart archiving we did, and then the new layouts are just in layouts?

![gif](https://cloud.githubusercontent.com/assets/1796208/14036230/2a84f3b2-f1f4-11e5-9fa4-f4c6034b1c75.gif)
",2,65,['status: superseded']
3119,64054824,4064,3834332,2016-03-24 15:52:27,2016-03-25 10:19:25,closed,Add stock example using ts api,"Adds a stock example making use of the new ts api. Based against #4037 
",7,3,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples', 'tag: component: bokehjs']"
3120,64047079,4062,3834332,2016-03-24 15:05:27,2016-03-24 15:43:19,closed,Try no capture for examples tests,"Fixes: #4063 
",0,1,['status: accepted']
3121,64042102,4061,3834332,2016-03-24 14:33:46,2016-03-24 14:34:08,closed,Ts api stream,"Tweak to #4037 
Arg, this is not what I meant.
",0,72,['status: declined']
3122,63971720,4060,3834332,2016-03-23 23:58:14,2016-03-24 15:31:10,closed,Add the new bk-root wrapper,"Fixes: #4059 
",4,1,['status: accepted']
3123,63827846,4055,3834332,2016-03-23 03:46:21,2016-03-24 04:01:24,closed,Working on new layout,"There's still a lot going wrong here, but it's moving, this is not expecting code review, mostly for @bryevdv and @havocp 

`box.coffee` is mostly taken from @havocp and I still don't feel like I have control over it.

Here's a video of where we're at. 

![new_layout_scratch](https://cloud.githubusercontent.com/assets/1796208/13975084/0e2a0e22-f06f-11e5-853a-6722f0fcf6c5.gif)

Still a hot mess and the coloring is helping me to see what's going wrong.

Plots seem to be being drawn multiple times as you can see by the borders flickering darker.

Note: Title has been removed for now - obviously we need to add back in, but one thing at a time
",4,44,"['type: feature', 'reso: working as intended', 'status: declined']"
3124,63650453,4052,3834332,2016-03-21 23:44:40,2016-03-25 18:20:25,closed,Star whitelist,"Support \* in `--host` keyword 

Fixes #4051 
",14,1,['status: accepted']
3125,63479181,4046,3834332,2016-03-19 21:25:14,2016-03-23 18:57:27,closed,Handle axis_location=None correctly ,"issues: fixes #4042
",8,7,['status: accepted']
3126,63470946,4044,3834332,2016-03-19 15:53:29,2016-03-19 18:23:24,closed,Fix default bokeh dir on Windows,"The previous version attempted to create a top level directory on Windows.

This resolves: RuntimeError: could not create bokeh config directory at ...
",2,1,"['type: bug', 'status: accepted', 'reso: completed', 'plat: windows']"
3127,63291473,4039,3834332,2016-03-17 20:57:47,2016-03-19 18:24:03,closed,"Fix that a bar chart with one ""item"" does not show a label","Fixes #3661 

There was code to explicitly hide the x-axis, ticks and labels when there is but one item in the bar chart. But when the label is explicitly specified, it should be shown regardless.
",3,2,['status: accepted']
3128,63246842,4037,3834332,2016-03-17 15:59:16,2016-03-29 21:55:04,closed,Implementation of TypeScript API,"- [x] add support for getters/setters (`Object.defineProperty`)
- [x] fix all clashes between unrelated `this.prop` and `this.get(""prop"")`
- [x] implement CoffeeScript/TypeScript mid-level API (bokeh.plotting)
  - [x] finalize edge cases
  - [x] add support for legends
  - [x] add support for tools
  - [ ] ~~add remaining API functions (io, hold, etc.)~~
- [x] TypeScript typings for low- and mid-level APIs
  - [x] add support for included properties (mixins with prefix)
  - [ ] make `attrs` in `new Model(attrs)` type-safe without too much code duplication
  - [ ] figure out how to remove `string` from `Color` union type
- [x] make `gulp test` work again
  - [x] fix unit tests
  - [ ] ~~add support for on-the-fly typescript compilation~~
- [x] add examples:
  - [x] low-level (`bokehjs/examples/anscombe`)
  - [x] mid-level (`bokehjs/examples/burtin`)

Note: to compile everything (scripts, typings and examples), issue `gulp examples`.
",59,102,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: API: plotting']"
3129,63170768,4036,3834332,2016-03-17 04:04:24,2016-03-18 16:29:51,closed,Use the https protocol in favour of git,"The git protocol often doesn't work in a windows/corporate setting
Fixes #4035
",3,1,['status: accepted']
3130,63006211,4034,3834332,2016-03-16 02:33:44,2016-03-18 16:30:59,closed,Fix typo: supervisctl -> supervisorctl,"On the server documentation, there is a typo in the calls to `supervisorctl`.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3131,63001956,4033,3834332,2016-03-16 01:21:19,2016-03-18 18:36:21,closed,Make docserver.py run on both windows and unix by using threading instead of os.fork.,"issues: closes #4027

See the discussion in [this issue](https://github.com/bokeh/bokeh/issues/4027).

I exchanged the use of `os.fork()` in `sphinx/docserver.py` against using the `threading` module, which should work regardless of the os. I also added the possibility to shutdown the server.

My implementation is mainly due to [this GH answer](http://stackoverflow.com/a/17325148/2207840).

Caution: My experience with web programming in python is near-zero, so there is a real chance that what I did is plain nonsense. I tried the new version on both Win 7 and Arch linux and it seemed to work on both systems.

Happy to provide further relevant information!
",5,1,['status: accepted']
3132,62766574,4029,3834332,2016-03-14 15:31:09,2016-03-14 19:55:45,closed,Fix output_notebook(resources) default docstring,"Mentioned in issue #3639
",2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3133,62765498,4028,3834332,2016-03-14 15:25:00,2016-04-08 19:47:25,closed,Canavandl/3992 refactor annotations,"issues: fixes #3992 #3993 

Refactor annotations to support DataSources (and result in vectorized implementation)
- [x] BoxAnnotation
- [x] Span
- [x] PolyAnnotation
",10,12,['status: declined']
3134,62491199,4021,3834332,2016-03-11 02:56:57,2016-04-06 15:45:02,closed,HTML injection widget,"This is a simple PR which creates a new `Div` widget.  The widget renders to an HTML <div> tag.  Be default, the text property of the object will render as HTML code.  However, the boolean `render_as_text` property can be set to `True` and the text property will be rendered as text with not HTML interpretation.  

The code to use would look something like this:

```
para = Div(text = ""<H1>Slider Values:</H1><P>Slider 1: 0<P>Slider 2: 0<P>Slider 3: 0"", width = 200, height = 150, render_as_text = False)
```

To demonstrate this new feature, I modified the `slider_callback_policy.py` example in the `examples/plotting/file` directory to use the `Div` widget with HTML rendering (I think it looks much better now)

A screen shot of this is the following:

<img width=""456"" alt=""screen shot 2016-03-10 at 9 53 46 pm"" src=""https://cloud.githubusercontent.com/assets/5904886/13691921/b9d6c8dc-e70a-11e5-8a2a-a24c61da2b14.png"">

Caution: I simply copied the `Paragraph` widget and changed the name to `Div` and added some small logic to alter the `text` function call to an `html` function call.  It may be possible to combine the features of the `Paragraph` and the `Div` widgets into a single widget.

Fixes #4008 
",13,13,['status: accepted']
3135,62451567,4018,3834332,2016-03-10 20:34:51,2016-04-04 23:36:41,closed,Fix up formatting of calendars example,"Not sure when this got a bit borked, but this is what master was looking like for me:

<img width=""510"" alt=""screen shot 2016-03-10 at 12 33 22 pm"" src=""https://cloud.githubusercontent.com/assets/1796208/13683608/7175d96e-e6bc-11e5-8b98-361a0f1302ca.png"">

and here's after this PR:

<img width=""482"" alt=""screen shot 2016-03-10 at 12 32 45 pm"" src=""https://cloud.githubusercontent.com/assets/1796208/13683602/69578610-e6bc-11e5-9c33-1ea38d314724.png"">
",3,1,"['type: bug', 'status: accepted', 'reso: completed']"
3136,62431421,4016,3834332,2016-03-10 18:09:25,2016-03-23 18:58:04,closed,Add PR and Issue template,"ref #4015

Add PR and issue template for Github.
- Issue template will stress copy/pastable code example, stack traces and software versions.
- PR template will note need for related issue, tests, release notes entry.
",11,9,['status: accepted']
3137,62338685,4013,3834332,2016-03-10 04:39:27,2016-03-12 19:35:20,closed,fix notebook and toolbar css handling,"issues: fixes #4012 

This fixes the visible table borders in notebooks and also problems occurring with toolbar lines. 
",4,4,['status: accepted']
3138,62300290,4011,3834332,2016-03-09 21:37:45,2016-03-10 04:53:30,closed,clarify that default mode is 'cdn' rather than 'inline',"Clarify that default mode for output_file() is 'cdn' rather than
'inline'.
",1,1,['status: accepted']
3139,62285641,4010,3834332,2016-03-09 19:52:42,2016-03-12 19:38:20,closed,support --args to pass command line args to bokeh apps,"issues: closes #2026
",2,2,['status: accepted']
3140,62107506,4006,3834332,2016-03-08 17:42:06,2016-06-09 00:25:16,closed,Hover and click management,"This is very preliminary work.

fixes #3823, #2274, ...
",1,14,['status: declined']
3141,62001599,4002,3834332,2016-03-07 23:47:43,2016-03-08 20:07:12,closed,Fix filename in `weather` example README,"Fixes #3830 .
",4,1,['status: accepted']
3142,61999601,4001,3834332,2016-03-07 23:28:12,2016-03-08 14:24:16,closed,Fix links in README,"Current quickstart URL is invalid, QUICKSTART.md does not exist.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3143,61826474,3997,3834332,2016-03-05 22:31:07,2016-03-11 21:23:05,closed,Issue #3656: added more documentation for how to use widgets in the user guide,"Added more information to ""Adding Widgets"" section, including:
- what a widget is
- how to use widgets
  -add them to document
  -program their callbacks/handlers
- event handlers 
  -example with .on_change
  -example with .on_click 
- link to bokeh.models in the reference guide. 

I also think adding a link to the Javascript section from the bullets in this section would be nice, but I wasn't sure how to do that. 
",3,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3144,61747996,3995,3834332,2016-03-04 17:59:48,2016-03-04 23:50:20,closed,simulate sys.path behavior of regular python script in Bokeh app,"issues: closes #3994

To summarize, this PR causes code runner to:
- set CWD to app location
- prepend the empty string to `sys.path`

before `exec`ing code, and then undoes those afterward.

@bokeh/dev  ready for review
",5,7,['status: accepted']
3145,61627692,3990,3834332,2016-03-03 21:25:30,2016-03-04 17:57:41,closed,"Revert ""Some canvas and layout improvements""","Reverts bokeh/bokeh#3913

This PR appears to have broken crossfilter. @bryevdv plans to add small bits back incrementally.
",4,1,"['reso: working as intended', 'status: declined', 'type: task']"
3146,61458015,3988,3834332,2016-03-02 20:01:47,2016-03-03 19:29:33,closed,remove specific custom code that bypass end_aggregation on Interval g…,"issues: fixes #3875 
",5,2,['status: accepted']
3147,61452287,3987,3834332,2016-03-02 19:22:23,2016-06-09 00:25:46,closed,Added flight app created for trial vm demo,"issues: closes #4115 
supersedes #3983 

@rafaelhbarros is opening this up for @bokeh/dev to help finish this off - especially with regards to the sample data stuff
",12,7,['status: declined']
3148,61430921,3983,3834332,2016-03-02 16:54:50,2016-03-02 19:22:49,closed,Added flight app created for trial vm demo,"I'm missing the readme.md change which I'm unclear what I need to do.
",6,4,['status: superseded']
3149,61345006,3977,3834332,2016-03-02 03:06:20,2016-03-02 18:57:32,closed,Add cross browser capabilities,"Fixes #3827 

Builds on #3975 (which should be merged first)

Supersedes #3974 

cross browser tests need to be explicitly written to be cross browser so the author can take care with any selenium nuances. This implements a marker that marks a test to be run as a cross browser test, rather than providing a global option. 

This should make it easier to get started with cross-browser tests and provides ongoing flexibility to write targeted tests (e.g. just something for touch).
",1,4,['status: accepted']
3150,61281621,3976,3834332,2016-03-01 17:56:07,2016-03-02 15:03:00,closed,Fixed path to image,"issues: fixes #3951

Trivial update for https://github.com/bokeh/bokeh/pull/3953 to fix broken image.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3151,61267983,3975,3834332,2016-03-01 16:25:08,2016-03-02 18:23:08,closed,Visual diff test,"Fixes: #3826

Adds a `screentest` fixture with an `is_valid` method:
- adds a --set-new-base-screenshot command line parameter for setting a baseline
- uses same image-diff testing as examples

Still TODO:
- [x] incorporate screenshots and diff into pytest html report
- [x] upload screenshots and diff into
- [x] prevent screenshot tests running on wrong configuration

Future work:
- hook in to perceptualdiff's tolerance feature - on a per-test basis?
",2,11,['status: accepted']
3152,61250214,3974,3834332,2016-03-01 14:34:19,2016-03-02 03:06:38,closed,Add cross browser capabilities,"Fixes: #3827 

This adds a command line argument --cross-browser, that causes tests to run against Firefox, Chrome, and Internet Explorer. It leaves the default as Firefox.

It also switches the default platform to run against to Windows 10 because:
- windows is needed to run internet explorer
- probably good to have our integration tests running against windows as no regular bokeh devs use windows
",1,7,['status: superseded']
3153,61244348,3973,3834332,2016-03-01 13:51:38,2016-03-02 03:07:30,closed,Hold at pytest-selenium_1.1,"pytest-selenium 1.2 changes the capabilities fixture:
http://pytest-selenium.readthedocs.org/en/latest/news.html

Unfortunately pytest-selenium 1.2 uses features that aren't compatible with the
combination of pytest-2.8 and pytest-xdist. This has apparently been fixed in
pytest-2.9 which is about to be released. But for the time being we'll hold at
pytest-selenium-1.1.
",2,1,"['reso: working as intended', 'status: declined', 'type: task']"
3154,61239185,3972,3834332,2016-03-01 13:07:34,2016-03-01 13:43:12,closed,Update capabilities to match new pytest-selenium version,"pytest-selenium released a breaking change for capabilities fixture:
http://pytest-selenium.readthedocs.org/en/latest/news.html

This brings our code inline with the new change. Ping @bryevdv - this should be merged ASAP.
",2,1,"['reso: working as intended', 'status: declined', 'type: task']"
3155,61196315,3970,3834332,2016-03-01 05:47:27,2016-03-02 18:22:23,closed,Disable data_tables_server example,"Looking at recent examples failures data_tables_server often seems to be the source of hang-ups. This particular example offers little incremental benefit over others:
- we have another test for the data table
- the server tests have no image diff at the moment
- other server tests test dropdowns

It could be that data_tables_server isn't the problem it's just an early test and so because we now bail out early it's just always looking like this one, but I don't see any harm in trying disabling it (due to reasons above)

In addition:
- ~~i can't seem to get it to run locally~~
- has out-dated bokeh code in it

Edit: I can get it running locally

The code has a deprecation warning in it: 

``` sh
data_tables_server.py:134: BokehDeprecationWarning: bokeh.models.sources.from_df was deprecated in Bokeh 0.9.3; please use ColumnDataSource initializer instead
  self.source.data = ColumnDataSource.from_df(df)
```

which we should probably fix.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3156,61187208,3969,3834332,2016-03-01 03:27:24,2016-03-02 15:03:43,closed,Document use of SSH tunnels with Bokeh. #3968.,"SSH can be used to create tunnels between a remote host with a running instance of the Bokeh server and a local machine, and to access the remote Bokeh server as if it were running on the local machine.  The documentation attached to this PR describes how to create such tunnels.
",2,1,['status: accepted']
3157,61147994,3966,3834332,2016-02-29 21:27:13,2016-02-29 22:00:33,closed,Update CONTRIBUTING.md,"issues: closes #3947
",1,1,['status: accepted']
3158,61146851,3965,3834332,2016-02-29 21:19:50,2016-02-29 21:59:32,closed,Add checking for __conda_version__.py,"issues: fixes #3515 
",2,1,['status: accepted']
3159,61132979,3964,3834332,2016-02-29 19:45:55,2016-03-05 04:18:26,closed,Change css wrapper to .bk-root,"follow-up to https://github.com/bokeh/bokeh/pull/3938

fixes #3989
",21,8,['status: accepted']
3160,61130815,3963,3834332,2016-02-29 19:31:34,2016-02-29 19:31:43,closed,"Revert ""Changed .bk-plot to .bk-root for style wrapper""","Reverts bokeh/bokeh#3938
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3161,61018036,3959,3834332,2016-02-29 01:48:48,2016-04-27 15:44:28,closed,Computed transforms,"This pull request implements client side computed transforms.  In general, a new family of classes based off the `Transform` class are established.  Examples of classes in the family are:
1. _Jitter_: A class which adds a random uniform fluctuation to the input data values.  The width of the variation is specified in the `interval` property of the class
2. _LinearInterp_: Linearly interpolate between a set of provided points.
3. _StepInterp_: Linearly interpolate between a set of provided points and then floor the result to the input control points of the transformation.

These transforms are intended for use in the backend models and not necessarily for the end user.
#### TODO
- [x] Implement the `Jitter` class
- [x] Implement the `LinearInterp` class
- [x] Implement the `StepInterp` class
- [x] Change the name of `LinearInterp` to `LinearInterolation` 
- [x] Change the name `StepInterp` to `StepInterpolation`
- [x] Adjust the `Jitter` class to support different distributions (Gaussian and Uniform)
- [x] Compose a series of unit tests to evaluate the deterministic transforms
- [x] Add new examples to highlight the use of the transforms
- [x] Remove the `LinearColorMapperTransform` temporary mapper
- [x] Investigate whether we need to change the Image glyph back to having a `LinearColorMapper` class for its color mapper or if we should leave it as `ColorMapper`
- [x] ~~Get some official documentation put in (Is this really needed?)~~
- [x] Transition the source sorting code from LinearInterpolation to the base Interpolation class for re-use
- [x] Extend the sorting function to support passing the `x` and `y` values as arrays for the interpolation routines
- [x] Remove the Log interpolation routine shells
- [x] Add the different modes for the StepInterpolator
- [x] Update the documentation in the class definitions
- [x] Add a good Jitter example
- [x] Add a good Interpolation example
- [x] Fix the Jitter JS unit tests
- [x] Remove the palette initializer from the interpolator base class definition.

issues: fixes #3825
",53,100,['status: accepted']
3162,60993503,3958,3834332,2016-02-28 14:40:04,2016-03-09 19:59:33,closed,Delayed slider callback,"This PR implements just a few small changes to allow the end user to specify that the slider callback should only be executed when he or she mouses up.  This is needed for situations when the callback performs a time expensive task and executing the callback at every step would be counter-productive.  The change is implemented by adding a boolean property to the Slider class which is then interrogated in the SliverView _render function.  Essentially, I moved the callback from the ""slide"" property of the Slider to the ""stop"" property which gives the desired effect.

Example: 

```
offset_slider = Slider(start=-5, end=5, value=0, step=.1,
                   title=""Offset"", callback=callback, delay_callback=True)
```

One issue with this is the number above the slider does not update while dragging.  It might be nice to allow that number to change while dragging, but to only execute the callback when the user mouses-up.

issues: fixes #3957
",33,19,['status: accepted']
3163,60937339,3956,3834332,2016-02-27 05:19:31,2016-04-04 18:52:05,closed,Add label annotation,"ref #3822

add label annotation
",8,40,['status: superseded']
3164,60925918,3955,3834332,2016-02-27 00:33:05,2016-03-28 20:22:17,closed,Noarch conda package and entry points,"### Issues
- supersedes #3874 (and #3792)
- fixes #3571
- related to #1827
- related to conda/conda-build#796 and conda/conda-build#797
### Relevant parts of the code
- the conda.recipe dir
- scripts/build_upload.sh
- scripts/travis_install
- scripts/jenkins_install -> outdated, remove?
- binstar.yaml -> outdated, remove?
### Tasks
- [x] add entry point to setup.py
- [x] add entry point to conda recipe
- [x] make conda recipe a noarch package (get it with `conda install bokeh -c pyzo`)
- [x] test the noarch conda package (done on Linux and Windows and OS X)
- [x] update travis_install
- [x] update build_upload.sh
- [x] decide on specifying `futures` as a dependency or not
- [x] remove `jenkins_install` and `binstar.yaml`?
- [x] Some fixes in conda-build: https://github.com/conda/conda-build/pull/798 and https://github.com/conda/conda-build/pull/799
",26,13,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3165,60909641,3953,3834332,2016-02-26 21:50:41,2016-02-29 20:50:56,closed,Other libraries in docs,"issues: fixes #3951

Now that the HoloViews library has a Bokeh backend, it will be of interest to some Bokeh users, and so I'd like to add a link to it from within the Bokeh docs.  In this proposed PR, I've added that by generalizing the discussion of ""Leveraging Other Libraries"".  So that HoloViews isn't needed when building the Bokeh site, I included a static screenshot of using Bokeh with HoloViews.

I also added what is essentially a stub, mentioning that Bokeh works well with other JavaScript libraries.  Given the title of the page, it seems appropriate to include that information, but someone who knows more about interaction with such libraries might be able to expand this section to be more useful.
",9,5,['status: accepted']
3166,60907026,3950,3834332,2016-02-26 21:30:25,2016-03-09 20:38:28,closed,fixes to 'plotting' [ci disable examples],"[ci disable examples]
- link 'screen units' and 'data-space units' to glossary
- make ""reference documentation linked above"" a link
- per Bryan in bokeh flowdock channel 2016-02-17, infinite pan/zoom
  is now default, although max and min range may still be set.
",8,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3167,60904025,3949,3834332,2016-02-26 21:06:30,2016-02-29 15:40:09,closed,remove duplicate of seaborn from req'd pkgs [ci disable examples],"[ci disable examples]

remove second instance of seaborn in list of required packages.
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3168,60903309,3948,3834332,2016-02-26 21:00:47,2016-03-01 03:02:34,closed,concepts file changes [ci disable examples],"[ci disable examples]
- add 'screen units' and 'data-space units' to glossary
- 'to server' -> 'to serve'
- small rewrite about high level and low level interfaces
",4,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3169,60776364,3945,3834332,2016-02-26 01:08:26,2016-02-29 20:02:02,closed,Demo more prominant report location,"Try and make it easy to find the report location on a travis log
",2,5,"['status: accepted', 'type: task', 'reso: completed']"
3170,60773627,3944,3834332,2016-02-26 00:38:08,2016-03-09 20:54:27,closed,Issue 3943: vform should remove children from document root,"The layout generation methods in bokeh.io (gridplot, hplot, vplot, vform) allow a user to create a layout by passing in subplots, which can be other layouts. For convenience, these methods add the layout to the document root and ""push or save"" the new state. To allow for nesting of layouts, these methods also remove any of the subplots from the document root. This was done for gridplot, hplot, and vplot, but not for vform which caused bugs when other layouts were passed as children to vform. 

There's an example of the bug in the [issue (#3943)](https://github.com/bokeh/bokeh/issues/3943) that I posted. 

I just added a call to remove the children passed to vform from the document root. I also added some tests to test_io.py for the layout generation methods. There are two tests for each method, testing that the method produces a layout that is added to the document root and testing that its children are removed from the document root. This second test fails for vform before this fix. 
",9,3,['status: accepted']
3171,60763175,3942,3834332,2016-02-25 23:01:15,2016-02-26 01:10:53,closed,Test from external contributor - 3927 handle external contributors accessing saucelabs,"This is @birdsarah testing handling external contirbutors.

Do Not Merge This!
",0,141,['status: declined']
3172,60762343,3941,3834332,2016-02-25 22:54:51,2016-02-29 19:33:28,closed,Handle external contributors accessing saucelabs,"Fixes: #3927

External contributors can't use saucelabs, so fallback to firefox on travis instead of using Saucelabs
",5,3,['status: accepted']
3173,60730720,3939,3834332,2016-02-25 19:11:42,2016-02-25 22:06:10,closed,"Testing ""hotfix external contributors cant access saucelabs"" from an external account","This is @birdsarah, testing out the external contributors fix from an external account.
",0,16,['status: declined']
3174,60694063,3938,3834332,2016-02-25 15:17:43,2016-02-29 18:58:08,closed,Changed .bk-plot to .bk-root for style wrapper,"This is to help the namespace clash with the other `.bk-plot` class in use.

Follow-up to https://github.com/bokeh/bokeh/pull/3797
",16,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3175,60576192,3936,3834332,2016-02-24 20:51:52,2016-02-24 21:02:59,closed,Creating -> Create,"Creating -> Create

[ci disable examples]
",3,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3176,60433726,3926,3834332,2016-02-24 00:06:35,2016-02-25 06:17:44,closed,Disable saucelabs tests for external contributors,"The saucelabs tests require access to secure environment variables, external
contributors don't have access to them. For an explanation see:
https://docs.travis-ci.com/user/pull-requests#Security-Restrictions-when-testing-Pull-Requests

This disables the integration tests for external contributor PRs. There are
ways to finess this later.
",6,14,['status: superseded']
3177,60426054,3925,3834332,2016-02-23 23:01:29,2016-02-23 23:40:42,closed,added type=button attribute to ButtonView class,"Added 

```
@$el.attr(""type"",""button"")
```

to `Class ButtonView` in order to fix the issue of the page reloading/redirecting as described in issue #3895.
",2,1,['status: accepted']
3178,60422295,3924,3834332,2016-02-23 22:34:02,2016-02-23 22:43:38,closed,fixed color mapper error,"fixed issue with instantiation of linear color mapper after changes to BokehJS
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3179,60421706,3923,3834332,2016-02-23 22:29:47,2016-02-23 22:30:11,closed,Brendancol/spectogram color mapper fix,"Instantiation of linear color mapper had a bug which is now fixed...
",0,2,['status: declined']
3180,60353565,3920,3834332,2016-02-23 15:08:22,2016-02-23 15:17:38,closed,Fix typo in docs: toolbar_position -> toolbar_location,"The docs say:

> Try running the code and changing the `toolbar_position` value.

(http://bokeh.pydata.org/en/0.11.1/docs/user_guide/tools.html#positioning-the-toolbar)

This is incorrect, the parameter name is `toolbar_location`.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3181,60340859,3919,3834332,2016-02-23 13:41:49,2016-02-23 22:43:35,closed,Spike of switching out selenium screenshot for phantomjs for examples tests,"@bryevdv, this shows a quick spike of switching out phantomjs for selenium screengrabs

xdist doesn't seem too happy, but would need to investigate further.

Note, this is a PR against my ""speed up examples"" PR #3896.
",0,5,['status: declined']
3182,60338089,3918,3834332,2016-02-23 13:19:11,2016-02-29 20:16:46,closed,Spike of switching out selenium screenshot for phantomjs for examples tests,,1,8,['status: paused']
3183,60243429,3916,3834332,2016-02-22 21:25:39,2016-03-19 19:42:41,closed,Ion Rangeslider,,3,1,"['type: feature', 'reso: working as intended', 'status: declined']"
3184,60225463,3915,3834332,2016-02-22 19:21:09,2016-02-22 23:03:56,closed,Brendancol/cross filter fix,"fixed two issues with cross filter example:
- [x] ContinuumView -> BokehView
- [x] removed long import from `model.py` 
",0,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3185,60213325,3913,3834332,2016-02-22 17:54:06,2016-02-29 20:51:38,closed,Some canvas and layout improvements,"This PR does some preliminary work towards the general layout system. I'd like to merge this and begin a new PR for integrating @havocp 's algorithm. This PR:
- adds some debugging instrumentation to track the number of added  constraints
- moves the constraint solver to the document, instead of having one per plot
- cleans up `canvas.coffee`, moves some util functions there to `core/utils`
- stops canvas from excessivee and unnecessary re-rendering
",4,18,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3186,60160445,3911,3834332,2016-02-22 11:38:50,2016-02-24 18:37:58,closed,More robust (?) way of labeling _process module,"This should fix #3581. Originally I attributed this to newer version of node.js/npm being installed, but apparently even older versions cause problems when gulp is run from `node_modules/.bin` instead of the conda-installed one. This PR helps, but I'm not sure where the difference comes from.
",1,1,['status: accepted']
3187,60127603,3910,3834332,2016-02-22 05:37:49,2016-02-23 17:33:54,closed,Add correct server dev instruction to docs,"fixes: issues #3622 

Docfix to note the correct BOKEH_RESOURCES value (server-dev not absolute-dev, as is set by BOKEH_DEV=true) to load local JS/CSS resources.
",3,2,['status: declined']
3188,60116195,3909,3834332,2016-02-22 02:05:21,2016-02-22 04:39:15,closed,Take shallow copy of DataFrame in `ChartDataSource`,"Avoids modifying the input DataFrame inplace
Fixes #3899
",3,2,['status: accepted']
3189,60073322,3907,3834332,2016-02-21 04:41:25,2016-02-21 22:31:39,closed,Add doit conditional for null handling in text render method,"issues: fixes #3226 

Added `doit` conditional to text glyph render method to be inline w/ all other glyphs.

The same code as in issue #3226 now doesn't render the text:

<img width=""610"" alt=""screen shot 2016-02-20 at 10 39 16 pm"" src=""https://cloud.githubusercontent.com/assets/2198981/13200957/05911954-d823-11e5-9347-a249172a6e03.png"">
",1,1,['status: accepted']
3190,60067485,3904,3834332,2016-02-21 01:20:10,2016-02-21 04:42:56,closed,Canavandl/2622 color tuple seq,"issues: fixes: #2622

Bokeh doesn't support lists of color tuples as color arguments. As discussed in #2622, there's not an obvious path forward to resolve this, as it's unclear to how distinguish between a 3-element field that's intended to be a color tuple or a multi-list.

This PR adds an explicit warning to the 'styling visual attributes' docs sections about this edge case and suggests a couple of work-arounds.
",3,4,['status: accepted']
3191,60055043,3902,3834332,2016-02-20 17:53:13,2016-02-21 04:42:58,closed,Remove mention of hex RGBA as supported color prop,"issues: fixes #3891 

This PR removes the mention of hexadecimal RGBA strings from the list of supported color formats.

Per this thread: http://stackoverflow.com/questions/7015302/css-hexidecimal-rgba, hex-encoded RGBA color notation isn't supported by CSS3 (and therefore HTML 5 Canvas). It's expected to be added in CSS4, but it's not currently supported by any browser.

Our color property code only supports 6-character hex colors, so there's no code changes necessary.

https://github.com/bokeh/bokeh/blob/master/bokeh/core/properties.py#L1378
",0,1,['status: accepted']
3192,60050154,3901,3834332,2016-02-20 14:53:53,2016-02-21 22:40:38,closed,fix hist bin autosize with unique values,"issues: fixes #3659 
",2,3,['status: accepted']
3193,60030512,3896,3834332,2016-02-20 01:07:26,2016-02-29 16:49:42,closed,Speed up examples tests,"Fixes: #3889 

Convert examples tests to parametrized py.tests:
- this means that running each example is recorded as one test
- crucially means that we can use xdist to parallelize the test run
",36,138,['status: accepted']
3194,60003872,3894,3834332,2016-02-19 20:36:45,2016-02-21 22:43:19,closed,update call to pandas sort to new API,"Issues: fixes #3014
",1,1,['status: accepted']
3195,59728524,3888,3834332,2016-02-17 23:43:58,2016-02-23 14:40:15,closed,"A series of WebGL fixes (regression, precision, data update, miter limit)","issues:
- fixes #3795
- fixes #3800 
- fixes part of #3635 
- might have fixed #3464
",8,9,['status: accepted']
3196,59723464,3887,3834332,2016-02-17 22:58:04,2016-03-04 18:03:41,closed,[WIP] Phosphor layouts for HBox and Vbox,"Please don't merge yet, still a few things to sort out:
- [x] Get the HBox and VBox View classes built and rendering with phosphor BoxPanels.
- [x] Remove the additional divs from the hierarchy that Backbone.js introduces.
- [ ] In the HBox-inside-VBox demo, the Hbox isn't getting the mutation callback, so we're using a timeout.
- [ ] Build the phosphor Widgets on the plotwidget/continuumview classes, instead of the box views.
- [ ] Default initial sizes - ideally take some params passed in from python - currently a few hard-coded minHeight/widths.
- [ ] Remove the hard-coded phosphor bundle location in the js template.
- [ ] Completely untested for other layouts - needs comprehensive validation.
",2,28,['status: superseded']
3197,59444604,3883,3834332,2016-02-16 05:14:07,2016-03-08 06:35:56,closed,Use numbro.js instead of numeral.js to fix NaN and Infinity handling.,"This is temporarily using git://github.com/dennisobrien/numbro.git#916d3398 for the source of numbro.js.  Assuming bokeh/numbro PR3 (https://github.com/bokeh/numbro/pull/3) is fine, once that is merged, I can change the reference to numbro in package.json to point to bokeh/numbro.

This is another attempt to get this change into the release. The previous attempts in 0.10 failed due to some CI errors that I never resolved.

For reference: #3153
",13,3,['status: accepted']
3198,59439184,3882,3834332,2016-02-16 03:27:23,2016-03-23 18:59:25,closed,Add KML --> GeoJSONDataSource Example,"This is a short example which parses a kml file of world countries into a `GeoJSONDataSource`. 

Note:
- There are dependencies on `fastkml (pip install fastkml)` and `geojson (pip install geojson)`
- To get source data you will need to:

``` python
import bokeh.sampledata
bokeh.sampledata.download()
```

<img width=""912"" alt=""screen shot 2016-02-15 at 9 14 11 pm"" src=""https://cloud.githubusercontent.com/assets/433221/13066319/623526f2-d42a-11e5-9ccb-7fb77798bb4b.png"">
",3,4,"['reso: working as intended', 'status: declined', 'type: task', 'tag: component: examples', 'tag: geo']"
3199,59303930,3877,3834332,2016-02-14 19:48:26,2016-02-24 21:58:01,closed,PyScript now also works on py27,"issues: closes #3675, continues #3121

Wait with merging this until we've got a new Flexx release and corresponding conda package.
",12,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: API: models']"
3200,59302859,3876,3834332,2016-02-14 19:03:02,2016-04-08 19:08:56,closed,Added simple hdf5 example app.,"issues: closes #4116
",10,4,['status: accepted']
3201,59250054,3874,3834332,2016-02-13 00:22:59,2016-02-27 00:34:45,closed,Win entry point,"Supersede: #3792

Right now the package lives in the dev2 channel, please test it if you have a win machine:

`conda install -c bokeh/channel/dev2 bokeh=0.11.1dev3`

ping @stonebig 
",11,1,['status: superseded']
3202,59229974,3873,3834332,2016-02-12 20:57:27,2016-02-15 18:09:23,closed,Issue #3871: MultiSelect - Remove 'silent': true,"Remove the {‘silent’: true} option in the MultiSelect coffee script to
debug issue #3871 in the Bokeh master. It seems to have fixed the issue.
",5,1,['status: accepted']
3203,59229863,3872,3834332,2016-02-12 20:56:28,2016-02-15 18:04:06,closed,more bokehjs cleanup,"this was the start of my canvas layout PR but I think it makes more sense as a smaller PR of its own. It:
- adds test selection, e.g. `gulp test:core`
- moves more things into `core/utils` that make sense there
",2,6,"['status: accepted', 'type: task', 'tag: component: bokehjs']"
3204,59120632,3869,3834332,2016-02-12 01:10:43,2016-02-23 14:47:32,closed,Test with firefox on saucelabs,"Partially fixes: #3827 

Supercedes: #3741 
",5,40,"['status: accepted', 'type: task', 'reso: completed']"
3205,59104680,3868,3834332,2016-02-11 22:30:59,2016-02-13 00:14:48,closed,Remove leftover comment from when examples were disabled,,1,1,"['status: accepted', 'type: task', 'reso: completed']"
3206,59099571,3867,3834332,2016-02-11 21:52:31,2016-04-20 18:58:00,closed,Ability to save as svg,"Partially fixes: #538 

To test:
1. Run any file example
2. Add `?svg=1` to the end of the html file
3. The canvases will go blank
4. Click the `preview/save` button - it will download the svg of the plot

To Do:
- [x] display either the original canvas or the svg'd canvas in the whitespace (not sure why this is happening)

Notes:
- canvas2svg apparently works with node-canvas, so if the other work getting node-canvas integrated works, then we should be able to programatically get out png or svg
- the addition of canvas2svg increases bokeh.js from 1649KB to 1691KB (an increase of 42KB)
",11,8,['status: declined']
3207,59089011,3866,3834332,2016-02-11 20:31:01,2016-02-12 00:02:22,closed,Maggiem/server logs,"issues: closes #3575

Also added log format option.
",0,2,['status: accepted']
3208,59082371,3865,3834332,2016-02-11 19:40:16,2016-02-11 20:17:17,closed,Remove cruft from bokehjs dir,"issues: closes #3864
",2,1,['status: accepted']
3209,59081010,3863,3834332,2016-02-11 19:30:18,2016-02-12 00:20:29,closed,Mess with using canvas2svg,"the main tweak that seems to need to be made is removing a transform. here's the diff

``` diff
7c7
< <g transform=""scale(2,2) translate(0.5,0.5) scale(2,2) translate(0.5,0.5)"">

---
> <g transform="""">
16c16
<     <g clip-path=""url(#bhvdFFmELTIC)"">

---
>     <g>

```

Depending on what program is rendering the svg, the clip path seems to matter or not. github's svg renderer seems to care. See the svg output here: https://github.com/bokeh/bokeh/blob/canvas2svg/examples/models/glyph1_tweaked.svg

I've included the svgs in this PR so you can see.

The original svg (`glyph1_raw.svg`) was made by running `window.c2s.getSerializedSvg(true)` at the browser console.

Obviously we wouldn't attach the c2s object to the window - just hacking about to see what's possible.
",1,3,['status: superseded']
3210,58908664,3854,3834332,2016-02-10 15:45:50,2016-03-23 18:59:58,closed,Simplify shapefile (.shp) w/ Bokeh Server + GeoPandas,"This example demonstrates consuming a shapefile and displaying it via a `GeoJSONDataSource`. Couple of things to note (which are also in README.md):
- installing geopandas can be a pain. Fortunately there is a conda channel with geopandas:
  `conda install -c ioos geopandas` (this should be copied the bokeh channel)
- to get example shapefile...`import bokeh.sampledata; bokeh.sampledata.download()`

remaining items:
- [ ] move geopandas to bokeh channel: `anaconda copy ioos/geopandas/0.1.1  --to-owner bokeh`
",7,9,"['reso: working as intended', 'status: declined', 'type: task', 'tag: geo']"
3211,58705104,3851,3834332,2016-02-09 04:55:07,2016-02-09 16:09:07,closed,Fix docstring,"Fixes: #3850
",1,1,['status: accepted']
3212,58703302,3849,3834332,2016-02-09 04:14:04,2016-02-09 16:06:27,closed,Fix typo in docstring,"[ci disable examples]
",0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3213,58693266,3846,3834332,2016-02-09 01:18:22,2016-02-12 16:11:35,closed,Real properties for BokehJS,"ping @bokeh/core 

This PR is not quite done but I'm pushing branch now to be able to see test report, and because  I would like to get some eyes on it earlier rather than later. 

Real properties in BokehJS will facilitate:
- getting rid of `nonserializable_attribute` junk
- automatic visual configuration GUIs
- mixin props machinery now lives at proper place in class hierarch
- automatic matching of properties between python and JS under test
- better to test

A few other things I did along the way to simplify things in order to be able to get through everything:
- removed all support for (Backbone model) property setters
",12,35,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3214,58626532,3844,3834332,2016-02-08 15:48:57,2016-02-08 15:50:09,closed,Remove quickstart,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3215,58532604,3840,3834332,2016-02-06 22:44:23,2016-02-06 22:47:48,closed,issue #2922 - use numbro.js from bokeh/numbro for fix formatting issu…,"…es with NaN and Infinity.
minor changes to bokeh/tests/test_embed.py to deal with unicode in the embedded javascript.

This is another attempt to get this change into the release.  The previous attempts in 0.10 failed due to some CI errors that I never resolved.

For reference:  #3153 
",1,1,['status: superseded']
3216,58361640,3831,3834332,2016-02-04 22:44:37,2016-02-04 22:52:26,closed,Remove 0.11.0 versions from ALL_VERSIONS tag which controls dropdown,"0.11.1 is the latest 0.11 release, so we don't need to reference it in the
dropdown (following the previous pattern)
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3217,58312503,3829,3834332,2016-02-04 16:34:54,2016-03-09 19:56:18,closed,Add Stamen toner background tile provider,"This PR adds an additional tile provider to `tile_providers.py` so you can do the ""map sandwich"" with `STAMEN_TONER_BACKGROUND` below and `STAMEN_TONER_LABEL` above.
",3,4,"['type: feature', 'status: accepted', 'reso: completed']"
3218,58226872,3815,3834332,2016-02-04 01:00:18,2016-02-04 02:18:38,closed,Hotfix/apps examples,,0,3,"['status: accepted', 'type: task', 'reso: completed']"
3219,58225176,3814,3834332,2016-02-04 00:40:06,2016-02-09 20:03:04,closed,Fix boxplot shifting when using 'mpl' from matplotlib and seaborn.,"Fix issues #3774, #3130, #2277

Issue 2277 was already working (as commented there). This fix took care of that.

[notebook](http://nbviewer.jupyter.org/github/chbrandt/pynotes/blob/4c8eab1508105ddaf32d24178cd10634d65cebaf/issues/bokeh/boxplot_report.ipynb) updated with examples from those issues.
",3,1,['status: accepted']
3220,58189912,3812,3834332,2016-02-03 19:45:40,2016-02-03 20:18:08,closed,use import_required for nbformat and nbconvert,"Use import_required for nbformat and nbconvert and move the import
into **init** so that not having Jupyter Notebook installed doesn't
cause errors when attempting unrelated uses of Bokeh.
",2,1,"['type: bug', 'status: accepted', 'reso: completed']"
3221,58189798,3811,3834332,2016-02-03 19:44:48,2016-02-03 20:24:33,closed,hot fix for selection reset code,,0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3222,58183410,3810,3834332,2016-02-03 18:57:12,2016-02-03 19:33:50,closed,Apply patch from 3769 issue,"Fixes #3769
",3,1,['status: accepted']
3223,58179385,3809,3834332,2016-02-03 18:27:19,2016-02-04 17:48:40,closed,release updates,,1,8,"['status: accepted', 'type: task', 'reso: completed']"
3224,58176982,3808,3834332,2016-02-03 18:08:46,2016-02-03 18:09:30,closed,fix quotes around links to examples notebooks,"fix quotes around links to examples notebooks
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3225,58174435,3807,3834332,2016-02-03 17:49:36,2016-02-03 18:03:33,closed,Sync mpl.to_bokeh docstrings with current available parameters.,"Functino docstring were not synced with the current funcitno arguments.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3226,58112489,3805,3834332,2016-02-03 09:42:05,2016-02-03 09:42:54,closed,Add new creds for Rackspace,"Merging immediately to trigger a dev build...
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3227,58020389,3803,3834332,2016-02-02 17:26:51,2016-02-02 19:42:28,closed,Publish bokehjs separately in a notebook to avoid parsing issues in jquery,"Publishing separately as `application/json` allows to use a different code path in ipython notebook, which doesn't require jquery (just a simple eval) and thus allows to load bokehjs without issues. I also added simple notification when bokehjs is actually loaded and improved styling of bokehjs' notebook banner.
",2,3,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3228,58002527,3802,3834332,2016-02-02 15:30:23,2016-02-02 17:35:35,closed,move vbox and hbox to top since they are layouts on coffee layer,,5,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3229,57856801,3797,3834332,2016-02-01 15:46:00,2016-02-24 21:41:39,closed,Containing all bokeh style to .bk-plot,"This will help better contain all of bokeh's style inside the `.bk-plot` class. There is bleeding regarding global html tags that the `.bk-*` naming convention just won't fix.

See here the `<label></label>` tag is inheriting bokeh's style
<img width=""643"" alt=""screen shot 2016-02-01 at 9 48 39 am"" src=""https://cloud.githubusercontent.com/assets/4411115/12722125/188b016e-c8c9-11e5-830a-c08cf8d7d8d5.png"">

This PR will contain all styles to inside the `.bk-plot` class

<img width=""1279"" alt=""screen shot 2016-02-01 at 9 48 59 am"" src=""https://cloud.githubusercontent.com/assets/4411115/12722126/189402aa-c8c9-11e5-8482-a7306ad550a8.png"">

<img width=""481"" alt=""screen shot 2016-02-01 at 9 50 53 am"" src=""https://cloud.githubusercontent.com/assets/4411115/12722182/5898c516-c8c9-11e5-8fcc-b07f3853c039.png"">

See https://github.com/bokeh/bokeh/issues/2589
",23,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3230,57799572,3794,3834332,2016-02-01 05:53:52,2016-02-05 00:26:17,closed,Core refactor,"OK, there's lots more I want to do, but this PR is at a nice stopping place and was getting large (though most of the changes are just `require` fixups). The primary work was to make some of the more important files match the project structure of the python library. However, a some small bits of work were done along the way:
- factor some simple things out of `HasProps` and delete unused cruft from `HasProps`
- split `properties.coffee` into `properties.coffee` and `property_mixins.coffee`
- light cleanup of `properties.coffee`
- added some new property types on the JS side
- added ~100 new tests

Next steps in other PRs:
- split ""context setting"" parts off off mixin props
- make mixin props just contribute normal properties
- specify/initialize all (bokeh) properties in a uniform way 
- remove all nonserializable attribute names 
  - make some visible to python (e.g., `Frame`)
  - make others plain object attrs
- remove Backbone `Collection` dependence 
- fix up remaining bogus defaults mismatches

Once (most of) those are done, we will be in a good position to 1) add lots of new annotations 2) cleanup/refactor/extend canvas layout in preparation for whole document layout, 3) add the namespace concept
",28,31,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3231,57771780,3792,3834332,2016-01-31 15:45:28,2016-02-13 00:24:02,closed,attempt to have a 'bokeh.exe' launcher on Windows,"issues: fixes #3571
",3,1,['status: superseded']
3232,57752175,3791,3834332,2016-01-30 22:04:08,2016-05-11 09:10:47,closed,Add filename detection magic to save(),"issues: closes #4118, closes #3885

This uses inspect module and stack frame analysis to figure out what filename to use if not given explicitly through arguments or `output_file()`. I know this is ugly magic, but it should be pretty useful. I modified two examples in `plotting/file` to show this off.
",20,12,['status: accepted']
3233,57752072,3790,3834332,2016-01-30 21:59:57,2016-02-01 21:15:35,closed,Don't use spaces in JSON separators to reduce data size,"This reduces size of choropleth.html by ~10% (1MB).
",5,3,"['status: accepted', 'type: task', 'reso: completed']"
3234,57593117,3784,3834332,2016-01-29 01:15:44,2016-02-08 23:25:32,closed,"responsive is False by default, no need to set",,2,1,"['status: accepted', 'type: task', 'reso: completed']"
3235,57521672,3778,3834332,2016-01-28 15:56:37,2016-02-02 03:50:50,closed,Fix issue with bar chart grouping/stacking order,"Fixes: issue #2935

This fixes two issues:

1) an issue where the order of grouped elements wasn't being maintained during the grouping operations
2) an issue where the stack/group flags weren't getting set correctly within the bar builder

This also adds a test to check the final order of the glyphs as they would be rendered.
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
3236,57517150,3775,3834332,2016-01-28 15:26:05,2016-02-01 21:12:16,closed,removing blazedatasource,"PR to delete BlazeDataSource as part of the move to separate it to it's own repo.

reso: completed
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3237,57424466,3768,3834332,2016-01-27 21:20:20,2016-02-01 23:49:38,closed,initial commit of streaming API,,3,2,"['type: feature', 'status: accepted', 'reso: completed']"
3238,57399739,3766,3834332,2016-01-27 18:12:42,2016-01-27 22:49:51,closed,Task/rename HasProperties to HasProps,"ref issue #3651 

Should be non-controversial. Rename bokehjs class HasProperties to HasProps to mirror bokeh.
",0,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3239,57397814,3765,3834332,2016-01-27 17:57:34,2016-01-27 18:50:48,closed,Bugfix/boxplot quartiles range,"issues: fixes #3699 
",0,4,['status: accepted']
3240,57311225,3762,3834332,2016-01-27 04:01:47,2016-01-27 05:03:35,closed,remove remote data dir,"issues: closes #3508
",0,2,['status: accepted']
3241,57310940,3761,3834332,2016-01-27 03:56:25,2016-01-27 04:51:33,closed,fix deprecation messages,"issues: fixes #3257
",0,1,['status: accepted']
3242,57310321,3760,3834332,2016-01-27 03:46:07,2016-01-27 05:30:54,closed,use multiselect template correctly,"issues: fixes #2495
",1,3,['status: accepted']
3243,57298571,3758,3834332,2016-01-27 00:56:49,2016-01-27 17:30:36,closed,Fix bad layouts imports in examples,"supersedes #3756 

Todo:
deprecate `bokeh.models.widgets.layouts` import path
",2,3,"['type: bug', 'status: accepted', 'reso: completed']"
3244,57295393,3757,3834332,2016-01-27 00:20:40,2016-02-11 22:02:02,closed,Task use firefox on Browserstack not travis,"Related to #3741, testing on browserstack instead of saucelabs.
",2,18,"['type: task', 'status: paused']"
3245,57295168,3756,3834332,2016-01-27 00:17:51,2016-01-27 00:57:06,closed,Remove bokeh.models attribute import from examples (always import from bokeh.models parent),"Remove attribute imports from examples so that:

``` python
from bokeh.models.sources import ColumnDataSource
from bokeh.models.widgets import HBox
from bokeh.models.glyphs import Rect, Circle
...
```

becomes

``` python
from bokeh.models import ColumnDataSource, HBox, Rect, Circle
```

Todo: deprecate something
",0,2,['status: superseded']
3246,57293739,3755,3834332,2016-01-27 00:02:37,2016-02-03 18:01:27,closed,Quickstart edits,,8,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3247,57284795,3754,3834332,2016-01-26 22:41:25,2016-01-27 04:19:43,closed,remove Chart from preload,"issues: fixes #3726
",5,3,['status: accepted']
3248,57280015,3753,3834332,2016-01-26 22:03:46,2016-01-26 22:54:22,closed,should not set parent on anything anymore,,0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3249,57252928,3752,3834332,2016-01-26 18:42:50,2016-01-26 20:39:58,closed,"Generate defaults for test task, not scripts:coffee","Also move some code around to make `tasks/scripts.coffee` more readable.
",1,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
3250,57240952,3751,3834332,2016-01-26 17:11:48,2016-01-26 18:17:30,closed,Remove unused close_wrapper module and coffee/api directory,"remove unused close_wrapper module
",2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3251,57239228,3750,3834332,2016-01-26 16:59:57,2016-01-26 17:53:10,closed,Move generated coffee defaults file location to test directory,"issues: fixes #3749 

Move generated coffee models and widgets defaults:

/src/coffee/common/defaults.coffee -> /test/test_common/defaults/models_defaults.coffee
/src/coffee/models/widgets/defaults.coffee -> /test/test_common/defaults/widgets_defaults.coffee
",0,1,['status: accepted']
3252,57163992,3744,3834332,2016-01-26 02:53:44,2016-01-26 05:18:19,closed,Output pytest report as html and upload to s3,"This is an incremental piece of doing browser testing on saucelabs and imagediff testing.

@mattpap started commenting on the WIP PR #3741 and I realized that this bit is totally standalone which'll keep the diff smaller on the rest of #3741.

You can see a successful upload to s3 here: https://s3.amazonaws.com/bokeh-travis/104764781/report.html

<img width=""1234"" alt=""screen shot 2016-01-25 at 6 53 25 pm"" src=""https://cloud.githubusercontent.com/assets/1796208/12571332/f1356566-c394-11e5-95a2-1287f40b2c41.png"">
",1,1,['status: superseded']
3253,57145665,3743,3834332,2016-01-25 23:08:17,2016-01-26 03:49:57,closed,Updated autodoc for models.layouts (refactored from models.widgets.layouts),"issues: fixes #3742 

Simple docfix
",0,1,['status: accepted']
3254,57141975,3741,3834332,2016-01-25 22:37:04,2016-02-21 08:56:24,closed,Task use Firefox on Saucelabs not Travis,"Run our browser tests on saucelabs.
",10,18,['status: superseded']
3255,57133011,3739,3834332,2016-01-25 21:26:32,2016-01-26 00:18:04,closed,Remove version pin from pytest-selenium,"Latest 1.1 is on bokeh's conda package (along with other up-to-date related packages)
",0,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3256,57118973,3738,3834332,2016-01-25 19:37:24,2016-04-04 16:15:43,closed,Add support for bokeh static command,"Run `bin/bokeh static` and you will get bokehjs served under `http://localhost:5006/static/`. Address (host), port and log level are configurable. This uses the ""full"" bokeh server, but configures only `/static/` url, so no apps, websockets, etc. 
",5,6,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server']"
3257,57106512,3736,3834332,2016-01-25 17:58:22,2016-01-26 18:49:00,closed,Fix/add autoadd setter,"Related issues:
https://github.com/bokeh/bokeh/issues/3638
https://github.com/bokeh/bokeh/issues/3546

example to see in action:

``` python
from bokeh.models.widgets import HBox
from bokeh.io import curdoc, curstate
from bokeh.sampledata.autompg import autompg as df
from bokeh.charts import Scatter
curstate().autoadd = False
s = Scatter(df, x='mpg', y='hp', color='cyl', marker='origin',
                          title=""Auto MPG"", xlabel=""Miles Per Gallon"",
                                            ylabel=""Horsepower"")
b = HBox()
b.children = [s]
doc = curdoc().add_root(b)
```

<img width=""627"" alt=""screen shot 2016-01-25 at 11 57 04 am"" src=""https://cloud.githubusercontent.com/assets/433221/12559475/e223d5b0-c35a-11e5-895a-cd1123ace4a1.png"">
",5,5,['status: accepted']
3258,57102238,3735,3834332,2016-01-25 17:25:14,2016-01-26 15:25:08,closed,Task/3651 unify directory structure,"ref issue: #3651 

Super WIP!!! The coffee import paths are broken all over. (I'll kill the TravisCI builds until they're fixed)

Currently just a demonstration of the proposed directory structure for feedback.
",22,13,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs', 'tag: API: models']"
3259,57069816,3733,3834332,2016-01-25 13:18:48,2016-01-26 17:55:49,closed,Remove always_active and make InspectTool.active configurable,"This fixes #3604. Originally I wanted to just implement `always_active`, but then realized that there is already `active` property used internally by inspect tools, so I just exposed this one and removed `always_active`. Which is a good thing also because its name was confusing. This potentially could be extended to gesture tools as well.
",1,3,['status: accepted']
3260,57022133,3731,3834332,2016-01-25 02:09:29,2016-02-05 16:57:23,closed,support horizontal legend orientation,"issues: closes #3832

A few notes:
- chose `legend_orientation` because `orientation` was only very recently deprecated (as a former synonym for `location`) Other suggestions welcome. 
- thoughts on spacing welcome, could possibly use tweaking (script to test with attached below)
",7,9,['status: accepted']
3261,57020209,3729,3834332,2016-01-25 01:12:54,2016-01-25 01:52:18,closed,correctly render oval legends,"issues: fixes #3709
",0,1,['status: accepted']
3262,57012098,3728,3834332,2016-01-24 19:59:50,2016-01-24 21:15:51,closed,removed rogue debugger statement,"saw this debugger statement and removed...
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3263,56999277,3727,3834332,2016-01-24 09:36:31,2016-01-27 21:08:12,closed,Update elements.csv ,"First row in elements.csv was one column short: the data has an 'id' column, but the header row is missing the 'id' key.

Adding a comma at the beginning of the whole file does the trick
",13,5,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3264,56985403,3721,3834332,2016-01-23 20:19:55,2016-01-24 23:09:50,closed,Hotfix small doc addition to select,,0,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3265,56983473,3719,3834332,2016-01-23 18:56:05,2016-01-24 23:11:00,closed,Don't generate source maps for *.min.js files,"This fixes #3676.
",1,1,['status: accepted']
3266,56972205,3718,3834332,2016-01-23 09:17:44,2016-01-23 18:02:41,closed,Fix #3698 attribute name in doctemplate / helpers.py,"Change data_source to source which is the attribute expected for glyph construction

Closes: #3698 
",1,1,['status: accepted']
3267,56968698,3717,3834332,2016-01-23 05:25:20,2016-01-25 00:27:56,closed,Fix layout update for non-visible axes,"This resolves #3626 based on the research outlined in the issue. In short, there were two methods of supporting swapping axes out after the chart has been rendered. This approach is probably the least desired option because we should have a simple method to add axes as, as needed, but it is the most simple. Currently, the only alternative approach to this problem is to recreate the entire plot.

Whether more work will be done or not to fix this issue upstream in the rendering logic, this simple change should be there, otherwise layout constraints will be solved for non visible axes, which kiwi will error out on when arguments provided are 0, -0.
",2,3,['status: accepted']
3268,56917819,3714,3834332,2016-01-22 17:35:55,2016-01-22 23:29:51,closed,Restore pretty JSON formatting and make sort_keys=True the default,"Just to note, the first commits handles the regression part of this PR and the other adds uniform behavior across source base.
",0,2,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
3269,56915428,3712,3834332,2016-01-22 17:15:42,2016-01-22 23:29:22,closed,Use make_id() instead of str(uuid.uuid4()),"This restores support for custom ID generators and simple IDs in particular, which is useful for debugging.
",1,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
3270,56907756,3711,3834332,2016-01-22 16:16:39,2016-01-24 23:12:01,closed,Allow to align plot title to left and right (center worked before),,3,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3271,56904812,3710,3834332,2016-01-22 15:55:04,2016-01-22 19:37:35,closed,Restore support for --build-dir argument to gulp,,3,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
3272,56851756,3707,3834332,2016-01-22 06:34:31,2016-01-22 17:25:34,closed,Remove inline style from embed_multiple.py,"issue: fixes #3705 

Remove inline style of div tag that overrides bokeh button icon style. Plots are now vertically aligned (as consecutive divs) and not horizontal. It's be possible to wrap them in an HBox, but that seems to detract from demonstration of embedding/jinja templating of multiple components.
",1,1,['status: accepted']
3273,56817862,3703,3834332,2016-01-21 22:16:29,2016-01-24 23:15:29,closed,Task/add component base class,"ref issue #3651 

supersedes #3624 

Add Component base class to BokehJS
Make Layout subclass of Component (not Widget) and refactor into distinct directory
Rename bokehjs/src/coffee/models to bokehjs/src/coffee/model (in line with singular naming convention)
",9,23,"['status: accepted', 'type: task', 'reso: completed']"
3274,56671014,3697,3834332,2016-01-20 21:38:02,2016-01-22 03:48:01,closed,Add Renderer base class to *_renderer models,"ref issue #3651 

Simply add Renderer base class to *_renderer models to mirror python API
",3,2,"['status: accepted', 'type: task', 'reso: completed']"
3275,56664571,3696,3834332,2016-01-20 20:45:34,2016-01-21 00:25:17,closed,Docs cruft and #3695,"Fixes #3695 

Continues work from #3688 
",3,8,['status: accepted']
3276,56652758,3694,3834332,2016-01-20 19:09:17,2016-01-20 19:49:37,closed,Remove not filled out portions of docs,"These create confusion and misunderstanding a  poor user experience.

Things that we'd like to document should be noted in an issue. The items removed in this PR are stored on #3688
",3,3,"['status: accepted', 'type: task', 'reso: completed']"
3277,56648980,3692,3834332,2016-01-20 18:38:59,2016-01-21 00:27:06,closed,Fix error about blocked websocket to list allowed origins,,0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: server']"
3278,56648973,3691,3834332,2016-01-20 18:38:57,2016-01-21 00:27:30,closed,Auto-update releases link in docs nav,"Fixes #3686
",3,3,['status: accepted']
3279,56644366,3690,3834332,2016-01-20 18:00:49,2016-01-20 19:44:16,closed,Add `bind_bokeh_event` methods to `TileRenderer` and `DynamicImageRenderer`,"Both the the above renderers were missing `bind_bokeh_events` methods which I've added in so that updates using bokeh server work as expected.
",0,3,"['type: bug', 'status: accepted', 'reso: completed']"
3280,56639417,3689,3834332,2016-01-20 17:23:42,2016-01-20 18:19:27,closed,join path to filename when opening,"issues: fixes #3683 
",0,1,['status: accepted']
3281,56625242,3687,3834332,2016-01-20 15:46:55,2016-01-20 18:20:57,closed,Docs updates/0.11.0,"Another PR merging docs_updates/0.11.0 into master.
",0,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3282,56532714,3682,3834332,2016-01-19 22:03:40,2016-01-24 23:16:58,closed,add headers and contentType configuration to ajax data source,"Added the ability to configure the http headers and content type for the ajax call in AjaxDataSource.
",19,6,"['type: feature', 'status: accepted', 'reso: completed']"
3283,56528486,3681,3834332,2016-01-19 21:30:28,2016-01-20 16:54:21,closed,Notebook comms fix,"issues: fixes #3680 

Need to keep track of last JSON pushed _per document_, otherwise end up constructing messages with ""root added"" events, etc. 
",3,3,['status: accepted']
3284,56419594,3678,3834332,2016-01-19 04:03:40,2016-01-19 14:56:23,closed,Support using X-headers ,"issues: closes #3677 

This PR adds support and docs for a `--use-xheaders` flag for `bokeh serve`. This is needed to run a Bokeh server behind an SSL-terminated proxy.
",2,2,['status: accepted']
3285,56267440,3672,3834332,2016-01-17 00:58:54,2016-01-18 17:05:43,closed,Fix base of BokehJS class hierarchy ,"This PR adds `models/model` and `models/component` and has public facing BokehJS models inherit from one or the other. 

This implements a small part of #3651
",14,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3286,56216002,3668,3834332,2016-01-15 20:14:20,2016-01-15 21:07:37,closed,Update attribute names in Bokeh Spectrogram Demo.,"Fixes #3667
",3,1,['status: declined']
3287,56208592,3664,3834332,2016-01-15 19:09:13,2016-01-16 23:06:20,closed,Examples reorg,"This PR partially implements the plan laid out in 

https://github.com/bokeh/bokeh/wiki/IA-for-Bokeh-demos-and-examples

In particular:
- `compat` directory is collapsed
  - add ""interesting"" MPL examples
- `glyphs` -> `models`
- `interactions` -> `howto`

This PR also moves ""testlike"" mpl and `glyphs.ipynb` to `bokeh/tests` where we can soon add then to strict image diff testing. 

Right now there are netbooks in: `charts/notebook`, `plotting/notebook` and `interactive`. I'd like to handle the notebook situations later, coordinating migrations to `bokeh-notebooks` plus appropriate links to them from docs, in a separate PR. 
",4,16,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3288,56187533,3663,3834332,2016-01-15 16:08:01,2016-01-15 16:53:15,closed,Remove AbstractRendering cruft,"issues: fixes #3651

Remove last of AbstractRendering from bokeh
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3289,56178132,3662,3834332,2016-01-15 14:55:15,2016-01-16 23:15:35,closed,Remove HasParent (involves moving glyph display_defaults into defaults),"issues: #3651 

Two things:
- ~~Remove AbstractRendering cruft (delete bokehjs/src/coffee/ar)~~ moved into distinct branch
- Remove HasParent (have subclasses inherit from HasProperties and move Glyph display_defaults into defaults)
",12,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3290,55940417,3648,3834332,2016-01-13 19:03:22,2016-01-20 23:31:56,closed,Add flags for session expiration options,"This follows the pattern set by the keep-alive flag.

One caveat is that I assumed the unused session lifetime is positive. I found out that negative values or zero were both accepted. The other session options already checked for invalid integer values.

I didn't document the new flags in `bokeh/command/subcommands/serve.py`, nor did I add tests.

Fixes #3541
",7,5,['status: accepted']
3291,55939718,3647,3834332,2016-01-13 18:57:37,2016-01-14 17:36:30,closed,Feature/sampledata command,"#3505
",0,7,['status: accepted']
3292,55938436,3646,3834332,2016-01-13 18:47:25,2016-01-13 20:02:25,closed,Fix bad path to bokeh logo static,"Potential solution for broken bokeh master:

The url arg in the ImageURL glyph test example in examples/glyphs/glyph.py is wrong and gives a 404 warn. It's unclear why the tests seem to pass for py27 and not py34 though

I'm unable to reproduce the failed test w/ py34 locally, so if the hotfix doesn't work I'll add a print statement on the stdout of glyph.py to see what response TravisCI is getting that I'm not.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3293,55927227,3645,3834332,2016-01-13 17:16:17,2016-01-19 14:59:50,closed,add height and width to list of deprecated Chart attributes,"Issues: fix #3578 
",1,7,['status: accepted']
3294,55848574,3643,3834332,2016-01-13 02:53:28,2016-01-13 15:01:23,closed,Pin phantomjs@1.9.7-15,"issues: fixes #3636

Pin phantomjs@1.9.7-15
",3,2,['status: accepted']
3295,55840209,3641,3834332,2016-01-13 00:48:00,2016-01-13 16:46:47,closed,Try fixing failing py27 test,"I haven't been able to test this locally as other tests are failing, seeing what Travis makes of it.
",1,1,['status: superseded']
3296,55830992,3640,3834332,2016-01-12 23:03:09,2016-03-19 19:46:08,closed,Add new waterfall chart,,3,7,"['type: feature', 'status: paused']"
3297,55800921,3637,3834332,2016-01-12 18:57:14,2016-01-15 15:04:58,closed,0.11.0 Documentation fixes and flake8,"Three things:
- ~~Refactor examples and chart builders to use pandas.sort_values instead of deprecated pandas.sort~~
- Change BoxPlot docstring reference section (remove broken Wikipedia image link and replace with link)
- Remove extra line return in Donut docstring
",8,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3298,55715117,3633,3834332,2016-01-12 05:06:23,2016-01-12 05:23:36,closed,User guide server,,1,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3299,55679313,3630,3834332,2016-01-11 21:19:01,2016-01-18 23:21:42,closed,Make annulus glyph work on IE too,"issues: fixes #3543

IE was confused about what part of the annulus should be filled, which granted, is not an easy task :)  By drawing the glyph in two parts, IE knows how to do it too.

To test, check e.g. `examples/glyphs/glyphs.py`
",11,5,['status: accepted']
3300,55666533,3625,3834332,2016-01-11 19:31:54,2016-01-12 05:05:31,closed,User guide server,"@birdsarah this is not done yet but maybe better to merge what is here now and I can do more in another PR. 
",3,8,['status: superseded']
3301,55658897,3624,3834332,2016-01-11 18:28:16,2016-01-21 22:58:50,closed,Added conditional to skip render model if model in doc root is not component,"issues: fixes #3117 

stops `render_model` if model doesn't have `default_view`. Handles the case where a model in the document root is not a component (i.e. is a datasource).
",8,18,['status: superseded']
3302,55656182,3623,3834332,2016-01-11 18:03:01,2016-01-14 16:33:50,closed,Added unsorted_label parameter to chart builder to don't sort labels,"This pull request solves the issue #3606.

I don't know if it is the right way to achieve this but it works.

Example to test:

```
from bokeh.charts import Bar, output_file, show
data = {
    'labels': ('EN', 'PD', 'AD'),
    'counts': (10, 20, 30),
}
p = Bar(data, values='counts', label='labels', unsorted_label=True)
output_file(""bar.html"")
show(p)
```
",8,1,"['type: feature', 'reso: working as intended', 'status: declined']"
3303,55617782,3618,3834332,2016-01-11 12:44:28,2016-01-14 18:13:39,closed,Improve how webgl canvas is blitted into the visible canvas,"issues: fixes #3605

Previously, we blitted without interpolation. Apparently this causes problems for firefox. Now we do it with interpolation, but align the image such that the pixel correspondence is one-to-one, and the resulting visualization is crisp.
",6,1,['status: accepted']
3304,55578927,3607,3834332,2016-01-11 00:17:53,2016-01-14 01:38:42,closed,Add javascript channel to meta.yaml and improve scripts/dev_environment,"Add some structure to `scripts/dev_environment`.
",2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3305,55558804,3600,3834332,2016-01-10 06:05:28,2016-01-11 22:20:31,closed,Update periodic table sample data,"I added Ununoctium (118), renamed Ununquadium to Flerovium, renamed
Ununhexium to Livermorium, and added the estimated atomic weight for
element 117.

Fixes #3599.
",1,1,['status: accepted']
3306,55533990,3594,3834332,2016-01-09 03:27:35,2016-01-29 15:25:22,closed,support for generating apps from Jupyter Notebooks,"issues: closes #3593

Needs: 
- [x] small refactor to share code
- [ ] more interesting demo notebook than `sliders.ipynb`
- [ ] docs support
",8,8,['status: accepted']
3307,55524261,3592,3834332,2016-01-08 23:31:28,2016-01-20 15:45:57,closed,Add a sitemap builder,"Useful for google search index
",6,4,"['type: feature', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3308,55517873,3591,3834332,2016-01-08 22:16:24,2016-01-08 22:16:33,closed,Correct links to be demo.bokehplots.com links,,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3309,55516517,3589,3834332,2016-01-08 22:02:44,2016-01-13 23:05:54,closed,Docs updates/0.11.0,,9,12,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3310,55509227,3588,3834332,2016-01-08 20:53:04,2016-01-08 22:02:17,closed,quick add of demo apps to gallery,,1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3311,55500990,3587,3834332,2016-01-08 19:35:23,2016-01-13 21:01:10,closed,Add plotting of Razzies,"Add plotting of Razzies from a cvs file of imdbIDs. Adjusted alphas so Razzies and Oscars are easier to see.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3312,55500640,3586,3834332,2016-01-08 19:32:32,2016-02-12 00:01:21,closed,Crossfilter example refactor,"This is a first version of a cross filter example which uses bokeh server.

A couple key features are missing, but will come on subsequent PRs:
- drag/drop faceting
- filtering

To run example:

``` bash
cd examples/app/crossfilter
bokeh serve .
```

Couple of known issues, which I'm not sure warrant delaying merge.  I think they should be follow up fix PRs:
- invalid attribute WARNINGs:

```
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.axes.LinearAxis object at 0x106603438>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.grids.Grid object at 0x1066034a8>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.axes.LinearAxis object at 0x1066034e0>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.grids.Grid object at 0x106603550>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.renderers.GlyphRenderer object at 0x1066035f8>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.axes.LinearAxis object at 0x106603438>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.grids.Grid object at 0x1066034a8>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.axes.LinearAxis object at 0x1066034e0>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.grids.Grid object at 0x106603550>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'parent' on obj <bokeh.models.renderers.GlyphRenderer object at 0x1066035f8>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'escape' on obj <bokeh.models.widgets.inputs.Select object at 0x105ec8b38>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'escape' on obj <bokeh.models.widgets.inputs.Select object at 0x10660f588>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'escape' on obj <bokeh.models.widgets.inputs.Select object at 0x10660f0f0>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'escape' on obj <bokeh.models.widgets.inputs.Select object at 0x10660f9b0>, which is a client-only or invalid attribute that shouldn't have been sent
WARNING:bokeh.core.properties:JSON had attr 'escape' on obj <bokeh.models.widgets.inputs.Select object at 0x10660f198>, which is a client-only or invalid attribute that shouldn't have been sent
```
- intermittent socket error saying could not deserialize glyph circle.  I see it sometimes but am having trouble repeating.

```
Bokeh: Unhandled ERROR reply to 9E990DBCA40346D1B2B619BAE93EE642: DeserializationError(""Instance(Glyph) failed to deserialize reference to {'id': '3cad9205-b258-42f3-b89d-3c71eee88de8', 'type': 'Circle'}"",)
```
",5,54,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples', 'tag: component: server']"
3313,55492862,3585,3834332,2016-01-08 18:19:13,2016-01-08 18:19:19,closed,Docs updates/0.11.0,,0,2,"['tag: component: docs', 'type: task', 'reso: completed']"
3314,55475835,3584,3834332,2016-01-08 15:48:17,2016-01-13 21:02:26,closed,clean up notebooks examples,"issues: closes #3583 
",13,2,['status: accepted']
3315,55389913,3574,3834332,2016-01-07 21:02:32,2016-01-13 23:31:04,closed,Create info command,"issues: closes #3506 
",3,7,['status: accepted']
3316,55382137,3572,3834332,2016-01-07 19:54:27,2016-01-15 17:31:47,closed,Changed range update cb_obj to range object from model object and updated examples,"issues: fixes #3173 

To keep with the pattern that the plot object that triggers the callback is injected into the js closure as the cb_obj, this PR makes the range update callback inject the range and not model.

I changed the examples I was aware of. Let me know if there are others.
",3,6,['status: accepted']
3317,55369385,3570,3834332,2016-01-07 18:03:02,2016-01-08 17:40:09,closed,Updated ImageURL url path to new image static url,"issues: fixes #3569 

Docfix - update url argument of ImageURL examples to use new bokeh logo static location.
",0,1,['status: accepted']
3318,55358476,3568,3834332,2016-01-07 16:32:58,2016-01-08 17:59:20,closed,Use split not contains for browser compatibility,,7,1,"['status: accepted', 'type: task', 'reso: completed']"
3319,55317235,3566,3834332,2016-01-07 09:38:43,2016-01-07 21:47:44,closed,Remove bokeh/styling_tool_overlays.html,"I presume this was accidentally committed.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3320,55237548,3561,3834332,2016-01-06 17:09:32,2016-01-06 18:44:13,closed,docs updates,"- Update header and footer links in docs site
- Add migration note about js_resources, css_resources
- Update file_html docstring
",5,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3321,55229753,3560,3834332,2016-01-06 16:08:21,2016-01-06 17:01:13,closed,Fix interactive excel example,"changing the plots on the right box
",3,1,"['type: bug', 'status: accepted', 'reso: completed']"
3322,55227062,3559,3834332,2016-01-06 15:47:27,2016-01-06 16:41:25,closed,Fix geojson user guide plot,"Specify x and y so plot renders
",5,1,"['status: accepted', 'type: task', 'reso: completed']"
3323,55223220,3558,3834332,2016-01-06 15:15:51,2016-01-06 16:26:03,closed,Use correct order of div and script in notebook_div template,"fixes #3540
",5,1,['status: accepted']
3324,55220765,3557,3834332,2016-01-06 14:53:49,2016-01-06 16:22:54,closed,Fix more examples,"Fixing two more examples... I hope the last ones :wink:
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
3325,55151609,3554,3834332,2016-01-05 22:23:17,2016-01-06 16:59:25,closed,Clean up numerous inconsistencies,"Summary of updates:
- Missing import from `bokeh/application/handlers/script.py`
- Align output of build artifacts in `setup.py`
- Match example document titles with example file name
- Add document titles to examples
",4,6,"['status: accepted', 'type: task', 'reso: completed']"
3326,55146480,3553,3834332,2016-01-05 21:37:57,2016-01-14 19:00:35,closed,"Add __main__.py so we can do ""python -m bokeh""","Being able to do `python -m bokeh` allows using the bokeh command unambiguously for a specific Python version. Plus it allows using the bokeh command when Bokeh is not installed (e.g. with `setup.py develop`). 

This may also be an alternative solution for the cmd on Windows (or did we fix that already?)

I think this should go into 0.11.1, unless we want to use it as a fix for the Win issue.

cc @damianavila 
",7,5,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
3327,55145659,3552,3834332,2016-01-05 21:30:43,2016-01-13 21:40:47,closed,Use self.mode instead of mode in BaseResources.__init__(),"This won't allow `BOKEH_RESOURCES=INLINE` anymore.
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3328,55142381,3550,3834332,2016-01-05 21:01:09,2016-01-06 15:06:35,closed,Small fix in scatter.ipynb - allow making selection,"There was one plot in this example that specified a `nonselection_fill_color`, but did not allow a way to make a selection. I assumed the intention was to demonstrate how scatter glyphs behave under a selection, so I added the lasso tool.
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3329,55137461,3549,3834332,2016-01-05 20:16:39,2016-01-05 21:06:28,closed,"Revert ""HOTFIX: don't exec bokeh embed until dom ready""","Reverts bokeh/bokeh#3547
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3330,55116322,3548,3834332,2016-01-05 17:07:59,2016-01-07 21:49:06,closed,Latest versions of firefox have a heavy to load startpage that we don't need,"When a new release of selenium comes out this should be fixed, this is a
workaround in the meant time. For more information see:
https://github.com/davehunt/pytest-selenium/issues/48
",0,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
3331,55110083,3547,3834332,2016-01-05 16:19:13,2016-01-05 20:13:29,closed,HOTFIX: don't exec bokeh embed until dom ready,"Not waiting breaks many `embed.components` examples. 
",14,4,"['type: bug', 'status: accepted', 'reso: completed']"
3332,55106392,3545,3834332,2016-01-05 15:50:51,2016-01-05 17:28:33,closed,Hotfix set range defaults to ``None``,,1,3,"['status: accepted', 'type: task', 'reso: completed']"
3333,55105262,3544,3834332,2016-01-05 15:42:06,2016-01-05 16:39:57,closed,Report that annulus is broken in release notes (+ typo fixes),"issues: related to #3543
- Mention that annulus glyph is broken on IE
- Fix typo in titles
- Also snuck in a fix for a reference to `bokeh-server`
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3334,55101945,3542,3834332,2016-01-05 15:15:12,2016-01-07 21:48:14,closed,Log more detailed stats information from the server,"We might want this on the demo server, though we should wait to merge to master until post-release.
Essentially it adds session counts by app, and unused session counts.
",3,1,"['type: feature', 'status: accepted', 'reso: completed']"
3335,55059379,3539,3834332,2016-01-05 06:41:07,2016-01-05 16:38:36,closed,clean up docs 3,"Continues working on #3404 small fixes
",0,15,['status: accepted']
3336,55045341,3537,3834332,2016-01-05 01:32:23,2016-01-05 02:56:59,closed,"An initial ""Server Architecture"" chapter for the developer guide",,2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3337,55038973,3536,3834332,2016-01-04 23:55:32,2016-01-05 02:57:31,closed,Small tweaks to a couple of bits of markup,,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3338,55023599,3534,3834332,2016-01-04 21:21:31,2016-01-13 21:42:51,closed,Improve initialization of plot size,"issues: fixes #3468

The problem described in #3468 was related to a resize event being handled before the plot was fully initialized. This is why there was a `this.el.parentNode is null` error in the console, causing the initial sizing to fail. The solution is to test for this situation and schedule a new event in a future event-loop iteration.
",5,2,['status: accepted']
3339,55018197,3532,3834332,2016-01-04 20:28:25,2016-01-05 21:06:43,closed,Add support for inline autoload and restore support for inline resources in notebook,"Inline resources and autoload is a slight non-sense, but technically it works and it's simpler to restore inline resource support in notebook this way, rather than adding a big if statement. This PR implements raw css support to make inline resources work, thus completes implementation of autoload.
",5,6,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3340,55008203,3527,3834332,2016-01-04 18:51:33,2016-01-04 19:11:48,closed,remove notebooks using server,"... until we get the fix for server and notebooks known issue merged
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3341,55000853,3525,3834332,2016-01-04 17:37:42,2016-01-04 18:45:38,closed,Random Tiles Example: Temporary fix for bounds issue on map,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3342,54999722,3524,3834332,2016-01-04 17:26:20,2016-01-04 19:39:07,closed,Left justify hbox,,3,2,"['status: accepted', 'type: task', 'reso: completed']"
3343,54989139,3523,3834332,2016-01-04 15:54:21,2016-01-04 20:01:06,closed,Support raw javascript in autoload and use autoload in the notebook,"This makes autoload support raw javascrip, te.g. logging through resources, not some custom code. Added an example showing that `autoload_static()` works (`embed/custom_server`). Notebook now uses autoload for initialization bokeh and rendering plots. Fixed `plugin-prelude.js` and `sever-dev`. There is some unfortunate code duplication around `AUTOLOAD_JS` template, but that can be improved in a follow-up PR. ~~Tests may fail at this point~~.

fixes #3500
",35,10,['status: accepted']
3344,54987071,3522,3834332,2016-01-04 15:36:52,2016-01-04 15:53:27,closed,Start cleaning up docs,"Starts working on #3404 

Includes:
- search fix
- collapsible code fix
- make logo direct to bokehplots.com
",0,5,"['status: accepted', 'type: task', 'reso: completed']"
3345,54986506,3521,3834332,2016-01-04 15:32:17,2016-01-04 16:26:39,closed,Add some more Host and Origin tests,"Wanting to be sure that the HTTP stack doesn't break anything.
Looks good.

Not urgent to merge this for 0.11, the thing I wanted to do for 0.11 was run the tests, which will happen just by submitting the PR.

Should be harmless to merge whenever though (only affects tests).
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3346,54980768,3520,3834332,2016-01-04 14:38:13,2016-01-19 15:50:08,closed,Async load fix,"An attempt to fix #3500 

This is kind of a risky change. I changed how Bokeh works always, not only for notebooks, because it ended up seeming trickier to think about doing it only for notebooks and I was less confident in that.

Supposed to work in IE10 and above: http://caniuse.com/#feat=script-async

The essence of the change is that now you should NEVER assume ""Bokeh"" exists unless you are wrapped in `bokeh_load` like `bokeh_load(function() { Bokeh.foo })`.

I just realized I didn't test the autoload stuff yet, so it's probably hosed. Let's get travis going on this as-is though.
",6,7,"['type: bug', 'reso: working as intended', 'status: declined']"
3347,54944474,3516,3834332,2016-01-04 05:29:30,2016-01-05 19:47:39,closed,Docs/examples 011 4,"New PR to collect docs and examples work. 
",0,24,"['status: accepted', 'type: task', 'reso: completed']"
3348,54934296,3513,3834332,2016-01-03 22:59:41,2016-01-04 00:32:39,closed,accept implicit port 80 on whitelist,"Reference: https://github.com/request/request/issues/515

Many programs strip the port from the host header when it is 80, and this breaks our whitelist checking. This prevents the server from being run behind a proxy on port 80.
",4,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: server']"
3349,54933251,3512,3834332,2016-01-03 22:03:52,2016-01-04 04:37:44,closed,Make bokeh.js set window.Bokeh not only Bokeh in current scope,"Possible fix for #3500, though I'm not very confident and am not sure I really understand the issue.
",1,1,"['type: bug', 'status: declined', 'reso: completed']"
3350,54911232,3507,3834332,2016-01-02 19:36:03,2016-01-04 19:14:41,closed,Add examples with excel files,"issues: none
",2,4,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3351,54909090,3504,3834332,2016-01-02 17:18:12,2016-01-03 23:30:06,closed,Fix selection histogram layout,,0,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3352,54900407,3503,3834332,2016-01-02 03:28:13,2016-01-04 00:36:40,closed,Fix spelling and other issues in docs,"Fixes part of #3497.
",1,2,['status: accepted']
3353,54899244,3502,3834332,2016-01-02 01:18:55,2016-01-02 03:21:45,closed,need to check if last selection was empty on a per renderer basis,"issues: closes #3467 

With this tweak, hover tool also behaves as expected when there are multiple tools configured on different renderers. 
",0,1,['status: accepted']
3354,54898931,3501,3834332,2016-01-02 00:46:22,2016-01-04 15:15:13,closed,possible solution,"issues: fixes #3500 

ping @mattpap @havocp This seems to work in the notebook. I have not been able to reproduce the error despite any attempts. But I had to ""unwrap"" the `Bokeh.$(...)` that was happening, otherwise it might try to call `Bokeh` before it was loaded. What is the purpose of that?
",4,3,['status: superseded']
3355,54896711,3499,3834332,2016-01-01 21:30:00,2016-01-01 22:51:15,closed,Update resources.py to not leak paths,"issues: closes #3488
",1,2,['status: accepted']
3356,54896481,3498,3834332,2016-01-01 21:09:52,2016-01-01 21:23:41,closed,Update README.md,,0,2,"['status: accepted', 'type: task', 'reso: completed']"
3357,54894334,3497,3834332,2016-01-01 18:10:44,2016-01-03 21:18:09,closed,Docs/Examples tweaks for 0.11 (3),,1,5,"['status: accepted', 'type: task', 'reso: completed']"
3358,54893337,3494,3834332,2016-01-01 16:48:52,2016-01-04 18:25:23,closed,Notebooks working with server,"Currently gets server notebooks working minimally, with caveats:
- users must all extra ws origins (noted in notebooks)
- users must explicitly push session to ""default"" (so multiple notebooks clobber)

If this can be improved upon _very_ simply, it should be. 

Associated issue: #3461
",2,6,['status: declined']
3359,54892290,3492,3834332,2016-01-01 15:13:16,2016-01-01 17:08:43,closed,upload compiler js files,"issues: closes #3491

ping @mattpap @damianavila is there a way to test this before tagging an RC1?
",3,1,['status: accepted']
3360,54887808,3490,3834332,2016-01-01 05:42:33,2016-01-01 15:16:54,closed,Fix a leftover log message and broken log message in has_properties.coffee,"…offee
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3361,54886526,3489,3834332,2016-01-01 02:30:52,2016-01-01 16:08:47,closed,fix 'over-render' due to hover inspections,"issues: fixes #3467 

@birdsarah this was a pretty simple one: we added a `request_render` on `inspect` events. But the code that triggered `inspect` events was mistakenly looking for `null` to indicate no hits, not an ""empty"" selection object. So it was triggering every hit-test, even if there was no result. 

There's a slight complication in that we do need to trigger the _first_ empty inspection, so e.g., that hover tools turn off when they are supposed to. 

This stops all the over-rendering. I will say it did not improved the `texas.py` hover as much as I thought maybe it should. There is still a slight lag, but maybe there always was, and I am just imagining that it was better. In any case, I do think this should be merged. I tested it behaving correctly with every hover and hover glyph example, including server ones. 
",2,2,['status: accepted']
3362,54885978,3487,3834332,2016-01-01 01:32:05,2016-01-01 15:19:53,closed,fix selection clear calling nonexistent method,"issues: fixes #3465

The problem was `clear` calling a method to set the indices that used to exist, but no longer exists. Obviously a test would have helped here. Adding more unit tests for BokehJS after `0.11` a high priority. 

This PR also removes the completely unused `set_selection` method. Proof:

```
bryan@0199-bryanv (git:master) ~/work/bokeh/bokehjs/src/coffee $ grin set_selection
bryan@0199-bryanv (git:master) ~/work/bokeh/bokehjs/src/coffee $ 
```

Tested with standalone and server apps for correct behaviour. 
",0,1,['status: accepted']
3363,54885834,3486,3834332,2016-01-01 01:19:29,2016-01-01 15:19:29,closed,Bring GridToolManager up to date,"issues: fixes #3469 

Missed some fixes and changes applied to ToolManager. This fixes two small issues 1) the inability to swtich wheel zoom back on mentioned in #3469 and also 2) wheel zoom should be off by default. 
",1,1,['status: accepted']
3364,54882522,3485,3834332,2015-12-31 22:19:33,2015-12-31 23:29:49,closed,Remove legacy charts from example notebooks,"I removed examples using Blaze and lists as a data source. I also upgraded from the legacy charts.

I renamed one file to stick with the naming convention used by the other notebooks.

Fixes part of #3390
",1,4,"['status: accepted', 'type: task', 'reso: completed']"
3365,54882085,3484,3834332,2015-12-31 22:01:57,2016-01-01 00:13:55,closed,Fix tracking of _all_models with list-of-instance properties,"The issue here was that HasProperties._value_record_references
ignored its 'recurse' flag which led to bogus behavior when
_tell_document_about_change tried to do its attach_document
and detach_document.

This fixes #3361, where for Plot.renderers in particular, we
thought the new Span was already in the document, because
_value_record_references was messed up and recursed too far.

In the long run, a better fix would be to port the way we do
_all_models in Python (constantly reconstructing it from scratch),
because the way we do it in Coffee cannot avoid leaks when there
are cycles. However, with this fix we avoid failing to include
models in _all_models that should be there. In memory management
terms we're replacing an early free (memory corruption) with
a leak.

The test case added here triggers the bug which was fixed, and
illustrates it in a simpler scenario than #3361.
",3,1,['status: accepted']
3366,54877570,3481,3834332,2015-12-31 19:35:47,2015-12-31 22:50:43,closed,"Hotfix for boxplot whisker, marker styles ignored ","Issues: fixes #3462
",2,3,['status: accepted']
3367,54877175,3480,3834332,2015-12-31 19:24:08,2015-12-31 22:51:37,closed,Fix extra events on initial application load,"Fixes #3479 

This is not the safest patch on earth, but without it we send a ton of extra events on application load, which is a performance problem and also makes it pretty hard to debug anything else that's going wrong on application load.

Careful review/test probably a good idea...
",1,3,['status: accepted']
3368,54874093,3477,3834332,2015-12-31 18:01:50,2016-01-04 19:54:40,closed,Update charts docstrings and sphinx documentation,"This is to remove any remaining legacy charts language and to include the more recently implemented charts in the sphinx documentation.
",1,14,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3369,54873297,3475,3834332,2015-12-31 17:43:43,2016-01-01 17:09:32,closed,PR for docs/examples tweaks for 0.11,,1,5,"['status: accepted', 'type: task', 'reso: completed']"
3370,54870957,3474,3834332,2015-12-31 16:43:47,2016-01-01 00:16:18,closed,Airports Example: fixed panning/zooming and refactored to use figure,"fixed panning/zooming and refactored to use figure instead of plot object for simplier code example
",3,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3371,54869437,3473,3834332,2015-12-31 16:04:03,2015-12-31 19:23:24,closed,Dynamic Map Example: Fixed issue with dynamic image becoming unhinged from basemap,"https://github.com/bokeh/bokeh/issues/3466
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3372,54869392,3472,3834332,2015-12-31 16:02:48,2015-12-31 19:00:54,closed,Make Plot use the title_panel from the server if one is provided,"Requires the following changes:
- modify LayoutBox so the solver can be set post-initialization
- in Plot, set 'title_panel' name on the LayoutBox, then
  use the name to find an existing LayoutBox if any

Another approach could be to create the layout box on the server
always and then set the solver on it in Plot, but this way is
less of a change perhaps so could be safer during a release
freeze.
",1,3,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server']"
3373,54847993,3471,3834332,2015-12-31 05:23:22,2015-12-31 15:40:03,closed,Examples tweaks and tasks,"This PR can collect small pieces of work for the 0.11 release described in #3390
",0,12,"['status: accepted', 'type: task', 'reso: completed']"
3374,54830118,3460,3834332,2015-12-30 21:13:50,2015-12-30 22:57:48,closed,fix error in snap_back. Now will not request tiles outside of min/max zoom,"bug I discovered while making example.  This logic will probably be replace in the future but at least it won't throw error.  Tiles are now not request beyond min / max zoom.
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3375,54826546,3459,3834332,2015-12-30 20:18:16,2015-12-30 22:19:39,closed,Add controls over who can create sessions; test session creation much better,,0,11,"['type: feature', 'status: accepted', 'reso: completed']"
3376,54821485,3457,3834332,2015-12-30 18:59:50,2015-12-30 20:19:24,closed,Add warning for bokeh-server,,1,1,"['status: accepted', 'type: task', 'reso: completed']"
3377,54820820,3456,3834332,2015-12-30 18:49:42,2015-12-30 21:52:22,closed,replace min and max function so they ignore nan values,"issues: fixes #2780 
",0,3,['status: accepted']
3378,54815861,3453,3834332,2015-12-30 17:32:42,2015-12-30 18:17:57,closed,possible solution to store model instead of view on 0d selections,"ping @mattpap @havocp 

This works. Is not great, but it works. 
",6,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3379,54813211,3452,3834332,2015-12-30 16:54:08,2015-12-30 21:12:37,closed,Fix FontSizeSpec DeprecationWarning,,7,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: API: models']"
3380,54810692,3451,3834332,2015-12-30 16:18:16,2015-12-30 17:52:46,closed,"Remove for-now-unused ""working"" message","Since we're making a release probably best not to have this
in the version spec; we can always put it back once we figure
out what the message will actually contain.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3381,54806437,3450,3834332,2015-12-30 15:17:56,2015-12-30 16:33:24,closed,some fixes to notebook patching,,1,3,"['type: feature', 'status: accepted', 'reso: completed']"
3382,54803577,3449,3834332,2015-12-30 14:33:18,2015-12-30 15:31:20,closed,Fix unclosed file in resources _inline(),"Raises ResourceWarning in python 3.4.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3383,54779999,3448,3834332,2015-12-30 06:31:13,2015-12-30 14:10:04,closed,Vbar hbar,"issues: closes #3423 

@bokeh/core I'd like to merge this PR for `0.11`. Justification:
- it comes with docs and tests
- is self contained
- will afford simplification of several examples 
",2,3,['status: declined']
3384,54778415,3447,3834332,2015-12-30 05:35:20,2015-12-30 16:44:15,closed,Support custom css injection and css classes on widgets,,3,4,['status: declined']
3385,54774941,3446,3834332,2015-12-30 03:17:24,2015-12-30 04:12:36,closed,removed .value when retrieving outline_line_width for tile attribution,"This was a bug that showed itself when defaults were no longer sent from python.  `plot.get('outline_line_width').value` now changed to `plot.get('outline_line_width')`
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3386,54772366,3445,3834332,2015-12-30 01:50:26,2015-12-30 15:30:52,closed,Add control over cross-origin websocket,,2,10,"['type: bug', 'status: accepted', 'reso: completed']"
3387,54764807,3444,3834332,2015-12-29 22:48:37,2015-12-29 22:55:00,closed,Add Cast to sql query results,"Add cast to SQL query so that filtering on a cast member works correctly and does not throw an error at the console.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3388,54763579,3443,3834332,2015-12-29 22:28:48,2015-12-30 04:35:56,closed,turn off sending defaults to BokehJS,"Defaults should now all be in sync. We will only send theme values and user-set values to BokehJS.

Let's see how Travis, the report, and some hand testing look. 
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3389,54747993,3440,3834332,2015-12-29 18:37:02,2015-12-29 19:09:09,closed,Make host arg play nicer.,"fixes: #3350
",0,1,['status: accepted']
3390,54735925,3439,3834332,2015-12-29 15:46:50,2015-12-30 22:12:47,closed,Attempt to make widgets look a bit better,,17,4,"['status: accepted', 'type: task', 'reso: completed']"
3391,54735244,3438,3834332,2015-12-29 15:37:38,2015-12-29 15:37:54,closed,hotfix: add file omitted by gitignore,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
3392,54723284,3437,3834332,2015-12-29 12:32:50,2015-12-30 22:40:27,closed,Allow use custom models on the server,"This PR makes custom models behave as resources. No need to register models anymore. Unfortunately, server works, but notebooks don't. I'm currently working to restore support for notebooks.
",2,24,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: build', 'tag: component: examples', 'tag: component: server', 'tag: widgets', 'tag: API: models']"
3393,54701188,3433,3834332,2015-12-29 04:10:02,2015-12-29 14:40:43,closed,fix plumbing for slider updates,"issues: fixes #3169 
",1,1,['status: accepted']
3394,54700683,3432,3834332,2015-12-29 03:52:47,2015-12-29 04:25:45,closed,use the right attributes for canvas width/height,"issues: fixes #3300
",0,1,['status: accepted']
3395,54699552,3431,3834332,2015-12-29 03:12:11,2015-12-29 03:55:32,closed,add missing logical connective,"This restores the box annotation functionality, which was broken by a typo
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3396,54692266,3430,3834332,2015-12-28 23:38:58,2015-12-29 22:01:39,closed,Refactor document callbacks,"This is sort of overkill to fix the two bugs, but it also lays the groundwork for the lifecycle hooks PR because `_CallbackGroup` could be used in that PR for callbacks that don't go with a Document.
Also `_DocumentCallbackGroup.remove_all_callbacks()` will be used in ServerSession in that PR to remove callbacks when a session expires.

But, other than being kind of overkill without seeing the next PR, this PR does stand alone I hope - it fixes a couple of bugs, removes some duplicate code, and adds `Document.add_next_tick_callback`.
",3,3,"['type: bug', 'status: accepted', 'reso: completed']"
3397,54689466,3428,3834332,2015-12-28 22:42:39,2015-12-28 23:21:57,closed,fix refefences clobbering,"only update models from references in a patch-doc message when it is
required, otherwise existing models can get erroneously overwritten

Note: branch against `movies_example` because that demo most easily showed the problem. 
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3398,54688698,3427,3834332,2015-12-28 22:29:04,2015-12-28 23:19:50,closed,fixed json encoder import error,"Fix for import error: (dateutil **init** does not provide the submodule you have to import it explicitly)
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
3399,54685258,3426,3834332,2015-12-28 21:31:17,2015-12-28 22:54:43,closed,force tornado version in requirements,"Issues: fixes #3425 
",0,2,['status: accepted']
3400,54679864,3424,3834332,2015-12-28 20:01:33,2015-12-29 15:45:17,closed,remove crossfilter example and associated bokeh code,"Removing Crossfilter example.  Updated version will arrive in future PR.
",1,7,"['status: accepted', 'type: task', 'reso: completed']"
3401,54668438,3422,3834332,2015-12-28 16:55:42,2015-12-28 22:55:55,closed,Add streaming OHLC and MACD indicator example,"To run, execute: 

```
bokeh serve --show ohlc
```

In the `examples/app` directory.

Note: ""ready"" here indicates ready enough to go into a `dev6` release. 

<img width=""1247"" alt=""screen shot 2015-12-28 at 10 54 01 am"" src=""https://cloud.githubusercontent.com/assets/1078448/12022004/5430abda-ad51-11e5-8822-8c8b1e3b42d2.png"">
",6,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3402,54608296,3420,3834332,2015-12-26 22:23:43,2015-12-28 16:04:52,closed,Data range fixes,"issues: fixes #3408 

This builds on #3416 and #3419 (unfortunately for the diff, commits for this PR start with https://github.com/bokeh/bokeh/commit/09a6bb3862c08ea472749d221ce1d9a96d41c7aa)

I would like to add UG docs after the code freeze. 

ping @mattpap @havocp @pzwang 

`examples/interaction/ajax_source.py` is a good example to run to see the follow mode in action.

I am not 100% happy with testing internal interfaces but it's still a large improvement over what was there previously (almost no tests). Suggestions for improving the tests welcome. 

ping @birdsarah too this might affect your range bounds work. 
",11,14,['status: accepted']
3403,54596412,3419,3834332,2015-12-26 03:22:07,2015-12-28 16:04:28,closed,Default sync,"Replaces/finishes #3414 is based on #3416 so shows those commits as well.

ping @mattpap @havocp 

Tested with all server apps and examples. 

Current report:

```
BoxSelectTool: coffee is missing some properties found in Python
    BoxSelectTool.overlay: python defaults to {""attributes"":{""bottom"":null,""bottom_units"":""screen"",""fill_alpha"":{""value"":0.5},""fill_color"":{""value"":""lightgrey""},""left"":null,""left_units"":""screen"",""level"":""overlay"",""line_alpha"":{""value"":1},""line_cap"":""butt"",""line_color"":{""value"":""black""},""line_dash"":[4,4],""line_dash_offset"":0,""line_join"":""miter"",""line_width"":{""value"":2},""name"":null,""plot"":null,""render_mode"":""css"",""right"":null,""right_units"":""screen"",""tags"":[],""top"":null,""top_units"":""screen"",""x_range_name"":""default"",""y_range_name"":""default""},""type"":""BoxAnnotation""} but coffee has no such property
BoxZoomTool: coffee is missing some properties found in Python
    BoxZoomTool.overlay: python defaults to {""attributes"":{""bottom"":null,""bottom_units"":""screen"",""fill_alpha"":{""value"":0.5},""fill_color"":{""value"":""lightgrey""},""left"":null,""left_units"":""screen"",""level"":""overlay"",""line_alpha"":{""value"":1},""line_cap"":""butt"",""line_color"":{""value"":""black""},""line_dash"":[4,4],""line_dash_offset"":0,""line_join"":""miter"",""line_width"":{""value"":2},""name"":null,""plot"":null,""render_mode"":""css"",""right"":null,""right_units"":""screen"",""tags"":[],""top"":null,""top_units"":""screen"",""x_range_name"":""default"",""y_range_name"":""default""},""type"":""BoxAnnotation""} but coffee has no such property
CategoricalAxis: defaults are out of sync between Python and CoffeeScript
    CategoricalAxis.ticker: coffee defaults to {""type"":""CategoricalTicker""} but python defaults to {""attributes"":{""name"":null,""tags"":[]},""type"":""CategoricalTicker""}
    CategoricalAxis.formatter: coffee defaults to {""type"":""CategoricalTickFormatter""} but python defaults to {""attributes"":{""name"":null,""tags"":[]},""type"":""CategoricalTickFormatter""}
DataRange1d: defaults are out of sync between Python and CoffeeScript
    DataRange1d.start: coffee defaults to 0 but python defaults to null
    DataRange1d.end: coffee defaults to 1 but python defaults to null
DatetimeAxis: defaults are out of sync between Python and CoffeeScript
    DatetimeAxis.ticker: coffee defaults to {""type"":""DatetimeTicker""} but python defaults to {""attributes"":{""desired_num_ticks"":6,""name"":null,""num_minor_ticks"":0,""tags"":[],""tickers"":[{""id"":""2a94e8e7-9695-43b9-a61c-60d63b8d98f8"",""type"":""AdaptiveTicker""},{""id"":""61c6e900-1788-4d94-8389-b43b0820da69"",""type"":""AdaptiveTicker""},{""id"":""f55d6b89-0b59-4913-ae71-7ba5da208975"",""type"":""AdaptiveTicker""},{""id"":""84b9e331-16f1-4b25-80b9-1fefbaaac552"",""type"":""DaysTicker""},{""id"":""ce4cd5bd-7fb8-45f5-9265-e530c203fe33"",""type"":""DaysTicker""},{""id"":""c9e3d529-9698-4ed6-af7a-066d862c1cf1"",""type"":""DaysTicker""},{""id"":""0a803b58-49f2-43c6-845f-e259f5bfab38"",""type"":""DaysTicker""},{""id"":""8acf9c96-2e0d-4138-8d7a-dc0dc11338ed"",""type"":""MonthsTicker""},{""id"":""93ddfcd4-7b0d-435c-a70a-e69ad98782cd"",""type"":""MonthsTicker""},{""id"":""c2f6e6d4-272e-41ab-9fc8-fefcf3501dad"",""type"":""MonthsTicker""},{""id"":""75e2b57f-1dac-4f63-a8a8-9791592d4361"",""type"":""MonthsTicker""},{""id"":""e48ee58c-fd14-4c20-86a7-cbac270c9d3c"",""type"":""YearsTicker""}]},""type"":""DatetimeTicker""}
    DatetimeAxis.formatter: coffee defaults to {""type"":""DatetimeTickFormatter""} but python defaults to {""attributes"":{""formats"":{},""name"":null,""tags"":[]},""type"":""DatetimeTickFormatter""}
GMapPlot: defaults are out of sync between Python and CoffeeScript
    GMapPlot.tool_events: coffee defaults to {""type"":""ToolEvents""} but python defaults to {""attributes"":{""geometries"":[],""name"":null,""tags"":[]},""type"":""ToolEvents""}
Image: defaults are out of sync between Python and CoffeeScript
    Image.color_mapper: coffee defaults to {} but python defaults to {""attributes"":{""high"":null,""low"":null,""name"":null,""palette"":[""#000000"",""#252525"",""#525252"",""#737373"",""#969696"",""#bdbdbd"",""#d9d9d9"",""#f0f0f0"",""#ffffff""],""reserve_color"":""#ffffff"",""reserve_val"":null,""tags"":[]},""type"":""LinearColorMapper""}
LassoSelectTool: coffee is missing some properties found in Python
    LassoSelectTool.overlay: python defaults to {""attributes"":{""fill_alpha"":{""value"":0.5},""fill_color"":{""value"":""lightgrey""},""level"":""overlay"",""line_alpha"":{""value"":1},""line_cap"":""butt"",""line_color"":{""value"":""black""},""line_dash"":[4,4],""line_dash_offset"":0,""line_join"":""miter"",""line_width"":{""value"":2},""name"":null,""plot"":null,""tags"":[],""x_range_name"":""default"",""xs"":[],""xs_units"":""screen"",""y_range_name"":""default"",""ys"":[],""ys_units"":""screen""},""type"":""PolyAnnotation""} but coffee has no such property
Bokeh: LogTickFormatter not configured with a ticker, using default base of 10 (labels will be incorrect if ticker base is not 10)
LogAxis: defaults are out of sync between Python and CoffeeScript
    LogAxis.ticker: coffee defaults to {""type"":""LogTicker""} but python defaults to {""attributes"":{""base"":10,""desired_num_ticks"":6,""mantissas"":[1,5],""max_interval"":null,""min_interval"":0,""name"":null,""num_minor_ticks"":5,""tags"":[]},""type"":""LogTicker""}
    LogAxis.formatter: coffee defaults to {""type"":""LogTickFormatter""} but python defaults to {""attributes"":{""name"":null,""tags"":[],""ticker"":null},""type"":""LogTickFormatter""}
PolySelectTool: coffee is missing some properties found in Python
    PolySelectTool.overlay: python defaults to {""attributes"":{""fill_alpha"":{""value"":0.5},""fill_color"":{""value"":""lightgrey""},""level"":""overlay"",""line_alpha"":{""value"":1},""line_cap"":""butt"",""line_color"":{""value"":""black""},""line_dash"":[4,4],""line_dash_offset"":0,""line_join"":""miter"",""line_width"":{""value"":2},""name"":null,""plot"":null,""tags"":[],""x_range_name"":""default"",""xs"":[],""xs_units"":""screen"",""y_range_name"":""default"",""ys"":[],""ys_units"":""screen""},""type"":""PolyAnnotation""} but coffee has no such property
TableColumn: defaults are out of sync between Python and CoffeeScript
    TableColumn.formatter: coffee defaults to {""type"":""StringFormatter""} but python defaults to {""attributes"":{""font_style"":""normal"",""name"":null,""tags"":[],""text_align"":""left"",""text_color"":null},""type"":""StringFormatter""}
    TableColumn.editor: coffee defaults to {""type"":""StringFormatter""} but python defaults to {""attributes"":{""completions"":[],""name"":null,""tags"":[]},""type"":""StringEditor""}
TileRenderer: defaults are out of sync between Python and CoffeeScript
    TileRenderer.tile_source: coffee defaults to {""type"":""WMTSTileSource""} but python defaults to {""attributes"":{""attribution"":"""",""extra_url_vars"":{},""initial_resolution"":156543.03392804097,""max_zoom"":30,""min_zoom"":0,""name"":null,""tags"":[],""tile_size"":256,""url"":"""",""x_origin_offset"":20037508.34,""y_origin_offset"":20037508.34},""type"":""WMTSTileSource""}
Python/Coffee matching defaults problems: 12
```

Recap, things break down like this:
- ~~~`DataRange1d --- messed up because computed props.~~~  fixed in other PR
- Things like: `coffee defaults to {""type"":""ToolEvents""} but python defaults to {""attributes"":{""geometries"":[],""name"":null,""tags"":[]},""type"":""ToolEvents""}`  I am not sure if this is a real problem  with how the instances are being created on the JS side (e.g., `new ToolEvents.Model()`), or if it just some artifact of the testing process. Advice on how to proceed welcomed. 
- Whatever (if anything) is going on with `Image`
",4,24,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3404,54595912,3418,3834332,2015-12-26 02:20:54,2015-12-26 03:16:52,closed,Update toggle.coffee,"Change button active state based on directly on button state rather than the presence or absence of a CSS class.
",1,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: widgets']"
3405,54577996,3417,3834332,2015-12-25 07:30:36,2016-01-19 15:01:43,closed,Add detailed tutorial on individual charts components,"@fpliger and I discussed that it would be good to go through and show how charts works by putting together some ipython notebooks. This serves three purposes:
1. Matures the component interfaces by using them on their own
2. Documents the components in an interactive way, useful for others creating new charts
3. Helps identify tests that should be added

At this point I've described some of the reasoning behind the data formats, which is a common question. Next I've outlined how the ChartDataSource, and AttrSpec works, then how they work together. While doing this, I've found small updates needed so things work as expected outside of the Builder. Some of these changes should help in providing more of the intended flexibility to manually override the attribute functionality in the case it isn't doing exactly what is wanted.

Questions:
1. What should this be called and where should it go?
2. Any other near term topics of high priority to be covered? (Plan to do one more on creating a custom builder)
",13,26,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3406,54568685,3416,3834332,2015-12-24 23:52:04,2015-12-28 16:04:05,closed,Fix for spurious client events ,"OK, this PR supercedes #3401 (reverted) and some of #3414 (which will be closed with the branch kept for now)

There were several scenarios where properties were set or instances were created initially on the BokehJS side, and this was causing a huge number of events to be sent back to the server. Basically every mouse move and render:
- `DataRange1d` recomputed its `renderers` every single update (render). Now it does only once
- Tools with box and polygon overlays now just use actual box and poly annotations, configured from python. Bonus: now these overlays are user-configurable
- `Span` and `Tooltip` did not have python models, which caused huge spamming of the console

All `plotting/server` and `app` examples were tested on OSX/Safari and work very well, including the `selection_histogram.py` which now works perfectly! I added an app version of it to `app` directory.  I also cleaned up the `stocks.py` app example a bit, and it is working well now too. (minus the histograms, for now)

It is clear that soon after `0.11` we must design a proper system to specify and manage things like private browser state, client-only models, and configurable event suppression options in a proper way. 

ping @mattpap @havocp 

Fixes #3313 and part of #3390
",7,23,['status: accepted']
3407,54564115,3415,3834332,2015-12-24 19:23:38,2015-12-24 19:23:55,closed,"Revert ""Server annotations""","Reverts bokeh/bokeh#3401

Investigating a problem with timeout callbacks that seems to originate in referenced PR
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3408,54555650,3414,3834332,2015-12-24 15:07:48,2015-12-24 23:53:10,closed,More defaults,"This PR attempts to bring all the remaining Python / JS defaults into agreement. The goals is to be able turn off ""whole document sending"" and just send ""user-overridden"" property values, and possibly a theme stylesheet. 

@mattpap The best  way to bring things into alignment a was to fix the class structure. But, I am concerned about potential conflicts with your other work. However, all of the commits are quite self-contained to different directories, if some parts are conflict-free, I am happy to break this PR up into more pieces. 

@havocp this is very nearly done, there are only 8 reported conflicts now:

```
CategoricalAxis: defaults are out of sync between Python and CoffeeScript
    CategoricalAxis.ticker: coffee defaults to {""type"":""CategoricalTicker""} but python defaults to {""attributes"":{""name"":null,""tags"":[]},""type"":""CategoricalTicker""}
    CategoricalAxis.formatter: coffee defaults to {""type"":""CategoricalTickFormatter""} but python defaults to {""attributes"":{""name"":null,""tags"":[]},""type"":""CategoricalTickFormatter""}
DataRange1d: defaults are out of sync between Python and CoffeeScript
    DataRange1d.start: coffee defaults to 0 but python defaults to null
    DataRange1d.end: coffee defaults to 1 but python defaults to null
DatetimeAxis: defaults are out of sync between Python and CoffeeScript
    DatetimeAxis.ticker: coffee defaults to {""type"":""DatetimeTicker""} but python defaults to {""attributes"":{""desired_num_ticks"":6,""name"":null,""num_minor_ticks"":0,""tags"":[],""tickers"":[{""id"":""b3852ceb-886e-46b5-87aa-8fc780a95f68"",""type"":""AdaptiveTicker""},{""id"":""fe0ffbf8-ab5a-406c-9be1-9649840db435"",""type"":""AdaptiveTicker""},{""id"":""ddd766eb-54cd-44ec-b568-6dce16bf3f47"",""type"":""AdaptiveTicker""},{""id"":""81160ea6-c4ab-46e1-9f70-7e1840af1a1a"",""type"":""DaysTicker""},{""id"":""f09841cf-a58e-45d5-92c0-dcaa9af4d928"",""type"":""DaysTicker""},{""id"":""d6e9b380-b782-4d60-b9c6-82aa38899a81"",""type"":""DaysTicker""},{""id"":""95a2d675-24d0-4b06-97f6-7b010697f0ae"",""type"":""DaysTicker""},{""id"":""73c8b8ee-ad8f-4a9f-905f-603b3ad1fffb"",""type"":""MonthsTicker""},{""id"":""2a279fd8-22fa-475e-b0fc-0fd17e22e29c"",""type"":""MonthsTicker""},{""id"":""22580e80-b5ce-4626-82d4-1ff78d10b296"",""type"":""MonthsTicker""},{""id"":""28f3fd0c-f355-47a3-b11c-71468d425e2a"",""type"":""MonthsTicker""},{""id"":""2f3e8022-c262-46c6-a52a-8737ba28a87a"",""type"":""YearsTicker""}]},""type"":""DatetimeTicker""}
    DatetimeAxis.formatter: coffee defaults to {""type"":""DatetimeTickFormatter""} but python defaults to {""attributes"":{""formats"":{},""name"":null,""tags"":[]},""type"":""DatetimeTickFormatter""}
GMapPlot: defaults are out of sync between Python and CoffeeScript
    GMapPlot.tool_events: coffee defaults to {""type"":""ToolEvents""} but python defaults to {""attributes"":{""geometries"":[],""name"":null,""tags"":[]},""type"":""ToolEvents""}
Image: defaults are out of sync between Python and CoffeeScript
    Image.color_mapper: coffee defaults to {} but python defaults to {""attributes"":{""high"":null,""low"":null,""name"":null,""palette"":[""#000000"",""#252525"",""#525252"",""#737373"",""#969696"",""#bdbdbd"",""#d9d9d9"",""#f0f0f0"",""#ffffff""],""reserve_color"":""#ffffff"",""reserve_val"":null,""tags"":[]},""type"":""LinearColorMapper""}
Bokeh: LogTickFormatter not configured with a ticker, using default base of 10 (labels will be incorrect if ticker base is not 10)
LogAxis: defaults are out of sync between Python and CoffeeScript
    LogAxis.ticker: coffee defaults to {""type"":""LogTicker""} but python defaults to {""attributes"":{""base"":10,""desired_num_ticks"":6,""mantissas"":[1,5],""max_interval"":null,""min_interval"":0,""name"":null,""num_minor_ticks"":5,""tags"":[]},""type"":""LogTicker""}
    LogAxis.formatter: coffee defaults to {""type"":""LogTickFormatter""} but python defaults to {""attributes"":{""name"":null,""tags"":[],""ticker"":null},""type"":""LogTickFormatter""}
TableColumn: defaults are out of sync between Python and CoffeeScript
    TableColumn.formatter: coffee defaults to {""type"":""StringFormatter""} but python defaults to {""attributes"":{""font_style"":""normal"",""name"":null,""tags"":[],""text_align"":""left"",""text_color"":null},""type"":""StringFormatter""}
    TableColumn.editor: coffee defaults to {""type"":""StringFormatter""} but python defaults to {""attributes"":{""completions"":[],""name"":null,""tags"":[]},""type"":""StringEditor""}
TileRenderer: defaults are out of sync between Python and CoffeeScript
    TileRenderer.tile_source: coffee defaults to {""type"":""WMTSTileSource""} but python defaults to {""attributes"":{""attribution"":"""",""extra_url_vars"":{},""initial_resolution"":156543.03392804097,""max_zoom"":30,""min_zoom"":0,""name"":null,""tags"":[],""tile_size"":256,""url"":"""",""x_origin_offset"":20037508.34,""y_origin_offset"":20037508.34},""type"":""WMTSTileSource""}
```

The break down like this:
- `DataRange1d --- messed up because computed props. Intend to fix in other PR
- Things like: `coffee defaults to {""type"":""ToolEvents""} but python defaults to {""attributes"":{""geometries"":[],""name"":null,""tags"":[]},""type"":""ToolEvents""}`  I am not sure if this is a real problem  with how the instances are being created on the JS side (e.g., `new ToolEvents.Model()`), or if it just some artifact of the testing process. Advice on how to proceed welcomed. 
- `Image`  where  `coffee defaults to {}` even though the default is `new LinearColorMapper(palette: Greys9)` this seems like it might be a real isse
",4,20,['status: superseded']
3409,54503940,3411,3834332,2015-12-23 20:27:45,2016-01-01 15:18:41,closed,Update dev_guide/setup.rst to align develop deps in line with scripts/devdeps.py,"Update dev_guide/setup.rst to match dependencies required (and tested for) in scripts/devdeps.py

Note: I removed pdiff and boto from the listed deps in setup.rst because they're only used by Travis CI and not the developer. They're not tested for in devdeps.py because they're not required to develop/test locally. Removing them may be a point of debate.
",5,4,['status: accepted']
3410,54495470,3410,3834332,2015-12-23 18:37:39,2015-12-27 01:17:58,closed,Docfix/2448 TextInput widget callback description,"issues: fixes #2448

Add callback attribute to TextInput child class (override from InputWidget parent), in order to specify when the callback is executed.
",1,3,['status: accepted']
3411,54492343,3409,3834332,2015-12-23 17:55:32,2015-12-30 17:52:13,closed,server lifecycle hooks feature,"This has some TODOs and is missing unit tests.

The idea of the feature is that application handlers
can take actions when the server starts, stops, and when
sessions are created and destroyed. These actions can
manually manage document locks, instead of always being inside
the lock like code in session callbacks.

We could implement develop mode file watching in these handlers.
We could also support adding hooks from applications themselves.

See also https://github.com/bokeh/bokeh/wiki/Server-lifecycle-hooks
",9,16,"['type: feature', 'status: accepted', 'reso: completed']"
3412,54438474,3407,3834332,2015-12-23 03:53:31,2015-12-23 15:37:48,closed,Plotting server cleanup,"This PR cleans up and shrinks `examples/plotting/server` 

All of the old non-interactive examples were removed. One new non-interactive example, `hover.py` was added. The `stocks_timeout.py` example was simplified and improved and renamed to `timeout.py`

One example does not work: `geojson_points.py` (initial range problem) ping @birdsarah 

@bokeh/core I plan to merge this in the morning, unless there are comments. 
",0,9,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples', 'tag: component: server']"
3413,54435702,3406,3834332,2015-12-23 02:28:46,2015-12-23 15:37:26,closed,plotting/file cleanup,"This PR cleans up all the examples in `examples/plotting/file`:
- removes unused imports and code
- simplifies where possible (no more `OrderedDict`, simpler tool selection, etc.)
- normalizes import order
- puts `output_file` near the end, always
- tried to improve visual styling in places
- consistent line continuation style throughout

There are a few broken examples:
- `geojson_points.py` can't set initial ranges
- `line_select.py` issue with nonserializable references

I also deleted a few examples that seemed redundant, or not useful:
- `correlation.py`
- `image_url.py`
- `line.py`
- `relative_paths.py`
- `scatter.py`

And also moved the ajax examples to `interactions` (FYI @mattpap)
",1,53,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3414,54413728,3403,3834332,2015-12-22 20:53:16,2015-12-22 20:54:44,closed,Add in remaining html templates,"feeling :sheep: ish
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3415,54413331,3402,3834332,2015-12-22 20:48:47,2015-12-22 20:49:32,closed,Add in bokeh_theme layout,,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3416,54408613,3401,3834332,2015-12-22 19:57:46,2015-12-23 18:49:29,closed,Server annotations,"This PR cleans up property warnings, etc around tool annotations mostly. 

Seems to silence issues with box and poly selection overlays as well as tickers on datetime tickers. 
",2,11,"['status: accepted', 'type: task', 'reso: completed']"
3417,54403699,3400,3834332,2015-12-22 19:07:58,2015-12-23 12:44:26,closed,Remove caching mechanism,"Let's see how we perform without caching...
",2,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3418,54400158,3399,3834332,2015-12-22 18:29:51,2016-03-19 19:46:52,closed,Patches with hole,"Fixes: #2321
",43,27,['status: paused']
3419,54318320,3396,3834332,2015-12-22 00:05:03,2015-12-24 17:00:35,closed,remove io related cruft from charts,"issues: fixes #3132 
",1,8,['status: accepted']
3420,54315156,3395,3834332,2015-12-21 23:20:15,2015-12-28 18:57:22,closed,Improve general chart examples,"This only addresses the first and third tasks for #3270.
",8,15,['status: accepted']
3421,54311617,3394,3834332,2015-12-21 22:37:48,2015-12-23 19:48:53,closed,Fix output_server on charts,"issues: fixes: #3131

autoadd chart to curdoc so it works output_server as figure
",0,3,['status: accepted']
3422,54296680,3391,3834332,2015-12-21 20:03:04,2015-12-27 01:22:25,closed,Cleanup charts,"Clean charts from:
- annoying console warnings
- flake warning
",2,12,"['status: accepted', 'type: task', 'reso: completed']"
3423,54296045,3389,3834332,2015-12-21 19:56:49,2015-12-22 20:37:31,closed,Bring documentation look and feel in line with bokehplots.com,"Fixes #3388
",7,11,['status: accepted']
3424,54285042,3387,3834332,2015-12-21 18:02:50,2015-12-29 02:42:45,closed,Movies example,"Recreate most of the movie reviews Shiny example using Bokeh. 
",2,11,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3425,54279989,3385,3834332,2015-12-21 17:11:26,2015-12-21 19:33:44,closed,Fix change suppression on units-spec values,"One issue created by this was to defeat patch-doc should_suppress_on_change,
since we compared two dicts and one of them had the units accidentally
stripped out.
",2,3,"['type: bug', 'status: accepted', 'reso: completed']"
3426,54262478,3382,3834332,2015-12-21 14:36:13,2015-12-22 21:38:03,closed,Periodic callback refactor,"I was hoping this would fix the test_lots_of_concurrent test taking forever, but I guess that's due to message backlog not periodic callback pileup.

Anyway, what this does: ClientSession now uses _AsyncPeriodic from the server, which means it shouldn't ""pile up"" async periodic callbacks that take longer than the period.

Also redid _AsyncPeriodic to work in a simpler way with gen.sleep, avoiding the math that was there before.
",3,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3427,54224720,3380,3834332,2015-12-21 06:33:15,2016-01-02 19:43:10,closed,Add simple examples using excel inputs,,1,1,['status: superseded']
3428,54201309,3379,3834332,2015-12-20 15:15:22,2015-12-20 20:07:28,closed,Add connection write_lock,"Keeps us from interleaving websocket frames that belong to distinct messages.
",2,4,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: server']"
3429,54192615,3378,3834332,2015-12-20 04:15:56,2015-12-21 19:57:17,closed,New docs theme,"This brings docs theme in line with new bokehplots.com
#3369 should be merged first, as it'll make the diff smaller.

<img width=""1017"" alt=""screen shot 2015-12-19 at 8 14 08 pm"" src=""https://cloud.githubusercontent.com/assets/1796208/11916472/1defd9a8-a68d-11e5-9531-0f622e4b59f4.png"">

Biggest changes are a top-nav that holds the top-level navigation for the docs (installation, user guide etc) and then a new side nav that just displays the nav for the area you're in. 

The rest of the skin changes are all inherited from the new bokehplots.com
",2,22,['status: superseded']
3430,54191395,3377,3834332,2015-12-20 02:27:40,2015-12-20 20:31:20,closed,Cleanup interactions examples,"All the examples under `examples/interactions` work and are cleaned up/made consistent

Diff has extra junk util #3330 is merged
",0,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3431,54190619,3376,3834332,2015-12-20 01:22:50,2015-12-20 02:22:13,closed,inspected is a non-serializable attr at least for now,"This was causing problems with `us_marriages_divorce` it seemed especially highlighted by line inspections. Some day might be nice to offer serializations of inspections as an option but this keeps the status quo working for now. 
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3432,54189914,3375,3834332,2015-12-20 00:32:41,2015-12-20 21:54:12,closed,Cleanup embed examples,"This PR cleans up, normalizes and verifies that (almost) all the example in `examples/embed` work. 

The one current exception is the slideshow. There appears to be something about the way reveal.js ""renders everything"" but only ""shows one part at a time"" that confuses the Bokeh server's tab-per-session (or something) the plots/widgets show up, but do not animate/respond. ping @havocp @damianavila if there is some alternate way to organize things that can work, I'd love to keep it (maybe simplify the examples a bit) otherwise we should just remove the example. 

Note, this is based off #3330 so has some extra junk in the diff
",0,11,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3433,54186994,3374,3834332,2015-12-19 21:28:55,2015-12-20 22:59:48,closed,Reorganize top level package ,"ping @bokeh/dev 

My intent with this PR is to try and move things that average users will never have any reason to use directly out of the top level and into `bokeh.core` or `bokeh.utils`, etc. There are a few other things that could potentially be moved out (`_version.py`, `application`, `sphinxext`) as well. It also makes `bokeh.plotting` a package, consistent with the other APIs. From my perspective this makes the structure of the library easier to document. Opinions welcome. 

This obviously makes a number of small changes to many files, and shuffles other files around. I'm fine to keep this up to date and merge after `0.11`. OTOH in might be nice to get this out of the way in a release that will already have other changes. 
",14,23,"['status: accepted', 'type: task', 'reso: completed']"
3434,54164296,3373,3834332,2015-12-19 00:14:35,2015-12-22 01:07:40,closed,Register modules from plugins in the main bokeh bundle,"This allows bokeh to know about plugins' modules, to allow custom models to require such modules. Previously this resulted in module not found exception. The new approach is to register plugins' modules in the main bundle (so there is one set of modules, instead of 1 + n), resulting in one `require()` being used by all involved parties (main bundle, plugins and custom models).

fixes #3339
",4,1,['status: accepted']
3435,54049207,3370,3834332,2015-12-18 00:02:47,2015-12-30 17:49:25,closed,Better approach to notebook comms:,"issues: fixes #1732 

On notebook show, create new comms and coordinate comms_target in `doc_js`. Store comms as `last_comms` on state. Close any previous `last_comms`.

On push_notebook, use `last_comms` to send message to last showndocument.
",16,39,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3436,54047709,3369,3834332,2015-12-17 23:42:38,2015-12-21 16:56:22,closed,Re-org the top-level of the docs,"Fixes: #3367 

Any removed content will be in the new bokehplots.com site (the repo is just getting started at https://github.com/bokeh/bokehplots.com)
",0,3,['status: accepted']
3437,54046813,3368,3834332,2015-12-17 23:31:46,2015-12-27 04:17:40,closed,NO_{GLYPH->DATA}_RENDERER warning,"This PR addresses two current issues:
https://github.com/bokeh/bokeh/issues/3223
https://github.com/bokeh/bokeh/issues/3302

In the past, any valid plot required a `GlyphRenderer`.  That is no longer case with the addition of `TileRenderer` and `DynamicImageRenderer`.  The PR adds a new abstract base class `DataRenderer` to `bokeh/models/renderers.py` which inherits from `Renderer` and is now the parent class of `GlyphRenderer`, `TileRenderer`, and `DynamicImageRenderer`.  This parent class can now be validated in `bokeh/models/plots.py`. Initial testing looks fine and this removes the warning displayed by the `dynamic_map.py` example.

There are also a couple flake8 fixes...
",5,9,"['type: bug', 'status: accepted', 'reso: completed']"
3438,54010612,3366,3834332,2015-12-17 18:05:27,2016-04-20 18:59:36,closed,Add Interface for Chord Graphs,"issues: closes #844

Hello Bokeh team :grin:, finally found some time to do this!

I want to create a PR to add Chord Graphs interface to Bokeh. (issue #844)
![chord graph example](https://pbs.twimg.com/media/CU_uV-mWcAALL-R.png:large)

I have already shown that creating chord graphs with Bokeh is [possible](https://www.continuum.io/blog/developer-blog/redrawing-brain-bokeh), now I want to make it available to everyone with an easy to use interface. My hope is also that making this PR I can get some help from some of the **Bokeh gurus** to resolve some of the features I've tried to do but I got lost.
#### TODO:
- [x] Add the code to generate the chord with the chart interface
- [x] Show labels in the chart
- [x] Expose customisations for the Chart (labels etc..) 
## Future commits
- Add hoverTool to arcs
- Add tapTool to arcs
- WebGL rendering for arcs
- WebGL rendering for beziers

I'll be working on this actively and I take the compromise of maintining it but any help is **very** welcomed :grimacing:, not a super expert, yet !

Thanks !!
",52,1,['status: accepted']
3439,53934674,3364,3834332,2015-12-17 04:54:18,2015-12-30 21:45:52,closed,Tile wrap around,"Mercator tile sources now have a `wrap_around` flag. 

`wrap_around = True` (default):
<img width=""515"" alt=""screen shot 2015-12-16 at 10 30 35 pm"" src=""https://cloud.githubusercontent.com/assets/433221/11861332/ba38b136-a444-11e5-82e9-c36b564e8b0b.png"">

`wrap_around = False`:
 <img width=""504"" alt=""screen shot 2015-12-16 at 10 34 13 pm"" src=""https://cloud.githubusercontent.com/assets/433221/11861523/c9de92fc-a446-11e5-8905-ac65c0ee2ea7.png"">

The addition of wrapping to other layers (e.g. `DynamicImageLayer`, `GeoJSONLayer`) will come in subsequent PRs. The colored layer seen on the US is a `DynamicImageLayer`. 

This example is available at `examples/plotting/file/dynamic_map.py`
",4,5,"['type: feature', 'status: accepted', 'reso: completed']"
3440,53911086,3362,3834332,2015-12-16 22:54:47,2015-12-17 17:57:18,closed,Allow server to create session id with autoload_server,"Fixes #3355
",1,5,['status: accepted']
3441,53897606,3360,3834332,2015-12-16 20:59:37,2015-12-17 17:57:36,closed,Add ?v=CONTENTHASH to static paths served by the server,"This allows an nginx configuration to set aggressive caching
headers, as described at http://www.tornadoweb.org/en/stable/guide/running.html

This isn't especially important in the short term but I was reading the docs and saw it and it was easier to just do it than file an issue.

The point of this is to avoid using up server CPU serving static assets.
",1,1,"['type: feature', 'status: accepted', 'reso: completed']"
3442,53891341,3358,3834332,2015-12-16 20:06:57,2015-12-16 22:53:21,closed,Enable autoload_server with static html,"Fixes #3355 

This PR builds on an earlier one so it has extra stuff in it until #3325 is merged.
",2,18,['status: superseded']
3443,53888954,3356,3834332,2015-12-16 19:48:24,2015-12-16 22:10:15,closed,DataSpecProperty.set_from_json: check whether json is a dict before assuming,"This fixes an error in `bokeh server examples/app/sliders.py` for example.

```
  File ""/home/hp/checkout/bokeh/bokeh/properties.py"", line 1523, in set_from_json
    if 'value' in json:
TypeError: argument of type 'int' is not iterable
```
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3444,53856217,3354,3834332,2015-12-16 15:33:04,2015-12-16 15:36:09,closed,add chdoig's scikit-learn clustering demo,"Not for this PR, but some ""nice to haves"" that could improve this app if there is time:
- spinner when computing/busy
- deactivate widgets when computing/busy
- auto layout (ping @havocp)
- visual style tweaks (ping @SaraSchnadt )
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples', 'tag: component: server']"
3445,53855412,3353,3834332,2015-12-16 15:27:29,2015-12-16 15:29:42,closed,sklearn example,"Not for this PR, but some ""nice to haves"" that could improve this app if there is time:
- spinner when computing/busy
- deactivate widgets when computing/busy
- auto layout (ping @havocp)
- visual style tweaks (ping @SaraSchnadt )
",1,10,['status: declined']
3446,53801201,3351,3834332,2015-12-16 05:34:49,2015-12-16 20:05:40,closed,Make `bokeh json` and `bokeh html` work in a similar way,"The main point here is to keep these consistent from the perspective of someone using the bokeh command.
But also we're sharing implementation so that adding any new file output formats should be straightforward.
(To support a binary output format like png, some minor tweaks to the `FileOutputSubcommand` base class will be needed, since it assumes text output right now.)
",3,10,"['status: accepted', 'type: task', 'reso: completed']"
3447,53725757,3348,3834332,2015-12-15 16:22:09,2015-12-16 20:56:22,closed,added layouts to main.coffee,"Related Issue: https://github.com/bokeh/bokeh/issues/3339

This PR adds layouts to `coffee/main.coffee` so they can be extended in User Defined Models.
",14,2,['status: declined']
3448,53662512,3345,3834332,2015-12-15 05:38:02,2015-12-15 16:58:03,closed,support --prefix for server,"Will add tests in the morning, but review appreciated anytime. @bokeh/dev 
",4,4,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
3449,53611082,3342,3834332,2015-12-14 19:37:43,2015-12-21 15:42:49,closed,Fix charts not working with server sessions,"Issues: fixes: #3320 
",8,15,['status: accepted']
3450,53586507,3341,3834332,2015-12-14 16:22:29,2015-12-15 16:19:45,closed,"When we customize property serialization, also customize deserialization","TLDR the client in examples/plotting/server/glyphs.py ended up with `inner_radius = { value: 10 }` instead of `inner_radius = { value: 10, units: 'screen' }` and now it keeps the units.

This fixes a problem with examples/plotting/server/glyphs.py where
we'd have AnnularWedge.inner_radius as a single value, we'd send it
to the client as a dict, at some point the client sent it back to us
as a dict, we then stripped the units out and emitted a ModelChangedEvent
as a dict sans units (because ModelChangedEvent contains the new regular
value, not the new serializable_value()). This new units-less dict was
then sent to the client causing the client to use default units instead
of the originally-provided units.

To fix this we need the serializable_value() in ModelChangedEvent.

We also need to be able to get a change event back from the client
without ""forgetting"" the dict-ness of our local attribute.
""dict-ness"" means that we remember whether you set `foo = 42` or
`foo = { 'value' : 42 }`.

So we move the logic that does from_json and then sets the prop
from Document into a HasProps.set_from_json which in turn delegates
to Property, so that DataSpecProperty can process the JSON and
decide to preserve its dict-ness in the JSON case but not in the
regular `__set__` case.
",2,1,"['type: bug', 'status: accepted', 'reso: completed']"
3451,53571719,3338,3834332,2015-12-14 14:34:08,2015-12-14 16:26:04,closed,fix problem where replacing children did not update document,"This should fix the voluminous errors reported by the `stocks` app example when it replaces the Histogram charts, e.g.

This is from a patch from @havocp 
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs', 'tag: component: server']"
3452,53562851,3337,3834332,2015-12-14 13:15:12,2015-12-14 15:06:51,closed,Test that coffee/python sync issues are not increasing,"Instead of commenting out the assertion entirely, we can require
that the problem doesn't get any worse.
",1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3453,53522362,3334,3834332,2015-12-14 03:53:52,2015-12-14 15:13:15,closed,hotfix to only render toolbar once,"Fixes a bug that caused the toolbar to be unresponsive on streaming updates. 

@birdsarah @mattpap @brendancol any comments welcome, I am sure this is a simplistic fix but it does seem to be an improvement. 
",7,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3454,53519148,3332,3834332,2015-12-14 02:37:28,2015-12-14 18:34:26,closed,load BokehJS resources from https,"issues: fixes #2659 
",6,1,['status: accepted']
3455,53514138,3330,3834332,2015-12-14 00:03:33,2015-12-20 20:10:53,closed,Periodic forcing and server examples cleanup,"issues: fixes  #3335 

This PR adds a `bokeh.utils.forcing` module that has decorators very useful with server periodic callbacks. This PR also cleans up all the server examples to use those forcing functions where appropriate and in general make the example structure, imports, etc. consistent.

TODO:
- [x] add module docs to sphinx
- [x] add tests for module
- [x] apply forcing function everywhere else appropriate 

---

some  currently problematic examples are
- selection histogram: sometimes does not update, ""ping pong""?
- glyphs.py `width_units` etc seemingly ignored
- timeout stocks, needs to be simplified, timeout callback issue?
",22,13,['status: accepted']
3456,53444567,3327,3834332,2015-12-11 21:10:49,2015-12-12 02:02:15,closed,fix erroneous dispatch method,,2,1,"['type: bug', 'status: accepted', 'reso: completed']"
3457,53444243,3326,3834332,2015-12-11 21:07:36,2015-12-12 01:34:43,closed,Finishes remaining JS test_document TODOs,,0,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3458,53442548,3325,3834332,2015-12-11 20:51:31,2015-12-16 22:06:40,closed,Signed session IDs and consistent session/url/app_path params,"This is intended to fix #3324 and fix #3171 and also fix output_server to have an app_path which is in the wiki (https://github.com/bokeh/bokeh/wiki/Issue-list:-new-Bokeh-server ) but not an open issue.

Signed sessions are a partial step toward https://github.com/bokeh/bokeh/issues/3287 but there's a missing piece (doc_handler.py will still autogenerate an ID, there has to be a way to disable that).
",9,13,['status: accepted']
3459,53331176,3323,3834332,2015-12-10 23:06:23,2015-12-17 17:57:06,closed,Correct deps throughout,"issues: closes #3068 closes #3262

This PR removes pandas as a hard dependency (marking it `optional` in the core library and `required` in the subcomponents and sample data that require it)

It updates the conda recipe dependency list and the documentation to match. 
",5,9,['status: accepted']
3460,53327675,3321,3834332,2015-12-10 22:34:37,2015-12-14 14:40:19,closed,Session callback fixes,"I'm hopeful this fixes #3310 
",2,6,['status: accepted']
3461,53299304,3314,3834332,2015-12-10 18:45:19,2015-12-12 17:25:52,closed,New example - custom axis tickformatter,"issues: fixes #3193

By defining a custom TickFormatter model, we are able to remove the weekend/holiday gaps in the candlestick financial chart. Dates are formatted into an array of Strings, e.g. ['Sep 01', 'Sep 02', ...], which is passed to the custom ticker as a property and then rendered on the axis.

The downside to this approach is that we lose the dynamic nature of Datetimei. This can be overcome by making DateGapTickFormatter receive more than one list of Strings, each one representing a different Date format, e.g. List 1 = ['Sep 01', 'Sep 02', ...]; List 2 = ['Sep', 'Sep', ... 'Oct', ...] and so on. This remains as a suggestion only and is not implemented by this commit.
",8,4,['status: accepted']
3462,53294421,3312,3834332,2015-12-10 18:03:58,2015-12-17 05:08:45,closed,"Add data labels to charts data sources to support hover tools, and fix charts defaults","The primary purpose of this was to provide relevant fields associated with non-aggregated or aggregated data.

Each source to glyph renderers will now have the columns provided to the chart available, plus a column called ""chart_index"". 

So `Chart(data, x='displ', y='mpg', color='cyl', marker='cyl', line_color='origin')` would take all the unique column attributes  ('cyl', 'cyl', 'origin') => ('cyl', 'origin'), and add the values to each data source. So you would end up with 3 extra columns besides just the data that is required for the glyph. You'd have something like this:

``` python
{'chart_index': [{'cyl': 8, 'origin': 1}], 'cyl': [8], 'origin': [1], ... <other values required for glyph>}
```

Previously, the chart was internally using the name that pandas.DataFrame.groupby produces, `(name, data_group)`, where name is either a single value if grouped by one column, or a tuple of values if grouped by more than one, which would be `(8, 1)` for this example. 

Instead of using the tuple of unique values for that group of data, what you see above as 'chart_index' is carried around as representing the label of that subset of data. This makes it easier to reference both the column and unique values internally for charts. One note is that if you do not pass any column names into charts, the chart_index will be 'None' as a special value used for that case, meaning that you have not grouped the data, so there is no index to label the data by.

Examples were modified on various charts to include the hover tools, and this was made easier by offering a hover kwarg to charts. This kwarg can accept what is passed to tooltip on HoverTool without the user having to import and set the values. It also can take more simple inputs and try to create the tooltip value based on the chart inputs.

All of the following are equivalent, but you could show fewer values as well through either the second or third example:

``` python
Chart(...., hover=True)

Chart(..., hover=['cyl', 'origin'])

Chart(..., hover=[('cyl', '@cyl'), ('origin', '@origin')])
```

This work resolves #2965.

Also, while completing this work I came across issues from the recent properties rework. Specifically, the default coloring of some glyphs wasn't correctly being used. 

This work resolves #3296. 
",8,27,['status: accepted']
3463,53293818,3311,3834332,2015-12-10 17:58:59,2015-12-14 21:29:03,closed,"Add charts/plotting and charts/file to testing locations, warning","about ipython-notebook dependency.
",1,2,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
3464,53266796,3308,3834332,2015-12-10 14:43:40,2015-12-11 01:11:06,closed,"Fix ping data encoding for Python 3, add test_ping unit test","Fixes #3299
",1,2,['status: accepted']
3465,53262343,3307,3834332,2015-12-10 14:07:09,2015-12-10 15:49:52,closed,Use add_root not add in sliders.py and fourier_animated.py examples,,0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3466,53180326,3297,3834332,2015-12-09 21:27:00,2015-12-15 19:57:30,closed,Server host arg,"issues: closes #3165
",11,16,['status: accepted']
3467,53177222,3295,3834332,2015-12-09 21:02:02,2015-12-09 22:40:46,closed,Use the correct name for the Server(keep_alive_milliseconds) kwarg,"`--keep-alive` option was being silently ignored.
",0,1,['status: accepted']
3468,53176146,3294,3834332,2015-12-09 20:53:00,2015-12-09 22:28:39,closed,Don't _schedule_reconnect on ClientConnection creation,"Also improve the log messages about connection status.

We were doing a _schedule_reconnect(0) that never did anything
and then all the actual code did a manual connect() call.
This resulted in a bogus ""connection lost"" message every time
on startup in the JS console, which was confusing.
",1,1,['status: accepted']
3469,53172027,3292,3834332,2015-12-09 20:18:31,2015-12-09 22:25:22,closed,Use a custom message for keep-alive ping,"This is a probably-wrong fix for #3291 

Also switch force_roundtrip over to use ping.

What this does is that instead of sending a websocket ping
frame with opcode 0x9 and getting back a pong with opcode 0xA
(see https://tools.ietf.org/html/rfc6455#section-5.5.2),
we send several text data frames with opcode 0x1 which is our
usual message structure (https://tools.ietf.org/html/rfc6455#section-5.6 ).

I know of no reason this should make any difference to a reverse proxy
like nginx, and in a quick glance through nginx source code it
looks like sending and receiving any kind of bytes as a ping/pong
ought to work... maybe there's an issue with buffering or something
that makes the message size matter? If so we could send more data
in the ping/pong frames...
Buffering: http://nginx.org/en/docs/http/ngx_http_proxy_module.html#proxy_buffering

Until we understand why/whether this change matters we probably should
not apply it.
",2,1,['status: declined']
3470,53159805,3289,3834332,2015-12-09 18:39:10,2015-12-10 15:50:33,closed,preserve root insertion order in documents,"issues: fixes #3253 

ping @havocp @mattpap 
",2,1,['status: accepted']
3471,53155405,3285,3834332,2015-12-09 18:01:37,2015-12-09 20:53:07,closed,Remove unnecessary paren in error message.,"Very small formatting change.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3472,53144222,3283,3834332,2015-12-09 16:39:40,2015-12-09 16:44:43,closed,fix broken docstring automation,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3473,53067454,3282,3834332,2015-12-09 02:03:18,2015-12-09 18:10:46,closed,remove broken ws_url property from server,,2,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3474,53065533,3281,3834332,2015-12-09 01:35:10,2015-12-09 15:39:11,closed,Correct Bokeh periodic callback to take period in milliseconds,"issues: fixes #3192
",2,4,['status: accepted']
3475,53060853,3280,3834332,2015-12-09 00:33:59,2015-12-16 19:35:19,closed,Feature/add image diff testing to selenium,,13,18,['status: paused']
3476,53056006,3278,3834332,2015-12-08 23:36:05,2015-12-09 15:43:16,closed,Keep the output_file the same name as the example file,,1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3477,53028743,3277,3834332,2015-12-08 19:47:29,2015-12-08 22:43:13,closed,Add keep-alive ping,"This fixes #3113 
",5,5,['status: accepted']
3478,53021689,3276,3834332,2015-12-08 18:50:59,2015-12-08 22:44:56,closed,Keep ScriptHandler modules from being prematurely gc'd,"Closes #3275
",1,2,['status: accepted']
3479,53005282,3274,3834332,2015-12-08 16:42:16,2015-12-08 18:02:30,closed,Remove ColumnsRef,"I think it's not necessary any more, but lets see if tests pass.
",1,1,['status: accepted']
3480,52984566,3273,3834332,2015-12-08 14:09:48,2016-01-03 21:15:58,closed,Production Bokeh,"Requires Nginx > 1.3
",11,3,"['type: feature', 'tag: component: docs', 'status: declined', 'reso: completed', 'tag: component: server']"
3481,52954162,3271,3834332,2015-12-08 09:04:18,2015-12-08 19:52:00,closed,Add image diff testing to selenium,"Allows you to use the base_screenshot fixture to test a selenium screenshot against a stored default.

Will automatically generate the base screenshot for you if it's not present.

To reset the base, remove it from the screenshots directory
",3,13,"['type: feature', 'reso: working as intended', 'tag: component: tests', 'status: declined']"
3482,52933584,3269,3834332,2015-12-08 03:16:56,2015-12-08 14:10:05,closed,Production Bokeh,"- [x] example supervisor setup
- [x] example nginx setup
",4,2,['status: superseded']
3483,52901768,3268,3834332,2015-12-07 21:15:02,2015-12-07 23:29:58,closed,Remove pandas deprecation,"Removes pandas deprecation when using some charts due to `df.sort` rename to `df. sort_values`
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3484,52896414,3266,3834332,2015-12-07 20:29:28,2015-12-09 02:05:13,closed,Refactor and cleanup dev guide,"issues: fixes #3264.
",13,7,['status: accepted']
3485,52896383,3265,3834332,2015-12-07 20:29:05,2015-12-08 13:49:43,closed,try some other build matrix configurations,"issues: ref #3236 

ping @damianavila 

This results in the following build matrix:

<img width=""720"" alt=""screen shot 2015-12-07 at 2 50 50 pm"" src=""https://cloud.githubusercontent.com/assets/1078448/11639352/f87e375e-9cf1-11e5-90c4-472f302b8af3.png"">

This a little different from the changes suggested in the referenced issue. Basically:
- Python+JS unit tests everywhere, but together to save on install times. (The tests suites themselves are both very fast compared to install time)
- Integration tests only once, on Py 3.4 
- flake_docs only once, on py2.7 (since that is where they are deployed from)
- examples tests everywhere (except disabled for py3.5 temporarily for now)

**_NOTE**_: the 3.5 examples tests are unfortunately disabled (for now) because we simply cannot afford three ""long"" tests with only five workers, with the volume of PRs we have. It results in an immediate logjam.  Looking into adding resources. 
",9,2,['status: accepted']
3486,52884320,3263,3834332,2015-12-07 18:49:26,2015-12-08 18:18:33,closed,add sphinx directive to create versioned links into the repo,"issues: ref #3186 

And update the ""examples"" link in the main gallery to use it to point to the correct checkout for the actual docs version being viewed. 
",7,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3487,52846104,3261,3834332,2015-12-07 13:46:44,2015-12-09 18:22:52,closed,Rename Legend.{orientation->location} and implement more locations,"Now we have total of ten locations: four corners, five centered and absolute locations. See `glyphs/legends`. This PR won't implement automatic location at this point. `Legend.orientation` is deprecated, but `@deprecated` decorator doesn't seem to work.

TODO:
- [x] be explicit about screen coordinates
- [x] update note in the documentation (absolute location)
- [x] make sure deprecation warning is shown
",4,12,"['type: feature', 'status: accepted', 'reso: completed']"
3488,52842864,3259,3834332,2015-12-07 13:14:45,2015-12-08 13:50:57,closed,Shrink test_objects.py::TestCollectModels::test_references_large,"Checking 500 large plots is not testing more than checking 10,
and this test took 1.5 seconds (out of 5.5 seconds for the entire
test suite).
",8,2,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
3489,52841899,3258,3834332,2015-12-07 13:04:23,2015-12-07 21:40:50,closed,Add skipped test to compare Python and Coffee defaults,"The fix to CrosshairTool is in here because it breaks the test code (when it tries to use display_defaults
on an object that isn't a HasParent)
",5,6,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3490,52839004,3256,3834332,2015-12-07 12:32:28,2015-12-07 15:56:19,closed,properties.coffee: Remove dead code in Distance._init Angle._init,,1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3491,52838329,3255,3834332,2015-12-07 12:24:56,2015-12-08 13:51:23,closed,Correct lots of defaults to match between Python and CoffeeScript,"These are cases where we were using the Coffee values in 0.10 and
the Python defaults were out of sync, the Coffee values look more
correct.
",6,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3492,52827356,3254,3834332,2015-12-07 10:27:52,2016-01-14 17:05:40,closed,Add support for undo and redo tools,"This works currently with pan, wheel zoom and box zoom tools, thought wheel zoom is too granular. Tool buttons are disabled if can't undo/redo. Reset tool clears the history. Future developments could include a dropdown menus showing undo/redo history (needs better toolbar implementation).

I was too lazy to base64-encode new icons, so I switched from manually encoded icons to using `data-uri()` function in less. This way icons were moved from JS to CSS. ~~Given the current implementation, this required to use `content` CSS property, which may cause compatibility issues (IE). If so, we can always switch to using `background-image` later, but before release~~.
",39,19,"['type: feature', 'status: accepted', 'reso: completed']"
3493,52793493,3251,3834332,2015-12-06 23:03:10,2015-12-09 15:41:01,closed,Bokeh Command docs,"This is a PR to work up documentation for the Bokeh command and in particular the `bokeh serve` command. 

Test docs have been deployed to:

http://bokeh.pydata.org/en/server_branch/
",2,16,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3494,52770329,3248,3834332,2015-12-06 01:50:33,2015-12-07 16:25:46,closed,Do not default NumberSpec/AngleSpec/DistanceSpec to field name,"(continuing to break up #3099)

This reverts to Bokeh 0.10 behavior.
In Bokeh 0.10, the CoffeeScript default was undefined
(or 0, for some angles). After the tornado merge, we were sending
the field name default from Python when we did not ever use that
name before. In 0.10, we'd never send the default so CoffeeScript
never saw it.

The field name doesn't seem like a good default because in general
it ends up being very magical and unclear; if I type
`Line(source=source)` then it magically uses the `x` and `y` columns,
but if I later rename those columns, or if I'm adapting an example
and my columns aren't named that, it gets confusing what's going on.

Requiring the field name to be written out is better for ""programming
by example.""

If we do want to default to the field name, we should probably do
it in properties.py anyway instead of typing it out in every class
definition.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3495,52765788,3247,3834332,2015-12-05 21:52:51,2015-12-17 02:52:01,closed,"Always use skinny arrow for methods, add `gulp lint`","This is a more thorough version of a commit that's in #3099  (https://github.com/bokeh/bokeh/commit/4e03d100ddc3b814e77d3fdbf210a92f0c224608). That commit is broken, too, and isn't related to #3099.

Rationale in the commit message https://github.com/bokeh/bokeh/commit/920d9af9ccd969b5d204936d375de345c2044d88
",12,8,['status: paused']
3496,52742988,3242,3834332,2015-12-05 01:47:53,2015-12-07 15:57:37,closed,Add tags default in coffeescript,"This is pulling some work out of #3099 in order to shrink that PR. We will probably close #3099 after pulling everything out but for now #3099 is useful for coordinating the remaining tasks to sync defaults.
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3497,52738807,3241,3834332,2015-12-05 00:21:31,2015-12-05 00:33:17,closed,Added Overrides to rid the RuntimeWarning from properies,"All of these seemed like intended overrides. Might want to double check though. 
",1,1,"['type: feature', 'reso: working as intended', 'status: declined']"
3498,52736038,3240,3834332,2015-12-04 23:41:10,2015-12-08 18:05:58,closed,Support for functools.partial functions as callbacks,"#### Description

This PR makes changes to callback validation found in `bokeh/util/callback_manager.py` and adds associated tests to `bokeh/util/tests/test_callback_manager.py`.

New additions which callback manager now accepts include:
- partial functions: `partial(lambda w,x,y,z: x , 'partial value')` 
- partial methods
- functions with extra args with default values: `def f(attr, old, new, extra='default'):pass`
- methods with extra args with default values

To run associated tests:

```
py.test -q -s bokeh/util/tests/test_callback_manager.py
```

Nested partial objects are NOT currently valid.
",1,11,"['type: bug', 'status: accepted', 'reso: completed']"
3499,52625461,3238,3834332,2015-12-04 03:19:17,2015-12-04 04:09:14,closed,Corrected the js_urls bug #3172,"Figured I'd make a pull request for this issue.

https://github.com/bokeh/bokeh/issues/3172
",3,1,['status: accepted']
3500,52612633,3235,3834332,2015-12-04 00:08:41,2015-12-04 00:48:18,closed,remove GeoJSPlot,"issues: closes #1289 
",0,1,['status: accepted']
3501,52603464,3234,3834332,2015-12-03 22:35:30,2015-12-04 16:40:20,closed,Coffee units handling,"Some fixes to how the JS side handles distance/angle _units
",2,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3502,52496029,3230,3834332,2015-12-03 06:16:46,2015-12-03 16:05:11,closed,Add more missing calls to output_file in plotting,"Examples in subsection ""Rectangles and Ovals"" lack
calls to output_file
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3503,52474968,3229,3834332,2015-12-03 00:19:38,2015-12-03 05:25:23,closed,"Fix typos in documentation, comments, and strings.","I ignored any typos with legacy charts since they will soon be deprecated.

Fixes #3228.
",1,1,['status: accepted']
3504,52464026,3227,3834332,2015-12-02 22:28:29,2015-12-03 06:24:11,closed,Remove legacy charts,,0,5,"['status: accepted', 'type: task', 'reso: completed']"
3505,52456041,3225,3834332,2015-12-02 21:22:58,2015-12-02 21:47:49,closed,Add bokeh logo and a link to the gapminder demo,"Just makes it look a bit nicer

![gapminder-720](https://cloud.githubusercontent.com/assets/1796208/11544638/c90b2fa2-98f7-11e5-9f93-930a05ec9c02.gif)
",2,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3506,52327801,3219,3834332,2015-12-01 22:44:56,2015-12-03 17:58:26,closed,Basic theming,"In this PR:
- add an apply_theme feature to HasProps to insert theme props between defaults and application-set values
- add Theme class which can come from a yaml file or a dict. (currently the same format as the existing default.yaml file)
- add Document.theme which can be set to a Theme instance
- use Override() to empty out default.yaml so other themes don't have to cut-and-paste those values
- if theme.yaml is found in an app directory, set it as the theme

Future work not in this PR but soon:
- when include_defaults=False, we'll need to send themed values; doesn't matter right now because we always use include_defaults=True and the default theme doesn't theme any values. Will sort this out as part of switching to include_defaults=False, which can only happen once we close https://github.com/bokeh/bokeh/pull/3099

Future work not in this PR, unknown timeframe:
- make the theme file format more powerful
- build up themes from multiple files, such as sitewide, per-user, per-app
- autogenerate some kind of catalog or doc of everything that can be set in the theme, so designers can play with themes without having to read source code to see what possible properties there are
",6,15,"['type: feature', 'status: accepted', 'reso: completed']"
3507,52324012,3218,3834332,2015-12-01 22:12:57,2015-12-01 22:57:35,closed,try forcing inline resources for notebooks,"Just a test
",4,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed', 'tag: component: build']"
3508,52287537,3216,3834332,2015-12-01 17:19:15,2015-12-01 21:11:10,closed,Add missing call to output_file in quickstart.rst,"The example in the section ""Linked panning and brushing""
in the Quickstart documentation appear to be missing a call to
bokeh.plotting.output_file. Without this call, running the example
produces no output.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3509,52271939,3214,3834332,2015-12-01 15:29:24,2015-12-02 16:38:15,closed,checking for extra_patterns kwarg and forwarding to BokehTornado,"small fix to forward on `extra_patterns` argument from `Server` to `BokehTornado`
",4,5,"['status: accepted', 'type: task', 'reso: completed']"
3510,52214512,3213,3834332,2015-12-01 04:18:38,2015-12-02 16:57:52,closed,conda list returns too much without -f,"Travis install script currently reporting an error:

```
DEPS_FLAG='['\''pytest-2.8.1-py34_0'\'', '\''pytest-cov-1.8.1-py34_0'\'', '\''pytest-html-1.6-py34_0'\'', '\''pytest-selenium-1.0b1-py34_0'\'', '\''pytest-variables-1.2-py34_0'\'']'
+'[' '!' '['\''pytest-2.8.1-py34_0'\'',' ''\''pytest-cov-1.8.1-py34_0'\'',' ''\''pytest-html-1.6-py34_0'\'',' ''\''pytest-selenium-1.0b1-py34_0'\'',' ''\''pytest-variables-1.2-py34_0'\'']' == '*pytest*' ']'
scripts/travis_install: line 54: [: too many arguments
```

Due to `conda list foo` being very permissive by default and actually searching for `*foo*`
",3,2,"['type: bug', 'status: ready', 'reso: completed', 'tag: component: build']"
3511,52165760,3212,3834332,2015-11-30 19:11:57,2015-11-30 20:08:14,closed,Deprecate Document.add in favor of Document.add_root,"This is a squashed and rebased version of @fpliger's PR https://github.com/bokeh/bokeh/pull/3161
",1,1,['status: accepted']
3512,52157489,3211,3834332,2015-11-30 17:58:19,2015-11-30 20:42:33,closed,Rename PropertyGenerator to PropertyFactory,"Clearer?
",1,1,"['type: feature', 'status: accepted', 'reso: completed']"
3513,52072982,3208,3834332,2015-11-29 22:34:11,2015-12-02 22:27:15,closed,Replace legacy donut chart,"This pull request implements the remaining chart on top of #3024, so it can be merged as soon as possible, while this is finished up. This should be completed by Dec 2nd.

Still left to do:
- Update examples (file/notebook)
- Simplify input options/infer default inputs when some are omitted
- Update documentation
- (beyond legacy chart's capability) Implement some kind of legend
- (beyond legacy chart's capability) Expand input options
  - wedge/text attributes
  - coloring within categorical hierarchy
  - coloring by level
",3,15,"['status: accepted', 'type: task', 'reso: completed']"
3514,52055644,3207,3834332,2015-11-29 05:56:27,2015-12-18 00:04:42,closed,Notebook comms,"issues: fixes #3149 fixes #1732

ping @bokeh/core This is a proof of concept. It works, restores old functionality (without the memory leak, as far as I can tell) and could be an immediate term fix. However, it is very customize to `ColumnDataSource`. It can be improved by generating actual Bokeh protocol messages and processing those in BokehJS. @havocp can you take ~15 minutes and see if there are any quick suggestions I can follow up on?

To test, run e.g. `color_scatter.ipynb` and add this cell at the end:

```
from bokeh.models import ColumnDataSource
ds = p.select_one(ColumnDataSource)
ds.data['radius'] = np.random.random(N) * 2
ds.push_notebook()
```
",27,5,['status: superseded']
3515,52053772,3206,3834332,2015-11-29 03:21:42,2015-12-03 17:22:31,closed,add hover_glyph to specify hover policy,"issues: closes #1476

This PR enables styling inspected (hovered) glyphs by specifying a `hover_glyph` property on a `GlyphRenderer` (or as a convenience, using `hover_fill_alpha`, etc. with the `bokeh.plotting` interface). This eliminates the need to write any custom callbacks to do highlighting on hover. 

Note: with this implementation, the hovered glyphs are always rendered **_on top of**_ the regular glyphs, not ""instead of"" the regular glyphs. Thus, typically a hover glyph would want to have a high alpha to obscure the glyph below it. 

An example you can try out below:

```
from bokeh.plotting import figure, output_file, show
from bokeh.models import ColumnDataSource, Circle, HoverTool
from bokeh.sampledata.glucose import data

output_file(""hover.html"")

x, y = data.ix['2010-10-06'].index.to_series(), data.ix['2010-10-06']['glucose']

# Basic plot setup
p = figure(width=600, height=300, x_axis_type=""datetime"", tools="""", toolbar_location=None, title='Hover over points')
p.line(x, y, line_dash=""4 4"", line_width=1, color='gray')

# Add a circle, that is visible only when selected
# source = ColumnDataSource({'x': x, 'y': y})
# invisible_circle = Circle(x='x', y='y', fill_color='gray', fill_alpha=0.5, line_color=""white"", size=20)
# visible_circle = Circle(x='x', y='y', fill_color='firebrick', fill_alpha=0.9, line_color=""blue"", size=20)
# cr = p.add_glyph(source, invisible_circle, hover_glyph=visible_circle)

cr = p.circle(x, y, fill_color=""grey"", alpha=0.1, line_color=None, size=20, 
              hover_fill_color=""firebrick"", hover_alpha=0.5, hover_line_color=""white"")

p.add_tools(HoverTool(tooltips=None, renderers=[cr], mode='hline'))

show(p)
```

This PR currently WIP, still needed:
- [x] documentation support
- [x] factoring/cleanup
- [x] appropriate tests
",18,11,['status: accepted']
3516,52049689,3205,3834332,2015-11-28 22:20:59,2015-11-30 16:35:16,closed,Warnings cleanup,"This PR cleans up a number of runtime warnings in the examples. Depends on #3190 (Diff should clear up after it is merged).

Some warnings still to deal with: Pandas and MPL FutureWarnings, legacy chart warnings
",0,54,"['status: accepted', 'type: task', 'reso: completed']"
3517,52049638,3204,3834332,2015-11-28 22:18:29,2015-11-28 22:19:46,closed,Warnings cleanup,"This PR cleans up a number of runtime warnings, depends on #3190 
",1,10,['status: superseded']
3518,52028877,3202,3834332,2015-11-27 23:45:49,2015-12-01 17:01:33,closed,Clean up bokeh command and add json subcommand,"```
factor Subcommand into its own module
move die and build_applications to util.py module
remove ApplicationsSubcommand
rename Html -> HTML
make HTML require at least one files arg
move subcommands to subcommands package
formatting cleanup
empty __init__.py, add __main__.py
add json subcommand
```
",10,23,"['type: feature', 'status: accepted', 'reso: completed']"
3519,51853951,3197,3834332,2015-11-25 22:38:48,2015-11-26 23:09:39,closed,"change ""static"" to ""locally executing""","change ""static"" to ""locally executing"" for interactive but non server plots

Closes #3196
",6,2,['status: accepted']
3520,51833357,3194,3834332,2015-11-25 18:56:46,2015-11-27 20:43:51,closed,Better error reporting.,,3,2,"['type: feature', 'status: accepted', 'reso: completed']"
3521,51725594,3191,3834332,2015-11-24 22:19:12,2015-12-07 18:50:38,closed,Improved line picking,"issues: fixes #3185
- provide a reference to the line object being picked
- line picking threshold is in pixels and scales with line width
- add example
",18,10,['status: accepted']
3522,51722851,3190,3834332,2015-11-24 21:56:02,2015-11-30 16:26:17,closed,Tweaks to the property system,"This is all my changes in one PR, in case that is easier than viewing the previous two in isolation.
https://github.com/bokeh/bokeh/pull/3179 and https://github.com/bokeh/bokeh/pull/3182 could be closed if you'd rather see it all at once.

The end result:
- add `foo = Override(default=whatever)`, so subclasses can change the default for a property without causing warnings.
- split Property from PropertyDescriptor, so the object with get/set isn't the same as the object with type/default/help specification. I think this will make a lot of things easier, starting with `Override`.
- replace 'changed' with 'non-default', dropping the concept of ""reset""
- allow some properties to skip serialization (https://github.com/bokeh/bokeh/pull/3179 )

More details in the individual commit messages.

`transform()` has kind of a weird signature in here because I was toying with using it to get rid of `to_dict`, but I don't really want to mix that into this PR or even try to clean up `to_dict` this week, I guess.
Short version, it's easy to clean up all the Units and `to_dict` special cases if `__get__` on a spec property can always return a dict, instead of returning the same string/number you used to set it. If we need to remember how you set the spec property and return in the original format, it's less clear how to clean up the special cases.

Anyway I think theming should be easier to do with some of these changes.
",28,44,"['status: accepted', 'type: task', 'reso: completed']"
3523,51689842,3189,3834332,2015-11-24 17:20:40,2015-12-02 21:08:39,closed,adding attribution for tile renderer,"This adds respect to those tile providers where respect owed.  It will also add some `canned` tile sources which includes necessary attribution which may be a pain for users to lookup / include.
",14,24,"['type: feature', 'status: accepted', 'reso: completed']"
3524,51664954,3184,3834332,2015-11-24 14:19:45,2015-11-25 15:31:16,closed,Add gulp dev-build task for faster development,"Add `gulp dev-build`, an equivalent to `gulp scripts:build styles:build` (no minification step).
",4,2,"['type: feature', 'status: ready', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
3525,51622995,3183,3834332,2015-11-24 06:50:01,2015-12-22 18:30:10,closed,Patches with hole (test implementation),"This doesn't have any tests and is a first attempt. The basics seem to work, but would appreciate eyes and feedback from @bokeh/dev 

See a demonstration here: https://rawgit.com/bokeh/bokeh/scratch/patches_with_hole/examples/plotting/file/patches_with_holes.html

(note the second plot has tap for hit testing)

Details:
- patches can have a hole
- patches with hole can still be multipatches (ie separated with a NaN to make seperate but connected entities)
- basic hit testing works - but it captures the hit anywhere in the exterior ring (i.e. it doesn't respect the cut out)
- if you do a stroked patch with hole, it fills the non-cut out behavior as white - that seems correct to me.
- if you were to have an interior ring with a NaN in the middle e.g. `[[1,2, NaN, 4],[2,3,4,1]]` or  [[1,2, NaN, 4],[2,3,NaN,1]] things would probably break down but that data doesn't make sense, so I think that's ok.
",3,11,['status: superseded']
3526,51609595,3182,3834332,2015-11-24 02:28:01,2015-11-25 17:48:50,closed,Fix some issues with props in bokeh.charts,"This fixes some things that are breaking some other work on Property I'm doing, but I think these fixes make sense separate from that work.

I'll probably follow this with a PR to add a way to change property defaults in subclasses, which will let us fix some more ""you can't override a Property"" warnings.
",3,6,['status: superseded']
3527,51568418,3181,3834332,2015-11-23 19:29:26,2015-11-24 17:47:33,closed,Rename SpellingHandler to Handler,,0,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3528,51555493,3180,3834332,2015-11-23 17:42:19,2015-12-02 21:04:57,closed,Document Multiple-Dispatching events,"Implement Multiple-Dispatching to handle document changed events

isses: fixes #3147
",2,14,['status: accepted']
3529,51547163,3179,3834332,2015-11-23 16:38:39,2015-11-25 17:48:11,closed,Add a 'serialized' flag to properties and don't serialize if it's false,"properties_with_values() now returns only serializable properties, since
it's used in contexts such as to_json() and clone() which should only
use serializable stuff.
",3,1,['status: superseded']
3530,51517747,3177,3834332,2015-11-23 12:34:51,2015-12-02 15:12:09,closed,Restore jquery-ui as it was before browserify,"This fixes #2527 and supersedes #2666. This reverts jquery-ui removal, removes prefixer and updates jquery-ui to work with browserify. Also, now we will use jquery-ui's JS and CSS from one version, as opposed to what is going on in master.
",10,6,['status: declined']
3531,51488840,3176,3834332,2015-11-23 05:20:43,2015-11-25 15:08:20,closed,Remove blue :focus styling from chrome,"Fixes #3167 (at least the blue bit - the tools are working fine for me)
",3,1,['status: accepted']
3532,51481709,3175,3834332,2015-11-23 01:38:06,2015-12-30 23:09:57,closed,Add bounds to ranges (limits pan and zoom),"Fixes #2942 
",7,47,['status: accepted']
3533,51393018,3168,3834332,2015-11-20 18:49:03,2015-11-20 21:18:26,closed,Rename plot object,"issues: closes #3106
",1,3,['status: accepted']
3534,51145492,3162,3834332,2015-11-18 21:33:47,2015-11-18 22:49:40,closed,Set correct websocket_path on each app pattern in the server,"This was breaking if you ran two apps in one server since all of
them would go to the same websocket.
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: server']"
3535,51140073,3161,3834332,2015-11-18 20:50:31,2015-11-30 19:21:31,closed,deprecate doc.add,"Start deprecation path for `document.add`

isses: fixes #3103 
",12,25,['status: superseded']
3536,51130469,3160,3834332,2015-11-18 19:33:09,2015-11-20 19:51:30,closed,Add checking for optional and required dependencies,,0,2,"['status: accepted', 'type: task', 'reso: completed']"
3537,51105083,3156,3834332,2015-11-18 16:15:05,2015-11-18 21:33:34,closed,Add --address option to bokeh serve command line,"Fixes #3129
",1,1,['status: accepted']
3538,51094880,3155,3834332,2015-11-18 15:02:23,2015-11-19 03:06:35,closed,Ensure curdoc() is accurate in callbacks and doesn't leak from apps,"We don't want callbacks to see the wrong curdoc() from another app.
In callbacks, always set curdoc() to the document the callback goes
with. As an extra safety measure, when ScriptHandler sets curdoc,
set it back to what it was before instead of leaving it.

Fixes #3108
",1,2,['status: accepted']
3539,51088023,3154,3834332,2015-11-18 14:07:43,2015-11-18 21:36:43,closed,Embed Bokeh version information in Document.to_json,"This is for #3104 but doesn't include adding the version info to the BokehJS side because to do that I think I need the scripts:generate setup which is in #3099 PR. Anyway we could merge the Python part here I suppose.
",1,2,['status: accepted']
3540,51050388,3153,3834332,2015-11-18 07:19:52,2015-12-03 04:55:51,closed,use numbro.js from bokeh/numbro for fix formatting issues with NaN and Infinity,"Supersedes PR #3128 and PR #3043 and PR #3025

Addresses issues #2922 and #3120 

This uses the fork of numbro.js from git://github.com/bokeh/numbro.git#37dd9fe
",18,2,['status: superseded']
3541,51045239,3152,3834332,2015-11-18 05:47:55,2015-12-03 17:41:02,closed,Add a new GeoJSONDataSource,"Inherits from ColumnDataSource on BokehJS side for now. (See #3148) for further details on the complete Geo ToDo
",13,14,"['status: accepted', 'type: task', 'reso: completed']"
3542,51030225,3150,3834332,2015-11-18 01:20:42,2015-11-18 17:41:31,closed,Move columns out of DataSource into ColumnDataSource.,"Not all DataSources will have columns in the future. In particular, this is setting up creating a new GeoJSONDataSource.

I have tested this on the AjaxDataSource examples in plotting and they still work but nothing else.

Some questions / notes:
1) I'm thinking selected property should stay on DataSource, is that correct? I think it's ok if DataSources have to implement some way of populating that. If we don't then it will be hard to have a common infrastructure for handling selections. ping @bryevdv 
2) remove ServerDataSource (made a note on #3140)
3) Worth noting that the class hierarchy is DataSource -> RemoteDataSource -> AjaxDataSource in python, but on JS side it's ColumnDataSource -> RemoteDataSource -> AjaxDataSource. Don't think we need to change this now (esp as I'm about to do the same thing for GeoJSON but it is a bit inconsistent)
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
3543,51000098,3145,3834332,2015-11-17 20:29:43,2015-11-18 13:45:56,closed,"HasParent: share one instance of display_defaults per class, not per instance","Quick and easy memory savings
",3,1,"['status: accepted', 'type: task', 'reso: completed']"
3544,50993382,3144,3834332,2015-11-17 19:37:12,2015-11-18 02:52:16,closed,Change tone of docstring on server show() slightly,,0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3545,50954266,3141,3834332,2015-11-17 14:38:05,2015-11-17 15:34:37,closed,More work to sync coffee and python for TileRenderer / TileSource,"This is a PR to PR #3076
",1,3,"['status: accepted', 'type: task', 'reso: completed']"
3546,50951322,3140,3834332,2015-11-17 14:13:47,2015-11-18 15:32:37,closed,remove cruft related to old AR implementation,,8,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: bokehjs']"
3547,50939718,3139,3834332,2015-11-17 12:19:09,2015-11-18 17:33:47,closed,"Always pass websocket_url as a parameter, don't set a global","Fixes #3107
",3,1,['status: accepted']
3548,50837410,3136,3834332,2015-11-16 17:06:53,2015-11-20 21:05:56,closed,Async writes and session lock fixes,"This is supposed to close #3133 

TLDR fixes here are:
- avoid backlog by waiting for writes and periodic callbacks to finish before queueing up more
- take the session._lock when we run periodic and timeout callbacks

The avoid-write-backlog thing only ""really"" works with Tornado 4.3, which isn't in conda right now - so I'm testing here with compat shims that simulate 4.3 without actually waiting on the writes.
I guess that's better than hard-requiring 4.3, though with 4.3 things should work better on a loaded server.
",1,2,['status: accepted']
3549,50826597,3135,3834332,2015-11-16 15:49:31,2015-11-16 17:07:56,closed,rename fourier examples,"Quick PR to rename fourier examples as discussed..
",1,1,['status: superseded']
3550,50753031,3128,3834332,2015-11-15 18:51:59,2015-11-18 15:37:04,closed,Fixed merge conflicts in previous pull request - use numbro.js,"Fixed the merge conflicts in the previous pull request #3043 (based on pull request #3025 and issue #2922 ).  The conflicts were in bokeh/test_embed.py -- I had to add `encode_utf8` in places to make the assert equals work.
",6,560,['status: superseded']
3551,50745462,3127,3834332,2015-11-15 12:20:35,2015-11-17 19:24:32,closed,WIP: GeoJSON Data Source,"WIP Currently this only implements Points in a Feature Collection and still missing lots of things esp on the JS side. Will continue updating, but feel free to add feedback comments on approach.

Will add a check list of long list of things left to do on Monday.
",9,8,['status: superseded']
3552,50669482,3123,3834332,2015-11-13 17:41:29,2015-11-30 20:44:23,closed,Remove ipython pin and update to jupyter,"Eventually this one should close: #2978 and #3100.

Also, it seems a pre-requisite for #3122 

Let see first what is broken...
",16,18,['status: accepted']
3553,50667573,3122,3834332,2015-11-13 17:24:13,2015-12-04 20:29:37,closed,py35 in TravisCI,"Let's see how much it takes...
",5,16,"['status: accepted', 'type: task', 'reso: completed']"
3554,50643429,3121,3834332,2015-11-13 13:58:26,2015-11-30 22:35:46,closed,Use flexx.pyscript to allow Python callbacks,"issues: implements part of #2788 
replaces #2799

Done in Bokeh:
- Modifies the CustomJS class to allow using it as a decorator for a callback function.
- Adds an example
- Adds docs (note that the result plot for the example in the docs does not work)

Done in Flexx:
- PyScript is now more Pythonic. Probably enough for most code to work as-is. Users don't need to know about JavaScript's quircks in most cases.
- PyScript now works on all Python versions 3.3+ (including pypy)
- The above is tested with CI
- Released, so it can be pip-installed.

To discuss:
- [x] I propose that flexx is an optional dependency. When trying to use this feature when flexx is not installed, we raise an informative exception,
- [x] Flexx can be pip-installed. Should we make it conda installable?
",49,12,['status: accepted']
3555,50602568,3119,3834332,2015-11-13 04:08:02,2015-11-16 13:40:29,closed,add server timeout callbacks,,1,13,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
3556,50594610,3118,3834332,2015-11-13 01:43:00,2015-11-16 22:24:17,closed,Add Server.show() and `bokeh serve --show`,"Convenient when testing.
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3557,50589802,3112,3834332,2015-11-13 00:35:29,2015-11-18 23:32:15,closed,Add Document.get_model_by_name,"This is a request from @birdsarah we talked about yesterday. Some motivating examples for this.
- @birdsarah wants to allow one glyph to pull from multiple data sources, so an idea is to allow them to refer to fields prefixed by a model name. It could look like `MyGlyph(x=""name1:x"", fill_color=""name2:color"")` for example (syntax TBD, colon-separator is one idea).
- @fpliger was talking about a way for an app directory to have data files that are auto-loaded, say for example you have `foo.xls` or `foo.csv` in your app directory, we could have a spelling handler which would automatically load that into a data source model and name it `foo` or `data_source_foo` or whatever. Then you could refer to it from syntax like @birdsarah's or you could `curdoc().get_model_by_name('foo')` in the script portion of your application.
- Another use for this would be in the browser using JavaScript, if you name a model you can easily grab it from JS or coffee using `doc.get_model_by_name()`. (We don't necessarily have an easy way to get the _document_ right now, but we'll have to fix that too.)
- Finally we could let you set styles by name, once we have styles.

There's an ugly hack in here to deal with models that override `PlotObject.name` with an unrelated name. I submitted https://github.com/bokeh/bokeh/pull/3109 which whines about and prevents stuff like that in the future, but for the time being PlotObject and Document hack around this situation.

One caveat here, `PlotObject` already had a `name` field, but other than using it in `select` I wasn't sure what it was currently for, so maybe I'm abusing it. Technically, `PlotObject.select({ 'name' : name })` or something along those lines could be used already instead of this new `get_model_by_name` but I think `get_model_by_name` is more obvious and convenient.
",15,12,"['type: feature', 'status: accepted', 'reso: completed']"
3558,50586838,3111,3834332,2015-11-12 23:59:08,2015-11-16 21:15:24,closed,Misc server examples,"This PR cleans up and simplifies the `examples/apps` directory (excluding crossfilter):
- use ""best practices"" for new server
- simple examples made single scripts at top level
- directory examples made `main.py` for directory spelling
- uniform docstrings on all examples 

A few small server improvements/fixes are also included:
- better exception formatting
- syntax error handling in server app
- computed  `__file__` attr for scripts
- fix missing `@property` in directory spelling 
",6,22,"['status: accepted', 'type: task', 'reso: completed']"
3559,50566752,3109,3834332,2015-11-12 20:58:03,2015-11-16 12:03:30,closed,Property cache cleanups,"There's one bugfix (using the wrong cache from base classes), one optimization (always cache the merged **properties** from base classes), one new warning (when a subclass tries to override a base class property, which seems to be a bug in the two cases TODO-commented here), and a refactor to decrease LOC by sharing cache logic. Also, rename accumulate_from_subclasses to be accurate.
",6,5,"['status: accepted', 'type: task', 'reso: completed']"
3560,50488942,3101,3834332,2015-11-12 09:34:46,2018-07-09 20:03:38,closed,Bug/1135 datetime axis timezone handling,"Fixes: #1135 

WIP - Need help figuring out how to work with `timezone` - In particular I want to `require` a timezone on the fly but it's not working I'm getting a require error.

Also need to add a zone attribute to Python and JS sides to use for conversion. 
",2,5,['status: declined']
3561,50463080,3099,3834332,2015-11-12 02:00:57,2015-12-07 15:57:37,closed,Fix differences between Python and CoffeeScript model defaults,"This is not ready to merge, needless to say - the tests are failing all over the place.

Once these tests pass, then all the defaults inside CoffeeScript can be deleted in favor of calling the get_defaults method used in the tests...
",19,37,['status: superseded']
3562,50446709,3098,3834332,2015-11-11 22:37:31,2015-11-12 03:38:02,closed,Scratch/test new travis ci,"please ignore.
",0,4,['status: declined']
3563,50429713,3097,3834332,2015-11-11 20:07:32,2015-11-12 13:16:52,closed,"Enable examples by default, but keep the possibility to disable by commit.","Closes #3019 
",4,2,['status: accepted']
3564,50390813,3096,3834332,2015-11-11 14:48:10,2015-11-12 16:02:49,closed,Lengthen timeout on test_client.coffee to 7500 from 2000 millis,"This should reduce flakiness on Travis.
",3,2,"['status: accepted', 'type: task', 'reso: completed']"
3565,50291269,3095,3834332,2015-11-10 18:24:39,2015-11-12 20:58:58,closed,Change text_font_size prop defaults to list-style from deprecated str,"issues: fixes #3094 

The default text_font_size props in default.yaml were set as deprecated string types. This PR updates them to single element lists, e.g. `['20pt']`
",5,5,['status: accepted']
3566,50187790,3090,3834332,2015-11-09 22:30:47,2015-11-10 21:22:19,closed,Add Document.title and TitleChangedEvent,,4,7,"['type: feature', 'status: accepted', 'reso: completed']"
3567,50150484,3089,3834332,2015-11-09 17:19:16,2015-11-09 20:10:11,closed,Hotfix/fix flake8,"Fix >160 character line
",3,4,"['type: bug', 'status: accepted', 'reso: completed']"
3568,50128304,3088,3834332,2015-11-09 14:29:13,2015-11-16 21:00:30,closed,Add PlotObject.to_json and to_json_string,"These are like vm_serialize but don't expose the ugly implementation
detail of our magic JSON encoder that ""fixes"" certain types into
plain JSON types.
",2,4,"['status: accepted', 'type: task', 'reso: completed']"
3569,50011525,3082,3834332,2015-11-06 22:15:42,2015-12-04 02:36:16,closed,update BlazeDataSource url construction,"newer version of Blaze returns expressions based on the mime type specified in the request header. it returns json by default.
",20,1,['status: declined']
3570,49954908,3080,3834332,2015-11-06 13:45:41,2015-11-11 19:42:38,closed,Add support for periodic callbacks on a session/server app,,5,17,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: server']"
3571,49949425,3079,3834332,2015-11-06 12:45:03,2015-11-19 00:41:05,closed,tests (and fixes) for plot resizing,"issues: continuation of #2949

This refactors the plot resize logic into a separate function, and adds tests to make sure that function does what it must do. And ahum, yeah ... there was a bug in the code causing the min_size not always be taken into account when resizing in both height and weight.

Also set plot default `min_size` to 120 (from 100), to at least show _some_ plot, and not only ticks.

cc @bryevdv, @birdsarah 
",8,6,"['status: accepted', 'type: task', 'reso: completed']"
3572,49911012,3077,3834332,2015-11-06 03:00:21,2015-11-10 15:58:50,closed,Bug/3023 fix docs for file html,"Fixes #3023 

Also adds docs for CSSResources and JSResources.
",1,2,['status: accepted']
3573,49906186,3076,3834332,2015-11-06 01:36:19,2015-11-17 18:05:44,closed,HOT FIX: fixed default settings for tile sources,"Examples broke after server merge.  This fixes setting of default values for tile sources.  Relevant examples include `examples/glyphs/airports_map.py` and `examples/glyphs/tile_source.py`
",5,10,"['type: bug', 'status: accepted', 'reso: completed']"
3574,49872067,3075,3834332,2015-11-05 19:55:45,2015-11-25 23:41:05,closed,Replace INLINE with CDN.,"issues: fixes #2572 
",15,3,['status: accepted']
3575,49850823,3071,3834332,2015-11-05 16:59:25,2015-11-05 21:45:35,closed,hotfix/image_rgba,"set defaults for rows, cols to None, so that they are computed on JS side ny default

@bokeh/core anyone using `image_rgba` please check this out. I think this is the best most correct way to handle this for now. In the future we will support better more robust ""array"" communication.  
",1,2,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
3576,49846586,3070,3834332,2015-11-05 16:29:39,2015-11-05 17:00:06,closed,Make .clone private.,"issues: fixes #3035 
",1,1,['status: accepted']
3577,49780885,3067,3834332,2015-11-05 04:18:37,2015-11-05 17:41:52,closed,Clean-up glyphs.py,"Fixes #3066 

Started out as a typo fix and small clean-up but ended up fixing #3066 - not sure why. Maybe new server doesn't like things being manually added to vplot().
- fixes a title typo
- adds plots to a list and then uses that to construct vplot
- imports vplot, output_server, show from bokeh.io
",1,2,['status: accepted']
3578,49778887,3065,3834332,2015-11-05 03:37:01,2015-11-05 17:40:10,closed,Update NumFOCUS contact email in docs,"Change NumFOCUS contact email from info@pydata.org (bounces back) to info@numfocus.org
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3579,49778665,3064,3834332,2015-11-05 03:32:23,2015-11-05 03:32:36,closed,Documentation/fix pydata email,"The NumFOCUS contact email changed from info@pydata.org to info@numfocus.org. This PR updates the contact info in the docs.
",1,21,['status: superseded']
3580,49775594,3063,3834332,2015-11-05 02:37:07,2015-11-12 12:18:27,closed,New server docs fixes,"This PR does a few things after the tornado server merge:
- Get JSON Prototypes working again
- Fix all Sphinx warnings
- Teach `autoload_static` how to work with split BokehJS
- Correctly set log level on autoload
- Allow builds with `BOKEH_DOCS_CDN=""local""` to use local BokehJS (non-windows only for now)
- Removes completely incorrect old server docs 
",28,19,"['status: accepted', 'type: task', 'reso: completed']"
3581,49605032,3059,3834332,2015-11-03 20:09:24,2015-11-25 19:23:01,closed,Fixes/tile renderer enhancements,"This branch has a critical tile renderer fix which prevents duplicate tile requests when using multiple tile layers in the same plot.
",7,2,"['type: bug', 'status: accepted', 'reso: completed']"
3582,49604110,3058,3834332,2015-11-03 20:01:29,2015-11-04 00:17:05,closed,remove superfluous server examples,"First pass to remove examples.. leaving a few that could also be removed as they are still failing with the tornado branch..
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3583,49475377,3053,3834332,2015-11-02 19:38:09,2015-11-03 17:46:39,closed,bye bye CLI,"remove all things related to the old CLI prototype
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
3584,49472849,3052,3834332,2015-11-02 19:17:45,2015-11-05 17:39:07,closed,Documentation/python only tests,"supercedes: #2991 

Adds to the developer_guide/testing the mention that python-only unit tests can be run via
`py.test -m 'not (js or examples or integration)'`
",3,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3585,49447497,3050,3834332,2015-11-02 15:49:58,2015-11-25 04:15:00,closed,Feature/dynamic image renderer,"The `DynamicImageRenderer` requests and renderers images which fill the plot viewport upon range updates.
- [x] Add tests
- [x] Add usage example
",2,54,"['type: feature', 'status: accepted', 'reso: completed']"
3586,49432585,3048,3834332,2015-11-02 13:45:00,2015-11-19 00:18:36,closed,small fix to hover.py example,"fix where %x formatting gives TypeError due to np.floor being of type float
",16,9,"['type: bug', 'status: accepted', 'reso: completed']"
3587,49424960,3047,3834332,2015-11-02 12:16:17,2016-01-19 22:38:24,closed,node.js integration and static image generation,"At this point you can convert a `file_html()` generated HTML file into a set of PNG images (one per canvas). For example:

```
cd bokeh/bokehjs
(cd ../examples/plotting/file; python bollinger.py)
node render.js ../examples/plotting/file/bollinger.html
eog ../examples/plotting/file/bollinger-PLOTID.png
```

Currently you need to install these manually:

```
sudo apt-get install libcairo2-dev libpango1.0-dev libjpeg-dev libgif-dev
```

Issues:
- fonts are messed up very often (when using custom font/size/face)
- several examples are simply broken (histogram, burtin, gears, etc.)
- examples involving maps don't terminate (disabling maps helps)
- examples involving ImageURL, maps and ??? are unreliable (see `render:done`)
- `examples/plotting/file/image.py` (RangeError: Source is too large)
- `examples/plotting/file/image_rgba.py` (TypeError: Image or Canvas expected)

TODO:
- [x] add direct support for image generation from bokeh
- [x] use separate `package.json` for node.js integration tools
- [x] add support for custom models
- [ ] make `render:done` event reliable
",8,31,"['type: feature', 'reso: working as intended', 'status: superseded']"
3588,49317252,3043,3834332,2015-10-30 20:15:46,2015-11-18 15:37:22,closed,Use [bokeh fork of] numbro.js instead of Numeral.js,"Precedes https://github.com/bokeh/bokeh/pull/3025
",6,5,['status: superseded']
3589,48925998,3037,3834332,2015-10-27 20:15:56,2015-11-02 18:50:04,closed,Bugfix/3036 gulp build,"issues: fixes #3036 

Fixes bug in source map generate caused by license by appending license to bottom of bokeh.js

Fixes bug where setup.py called by gulp watch process has bad path to LICENSE.txt
",3,5,['status: accepted']
3590,48910960,3034,3834332,2015-10-27 18:17:48,2015-11-04 18:56:25,closed,added brute force handling of resize tool event.,"I'm looking for the best way to handle a resize event within the tile renderer.  I added a ""brute force"" fix but am looking for alternatives.
",8,16,['status: superseded']
3591,48868467,3033,3834332,2015-10-27 13:15:12,2015-11-01 00:21:21,closed,to_mpl fix for DateTimeAxis,"I tried to make fix as less intrusive as possible. If I had to pass the complete props dictionary to make_axis the code needed restructuring. As **bryevdv** mentioned in #2973 the code is a bit hackish anyways. 

Please review the change
",5,2,['status: accepted']
3592,48808345,3030,3834332,2015-10-26 22:52:13,2015-12-03 16:14:28,closed,Feature/arrow annotation,"Extreme WIP for arrow annotation. Opened PR to share issue.
",7,2,['status: paused']
3593,48781492,3029,3834332,2015-10-26 18:53:50,2015-11-01 00:23:15,closed,Fix for issue #2643,"Fix for the issue in https://github.com/bokeh/bokeh/issues/2643
",3,1,['status: accepted']
3594,48781199,3028,3834332,2015-10-26 18:51:17,2015-11-01 00:56:50,closed,remove leftover debugger statement from render loop,"There's was a debugger statement left in the render call of span.coffee. This is a hotfix to remove it.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3595,48705813,3027,3834332,2015-10-26 06:35:54,2015-11-05 17:42:28,closed,simplify log mapper and fix logic error in nan/inf handling,"issues: fixes #3022 

Still needs tests and documentation support. 
",2,4,['status: accepted']
3596,48666142,3025,3834332,2015-10-24 21:52:23,2015-11-18 15:37:37,closed,Use numbro.js instead of Numeral.js,"Bokeh issue #2922 details issues with attempting to format Infinity and NaN.  This was fixed in Numbro.js, an active fork from Numeral.js.

This PR uses Numbro.js 1.6.2 with some modifications to make it work.  I was hoping to just drop it in to the vendor folder and have it work, but I can see that there were many changes to Numeral.js to make it work and to pare it down.

I have not done any paring down of this, just making it work.  But that might be a good next step.

Here's the test I've been using.  This breaks in Bokeh 0.10.0 and before with a Javascript error.

```
from bokeh.io import output_notebook
output_notebook()

from bokeh.io import show
from bokeh.models import ColumnDataSource
from bokeh.models.widgets import DataTable, TableColumn, NumberFormatter
import numpy as np
import pandas as pd


# create a data frame with some np.NaN and np.Infinity values
df = pd.DataFrame(data=[[1, 2, 3], [1, 0, 4], [np.Infinity, 0, np.NaN]], columns=['x', 'y', 'z'])
source = ColumnDataSource(df)

columns = [
    TableColumn(field='x', title='x', formatter=NumberFormatter(format=""0.0"")),
    TableColumn(field='y', title='y', formatter=NumberFormatter(format=""0.0%"")),
    TableColumn(field='z', title='z', formatter=NumberFormatter(format=""$0.0"")), 
]
data_table = DataTable(source=source, columns=columns, editable=False)

show(data_table)
```
",11,4,['status: superseded']
3597,48659887,3024,3834332,2015-10-24 16:47:59,2015-12-02 20:18:00,closed,Replace legacy charts with new ones,"Replaces old legacy charts left with new ones based on the CompositeGlyphs and more advanced builders design.
",11,70,"['status: ready', 'type: task', 'reso: completed']"
3598,48505487,3018,3834332,2015-10-22 20:03:41,2015-11-01 00:55:04,closed,Fix numpy datetime datatype.,"The ""M64"" datatype is not understood by numpy v1.10.1 in all three stocks.py examples. Fix the issue by using dtype=np.datetime64. See #3017.
",3,1,['status: accepted']
3599,48470185,3015,3834332,2015-10-22 15:10:53,2015-10-23 18:29:28,closed,Hotfix/broken charts,"Fix charts broken after last merge
",1,5,"['type: bug', 'status: accepted', 'reso: completed']"
3600,48390880,3013,3834332,2015-10-21 21:32:25,2015-10-24 16:48:36,closed,Replace legacy timeseries with new chart,,1,1,['status: superseded']
3601,48290011,3009,3834332,2015-10-21 05:36:16,2015-11-05 19:02:47,closed,support for flexible datatable formatters,"The goal here is to add support for a flexible cell formatter in DataTables.  More specific goals:
1. Support for HTML in the cells.
2. Support column sorting based on the value of the cell, not the resulting HTML.
3. Templates can reference values from other columns within the row.

This PR adds the `HTMLTemplateFormatter` class.  This object takes a `template` argument which follows the template style of Underscore.js.  http://underscorejs.org/#template

Some examples:

``` Python
# Simple HTML template to format the column value as code.
# The keyword `value` refers to the column the formatter is applied to.
HTMLTemplateFormatter(template='<code><%= value %></code>')

# Use values from other columns (`manufacturer` and `model`) to build a hyperlink.
# Here `value` refers to the current column, and `manufacturer` and `model` are named columns.
HTMLTemplateFormatter(template='<a href=""https:/www.google.com/search?q=<%= manufacturer %>+<%= model %>"" target=""_blank""><%= value %></a>')
```

This is related to issue #2923 

Any feedback would be greatly appreciated.

thanks,
Dennis
",16,2,['status: accepted']
3602,47965128,3003,3834332,2015-10-16 21:58:01,2015-11-01 00:32:49,closed,1450 wheel zoom off by default,"Fixes: #1450 

This fixes the second part of #1450 - the wheel tool is off by default, and can be toggled on and off by user.
",4,7,"['status: accepted', 'type: task', 'reso: completed']"
3603,47928244,3001,3834332,2015-10-16 15:57:52,2015-11-02 01:40:33,closed,Hotfix/box selection for mobile,"Box selection / zoom for touch was a bit wonky.

This PR doesn't fix it all, but does get it back to the state described in #2997 

I took the opportunity to write an integration test for box selection with mouse, but I can't write a similar test for touch as we don't have selenium setup with browserstack (or equivalent) to run tests against a mobile device.

You can try the before, after here:

Before: https://rawgit.com/birdsarah/bokeh-miscellany/master/tests/touch/box_touch_broken_1de22.html
After: https://rawgit.com/birdsarah/bokeh-miscellany/master/tests/touch/box_touch_hotfix_9b7b.html
",4,4,"['type: bug', 'status: accepted', 'reso: completed']"
3604,47857057,2998,3834332,2015-10-15 23:57:43,2015-11-01 00:29:33,closed,Fix pinch zoom,"Wheel / pinch zoom was broken for mobile.

Unfortunately I can't write an integration test for this at the moment as we don't yet have selenium setup with browserstack (or equivalent) to run tests against a mobile device.

You can try the before, after here:

Before: https://rawgit.com/birdsarah/bokeh-miscellany/master/tests/touch/wheel_pinch_broken_1de222.html

After: https://rawgit.com/birdsarah/bokeh-miscellany/master/tests/touch/wheel_pinch_hotfix_b035712.html
",1,2,"['type: bug', 'status: accepted', 'reso: completed']"
3605,47721551,2993,3834332,2015-10-14 22:08:31,2015-11-01 00:49:19,closed,Webgl line,"issues: closes #2681

Implements a WebGL version of the line glyph. Everything works, but there are some glitches that appear under some circumstances. They are probably there because I did not manage to make it deal with anisotropic scaling exactly right. Spend quite some time on that now. Should revisit later. The glitches appear when using dashing and using very long dash periods or very thick (16+) lines.

This also adds two new examples: one line example to show 10k points, and one to compare the canvas and webgl-drawn line side-by-side.

This is in principle done and ready for review. Minor issues to do:
- [x] Test on IE (will do tomorrow)
- [x] Edit docs.

cc @canavandl 
",4,12,['status: accepted']
3606,47700369,2991,3834332,2015-10-14 18:59:34,2015-11-02 19:18:37,closed,update testing docs to include pytest integration flag,"Two fixes:
- ~~~Change license path in test to parent dir~~~
- Update testing docs to include integration flag
",6,8,['status: superseded']
3607,47591460,2986,3834332,2015-10-13 21:32:21,2015-10-22 04:04:57,closed,Documentation and examples for the new charts interface,"The intent of this pr is to address the missing documentation and examples that are broken, or are still using the legacy charts, and can be converted over. This will clean things up a bit and make sure all the base functionality is there before I implement the remaining charts.

Only modifications to charts are those that must exist to fix or implement the examples.

This will close issue #2975.
",18,58,['status: accepted']
3608,47587140,2985,3834332,2015-10-13 20:55:26,2015-11-15 14:06:46,closed,Refine coverage reports,"To run inside bokeh main directory:

$ py.test --cov=.

From top level (as is done in .travis.yml)

$ py.test --cov=bokeh --cov-config=bokeh/.coveragerc
",11,5,"['status: accepted', 'type: task', 'reso: completed']"
3609,47531056,2983,3834332,2015-10-13 13:15:00,2015-10-13 19:52:28,closed,Document and provide all defaults in python bindings,"This PR allows type-based initialization of all Bokeh model defaults (on the python side) by collecting all of the defaults into one convenient `.yaml` file. This PR allows #2794 to move forward in a minimal way. This PR supersedes #2971 

Note: this PR is against the `tornado` branch (PR #2794)
",6,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3610,47475803,2980,3834332,2015-10-12 23:30:58,2015-10-13 16:52:43,closed,Move location of LICENSE copy in setup.py,"The copy was not being called when doing `python setup.py develop` and
so tests were failing locally, this fixes it - thanks to @bryevdv for the fix
",2,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
3611,47353956,2971,3834332,2015-10-10 20:59:59,2015-10-13 13:16:04,closed,Shared defaults,"This PR moves plot objects defaults to:
- `bokehjs/src/coffee/themes`
- `bokeh/themes`

Currently it has one ""theme"" which is `""default""`. Later could derive the defaults files from a single source, and potentially add more themes. 
",24,8,['status: superseded']
3612,47341186,2969,3834332,2015-10-10 08:48:34,2015-12-10 17:01:06,closed,Feature/linear breaks color mapper,"issues: closes #2968 

Earlier in the week I wanted to display an bumpy matrix as an image.  I then wanted to adjust the color map such that specific levels would be given specific colors and the colors would vary smoothly in-between.  I determined that a solution for this inside of Bokeh did not exist.

This pull request adds the necessary files to implement this technique.  The class is instantiated by specifying a required palette which is a dictionary that bonds float key values to string representations of the colors (in hex).  An optional argument for the constructor is the 'alpha` parameter.  It can be set to a single value, in square brackets, in which case the alpha value will be the same for all colors, or it can be an array of float values between 0 and 1.  The alpha values are correlated with the colors specified in the palette.  The class will fail if the length of alpha is not equal to the length of the palette or one.

The following is an example of the code:

```
from bokeh.plotting import figure, show
import bokeh.models as bkmdl
from bokeh.io import output_notebook, output_file
import numpy as np

# Generate the nessessary data
xs = np.linspace(-10, 10, 50)
ys = np.linspace(-10, 10, 50)
ys = ys[:,np.newaxis]
z = np.matrix(np.exp(-4*np.log(2)*((xs - 0)**2 + (ys-0)**2) / 80))

# Define the color mapper
lcmap = bkmdl.LinearBreaksColorMapper(palette = {0:'#FFFFFF', 0.2:'#01Fa10', 0.5:'#0000FF', 1:'#FF0000'}, alpha = [0.1, 1, 0.75, 0.5])

output_file(""linear_breaks_color_mapper.html"")
p = figure(x_range = [-10,10], y_range = [-10,10])
p.image(image = [z], x = [-10], y = [-10], dw = [20], dh = [20], color_mapper = lcmap)
show(p)
```

The output of that code block results in the following image.

![linear_breaks_color_mapper_example](https://cloud.githubusercontent.com/assets/5904886/10410258/0544ac7c-6f0a-11e5-914e-ed2a0ab53b70.png)
",31,34,['status: paused']
3613,47307294,2967,3834332,2015-10-09 18:56:59,2015-11-21 03:35:56,closed,changed plot background/border_fill arg to FillProp mixin,"issues: fixes #2021, #2951 

Change plot background_fill and border_fill argument to background_ and border_ FillProps mixins, so that plot and border area have settable color and alpha attributes.

Todo: Add deprecation warns (it's unclear to me how to add deprecation warns on class variables).

cc: @birdsarah @bryevdv 
",7,14,['status: accepted']
3614,47185098,2963,3834332,2015-10-08 17:57:11,2015-10-08 18:23:41,closed,"lots of cruft removed, tests running","Had to comment a few things to get tests running at all. 
",0,1,['status: accepted']
3615,47182411,2962,3834332,2015-10-08 17:32:57,2015-10-09 19:45:41,closed,Added standard string props and note of regex match to line_props docs,"issues: fixes #2954

The current line_dash prop in user_guide/styling.rst only mentions an array of ints as an acceptable argument. This PR expands that description to include the string arguments ('solid', 'dashed') as well as a string that matches a specific regex.
",1,1,['status: accepted']
3616,47103731,2959,3834332,2015-10-08 01:51:58,2015-10-12 17:07:26,closed,improve license distribution and clarity,"issues: closes #2958
",17,10,['status: accepted']
3617,47085763,2956,3834332,2015-10-07 21:39:03,2015-10-08 17:44:57,closed,Fix #2945: webgl fails for large numbers,"issues: closes #2945 

Problem was in the calculation of the data-to-screen transformation. A vector of size ~1 was used, which on a scale of 1e15 gives rise to significant roundoff errors. Changed to use a vector size that depends on the transform itself.
",2,2,['status: accepted']
3618,47071751,2955,3834332,2015-10-07 19:36:06,2015-12-03 16:14:53,closed,"Feature/text annotation ""Label""","Added Label annotation class.

In future, allows for refactoring ofchart title, axis label, (etc.) code to use Label model.

UX question: the Label doesn't resize on zoom events. Should it?
",14,22,['status: paused']
3619,47040429,2952,3834332,2015-10-07 15:13:01,2015-10-26 15:39:30,closed,Make widgets optional and refactor bokeh.resources,"The main objective is to make `bokeh-widgets.{js,css}` optional. Currently this is done for `file_html()`. Server support is out of question until @bryevdv's PRs are merged.
",7,17,"['status: accepted', 'type: task', 'reso: completed']"
3620,47009900,2950,3834332,2015-10-07 10:23:11,2015-11-05 21:43:46,closed,Plot can be resized with more control over whether to use width and/or height,"issues: closes #2949

This PR allows more control for resizing, allowing Flexx or Bokeh apps to resize the plot any way it likes.

I experimented a bit with automatically determining whether the height should also be taken into account, but this only got messy, so I went with a more explicit approach: expose a method `resize_width_height(use_width, use_height)`. This should not change the current behaviour of Bokeh plots by themselves.

So now, Flexx resizes using both width and height, unless the parent widget has a scrollbar in horizontal/vertical direction. See the [new example](https://dl.dropboxusercontent.com/u/1463853/flexx-bokeh2.html).

cc @birdsarah, @sccolbert
",9,2,['status: accepted']
3621,46970675,2948,3834332,2015-10-06 23:20:36,2015-10-06 23:36:08,closed,Fix gulp watch task,"Can someone confirm that `gulp watch` is broken? This fixes it for me.

It seems `path.coffee` should now be `paths.bokehjs.coffee`
",1,1,['status: declined']
3622,46961956,2947,3834332,2015-10-06 21:43:34,2015-10-07 16:32:37,closed,automate examples generation in glyph model docs,"This PR adds proper links to all glyph model examples (markers were missing) and also automates the docstring generation to greatly reduce boilerplate. 
",0,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3623,46522448,2934,3834332,2015-10-01 13:23:41,2015-10-15 11:54:50,closed,Exploration on splitting our tests,"Trying some things where I research how speed up our testing machinery...
",8,27,"['type: feature', 'status: accepted', 'reso: completed']"
3624,46498301,2932,3834332,2015-10-01 08:48:29,2015-10-05 14:36:16,closed,Use custom function to compute the maximum value of a large array,"Previously `Math.max.apply(null, array)` idiom was used to compute the maximum value of an array. This was prone to the maximum call stack limitation, not allowing bokehjs to render more than a few hundred thousand points.
",7,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3625,46470201,2929,3834332,2015-09-30 23:32:34,2015-10-07 01:35:10,closed,Fix path to watchSources in watch.coffee,"issues: fixes #2928 

Corrects path to watchSources in watch.coffee
",6,3,['status: accepted']
3626,46425731,2927,3834332,2015-09-30 16:36:25,2015-09-30 16:38:39,closed,change addopts args to adopts in setup.cfg,"Typo in setup.cfg breaks py.test runner
",0,1,['status: declined']
3627,46410780,2926,3834332,2015-09-30 14:44:10,2015-10-01 12:45:50,closed,Remove bokeh/tests/myplot.html from the respository,"fixes #2885
",2,1,['status: accepted']
3628,46349160,2925,3834332,2015-09-30 00:25:32,2015-11-05 17:43:57,closed,#2904 - fixed a bug editing a sorted or filtered datatable,"#2904 - fixed a bug when a table was sorted by a column other than the index then edited.

supersede #2906 

This changes the semantics of getItem/setItem to use an offset into the data array, while getField/setField still take an item index.  The index and the offset will be the same for a data array that is sorted by the index field and has not been filtered.
",3,1,['status: accepted']
3629,46212887,2921,3834332,2015-09-28 21:52:39,2015-10-05 17:33:57,closed,Template docs,"issues: fixes #2679 

This also makes templates self-documenting (with an initial comment string in the template), and adds a `bokeh-jinja` directive to nicely document templates, with parameters and a copy of the template text in a collapsible code block.

I played around with an auto-documenter but could not get it to work, maybe later.

This needs to have recent BokehJS extensibilty work merged into it. 

ping @birdsarah I think some of the template params need to be updated to reflect your recent changes. 

Also, I may be about to do a 180... I think `components` is awfully complicated. Maybe two functions (one implemented with the other) is better after all. 
",2,4,['status: accepted']
3630,46091671,2917,3834332,2015-09-26 23:22:13,2015-10-05 17:32:24,closed,Simplify glyph function creation,"issues: closes #1917 
- configure glyphs with a suggested argument order
- automate glyph function docstring creation
- move all functionality to plotting.py and plotting_helpers.py
",6,7,['status: accepted']
3631,46077229,2916,3834332,2015-09-26 07:16:15,2015-11-16 09:16:16,closed,Update timeseries examples to use new Line chart where possible,,5,1,['status: declined']
3632,46027431,2910,3834332,2015-09-25 15:52:14,2015-11-16 01:24:52,closed,testing addopts are note recognized with listed dependencies installed,"It seems that I cannot run the tests locally with these two `addopts`, even though the packages listed as dependencies [1] are installed. 

```
bsipocz@tegla2:~/munka/devel/bokeh$ py.test -m 'not (js or examples)'
usage: py.test [options] [file_or_dir] [file_or_dir] [...]
py.test: error: unrecognized arguments: --driver=Firefox --sensitive-url=None
```

[1] http://bokeh.pydata.org/en/latest/docs/dev_guide/building.html#dependencies
",5,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3633,46013523,2909,3834332,2015-09-25 13:48:34,2015-10-27 18:38:08,closed,Adding optional excluded_properties argument to HasProps.clone(),"I've tried to add the same `HoverTool` to two plots, but the clone of the original was still bounded to the original plot (as the value of the `'plot'` property got copied over, too).

Being able to give a list of properties to clone() to exclude from the copy solves the problem.
",14,1,['status: declined']
3634,45951444,2906,3834332,2015-09-24 21:20:32,2015-09-29 23:33:30,closed,Bokeh issue #2904 - fixed a bug with editing items in a sorted data table,"Fixed a bug with editing items in a sorted data table.  See Bokeh issue #2904 for more details.
",2,2,['status: superseded']
3635,45847101,2902,3834332,2015-09-24 00:16:56,2015-09-25 15:12:40,closed,Collect hotfixes and examples fixes for 0.10.0 release,"Branch to collect hotfix and example fixes as well... use #2890 for docs fixes
",5,7,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build', 'tag: component: examples']"
3636,45793700,2900,3834332,2015-09-23 15:29:23,2015-10-27 00:38:12,closed,Feature/add tile layer renderer,,11,86,"['type: feature', 'status: accepted', 'reso: completed', 'tag: geo']"
3637,45688569,2899,3834332,2015-09-22 16:54:11,2015-10-07 16:34:00,closed,Feature/line annotation,"issues: fixes #2824 

Implemented line annotation renderer that expands span.coffee 's render method to use either css or canvas rendering.

I also added some line styling options to the CrosshairTool

Feedback questions include:
- use of ""draw_style"" flag to switch between css/canvas rendering
- user guide example appropriateness
",4,11,['status: accepted']
3638,45559228,2896,3834332,2015-09-21 15:01:03,2015-10-07 16:35:00,closed,Attempt to handle NumPy types better,"Fixes #2893.
",14,19,['status: accepted']
3639,45558179,2895,3834332,2015-09-21 14:53:04,2015-09-25 13:13:10,closed,Fixed lineJoin buglet.,"Fixes #2894
",2,1,['status: accepted']
3640,45461743,2890,3834332,2015-09-18 23:06:00,2015-09-25 15:17:22,closed,Open PR for misc doc fixes for 0.10,"issues: closes #2832 closes #2563 closes #2705 closes #2831 closes #2662

ping @bokeh/dev 
",1,9,['status: accepted']
3641,45459647,2889,3834332,2015-09-18 22:31:12,2015-09-18 23:11:34,closed,Add .gitignore files to examples directories that didn't have it.,"Small thing - it was annoying me that git was picking up generated html files under embed and interactions.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3642,45446862,2887,3834332,2015-09-18 20:04:45,2015-09-18 21:17:39,closed,Wrap testing import so testing libraries aren't required.,"Without this, the move of a bunch of utils into util.testing
combined with with the reference to util.testing in bokeh.**init**
meant that users would need a bunch of testing dependencies installed
just to run bokeh!
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3643,45334092,2881,3834332,2015-09-17 19:54:52,2015-09-21 12:03:55,closed,Responsive plots,"Fixes #2678 

At the moment this only responds to window resize events. This covers lots of useful scenarios, but leaves some out. 

Would be great if we could respond to a resize on the event on the div, and I found this useful looking little library - https://github.com/sdecima/javascript-detect-element-resize - although its looking somewhat unmaintained. 

Regardless, I believe this PR comfortably covers the feature request.
",4,21,['status: accepted']
3644,45329154,2880,3834332,2015-09-17 19:09:06,2015-09-21 12:03:36,closed,Replace nvm for a conda package.,"Let's test this one...
",15,8,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3645,45325594,2879,3834332,2015-09-17 18:37:21,2015-09-17 18:59:06,closed,try specify nvm explicitly,"issues: closes #2878 
",5,5,['status: accepted']
3646,45324496,2877,3834332,2015-09-17 18:27:40,2015-09-17 20:17:29,closed,"category checks should only check range labels, not values","issues: closes #2818 
",2,5,['status: accepted']
3647,45323098,2875,3834332,2015-09-17 18:15:46,2015-09-18 18:06:46,closed,"Check for ""None"" border color","issues: fixes #2444 
",1,3,['status: accepted']
3648,45318972,2874,3834332,2015-09-17 17:37:39,2015-09-17 18:11:30,closed,"Check for ""None"" border color.","issues: fixes #2444 
",1,1,['status: declined']
3649,45307378,2872,3834332,2015-09-17 15:50:18,2015-09-17 19:11:23,closed,Skip RemoteDataSource column warnings,,2,1,"['type: bug', 'status: ready', 'reso: completed']"
3650,45306417,2871,3834332,2015-09-17 15:42:20,2015-11-26 22:48:49,closed,Adding grid layout using phosphor,"This is a WIP/stub PR that adds a grid layout based on Phosphor's GridPanel. Supersedes #2863.

We still have the following issues to tackle:
- ~~The content inside the widget is not centered, probably because the plot tries to position itself in a particular way. `margin: auto` does not help here. `text-align: center` centers the plot but not the toolbar. Ideally, the plot should just fill the available space.~~
- ~~The grid panel is now set to fill the entire window, which is a bit of a hack; it works when it is the toplevel widget, but when you nest a grid in another layout, it will break.~~
- (minor issue) there are scrollbars visible, even thought the content should exactly fill the window (probably a stray padding or something).

cc @bryevdv @sccolbert

![screenshot from 2015-09-17 17 08 49](https://cloud.githubusercontent.com/assets/3015475/9936965/d025ac9c-5d5e-11e5-82ca-552ce6dfef9b.png)
",12,5,['status: WIP']
3651,45305901,2870,3834332,2015-09-17 15:38:17,2015-09-21 16:15:52,closed,"Refactor Charts for Table-like (x,y) Inputs","Supercedes  #2720 with a branch on bokeh repo.
",8,99,['status: accepted']
3652,45252913,2869,3834332,2015-09-17 05:21:05,2015-09-17 08:29:22,closed,Hotfix/dont skip selenium tests 3,"This is just a test to make sure that it's not the selenium tests.
",1,14,['status: superseded']
3653,45252535,2868,3834332,2015-09-17 05:10:41,2015-09-17 13:52:24,closed,"Clean-up tests, pytest fixture overrides, add the new sensitive-url parameter","If you look at #2844 test results:
https://travis-ci.org/bokeh/bokeh/jobs/80318985#L1820 all the selenium
tests are actually being skipped because of the new selenium parameters.

This cleans out old fixture overrides that are no-longer needed and uses
the new sensitive-url parameter to ensure they all run (which is just one
running and one xfailing for now)
",3,4,"['type: bug', 'status: accepted', 'reso: completed']"
3654,45217754,2867,3834332,2015-09-16 20:06:47,2015-09-16 21:07:47,closed,Minor sidebar fixes,"issues: fixes #2550 
",0,1,['status: accepted']
3655,45180040,2863,3834332,2015-09-16 14:41:15,2015-09-17 15:42:38,closed,Trying to use phosphor boxpanel for our hbox/vbox,"I've been trying to swap out Bokeh's vbox/hbox with phosphor's BoxPanel, but this does not really work. Have been discussing this with @sccolbert and the point is that for things to work well, we need all widgets to be phosphor widgets (even if they're just thin wrappers). I also think the current hbox and vbox should be done as a flexbox (which can be via a new FlexPanel phosphor widget).

So this would be a process that would take some more time and planning.

---

I wrote down some of the problems that I ran into before talking to Chris. Most can be explained by the above, though the last point may need some thoughts.

Problems:
- See the first image below. The width of the screen is divided in three equal bins, and the slider stretches to take all available space (as it should). The plots have a fixed size, so they do not scale along. It would be nice if Bokeh plots could be told to take all space they have available, though we can add that later. The plots do not align to the center, however, and if we enforce that (`text-align:center`) as I tried for the plot on the right, things go wrong. This might be fixable with the appropriate CSS.
- The second image below shows that the slider needs less space than a plot (obviously) but the boxpanel cannot be aware of its natural size. This can be remedied by setting the max-size of the phosphor-container-widget, but we don't want our users to have to set this, which implies, I think, that _we'd need all our widgets to be defined/wrapped in phosphor widgets for this to work_.
- Even if I set the max-height of the widget that wraps the slider in the second example, this does not affect the distribution of the content, though this can probably be fixed in phosphor itself.
- And even then ... Phosphor works with absolute positioning, in this case it uses the full vertical space as the ""work area"", which is good, because Phosphor wants to be like a desktop GUI system. However, _Bokeh is currently expecting the page to be a ""document""_, with infinite space in the vertical direction. Thus the clipping. (Also related to my point above that Bokeh plots do not scale to the available space, which would be more desktop-like.)

![screenshot from 2015-09-16 15 34 18](https://cloud.githubusercontent.com/assets/3015475/9906000/710ae60e-5c88-11e5-9eb9-addce59786fb.png)

![screenshot from 2015-09-16 15 20 38](https://cloud.githubusercontent.com/assets/3015475/9905737/fac56632-5c86-11e5-849c-67a44b08bd2a.png)
",6,1,['status: superseded']
3656,45137622,2862,3834332,2015-09-16 07:03:20,2015-09-17 05:10:02,closed,"Move tests out of bokeh module, clean-up warnings, only one test_serialization.py, clean-up pytest-selenium parameters.","If you look at #2844 test results:
https://travis-ci.org/bokeh/bokeh/jobs/80318985#L1820 all the selenium
tests are actually being skipped because of the new pytest-selenium parameters.

This cleans out old fixture overrides that are no-longer needed and uses
the new sensitive-url parameter to ensure they all run (which is just one
running and one xfailing for now)

ping @damianavila @bryevdv - this should go in as soon as possible.
",8,16,"['type: bug', 'reso: working as intended', 'status: superseded']"
3657,45069686,2858,3834332,2015-09-15 16:13:36,2015-09-16 17:00:47,closed,Update example - cities gmap,"The maps_cities example demoing cities over a google map was showing all the
cities offset from the map tile. The problem appears to have been in the
us_cities dataset. This commit adds a new world_cities dataset and updates
the example to use it.
",5,2,"['status: accepted', 'type: task', 'reso: completed']"
3658,45039612,2857,3834332,2015-09-15 11:52:36,2015-09-16 17:02:40,closed,Bug/1335 gmap points,"Fixes #1335 

1) Improves gmap interaction code
2) Projects xy coordinates into web mercator so they line up with tile layer

Could be split into two PRs for each of the above components.

Does not have tests. Not sure how to write tests for (1). Could probably write tests for (2).
",24,11,['status: accepted']
3659,44992329,2855,3834332,2015-09-14 23:11:24,2015-09-16 13:01:27,closed,Fix gapminder notebook & clean-up unecessary triggers,"~~passing in the slider as an argument stopped working apparently, using `cb_obj` works fine.~~

Also updated notebook since Callback change (which I missed before) and remove unecessary trigger calls.

EDIT - Was my mistake, no longer in this PR.
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
3660,44977757,2854,3834332,2015-09-14 20:38:05,2015-09-14 21:16:20,closed,Add scientific notation to contributing.rst,"issues: fixes: #2768 
",1,1,['status: accepted']
3661,44968453,2853,3834332,2015-09-14 19:11:18,2015-09-14 20:55:55,closed,Fix typo. snipped -> snippet,,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3662,44967011,2852,3834332,2015-09-14 18:57:56,2015-11-05 21:44:47,closed,"Fix up unittests, replace INLINE with CDN as default resource","issues: closes #2572
",25,8,['status: superseded']
3663,44873047,2850,3834332,2015-09-13 13:42:17,2015-09-15 16:23:12,closed,Birdsarah/scratch google maps,"stab at #1335

(it's not as big as it looks - just changes to gmap_plot.coffee - and then a bunch of examples for testing)
",1,3,['status: superseded']
3664,44864961,2848,3834332,2015-09-13 01:40:52,2015-09-14 20:00:32,closed,Workaround to local installation,"Investigating, let's see...
",3,4,"['type: bug', 'status: accepted', 'reso: completed']"
3665,44841842,2846,3834332,2015-09-12 00:20:17,2015-09-14 20:45:25,closed,Be more selective when you look for the ID,"Fix how you get the id from Rackspace selectively looking for the cloudFiles info.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3666,44833571,2844,3834332,2015-09-11 21:56:36,2015-09-14 22:14:14,closed,pytest-selenium 1.0b1 does not use the --destructive argument,"pytest-selenium is now on pypi: https://pypi.python.org/pypi/pytest-selenium/1.0b1

ping @damianavila
",4,4,"['status: accepted', 'type: task', 'reso: completed']"
3667,44833363,2843,3834332,2015-09-11 21:54:07,2015-09-11 21:58:20,closed,Fix regex again.,"With the new devel build names, we need to catch the proper names in the branches.
I will merge this immediately to trigger a new devel build.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3668,44743865,2838,3834332,2015-09-11 03:43:17,2015-09-11 17:02:59,closed,Tornado2,"up to date with `0.10` master
",3,24,['status: superseded']
3669,44722187,2837,3834332,2015-09-10 21:32:57,2015-09-11 02:07:19,closed,Feature/2829 glyph renderer,"issues: fixes #2829 
",0,2,['status: accepted']
3670,44714221,2836,3834332,2015-09-10 20:19:09,2015-09-10 21:03:18,closed,Add missing closing tag to <script> examples.,"issues: fixes #2835 
",1,1,['status: accepted']
3671,44657787,2834,3834332,2015-09-10 11:48:32,2015-09-10 16:18:56,closed,Changes to Tornado PR,"Summary of changes:
- fix text/bytes boundaries
- add some error handling and reporting
- add an example of a background task (hardwired in the websocket handler) without interruption of other coroutines

Side notes:
- Tornado's `on_message()` can actually give you unicode _or_ bytes, depending on the kind of websocket frame which was received (there are text frames and binary frames); which in turn depends on the incantation used on the client side
- There's a BokehServer class so I extended it a bit instead of introducing a new one
- Not everything here is useful, some of it is just tinkering or trying to straighten up the code
- I'm not sure it's useful allowing several protocol errors before closing
- Checking the session id looked like a useful sanity check to me (and it's cheap anyway)
- I agree with Havoc that the hmac doesn't look terribly useful
",2,8,"['type: feature', 'status: accepted', 'reso: completed']"
3672,44584235,2830,3834332,2015-09-09 18:32:02,2015-09-10 15:58:29,closed,Add clearer error message when scipy is not installed.,"issues: fixes #2798 
",1,1,['status: accepted']
3673,44556770,2827,3834332,2015-09-09 14:30:11,2015-09-10 17:32:10,closed,Better names for the devel builds,"Using `TRAVIS_JOB_ID` to have smaller number than now... BUT also changing to a tag-based name for devel builds... so the `TRAVIS_JOB_ID` is only relevant for the testing machinery without conflicting with conda...
",4,5,"['status: accepted', 'type: task', 'reso: completed']"
3674,44495451,2825,3834332,2015-09-08 23:30:28,2015-11-16 01:21:01,closed,Removed deprecated from_df method from ColumnDataSource,"ref issue: #2581 

This is removes a deprecated ColumnDataSource method ""from_df"". It has been supplanted by the **init** constructor.
",4,5,['status: declined']
3675,44469755,2823,3834332,2015-09-08 19:00:29,2015-09-15 13:06:20,closed,"Hardcode some dark colors for theme idea ""1b""","This isn't intended to become the default, we'd want to
figure out a theme system that can affect these same
properties.
",7,1,"['type: feature', 'status: accepted', 'reso: completed']"
3676,44287242,2820,3834332,2015-09-05 17:42:22,2015-09-10 16:00:02,closed,Remove deprecated actions module,"Fixes #2815
",1,1,['status: accepted']
3677,44282789,2819,3834332,2015-09-05 13:19:21,2015-09-12 22:55:25,closed,fix sources that resulted with different column lenght in some cases,"issues: fixes #2816 
",3,2,['status: accepted']
3678,44276807,2814,3834332,2015-09-05 04:57:53,2015-09-05 17:29:40,closed,Alter models import for better deprecation,"Fixes #2791
",1,2,['status: declined']
3679,44264015,2813,3834332,2015-09-04 21:38:00,2015-11-26 22:46:38,closed,Feature/imageurl error handling,"issues: fixes #2805 

Two updates:

Added retry_attempts and retry_timeouts to ImageURL python class and backbone model view. 

Added listener to ""global_alpha"" prop change.
",12,15,['status: accepted']
3680,44244296,2811,3834332,2015-09-04 17:51:53,2015-09-04 19:55:24,closed,merge dev 0.10 branch back to master,,0,96,"['status: accepted', 'type: task', 'reso: completed']"
3681,44226696,2810,3834332,2015-09-04 14:55:08,2015-09-10 16:16:42,closed,Changed 'action' to 'values' in dropdowns,"Resolves issue https://github.com/bokeh/bokeh/issues/2631#issuecomment-137748555
",2,2,['status: accepted']
3682,44163598,2809,3834332,2015-09-03 22:08:13,2015-09-03 22:39:37,closed,Fix regex to take 0.10.0 versions,"Fixed regex to enable builds with versions containing more than on digit in the server scheme 
",1,1,"['status: ready', 'status: accepted', 'type: task', 'reso: completed']"
3683,44137749,2807,3834332,2015-09-03 18:00:47,2015-09-03 21:31:50,closed,Feature/2802 image url alpha,"issues: fixes #2802 
",1,3,['status: accepted']
3684,44052677,2806,3834332,2015-09-02 22:56:05,2015-09-03 20:20:30,closed,Task/build fixes,"This one:
    \* Use the correct env variable to build the docs properly
    \* Fix the npm publishing command because right now you can not tag with semver versions
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3685,44040052,2804,3834332,2015-09-02 20:44:52,2015-09-03 18:57:53,closed,Fix bug in LinearColorMapper.build_palette.,"Fixes #2801, by correctly converting non-number values for the last value of the passed in palette when assigning to the last entry in the new palette.

Note that I am unclear on why extending the palette by one entry is necessary in the first place. It seems like a better solution to just make `new_palette.length` equal to `palette.length`, and delete the offending line after the loop.
",2,1,['status: accepted']
3686,43936169,2800,3834332,2015-09-01 22:50:02,2015-09-28 19:46:06,closed,Implementation of user-defined models,"This will include split of bokehjs as well at some point. This PR is intentionally based on `master`. To test this, try out `glyphs/custom` example. Click on a circle and a popup window should appear with a message including fill color of the circle.
",36,58,"['type: feature', 'status: accepted', 'reso: completed']"
3687,43927401,2799,3834332,2015-09-01 21:12:50,2015-11-13 10:53:38,closed,Allow specifying CustomJS using a Python function,"Issues: implements part 1 of #2788

This uses `flexx.pyscript` to transpile a given Python function to JS. Except for docs and tests this is all there is to it.

However, we may want to wait until PyScript has evolves a bit further, especially Python 2.7 support.
",15,1,['status: superseded']
3688,43895315,2797,3834332,2015-09-01 16:13:18,2015-09-01 16:47:43,closed,Pin ipython and ipython notebook to 3.2.1.,"Same as #2795
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
3689,43890574,2795,3834332,2015-09-01 15:34:29,2015-09-01 16:46:19,closed,Pin ipython and ipython notebook to 3.2.1,"To enable the test machinery. This is a temporary fix, we need to address the Jupyter update in a general way...
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3690,43879434,2794,3834332,2015-09-01 14:06:44,2015-11-04 17:13:16,closed,Server rewrite based on Tornado,"This PR is intended to be a place to have concrete discussions about technical points in the new server development. I intend to submit a new PR with all commits squashed, when this is ready to merge. 
## Notes

To see some basic operation with messages passed back and forth from client and server, run

```
python bk.py  # basic server
```

and 

```
python client.py # basic client
```

The class/logic in `client.py` is eventually intended to be rolled into `bokeh.session` and then real control, updating of the server will be possible with _no more ugly polling, ever_.
## Concepts
- `WSHandler`  &mdash; takes individual message framents, passes to `Recevier` until a message is completed, then passes message to a handler
- `Receiver` &mdash; responsible for assembling message fragments into complete messages
- `Message` &mdash; define operations on the server or client
- `Protocol` &mdash; defines a specific collection of message revisions and helps automate their creation
- `ServerSession` &mdash; an in-memory document cache for one client connection (e.g., a single browser tab)
- `ServerDocument` encapsulate a Bokeh Document on the server. Manages a work queue that serializes any storage operations on the document. 
## Wire Protocol

Modeled loosely after the IPython protocol. A message comprises these sub-parts, sent as individual websocket messags:

```
[
    # these are required
    b'foobarbaz',       # HMAC signature
    b'{header}',        # serialized header dict
    b'{metadata}',      # serialized metadata dict
    b'{content},        # serialized content dict

    # these are optional, and come in pairs
    b'{buf_header}',    # serialized buffer header dict
    b'array'            # raw buffer payload data, possibly binary
    ...
]
```
## New Document Idea

The basic idea is for `Document` to be a data structure composed of three parts: `variables`, `models`, `stores`:

```
class Document(HasProps):

    # basically a namespace for simple state to be included in Bokeh docs
    vars = Dict(String, Any)

    # like current models, except all lightweight -- no actual data
    models = Dict(String, Instance(Model))

    # actual data goes here
    stores = Dict(String, Instance(DataStore))
```

Various use-cases are possible: 
- sessions can copy everything when the session is created (no updates pushed to sessions)
- sessions could share/be linked to some combination of `vars`, `models`, `stores` (updates get pushed to sessions)

Additionally there should be some provision or mode for clients to _store_ changes that that push to a session back to the persistent backend. Need to distinguish between changes pushed to session cache vs changes inteded to be saved. GH commit vs push analogy?
## Questions
- `Message` subclasses have `handle_server` and `handle_client` methods on them, which are intended used by the server and client respectively to handle incoming messages. Would it be worthwhile to factor out the handlers? There are definitely some nice reasons to do that, but it would also spread out the codebase somewhat even more.
- The `create` method on the `Protocol`, picks out the right message and calls `create` on the message class. It just passes on any required params as `args` and `kwargs`, but the user who calls `create` has to just know what any additional params are for the specific message type. Maybe there is a better way? 
- Is there any particularly good way to start a tornado server in ipython notebook? Obviously we could just use `subprocess`, etc. but though perhaps there might be some tighter ipython integration possible.
- `Protocol` is defined in an `__init__` there's probably a better arrangement. Source layout suggestions welcome in general.  
- Currently, switching between encoded strings/bytes seems a bit ad-hoc and clunky. More consistent approach?
## Todo
- [ ] specify remaining messages/operations
- [ ] implement new document class
- [ ] specify storage API
- [ ] Implement storage API
  - [ ] in-memory
  - [ ] redis  
- [ ] implement message handlers
- [ ] implement JS client
- [ ] improve python client, `Session` integration
- [ ] admin page
- [ ] index page
- [ ] integrate/delegate auth checking
- [ ] update polling demos to not do polling
",27,306,"['type: feature', 'status: accepted', 'reso: completed']"
3691,43836517,2792,3834332,2015-09-01 04:32:59,2015-09-03 18:55:00,closed,Re-enable UI behaviors on bokeh-server index page.,"Fixes #2787, and by the sound of it, a lot of other open issues.

The problem boiled down to the removal of jQuery and Bootstrap JS files from the `_base.html` template, which had the unintended side effect of removing them from inclusion on the index page.

This didn't affect code using e.g. `Bokeh.$(...)` but the index page (rendered by template `bokeh.html`) relies on the third-party versions being loaded as all of that stuff seems to be driven by some combination
of those two JS files and CSS classes attached to elements.

It turns out the `_page_base.html` template already has a slot for things like this so I've shoved these includes inside the existing `extra_scripts` block from within `bokeh.html`.
",11,1,['status: accepted']
3692,43785291,2790,3834332,2015-08-31 16:58:17,2015-09-03 20:32:05,closed,Add images to tooltip,"issues: fixes #2782 

![tooltip_image](https://cloud.githubusercontent.com/assets/1417520/9584701/36486eae-4fd8-11e5-8464-1cb087016332.png)
",2,2,['status: accepted']
3693,43701454,2786,3834332,2015-08-29 20:31:49,2015-09-03 18:53:33,closed,change image_url onload callback to render request,"issues: fixes #2785 

Current behavior unconditionally renders the image as part of the onload callback. This changes the render to a render_request, which uses the whole bokeh render sequence.

Question: Is it worth adding any sort of logic in the case of a 404 for the image?
",5,2,['status: accepted']
3694,43651832,2783,3834332,2015-08-28 17:29:14,2015-08-28 17:33:16,closed,Remove 0.10 references.,"Because our automated tool is not aware of concurrent branches...
Merging now to make the ANN.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3695,43583796,2779,3834332,2015-08-28 00:55:44,2015-08-28 01:52:05,closed,Hotfix/taptool not responding to callback,,1,4,"['type: bug', 'status: accepted', 'reso: completed']"
3696,43552549,2778,3834332,2015-08-27 18:48:39,2015-08-28 01:53:51,closed,Collect hotfix for examples and release highlights,"Let's collect examples fixes here... and release highlights too.
",2,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3697,43534072,2775,3834332,2015-08-27 15:53:06,2015-09-16 15:42:36,closed,"Add Annotation, etc. abstract base classes and @abstract decorator","`@abstract` is a phony decorator for now, i.e. it's there to inform you, but it won't automate anything. In future this can be extended to check if abstract base classes aren't initialized.

fixes #2769
",5,9,['status: accepted']
3698,43512895,2773,3834332,2015-08-27 12:49:59,2015-08-27 14:07:46,closed,Disable canteen and xfail integration test,"Canteen is a performance bottleneck and should only be running in test
environment. This commit disables it globally and xfails the integration test
that expects it to be present.

This is a short-term measure while we work on a better solution to enable it
only for testing.
",3,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
3699,43448225,2770,3834332,2015-08-26 20:31:32,2015-08-27 14:05:43,closed,Remove hash from elementid.,"It was breaking the notebooks with sintax errors in the JS console about.
",7,1,"['type: bug', 'status: accepted', 'reso: completed']"
3700,43297188,2767,3834332,2015-08-25 15:06:52,2015-08-25 16:08:41,closed,Fix comflict (not merge conflict) because of those inter-related PRs.,"Merge of #2649 and #2675 generated a conflict making our testing machinery to fail... let's see if this fix it...

ping @mistakevin and @birdsarah 
",2,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
3701,43190740,2764,3834332,2015-08-24 15:57:28,2015-10-26 14:46:52,closed,Bokeh Apps,"This PR is aims to propose a[n easy] design to let [experienced or not] users create rich and complex applications from configuration (yaml ATM) files without too much boilerplate code.

The implementation definitely need some attention and be improved. The real focus is on the interface of `bokeh.appmaker` (specially on `YamlApp`and `bokeh_app`). Both accept:
- an application configuration yaml file that defines ""an app"" but supporting the following sections: `datasets`, `ui`, `layout` and `event_handlers`
- a theme configuration yaml file that defines bokeh objects style attributes and is used to style ""an app""

The PR also re-writes the `sliders` app example using the new feature to show the new concept applied.
",5,14,['status: superseded']
3702,43062713,2761,3834332,2015-08-21 17:45:25,2015-09-09 18:30:20,closed,2572 resources default cdn,"issues: closes #2572
",6,8,['status: superseded']
3703,42970421,2757,3834332,2015-08-20 19:49:14,2015-08-21 18:46:10,closed,Bug/2755 components multi,"issues: fixes #2755 
",6,6,['status: accepted']
3704,42969057,2756,3834332,2015-08-20 19:36:10,2015-08-20 23:50:42,closed,Cause setup.py clean to delete .pyc files.,"issues: fixes #2419 
",0,1,['status: accepted']
3705,42955284,2754,3834332,2015-08-20 17:23:40,2015-08-21 17:44:48,closed,Change resources default from inline to cdn,"issues: closes #2754 
",10,3,['status: superseded']
3706,42861635,2751,3834332,2015-08-19 20:43:16,2015-09-10 17:29:25,closed,Remove 3.3 from testing and building.,"According to https://github.com/bokeh/bokeh/pull/2743#issuecomment-132731963
",10,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3707,42850853,2750,3834332,2015-08-19 18:57:34,2015-09-10 16:18:20,closed,Feature: Added bokehjs disc analyzer to gulp,"We don't have to merge this, but can be useful.
Running `gulp scripts:analyze` will produce an interactive graph like so:
![screen shot 2015-08-19 at 1 55 54 pm](https://cloud.githubusercontent.com/assets/4411115/9365950/0f3e3b84-467a-11e5-9a37-cdeeb15648ea.png)
",7,1,"['type: feature', 'reso: working as intended', 'status: declined', 'tag: component: bokehjs']"
3708,42832819,2748,3834332,2015-08-19 16:06:02,2015-08-21 05:16:58,closed,'notebook previously loaded' warning only appears if verbose set to True,"fix #2473 
",0,2,['status: accepted']
3709,42823923,2747,3834332,2015-08-19 14:53:54,2015-08-25 19:59:34,closed,Add support for case insensitive enumerations,"Effectively this allows now colors to match CSS specification.

fixes #2559
",9,6,['status: accepted']
3710,42808182,2746,3834332,2015-08-19 12:27:44,2015-08-25 17:04:33,closed,"Fix types of Gear.{angle,module} properties","fixes #2665
",4,2,['status: accepted']
3711,42807827,2745,3834332,2015-08-19 12:23:38,2015-08-25 21:20:44,closed,Use _.isUndefined() instead of ? when checking for undefined,"The `?` operator in coffeescript treats `null` and `undefined` the same, so when we want to distinguish between those values and ask only if a property exists (but allow it to have `null` value), then we need to use `_.isUndefined()` instead.

Also, this entire module should be reexamined, as there might be more cases like this.

fixes #2664
",4,2,['status: accepted']
3712,42806408,2744,3834332,2015-08-19 12:06:19,2015-08-20 23:54:57,closed,Restore method of sorting renderers and improve naming convention,"Sorting was broken in PR #2393. This restores the original approach and improves naming convention, so that we explicitly see that we sort renderer views and not models.

I don't know what caused the original issue (#2365), but it doesn't seem to be renderer order dependent, see https://s3.amazonaws.com/bokeh-travis/0.9.1dev-5ce7a15-27-g25610e6/report.html (search for `sinerror`). There is a difference, but it's caused by an offset, so perhaps ranges are different.

fixes #2674
",2,1,['status: accepted']
3713,42773850,2743,3834332,2015-08-19 03:35:48,2015-09-14 20:45:52,closed,Remove 3.3 ,"Since anaconda dropped support for 3.3, let do the same and make our testing and building tools faster than now :wink:
",6,1,"['status: accepted', 'type: task', 'reso: completed']"
3714,42772661,2742,3834332,2015-08-19 03:06:52,2015-08-25 16:27:54,closed,Fix upload of JS and CSS into the CDN,"Now the CloudFiles endpoints live at the top of the Service Catalog list... grrr... anyway, this should fix it...
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
3715,42746628,2741,3834332,2015-08-18 20:47:08,2015-08-20 23:48:06,closed,update to use new server gallery deploy,"issues: closes #2612
",0,1,['status: accepted']
3716,42730393,2739,3834332,2015-08-18 18:14:27,2015-08-25 11:46:03,closed,Do not zoom if BoxZoomTool selects range <= 5 pixels,"As far as I know, there is no way to cancel out of a BoxZoomTool selection after the mouse is held down (and then there's no way to undo the zoom after the mouse is released). To get around this,
use the behavior of the zoom on other plotting tools like matplotlib: if either dimension of the range selection is <= 5 pixels, do not apply the zoom.

Happy to make this more configurable, however I do feel that this is a more natural default then the current behavior.
",6,1,"['type: feature', 'status: accepted', 'reso: completed']"
3717,42730356,2738,3834332,2015-08-18 18:14:07,2015-11-27 10:26:31,closed,Scroll to first row of selection in DataTable,"Partially closes #2732

On a selection change, inform slickgrid to scroll to the [row
before the] first row of the selected values in the ColumnDataSource.
If the slickgrid table does not have enough rows to have a vertical scrollbar,
then this will do nothing, i.e. retain the current behavior.

Happy to make this more configurable, however I do feel that this is a more natural default then the current behavior.
",13,2,['status: accepted']
3718,42702972,2736,3834332,2015-08-18 14:11:23,2015-08-21 00:00:15,closed,Fix value escaping in hover tool,"fixes #2728
",1,2,['status: accepted']
3719,42671132,2735,3834332,2015-08-18 08:03:30,2015-08-18 08:40:30,closed,added simple test to show that tz always uses UTC,,3,1,"['status: accepted', 'type: task', 'reso: completed']"
3720,42670906,2734,3834332,2015-08-18 08:00:29,2015-08-18 08:00:38,closed,added simple test to show that tz always uses UTC,,0,1,['status: declined']
3721,42610469,2729,3834332,2015-08-17 17:02:56,2015-08-20 23:51:41,closed,fix some docs issues,"issues: closes #2515
",2,5,['status: accepted']
3722,42537352,2727,3834332,2015-08-16 14:31:05,2015-08-19 17:26:34,closed,Broke out into functions for more testable code,"@birdsarah maybe `_trigger_event()` broken out would be more testable?
",2,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
3723,42529200,2726,3834332,2015-08-16 02:02:37,2015-08-25 12:09:21,closed,Task/selenium tests,"@mistakevin - just getting started on this with a TapTool and Canteen.

It works great with the FF driver, when I ran it with PhantomJS driver, it had a different hash. Are the Canteen hashes different for different browsers?
",28,19,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
3724,42507131,2725,3834332,2015-08-14 23:25:58,2015-08-18 22:12:26,closed,Financial dashboard,"bokeh-server example of financial trading dashboard. 
(apologies for including the xl binary. could switch to csv easily enough..)
",6,2,['status: superseded']
3725,42481472,2723,3834332,2015-08-14 18:02:17,2015-09-16 16:46:51,closed,Removing bulk require of jquery-ui,"Not guaranteed to work.

Current shrinkage
bokeh.js ~18.4%
bokeh.min.js ~19.9%
",8,2,['status: superseded']
3726,42470794,2720,3834332,2015-08-14 16:00:52,2015-09-17 16:36:38,closed,"Refactor Charts for Table-like (x,y) Inputs","This utilizes the existing builder/chart structure, but pretty much replaces the guts of it.

**Summary of approach:**
- Replaces DataAdapter with ChartDataSource, which wraps the pandas dataframe
- Converts multiple input types into pandas dataframe
- Building the glyphs is built around a modified pandas groupby process, which yields DataGroups, which will roughly correspond to one composite glyph where that makes sense. The DataGroup is a subset of data, with the attributes that are assigned to it.
- Includes method for describing the attributes (color, marker, etc.) in a way that users can easily modify
- Builders specify their dimensions (default=(x,y)), so there is opportunity to support charts with something other than x,y
- In general, Builders will work at the entire DataFrame level, and custom glyph behaviors, calculations, etc will be factored out into a very simple and deterministic creation of a composite glyph with more simple data types (array-like data, single attribute (one color, one marker, etc.)).

**Background**
- For a detailed walkthrough of the experimentation that went into this approach see [this notebook](http://nbviewer.ipython.org/gist/rothnic/a6424b0179bd9b29405b/assign_attrs.ipynb).
- For the research that went into the API, see [the bokeh days wiki page](https://github.com/bokeh/bokeh/wiki/Bokeh-Days-Working-Document).
- For the issue associated with the API update, see bokeh/bokeh#2442.

Once complete, this will close bokeh/bokeh#2442. Currently, this is very much still in work, but things should go more quickly from here.
",52,69,['status: superseded']
3727,42439282,2719,3834332,2015-08-14 09:43:08,2015-08-18 08:00:01,closed,added simple test to show that tz always uses UTC,"Provide failing test, showing that timezone always parses dates to UTC 
",3,1,['status: superseded']
3728,42398338,2718,3834332,2015-08-13 20:58:30,2015-08-15 09:35:04,closed,Added mocha test for wheel event propagation,,0,5,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
3729,42388784,2716,3834332,2015-08-13 19:25:38,2015-10-07 20:00:40,closed,adds callback to groups widgets,"This adds callbacks to all of the ""AbstractGroup"" widgets. It was only the Python AbstractGroup class that needed to be updated; the CoffeeScript was already set up to make the callbacks. I've tested the code in my #2715 issue on my own machine to verify that it works. 

contributing.md specifies that ""We don't accept code contributions without tests"" but I'm not sure how or where to do that, sorry, so if you'd like me to add them please point me in the right direction.

Fixes: Can't add callbacks to CheckboxGroups #2715 
",2,2,['status: declined']
3730,42282989,2714,3834332,2015-08-12 20:11:50,2015-08-14 01:10:26,closed,Change binstar to anaconda after some name changes in the anaconda stuff.,"For completeness of some previous changes to use anaconda-client instead of binstar...
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3731,42282744,2713,3834332,2015-08-12 20:09:09,2015-08-13 17:40:57,closed,Resolving conflict between RequireJS and Browserify with Backbone,"This solves a conflict when requirejs is preloaded on the page. Backbone
looks for `define` before looking for `module.exports`, which eats up our Backbone.
",3,4,['status: accepted']
3732,42277868,2712,3834332,2015-08-12 19:21:57,2015-08-14 01:01:38,closed,Fixes for the us_marriage example,"Some tiny fixes:
- Fix some imports
- use data directly from `bokeh.sampledata`
- remove output from notebooks

ping @rhiever who wants to see the changes.
",3,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3733,42106357,2708,3834332,2015-08-11 08:56:34,2015-08-11 13:02:33,closed,Fix typo in example code of server deployment docu,"Insert missing closing bracket.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3734,42079350,2707,3834332,2015-08-10 23:50:48,2015-08-11 16:55:34,closed,Fix bug in draw legend method of text glyph,"issues: fixes #2698 

Fix bug in draw legend method of text glyph.
",2,3,['status: accepted']
3735,42047953,2706,3834332,2015-08-10 18:02:53,2015-08-11 15:21:23,closed,Setting Node to current stable (0.12) on TravisCI,"Also remove pin for binstar...
",3,10,"['status: accepted', 'type: task', 'reso: completed']"
3736,41997749,2703,3834332,2015-08-10 08:38:13,2015-08-25 14:00:23,closed,Prevent bokeh from eating scroll events if wheel tool isn't active,"Partially fixes #1450.

This ensures that scroll events are only absorbed if wheelzoomtool is active. I've tested this manually and tested some other plots too and seems to do what we want.

@mistakevin @mattpap @bryevdv, I'd love some pointers on unit testing this. 

I thought this would be a good candidate for an integration / selenium test, so I set up a few. I just started with some basic interaction and I was able to hover, select glyphs and pan, which I'm pretty happy about. (You can see the code on the branch: https://github.com/bokeh/bokeh/blob/feature/1450_test_wheel_zoom_interactions/).  However, I then discovered that selenium has nothing to trigger a `mousewheel` event. I started trying to trigger via javascript

``` js
     var e = Bokeh.$.Event( ""wheel"", { deltaY: 100, deltaX: 100 } );
     Bokeh.$('.bk-canvas-events').trigger(e)
```

https://github.com/bokeh/bokeh/blob/feature/1450_test_wheel_zoom_interactions/tests/integration/file/test_wheel_zoom_interactions.py#L62

I haven't got deep into it yet, but thought I'd ask for any thoughts @mistakevin, @mattpap, @bryevdv 

Maybe this PR can have some unit tests, maybe it can go in as is. 
",15,22,"['status: accepted', 'type: task', 'reso: completed']"
3737,41938253,2701,3834332,2015-08-07 22:12:13,2015-08-08 17:08:03,closed,Add an example to DatetimeTickFormatter docs,"Small documentation update after not fully understanding DatetimeTickFormatter (see #2450)
",2,1,['status: accepted']
3738,41833349,2696,3834332,2015-08-06 20:52:14,2015-08-06 23:29:16,closed,Remove jsdom,"Pretty sure we don't need jsdom. It's very bulky, causing problems with node, and we can use [cheerio](https://github.com/cheeriojs/cheerio) which seems more user friendly for a dummy DOM. See [here](https://github.com/bokeh/bokeh/pull/2666/files#diff-f32e449a1ce9901c770335f031be8e65R22) for an example of cheerio in a test

resolves issue https://github.com/bokeh/bokeh/issues/2629
",3,11,['status: accepted']
3739,41809900,2694,3834332,2015-08-06 16:54:50,2015-09-13 22:41:06,closed,New charts interface,"Continuation of work in #2088 

It's a first step in the direction of #2442 and https://github.com/bokeh/bokeh/wiki/Bokeh-Days-Working-Document
",6,5,['status: declined']
3740,41803287,2693,3834332,2015-08-06 15:48:55,2015-08-06 18:51:00,closed,use spatial index for point hit testing,"issues: closes #2691
",0,1,['status: accepted']
3741,41802992,2692,3834332,2015-08-06 15:46:17,2015-08-06 15:46:57,closed,use rbush for point hit testing on quads,"issues: closes #2691
",1,3,['status: declined']
3742,41771549,2690,3834332,2015-08-06 10:09:24,2015-08-06 12:37:26,closed,fix typo on image glyph docstring,"As reported on [m.l.](https://groups.google.com/a/continuum.io/forum/?utm_medium=email&utm_source=footer#!msg/bokeh/b_4YOgI7psM/dadCL7qlJQAJ)
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3743,41743145,2689,3834332,2015-08-06 01:07:53,2015-08-08 17:02:59,closed,Task/2544 fix hover docstring now line available,"issues: fixes #2544
",2,5,['status: accepted']
3744,41742490,2688,3834332,2015-08-06 00:53:26,2015-10-07 17:01:21,closed,Add spin counter to Icon,"Closes #2639 temporarily until @bryevdv's tornado overhaul. The hack in this commit could be made more general but I think the most common application would be to set a spinning icon. This also fixes a bug that a spinning icon can't be set to non-spinning, since the html element's class isn't reset. If the rest of these changes are undesirable, I'll split off that bug-fix into a separate PR.

Add a spin counter, which a bokeh-server script can listen to see if the icon's spin state has updated. A script will then be able to update the icon's spin state, receive a notification of the spin update, and then perform some other actions, as in the added example.
",4,1,['status: declined']
3745,41741372,2687,3834332,2015-08-06 00:30:26,2015-08-06 01:47:59,closed,Allow for multiple indices to be tapped,"issues: fixes #2508

Example now handles case when you hold down shift and select different indices
",1,1,['status: accepted']
3746,41741106,2686,3834332,2015-08-06 00:25:05,2015-08-06 01:16:53,closed,Remove unusued test template tab_play.,"issues: fixes #2499 

As per discussion on #2499, this appears to be an unused old artefact.
",2,1,['status: accepted']
3747,41740916,2685,3834332,2015-08-06 00:21:41,2015-08-08 17:06:17,closed,Tweak documentation on styling selections and link from Tools,"issues: fixes #2117 
",2,3,['status: accepted']
3748,41731927,2684,3834332,2015-08-05 22:07:06,2015-08-12 17:48:59,closed,some coarse plumbing for responding to visual property changes,"issues: fixes #2682

**This is intended as a stopgap measure**

I would like feedback about whether this is a reasonable short-term solution to make Bokeh plots responsive to JS changes to visual properties. Ultimately the BokehJS property system should be cleaned up and clarified even more, and more precise event handling constructed, but this at least gets the example below working. Thoughts @mattpap @mistakevin @bokeh/core 
",5,3,['status: accepted']
3749,41634038,2675,3834332,2015-08-05 00:57:57,2015-08-25 12:45:43,closed,Task/refactor action callback,"Fixes #2634

With the deprecation functions in place, I believe this is non-breaking. 

There are tests for the deprecation and I have confirmed manually that, for example, you can still use `from bokeh.models.actions import Callback` and everything works as expected. 
",3,7,['status: accepted']
3750,41573342,2671,3834332,2015-08-04 14:07:32,2015-08-06 21:33:00,closed,Clean up gulp source mapping,"Automatically produce external map files for bokeh.js (loads coffeescript directly into dev console) and for bokeh.min.js (points to location in bokeh.js)

CSS works in similar way, but even better. Loads LESS file directly in console when using either bokeh.css or bokeh.min.css

And for reference, source maps only load if they are activated in the developer console, and the developer console is open (in chrome).
",6,10,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: build', 'tag: component: bokehjs']"
3751,41570558,2670,3834332,2015-08-04 13:40:29,2015-08-04 15:06:31,closed,fix link format,"issues: fixes #2669
",0,1,['status: accepted']
3752,41517787,2668,3834332,2015-08-03 22:41:38,2015-08-04 14:29:01,closed,Remove the data tables example from plotting,"- This doesn't use the plotting interface
- Is out of date with how we use models

The example in glyphs folder is the same, and is up to date
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3753,41510107,2667,3834332,2015-08-03 21:09:01,2015-08-12 16:46:54,closed,Task/add annotation spans,"Add BoxAnnotation renderer.

To do: 
- DONE add level attr to BoxAnnotation class
- DONE add x/y_range_name (mapper) attr to python class
- DONE decide on default visual attrs
- DONE add user guide example
",10,31,['status: accepted']
3754,41507601,2666,3834332,2015-08-03 20:42:47,2015-11-23 15:56:17,closed,Traverse views function to add bk-* classes,"resolves https://github.com/bokeh/bokeh/issues/2527
",22,4,['status: superseded']
3755,41462837,2663,3834332,2015-08-03 12:42:13,2015-08-04 14:30:27,closed,webgl: fall back to 2D canvas when webgl is not available.,"I thought I had a fallback in place by setting `ctx.glcanvas = false`, but this does not work if you later use `ctx.glcanvas?` :)  This fixes it and also warns about falling back.
",0,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3756,41451505,2660,3834332,2015-08-03 09:59:46,2015-08-06 01:12:47,closed,Add support for --build-dir argument to gulp build,"This will be useful when using gulp build from other build systems, like sbt. This commit also fixes the build to not use hard-coded paths. Also uses `path.join()` instead of naive path string concatenation.
",4,2,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3757,41414270,2658,3834332,2015-08-02 08:11:32,2015-08-03 11:34:24,closed,Fix typo in legend user guide: s/p.grid/p.legend/,,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3758,41374452,2654,3834332,2015-07-31 19:48:39,2015-08-05 16:02:54,closed,Clean up models section of reference guide,"made **models.rst** into a table of contents page and moved the contents on to individual .rst files in _reference/models_.
",3,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3759,41362081,2652,3834332,2015-07-31 17:30:13,2015-07-31 20:38:40,closed,Removed sphinx-napoleon extension name from docs,"resolves issue https://github.com/bokeh/bokeh/issues/2651
",0,2,['status: accepted']
3760,41360152,2650,3834332,2015-07-31 17:07:19,2015-08-12 17:08:44,closed,Fix to take version into the fab deploy script,"Simplify fab script (removes duplication) and make fab deploy to take a version. Also fix the version in the build machinery.

With this change:

`fab deploy`, will deploy the current version at `/version`
`fab deploy:0.9.2`, will deploy/redeploy 0.9.2 version at `/0.9.2`
`fab deploy:test` and `fab deploy:dev`, the same as before...
`fab deploy:0.9.3,latest` should be used for the next release (latest makes the symlinks available). if you are doing manually, you can also use `fab deploy:latest=latest` and it will take the current version, but this is not recommended way to use it because you need to live in the release point (0.9.3 in this example). In addition, this is not longer made manually, it is automated...
",7,10,"['status: accepted', 'type: task', 'reso: completed']"
3761,41355367,2649,3834332,2015-07-31 16:13:23,2015-08-24 15:39:13,closed,Add Callback to Tabs Widget,"includes PR https://github.com/bokeh/bokeh/pull/2648
",12,6,['status: ready']
3762,41354642,2648,3834332,2015-07-31 16:05:36,2015-08-04 17:04:50,closed,Saving active panel,"I believe this will accomplish all requirements in https://github.com/bokeh/bokeh/pull/2638. I'll follow up with a PR that also includes a JS callback function to see what that looks like.
",2,1,['status: superseded']
3763,41283523,2646,3834332,2015-07-30 21:21:10,2015-09-21 17:49:03,closed,Feature/2375 separate css js resources,"issues: fixes #2375 

```
* Split up resources
* Update file_html embed function (and associated templates)
* Update docs
* Update load_notebook to be consistent
```
",25,20,['status: accepted']
3764,41280923,2645,3834332,2015-07-30 20:55:24,2015-08-06 00:41:41,closed,Fix PreviewSaveTool dom elements not being removed,"When a plot view is removed corresponding previewsavetool views (and their associated dialog div's) are not getting removed, which looks a bit worrying from an html console especially if a large number of plots are being refreshed.

Also renamed SaveTool to PreviewSaveTool at a couple of points in the documentation, and updated the documentation to use `dimensions` instead of `dimension`.
",1,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3765,41251410,2642,3834332,2015-07-30 16:03:31,2015-07-31 19:02:17,closed,Add aliases to --build_js/--install_js in setup.py,,3,1,"['status: accepted', 'type: task', 'reso: completed']"
3766,41247379,2641,3834332,2015-07-30 15:29:17,2015-07-30 21:30:05,closed,Remove some deprecations for 0.10,,0,4,"['status: accepted', 'type: task', 'reso: completed']"
3767,41223971,2640,3834332,2015-07-30 11:34:00,2015-07-30 14:01:50,closed,Stub PR to see if Travis gets failures,,2,65,['status: declined']
3768,41191801,2638,3834332,2015-07-30 02:07:04,2015-08-10 16:37:16,closed,Link updates with tab widget's active attribute,"Add support for interaction with tab's active attribute, credit to @mistakevin's [commit for idea](https://github.com/bokeh/bokeh/commit/dc40d3f0dad5d51f121d62d60abacaa7921bb15a). To be honest I don't really know what some of the changes I made in tabs.coffee actually do, other than that it seems to work and resolves the example in #2455 and my own tab widget use cases. Let me know if this should be documented / tested / etc somewhere. Commit message:

Closes #2455

When a Tabs widget's active attribute is updated, the corresponding
html should be re-rendered. Conversely, when a tab link is clicked,
the active attribute of the python widget object should be updated.

Previously, the only way I could find to update tabs was to create
a new Tabs python widget object, which however seemed to lead to
an assortment of bugs with plot renderings.
",6,1,['status: superseded']
3769,41180090,2637,3834332,2015-07-29 22:32:19,2015-08-07 15:55:58,closed,Use pytest not nose,"issues: closes #1984
- Test collection number is not the same
- Getting a few failing tests locally.
",25,10,['status: accepted']
3770,41172146,2636,3834332,2015-07-29 21:07:19,2015-08-24 15:28:47,closed,Add new raw_components method,"issues: fixes #2627
- includes one new test for components
- refactors some methods in embed for reuse by raw_components
- raw_components returns the un-tagged javascript and the raw plot_info dictionaries
",22,10,['status: accepted']
3771,41171189,2635,3834332,2015-07-29 20:58:05,2015-07-30 17:32:33,closed,"""Sticky"" last item bug in dropdown","resolves issue https://github.com/bokeh/bokeh/issues/2631
",4,3,['status: accepted']
3772,41164993,2633,3834332,2015-07-29 19:56:35,2015-08-12 17:51:31,closed,Add to DatetimeTickFormatter docstring,"Is there a recommended way to link from docstring to a code example? I feel like a code example is the easiest way to explain how to call DatetimeTickFormatter.

Closes #2413 

Note in DatetimeTickFormatter documentation:
- that only the first format string of a list seems to be used right now
- leading zeros are stripped
- %n, %t whitespace directives do nothing due to canvas limitations
",0,1,['status: accepted']
3773,41160159,2632,3834332,2015-07-29 19:08:48,2015-09-21 12:05:07,closed,Microsecond support in DatetimeTickFormatter,"Expands %f string format directive to 6-digit microsecond string
in strftime via regex. Python's built-in datetime library supports
the %f directive in its version of strftime. I believe but have not
checked that this should be accurate to the hundreds of nanoseconds
precision. Removed the previous millisecond / microsecond functions,
as they can't be supplied via python.

Updating docstring to mention %f and %N.

Closes #2332

Change-Id: Ia85051c6d99c1d52349e61869dddcfa390adec32
",5,1,['status: accepted']
3774,41157991,2630,3834332,2015-07-29 18:49:37,2015-08-06 21:00:47,closed,Use node compatible jsdom,"See issue https://github.com/bokeh/bokeh/issues/2629
",3,8,['status: superseded']
3775,41048527,2626,3834332,2015-07-28 19:10:27,2015-07-31 19:11:44,closed,"Add channels to ""extra"" section in meta.yaml","This isn't used directly by conda, but at least let reader know in the metadata that we use extra channels. This information could be later used programatically, e.g. by conda-env. Yeah, I'm working on conda-env accepting `meta.yaml` as well, which isn't that straightforward unfortunately. Note that this requires most recent conda-build, so update your root environment.
",3,1,"['type: feature', 'status: accepted', 'reso: completed']"
3776,40961385,2625,3834332,2015-07-27 23:32:06,2015-07-30 16:37:26,closed,Add background fill properties for legend,"Since there's no option right now (according to docs) for moving legend outside of a plot, I think it makes sense to document how to set the legend's background transparency. If this commit is ok I'll update the docs too. Commit message:

Enable legend properties background_fill_color and background_fill_alpha to set the canvas fill property instead of inheriting the plot background color and legend.border_line_alpha, respectively.

I don't know if it was intended that border_line_alpha was to also be used as the legend fill alpha but it
doesn't seem to be documented anywhere. This change might be slightly backwards incompatible as far as legend styles go, maybe it should inherit the old properties if not set? Or maybe it should inherit a 0.0 alpha if not set?
",11,1,"['type: feature', 'status: accepted', 'reso: completed']"
3777,40934111,2623,3834332,2015-07-27 18:30:06,2015-07-30 15:39:54,closed,Better MPL support for empty ticks,"Issues: fixes issue #2621 

The mpl --> bokeh converter was indexing unconditionally into the list of MPL ticks, which would cause an error if there were no ticks on the MPL axis; this is now fixed by checking if the ticks are empty and setting the bokeh tick and label colors to `None`.

Note: this fix still doesn't handle MPL custom tick properties
",3,2,['status: accepted']
3778,40851889,2617,3834332,2015-07-26 11:32:33,2015-08-24 18:52:02,closed,Add a warning for : in categorical strings,"Show warning when category labels contains `:`. See #516 for details.

Warning message contains field name in data source and first broken value.

```
ERROR:/home/abele/Devel/bokeh/bokeh/validation/check.py:W-1003 (COLON_IN_CATEGORY_LABEL): Category label contains colons: [field:a] [first_value: 1:0] [field:b] [first_value: 1:0] [renderer: GlyphRenderer, ViewModel:GlyphRenderer, ref _id: b6d6665e-70b1-4255-a9c5-baddca45e419]
```

Resolves #2614 
",10,13,['status: accepted']
3779,40837796,2616,3834332,2015-07-25 14:40:11,2015-10-07 16:58:33,closed,Adding utility functions to convert image to rgba image,"Bokeh require image to be a two-dimensional array of RGBA values (encoded as 32-bit integers), but usualy user have image in RGB format, or in grayscale format.

related bug: https://github.com/bokeh/bokeh/issues/1699
",12,3,['status: declined']
3780,40833932,2613,3834332,2015-07-25 09:04:19,2015-07-27 15:23:19,closed,Small changes to development documentation,"Small changes to clarify the development setup.
",2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3781,40804417,2611,3834332,2015-07-24 18:51:11,2015-07-30 15:41:14,closed,Task/column data source pandas init,"ref issue #2581 

Two things:
1. I updated the ColumnDataSource docstring to explicitly state that a pandas.DataFrame object is a suitable value to pass to the data attr.
2. I added a deprecate warn to the from_df method and added a new private method that does the df -> data conversion.
",0,8,['status: accepted']
3782,40775915,2609,3834332,2015-07-24 13:43:27,2015-07-24 13:50:03,closed,Hotfix/fix docs,"Fixed Changelog and remove deleted plot from the gallery.
Merging now to make the ANN.
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
3783,40761209,2607,3834332,2015-07-24 10:17:16,2015-08-06 22:03:04,closed,webgl: use a global gl context (no more limit of 16 webgl plots),"issues: #2590 

All plots in one page share the same gl context. 
",13,3,"['status: accepted', 'type: task', 'reso: completed']"
3784,40703920,2605,3834332,2015-07-23 18:40:25,2015-07-23 18:40:50,closed,Hotfixes 0.9.2,"Remove some AR examples, fix other and add release notes.
Merging now to start the release process.
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
3785,40666531,2604,3834332,2015-07-23 12:31:45,2015-07-30 18:37:54,closed,add clustering example with 50k points,"issues: #2590

This adds an example that uses sklearn to cluster points based on their distribution. There are 4 plots for 4 different datasets. The algorithm can be selected (but be aware that some algorithms may take a looong time with 50k points.
",11,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3786,40518548,2600,3834332,2015-07-22 00:08:27,2015-07-22 13:23:46,closed,Hotfix/fixed ticker,"local testing in the notebook caused a missing underscore require to go undetected. 
",2,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3787,40471025,2598,3834332,2015-07-21 15:34:38,2015-07-22 21:02:24,closed,Serializing data with NumPy optional,"Resolves issue mentioned in PR https://github.com/bokeh/bokeh/pull/2594
",5,7,"['status: accepted', 'type: task', 'reso: completed']"
3788,40468024,2597,3834332,2015-07-21 15:09:35,2015-07-30 18:31:54,closed,Webgl: make selections work also for over 65k points,"issues: #2590

Implements a workaround to deal with the fact that the indexbuffer is 16 bit.
",6,2,['status: accepted']
3789,40361686,2594,3834332,2015-07-20 15:06:06,2015-07-20 17:36:12,closed,Utilizing numpy arrays to speed up column data scrubbing,"Related to issue https://github.com/bokeh/bokeh/issues/2582
",9,1,['status: accepted']
3790,40343992,2593,3834332,2015-07-20 11:46:10,2015-07-20 15:01:09,closed,Fix typo in Charts user guide,,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3791,40299152,2588,3834332,2015-07-18 21:51:11,2015-07-20 15:49:27,closed,Support for fixed tick locations,"issues: closes #2548
",3,3,['status: accepted']
3792,40298445,2587,3834332,2015-07-18 20:59:56,2015-07-20 15:48:58,closed,set visuals on decimated glyph,"issues: fixes #2586
",2,1,['status: accepted']
3793,40284398,2585,3834332,2015-07-18 01:39:17,2015-07-20 15:50:09,closed,handle values correctly in glyph functions ,"issues: fixes #2524 
",3,3,['status: accepted']
3794,40245229,2579,3834332,2015-07-17 15:56:50,2015-08-12 16:45:47,closed,Demo server,"Work to move code specific to `bokeh-server` ""demo"" app into its own place and move toward making it simpler/easier to deploy general flask app. 
",3,12,['status: superseded']
3795,40245083,2578,3834332,2015-07-17 15:55:21,2015-07-17 15:55:30,closed,Demo server,"This PR pulls the code for the ""demo"" `bokeh-server` app into one place and moves towards making the generic app easier to deploy. 
",1,45,['status: superseded']
3796,40197401,2577,3834332,2015-07-17 03:20:23,2015-07-17 15:08:17,closed,editing up to concepts,"major change is IPython -> Jupyter, others are just minor edits.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3797,40184463,2576,3834332,2015-07-16 22:45:16,2015-07-17 15:45:25,closed,Remove mubs,"Remove MUBS code from bokeh server in favor of Blaze maintained blaze server.
",3,10,"['status: accepted', 'type: task', 'reso: completed']"
3798,40141704,2571,3834332,2015-07-16 15:26:16,2015-07-16 16:16:52,closed,Enable test on dev branches.,"@bryevdv 
",0,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3799,40134205,2569,3834332,2015-07-16 14:20:21,2015-07-17 17:53:12,closed,Initial WebGL support,"Supersedes PR #2391

issues: #2036

This puts most of the architecture in place to allow glyphs to render in WebGL.
### Overview of this PR
- Basic architecture for rendering glyphs in GL is in place. Blending works appropriately. 
- The circle and square markers are implemented and look _very_ close to the 2D drawn version (2d-drawn is slightly more crisp/jaggy, gl-drawn has more emphasis on aa, can be tweaked). Additional markers can be added relatively easy if they can be ""geometrically described in GLSL"".
- Markers implement `x`, `y`, `size`/`sradius`, fill and line `color`, fill and line `alpha`, `angle` and `line_width`.
- All (I think) CSS colors are translated to rgba tuples for webgl.
- WebGL can be enabled by setting the plots `webgl` property to `True`, or by adding `?webgl=1` to the page url.
- Adds three examples, one to demonstrate blending, the others to demonstrate drawing many points.
- Docs about webgl uspport and how to enable it.
### Notes
- Glyphs drawn in webgl are drawn on top of other glyphs (because they're rendered to the gl canvas first, which get merged into the 2D canvas after all glyphs have drawn).
- When the transformation is non-linear (e.g. log), the system falls back to 2D rendering.
- Using indices does not work when there are more than 65k data points, due to a a webgl limitation (index buffers can only be UINT16).
- Using indices on IE is broken. This seems to be a bug in IE (`gl_PointSize` is not honored when using `drawElements`). I confirmed that it fails on a minimal example. However, I cannot find any reports that indicate that this is a known issue.
- Typical browsers restrict the number of GL contexts to 16. The oldest context are discarded when a new one is created. So in an example like `file/glyphs.py` half the plots will fail.
### Todo
- [ ] verify this works on Safari (and other browsers?) I tested on FF, Chrome and IE.
- [x] unit tests for color.coffee (but I can also add this in a new PR if Bryan feels like merging this first).
### Up next
- see if we can make plots share a gl context to allow 10+ plots on one page
- more markers
- line glyph
- use memory buffers instead of arrays for our data
- find bokehjs bottlenecks and improve them
- other glyphs (e.g. maps)
",19,37,['status: accepted']
3800,40128537,2568,3834332,2015-07-16 13:25:42,2015-09-13 22:41:06,closed,"Add DevelopShell, ErrorPanel, and Reloading ""widgets""","These are the UI for develop mode, and don't display except
in develop mode.

Fixes #2557 
",1,2,['status: declined']
3801,40128395,2567,3834332,2015-07-16 13:24:14,2015-09-13 22:41:05,closed,Enable create/load/push doc from inside the server process,"This patch enables but does not include the ""bokeh develop""
command.

Changes are:
- http_server unused global var deleted
- create_listening_server factored out of start_simple_server
  so a server can be created without entering the main loop
- add a start() function to start the created server later
- make backbone.init_bokeh work without a request
- add push_data to push a new doc from inside server process
- add find_or_create_docid_by_title to find/create an old doc
",1,2,['status: declined']
3802,40070418,2566,3834332,2015-07-15 21:13:09,2015-07-16 22:26:29,closed,Server cleanup and refactor,"Some of this is covered by #2029
",7,19,"['status: accepted', 'type: task', 'reso: completed']"
3803,39921116,2558,3834332,2015-07-14 14:26:26,2015-07-16 13:24:53,closed,"Add DevelopShell, ErrorPanel, and Reloading ""widgets""","These are the UI for develop mode, and don't display except
in develop mode.

Fixes #2557

The images in here aren't handled quite right; I put them in static/img just to have the originals around, but I'm not using them from there, instead they are inlined as data urls. Guidance needed on the right way to do these.
",1,1,['status: superseded']
3804,39919613,2556,3834332,2015-07-14 14:12:14,2015-07-16 22:27:42,closed,Remove built-in AR code,"Future AR/downsampling work to be based on extensible Bokeh models system so that it can be developed independently.

ping @JosephCottam are there other things that could be moved out for now? FYI for reporting things like canvas size, etc, I think it will be better to make some actual view models that can be exposed back to the server in a consistent way, instead of ad-hoc properties.
",1,3,['status: superseded']
3805,39919503,2555,3834332,2015-07-14 14:11:03,2015-07-14 14:11:24,closed,Remove Built-in AR,"Future AR/downsampling work to be based on extensible Bokeh models system so that it can be developed independently. 

ping @JosephCottam are there other things that could be moved out for now? FYI for reporting things like canvas size, etc, I think it will be better to make some actual view models that can be exposed back to the server in a consistent way, instead of ad-hoc properties. 
",0,15,['status: declined']
3806,39917637,2554,3834332,2015-07-14 13:52:06,2015-07-14 13:52:55,closed,Fix bug on IE (avoid using indices),,1,1,"['status: accepted', 'type: task', 'reso: completed']"
3807,39875296,2553,3834332,2015-07-14 01:59:51,2015-07-16 22:27:17,closed,Remove MUBS,"Blaze server should be part of blaze. 
",1,7,['status: superseded']
3808,39875239,2552,3834332,2015-07-14 01:58:42,2015-07-15 21:12:27,closed,Server cleanup and simplification,,8,15,['status: superseded']
3809,39859910,2551,3834332,2015-07-13 21:42:23,2015-07-16 13:23:28,closed,Enable create/load/push doc from inside the server process,"This patch enables but does not include the ""bokeh develop""
command. To see the code this enables look at https://github.com/bokeh/bokeh/blob/havocp/develop_mode/bokeh/command/server.py

Changes are:
- http_server unused global var deleted
- create_listening_server factored out of start_simple_server
  so a server can be created without entering the main loop
- add a start() function to start the created server later
- make backbone.init_bokeh work without a request
- add push_data to push a new doc from inside server process
- add find_or_create_docid_by_title to find/create an old doc
",3,1,['status: superseded']
3810,39770415,2547,3834332,2015-07-12 22:50:21,2015-07-13 14:28:47,closed,Fix typo in components deprecation message,"Tiny typo correction.
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3811,39768346,2546,3834332,2015-07-12 20:44:10,2015-07-17 18:56:26,closed,"clean up examples, use standard bokeh.io output"," This change removes all the code from to_bokeh dealing with output, since everything can be accomplished with the standard bokeh.io machinery.
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
3812,39768320,2545,3834332,2015-07-12 20:42:44,2015-07-12 20:44:23,closed,"compat example consistency, use bokeh.io only","This change removes all the code from `to_bokeh` dealing with output, since everything can be accomplished with the standard `bokeh.io` machinery. 
",0,5,['status: superseded']
3813,39763459,2543,3834332,2015-07-12 15:15:53,2015-07-22 19:26:19,closed,MPL update,,3,15,"['status: accepted', 'type: task', 'reso: completed']"
3814,39753649,2541,3834332,2015-07-11 22:51:56,2015-07-13 18:30:26,closed,breaking out inline plot examples in user guide into files,"For the sake of easier reuse of these examples here and elsewhere.  Some PEP8 fixes throughout with flake8.
",5,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3815,39753074,2540,3834332,2015-07-11 22:07:10,2015-07-17 23:37:58,closed,add console warning when bokeh-plot fails,"Also some minor style fixes
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
3816,39749564,2538,3834332,2015-07-11 17:47:14,2015-08-25 12:29:32,closed,"short tutorial covering line, multi_line, and timeseries","Uses an open Ebola dataset to plot the cumulative cases during the 2014-2015 Ebola outbreak.

It covers plotting individual lines, and using multi_line to accomplish the same task.

The last example shows how using the high-level charts interface can accomplish the same plot.

Let me know if more documentation and comments are needed.

I've only added 1 notebook file: examples/plotting/notebook/line_multiline_timeseries.ipynb

Note: Bokeh 0.9.1 you can't pass in a list of values into legend for `multi_line`

This is trying to port my R Shiny app into Bokeh: https://chendaniely.shinyapps.io/shinyCountryTimeseries
",8,1,['status: WIP']
3817,39748333,2537,3834332,2015-07-11 16:27:47,2015-08-12 18:53:31,closed,Interactive example: U.S. marriages and divorces chart with tooltips,"I'd like to add my Bokeh chart from [this post](http://www.randalolson.com/2015/06/15/144-years-of-marriage-and-divorce-in-1-chart/) to the example gallery. I think it would be helpful to have a working example of a chart with custom tooltips with real data so people can copy-and-paste and mash in their own data from there.

I've committed the following files:
- bokeh/sampledata/us_marriages_divorces.csv: The data file that I compiled for the project
- bokeh/sampledata/us_marriages_divorces.py: Loads the data file from the `sampledata` module
- examples/interactions/us_marriages_divorces/us_marriages_divorces_interactive.py: Python script that generates the interactive chart with tooltips
- examples/interactions/us_marriages_divorces/us_marriages_divorces_interactive.ipynb: IPython Notebook version of the above
- examples/interactions/us_marriages_divorces/us_marriages_divorces_per_capita.html: The output of the Python script for your review

I've added (probably-more-than-necessary) comments throughout the scripts so the readers have a general idea of what the code blocks are doing.

Thank you for your consideration.
",18,4,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3818,39614567,2531,3834332,2015-07-09 18:40:36,2015-07-17 20:23:12,closed,remove dependancy for un-needed pytz and  Websocket,"https://github.com/bokeh/bokeh/issues/2530
",22,3,['status: accepted']
3819,39297894,2518,3834332,2015-07-06 18:44:20,2015-08-03 13:19:48,closed,Clarify docstrings on TimeSeries,"Prompted by the scipy2015 Bokeh tutorial.  The docstring on `values` for `TimeSeries` is currently quite opaque and difficult to understand.  This change makes things a bit more verbose for the Bokeh novice who just does `TimeSeries?` in an IPython notebook.
",4,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3820,39297673,2517,3834332,2015-07-06 18:42:08,2015-07-06 20:40:10,closed,Fix vanishing patches bug.,"Fix #2514 
",2,1,['status: accepted']
3821,39290477,2516,3834332,2015-07-06 17:22:17,2015-07-10 04:33:31,closed,Several fixes to the release automation,"Fixes #2513 

The problem, as usual, is the first build... but these changes should fix the issues.
",2,2,['status: accepted']
3822,39204994,2512,3834332,2015-07-04 08:53:56,2015-07-10 18:58:16,closed,#2487 - London Postcodes,"This pull request refers to discussion: https://github.com/bokeh/bokeh/issues/2487

Added modules involve the sample data folder:
- london_postcodes.csv
- london_postcodes.py
",5,2,['status: superseded']
3823,39199513,2511,3834332,2015-07-03 23:39:50,2015-07-03 23:40:31,closed,Revert some automated commits,"The issues.py is not working with py3 and I had the spurious files from testing.

Merging now to proceed with the release.
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
3824,39197668,2510,3834332,2015-07-03 21:58:13,2015-07-03 22:18:03,closed,Add 0.9.1 release highlights.,"Merging immediately to start the release.
",0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3825,39175643,2498,3834332,2015-07-03 13:34:13,2015-07-03 14:55:17,closed,Use Bokeh's jQuery for server template,"This hotfix enables examples/charts/server/line_animate.py (and probably others) to render.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
3826,39133066,2497,3834332,2015-07-02 22:47:58,2015-07-17 21:00:27,closed,Improve mouseover information in Texas example.,"For issue #2496.

I am not sure how to handle the metadata information in the notebook.
",4,1,['status: accepted']
3827,39103053,2494,3834332,2015-07-02 16:47:35,2015-07-02 21:31:16,closed,create new data source per glyph for MPL compat,"issues: fixes #2365 

Verified with all current MPL/pandas/ggplot/searborn .py examples. Self contained in mpl.py. 
",2,2,['status: accepted']
3828,39090241,2490,3834332,2015-07-02 14:46:51,2015-08-25 20:05:18,closed,test matrix,"fixes #2486 

@damianavila The automated testing aspect of this script is not working reliably right now, so I've temporarily removed it.  The script now creates all of the different environments, where tests can be run manually (updating bokeh, checking version, running bokeh.test()).

I'm still looking at the second error listed in that issue.
",22,10,['status: accepted']
3829,39059324,2489,3834332,2015-07-02 08:34:35,2015-07-02 14:12:57,closed,Don't overwrite window.$,"This PR supersedes #2437. The real issue wasn't lack of `noConflict(true)`, but one missing `var`. `noConflict(true)` is not needed at all because jquery doesn't modify `window` in a nodejs-like module environment which browserify emulates. I will add tests in another PR, so that this one doesn't stall.
",2,3,['status: accepted']
3830,39015885,2485,3834332,2015-07-01 19:20:40,2015-07-02 14:17:39,closed,elide some unnecessary checks for map plots,"@damianavila I don't have a strong opinion about merging this for 0.9.1, though I do think it is completely safe to do so. 
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3831,39010290,2484,3834332,2015-07-01 18:19:00,2015-07-01 18:19:19,closed,Use the correct extension.,"Just a tiny error preventing upload of the pypi package. Will merge right now because it is a blocker.
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3832,39003626,2483,3834332,2015-07-01 17:02:47,2015-07-03 20:37:26,closed,Open PR for small example (only) updates for 0.9.1,,1,31,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3833,39001379,2482,3834332,2015-07-01 16:39:16,2015-07-01 16:41:40,closed,Deactivate tests before building to avoid huge packages.,"WO this, we have 3x increase in our packages, check the binstar (anaconda.org) to see the huge packages... merging immediately to build the RC packages...
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3834,39001316,2481,3834332,2015-07-01 16:38:39,2015-07-03 20:38:12,closed,Open docs PR for 0.9.1 release,"General PR for docs (only) changes during  0.9.1 freeze. 
",1,8,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3835,38893086,2478,3834332,2015-06-30 15:48:07,2015-06-30 17:54:30,closed,pin seaborn version,"Last seaborn release seems to break compatibility for our violin example.. pining to the working version for now...
",1,2,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3836,38828193,2477,3834332,2015-06-29 23:19:30,2015-07-01 03:25:54,closed,Add HoverTool Callback examples,"This should only be merged after @canavandl's #2386.

(I thought it was better to do a PR against master so that #2386 can be worked on separately and to not conflate the two).
",5,8,"['status: accepted', 'type: task', 'reso: completed']"
3837,38804077,2476,3834332,2015-06-29 18:42:21,2015-07-01 08:13:28,closed,Add BoxSelectTool callback initial commit,"ref issue: #2465 

Add callback on BoxSelectTool pan end event.
",9,9,['status: accepted']
3838,38767792,2474,3834332,2015-06-29 12:20:48,2015-07-01 00:44:09,closed,Fix url-prefix not detected.,"Closes #2245
",1,1,['status: accepted']
3839,38728074,2471,3834332,2015-06-28 16:38:13,2015-07-01 02:39:04,closed,Bug/2376 hover on discontinuous patches,"Fixes #2376 
",4,6,['status: accepted']
3840,38716031,2470,3834332,2015-06-27 21:44:36,2015-07-01 08:22:42,closed,initial stab at extendible validation facility,"issues: closes #602 
",10,17,['status: accepted']
3841,38715994,2469,3834332,2015-06-27 21:40:41,2015-06-27 21:41:49,closed,Feature/602 validation,"closes: issue #602 
",1,16,['status: declined']
3842,38710637,2468,3834332,2015-06-27 14:54:20,2015-07-01 15:47:42,closed,Spectrogram template-ing,"handles ""use new embed.components to have better layout design"" on #2433
",5,7,['status: accepted']
3843,38709799,2467,3834332,2015-06-27 13:49:45,2015-06-27 14:41:55,closed,Add templating with components to spectrogram,,8,89,['status: declined']
3844,38697307,2466,3834332,2015-06-26 23:11:22,2015-06-27 00:17:57,closed,Feature/2368 minor grids,"Add support for minor grid lines

![screen shot 2015-06-26 at 6 07 56 pm](https://cloud.githubusercontent.com/assets/1417520/8388942/b671380a-1c2e-11e5-9cb0-21e26a279f66.png)

Also added an example in the user guide.

![screen shot 2015-06-26 at 6 37 01 pm](https://cloud.githubusercontent.com/assets/1417520/8389215/6502cebc-1c32-11e5-82f3-5a8d7f922ab7.png)
",2,3,['status: accepted']
3845,38683296,2464,3834332,2015-06-26 19:51:36,2015-06-26 22:51:20,closed,patches should work with reversed ranges,"issues: fixes #2366 

Issue was passing `(start, end)` to index search, needs to always be `(min, max)`
",5,1,['status: accepted']
3846,38642194,2461,3834332,2015-06-26 11:57:05,2015-06-27 14:08:36,closed,Make GridPlot.select api to follow Plot.select,"See #2440
",4,2,['status: accepted']
3847,38619209,2460,3834332,2015-06-26 05:49:54,2015-06-26 10:20:24,closed,[Hotfix] Updated template generation for notebooks,,2,1,['status: accepted']
3848,38588488,2457,3834332,2015-06-25 20:16:43,2015-06-30 14:19:05,closed,add example plotting widget with play stop,"Including an example showing widgets together with animations in the plotting interface (using a background thread for updating data)

Related with #2452

Demo:
![startstop](https://cloud.githubusercontent.com/assets/4940549/8364564/d1d8cef6-1b4c-11e5-836b-ab814b19cf9d.gif)
",1,3,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3849,38500342,2449,3834332,2015-06-24 23:58:29,2015-06-27 00:32:31,closed,Bug/text size,"issues: fixes #2316 closes #1960 

fortunately was a simpler fix that I had expected.
",29,23,['status: accepted']
3850,38498658,2447,3834332,2015-06-24 23:29:09,2015-06-25 00:39:07,closed,Add a Gitter chat badge to README.md,"### bokeh/bokeh now has a Chat Room on Gitter

@havocp has just created a chat room. You can visit it here: [https://gitter.im/bokeh/bokeh](https://gitter.im/bokeh/bokeh?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.md:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/bokeh/bokeh?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
",10,1,['status: declined']
3851,38466013,2446,3834332,2015-06-24 17:24:14,2015-06-25 19:21:38,closed,Task/standardize callback interface,"ref issue #2412 and PR #2386 

Refactor of callback.coffee so that the execute method has a standardized arguments

execute(cb_obj, cb_data)

where cb_obj is the object that triggered the callback and cb_data is an optional arg that contains any associated data (e.g. mouse coordinates of a HoverTool callback)
",2,5,['status: accepted']
3852,38459304,2445,3834332,2015-06-24 16:12:05,2015-07-01 15:31:33,closed,Prevent non-compliant JSON generation,"~~Resolves Issue https://github.com/bokeh/bokeh/issues/2392~~
Just solve one of the possible generation of the ""white screen""
",17,33,"['type: bug', 'status: accepted', 'reso: completed']"
3853,38355690,2437,3834332,2015-06-23 16:24:55,2015-07-02 08:35:47,closed,Added $.noConflict(),"Resolved: https://github.com/bokeh/bokeh/issues/2436
",17,7,['status: superseded']
3854,38339175,2435,3834332,2015-06-23 13:57:25,2015-06-25 01:18:22,closed,Have datarage1d respect user bounds,"issues: fixes #2431 

Quick fix for a fairly severe annoyance
",3,5,['status: accepted']
3855,38334513,2434,3834332,2015-06-23 13:12:24,2015-06-27 14:37:57,closed,Spectrogram,"issues: closes #2433 

This is a quick little PR to make the spectrogram usable again. This brings the CPU usage reliably down to < 50% on Chrome on OS X, making it suitable to demo at conference tables, etc. 

ping @SaraSchnadt @birdsarah I'd like to take this opportunity to also use the new `embed.components` to remove the `vplot`, `hplot` etc and just style this in a visually attractive custom jinja template. Is that something one or both of you could take a quick look at? 
",2,3,['status: accepted']
3856,38277361,2428,3834332,2015-06-22 21:15:26,2015-06-25 18:38:48,closed,Task/expose image level parameter,"ref issue #2040 

This PR exposes a level attr to the Image, ImageURL and ImageRGBA glyphs in order to allow the user to change the default level (from ""underlay""), in order to potentially put the image below the grid.

I chose to limit the levels to: image, underlay, and glyph. Images with levels set to overlay or tool seemed to only demonstrated effects that were undesireable (i.e. zooming an image with level='overlay' caused the image to expand over the axes). If anyone can come up with a situation where this behavior is ideal, I can change the PR.
",4,5,['status: accepted']
3857,38216265,2425,3834332,2015-06-22 10:05:21,2015-06-25 14:36:40,closed,Stop datetime scalar transformation throwing away microsecond ,"See issue #2416

I am not sure if the protocol can handle decimal places (whether we should use `obj.microsecond / 1000.` or `obj.microsecond / 1000`), but since `isinstance(obj, dt.time)` line already used the float way, I will do the same.
",21,3,['status: accepted']
3858,38166550,2422,3834332,2015-06-20 11:14:31,2015-06-22 12:10:13,closed,add info about configuring sample data location,"issues: closes #2313 
",1,2,['status: accepted']
3859,38157214,2421,3834332,2015-06-19 23:39:13,2015-06-26 01:05:44,closed,Quasi-complete automation,"This is on top of #2420

As I said before, the release process detailed in BEP-2 can be splitted in two parts.

The first part deals with:

versions in bokehjs
CHANGELOG modifications
tagging

This PR makes this first part fully automated.

The same reminder as #2420:

This is WIP, I still have to test it... and test it includes making a new whole project and simulate a release (there is no other way to do it without corrupting the bokeh history or breaking things).

I will let you know when the test is complete.

Finally, after #2420 and this is done, the release process will be something like:

``` shell
./deploy -p 0.9.0 -r 0.9.1
```

where -p is the previous release and -r the actual release...

and you drink some :coffee: or some :beers: wheres everything is done wo human intervention.

OK, I am laying you... you still have to:
1. write the <version>.rst with the higlights for the release
2. make fiddle updates (next step to automate)
3. write the ANN email

1 and 3 are probably best done by a a human being... and I would like to keep it in that way to give some ""nice/human"" words to our user...
",3,6,"['status: accepted', 'type: task', 'reso: completed']"
3860,38156759,2420,3834332,2015-06-19 23:27:44,2015-06-26 01:05:10,closed,Build enhancements,"The release process detailed in BEP-2 can be splitted in two parts.

The first part deals with:
- versions in bokehjs
- CHANGELOG modifications 
- tagging

The second part involves:
- building the packages
- upoading pkgs to pypi and binstar
- publish docs
- upload Bokeh JS and CSS to a CDN
- upload bokehjs to npm.org
- Fiddles
- ANN

This PR automate the second part, except for the Fiddles (I am researching into use codepen to upload scripts by REST) - and the ANN (which is a manual task, although maybe we can automate it later too :wink:)

This is WIP, I still have to test it... and test it includes making a new whole project and simulate a release (there is no other way to do it without corrupting the bokeh history or breaking things). 

I will let you know when the test is complete.
",1,4,"['status: accepted', 'type: task', 'reso: completed']"
3861,37845611,2411,3834332,2015-06-16 21:49:53,2015-07-01 15:44:57,closed,Task/add range update callback,"ref issue: #2346 

This PR adds callbacks to range objects that are fired on range changes.

todo:
- consider returning simpler cb_obj than ""@model""
- requires better description of cb_obj in callback attr helpstring.
- probably style fixes
",10,6,"['type: feature', 'status: accepted', 'reso: completed']"
3862,37844364,2410,3834332,2015-06-16 21:35:57,2015-06-25 18:47:46,closed,Allow users to specify Jinja2 template variables,"If you'd like to use this but would prefer I write a test first or make some stylistic changes let me know. Also feel free to shoot it down if you feel it's unnecessary.
",10,3,"['type: feature', 'status: accepted', 'reso: completed']"
3863,37728063,2407,3834332,2015-06-15 19:47:13,2015-06-15 19:47:17,closed,Line too long,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
3864,37723442,2406,3834332,2015-06-15 18:56:17,2015-06-15 18:56:19,closed,Added Document support alongside PlotObject,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
3865,37719628,2405,3834332,2015-06-15 18:15:03,2015-06-26 01:13:32,closed,Error prompt,"Closes #2392
",10,2,['status: declined']
3866,37716765,2404,3834332,2015-06-15 17:44:14,2015-06-15 18:14:44,closed,Added error prompt wth message,"Refers to issue https://github.com/bokeh/bokeh/issues/2392. Adds an error prompt that instructs user to check console or refresh page.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3867,37716059,2403,3834332,2015-06-15 17:35:53,2015-06-15 17:35:58,closed,"Added test, improved conditionals",,0,1,"['status: accepted', 'type: task', 'reso: completed']"
3868,37710120,2401,3834332,2015-06-15 16:29:04,2015-06-19 23:40:12,closed,Render multiple plots,"Closes: #2348 
",24,19,['status: accepted']
3869,37710000,2400,3834332,2015-06-15 16:27:53,2015-06-15 16:28:08,closed,Extend embed.component to let multiple objects be rendered in multiple divs,,0,5,"['status: accepted', 'type: task', 'reso: completed']"
3870,37707396,2399,3834332,2015-06-15 16:01:30,2015-06-24 08:36:58,closed,plot init callback,"Add callback hook when a plot is initialized

ref: #2346 
",11,4,['status: declined']
3871,37506223,2394,3834332,2015-06-11 20:40:59,2015-06-15 16:30:06,closed,Extend embed.component to let multiple objects be rendered in multiple divs,"References feature request https://github.com/bokeh/bokeh/issues/2348. 

Allows a single `PlotObject`, list of `PlotObject`, dictionary of keys and `PlotObject`, and tuples of `PlotObject` to be passed into component function, and returns a correlating data structure composed of script/div pairs. 
",7,5,['status: superseded']
3872,37493918,2393,3834332,2015-06-11 18:29:16,2015-06-13 21:35:08,closed,Fix bug in renderer ordering,"issues: closes #2365 

The order of ""glyph"" renderers wasn't being preserved due to a bug in the order that they were called (they were called by the order their unique identifier renderer.model.id versus their index renderer.id).
",6,1,['status: accepted']
3873,37464722,2391,3834332,2015-06-11 13:46:03,2015-07-16 14:01:23,closed,Initial WebGL support (take 4),"issues: #2036

This puts most of the architecture in place to allow glyphs to render in WebGL.
### Todo
- [x] base architecture
- [x] fix plot._paint_empty to draw borders and have clipping done correctly
- [x] check that blending works ok in different situations (e.g. when rendering both gl and normal glyphs)
- [x] do not render in gl when the coordinate system is not isometric
- [x] allow turning webgl off/on using an environment variable. Default False. Settable in JS as `window.BOKEH_WEBGL`.
- [x] circle glyph use correct size, color, etc.
- [x] make work for selections 
- [x] make sure that things work ok on FF
- [x] make sure that things work ok on Chrome
- [x] make sure that things work ok on IE
- [ ] make sure that things work ok on Safari
- [x] use indices
- [x] radius-in-data-units for circle glyph
- [x] see if boilerplate code can be put in one place (instead on each glyph)
- [x] <s>combine multiple lines in one buffer (i.e. gl collections), could be a separate PR</s>
- [x] <s>On Firefox, everything look blurry: interpolation when blitted into 
  the 2D canvas</s>
- [x] implement `angles` for marker glyphs (need something different than circle in that case :))
- [x] oh crap, we need something to turn colors into RGBA tuples ... I have a hex2rgb, but also `rgb(...)`, and 'red', 'violet', etc.
- [x] documentation
- [x] weird all-sprites-become-1px-when-one-get-clipped behavior on IE
- [x] look into `premultipliedAlpha` canvas/context attribute for blending
- [x] maps_cities.py appears slightly different (on webgl the circles have a small edge)
### Overview of this PR
- Basic architecture for rendering glyphs in GL is in place. Blending works appropriately. 
- The circle and square markers are implemented and look _very_ close to the 2D drawn version (2d-drawn is slightly more crisp/jaggy, gl-drawn has more emphasis on aa, can be tweaked). Additional markers can be added relatively easy if they can be ""geometrically described in GLSL"".
- Markers implement `x`, `y`, `size`/`sradius`, fill and line `color`, fill and line `alpha`, `angle`.
- All (I think) CSS colors are translated to rgba tuples for webgl.
- WebGL can be enabled by setting the plots `webgl` property to `True`, or by adding `?webgl=1` to the page url.
- Add three examples, one to demonstrate blending, the others to demonstrate drawing many points.
- Docs about this.
### Notes
- Glyphs drawn in webgl are drawn on top of other glyphs (because they're rendered to the gl canvas first, which get merged into the 2D canvas after all glyphs have drawn).
- When the transformation is non-linear (e.g. log), the system falls back to 2D rendering.
- Using indices does not work when there are more than 65k data points, due to a a webgl limitation (index buffers can only be UINT16).
- Using indices on IE is broken. This seems to be a bug in IE (`gl_PointSize` is not honored when using `drawElements`). I confirmed that it fails on a minimal example. However, I cannot find any reports that indicate that this is a known issue.
- Typical browsers restrict the number of GL contexts to 16. The oldest context are discarded when a new one is created. So in an example like `file/glyphs.py` half the plots will fail.
### Up next
- see if we can make plots share a gl context to allow 10+ plots on one page
- more markers
- line glyph
- use memory buffers instead of arrays for our data
- find bokehjs bottlenecks and improve them
- other glyphs (e.g. maps)
",16,33,['status: superseded']
3874,37417194,2390,3834332,2015-06-10 23:56:18,2015-07-01 08:24:40,closed,Slider demo - animated bubble,"Things to consider:
- [x] data needs to be put on S3 and downloaded with sampledata.download
- [x] notebook does not explain where data came from
- [x] there isn't a plain python script version of this
- [x]  includes custom templating and paired down css - uses new template_variables option on file_html
",9,13,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3875,37315663,2386,3834332,2015-06-10 00:55:42,2015-06-30 22:39:29,closed,Task/add hovertool callback,"ref issue #2346 

I added callback support to the HoverTool. I'd like feedback on:

The use case requirements for a hovertool (as I imagine it), is a bit different than a select tool, in that the callback needs to pass both the identity of the renderer that's being hovered over AND the cursor coordinates. This information isn't all contained inside the HoverToolView ""this"" obj on the JS side, so (based on @bryevdv 's recommendation), I'm passing an arbitary object back to the python side that contains: 
- the index of the renderer in the data source
- the x of the cursor in data space
- the y of the cursor in data space
- the x of the cursor in screen (canvas) space 
- the y of the cursor in screen (canvas) space

Is this sufficient/too much information/missing information that's important on a hovertool callback? ( @birdsarah , @fpliger )
",28,12,['status: accepted']
3876,37294104,2384,3834332,2015-06-09 20:08:42,2015-06-10 00:44:35,closed,support map styles for GMapPlot,"issues: closes #2354
",8,5,['status: accepted']
3877,37276754,2383,3834332,2015-06-09 17:11:27,2015-06-09 18:38:00,closed,add tab completion for splattable lists,"issues: closes #2335
",4,1,['status: accepted']
3878,37248111,2382,3834332,2015-06-09 12:34:54,2015-10-05 18:30:00,closed,CSV Endpoint For ColumnDataSources,"I've added a CSV endpoint for ColumnDataSources. The URL is the same as the one for retrieving JSON, except an extra '/' and a `<format>` can be added to the end:

```
/bokeh/bb/<docid>/<typename>/<id>/<format>
```
",10,3,['status: declined']
3879,36938304,2364,3834332,2015-06-04 14:15:57,2015-06-04 19:07:33,closed,Add alpha to patches.,"Closes #1754
",1,1,['status: accepted']
3880,36899962,2362,3834332,2015-06-04 03:43:27,2015-06-04 19:08:43,closed,Remove additional point in version specification.,"Closes #2303
",1,1,['status: accepted']
3881,36870722,2361,3834332,2015-06-03 19:50:51,2015-06-04 19:43:46,closed,Fix bug in outlier attribute handling,"ref issue: #2338 

When boxplot_builder.py would check the self.outliers attribute (default=True) to see if it had to change the y_range of the figure to include outlier points as scatters, there was no check to see if there existed any outlier points. This caused min to be evaluated over an empty list in the case that there were no outliers.

I didn't add/modify any tests, let me know if/what I should do about that.
",2,2,['status: accepted']
3882,36770540,2360,3834332,2015-06-02 20:29:19,2015-06-03 12:53:04,closed,Update tools.py to add dimensions property to CrosshairTool,"Addresses #2357. The online documentation already says that the property ought to exist, and therefore doesn't need to be changed.
",3,2,['status: accepted']
3883,36749755,2358,3834332,2015-06-02 16:48:56,2015-06-04 19:42:56,closed,Added palettes example to gallery,"Based on better documentation of palettes in PR #2355, I added a gallery example of a gridplot of containing area plots demonstrating all of the palettes in bokeh.palettes.

I'm aware of the concerns about adding more examples to ""the pile"" (ref issues: #1032, #1128, #1892) without dividing the gallery into sections, but I think this is a fairly necessary example.
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: examples']"
3884,36695313,2356,3834332,2015-06-02 05:16:18,2015-06-02 16:46:58,closed,force glyphs to always beginPath before rendering,"In some very specific cases missing beginPath leads to weird behaviours. For instance, creating a patch glyph with an empty source right after a line glyph would create a patch under all the line.
",1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
3885,36690622,2355,3834332,2015-06-02 02:56:14,2015-06-02 16:43:34,closed,Add palette summary to user guide,"ref issues #1873, #2218 

Added a description of palettes to the User Guide. Let me know if I need to change anything, I'm still trying to get the ""voice"" of your docs.
",6,4,['status: accepted']
3886,36362839,2343,3834332,2015-05-28 00:43:05,2015-05-28 02:42:43,closed,Keep output HTML filename consistent with exercise name.,"Should reduce confusion for people just getting started.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3887,36337978,2342,3834332,2015-05-27 19:10:49,2015-05-28 03:02:00,closed,Remove sbt-based build system,"This should have been done before 0.9.0.
",1,1,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3888,36325259,2339,3834332,2015-05-27 16:57:38,2015-05-27 18:53:13,closed,doc fix: correcting path error in chart-type gallery examples,"issues: fixes #2336

The main_gallery.json file has incorrect paths for all chart-type gallery examples on the bokeh.pydata.org site. As such, none of the chart examples currently work.

The current path for a chart example is:
/../../examples/charts/cat_heatmap.py’

The correct path is:
/../../examples/charts/file/cat_heatmap.py
",1,3,['status: accepted']
3889,36312582,2337,3834332,2015-05-27 14:56:51,2015-05-28 03:04:07,closed,Change binstar.org references to anaconda.org references.,"Will merge ASAP we have the indication to go live with the change...
Then we need to redeploy the docs...
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3890,36055177,2331,3834332,2015-05-22 18:06:49,2015-05-28 03:02:27,closed,Crosses now display correctly in DiamondCross.,"issues: fixes #2329 
",1,1,['status: accepted']
3891,35839199,2322,3834332,2015-05-20 14:44:35,2015-05-20 16:46:18,closed,[doc] changed `tap_select` to `tap`,"see #1926
",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3892,35817955,2320,3834332,2015-05-20 10:31:33,2015-05-20 16:46:52,closed,remove extra whitespace,"Small self contained code cleaning
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3893,35705452,2317,3834332,2015-05-19 08:14:29,2015-06-19 13:54:39,closed,Put server into its own distutils distribution,"This PR creates a ""server"" subdirectory of the bokeh distutils project, which houses a setup.py that can be used to create a distutils distribution named `bokeh_server`.  It removes the `server` subdirectory of the bokeh package.  If this pull request is merged, when the `bokeh` library is installed, the server component will no longer be installed.  To install the server component, a user will need to install the `bokeh_server` distribution. 

Notable changes as a result:
- A new directory has been added to the `bokeh` package named `static`.  This
  is where generated static files will be dropped when `--install_js` is used as
  an argument to bokeh's `setup.py`.  These files used to be copied into
  `bokeh.server/static`, but the directory no longer exists.
- The `bokeh_server` package has been changed to look for the generated static
  files in `bokeh/static`.
- Currently the `bokeh_server` distribution relies on `setuptools` for both
  its `package_data` feature and its `console_scripts` feature (the `bokeh-server`
  script is now a console script).  No scripts are installed now when the `bokeh`
  distribution is installed; only when `bokeh_server` is installed.
",6,7,['status: WIP']
3894,35665243,2312,3834332,2015-05-18 19:27:01,2015-05-18 20:50:08,closed,Fix broken link in help tool.,"fixes : issues: #2311 
",1,1,['status: accepted']
3895,35651236,2309,3834332,2015-05-18 16:38:11,2015-05-18 19:55:48,closed,User Guide improvements/typo corrections,,2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3896,35646408,2308,3834332,2015-05-18 15:46:12,2015-05-20 18:28:16,closed,Improve some tooling around version reporting,,6,4,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
3897,35638866,2307,3834332,2015-05-18 14:30:08,2015-05-19 12:49:39,closed,BokehJS API fixes,"issues: fixes #2306 
",1,3,['status: accepted']
3898,35633122,2305,3834332,2015-05-18 13:29:01,2015-06-26 01:03:37,closed,Server section on User Guide,"Following #2257 to add missing server sections:
- [x] Authentication/Authorization/Publishing chapter
- ~~[ ] Minimal deployment/server chapter~~
- [x] Add ""Streaming Data"" chapter
- ~~[ ] Add ""Handling large data"" chapter~~
",8,5,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3899,35529457,2302,3834332,2015-05-15 16:38:56,2015-05-18 14:25:38,closed,updating bokeh server image,,2,1,"['status: accepted', 'type: task', 'reso: completed']"
3900,35520709,2301,3834332,2015-05-15 15:00:42,2015-05-15 15:32:57,closed,Release 0.9.0,"Just the release PR changing version numbers and modifying the changelog and docs with the new info.
",1,4,"['status: accepted', 'type: task', 'reso: completed']"
3901,35504131,2300,3834332,2015-05-15 11:09:22,2015-06-03 20:14:31,closed,Improve test matrix,"Issues: fixes #2282 
",4,4,['status: accepted']
3902,35470564,2298,3834332,2015-05-14 22:52:00,2015-05-15 11:41:42,closed,Add info in the warn message about some missing dependecies.," Also some changes to make is more readable.
",2,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed', 'tag: component: server']"
3903,35441501,2296,3834332,2015-05-14 17:16:11,2015-05-15 12:38:20,closed,Remove '*' imports from examples.,"Make imports more explicit
",3,4,"['status: accepted', 'type: task', 'reso: completed']"
3904,35353766,2286,3834332,2015-05-13 18:02:00,2015-05-14 15:12:24,closed,0.9 release hotfixes,"A PR for all of the example bugs listed in issues : #2278 
",2,16,['status: accepted']
3905,35352106,2285,3834332,2015-05-13 17:44:27,2015-05-15 11:40:28,closed,setup.py: Note that this also works with `develop`.,,3,1,"['status: accepted', 'type: task', 'reso: completed']"
3906,35281126,2280,3834332,2015-05-12 23:24:45,2015-05-13 01:11:22,closed,DOC: Grammar fix for intro to Models,"Just noticed this and thought it might be better to put it on the evolving docs branch than master. If you want me to move it let me know. Sorry to open a PR, it just took longer to write an issue. :)
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3907,35209741,2276,3834332,2015-05-12 09:51:48,2015-05-12 14:13:21,closed,Fix broken hbox,"Issues: fixes #2269 

Fix hbox rendering issue using newer `display: flex;` rule so multiple (older) definitions don't clash for random browsers
",1,3,['status: accepted']
3908,35207642,2275,3834332,2015-05-12 09:26:00,2015-05-15 12:55:38,closed,initial commit of color_sliders.py,"I've changed the name of the script to better match your naming conventions. At my end it's been called colorPicker.py so far*.

I tested the script on my system and it runs just fine. I get a warning:  
    `No handlers could be found for logger ""bokeh.resources""`  
but this seems to be harmless.

The only big difference that I can see in terms of code style is my inclusion of a namespace for bokeh.plotting  e.g  
    `from bokeh import plotting as bkplt`  
    `source = bkplt.ColumnDataSource(# etc etc`  
which I use because it seems more explicit to me. Happy to change if you would prefer absolute consistency.

*TBH I think the new name is more descriptive - color picking was always the intended end goal of this script, but I haven't yet had time to devote to figuring out a way to get the two plots to interact!
",12,7,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
3909,35157523,2273,3834332,2015-05-11 18:56:51,2015-05-11 20:59:47,closed,add callback on selection changes,"issues: closes #2178
",4,1,['status: accepted']
3910,35151546,2272,3834332,2015-05-11 17:51:13,2015-05-12 12:54:03,closed,Delete first build to avoid uploading to binstar.,"Fixes #2105, just deleting the first build of the bokeh...
",3,1,['status: accepted']
3911,35139936,2271,3834332,2015-05-11 15:42:47,2015-07-17 20:24:50,closed,mpl - accept logscaled axes,"bokeh will fail with an `UnboundLocalError` for `laxis` if it is fed a plot with log-scaled axes.  This fixes that.
",14,2,['status: superseded']
3912,35085427,2267,3834332,2015-05-10 17:06:24,2015-05-11 14:41:32,closed,Fix boxplot chart palette,"Issues: fix #2158 
",1,3,['status: accepted']
3913,35027781,2265,3834332,2015-05-08 17:13:18,2015-05-08 21:30:11,closed,"Replace broken fancy legends with generic legends for arc, wedge, and","… annular wedge.

issues: fixes #2262 
",0,1,['status: accepted']
3914,34957261,2263,3834332,2015-05-07 20:54:12,2015-05-12 14:14:33,closed,Change Dialog widget to support BaseBox content and list of Buttons,"Issues: fixes #2251 
",2,5,['status: accepted']
3915,34947805,2261,3834332,2015-05-07 19:07:56,2015-05-11 12:18:15,closed,fix two small typos,"possibly to easily -> possible to easily, having all many language options -> having many language options
",2,5,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3916,34940461,2260,3834332,2015-05-07 17:49:15,2016-09-19 17:39:29,closed,Add check for user supplied data source and literal data arrays,,10,1,['status: declined']
3917,34929235,2258,3834332,2015-05-07 15:45:05,2015-05-11 12:28:47,closed,Pin binstar until binstar build fix the platform path problem.,"Just that, I will report later the issue in the binstar repo...
",3,3,"['type: bug', 'status: accepted', 'reso: completed']"
3918,34924640,2257,3834332,2015-05-07 15:02:44,2015-05-15 15:12:08,closed,Follow-on for User Guide,"Test deploy here: http://bokeh.pydata.org/en/test/docs/user_guide.html
## Tasks
- [ ] Finish styling chapter 100%
- [ ] Widgets subsection in ""adding interactions"" chapter
- [ ] Minimal deployment/server chapter
- [ ] Add ""Streaming Data"" chapter
- [ ] Add ""Handling large data"" chapter
",0,26,"['status: accepted', 'type: task', 'reso: completed']"
3919,34919791,2256,3834332,2015-05-07 14:17:02,2015-05-07 14:19:06,closed,Use another env variable is case of weird previous use of the i var.,"This is another test... locally the script is working so it does not make sense that do not work on TravisCI unless there is something weird with the `i` var... I don't think so, but let's try this... it is not harmful because the var now have a better name.
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3920,34911168,2254,3834332,2015-05-07 12:41:19,2015-05-07 12:46:01,closed,"Revert ""Run binstar upload in the correct 'scripts' location""","Reverts bokeh/bokeh#2253
Because the packages are generated at the top directory:

Travislog:

```
Uploading: osx-64
Using binstar api site https://api.binstar.org
[BinstarError] file scripts/osx-64/bokeh*61605853*.tar.bz2 does not exist 
Uploading: linux-64
Using binstar api site https://api.binstar.org
[BinstarError] file scripts/linux-64/bokeh*61605853*.tar.bz2 does not exist 
Uploading: win-64
Using binstar api site https://api.binstar.org
[BinstarError] file scripts/win-64/bokeh*61605853*.tar.bz2 does not exist 
Uploading: linux-32
Using binstar api site https://api.binstar.org
[BinstarError] file scripts/linux-32/bokeh*61605853*.tar.bz2 does not exist 
Uploading: win-32
Using binstar api site https://api.binstar.org
[BinstarError] file scripts/win-32/bokeh*61605853*.tar.bz2 does not exist 
Adding '--build_js' required for 'sdist'
Building BokehJS... Success!
```
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
3921,34906446,2253,3834332,2015-05-07 11:33:06,2015-05-07 11:41:03,closed,Run binstar upload in the correct 'scripts' location,"This should fix the issue.
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3922,34851992,2250,3834332,2015-05-06 19:37:05,2015-05-28 03:00:18,closed,Support Input of Color Tuple for Figure Glyphs,"Fixes bokeh/bokeh#2161.

Outstanding issues are to add additional tests, which depend on whether the [javascript side](https://github.com/bokeh/bokeh/blob/master/bokehjs/src/coffee/common/properties.coffee#L123) should be updated to support the color tuple. To get this working I had to convert the tuple to Hex in the ColorSpec's to_dict method. Otherwise, I get the following error in the browser: `color property 'line_color' given invalid value: rgb(100, 100, 100)`.
",28,15,['status: accepted']
3923,34846962,2249,3834332,2015-05-06 18:43:32,2015-05-07 01:39:15,closed,Some miscellaneous build/test improvements,"issues: fixes #1751 fixes #2146 
",2,9,['status: accepted']
3924,34826417,2246,3834332,2015-05-06 15:08:30,2015-05-06 16:01:23,closed,Update DataRange1d that wasn't updated on notebook after last API change,"Old DataRange1D interface was not supported anymore
",1,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
3925,34645775,2243,3834332,2015-05-04 15:16:38,2015-05-04 20:03:58,closed,Delist gevent as a dependency.,"issues: fixes #2241 
",2,1,['status: accepted']
3926,34645204,2242,3834332,2015-05-04 15:09:47,2015-06-10 19:57:34,closed,Update model on server when the plot is panned/zoomed.,"This addition propagates pan/zoom changes of the plot in the browser to the server.
It provides possibility to update the plot data according to the current x,y ranges.
Possible uses: dynamic plotting, level of detail etc.
Disadvantages: data is send during pan, maybe pan:end would be a better place.
",12,1,['status: declined']
3927,34548403,2238,3834332,2015-05-01 16:33:44,2015-05-01 20:19:06,closed,avoid layout breaking when simpleapp managing buttons,"Avoid layout breaking when simpleapp managing buttons (or any other widget without `value` attribute)
",0,1,"['type: bug', 'status: accepted', 'reso: completed']"
3928,34544349,2237,3834332,2015-05-01 15:35:00,2015-05-01 15:35:09,closed,Update README.md,"fix broken badges (switch to shields.io)
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3929,34376002,2236,3834332,2015-04-29 15:40:30,2015-06-26 01:02:13,closed,add debug flag to enable source maps,"issues: closes #2234
",14,7,['status: accepted']
3930,34375982,2235,3834332,2015-04-29 15:40:17,2015-04-29 17:14:59,closed,remove float on vbox div,"issues: fixes #2233
",0,1,['status: accepted']
3931,34289958,2232,3834332,2015-04-28 17:18:06,2015-04-28 18:12:21,closed,fix scope/context issue breaking multiselect,"issue: fixes #2231 
",1,1,['status: accepted']
3932,34239871,2228,3834332,2015-04-28 07:24:25,2015-04-28 13:25:40,closed,Update quickstart.rst,"fix error in quickstart code example
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3933,34219173,2227,3834332,2015-04-27 23:01:55,2015-06-11 13:47:39,closed,Webgl - take 3,"Heavy WIP. Compared to my earlier PR, this keeps a visible 2D canvas and an invisible webgl context. It also uses gloo.js (also a WIP) instead of vispy.js, making for easier dependencies.
",15,15,['status: superseded']
3934,34198368,2226,3834332,2015-04-27 18:51:58,2015-04-28 13:26:10,closed,bypass blaze if charts example fails,"if example fails importing blaze we switch to pandas to avoid making all tests fail...
",3,3,"['reso: working as intended', 'status: superseded', 'type: task']"
3935,34189941,2225,3834332,2015-04-27 17:15:18,2015-04-30 15:07:55,closed,Create script that checks for dev and docs dependencies.,"issues: fixes #2224 
",2,5,['status: accepted']
3936,34171488,2223,3834332,2015-04-27 14:02:53,2015-04-29 17:20:55,closed,fix broken selections,"Issues: fix #2217 
",1,6,['status: accepted']
3937,34113552,2220,3834332,2015-04-25 21:36:18,2015-04-25 21:36:22,closed,Update README.md,"Use better URL for main docs, add Vine and YT links
",0,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3938,33995735,2215,3834332,2015-04-23 20:56:07,2015-04-24 01:33:21,closed,Swap all URLs to be main registry.npmjs.org repo,"Per conversation in #2196.
",2,1,['status: accepted']
3939,33972511,2214,3834332,2015-04-23 16:26:13,2015-06-26 01:00:53,closed,Feature #2213: bokeh-server with HTTPS enabled,"Addresses #2213 

Tested implementation of a bokeh-server running with HTTPS enabled.

To run:

```
bokeh-server --https --https-certfile=/path/to/certfile.crt --https-keyfile=/path/to/keyfile.pem --script script_name.py
```

To be clear: This has not been successfully tested to work in conjunction with Session, just using --script works however...

What I didn't manage to do was to make session.py compatible with this because I don't think urllib3/requests was configured to know any certificate authorities (including the CERN certificate authority, the one which was used for testing) even after consulting the requests documentation and passing the exact same paths to the certificates. When running a test, a session was started from one computer to the same computer. One process ran the session.py session, which connected to the bokeh-server instance. It so happened that the session.py session was running in a python interpreter created by mod_wsgi under Apache. The SSL connection failed based on an error claiming that the certificates were invalid (which they're clearly not). Our project diverted to using the --script option on bokeh-server because as mentioned somewhere, it removes unnecessary networking and speeds-up the entire solution.
",7,5,['status: accepted']
3940,33950110,2211,3834332,2015-04-23 12:27:01,2015-04-30 14:31:05,closed,Make relative dev work again,"continuing from #2210

This makes `relative-dev` work again. Basically, in this mode we now simply use the `bokeh.js` and `bokeh.css` (the composed, but not-minified versions).

Also, since the last time I touched the gulp code, we now load the js from `bokehjs/build` instead of `bokeh/server/static`, which means that `gulp watch` does not need the install step.

Is this the way to move forward with this?
",13,4,"['status: accepted', 'type: task', 'tag: regression', 'reso: completed', 'tag: component: bokehjs']"
3941,33946972,2210,3834332,2015-04-23 11:38:26,2015-04-23 11:46:12,closed,"docs should say to use ""relative"" for incremental builds","The docs say to use `BOKEH_RESOURCES=relative-dev` to do incremental builds. But this fails, because there will be a `<script>` tag to include ""/js/vendor/require.js"", which does not exist.

Everything works with just ""relative"" though.

Perhaps more docs need updating, or maybe deprecate the `relative-dev` option?
",3,1,['status: superseded']
3942,33880991,2207,3834332,2015-04-22 17:24:18,2015-05-06 17:11:38,closed,User Guide Rewrite,"Deploying these periodically to:

http://bokeh.pydata.org/en/test/docs/user_guide.html
",3,90,"['type: feature', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3943,33608465,2186,3834332,2015-04-18 20:42:45,2015-04-20 15:27:06,closed,Expose desired_num_ticks on tickers,"issues: fixes #2185

Exposes `desired_num_ticks` on ticker objects to allow users to suggest
a target number of ticks. Adds an example of use in:

https://github.com/bokeh/bokeh/blob/master/examples/plotting/file/line.py
",18,1,['status: accepted']
3944,33579936,2183,3834332,2015-04-17 20:35:40,2015-04-20 20:41:37,closed,Bug/marker_angle_prop,"issues: fixes #2066 

Add angle property to markers.
",2,8,['status: accepted']
3945,33475374,2180,3834332,2015-04-16 17:47:11,2015-04-16 19:02:13,closed,Add shrinkwrap to lock to versions and upgrade jsdom,"This adds the `npm shrinkwrap --dev` output to ensure that versions are installed as expected.  It also upgrades to jsdom@5.x to avoid a bug that was apparently present in 4.5.1.
",1,3,"['type: bug', 'status: accepted', 'reso: completed']"
3946,33364482,2177,3834332,2015-04-15 15:12:00,2015-05-14 11:54:11,closed,Adding webgl to Bokehjs,"issues: a first step towards #2036

This a WIP. Right now everything is still rendered to the canvas, except that it's now invisible and at the very end drawn in a visible webgl canvas. Plan is to start by making one glyph (line) able to draw in the webgl canvas. From there on move to other glyphs in subsequent PR's.

This PR depends on #2141 (and may need a rebase once that is merged).
",1,9,['status: superseded']
3947,33330143,2176,3834332,2015-04-15 07:51:28,2015-06-08 20:27:01,closed,Fix error: unable to parse uri to data,"I was trying to squash the typical ""mbs.views module could not be imported. This means that you can't use the blaze functionality of bokeh..."" message. This required multiuserblaze to be installed, which in turn required PyTables, which required HDF5.

After all that, more messages came up complaining ""Unable to parse uri to data resource..."" and I traced the error to this file. After making the change here, these messages went away:

```
ERROR:_mbs_configuration:Unable to parse uri to data resource: /usr/local/lib/python2.7/site-packages/bokeh/server/tests/data/array.hdf5
/usr/local/lib/python2.7/site-packages/bokeh/server/blaze/config.py:52: UserWarning: Error loading hdfstore for array. Your version of Blaze is too old, or incompatible
""Error loading hdfstore for array. Your version of Blaze is too old, or incompatible""
```

This error had nothing to do with the version of Blaze, which was exactly what was required (0.7.2).
",13,1,"['type: bug', 'status: declined', 'reso: completed']"
3948,33316094,2175,3834332,2015-04-15 01:40:54,2015-04-20 16:32:30,closed,"Add a simple ""callback"" action","issues: closes #2174 

Accepts a dictionary that maps plot objects to names that will be available to the JS code, as well as a snippet of JS code that serves as the function body. The function also receives a ""value"" parameter,
which is, for instance, the new value of a widget when it is updated.
",48,16,['status: accepted']
3949,33256447,2171,3834332,2015-04-14 13:23:39,2015-04-21 11:25:15,closed,Improve hit_testing and selectors/inspectors,"Issues: fixes #1486 

This outdates #2085 (that PR started before the big JS changes merged a couple of weeks ago. Codebase is way to different and #2085 is small enough to just start a new branch/PR as easiest path). 

Glyphs hit_test methods output is now a structure like:

```
result = {
        '0d': {
          # boolean flag to indicate if the glyph was hit or not
          flag: false,
          # index of the first point of the crossed segment
          indices: []},
        '1d': {
          # index of the closest point to the crossed segment
          # useful for special glypth like line that are continuous and
          # not discrete between 2 data points
          indices: []
        },
        '2d':{
          # arrays of indexes in case of multilines
          indices: []
        }
      }
```

in order to provide more information for selectors and inspector when deciding the selection behaviour, data to show, etc..

It also defines new attributes on the HoverTool to give more power to the user when deciding where to place the tooltips and the data to show. 

This PR also adds a new _hit_span to line glyph.

More information and old discussions can be found at #2085
",18,15,['status: accepted']
3950,33097976,2168,3834332,2015-04-11 05:11:56,2015-04-13 13:53:29,closed,Remove extraneous comma from unemployment csv.,"Obviously this is a very minor change, so I haven't created a corresponding issue.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
3951,33096685,2167,3834332,2015-04-11 03:09:55,2015-04-16 13:58:46,closed,Added root_dir for absolute resource paths #2166,"We find it useful to host the bokehjs resource on a shared network location. This allows for lightweight HTML plots to use a predefined and static network location for the JS payload. Issue #2166
",6,1,['status: declined']
3952,33092533,2165,3834332,2015-04-10 23:47:48,2015-04-16 13:31:35,closed,Feature/helptool,"issues: fixes  #2156

I've created a new tool (a HelpTool) which is enabled by default to preserve functionality. It removes the hardcoded ""help"" link in the template and allows further customization for the hover text and the link it redirects to.
",6,5,['status: accepted']
3953,32785446,2155,3834332,2015-04-07 17:18:05,2015-06-23 21:59:24,closed,Add simpleapp version of current example apps,"The intent of this PR is to provide the ""simpleapp"" version of the already existing apps with enough docstrings and comments to help users understand how to build their app using the simpleapp shortcut
",6,3,['status: WIP']
3954,32775857,2154,3834332,2015-04-07 15:35:03,2015-04-16 19:02:22,closed,Add pyflakes checking to Travis CI,"issues: closes #2078

This adds pyflakes (and minor style) checking to Travis CI. This will prevent introducing new pyflakes violations and potential bugs.

WIP: need to verify that it actually works.
",4,4,['status: accepted']
3955,32687964,2153,3834332,2015-04-06 16:02:15,2015-04-08 14:04:39,closed,"fix typo, example has two css, one should be js","Found small typo in docs. Fixed.
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3956,32687381,2152,3834332,2015-04-06 15:53:02,2015-04-08 14:05:43,closed,"add CDN links in embedding docs, components section","Closes #2151.
",2,1,['status: accepted']
3957,32646867,2148,3834332,2015-04-05 10:16:58,2015-04-21 13:15:28,closed,Client side LOD downsampling for interactive tools,"issues: closes #1519 

This PR adds some simple general level-of-detail downsampling to `GlyphRenderer`. It works behaving interactive tools set a timestamp on their plot, allowing the plot to decide to set an `interactive` flag on its view that other renderers can use as a hint. Currently works with 1D columns, e.g. color scatter pans/zooms smoothly with 60k points, and line.py with 100k points. Much more that that and we run into browser stack size limitations with out current render mapping/transform code path.  

Implementation for 2D sources (patches, multi_line) should be straightforward. 3D sources (images) will require a bit more thought, or just have it disabled for them. 
",5,4,['status: accepted']
3958,32621081,2145,3834332,2015-04-03 22:29:37,2015-04-27 15:33:10,closed,Small PR updating some broken bits of the docs,,3,1,"['type: bug', 'reso: working as intended', 'tag: component: docs', 'status: superseded']"
3959,32611212,2143,3834332,2015-04-03 19:39:22,2015-04-09 14:27:36,closed,render code path improvements,"issues: closes #2137 #2116 

This PR cleans up and improves the render code path in several ways:
- greatly reduces unnecessary code and compute duplication among the glyphs of a given `GlyphRenderer`
- finer grained trace level logging for performance timing
- faster selection masking using a hash

A few numbers: On my machine for the `color_scatter.py` example with `N=40000` (forty thousand) these changes reduce the `set_data` time from 160ms to 60ms. Selection masking times were reduced by an order of magnitude or more, to single digit numbers of milliseconds. It was hard to measure, but I believe there was a ~30 percent reduction in JS stack allocation size. At this point for large N the render code path is dominated by canvas calls, which we can only fix by offering a different render backend (WebGL investigations underway)
",5,6,['status: accepted']
3960,32516218,2142,3834332,2015-04-02 14:28:48,2015-04-13 15:27:49,closed,Flakified the remaining code,"issues: related to #2078

This makes the whole bokeh codebase compliant with pyflakes. I increased the limit for long lines to 160 to avoid having to change many more lines.

Also, all files called `__init__.py` are not style-checked: many of these contain imports that are not used. Therefore its probably better to avoid putting actual code in any `__init__.py`.
",3,5,['status: accepted']
3961,32510656,2141,3834332,2015-04-02 13:23:17,2015-04-17 08:17:46,closed,tweaks to gulp tasks,"issues: relates to #2140 

This adds functionality to install the js and css to the server directory.

I ended up more than I planned at first, splitting up the ""scripts"" and ""styles"" in subtasks which are then run in sequence in ""scripts"" / ""styles"". I only realized afterwards that tasks are run in parallel (woops). I solved this with run-sequence. I like how the tasks are split in a couple of simple tasks which can be reused elsewhere. Let me know if this looks good, so I can either move forward with this, or revert to the current approach.

Note that e.g. build.coffee needs changes, but I'll do that when I have a ""green light"" :)
",12,14,['status: accepted']
3962,32453997,2139,3834332,2015-04-01 19:51:02,2015-04-02 10:53:13,closed,Updating exercises to match current master,"Updating the exercises as I go through them for the first time so that they are accurate as of current master.

https://github.com/ericdill/bokeh/commit/529191bb750244d346c0f1272d137bf33170c3e9
- ""normal"" is not a valid option for Figure.xaxis.major_label_orientation as it raises the following:
- [Ipython notebook demonstrating stack trace](http://nbviewer.ipython.org/gist/anonymous/3a4d12c80b97a57a9844)

https://github.com/ericdill/bokeh/commit/4caa69ddf573ddf1675024f6a5a2205c2cbb15c8
- don't use deprecated functions in exercise code
",1,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3963,32442056,2138,3834332,2015-04-01 17:40:32,2015-04-02 14:03:54,closed,handle categorical coords correctly in hit testing,"issues: fixes #2134 
",2,4,['status: accepted']
3964,32422249,2133,3834332,2015-04-01 14:09:50,2015-04-02 14:03:00,closed,Reduce BokehJS boilerplate,"issues: closes #2132 

This PR removes about 800 lines of boilerplate code (by generating BokehJS `Collection` objects dynamically), and saves about 50k on the final minified BokehJS library size. Additionally, all of the AR transform boilerplate was also consolidated into a single module, and support for ""submodules"" was restored in `base.coffee` to support that change.

@mattpap @JosephCottam @tswicegood interested in your inputs in particular. 
",4,5,['status: accepted']
3965,32410564,2130,3834332,2015-04-01 11:35:42,2015-04-01 11:51:29,closed,Fixed typo in documentation,,1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3966,32410141,2129,3834332,2015-04-01 11:28:02,2015-04-16 13:32:27,closed,fix stocks simpeapp selection,"Issues: closes #2128 

Fixes the issue by returning a dict with the histograms to replace the current ones
",2,2,['status: accepted']
3967,32327218,2125,3834332,2015-03-31 14:25:39,2015-04-10 10:20:37,closed,Fixed updating of setup_events,"Bugfix for Issue #2124
https://github.com/bokeh/bokeh/issues/2124
",4,1,['status: accepted']
3968,32278324,2123,3834332,2015-03-30 23:36:17,2015-04-01 11:55:33,closed,update selection histogram with multiple populations,"Updated selection_histogram.py example with three different populations.
",2,1,['status: accepted']
3969,32245600,2121,3834332,2015-03-30 16:55:58,2015-05-06 17:15:52,closed,Add environment file,"While working on bokeh.js, I've gathered a list of packages that are needed to run examples and tests and such.  Please let me know what I'm missing.
",6,127,"['type: feature', 'reso: working as intended', 'status: declined']"
3970,32233759,2120,3834332,2015-03-30 14:52:18,2015-03-30 16:30:56,closed,fix missing import on simpleapp,"Issues: closes #2119 
",0,1,['status: accepted']
3971,32136382,2112,3834332,2015-03-27 19:11:21,2015-03-27 21:44:00,closed,Remove as much of src/vendor as is practical,"There's still some room for improvement, but those are going to require more handholding to get through.
",14,18,"['type: feature', 'status: accepted', 'reso: completed']"
3972,32039760,2109,3834332,2015-03-26 17:16:50,2015-04-01 11:52:11,closed,Simplify glyph units,"issues: closes #2087 

New PR based off master (now that #2086 is merged in)
## Methods to test
- `conda install -c javascript gulp`
- `npm install` within the `bokehjs` directory
- Run `gulp scripts` to test CoffeeScript generation
- Run `gulp minify` to test building a minified version
- Run `gulp` to test automatically generating code and watching for changes to CoffeeScript files
- Run `gulp install-js` to test building and installing code in develop mode
- Run `gulp develop` watching code and running build and install on changes
## Outstanding Tasks
- [x] Remove vendor code / replace with bower (@tswicegood -- done in #2112) 
- [x] Fix `setup.py` so it properly relies on gulp (@tswicegood)
- [x] Build CSS from gulp file (@tswicegood)
- [x] Mocha tests (@tswicegood / @bryevdv)
- [x] Remove split JS mode (@bryevdv)
- [x] Fix outstanding glyph units issues (@bryevdv)
- [x] Fix build issues relating to jQuery UI (@tswicegood / part of bower changes above)
- [x] Burn grunt in a ceremonial funeral pyre (@tswicegood)
- [ ] Update development documentation with the new build method for bokeh.js
- [x]  Numeral.format(value, format) broken / custom numeral.js issue `bokeh/examples/glyphs//maps.py` and `bokeh/examples/glyphs//sprint.py` (@tswicegood)
- [x] missing slider / jquery-ui issue `bokeh/examples/glyphs//taylor_server.py` (@tswicegood)
## Follow-on PRs
- [ ] render order randomly such that some glyphs are obscured sometimes `bokeh/examples/compat/seaborn/violin.py` and `bokeh/examples/compat/seaborn/sinerror.py` (@tswicegood)
- [ ] missing text annotation in `bokeh/examples/glyphs//iris_splom.py` (@tswicegood)
## Nice to haves (possibly opened as separate PRs)
- [ ] Add `index.coffee` files to every module level to allow building a tree of objects
- [ ] Replace various marker code with generative metaprogramming (see [`widgets/layouts/base.coffee`](https://github.com/bokeh/bokeh/blob/task/2087_glyph_units/bokehjs/src/coffee/widget/layouts/base.coffee))
- [ ] Automatically generate `Collection` objects at `base` level when no customization is present
",11,191,['status: accepted']
3973,32039531,2108,3834332,2015-03-26 17:14:38,2015-03-26 17:15:49,closed,Simplify glyph units,"issues: closes #2087 

New PR based off master, with #2086 merged in. 
",1,28,['status: superseded']
3974,32017578,2107,3834332,2015-03-26 13:36:52,2015-03-26 17:09:38,closed,better error messags and build artifact size information,"issues: closes #2106 
",3,3,['status: accepted']
3975,31962511,2101,3834332,2015-03-25 20:27:54,2015-03-25 21:32:39,closed,Release 0.8.2,"OK, this is the 0.8.2 release PR.

Additionally to the changelog output and version numbers, I have added some tools to let me build and upload the release to binstar.

Essentially, I have a new script which let me automate the build and upload of the package...

So this is a sort of half the automation of the release process... later I can merge this with our devel build process so almost everything is automated, but that's for later...

Please review @bokeh/core 
",0,5,"['status: ready', 'type: task']"
3976,31875410,2100,3834332,2015-03-24 22:10:16,2015-05-28 04:03:45,closed,Fix handling of initial columns in CrossFilter,"This was intended to be a fix for the barchart implementation in crossfilter, based on [this comment thread](https://groups.google.com/a/continuum.io/forum/?utm_medium=email&utm_source=footer#!msg/bokeh/2StCzFnKj_0/lTb2V8Kc8AEJ), but I don't think there is anything directly wrong with it.

I took the provided data set for cruises and found that the issue is really in classifying the data so that it is handled correctly in crossfilter. As of right now, cf doesn't try to interpret what kind of data it actually is, independent of its current form. In this case, a column of years as integers causes cf to treat the data as continuous, which results in a binning of the column so that it can be plotted as a bar chart/pseudo histogram.

After converting the column to a string, the bar chart was produced as expected. However, I found that there was an issue with handling a dataset that contains fewer than 2 continuous columns. The first commit handles this issue.

The second commit addresses the following items to make the bar chart plugin more robust:
- Add count aggregation type, and 'None' selection to the columns. This makes it possible to produce simple bar charts of just counting the unique things in the x column.
- Make sure that column data source creation for bar chart can occur with and without a y selection. 
- Make the x axis of the plot rotate if it is longer than a certain length.
- Handle more ""bad"" configurations of bar chart and notify the user of the issue via the plot title.

I still need to do some more regression testing to make sure I didn't break other plugins, and to test against other columns. I'll let everyone know when complete.
",13,14,"['type: feature', 'status: accepted', 'reso: completed']"
3977,31837899,2099,3834332,2015-03-24 15:33:20,2015-03-26 17:10:25,closed,Fix for issue #2098,"issues: closes #2098 

Fix the issue with BokehJSONEncoder not being able to encode decimal.Decimal correctly. Casting to a float solves the issue, although, it very very slightly inaccurate and maybe casting to a string would be better?
",5,2,['status: accepted']
3978,31695889,2092,3834332,2015-03-22 21:58:21,2015-03-26 17:17:09,closed,Simplify glyph units,"issues: closes #2087 

This PR is based off of #2086 
",1,13,['status: superseded']
3979,31550674,2088,3834332,2015-03-19 18:14:58,2015-06-22 12:16:15,closed,"Support x_names, y_names and better source management on charts","Issues: fixes #1841 

In addition to the the mentioned issue, this PR also aims to find better ways of managing charts data and datasources in order to make it possible to re-use sources across different charts (for interactivity) or explore other patterns (like overlapping charts).
",28,53,['status: WIP']
3980,31534521,2086,3834332,2015-03-19 15:31:11,2015-03-26 17:11:44,closed,simplify autoranging implementation ,"issues: closes #1517
",16,17,['status: accepted']
3981,31451305,2085,3834332,2015-03-18 17:20:03,2015-04-14 14:49:40,closed,"Hit testing, inpectors and selectors changes",,1,16,['status: superseded']
3982,31447614,2084,3834332,2015-03-18 16:42:43,2015-03-18 19:22:46,closed,Removed duplicated autoload_server method,"issues: fixes #1956 

I'm pretty sure this wasn't intentional?
",1,1,['status: accepted']
3983,31423272,2082,3834332,2015-03-18 12:17:50,2015-03-22 20:16:02,closed,Make models and cli subpackages pyflakes compliant,"issues: ref #2078 

These changes make the `bokeh.cli` and `bokeh.models` subpackages compliant with pyflakes. Especially the latter needed significant changes in the `__init__`; pyflakes does not allow `from x import *`, so I had to make them all explicit imports. But the list of names to import became so long that I wrote a small function to collect these names. The names to import is particularly long for the widgets module.

To shut pyflakes up about unused imports, apparently you can also use `__all__` which I personally found a bit nicer than just stating the names.  Happy to revert this to just stating a tuple of names though.

I am generally in favor of explicit imports, but in the case of importing all widgets, a star-import would be justified IMO. However, there is no way to shut pyflakes up unless we use flake8 ...
",18,4,['status: accepted']
3984,31286238,2075,3834332,2015-03-16 21:25:39,2015-03-17 16:26:06,closed,edits to UG,"issues: closes #2073

New docs at: http://bokeh.pydata.org/en/test/docs/user_guide.html

Merged glossary and interfaces sections into Intro section 
",0,2,['status: accepted']
3985,31285596,2074,3834332,2015-03-16 21:17:59,2015-03-16 21:28:50,closed,typo in stock_applet docs for moving quantquote data.,"With the quotes this is interpreted as a single argument.
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3986,31242006,2072,3834332,2015-03-16 13:18:36,2015-03-17 16:25:19,closed,Enable fast development simply by running grunt watch,"issues: closes issue #2038 

When `BOKEH_RESOURCES` is in dev mode (e.g. ""relative-dev"" or ""absolute-dev""), the JS files are taken from `bokehjs/build` instead of `bokeh/server/static`. This  means that you can simply edit the coffeescript file, grunt will generate JS, and you can refresh the page to get the new result.
",11,5,['status: accepted']
3987,31232504,2070,3834332,2015-03-16 10:46:38,2015-03-16 19:03:19,closed,Minor style changes to interfaces docs,"issues: none

@bryevdv asked via flowdock to check on http://bokeh.pydata.org/en/latest/docs/user_guide/plotting.html a short while ago. I opened the page to look at it soon, only to find a week later, with the PR already merged.

Anyway, it's a very nice overview IMO. Here are some small style issues. 
",3,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
3988,31188597,2068,3834332,2015-03-14 19:21:52,2015-03-14 19:22:46,closed,Use Bokeh.$ in spectrogram,"issues: fixes #2067
",1,1,['status: accepted']
3989,31126484,2065,3834332,2015-03-13 13:45:56,2015-05-11 12:10:24,closed,Airports sample bokeh-server app example,,2,9,"['status: WIP', 'tag: component: examples']"
3990,31077498,2063,3834332,2015-03-12 21:03:22,2015-03-16 15:08:42,closed,fix dev fingerprint check on version,,10,4,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: build']"
3991,31040913,2062,3834332,2015-03-12 14:33:05,2015-03-14 13:14:01,closed,Userguide Intro and Interfaces,"Apologies for the ""issue PR"" but lots of little necessary fixes piled up in this branch. I will limit the user guide scope to adding the ""concepts and interfaces"" section, and follow on with proper issues/PRs for more UG enhancements. 
",2,12,"['type: feature', 'tag: component: docs', 'status: accepted', 'reso: completed']"
3992,30955956,2060,3834332,2015-03-11 15:48:50,2015-03-16 20:31:57,closed,set chart axis labels default to empty string,"Issues: fixes #1901 
",0,2,['status: accepted']
3993,30937724,2057,3834332,2015-03-11 12:19:45,2015-03-13 16:14:42,closed,Fix boxplot equations,"Issues: fixes #2002 
",2,4,['status: accepted']
3994,30875871,2055,3834332,2015-03-10 17:57:40,2015-03-16 18:47:12,closed,p.select improvements,"issues: closes #2033
",2,9,['status: accepted']
3995,30778289,2052,3834332,2015-03-09 16:50:16,2015-03-16 14:45:46,closed,more simplifications to bokeh module,"issues: closes #2051
",5,3,['status: accepted']
3996,30768694,2049,3834332,2015-03-09 15:11:22,2015-03-09 20:13:31,closed,Deprecate VBox/HBox.,"issues: closes #2010
",2,3,['status: accepted']
3997,30667636,2045,3834332,2015-03-06 18:28:32,2015-03-09 14:34:55,closed,"cleanup bokeh module, split dependencies and utils","issues: fixes #2041 fixes #2024 closed #2047 fixes #1659 
",10,15,['status: accepted']
3998,30654262,2044,3834332,2015-03-06 15:43:48,2015-03-06 15:44:15,closed,quickstart edits,"issues: closes #2043
",1,2,['status: accepted']
3999,30637845,2042,3834332,2015-03-06 11:25:40,2015-05-11 12:05:18,closed,New Bubble Chart,"This adds new bubble chart to `bokeh.charts`
",6,12,['status: WIP']
4000,30511694,2027,3834332,2015-03-04 22:32:44,2015-03-05 22:50:07,closed,Add absolute_import to each .py file in bokeh/bokeh,"issues: closes #1988
",0,5,['status: accepted']
4001,30496325,2025,3834332,2015-03-04 19:32:27,2015-03-05 17:50:17,closed,update quick start and install guide,"issues: #closes #2023 

Docs deployed to test:

http://bokeh.pydata.org/en/test/docs/installation.html
http://bokeh.pydata.org/en/test/docs/quickstart.html

install guide update made on accidental master commit. 
",2,8,['status: accepted']
4002,30478887,2019,3834332,2015-03-04 16:13:52,2015-03-04 19:50:47,closed,Fix tests/travis/nbexecuter.py to work under IPython 3,"This updates notebooks to nbformat v4 (current) as well.

fixes: #2017
",3,5,['status: accepted']
4003,30336164,2011,3834332,2015-03-03 00:37:39,2015-03-04 19:52:28,closed,Fix grammar error,,2,3,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4004,30315941,2009,3834332,2015-03-02 20:11:18,2015-03-05 02:46:35,closed,Change default server backend from 'shelve' to 'memory.',"issues: closes #1970 
",0,2,['status: accepted']
4005,30200997,2001,3834332,2015-02-27 21:07:33,2015-02-27 23:00:25,closed,map config not used for main.coffee it seems,,1,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
4006,30197998,1999,3834332,2015-02-27 20:27:02,2015-02-28 04:00:11,closed,Add new styles to tweak visual hierarchy,"issues: closes #1998 

Here's a first go incorporating all the feedback.

![screenshot from 2015-02-27 12 23 49](https://cloud.githubusercontent.com/assets/1796208/6420505/83fcc81e-be7b-11e4-9ccc-6fd646320cc4.png)

I think there are still areas of the docs that don't look as good as they could, but I don't _think_ this PR makes them worse. 

For example, in the below, the section heading `bokeh.models.mappers` fades in comparison to the class heading. But messing with the section headings spreads throughout the entire website, so wasn't a quick fix. 

![screenshot from 2015-02-27 12 25 11](https://cloud.githubusercontent.com/assets/1796208/6420545/dca4971c-be7b-11e4-9504-f72522b8bccf.png)
",3,1,['status: accepted']
4007,30157392,1997,3834332,2015-02-27 10:58:03,2015-02-27 15:57:16,closed,Restore the glyph/trail.py example (2),"Issues: fixes #1978

I restored the trail.py examples but I removed the hover tool... it makes not sense to add something we know it is not working.

I split the PR in two commits as @mattpap has requested.
",1,2,['status: accepted']
4008,30140110,1994,3834332,2015-02-27 03:55:55,2015-02-27 10:58:48,closed,Restore the glyph/trail.py example.,"Issues: fixes #1978 

I restored the `trail.py` examples but I removed the hover tool... it makes not sense to add something we know it is not working.
",2,1,['status: superseded']
4009,30136607,1993,3834332,2015-02-27 02:19:37,2015-02-27 20:50:02,closed,Use x.x.xdev[rc] instead of xxx-dev[rc] for versioning devel builds,"Issues: fixes #1913 
I tested the generation of a devel build and everything seems to work OK:

log: https://s3.amazonaws.com/archive.travis-ci.org/jobs/52365726/log.txt
binstar: OK
cdn: OK
docs: OK
installation: OK

I removed the CDN and binstar packages because it comes from a PR and not from master...
",7,5,['status: accepted']
4010,30122598,1991,3834332,2015-02-26 22:19:52,2015-02-27 20:48:16,closed,use requirejs map to achieve private jq,"issues: fixes #1990
",9,5,['status: accepted']
4011,30108574,1987,3834332,2015-02-26 19:35:10,2015-03-18 14:50:11,closed,change some empty dicts/lists as default args to None,"issues: closes #1983

I searched the code for `={}` and `=[]`. Assuming pep8 is followed and no arguments are specified as `foo = {}`, I should have got them all.
",7,5,['status: accepted']
4012,30095357,1986,3834332,2015-02-26 16:58:42,2015-05-05 20:33:08,closed,Feature/blaze docs,,8,3,"['tag: component: docs', 'status: superseded']"
4013,30085176,1985,3834332,2015-02-26 15:10:12,2015-03-10 17:52:10,closed,Start on making code pyflake compliant,"issues: closes #1980 
",8,7,['status: accepted']
4014,30003120,1979,3834332,2015-02-25 16:42:51,2015-02-27 20:13:26,closed,Suppress logging of known warnings and error during tests.,"issues: fixes #1961 

uses `mock.patch`
",0,1,['status: accepted']
4015,29917962,1975,3834332,2015-02-24 17:30:04,2015-02-25 02:02:01,closed,Make logging false by default,"issues: closes #1973
",2,7,['status: accepted']
4016,29899586,1974,3834332,2015-02-24 14:07:02,2015-03-11 17:32:29,closed,add support for blaze objects on Charts (DataAdapter),"Issues: fixes #2048 

Main goal of this PR is support first minimal support to blaze.Data objects that can be directly consumed by chart builders.
",5,21,['status: accepted']
4017,29894592,1972,3834332,2015-02-24 12:53:42,2015-05-11 12:03:43,closed,Raise exception when HasProps receives invalid kwargs,"issues: closes #1960

In `_glyph_function()` we pop all `kwargs` that we need and pass the rest to the `Glyph` class (and effectively to `HasProps.__init__`).
",28,2,['status: WIP']
4018,29889552,1971,3834332,2015-02-24 11:28:48,2015-02-25 23:53:08,closed,Tests scripts enhancements,"Issues: fixes #1949 

It also adds the following improvements:
- interactive tester now have the notion of ""session"" to store progress of the tests. It store every single example file ran and the results. If it crashes before registering the result it will as for the result of the unregistered test.
- windows compatibility (now test_matrix script works also on window)
",17,9,['status: accepted']
4019,29842476,1966,3834332,2015-02-23 20:30:20,2015-02-24 16:18:59,closed,Release 0.8.1,"All the steps done (including the fiddles update) except from:
- [x] conda packages
- [x] ANN
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
4020,29828916,1963,3834332,2015-02-23 17:41:50,2015-02-23 19:00:46,closed,Feature/fix ar zoom,,1,3,"['type: bug', 'status: accepted', 'reso: completed']"
4021,29808237,1962,3834332,2015-02-23 13:28:49,2015-02-23 18:59:40,closed,Hot fixes for examples,"@bokeh/core just add any comment or contribution in this PR...
",5,3,"['status: accepted', 'type: task', 'reso: completed']"
4022,29724369,1954,3834332,2015-02-20 19:39:34,2015-02-25 02:08:34,closed,Fix getsitepackages() in setup.py,"issues: closes #1953
- the returned list now only contains directories that actually exist
- some changes in ordering to make it more consistent with Debian.
- removed ""lib-dynload"" dir; that's not site-packages at all, is it?
",2,2,['status: accepted']
4023,29701417,1951,3834332,2015-02-20 14:55:26,2015-02-24 17:57:46,closed,BokehJSONEncoder sets masked values to nan,"issues: closes #1784

Also adds an example to show what happens with inf/nan/masked values.

One thing that the example shows is that inf/-inf is handled different from nan. Not sure if this is intentional. Edit: bokehjs now also ignores data values that are inf/-inf.
",1,3,['status: accepted']
4024,29697488,1950,3834332,2015-02-20 14:01:34,2015-02-20 17:05:56,closed,image glyph has standard palette Greys9,"issues: closes issue #1929, closes #1928

Question: we don't currently have any code that does _not_ provide a palette to an image, so this change will not be tested anywhere. Should I add an example for this?
",4,2,['status: accepted']
4025,29694623,1948,3834332,2015-02-20 13:13:18,2015-02-20 13:52:52,closed,Mention --multi-user mode requirement for some embed examples,"issues: closes #1943
",1,1,['status: accepted']
4026,29693958,1947,3834332,2015-02-20 13:01:27,2015-02-20 13:53:49,closed,Fix broken links to BEP in dev docs,"issues: fixes issue #1945

The problem was a malformatted rst link.
",1,1,['status: accepted']
4027,29688592,1946,3834332,2015-02-20 11:22:00,2015-02-20 17:04:35,closed,fix charts on userguide showing old functionality,"Removes reference to old functionality input types examples section on user guide charts (from bug report on [m.l.](https://groups.google.com/a/continuum.io/forum/?utm_medium=email&utm_source=footer#!msg/bokeh/sy0HabwWzj0/HU9fL5UOg7gJ) . As this is related also to #1901 (which may have different outcomes) this PR just remove the specific reference to axis labels. Builders new design separates charts axis labels creation and builders so the same previous behaviour is not obvious to restore.
",1,2,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4028,29621945,1941,3834332,2015-02-19 15:47:56,2015-02-20 01:25:23,closed,update spectrogram to new API,"issues: fixes #1940
",2,1,['status: accepted']
4029,29617389,1939,3834332,2015-02-19 14:55:50,2015-02-19 15:29:00,closed,restore tutorial gallery,"issues: fixes #1921

These files can be deleted when entire the gallery gets generated with the `bokeh-gallery` sphinx extension. Right now only the individual plots are, with `bokeh-plot`.
",2,1,['status: accepted']
4030,29604863,1936,3834332,2015-02-19 11:45:19,2015-02-24 16:20:49,closed,"Use _.isXXX(x) instead of typeof(x) == ""XXX""","Unify this across bokehjs.
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
4031,29592272,1934,3834332,2015-02-19 07:46:40,2015-02-19 15:01:15,closed,fix broken links,"issues: fixes #1933
",2,1,['status: accepted']
4032,29580789,1932,3834332,2015-02-19 01:35:15,2015-05-11 12:02:24,closed,Add a sparkline demo,"Hi all,

Was just messing around with this this afternoon and was wondering if you'd want it for the examples/gallery.

![sparkline-demo](https://cloud.githubusercontent.com/assets/1796208/6260470/1cea0b66-b794-11e4-9a39-fd98f15c2369.png)

One quick question: If I've used a DataFrame to make the chart with a column such as `Adj Close` am I correct in thinking that I can't just use `@Adj Close` in the tooltip? I couldn't make this work (and ended up making a new column with no spaces in the name) so just wanted to check I wasn't missing something.
",7,1,"['status: WIP', 'tag: component: examples']"
4033,29577387,1931,3834332,2015-02-19 00:26:12,2015-02-27 15:56:39,closed,encapsulate implicit state,"issues: closes #1916
",23,21,['status: accepted']
4034,29571734,1930,3834332,2015-02-18 22:52:52,2015-02-19 14:13:53,closed,fix error in interface output charts section,"Issues: fixes #1925 
",1,1,['status: accepted']
4035,29552392,1924,3834332,2015-02-18 18:57:42,2015-02-19 12:03:31,closed,Fix issues with placeholder formatting in hover tool,"fixes #1920
",6,1,['status: accepted']
4036,29539559,1923,3834332,2015-02-18 16:28:40,2015-02-19 15:36:14,closed,Delete old plotting import stuff.,"fixes #1922
",2,1,['status: accepted']
4037,29526256,1919,3834332,2015-02-18 13:49:27,2015-02-20 16:12:24,closed,Make setup.py more flexible with other commands,"issues: fixes #1918 

Replace check against hardcoded list of commands with simple check that there are some arguments.
",10,2,['status: accepted']
4038,29522918,1915,3834332,2015-02-18 12:55:45,2015-02-19 15:33:36,closed,remove spurious curplot,"issues: fixes #1914
",6,3,['status: accepted']
4039,29429319,1910,3834332,2015-02-17 09:55:10,2015-02-17 13:27:50,closed,fix charts gallery,"This fixes charts no being rendered on the examples gallery. Symbol arg is raising exception but I'm not sure why symbol was specified for charts examples...
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed', 'tag: component: examples']"
4040,29410271,1909,3834332,2015-02-17 00:37:42,2015-02-19 19:40:22,closed,Make tooltips properly centered on data points,"This fixes a long standing issue where tooltip arrow (indicator) was incorrectly centered.
",7,5,"['type: bug', 'status: accepted', 'reso: completed']"
4041,29404842,1908,3834332,2015-02-16 22:26:20,2015-02-17 23:53:34,closed,Release 0.8.0,"TODO:
- [x] ANN
- [x] fiddles
- [x] docs re-deploy (server based gallery) #1906 
- [x] todo 0.9
- [x] fix indented points in release notes
- [x] add new contributors in release notes
- [x] sync core contributors with bokeh/core
- [x] fix charts in gallery #1910 
- [x] fix version number in deployed docs
",0,8,"['status: accepted', 'type: task', 'reso: completed']"
4042,29402152,1907,3834332,2015-02-16 21:35:26,2015-03-28 13:07:21,closed,Changes to appearance filter and facet panels.,"Changes to appearance of facet and filter panels. Made them gray.

Hard overwriting in crossfilter.less and bootstrap/less/panels.less.
",1,1,"['type: feature', 'reso: working as intended', 'status: declined']"
4043,29401101,1906,3834332,2015-02-16 21:15:29,2015-02-17 15:18:30,closed,server gallery,"issues: closes #899
",3,3,['status: accepted']
4044,29397328,1905,3834332,2015-02-16 20:00:42,2015-02-20 15:42:43,closed,better error messages for blaze version mismatch,,6,3,"['status: accepted', 'type: task', 'reso: completed']"
4045,29389602,1904,3834332,2015-02-16 17:35:14,2015-02-16 18:50:19,closed,"Change [x,y]_label to [x,y]label in charts examples.","Changed [x,y]_label to [x,y]label in charts/scatter example.

Update '[x,y]label' args
",2,1,"['type: bug', 'status: accepted', 'reso: completed', 'tag: component: examples']"
4046,29387829,1903,3834332,2015-02-16 17:06:34,2015-02-16 20:13:50,closed,Update charts user guide to 0.8,"issues: closes #1813
",3,6,['status: accepted']
4047,29385597,1902,3834332,2015-02-16 16:34:42,2015-02-16 18:48:57,closed,Feature/server gallery,"@damianavila @bryevdv bugfix discovered when setting up server gallery
",1,2,"['type: bug', 'status: accepted', 'reso: completed']"
4048,29370780,1900,3834332,2015-02-16 12:53:35,2015-02-16 18:02:53,closed,Add compat ipynb examples.,"Closes #380 
",0,1,['status: accepted']
4049,29362025,1899,3834332,2015-02-16 10:17:18,2015-02-16 18:03:58,closed,change docstring example with better data,"Change docstring example data to show nicer exaples (still with small dataset).

Previous was:

![screen shot 2015-02-16 at 11 06 36](https://cloud.githubusercontent.com/assets/1084690/6210162/2a5953f6-b5cd-11e4-97e8-530f0661eae2.png)

now is:

![screen shot 2015-02-16 at 11 06 43](https://cloud.githubusercontent.com/assets/1084690/6210173/3edad6a6-b5cd-11e4-9fce-adf5de26d1dd.png)
",2,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4050,29350228,1898,3834332,2015-02-16 05:09:13,2015-02-25 16:32:10,closed,Ajax realtime improvements,"Here are some improvements in order to add some realtime behavior to the ajax polling.

This PR is closely related to https://github.com/bokeh/bokeh/pull/1865 and open to discussion.
Please try the example
",34,10,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: bokehjs']"
4051,29344864,1897,3834332,2015-02-16 00:58:40,2015-02-16 01:25:03,closed,make source location in glyphs docstrings be actual links,,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4052,29344564,1896,3834332,2015-02-16 00:41:50,2015-02-16 01:12:50,closed,fix up docstring table rendering in sphinx,,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4053,29341956,1893,3834332,2015-02-15 22:04:46,2015-02-16 19:16:05,closed,Start a BokehJS interface,"issues: closes #1515
",11,24,['status: accepted']
4054,29313871,1889,3834332,2015-02-14 02:19:56,2015-02-14 11:42:49,closed,Delete click from the conda recipe.,"We forgot to delete click from the recipe too... merging as soon as TravisCI pass...
",3,5,"['status: accepted', 'type: task', 'reso: completed']"
4055,29301761,1888,3834332,2015-02-13 21:44:30,2015-02-14 00:47:07,closed,Rename and reverse logic: Axis.hide -> Axis.visible,"fixes #1885
",3,2,['status: accepted']
4056,29301719,1887,3834332,2015-02-13 21:43:50,2015-02-14 00:48:13,closed,Feature/blaze interface,,1,4,"['type: feature', 'status: accepted', 'reso: completed']"
4057,29301582,1886,3834332,2015-02-13 21:42:01,2015-02-13 21:42:19,closed,Feature/blaze interface,,0,5,['status: superseded']
4058,29299121,1884,3834332,2015-02-13 21:07:30,2015-02-13 21:30:36,closed,Remove click for dependencies.,"Just commenting out for now until we decide if we really want to use it for the cli
",1,1,"['status: ready', 'type: task', 'reso: completed']"
4059,29222162,1881,3834332,2015-02-12 22:20:51,2015-03-25 17:07:29,closed,Feature/simpleapp,,7,13,"['type: feature', 'status: accepted', 'reso: completed']"
4060,29216859,1878,3834332,2015-02-12 21:16:05,2015-02-13 19:52:55,closed,Fix BoxPlot broken with iterable(list) inputs,"Issues: fixes #1876 
",1,2,['status: accepted']
4061,29180243,1877,3834332,2015-02-12 13:54:14,2015-02-13 19:50:26,closed,Add docstrings with bokeh-plot directive to all charts creation functions,"Issues: fixes #1816  

Add charts examples using the `bokeh-plot` docs directive
",29,17,['status: accepted']
4062,29147437,1875,3834332,2015-02-12 02:11:46,2015-02-12 15:17:13,closed,place resize handle overlay more carefully,"issues: fixes #766
",2,1,['status: accepted']
4063,29146068,1874,3834332,2015-02-12 01:39:28,2015-02-12 18:45:38,closed,Deprecate Bokeh magic,"Accordingly with #1821, I am raising a `RuntimeError` when the user attempt to use the Bokeh magic with Bokeh versions above 0.7.1. I also remove the `ipynb` and the `gitignore` file. In the next release (post 0.8) we can remove it completely...
",1,3,['status: accepted']
4064,29137921,1872,3834332,2015-02-11 23:10:58,2015-02-12 00:20:21,closed,remove unused data factor range,"issues: closes #1503
",1,1,['status: accepted']
4065,29130232,1871,3834332,2015-02-11 21:29:56,2015-02-11 23:32:03,closed,1850/remove padding horizon,"issues: closes #1850 closes #1734
",2,2,['status: accepted']
4066,29126590,1870,3834332,2015-02-11 20:43:22,2015-02-12 14:03:52,closed,"rename get_data, get_source, prepare_values, draw builders methods","rename get_data, get_source, prepare_values, draw builders methods to `_adapt_values`, `_process_data`, `_set_sources`, `_yield_renderers`
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
4067,29122296,1869,3834332,2015-02-11 19:49:36,2015-02-11 23:48:26,closed,pan/zoom working with categorical range,"issues: closes #987
",6,3,['status: accepted']
4068,29106867,1868,3834332,2015-02-11 16:45:30,2015-02-11 20:13:11,closed,VBox/HBox accepts single list as well,"issues: closes #1786
",8,1,['status: accepted']
4069,29105562,1867,3834332,2015-02-11 16:31:22,2015-02-11 19:46:40,closed,"Clearer docs, new section about installing npm and nodejs","Take II.

```
- One section to install node and npm
- One section to install grunt et al.
- etc.
```

I think this makes the procedure a bit more clear. At least to people new to grunt and node and friends.

I also removed the note to execute the commands in the bokehjs subdir, because I found that it killed the flow of the text and structure of the docs. Instead I just mentioned it right before the command in question.
",2,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4070,29099602,1866,3834332,2015-02-11 15:27:47,2015-02-11 15:58:06,closed,Made dev guide more clear by adding one section,"- One section to install node and npm
- One section to install grunt et al.
- etc.

I think this makes the procedure a bit more clear. At least to people new to grunt and node and friends.

I also removed the note to execute the commands in the `bokehjs` subdir, because I found that it killed the flow of the text and structure of the docs. Instead I just mentioned it right before the command in question.
",3,1,['status: superseded']
4071,29099100,1865,3834332,2015-02-11 15:22:10,2015-02-11 22:52:31,closed,ajax data source,"issues: closes #1682 

also includes bugfix for bokeh server garbage collection

@bryevdv please review
",10,4,['status: accepted']
4072,29091608,1864,3834332,2015-02-11 13:47:20,2015-02-12 13:48:40,closed,Fix charts not working with server,"After builders design refactoring charts were not working with bokeh-server anymore because Chart object was not included in the preloaded_models of plot object. Also, chart id was not being created properly.
",7,3,"['type: bug', 'status: accepted', 'reso: completed']"
4073,29063188,1862,3834332,2015-02-11 02:00:02,2015-02-11 03:27:30,closed,Hotfix to support local docs with a correct BokehJS,"This just add an entry point using an env variable to build the docs and get the plot rendered when you are working locally. This let's you use any released BokehJS or any devel version uploaded to the CDN (there could be the case, although not frequently, that you need a newer version that the released one and then, the devel version makes more sense).
",3,3,"['type: feature', 'status: accepted', 'reso: completed']"
4074,29057924,1861,3834332,2015-02-11 00:06:12,2015-02-11 15:39:35,closed,Split up developer's guide,"issues: closes #1860

Had to scratch this itch. 
",2,8,['status: accepted']
4075,29051927,1859,3834332,2015-02-10 22:36:18,2015-02-11 00:08:34,closed,update objects/arch diagram,"issues: closes #822
",1,1,['status: accepted']
4076,29047988,1858,3834332,2015-02-10 21:47:16,2015-02-12 16:04:05,closed,Feature/multiuser applet support,,4,5,"['type: feature', 'status: ready', 'reso: completed']"
4077,29042403,1857,3834332,2015-02-10 20:39:06,2015-02-11 04:34:59,closed,"added some server dev guides around bokeh data model, and copy on write",,3,1,['status: superseded']
4078,29025521,1855,3834332,2015-02-10 17:12:38,2015-02-10 20:23:19,closed,Feature/copy on write,,3,19,['status: accepted']
4079,28972734,1854,3834332,2015-02-10 01:13:01,2015-02-12 23:49:07,closed,"Meta-PR for client-side interactive features, formatting, etc.","fixes #1824, #1795, #1478, #1091, #842, #1749, #1723
",42,38,['status: accepted']
4080,28945301,1847,3834332,2015-02-09 18:41:37,2015-02-09 22:23:02,closed,docs for properties,"issues: closes #1846
",1,4,['status: accepted']
4081,28944253,1845,3834332,2015-02-09 18:26:56,2015-02-13 21:15:54,closed,docstring plot examples,"closes #1746

docstring plot examples.
",3,4,['status: accepted']
4082,28943845,1844,3834332,2015-02-09 18:21:34,2015-02-10 13:48:19,closed,Range interval,"issues: closes #1843
",3,3,['status: accepted']
4083,28889438,1840,3834332,2015-02-08 23:45:44,2015-02-09 12:45:49,closed,Fix broken werkzeug import in bokeh-server,"From: http://stackoverflow.com/questions/28241579/error-when-trying-to-run-bokeh-server
",4,1,"['type: bug', 'status: accepted', 'reso: completed']"
4084,28872810,1839,3834332,2015-02-08 00:21:22,2015-02-09 12:40:16,closed,Fix parameter name: host -> root_url,"Fix the variable name in the comment/documentation
",2,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4085,28869979,1838,3834332,2015-02-07 20:53:31,2015-02-09 18:00:38,closed,Hotfix for files encryption,"For some weird reason, in my testing builder, multiples files encryption was working... but not in the bokeh repo. And TravisCI said that is not possible unless you use some workaround I am using here now (ref: http://docs.travis-ci.com/user/encrypting-files/#Encrypting-multiple-files)
",4,2,"['type: bug', 'status: accepted', 'reso: completed']"
4086,28867879,1837,3834332,2015-02-07 18:30:55,2015-02-07 18:51:09,closed,Fix any caracther in the ruby regex to support the tag containing sha.,"I tested with numeric character, but I need to support the git hashes too...
",1,1,"['type: bug', 'status: ready', 'reso: completed']"
4087,28860385,1836,3834332,2015-02-07 07:07:31,2015-02-12 13:46:17,closed,On Bar charts - support negative and mixed data & allow a custom continuous_range,"#1780

Find the absolute minimum/maximum and guess y_range end point accordingly.
If that's not good enough, allow use of a user-provided y_range.

(Note: I don't intend to follow-up with a use of a provided x_range. For now, that's essentially the same as specifying cats and other interfaces on the x range would require more thought/discussion)
",38,11,['status: accepted']
4088,28858181,1835,3834332,2015-02-07 03:31:23,2015-02-07 16:16:13,closed,Enable runs of TravisCI in branches tagged with xxx.dev[rc].xxxxxxxx form,"Use ruby regex to enable those specific branches...
",3,1,"['type: bug', 'status: accepted', 'reso: completed']"
4089,28851748,1834,3834332,2015-02-06 23:41:10,2015-02-07 01:23:34,closed,Pin conda-build to get TravisCI running again,"`conda-build` seems broken... pinning to get TravisCI running again...
I need this one merged to make the devel build...
",1,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
4090,28840294,1832,3834332,2015-02-06 20:42:15,2015-02-06 22:45:13,closed,Use Line for steps chart,"issues: closes #1815
",6,2,['status: accepted']
4091,28838409,1831,3834332,2015-02-06 20:15:48,2015-02-06 20:57:48,closed,Make versioneer aware of our devel build.,"closes: #1148

It essentially injects the conda version into the get_version function, so it can return the dict correctly, with the devel tag as the `version` and the commit sha as the `full` version...
",4,1,['status: accepted']
4092,28826747,1830,3834332,2015-02-06 17:36:06,2015-02-06 17:42:14,closed,update embedding section,"issues: closes #1787 
",0,1,['status: accepted']
4093,28814681,1828,3834332,2015-02-06 15:05:39,2015-02-06 16:24:57,closed,"remove broken, unused function","issues: fixes: #1296
",0,1,['status: accepted']
4094,28756015,1825,3834332,2015-02-05 19:58:48,2015-02-06 17:05:30,closed,Some docs fixes ,"fixes #1705 #1060
",3,3,['status: accepted']
4095,28755637,1823,3834332,2015-02-05 19:54:22,2015-02-07 16:09:16,closed,Add support for BOKEH_DEV=True python something.py,"This enables all debugging capabilities of bokeh, e.g. development resources, JSON pretty printing, debug mode logging, simple IDs.

Note that JSON pretty printing doesn't work. The code was removed during session refactoring. I will fix this later.
",3,1,"['type: feature', 'status: accepted', 'reso: completed']"
4096,28738831,1822,3834332,2015-02-05 16:31:11,2015-02-06 17:07:51,closed,"Maintain {Data,Color}Spec's default value properly","fixes #1584
",1,1,['status: accepted']
4097,28665571,1820,3834332,2015-02-04 19:08:19,2015-02-06 17:45:43,closed,"bokeh.charts: builder subpackage, tests, properties","issues: closes #1817, closes #1818, closes #1819 
",17,26,['status: accepted']
4098,28642008,1812,3834332,2015-02-04 14:27:02,2015-02-04 18:34:14,closed,Alias width and height to plot_width/plot_height with tests in figure(),"Also removes relative import in test_plotting, add main function
Closes #897 
",7,3,['status: accepted']
4099,28594243,1810,3834332,2015-02-03 22:13:24,2015-02-04 20:19:33,closed,Removing curplot leftovers and make show ask for an object.,"fixes: #1809 
",6,3,['status: accepted']
4100,28581282,1808,3834332,2015-02-03 19:32:39,2015-02-03 21:33:21,closed,update some docs about axes/grids,"issues: fixes #1721

Also made some minor corrections removing references to ""curplot"". However, UG needs a more rigorous pass over it.
",3,2,['status: accepted']
4101,28579805,1807,3834332,2015-02-03 19:14:20,2015-02-03 21:41:39,closed,improve the toolbar help button,"issues: fixes #1522

Makes the question mark a link pointing at Bokeh User's Guide entry for plot tools, and tooltip simply instruction to click the button for more information.

![screen shot 2015-02-03 at 1 10 38 pm](https://cloud.githubusercontent.com/assets/1078448/6027268/8884a25e-aba6-11e4-85cc-ad26852bd73f.png)
",3,1,['status: accepted']
4102,28576210,1806,3834332,2015-02-03 18:27:41,2015-02-03 21:40:34,closed,include the frame offset in the screen mapping,"issues: fixes #833

The upshot of this is that when users specify ""screen"" coordinates,
they are really specifying ""view"" (vx, vy) coordinates.

Furthermore, when mapping from a cartesian frame, the (0,0) is
the lower left corner of the central frame region.

**NOTE**: I believe our terminology and perhaps even some of the concepts around this are still a bit muddled, but I think this is an improvement, and that further improvements or changes can come as more layout work is pursued. 
",3,1,['status: accepted']
4103,28557668,1804,3834332,2015-02-03 14:50:10,2015-02-03 15:54:05,closed,fix visible selection ,"issues: fixes #1798 

quick fix for setting properties of selection/nonselection glyphs now that glyphs are not Fill/LineProps subclasses
",1,1,['status: accepted']
4104,28546777,1802,3834332,2015-02-03 12:01:03,2015-02-03 15:05:55,closed,Add glyphs/linked_tap_server example,"This example shows how to connect two plots using tap tools and data sources. Clicking on circles in `plot1`, will change color of respective glyphs in `plot2`. Clicking on circles in `plot2`, will change size of respective glyphs in `plot1`.
",4,1,"['type: feature', 'status: accepted', 'reso: completed', 'tag: component: examples']"
4105,28514325,1800,3834332,2015-02-02 23:53:49,2015-02-06 04:29:04,closed,Feature/auto deploy,"This implement the things discussed in #1788 (large thread with go and forwards, read it all to get the complete picture).
Essentially, any time you want a devel build, you just need to tag and push the tag to origin an viola, after a :coffee: you have the builds available in Binstar.
How it is implemented? conda-build >> conda convert >> binstar upload, ALL of this happening in a TravisCI run. 
- [x] Make sure the builds are only generated by a tagged push
- [x] Use TRAVIS_BUILD_ID as a counter and a way to fingerprint the packages
- [x] Make the changes to also upload CDN and JS devel files to the CDN
- [x] Test all build process in a mirror repo, check here:
  - [TravisCI log](https://s3.amazonaws.com/archive.travis-ci.org/jobs/49246085/log.txt)
  - [Packages available on Binstar](https://binstar.org/bokeh/bokeh/files?version=0.7.2.dev.49246084&page=1)
  - [JS and CSS files on the CDN](http://cdn.pydata.org/bokeh/dev/bokeh-0.7.2.dev.49246084.min.js)
- [x] Encrypted SHH to upload the devel docs.

As you see, I am almost done... today I had to fight with TravisCI builds not working in my test mirror, without any technical issue for not starting (I contact TravisCI support and they were surprises about the issue). Finally working now as I showed above.
I also hit a limitation in the log output that would be solved later with a new `--quiet` option in the conda convert command.
I have to make the SSH encryptation step and this would be ready to hit master after the proper review. I submitted here as WIP for early feedback. 

Thanks.
",10,14,['status: accepted']
4106,28467057,1797,3834332,2015-02-02 13:16:20,2015-02-27 19:31:11,closed,Preliminary work to get bokehjs working in node.js,"This doesn't allow to render plots (see #1589 for details).
",9,12,"['type: feature', 'status: accepted', 'reso: completed']"
4107,28416538,1793,3834332,2015-01-31 15:53:38,2015-02-02 17:15:48,closed,Feature/1792 grid bands,"issues: closes #1792 

Sometimes you realize there is a missing thing that is easy but also useful and you jump when the urge strikes. 

![stocks](https://cloud.githubusercontent.com/assets/1078448/5988655/031bf49c-a92f-11e4-9414-4bc61af71017.png)
",4,4,['status: accepted']
4108,28415576,1791,3834332,2015-01-31 14:32:30,2015-01-31 23:20:23,closed,Remove name arg from plotting.gridplot,"Fixes #1656
",1,1,['status: accepted']
4109,28380827,1789,3834332,2015-01-30 18:08:58,2015-03-28 13:09:31,closed,[feature] Feature/dataframe,"# Pandas Dataframe Plotter

The purpose of this code is to automatically plot scaled dataframes containing any level of weird data.

It is intended to speed up visualization of pandas dataframes
## Goals
- Plot labeled dataframe data (done)
  - properly colorize all data so it is easily viewable (completed for < 12 columns)
- remove any NaN's on it (done)
- determine it's variability. If it is highly variable (with data going all over the place), use a rolling box-whisker plot instead (done)
- Add trend lines. For box-whisker this is the movement of the mean. Otherwise it is a linear fit to each bin (done)
- Scale data on at least two axis. Detect data ranges and match the best data with the correct axis. If a new axis has to be created to view scale, create it. (not done, having issues getting access and re-scalling figure)
  - potentially support more y axis in the future (future)
",7,3,"['type: feature', 'reso: working as intended', 'status: declined']"
4110,28252326,1783,3834332,2015-01-29 04:03:55,2015-01-29 17:14:11,closed,example ipython notebook updates,"I am not yet done yet. These represent what I have currently worked on (and have finished).
",2,3,['status: declined']
4111,28241909,1781,3834332,2015-01-28 23:58:42,2015-02-06 17:15:19,closed,Task/move travis from example,"This supersede #1778 because I did not use `git mv` before causing a mess...
",12,6,['status: accepted']
4112,28233605,1779,3834332,2015-01-28 22:00:04,2015-02-03 13:34:39,closed,Try to only build on master.,"Just a test... this seems to deactivate building in other branches except from master... let's see if the PR is built (I don't think so, but maybe Travis surprise me)... if that's the case, this little changes will improve a lot our TravisCI run avoid duplicated builds from the pushed branch and PRs... 
",16,1,"['type: feature', 'status: accepted', 'reso: completed']"
4113,28227278,1778,3834332,2015-01-28 20:38:14,2015-01-28 23:59:42,closed,Move files and get correct examples path.,"Cleaning the example directory from other things... the other thing is our continuous integration plumbing, so I moved to a new top level `ci folder`. My first though was to have this `ci` folder inside the `examples` one, but later I remember we ship the examples folder with conda packages and I think is not a good idea to ship other things than just examples...
",7,1,['status: superseded']
4114,28216589,1777,3834332,2015-01-28 18:21:37,2015-02-06 21:24:48,closed,Feature/deploy,,10,4,"['status: accepted', 'type: task', 'reso: completed']"
4115,28190037,1776,3834332,2015-01-28 12:36:36,2015-01-30 17:14:08,closed,Resolving bokeh keyword problem in host name.,"If the bokeh-server host name contains `bokeh` keywork `Config.prefix` value is not the expected value.
For example if the url is `http://bokeh-test.com/bokeh/` the `Config.prefix` value will be `http:/` while the expected value is `http://bokeh-test.com`. It resolved #1775 issue.
",7,1,['status: accepted']
4116,28173432,1774,3834332,2015-01-28 07:30:13,2015-02-03 03:49:33,closed,Add facet tab to Crossfilter,"This was quickly done in response to #1768. Basically, I'm just wrapping the previously highest level plotting method and passing down a single facet per tab, which is then getting used to filter the data further.

I want to take a better look at it to see if I can make the ""getting filtered data"" and ""getting facets"" a bit more consistent. I think I have a bug left there in the 2d one as well, but haven't tested it yet.

[Here are some screenshots](http://imgur.com/a/MemMe) of it working.
",31,13,['status: accepted']
4117,28156695,1771,3834332,2015-01-27 23:59:44,2015-01-28 13:56:42,closed,Add doc build to the devel build script...,"Just add some lines to automate the upload of the devel build docs to bokeh/dev.
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
4118,28142973,1770,3834332,2015-01-27 20:47:21,2015-01-28 13:55:52,closed,Remove debugging lines.,"Removing lines introduced by #1755 
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
4119,28084937,1765,3834332,2015-01-27 05:31:42,2015-01-28 14:29:37,closed,Task/remove bokeh js,"We are shipping the BokehJS source inside our tar.gz packages... it does not make sense and add a lot of size to the final packages. So I made some changes to avoid grafting BokehJS when you are building the `sdist` (also remove some files as spurious html). Also, I change the behaviour (and messages) to avoid the `install_js` and `build_js` options when you are installing from a tar.gz package (I think those options make sense only in a dev environment where you are able to build BokehJS).

With this PR the final size goes from above **33 Mb** to **13 Mb**...

I tested a lot of combinations and it seems to work as expected.

Pinging @bokeh/core... 
Also ping @arunpersaud who build rpm packages...
",4,4,"['status: accepted', 'type: task', 'reso: completed']"
4120,28034057,1764,3834332,2015-01-26 15:26:12,2015-01-29 18:28:48,closed,Stock app fixes for new api,"This should provide the other part of bokeh/bokeh#1758. I need to look back through this to make sure it is working correctly when I have some time, so not quite ready. It at least pops up and appears to work.

I also added a script to more easily download the data required.
",8,7,['status: accepted']
4121,27978825,1762,3834332,2015-01-24 16:52:39,2015-01-26 15:17:00,closed,Detect if you are inside an IPython instance to load the notebook.,"Issues fixes: #1761 

Let's see if this works...
",2,1,['status: accepted']
4122,27976224,1760,3834332,2015-01-24 13:03:44,2015-01-24 14:19:56,closed,Dashpattern accept tuples,"issues: closes #889 
- Dashpattern accepts tuples
- Tests for dashpattern with tuples
",1,1,['status: accepted']
4123,27971341,1759,3834332,2015-01-24 04:10:04,2015-01-27 17:22:32,closed,document all models completely,"issues: closes #1747 
",19,25,['status: accepted']
4124,27962181,1757,3834332,2015-01-23 22:50:52,2015-01-26 15:52:13,closed,Crossfilter bug fixes and documentation,"Issues: fixes #1703

Going ahead and opening this pull request for discussion. It is nearly complete, containing a lot of documentation additions, and fixes a few bugs. Might be a little overboard with comments/docs, but good for an example application.

I left some todos in there that I'll clean up before finalizing it and there is one remaining bug I've found that I cannot track down. Result is an error on the javascript side when creating a scatter plot with categorical data on the x axis and continuous on the y axis. The result is an empty plot area.
",6,4,['status: accepted']
4125,27941100,1756,3834332,2015-01-23 17:39:23,2015-01-23 20:01:41,closed,effectively dilate canvas by 1px,"issues: fixes #165 

Fix is actually to reduce the cartesian_frames width/height by 1, and keep canvas size exactly set to what the user specifies. 

Not entirely happy about this fix, there is an asymmetry --- canvas frame is reduced in `plot.coffee` but fixup for view/screen transform happens in `canvas.coffee`. But this is due to a poor separation of concerns and I would rather address that in a larger PR that cleans up some of the layout code. 
",8,1,['status: accepted']
4126,27938623,1755,3834332,2015-01-23 17:04:28,2015-01-27 20:23:45,closed,WIP Fix for conda build,,5,2,"['status: accepted', 'type: task', 'reso: completed']"
4127,27937403,1753,3834332,2015-01-23 16:47:57,2015-01-23 19:16:07,closed,Make sure sys is available for sys.exit() call on failure,"Ideally this doesn't fail, but at least this allows it to fail the way it's intended to. :-)
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4128,27934098,1752,3834332,2015-01-23 16:04:34,2015-01-24 00:51:29,closed,fix zeros reset bug in selection histogram,"isses: fixes #1709 

NOTE: also renamed to `selection_histogram.py`
",2,3,['status: accepted']
4129,27924640,1750,3834332,2015-01-23 13:51:47,2015-01-23 14:46:22,closed,Temporary fix until conda get fixed with python3.,"Just that...
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
4130,27877188,1745,3834332,2015-01-22 20:58:18,2015-01-23 20:02:57,closed,Catch IOError in load_notebook and add logging to the python side...,"Prompted by https://github.com/bokeh/bokeh/pull/1742#issuecomment-71072802, I needed to add some logging capabilities in the python side.

@mattpap @bryevdv 
",3,6,"['status: accepted', 'type: task', 'reso: completed']"
4131,27803087,1742,3834332,2015-01-21 22:55:20,2015-01-22 18:29:54,closed,Feature/ipython,"This PR closes #1375 and indirectly #1697 and #867.

IPython/Jupyter does not provide a way to know if we are inside a notebook for multiples reasons already exposed in mailing list and other places. Essentially, the frontend does not know about the things happening at the kernel level. So, to avoid some hacks prone to give errors, let's just load the notebook stuff at the `bokeh.__init__` and fails silently if IPython is not installed. Also provide a way to customize the load_notebook thought some `bokeh.settings` and finally fix all the examples and documentation which does not need to import the `load_notebook` anymore. This also fix, as a side effect the fails importing load_notebook at the IPython/Jupyter 3.0-dev/master...
",6,5,['status: accepted']
4132,27799511,1741,3834332,2015-01-21 22:06:57,2015-02-09 18:16:48,closed,1730 hide axis,"This allows to skip the rendering of the axis and possible other rendered elements.

https://github.com/bokeh/bokeh/issues/1730
",18,5,['status: accepted']
4133,27797033,1740,3834332,2015-01-21 21:36:45,2015-02-11 21:01:21,closed,Add test matrix script,"issues: closes #1739 
",6,6,['status: accepted']
4134,27763430,1736,3834332,2015-01-21 14:35:01,2015-01-23 14:49:34,closed,Allow automodule to correctly document Bokeh models classes,"issues: closes #1690
",18,20,['status: accepted']
4135,27759890,1735,3834332,2015-01-21 13:43:10,2015-02-04 18:42:25,closed,Charts inherits from plots,"Issues: fixes #1464 fixes #1528 fixes #1574 

API redesign based on the discussed builder pattern
",29,86,['status: accepted']
4136,27710698,1733,3834332,2015-01-20 20:47:14,2015-02-03 13:53:24,closed,Adding Horizon high-level chart (clean version),"Here is another cleaned version of the horizon chart based on previous feedback and comments.
",71,20,"['type: feature', 'status: accepted', 'reso: completed']"
4137,27643045,1729,3834332,2015-01-19 23:24:20,2015-01-21 00:12:09,closed,"In the timeseries tutorial, formatting the X-axis as dates","Pull requests with the fixes suggested in #1728. In the timeseries tutorial:
- Displaying the X-axis values as dates (not the numerical representation of the date)
- Customizing the format of the dates
- Naming the axis
",9,1,['status: accepted']
4138,27639278,1725,3834332,2015-01-19 22:09:42,2015-01-20 21:48:05,closed,Adding horizon plot to the high-level charts API,"This is an initial pull in order to get some reviews and feedbacks.

I would need help in order to add an y axis which would represents the series names. Also, being able to discard the original y axis which doesn't represent the right numbers since the folds are stacking the heights.

About the hover tooltips, I don't know how to configure them to display the: series names / datetime / and y value of the specific series being mover over.

Thank you for taking the time to look at this patch...

Note: superseded by #1733
",5,3,['status: superseded']
4139,27633829,1724,3834332,2015-01-19 20:34:07,2015-05-11 11:52:36,closed,Unify orientations and anchors,"This changes `Legend(orientation=...)` to `Legend(anchor=...)`, which I think makes more sense. It also adds more anchor points and unifies this with `Image*.anchor`. No backwards compatibility yet.
",6,1,['status: WIP']
4140,27589548,1722,3834332,2015-01-19 07:47:03,2015-01-19 13:23:36,closed,Fix parameter name,"Fix for issue #1717
",1,1,['status: accepted']
4141,27563268,1720,3834332,2015-01-17 22:27:05,2015-01-26 14:06:42,closed,"Ability to build docs on Windows, plus notes on dependencies","This should close bokeh/bokeh#1702. Update list of required libraries to build docs, along with updating the make.bat file to build the entire documentation on Windows.
Reference additional requirements on data and libraries within dev guide.

Add development notes within conda environment and in Windows. 
",7,3,['status: accepted']
4142,27486589,1718,3834332,2015-01-16 06:26:32,2015-01-24 01:26:05,closed,"Clean up, some documentation, and fixes for slider app to work with the figure class","Some quick fixes to get the sliders app working again, plus some additional clean up.
",7,3,['status: accepted']
4143,27459192,1713,3834332,2015-01-15 20:24:57,2015-02-10 15:33:38,closed,Feature/blaze blueprint,,13,44,['status: accepted']
4144,27419949,1704,3834332,2015-01-15 10:53:51,2015-02-20 15:40:41,closed,Implement line hit testing and hover inspection along lines,"Issues: #1486 
",2,2,['status: WIP']
4145,27366846,1701,3834332,2015-01-14 17:23:13,2015-01-16 13:23:25,closed,Bugfix donut chart line,"Issues: #1578 
",5,5,['status: accepted']
4146,27305592,1698,3834332,2015-01-13 21:18:23,2015-01-21 00:07:07,closed,Sphinx bokeh-plot directive,"issues: closes #1694 closes #1305 
",16,33,['status: accepted']
4147,27277875,1695,3834332,2015-01-13 15:16:03,2015-01-14 00:59:49,closed,Pin scipy,"Pin scipy to avoid failure with ggplot/statsmodels until statsmodels release the fix (https://github.com/statsmodels/statsmodels/pull/2160).
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
4148,27228750,1687,3834332,2015-01-12 21:44:35,2015-01-13 15:06:15,closed,Release 0.7.1,"All the steps already done except for:
- [x] conda packages
- [x] ANNs
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
4149,27203647,1685,3834332,2015-01-12 15:56:16,2015-01-12 16:49:08,closed,initial cut at script to autodoc json models,"issues: closes #1581

needs to be re-run by hand to replace source/docs/reference/models.rst for now
",1,1,['status: accepted']
4150,27174388,1681,3834332,2015-01-12 04:09:48,2015-01-12 13:06:05,closed,allow sliders to have float step size,"issues: fixes #1679
",1,1,['status: accepted']
4151,27174316,1680,3834332,2015-01-12 04:05:06,2015-01-12 04:06:15,closed,allow floating point step size for sliders,,1,6,['status: declined']
4152,27170376,1676,3834332,2015-01-11 23:54:25,2015-01-12 16:21:20,closed,Add more CLI examples,"Issues: fixes #1596  fixes #1597  fixes #1598 

add new examples that show off CLI features:
- CLI creating Scatter, Line and GMap charts
- Simulate CLI reading tweets data from a csv file
- Simulate CLI creating static file charts mixing GMap and Scatter charts
- Show CLI data series filtering and selection (with copying data from select functionality).
",2,3,['status: accepted']
4153,27169923,1675,3834332,2015-01-11 23:15:44,2015-01-12 18:16:46,closed,misc docs updates leading to 0.7.1 release,,0,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4154,27156461,1665,3834332,2015-01-10 23:49:35,2015-01-12 00:04:28,closed,Embed simple,"A simpler embeding example
",5,7,"['type: feature', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4155,27126163,1662,3834332,2015-01-09 20:18:12,2015-01-12 12:50:28,closed,Fix issue with categorical charts allowing pan/zoom tools ,"Issues: fixes #1660 
",1,1,['status: accepted']
4156,27124821,1661,3834332,2015-01-09 19:57:43,2015-01-12 18:09:25,closed,small fixes or updates to demos leading to 0.7.1 release,"Should not have any files changed outside `examples/`
",3,9,"['status: accepted', 'type: task', 'reso: completed']"
4157,27100038,1658,3834332,2015-01-09 13:36:53,2015-01-09 15:20:06,closed,Fix typo,"Fix a small typo in the User Guide docs
",1,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4158,27097082,1657,3834332,2015-01-09 12:31:48,2015-01-09 19:33:04,closed,add/improve minimal CLI features,"This PR includes many CLI improvements and new functionalities. In details:

New CLI Options:

--update_ranges: if specified forces the plot ranges to be updated when streaming new data to the server
--legend: if specified force to show legend on the plot
--window_size (int): show up to N values then start dropping off older ones
--map (lat,lon): sets GMap plot location
--smart_filters: if specified adds selection tools and button to select data from plot (copy to clipboard NOT WORKING yet)

New CLI Features:
- new support to Scatter Charts
- new support to GMap charts
",0,17,"['type: feature', 'status: accepted', 'reso: completed']"
4159,27061238,1655,3834332,2015-01-08 21:28:52,2015-01-09 04:20:49,closed,Fixing line downsample bug. ,"Closes #1654.  Uses same return path for the code path where there are so few points that downsampling is skipped.

Change to data.py makes debugging easier by not reusing a variable name.
",2,2,['status: accepted']
4160,27057168,1653,3834332,2015-01-08 20:29:28,2015-01-09 17:08:59,closed,Add support for date formatter/editor to DataTable,"This partially addresses #1563.
",3,7,['status: accepted']
4161,27051538,1652,3834332,2015-01-08 19:10:01,2015-01-09 04:14:28,closed,Default tools on mpl.to_bokeh,"Fixes #1557.

Just using the @fpliger refactored tools to use default tool on mpl converted plots.
",1,3,['status: accepted']
4162,27036213,1649,3834332,2015-01-08 15:38:53,2015-01-08 16:55:30,closed,Replace mpl.show(...) with show(...),"Followup on PR #1634.
",7,1,['status: accepted']
4163,27032992,1648,3834332,2015-01-08 14:52:49,2015-01-08 15:34:02,closed,"check for sx, sy for snap_to_data","issues: fixes #1644 

This implements the ""short term fix"" described in the issue. 
",2,1,['status: accepted']
4164,27023479,1646,3834332,2015-01-08 11:53:58,2015-01-08 17:59:07,closed,change charts show behaviour when server and notebook are specified,"Issues: fixes #1621
",1,1,['status: accepted']
4165,26992779,1643,3834332,2015-01-07 22:23:42,2015-01-08 13:19:41,closed,Don't request_render() twice during plot initialization,"This is the first commit of PR #1543.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4166,26977858,1641,3834332,2015-01-07 18:45:52,2015-01-08 13:41:00,closed,don't use global $,"issues: fixes #1606 

This should get some additional hand checking. 
",2,2,['status: accepted']
4167,26977247,1640,3834332,2015-01-07 18:36:16,2015-01-08 18:05:01,closed,accept None as a placeholder for empty cells in a grid plot,"issues: fixes #1636

ping  @tr8dr also note `None` will work in grid plots in 0.7.1  
",19,2,['status: accepted']
4168,26927619,1639,3834332,2015-01-06 23:46:27,2015-01-07 18:46:39,closed,"allow log tickers to use base, etc.","issues: closes #1590 

This was a little more involved. To get the properties correct on the python side, make tickers follow JS inheritance hierarchy properly. However, log axes had hard coded 10 as a base. Plumbed up ticker and formatter on JS side to properly use and display ticks for bases other than 10. Requires that `LogTickFormatters` be configured with a corresponding `LogTicker` (otherwise they default to `base=10` and warn in the console). 
",3,2,['status: accepted']
4169,26918946,1637,3834332,2015-01-06 21:23:03,2015-01-06 22:37:59,closed,Task/minor docs,"issues: closes #1129 closes #1535 closes #1607 
",3,6,['status: accepted']
4170,26892487,1634,3834332,2015-01-06 14:43:31,2015-01-08 14:45:09,closed,Make to_bokeh() return the figure,"fixes #1554
",0,3,['status: accepted']
4171,26892119,1633,3834332,2015-01-06 14:37:23,2015-01-08 16:25:29,closed,Add new GMap chart implementation,"Issues: fixes #1629 
",1,1,['status: accepted']
4172,26891138,1632,3834332,2015-01-06 14:20:27,2015-01-06 16:17:01,closed,Fix encoding and line endings,"issues: fixes #1605
",3,3,['status: accepted']
4173,26889674,1631,3834332,2015-01-06 13:52:00,2015-01-07 18:11:35,closed,Don't use unminified resources in bokeh.plotting,"issues: fixes #1627
",5,2,['status: accepted']
4174,26889433,1630,3834332,2015-01-06 13:47:07,2015-01-08 14:06:04,closed,Use fixed period when accessing Yahoo's finance data,"fixes #1610
",6,3,['status: accepted']
4175,26868394,1628,3834332,2015-01-06 03:45:01,2015-01-06 03:50:22,closed,Typo fix ``line_with`` -> ``line_width`` in iPython interactive widgets notebook example,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4176,26855275,1626,3834332,2015-01-05 22:14:23,2015-01-06 16:18:57,closed,Plot.add_tool wrong error message,"Issues: fixes #1625 
",2,1,['status: accepted']
4177,26852230,1624,3834332,2015-01-05 21:27:09,2015-01-08 18:55:38,closed,Add real support for custom tools on charts,"Issues: fixes #1459 

Add support for custom tools on charts using strings like plotting interface. It is also possible to disable tools specifying `tools=False` or to use charts standard tools specifying `tools=True`.

Pan and Zoom are automatically removed if chart scale is categorical (i.e.: HeatMap)
",2,4,['status: accepted']
4178,26847911,1623,3834332,2015-01-05 20:17:24,2015-01-05 22:58:00,closed,"per-renderer selector, handle appends correctly","issues: fixes #1622 
",3,3,['status: accepted']
4179,26771761,1620,3834332,2015-01-02 21:25:26,2015-01-07 17:26:04,closed,task/1593 linked selection histogram,"issues: closes #1593

**NOTE** requires a BokehJS rebuild (adds a `select_every_mousemove` property to `LassoSelectionTool`) 

@pzwang can you check this out and provide feedback? If necessary, is just the one historgram sufficient (for now)? I don't believe the grid plot layout can accept an ""empty"" space just yet, so laying out a vertical histogram might be a little tricky (or we can improve the grid layout but I'd like to move on). 

Considering adding control to set the number of bins, any other suggestions?
",36,11,['status: accepted']
4180,26749401,1619,3834332,2015-01-02 03:46:33,2015-01-02 20:19:03,closed,fix broken link to quickstart,"the link in README.md is currently broken, this fixes it
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4181,26738610,1617,3834332,2014-12-31 23:46:37,2015-01-02 20:19:56,closed,never use name as a substitute id,"issues: fixes #1592 
",10,2,['status: accepted']
4182,26729204,1616,3834332,2014-12-31 17:00:34,2015-01-06 21:39:32,closed,Task/1594 numba kernels,"issues: closes #1594 

~~~**NOTE** this notebook currently suffers from the problem described in #1592 For now, only execute the cells in the ""gaussian blur"" section, or the ""3x3 kernels"", or the ""wavelets""  section, but **not more than one** (i.e., do not ""run all"" cells)~~~
",11,10,['status: accepted']
4183,26729197,1615,3834332,2014-12-31 17:00:28,2015-03-28 13:12:00,closed,Fun with PIL and bokeh circle glyphs,"Just for fun example, originally developed during pydata london 2013

Jpg is one of my photos, no copyright on that!
",4,3,"['type: feature', 'reso: working as intended', 'status: declined']"
4184,26721774,1614,3834332,2014-12-31 11:22:40,2014-12-31 15:05:30,closed,Fix FactorRange too permissive,"issues: closes #1516

Definition of FactorRange is currently too permissive. Right now FactorRange accepts List(Any) but this should probably be Either(List(String), List(Int))
",0,6,['status: accepted']
4185,26714896,1613,3834332,2014-12-31 04:34:30,2014-12-31 14:46:27,closed,corrected typo to fix issue #1612,,3,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4186,26693857,1611,3834332,2014-12-30 17:11:45,2014-12-31 15:09:04,closed,Added easy Range1d interface as issue #1516,"issues: closes #1516

Added easy FactorRange interface as bonus
",4,5,['status: superseded']
4187,26668514,1609,3834332,2014-12-30 00:13:22,2014-12-30 16:51:54,closed,Docs build/deploy improvements,"issues: closes #1608
",6,7,['status: accepted']
4188,26624010,1604,3834332,2014-12-28 13:36:35,2014-12-30 16:06:15,closed,Add some widget testing and minor fix for object testing,"Added some testing for the widget models
Fixed a double import in object testing
",1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4189,26623779,1603,3834332,2014-12-28 13:06:20,2014-12-30 17:04:08,closed,"Add title as an arg to plotting.save, try to use config if not given ","issues: fixes #1601
",1,3,['status: accepted']
4190,26617799,1602,3834332,2014-12-27 20:32:51,2014-12-30 16:04:26,closed,FAQ / question about ggplot,"Following issue #1600: added a few lines to FAQ about ggplot. 

To me it was quite confusing that in early releases there was an implementation of ggplot, but it was not documented and later disappeared. Since that old [video](http://www.pyvideo.org/video/1224/bokeh-an-extensible-implementation-of-the-gramma) is still online, I think it would be good to clearly state that Bokeh does not and will not contain implementation of ggplot.
",4,1,['status: accepted']
4191,26571418,1591,3834332,2014-12-25 01:26:28,2014-12-30 16:05:25,closed,Clean up unused properties,"issues: closes #1583 
",1,8,['status: accepted']
4192,26560527,1588,3834332,2014-12-24 14:33:07,2014-12-30 16:04:51,closed,expose histogram chart density attribute,"Issues: fixes #1507 

`Histogram` chart density attribute is now created and exposed so users can change the Histogram behaviour in order to use or not a ""normalized"" probability.
",1,3,['status: accepted']
4193,26555208,1587,3834332,2014-12-24 11:17:53,2014-12-31 15:33:03,closed,Fix donut input bugs,"Issues: fixes #1551  fixes #1529 
",0,2,['status: accepted']
4194,26532704,1582,3834332,2014-12-23 21:18:24,2014-12-30 16:07:01,closed,add param to force all attributes (even unchanged ones) to be dumped,"issues: closes #1580 
",3,1,['status: accepted']
4195,26479507,1577,3834332,2014-12-22 20:39:09,2015-02-26 16:38:01,closed,evaluate rbush spatial indexes lazily,"issues: closes #1542 

Performance seems to be OK just evaluating lazily all the time. Can add tool hinting for pre-indexing later if necessary. 

Update: I'm no longer convinced this actually addresses the issue in #1542 (more investigation needed) but lazy eval of indices is probably a reasonable thing to do in any case. 
",10,2,['status: declined']
4196,26448775,1576,3834332,2014-12-22 10:24:49,2015-01-08 17:50:49,closed,Fixes and improvements to palettes and LinearColorMapper,"issues: fixes #1545
",7,9,['status: accepted']
4197,26447058,1575,3834332,2014-12-22 09:45:11,2014-12-23 21:25:07,closed,"Don't ""fix"" singleton array case when expected type is array","This is required to allow passing arrays as scalar values.
",7,1,"['status: accepted', 'type: task', 'reso: completed']"
4198,26399804,1573,3834332,2014-12-19 21:20:13,2014-12-23 14:20:33,closed,Hotfixes/charts,"Issues: fixes #1475  fixes #1490 

Note: except for subitems:
- decide about current _charts.Chart.plot implementation (based on property to support facet)
- choose a better way to deal with the high number of charts keywords arguments

that are going to be managed on separate self contained PRs

So, fixes:
- collect convenience methods like donut.polar_to_cartesian somewhere meaningful ad not in specific chart modules
- inputs conversion to DataAdapter on charts should be grouped on a common place (on get_data?) to improve conceptual understanding
- redefine xgrid and ygrid as instance attrs and not class
",3,7,['status: accepted']
4199,26392662,1572,3834332,2014-12-19 19:19:14,2015-01-14 12:34:23,closed,remove deprecations and update tests and code that used decprecated APIs,"issues: closes #1571 

Note: should be merged just prior to 0.8 release. 
",9,6,['status: accepted']
4200,26373032,1569,3834332,2014-12-19 14:03:05,2014-12-19 21:10:52,closed,add tests for BoxPlot chart,"Issues: fixes #1471 

Add the last missing test for class BoxPlot
",1,1,['status: accepted']
4201,26371027,1568,3834332,2014-12-19 13:25:57,2015-01-21 23:44:36,closed,Programmatically upload bokeh js/css to the container,"This PR add a simple and isolated script to upload bokeh.[min].js[css] files to Rackspace.
This helps in the release process and BEP-2 has to be modified accordingly after merging.
",19,7,"['status: accepted', 'type: task', 'reso: completed']"
4202,26366844,1567,3834332,2014-12-19 11:53:28,2014-12-19 16:07:10,closed,Use the containerized TravisCI infrastructure.,"As suggested by this article... http://blog.travis-ci.com/2014-12-17-faster-builds-with-container-based-infrastructure/

I have seen build starting sooner and a some improvement in the total run time... but for a definitive answer, we need to run several builds to make a better comparison...

In any case, it seems something adding value with no risk so far... and it is a simple change we can go back if things get buggy in the new docker-based infrastructure....
",2,1,"['type: feature', 'status: accepted', 'reso: completed']"
4203,26255938,1565,3834332,2014-12-17 20:57:42,2015-01-08 16:22:43,closed,Command Line Interface (CLI) Tool ,"Issues: Fixes #978 

Add a command line tool to expose `bokeh.charts` functionality (and hopefully many other niceties) from command line
",3,20,['status: accepted']
4204,26115076,1558,3834332,2014-12-16 00:53:49,2014-12-16 01:55:46,closed,Hotfix/pandas,"issues: fixes: #1556 

In particular the pandas problem. The solution was to add an specific parameters to get the proper parsing.
",1,2,['status: accepted']
4205,26089202,1553,3834332,2014-12-15 18:12:49,2014-12-18 12:00:37,closed,Update README.md,"Making it easier for others to navigate the documentation.
",2,7,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4206,26074001,1552,3834332,2014-12-15 14:52:03,2014-12-18 21:05:15,closed,Task/charts style and docstrings,"Issues: Fixes: #1475 

NOTE: It fixes most of those suggestions in the related issue . I think it makes sense just make this PR close that issue and open a couple of specific issues for what's missing...
",1,11,['status: accepted']
4207,26047882,1550,3834332,2014-12-15 05:23:40,2014-12-15 14:08:54,closed,Fixed typo: BojehJS -> BokehJS,"BokehJS was misspelled on line 84.
",1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4208,26030147,1548,3834332,2014-12-14 04:08:17,2014-12-15 14:10:16,closed,s/Dic/Dec,,1,1,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4209,25985142,1544,3834332,2014-12-12 16:30:51,2014-12-16 01:57:08,closed,"Use more specific type for Plot.{left,right,above,below}",,2,1,"['status: accepted', 'type: task', 'reso: completed']"
4210,25982000,1543,3834332,2014-12-12 15:47:33,2015-02-09 22:33:31,closed,Optimise bokehjs (part 1),"This is first round of bokehjs optimisations. For now I tested this only on one example (scatter plot, 100k points), so bokehjs may be significantly broken.
",4,9,['status: WIP']
4211,25976121,1541,3834332,2014-12-12 14:21:19,2014-12-16 15:47:14,closed,Remove CategoricalHeatMap,"Issues: fixes #1472 
",1,6,['status: accepted']
4212,25940931,1540,3834332,2014-12-11 23:21:31,2015-01-22 15:40:10,closed,Some improvements on the devel build,"This is partially addressing #1149 and some discussion happening in #1518

Essentially it simplify the build script a little bit and add some new behaviour/functionality:
- The script create a local tag in the current HEAD and take that to build the name of the package: Now you pass the string `0.7.1-devel` to the script, and that would be the tag and, for instance, this would be the name: `bokeh-0.7.1.devel.f5b9b75-np19py34_1.tar`, where 0.7.1 it is the same than before, but now, we are not using the date anymore, instead the commit sha from that revision point. That's prevent errors when you upload two or more devel builds at the same time (and will also be useful to determine the exact point where a bug comes appear).
- You can pass the Rackspace user and key API (you can use env var too) and it will push devel build form of the bokeh.[min].js and bokeh.[min].css files but with the version included, for instance: `bokeh.0.7.1.devel.f5b9b75.js`
- The script also take care of deleting all the build stuff we generated, including the malicious `__conda_verision__.py`. It also delete the converted packages, `dest/` and `build/`.

I can imagine a lot of enhancements... and some of then were discussed in #1149. But, this is functional as is and I plan to use it tomorrow to upload a devel build, as a functionality test. We can probably merge this soon, after the review, and then iterate on other changes in a new PR.

Damian
",8,27,"['status: accepted', 'type: task', 'reso: completed']"
4213,25857261,1539,3834332,2014-12-10 21:36:47,2014-12-11 12:54:48,closed,debugjs setting was broken,"dev setting is not used at all, it's just a command line setting that sets a bunch of other settings
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4214,25831597,1538,3834332,2014-12-10 15:51:06,2014-12-11 20:21:48,closed,Add charts base tests,"Issues: Fixes #1471 Fixes #1527 

Add base tests for all Chart classes (except BoxPlot),  and DataAdapter.

Test are not enough to say Charts are well covered by test but are a good foundation and test classes can be used from now on to add more tests, refactoring and to be extended when adding specific features
",2,9,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4215,25815234,1537,3834332,2014-12-10 11:27:58,2014-12-10 13:41:59,closed,Use conda graphviz package.,"TravisCI is looking for http://security.ubuntu.com/ubuntu/pool/main/g/graphviz/graphviz_2.26.3-10ubuntu1.1_amd64.deb (which doesn't exist). 
It appears that graphviz was updated to graphviz_2.26.3-10ubuntu1.2_amd64.deb
Until the package index get update, let update for ourselves.
",3,2,"['status: accepted', 'type: task', 'reso: completed']"
4216,25796468,1534,3834332,2014-12-10 03:20:47,2014-12-10 13:46:07,closed,"Fall back to ""Circle"" for unhandled matplotlib markers","issues: fixes #1524 

Currently, bokeh throws a KeyError if a matplotlib marker not handled by mpl.py is used.  This change causes bokeh to instead fall back to the Circle marker, allowing matplotlib graphs to be visualized even if the chosen marker is not handled (albeit with a different marker shape).
",4,1,['status: accepted']
4217,25755667,1531,3834332,2014-12-09 16:24:01,2015-01-14 01:27:04,closed,Preliminary support for arrow glyphs,,2,1,['status: WIP']
4218,25709000,1525,3834332,2014-12-09 00:06:46,2014-12-09 04:19:12,closed,fix gallery issues related to release,"issues: fixes #1513 fixes #1523 

repairs tutorial gallery build, fixes ""out of sync"" mpl examples. 
",6,13,['status: accepted']
4219,25657475,1520,3834332,2014-12-08 10:37:01,2015-06-23 11:32:59,closed,The initial commit of selenium environment,"First draft of selenium environment for bokeh.
Please read `README.md` file and follow it recommendations.
",54,72,['status: WIP']
4220,25628284,1511,3834332,2014-12-07 05:04:12,2014-12-09 21:45:28,closed,add a separate tooltip for every hover tool renderer,"issues: fixes #1510 

Implements the short term fix described in the issue. May result in multiple tooltips if there are hits on multiple renderers at once, but I think this is preferable to the current situation, since the renderers list can be explicitly reduced, if desired. 
",3,1,['status: accepted']
4221,25589652,1506,3834332,2014-12-05 18:26:06,2014-12-09 02:16:19,closed,Release 0.7.0,"Everything is done except for:
- upload to repo.continuum (WIP)
- tutorial fixes (it will be updated by tomorrow)
- blog post and social media (it will be done after upload to repo.continuum finish)
",7,2,"['status: accepted', 'type: task', 'reso: completed']"
4222,25586770,1505,3834332,2014-12-05 17:38:11,2014-12-09 21:49:15,closed,More objects -> models renames,"fixes #1406
",7,6,['status: accepted']
4223,25574456,1504,3834332,2014-12-05 14:38:52,2014-12-05 16:49:39,closed,Documentation Updates for Release 0.7,,0,8,"['status: accepted', 'type: task', 'reso: completed']"
4224,25496592,1502,3834332,2014-12-04 13:49:14,2014-12-05 13:23:09,closed,Update documentation for 0.7 release,"issues: fixes #1473 

In general this PR should be used to update documentation for upcoming 0.7 release
",1,5,['status: accepted']
4225,25486151,1501,3834332,2014-12-04 10:33:52,2014-12-04 18:20:07,closed,Fix broken stock app,"issues: fixes #1444 
",4,2,['status: accepted']
4226,25446315,1500,3834332,2014-12-03 19:51:58,2014-12-04 18:27:45,closed,Fix charts not working with server output,"Examples seem work with server=True now. 
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
4227,25444286,1499,3834332,2014-12-03 19:24:02,2014-12-04 20:05:36,closed,add deprecations to glyph funcs on Document,,6,2,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4228,25384493,1497,3834332,2014-12-02 23:39:30,2014-12-03 20:04:31,closed,Recover embed examples,"fixes #1458 

This recover the embed examples: 2 scripts and the reveal-based flask-based embed-based application :wink:

I just opened this as an standalone PR because it is a group of related examples and I am reintroducing them as a whole, not just tiny fixes like we will push to the pre-release example PR.
",7,14,['status: accepted']
4229,25378714,1496,3834332,2014-12-02 22:08:17,2014-12-03 02:14:44,closed,Fix unitialized var usage in Bokeh.index,"Pointed out on the mailing list, trivially incorrect code using uninitialized view. 
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
4230,25376542,1495,3834332,2014-12-02 21:38:08,2014-12-02 22:51:22,closed,allow data sources to be updated in the notebook without bokeh-server,"issues: closes #1488
",1,1,['status: accepted']
4231,25376015,1494,3834332,2014-12-02 21:31:01,2014-12-02 22:19:29,closed,Fix glyph maker legend rendering issue,"issues: fixes #1474 

_render was updated but the legend code that calls it was not.
",3,1,['status: accepted']
4232,25309240,1489,3834332,2014-12-01 23:59:49,2014-12-09 22:51:56,closed,authentication refactoring,"This change makes the bokeh server authentication authentication more pluggable (one can create a new authentication backend and get finer grained controls over who can access which documents)
also renames check_read_auth_and_create_client and check_write_auth_and_create_client
since we're no longer creating clients anymore in those functions

There is no reason to merge this before 0.7 release, so we should wait till after, but the changes should be fairly benign
",3,1,"['type: feature', 'status: accepted', 'reso: completed']"
4233,25293719,1485,3834332,2014-12-01 19:49:29,2014-12-02 03:28:43,closed,more specific css - otherwise when bokeh plots are embedded inside list ...,"...items, hovering overthe parent triggers all tool tips

@LilaHickey please review?
",5,1,"['type: bug', 'status: accepted', 'reso: completed']"
4234,25290293,1484,3834332,2014-12-01 18:58:56,2014-12-11 13:11:35,closed,Add glyphs/sprint example,"This (almost) reproduces http://www.nytimes.com/interactive/2012/08/05/sports/olympics/the-100-meter-dash-one-race-every-medalist-ever.html.

Besides the example this PR:
1. Adds support for number formatting to hover tooltips.
2. No more `Text(angle=0)` or `ImageUrl(angle=0)` (added default value).
3. Adds `Text.{x,y}_offset` (`screen` units by default).
4. Adds `Plot.add_glyph(glyph)` syntax (`source` is optional).
5. Removes dummy data sources (this PR and a few older ones replace PR #1052).
6. Makes `Plot` maintain (local, i.e. given a renderer level) order of renderers (#696).
",11,28,"['type: feature', 'status: accepted', 'reso: completed']"
4235,25231621,1470,3834332,2014-11-30 06:35:55,2014-12-01 22:02:00,closed,Restore Abstract Rendering and Remote Image,"Extends PR #1467 and PR #1421 to get abstract rendering up and running completely.

Includes a work-around for issue #1469.
Closes #1466 (via contributions from PR #1467) and #1414 (with contributions from PR #1421).
",3,13,['status: accepted']
4236,25119616,1467,3834332,2014-11-26 22:59:10,2014-11-30 12:09:02,closed,Add from_json() to PrimitiveProperty and Either,"This fixes issues with deserialization in abstract rendering. Related #1470
",4,1,['status: accepted']
4237,25110915,1465,3834332,2014-11-26 20:12:29,2014-12-05 14:02:46,closed,Task/examples,"issues: none

Also removed the extra ""_resize_"" in the ""_TOOL_"" variable definition of **periodic.py**
",2,5,"['status: accepted', 'type: task', 'reso: completed']"
4238,25100867,1463,3834332,2014-11-26 17:30:27,2014-11-28 00:36:48,closed,logo enhancements,"issues: fixes #1368
- [x] possible to disable log entirely
- [x] option for grey/desat logo
- [x] match toolbar button sizes and center
",2,2,['status: accepted']
4239,25098829,1462,3834332,2014-11-26 17:02:53,2014-11-26 20:12:56,closed,gridplot toolbar fixes,"issues: fixes #1461 
",1,2,['status: accepted']
4240,24969920,1457,3834332,2014-11-24 22:36:33,2015-01-14 01:20:37,closed,Move base64 encoded images (tool button icons) to continuum.less,,5,1,['status: WIP']
4241,24890413,1454,3834332,2014-11-22 16:52:32,2014-11-22 23:02:02,closed,Making animated demo work (API change?),"This code gave some errors when trying to execute it. Firstly the same as I reported here:

https://github.com/bokeh/bokeh/pull/1453

About figure returning `None`.

Then it seems `GlyphRenderer` is now `Glyph`.

And the method `select` was not found, so I took from some other example those lines to choose the renderer.  Other files affected by this:

```
bokeh/examples$ grep -r ""select(dict"" .
./plotting/notebook/random_walk.ipynb:      ""renderer = p.select(dict(name=\""line_example\""))[0]\n"",
./plotting/notebook/animated.ipynb:      ""renderer = p.select(dict(name=\""aw\""))[0]\n"",
./plotting/server/texas.py:hover = p.select(dict(type=HoverTool))
./plotting/server/scatter_selection.py:select_tool = p1.select(dict(type=BoxSelectTool))
./plotting/server/scatter_selection.py:select_tool = p2.select(dict(type=BoxSelectTool))
./plotting/server/hover.py:hover =p.select(dict(type=HoverTool))
./plotting/server/tap.py:tool = p.select(dict(type=TapTool))[0]
./plotting/file/periodic.py:hover = p.select(dict(type=HoverTool))
./plotting/file/les_mis.py:hover = p.select(dict(type=HoverTool))
./plotting/file/unemployment.py:hover = p.select(dict(type=HoverTool))
./plotting/file/texas.py:hover = p.select(dict(type=HoverTool))
./plotting/file/scatter_selection.py:select_tool = p1.select(dict(type=BoxSelectTool))
./plotting/file/scatter_selection.py:select_tool = p2.select(dict(type=BoxSelectTool))
./plotting/file/hover.py:hover =p.select(dict(type=HoverTool))
./plotting/file/tap.py:tool = p.select(dict(type=TapTool))[0]
```
",3,1,"['type: bug', 'reso: working as intended', 'status: declined']"
4242,24889807,1453,3834332,2014-11-22 15:58:00,2014-11-22 23:02:23,closed,Making line example work (has some API changed?),"This code was giving:

```
In [6]: p = figure(title=""simple line example"")

In [7]: p.line(x,y, color=""#2222aa"", line_width=2)
---------------------------------------------------------------------------
AttributeError                            Traceback (most recent call last)
<ipython-input-7-7c66b5d45f9d> in <module>()
----> 1 p.line(x,y, color=""#2222aa"", line_width=2)

AttributeError: 'NoneType' object has no attribute 'line'
```

Using:

```
In [1]: import bokeh
In [2]: bokeh.__version__
Out[2]: '0.6.1'
```

If I actually look what figure returns (in iPython):

```
figure?
Type:       function
String Form:<function figure at 0xacc802c>
File:       /usr/local/lib/python2.7/dist-packages/bokeh/plotting.py
Definition: figure(**kwargs)
Docstring:
Activate a new figure for plotting.

All subsequent plotting operations will affect the new figure.

This function accepts all plot style keyword parameters.

Returns:
    None
```

Is this file (and probably others) outdated in some way?
I'm trying to use bokeh for the first time (on a ubuntu 12.04 without using conda, just doing pip install of bokeh and the related needed libraries).
",1,1,"['type: bug', 'reso: working as intended', 'status: declined']"
4243,24882340,1452,3834332,2014-11-22 02:14:37,2014-11-22 22:14:42,closed,Fix spectrogram issues,"issues: fixes #1442 

Large amplitudes caused the spectrogram to ""hiccup"". This was due to the fact that the ""radial graphic equalizer"" generated a number of wedges proportional to the integrated power spectrum. For large amplitude audio events this could reach to the tens of thousands. Now clamping the the number of wedges to a reasonable value for visual presentation to avoid wasted computation.  
",2,2,['status: accepted']
4244,24874951,1451,3834332,2014-11-21 22:43:29,2014-11-25 16:18:52,closed,Add glyphs/calendars example,"This adds a calendar for 2014, which is a grid plot of 12 categorical plots. Includes US holidays (depends on `icalendar` which I currently install with pip; waiting for conda package). If someone wonders why this is called `calendars.py` not `calendar.py`, then the short answer is not because I plan to add support for choosing the year (perhaps I will, but that's irrelevant). Hint: imports in Python are ""awesome"". 
",12,9,"['type: feature', 'status: accepted', 'reso: completed']"
4245,24856361,1447,3834332,2014-11-21 17:46:12,2014-11-25 16:16:25,closed,Use inproc protocol instead of ipc in bokeh.server,"~~This doesn't work yet.~~ This works now, ~~at least~~ on Linux and Windows.
Fixes #1431
",5,5,['status: accepted']
4246,24782391,1439,3834332,2014-11-20 17:24:31,2014-11-20 21:21:03,closed,"enable clearing of server documents, also store correctly","issues: fixes #1437 

ping @hhuuggoo @mattpap for review
",0,1,['status: accepted']
4247,24780666,1438,3834332,2014-11-20 17:02:03,2014-11-20 19:53:14,closed,Restore pre-34f85b naming convention in glyph_renderer.coffee,"fixes #1427
",0,1,['status: accepted']
4248,24777217,1435,3834332,2014-11-20 16:21:44,2014-11-20 19:39:23,closed,Embed FontAwesome's fonts in CSS (to avoid 404 errors),,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4249,24776279,1434,3834332,2014-11-20 16:10:12,2014-11-26 12:04:05,closed,fixes for gridplot toolbars,"fixes #1433 

@LilaHickey to also look at some toolbar style fixes in this PR
",9,5,['status: accepted']
4250,24774246,1432,3834332,2014-11-20 15:46:05,2014-11-20 19:45:35,closed,Better linked panning / brushing examples,"- [x] add linked panning notebook
- [x] add `plotting/file` examples
- [x] add `plotting/server` examples

fixes #1342 
",1,4,['status: accepted']
4251,24772380,1430,3834332,2014-11-20 15:22:52,2014-11-20 15:23:13,closed,add missing pandas import,"fixes #1429 
",0,1,['status: accepted']
4252,24717511,1424,3834332,2014-11-19 20:15:27,2014-12-05 14:03:55,closed,more unit tests,,3,8,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4253,24712717,1423,3834332,2014-11-19 19:12:49,2014-11-20 16:15:47,closed,"Fixes weird ""NaNs"" in mpl converted plots.","Well, this is on top of #1411, so the diff is really ugly.
It take like an hour to find the issue, but the solution seems simple...
We need to pass the mpl text object properly but avoiding the title and axes names, because in Bokeh they are outside the plot region wheres in mpl is inside of it... so the NaN where is fact the places where mpl believe the title and axes has to be...
The fixes is just keep a register of the title and axis names and avoid to be converted by the draw_text method. 

Thanks.
",5,20,['status: accepted']
4254,24690360,1421,3834332,2014-11-19 14:10:58,2014-11-30 12:25:26,closed,Bugfix/image downsample errors,"Fixes the image downsample server-side transform.  Changes seem to be related to type checking on properties.  

Note: Abstract Rendering still fails due to changes in how deserialization works.  This only fixes image downsampling.
",2,5,['status: superseded']
4255,24620137,1418,3834332,2014-11-18 15:43:19,2014-11-18 17:05:20,closed,increase socket timeout,,1,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4256,24587895,1417,3834332,2014-11-18 04:18:42,2014-11-18 04:58:49,closed,fix typo,"do we need to go through the PR process for changes which are this simple and straightforward?
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4257,24586194,1416,3834332,2014-11-18 03:16:21,2014-11-18 17:09:11,closed,Updated glyph model unpacking for line downsample,"Fixes #1415 

Glyph views developed a 'glyph' entity (not sure when).  Updated references that used to be to the GyphView to  look deeper and get the glyphview.glyph properties...  
",3,1,['status: accepted']
4258,24506039,1411,3834332,2014-11-16 19:46:41,2014-11-19 20:00:15,closed,Update examples to use new plotting API,,17,19,"['type: feature', 'status: ready', 'reso: completed']"
4259,24489265,1408,3834332,2014-11-15 13:55:08,2014-11-17 23:01:08,closed,Add contributing guidelines,"This is partially based on `Microsoft/dotnet` and `IPython/IPython` guidelines.
",17,3,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4260,24488460,1407,3834332,2014-11-15 12:17:31,2014-11-26 02:26:00,closed,"Deprecate bokeh.{objects,glyphs,widgets}","Use `bokeh.models` (and its submodules) instead.
",6,12,"['status: accepted', 'type: task', 'reso: completed']"
4261,24487922,1405,3834332,2014-11-15 11:08:24,2014-11-16 15:16:19,closed,Depend on tornado version 4.0 in conda.recipe/meta.yaml,"fixes #1403
",1,1,['status: accepted']
4262,24487881,1404,3834332,2014-11-15 11:02:48,2014-11-20 14:53:11,closed,Use changed_properties() instead of properties() in HasProps.clone(),"fixes #1400.
",6,3,['status: accepted']
4263,24464064,1401,3834332,2014-11-14 19:24:52,2014-11-14 20:43:14,closed,hotfix/Figure subclass of Plot,"Well, this got left off the last PR, what I get for working in haste. 
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
4264,24367301,1398,3834332,2014-11-13 13:17:45,2014-11-28 00:35:13,closed,improve documentation,"fixes #1391

and add improvements/fixes to documentation
",14,18,['status: accepted']
4265,24336488,1395,3834332,2014-11-13 00:09:27,2014-11-20 14:57:32,closed,Improve DataTable,"fixes #1382.

TODO:
- [x] make slick-grid independent of external styling (currently it looks different in html, server and notebook).
- [x] add support for (multi-column) sorting
- [x] make `DataTable` editable
- [x] restore auto-complete editor
- [x] fix sizing of `DataTable` widget
- [x] figure out correct column sizing (`forceFit` works inconsistently)
- [x] investigate display issues on the server (most likely server's bootstrap issue)
- [x] fix editors based on spinner to show buttons
- [x] implement cell formatters

TODO in a follow-up PR:
- [ ] add support for external editors (not directly embedded in cell's HTML)
- [ ] finish remaining editors (text, time, date, etc.)
- [ ] figure out why `select` ignores `keydown` event (prevents editor from using arrows)
- [ ] fix table width in Firefox
",15,53,['status: accepted']
4266,24312941,1393,3834332,2014-11-12 18:17:16,2014-11-13 16:10:42,closed,Possible subtype implementation,"closes #1392 
",1,2,['status: accepted']
4267,24262549,1389,3834332,2014-11-12 00:46:38,2014-11-16 15:12:49,closed,"remove unused AR views, inherit from HasProperties instead of HasParent","@JosephCottam can you test that this works as expected?
",20,7,"['status: accepted', 'type: task', 'reso: completed']"
4268,24192248,1388,3834332,2014-11-11 01:26:04,2014-11-12 00:08:42,closed,Refactor common code into a generator,"Each of these modules had the exact same code with one string changed.  This moves all of this code into a common generator, then refactors all of the transforms modules to use it.
",13,6,"['reso: working as intended', 'status: declined', 'type: task']"
4269,24158178,1387,3834332,2014-11-10 16:27:33,2014-11-28 17:14:18,closed,Feature/normalize charts inputs,"This PR addressed #1309 

Implementation status:
- [x] Bar
  - [x] inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays)
  - [x] stacking
  - [x] grouping
  - [ ] facetting
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [x] BoxPlot
  - [x] inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays)
  - [ ] groupby input support 
  - [ ] colormap by category (FEATURE NOT CONFIRMED)
  - [ ] ordering (FEATURE NOT CONFIRMED)
  - [x] facetting
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [x] Histogram
  - [x] 1d array input support
  - [x] inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays)
  - [x] facetting
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [x] TimeSeries
  - [x] single index inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays)
  - [x] string index key support on single index inputs(for DataFrame and dict inputs)
  - [ ] integer index key support  on single index inputs(for lists and arrays)
  - [ ] distinct indexes inputs support
  - [x] facetting
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [x] Scatter
  - [x] inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays where all vars = 1d iterable of scalars like: ((x0, y0), (x1, y1), (x2, y2)))
  - [x] groupby input support 
  - [x] facetting
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [x] heatmap
  - [x] inputs support (DataFrame, dict of lists/arrays, lists of lists/arrays, arrays)
  - [x] categorical ranges
  - [ ] scalar ranges
  - [x] ""pile of kwargs"" interface
  - [x] ""method chaining"" interface
- [ ] Violin
- [x] Dot
- [x] Line
- [ ] Step
- [x] Area
- [ ] Violin
- [x] Donut

---------------------------- END STATUS  -----------------------

(older disccussion for reference #393 )

Introduces a new DataAdapter class that can be used by Charts to normalize different inputs and used the same interface to access data. Supported input types:
- Dataframe
- Dict/OrderedDict
  *List
- Array

It's interface is not good enough now and mixes dict and dataframe api (specially regarding names like: columns, index, keys, values, etc...), but it's a start 

Here's the DataAdapter design summary for now:
- Implements columns and keys attributes that are used to map series name. Maps to list of indexes in case of List or Array. 
- Implements values attribute that basically behaves like dict values.
- Implements index attribute that behaves returning the indexes (or keys) of the first items of values. 
- Implements support for explicit columns and index aliases so if user have a pure matrix of values (np.array or list of lists) it can pass one list of column aliases and another of index aliases to be used for axes.

In this scenario users can pass the any of the DataAdapter supported types listed above or a DataAdapter explicitly (if they need use aliases on their data).

NOTE: Boxplot, CategoryHeatMap, Histogram and Bar expect a ""1 level"" iterable to be consumed for the plot (that can be seen as a list of lists (of values)). Scatter and TimeSeries expect a ""2 levels"" iterable (a list of lists that elements are points (with x and y coordinates). I.e.: timeseries expects a datetime and a number as tuple elements). Is this separation in 2 groups ok? Can we simplify it?
",36,93,['status: accepted']
4270,24155827,1386,3834332,2014-11-10 15:57:05,2014-11-10 16:04:35,closed,fixing crossfilter,"@bryevdv fix for my PR
",3,1,"['type: bug', 'status: accepted', 'tag: regression', 'reso: completed']"
4271,24153238,1384,3834332,2014-11-10 15:21:21,2014-11-12 00:52:04,closed,- fixing document merging,"- moving merging logic into document class
- added test
  @bryevdv @mattpap please review
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4272,24117181,1380,3834332,2014-11-09 18:23:45,2014-11-10 17:23:00,closed,"fix ""python setup.py build""","When running ""build"" the --install_js option got added, but in parse_jsargs an error got thrown, if not in 'install', 'develop', 'sdist', 'egg_info' mode. So build always produced an error. (ran across this while packaging bokey as rpm where the build and install are two separate steps).

Hope this fixes it, but perhaps there is a better way.
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4273,24009202,1378,3834332,2014-11-06 20:16:51,2014-11-07 01:49:40,closed,Fix spelling: s/embded/embed/,,0,1,"['type: bug', 'tag: component: docs', 'status: accepted', 'reso: completed']"
4274,23950087,1374,3834332,2014-11-06 00:24:07,2014-11-07 21:00:39,closed,Feature/server startup cleanup,"WIP
- separate wsgi app creation from server startup, and services startup
- attempt to use tornado + flask for bokeh server and websocket stuff, so we only use one port
- read configuration parameters from bokeh.server.settings
",2,11,"['type: feature', 'status: accepted', 'reso: completed']"
4275,23782694,1372,3834332,2014-11-03 19:08:32,2014-11-10 21:52:30,closed,More systematic approach to tool validation,"This employs similar technique to what `HasProps.__setattr__()` uses.
",1,6,"['type: feature', 'status: accepted', 'reso: completed']"
4276,23780167,1371,3834332,2014-11-03 18:31:04,2014-11-04 00:03:12,closed,Remove ObjectExplorer,"It's been dysfunctional for a while. Removing it to avoid confusion. Hopefully it will be resurrected at some point.
",0,2,"['status: accepted', 'type: task', 'reso: completed']"
4277,23731205,1370,3834332,2014-11-02 12:46:49,2014-11-07 17:38:51,closed,removing gevent,"re: #1345 @bryevdv server tests were hanging for me until I did this.  But now they all pass - can you give it a shot?
",8,2,"['status: accepted', 'type: task', 'reso: completed']"
4278,23731071,1369,3834332,2014-11-02 12:29:35,2014-11-07 17:39:37,closed,Fix crossfilter,,1,5,['status: accepted']
4279,23706482,1367,3834332,2014-10-31 21:15:04,2014-10-31 21:15:17,closed,properly set map div height,,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4280,23700891,1366,3834332,2014-10-31 19:38:05,2014-10-31 19:38:12,closed,remove excess vertical space on gridplots,"fixes #1293 
",0,1,['status: accepted']
4281,23697982,1365,3834332,2014-10-31 18:49:45,2014-10-31 18:50:04,closed,make sure toolbar has border in notebook,"fixes #1314 
",0,1,['status: accepted']
4282,23664804,1364,3834332,2014-10-31 09:35:45,2014-10-31 14:22:18,closed,Replace ContinuumIO organization with bokeh and remove KinectJS,"Perhaps https://github.com/ContinuumIO/KineticJS should be removed (wasn't updated since 2012).
",4,2,"['status: accepted', 'type: task', 'reso: completed']"
4283,23618436,1362,3834332,2014-10-30 16:35:36,2014-10-31 18:30:35,closed,Feature/geometry,"This PR adds a `tool_event` object to plots (that can be shared between plots in the future) that is a place that tools can store things like that do not depends on data sources, selection geometries, etc. Right now this minimal implementation allows selection geometries to be polled from python, with code like:

```
s = Session()
d = Document()
s.use_doc(docid=""<my doc id>"")
s.load_document(d)
plot = d._models[""<my plot title>""]  # this needs improvement
te = plot.tool_events

# make a selection on the plot now

s.load_object(te, d)
te.geometries
```

The geometries list looks something like this:

```
Out[28]: [{u'type': u'point', u'vx': 199, u'vy': 54}]
```
",16,13,['status: accepted']
4284,23617484,1361,3834332,2014-10-30 16:24:39,2014-10-30 16:25:04,closed,allow minor ticks to be styled,"Fixes #808
",0,1,['status: accepted']
4285,23564223,1360,3834332,2014-10-29 20:58:03,2014-11-01 01:35:03,closed,turn bar plots category (values) width proportional to the number of val...,"Fixes #1319 . Changed fixed bokeh.charts.Bar bars cat_width calculation to something proportional to the number of values in the chart. This seems to fix issue for more then 4 values that were overlapping due to the fixed 0.2 with value.
",7,2,['status: accepted']
4286,23555517,1359,3834332,2014-10-29 18:57:04,2014-11-11 02:00:20,closed,Cleanup of table widgets,,17,50,"['type: feature', 'status: accepted', 'reso: completed']"
4287,23538980,1357,3834332,2014-10-29 15:30:54,2014-10-29 15:31:16,closed,add missing icon files,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
4288,23514160,1356,3834332,2014-10-29 08:23:15,2015-01-20 20:23:40,closed,Make included properties' names shorter,"This fixes #786. Now included properties won't have `_fill_`, `_line_` or `_text_` infixes, e.g.:

```
In [1]: from bokeh.models import *

In [2]: p = Plot()

In [3]: p.outline_
p.outline_alpha        p.outline_color        p.outline_dash_offset  p.outline_width        
p.outline_cap          p.outline_dash         p.outline_join         

In [3]: p.outline_color
Out[3]: 'black'
```

Previously it was `p.outline_line_color`. This works, because currently included properties allow only one mixin. If this changes, the approach implemented in this PR will have to be refined.
",11,5,['status: paused']
4289,23513507,1355,3834332,2014-10-29 08:05:13,2015-01-14 01:18:26,closed,Clean up top-level directories.,"Fixes #861.
",2,1,['status: WIP']
4290,23513164,1354,3834332,2014-10-29 07:55:12,2014-10-29 15:07:24,closed,Remove data files from bokeh/tests (fixes #862),"fixes #862
",0,1,['status: accepted']
4291,23512732,1353,3834332,2014-10-29 07:41:21,2014-10-29 15:06:28,closed,Remove 'type' property from guides,"It doesn't seem to be used anymore.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
4292,23486431,1351,3834332,2014-10-28 20:11:12,2014-10-28 22:22:15,closed,Allow to specify alternative types for properties,"This effectively replaces broken `OrElse`.
",2,1,"['type: feature', 'status: accepted', 'reso: completed']"
4293,23432933,1348,3834332,2014-10-28 03:47:19,2014-11-10 18:28:46,closed,fix gridplots with hover tools,"fixes #598 

@kdodia can you confirm this fixes the proximate problem and allows grid plots to display with a hover tool attached?

There are still issues to resolve, probably not all in this PR:
- what to do when there are multiple ""hits""
  - show tooltip only for nearest
  - show multiple tooltips
- ""secondary"" tooltips in other subplots in the wrong place (same screen coords as originating plot)
  - convert selection index to screen data position? How to know what glyph/data to use?
  - display tooltip only on one subplot at a time?

@kdodia any opinions or inputs welcome.
",8,2,"['type: bug', 'status: accepted', 'reso: completed']"
4294,23432134,1347,3834332,2014-10-28 03:17:13,2014-10-28 03:17:42,closed,Information about sample data in docs,"closes #1261 

Another PR should document individual data sets and their structure in the reference guide. 
",0,2,['status: accepted']
4295,23428086,1346,3834332,2014-10-28 00:57:20,2014-10-28 22:22:27,closed,"range start is always left/bottom, end is always right/top","fixes #623
",3,1,['status: accepted']
4296,23407744,1345,3834332,2014-10-27 19:09:31,2014-11-14 18:49:10,closed,Refactor plotting interface,"This PR is to move away from the stateful ""implicit current plot"" model of the current `bokeh.plotting` interface. 
- [x] `figure()` returns an actual `Plot` subclass, `Figure`
- [x] add glyph methods to `Figure`
- [x] add deprecations where appropriate 
- [x] verify existing examples work (but with deprecation warnings issued)
- [x] ~~update all examples~~
- [x] ~~update docs~~

deferring docs/examples to follow on PR
",9,7,"['type: feature', 'status: ready', 'reso: completed']"
4297,23354464,1344,3834332,2014-10-26 18:50:21,2014-10-27 16:09:26,closed,allow multiple gmap plots on one page,"fixes #1320 
",2,1,['status: accepted']
4298,23352374,1341,3834332,2014-10-26 15:35:49,2014-10-26 15:36:03,closed,update hover too to match glyphspec refactor,"closes #1300
",0,1,['status: accepted']
4299,23271949,1338,3834332,2014-10-24 01:46:22,2014-10-24 06:48:35,closed,Bugfix/py3 palettes (closes #1337),"A few application of six's iteritems and the docs build on my local machine under py3k 
(Also caught another instance in bokeh.utils.)
",0,2,"['type: bug', 'status: accepted', 'reso: completed']"
4300,23266756,1336,3834332,2014-10-23 23:12:05,2014-10-23 23:12:38,closed,hotfix for problem with pandas 0.15,,0,1,"['status: accepted', 'type: task', 'reso: completed']"
4301,23126331,1333,3834332,2014-10-21 23:39:50,2014-10-23 02:43:17,closed,Dvreed77/palette docs,"I have added some documentation to list all the palettes.  The HTML was generated with the code below and probably should be generated automatically during the building process.  

```
from bokeh import palettes as pl

s = ""<table>""
for i, (k, v) in enumerate(pl.brewer.iteritems()):
    for k1, v1 in v.iteritems():
        s += ""<tr><td height='20px' width='80px' style='font-size: 12px'>%s</td>"" % (k+str(k1))
        for j, a in enumerate(v1):
            s += '<td height=""20px"" width=""20px"" style=""background-color:%s"">' % a
        s += ""</tr>""
s += ""</table>""
```
",11,6,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4302,23047610,1332,3834332,2014-10-20 21:48:19,2014-10-20 21:50:02,closed,Remove unnecessary reference to GMaps API,"Fixes #936.
",1,1,['status: accepted']
4303,23046907,1331,3834332,2014-10-20 21:37:25,2014-10-20 22:57:57,closed,Update {ContinuumIO->bokeh}/bokeh everywhere,,3,1,['status: accepted']
4304,23032447,1330,3834332,2014-10-20 17:55:25,2014-10-20 17:56:35,closed,Reduce weight of gallery images,"Gallery images are full size for no reason, sometimes annoying loading gallery over conference wifi, etc. Resize all gallery images to width 400.
",0,1,"['status: accepted', 'type: task', 'reso: completed']"
4305,23000109,1327,3834332,2014-10-20 08:51:59,2014-10-23 17:52:21,closed,Add 'help' to properties,"This builds on top of #1324.
",7,12,"['type: feature', 'status: ready', 'reso: completed']"
4306,22979017,1325,3834332,2014-10-19 10:27:43,2014-10-19 16:29:15,closed,Set {np.}random.seed(1) in examples/test,"This allows us to run examples as tests and always get the same plots, even if random data is involved. This solution doesn't require any changes to examples. The slight drawback is that tracebacks contain additional `<string>` entry at the beginning, thought the remaining entries and file names are preserved.
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
4307,22970386,1324,3834332,2014-10-18 17:27:09,2014-10-20 13:49:03,closed,Introduce bokeh.models{.widgets},"fixes #1311
",3,8,['status: accepted']
4308,22825188,1321,3834332,2014-10-16 00:17:59,2014-10-17 17:29:34,closed,Small tweaks to the CoffeeScript,"Took a look at this to see if we could convert it to Socket.IO reasonably (we can't as pyaudio freaks out on the second pass).  I did the following changes anyhow while I was looking around in here.
",3,3,"['type: feature', 'status: accepted', 'reso: completed']"
4309,22744906,1315,3834332,2014-10-14 21:29:50,2014-10-16 05:51:59,closed,Moved toolbar to the left on large plots,"fixes #1251 
",5,5,['status: accepted']
4310,22734517,1312,3834332,2014-10-14 18:59:11,2014-10-23 17:52:04,closed,Preliminary type-driven JSON deserialization,"This is a small change with high impact. I tested it on just a few examples. This fixes #1267 once and for all. Make sure to look into the diff and check the `XXX` comment. We will need to pass `type` around for non-`PlotObject` instances of `HasProps` (which I think was suggested long before). This could be fixed in this PR, because there shouldn't be a clash with existing properties.
",7,3,['status: accepted']
4311,22709971,1310,3834332,2014-10-14 13:11:58,2014-10-14 16:46:13,closed,Rename Glyph-> GlyphRenderer and BaseGlyph -> Glyph,"This continues `glyphspec` PR.
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
4312,22642234,1308,3834332,2014-10-13 12:42:09,2014-11-02 14:31:06,closed,Fix crossfilter after latest PRs,"Fixes #1306    

Depends (partially) on #1307 
",2,2,['status: superseded']
4313,22641998,1307,3834332,2014-10-13 12:37:00,2014-10-13 14:34:20,closed,use existing attr name 'selected' for selections,"Fixes #1303 
",4,1,['status: accepted']
4314,22610764,1302,3834332,2014-10-12 01:28:48,2014-10-13 20:00:22,closed,null values should be preserved as a property,"Fixes #1298 

@mattpap this solve the problem as best I can tell, and unit tests pass, but please comment on any concerns. 
",12,2,['status: accepted']
4315,22604353,1294,3834332,2014-10-11 14:42:11,2014-10-23 14:26:14,closed,Feature/more tools,"This PR will make minor fixes and improvements to the new tool/events/selection system, as well as add some new tools based upon it. 
- [x] polygon selection overly
- [x] polygon selection tool
- [x] lasso selection tool
- [x] axis wheel zoom
- [x] axis pan 
- [x] pinch zoom
- [x] minor fixes to touch interactions (buttons require two taps, e.g.)
- [x] user guide docs for new tools

That's alot of tasks for one PR. The reason I want to tackle all this in one place is because I want to make sure everything works together harmoniously and that the experience of adding several tools here can be used to help make adding tools in general a more reasonable and well-defined process. 
",11,24,"['type: feature', 'status: accepted', 'reso: completed']"
4316,22100990,1274,3834332,2014-10-01 20:18:48,2014-10-10 16:58:55,closed,keep an index of views so that we don't try to re-inject them,"fixes #972 

@mattpap I think this will break dev mode, as-is? Can you comment? I suppose we can put the index in its own module with nothing else, and require it in both `main.coffee` and `embed.coffee`.  Or maybe we could use `Collections` for this directly? This PR is just a starting discussion point. 

ping @manderso-brcm
",17,7,['status: accepted']
4317,22086774,1273,3834332,2014-10-01 16:48:50,2014-10-01 20:34:13,closed,Feature/geojs,,0,3,"['type: feature', 'status: accepted', 'reso: completed']"
4318,22040434,1271,3834332,2014-09-30 22:29:20,2014-10-01 03:41:52,closed,Fix for axis types string comparision (is vs ==),"""is"", identity comparision, isn't the same as equality comparision

http://stackoverflow.com/questions/2988017/string-comparison-in-python-is-vs
",1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4319,22011036,1270,3834332,2014-09-30 15:10:50,2014-10-26 15:11:47,closed,add width and height arguments to imageurl,"Closes #1268.

TODO:
- [ ] add docs
- [ ] update `image_url.py` example
",2,1,['status: declined']
4320,22001722,1269,3834332,2014-09-30 12:58:24,2014-09-30 15:51:08,closed,Stack bar chart with strings,"Hi, I would like to be able to create a stacked bar chart with strings. I was originally stacking with ints and it worked fine but is throwing an unsupported type error when I try to stack the chart with strings. 
",1,2820,"['type: feature', 'reso: working as intended', 'status: declined']"
4321,21755759,1253,3834332,2014-09-25 01:04:17,2014-10-01 03:07:44,closed,Release 0.6.1,"All step done except from the fiddle update (optional for point releases).
We only need to do the ANN when conda packages get out.
Bummer: npm keeps failing, it uploads but not get registered as the last version.
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
4322,21737366,1250,3834332,2014-09-24 19:13:30,2014-10-08 22:00:44,closed,"Add more properties to HandsonTable, e.g. {row,column}_resize","@kdodia, fell free to review this. If you need other properties, let me know.  
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
4323,21736596,1249,3834332,2014-09-24 19:02:14,2014-09-24 20:18:50,closed,fix error instantiating close wrapper,,5,2,"['type: bug', 'status: accepted', 'reso: completed']"
4324,21721594,1247,3834332,2014-09-24 15:21:26,2014-09-29 18:56:56,closed,Fixes ContinuumIO/bokeh#1243,"I simply added the required type attribute to every occurrence of the `bk-toolbar-button`. Is this correct? Works fine for me, but I didn't look in your testing system. 
",3,1,['status: accepted']
4325,21713665,1244,3834332,2014-09-24 13:30:14,2014-10-09 18:09:12,closed,selection manager and tools/events refactor,"This PR supersedes the previous selection PR. It adds:
- `Selector` class to mediate selections for individual tools
- `SelectionManager` class for data sources to manage selections and inspections.

Definitions:
- ""selections"" are sets of indices on a data source, they may be built up over time (if a tool support shift for multi-select, etc.) Selections are saved to a data source on the server y default. 
- ""insepctions"" are one off selections that do not persist to the server by default. They are useful for passive, hover like tools. 

EDIT: There is alot about selections intertwined with tools. I am also doing the ""tools refactor"" as part of this PR. More coming soon. 
",22,46,['status: accepted']
4326,21692906,1242,3834332,2014-09-24 05:28:30,2014-10-08 22:00:24,closed,Feature/ar version check,"Adds version number check and error message to AR module
Introduces python 3 compatibility for AR downsample
90% of AR tests to run in travis-ci
",1,12,['status: accepted']
4327,21687040,1241,3834332,2014-09-24 01:16:42,2014-09-24 23:34:45,closed,Task/docs 061,"Some last minute docs/example updates.
",1,5,"['status: ready', 'type: task', 'reso: completed']"
4328,21669571,1240,3834332,2014-09-23 19:24:39,2014-10-08 20:52:02,closed,support for GeoJS maps,"for MEMEX
",21,6,"['type: feature', 'status: accepted', 'reso: completed', 'tag: geo']"
4329,21656430,1237,3834332,2014-09-23 16:05:10,2014-09-23 16:53:10,closed,Unpin matplotlib and delete mplexporter tests.,"Related with #1231.
Let's see how it goes...
",1,1,"['type: bug', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4330,21645749,1234,3834332,2014-09-23 13:39:58,2014-09-23 19:40:16,closed,Bugfix/toolbar,"@bryevdv Addresses https://github.com/ContinuumIO/bokeh/issues/947 and https://github.com/ContinuumIO/bokeh/issues/1160. Allows parent element to scroll if toolbar doesn't fit in window. 
",4,4,['status: accepted']
4331,21641645,1233,3834332,2014-09-23 12:27:43,2014-09-23 20:57:21,closed,Use $.contains(...) to detect that element was added to DOM,"HandsonTable must be rendered to an attached element to work properly, however Bokeh requires its widgets to render to detached elements. Previously, to detect if an element was attached to the DOM, we used display CSS property and waited for it to change its value. This is unreliable and doesn't work in (at least) FF.
",2,2,"['type: bug', 'status: accepted', 'reso: completed']"
4332,21576917,1232,3834332,2014-09-22 12:53:24,2014-10-26 15:10:47,closed,Maintain legends' order (use List instead of Dict) (#926),,13,11,['status: accepted']
4333,21574114,1231,3834332,2014-09-22 11:51:50,2014-09-23 11:56:11,closed,Code cleanup (part 2),"This time clean up examples.
",11,5,"['status: ready', 'type: task', 'reso: completed']"
4334,21572619,1230,3834332,2014-09-22 11:18:22,2014-09-23 00:27:42,closed,Always set CONDA_PY for `conda build` (#1226),,2,1,['status: accepted']
4335,21532736,1228,3834332,2014-09-20 02:21:28,2014-09-23 00:22:07,closed,Added axis labels to several plots,"Added axis labels to some file and server scripts to address #1223 
",10,1,['status: accepted']
4336,21514210,1225,3834332,2014-09-19 18:14:00,2014-10-12 00:23:40,closed,Replace glyphspecs with the properties system,"For now removed glyphspec handling code from Python and did preliminary changes to `renderer/glyph/*`.
- [x] `Glyph` vs. `BaseGlyph`. This is the major issue now. Those classes are distinct in the properties system but were merge together in JS.
- [x] Fix remaining issues after splitting `Glyph`.
- [x] ~~Update `common/plotting`.~~ EDIT: fix after this PR.
- [x] Update tests.
",36,62,"['type: feature', 'status: accepted', 'reso: completed']"
4337,21429152,1219,3834332,2014-09-18 12:16:21,2014-09-18 14:52:26,closed,need to store document in decorator,"@bryevdv I think all the object_page examples are broken without this fix
",2,1,"['type: bug', 'status: accepted', 'reso: completed']"
4338,21380058,1216,3834332,2014-09-17 16:51:38,2014-09-17 21:59:31,closed,Update version change script,"support package.json, improved output and error checking
",1,1,"['type: feature', 'status: accepted', 'reso: completed']"
4339,21379976,1215,3834332,2014-09-17 16:50:20,2014-09-18 14:53:24,closed,use one codepath for py2 and py3,"gevent/threading module issue creeping back in somehow. Annoying, also cause flask rest auto-doc to puke. 

@hhuuggoo @mattpap what if anything are the downsides of merging this? I have tried it with py2 and py3 and it seems to work fine. I would **very** much like to have identical tools and code paths for py2 and py3. I would also like to be rid of gevent monkey patching brittleness once and for all.   
",8,2,"['status: accepted', 'type: task', 'reso: completed']"
4340,21367842,1214,3834332,2014-09-17 13:59:28,2014-09-17 20:38:35,closed,Simplify IPython detection logic.,"Close #1185.
",1,1,['status: accepted']
4341,21340894,1212,3834332,2014-09-17 01:57:35,2014-09-17 14:00:46,closed,"remove unused imports, standardise import order, etc",,12,3,"['status: ready', 'type: task', 'reso: completed']"
4342,21272595,1210,3834332,2014-09-16 01:59:11,2014-09-17 12:56:15,closed,Histogram update,"No need to have y-scale on histogram chart default to a minimum of 1.0
",8,3,"['status: accepted', 'type: discussion', 'reso: completed']"
4343,21232662,1209,3834332,2014-09-15 13:44:37,2014-09-15 17:53:13,closed,Remove pinning of requests.,"Releated with #1102.
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
4344,21230557,1208,3834332,2014-09-15 13:08:17,2014-09-18 19:43:28,closed,Cleanup some ugly code in bokehjs (part 1),,9,6,"['status: ready', 'type: task', 'reso: completed']"
4345,21196594,1206,3834332,2014-09-13 19:50:01,2014-09-18 14:22:18,closed,Task/server start,"fixes #1203 
",4,3,['status: accepted']
4346,21196476,1205,3834332,2014-09-13 19:39:10,2014-09-13 19:49:43,closed,Task/server start improvements,"fixes #1203
",1,5,['status: declined']
4347,21196244,1204,3834332,2014-09-13 19:16:35,2014-09-13 19:36:17,closed,Task/server arg groups,"Prints out help for `bokeh-server` args in more conceptually relevant groups. 
",1,2,"['tag: component: docs', 'status: declined']"
4348,21178372,1200,3834332,2014-09-12 20:51:33,2014-09-16 12:30:49,closed,fix query for conjuctions,,11,2,"['type: bug', 'status: ready', 'reso: completed']"
4349,21175338,1199,3834332,2014-09-12 19:56:51,2014-09-22 14:15:27,closed,some plumbing for click selection,,1,1,['status: superseded']
4350,21157274,1197,3834332,2014-09-12 14:48:16,2014-09-22 11:04:21,closed,Add glyphs/trail example (altitude profile + map),"How can I get hover tool working with line glyph (map plot)? It tells me that there's no point selection.
",9,3,"['type: feature', 'status: accepted', 'reso: completed']"
4351,21131294,1194,3834332,2014-09-12 03:34:06,2014-09-12 14:45:10,closed,expose google map type to python,"can now set `plot.map_options.map_type` to
- `satellite`
- `terrain`
- `roadmap`
- `hybrid`

![screen shot 2014-09-11 at 10 28 29 pm](https://cloud.githubusercontent.com/assets/1078448/4245058/a0cf02ae-3a2d-11e4-95f5-c98840bf1d44.png)
`
",2,2,"['type: feature', 'status: accepted', 'reso: completed']"
4352,21130556,1193,3834332,2014-09-12 03:02:24,2014-09-12 13:03:03,closed,quick fix to remove toolbars on subplots in gridplots,"This is just a quick fix to make current grid plots presentable. A further PR is needed to:
- put grid plots on one canvas
- use the new toolbar

These should be done together. After spending 15 minutes trying to get the new toolbar on the existing grid plot, it does not seem worthwhile to invest any more time in it. 
",1,1,['status: accepted']
4353,21019783,1184,3834332,2014-09-10 13:21:49,2014-09-10 15:18:27,closed,Task/bokehjs release,,9,3,['status: accepted']
4354,21004602,1183,3834332,2014-09-10 07:59:11,2014-09-10 15:21:22,closed,Fix get_version_from_git() to support release commits,,2,1,['status: accepted']
4355,20996395,1182,3834332,2014-09-10 02:41:46,2014-09-23 00:49:56,closed,Continue improving the 0.6 docs,,4,19,"['tag: component: docs', 'status: ready', 'type: task', 'reso: completed']"
4356,20995470,1181,3834332,2014-09-10 02:07:27,2014-09-10 13:16:33,closed,Release 0.6.0,"We are making PRs for almost all things... let's introduce the release into this practice too :stuck_out_tongue_winking_eye: 
",5,3,"['status: ready', 'type: task', 'reso: completed']"
4357,20969973,1178,3834332,2014-09-09 17:15:34,2014-09-09 17:15:40,closed,Task/update examples,,0,12,"['status: accepted', 'type: task', 'reso: completed']"
4358,20959541,1174,3834332,2014-09-09 14:40:43,2014-09-09 16:21:41,closed,Upgrade handsontable to fix scrolling issues,"Otherwise ht doesn't work in notebooks.
",9,5,"['type: bug', 'status: accepted', 'reso: completed']"
4359,20925567,1173,3834332,2014-09-08 23:39:05,2014-09-09 00:20:06,closed,try new branch for docs,,1,2,['status: declined']
4360,20920752,1172,3834332,2014-09-08 21:54:57,2014-09-08 23:11:00,closed,Feature/toolbar enhancements,"resolves https://github.com/ContinuumIO/bokeh/issues/1156, https://github.com/ContinuumIO/bokeh/issues/1157, and adds Tooltip Help icon
![hover-help](https://cloud.githubusercontent.com/assets/6355636/4193553/b97c411e-37a2-11e4-9775-24aabada126b.png)
",0,2,['status: accepted']
4361,20916590,1171,3834332,2014-09-08 20:45:36,2014-09-09 16:10:39,closed,[WIP] Updating documentation for 0.6 release,"Mega-PR to track contributions and prevent divergence.
",0,22,"['status: accepted', 'type: task', 'reso: completed']"
4362,20913120,1169,3834332,2014-09-08 19:50:32,2014-09-08 20:02:05,closed,Made scipy a soft dependency for chart histogram.,"Just that.
",1,1,"['type: feature', 'status: accepted', 'reso: completed']"
4363,20911439,1168,3834332,2014-09-08 19:22:59,2014-09-08 21:33:16,closed,Hotfix/np int in ranges,"@bryevdv (note the crossfilter/xrange) change is in #1167
",0,2,"['type: bug', 'status: accepted', 'reso: completed']"
4364,20911410,1167,3834332,2014-09-08 19:22:36,2014-09-08 19:27:47,closed,cant use xrange,"@bryevdv 
",1,1,"['type: bug', 'reso: working as intended', 'status: declined']"
4365,20910249,1165,3834332,2014-09-08 19:03:44,2014-09-08 21:11:09,closed,Added pyzmq and tornado as dependencies in the conda recipe.,"Just that...
",8,2,"['type: bug', 'status: ready', 'reso: completed']"
4366,20908521,1164,3834332,2014-09-08 18:36:47,2014-09-08 19:31:19,closed,fix windows build,,2,1,"['type: bug', 'status: accepted', 'reso: completed', 'plat: windows', 'tag: component: build']"
4367,20901215,1163,3834332,2014-09-08 16:33:38,2014-09-08 19:57:34,closed,remove more unused widgets,"Specifically:
- `VBoxModelForm`
- `BokehApplet`
- `DataSlider`
",0,5,"['status: accepted', 'type: task', 'reso: completed']"
4368,20896293,1162,3834332,2014-09-08 15:18:16,2014-09-08 17:14:58,closed,Remove Pandas* and IPython* models,"I went ahead and removed this (see #1143).
",2,1,"['status: accepted', 'type: task', 'reso: completed']"
4369,20895768,1161,3834332,2014-09-08 15:11:07,2014-09-08 20:08:56,closed,copy examples into conda packages,,8,4,"['status: accepted', 'type: task', 'reso: completed', 'tag: component: build']"
4370,20890167,1158,3834332,2014-09-08 13:47:42,2014-09-08 15:50:43,closed,make select much more useful,,3,4,"['type: feature', 'status: accepted', 'reso: completed']"
4371,20866084,1154,3834332,2014-09-07 23:52:12,2014-09-07 23:56:12,closed,Hotfix/toolbar notebook appearance,"@bryevdv This should resolve the styling issues you noticed around the graph in the notebook
",0,2,"['type: bug', 'status: accepted', 'reso: completed']"
4372,20865982,1153,3834332,2014-09-07 23:42:14,2014-09-08 01:10:25,closed,Commenting out redis and AR dependencies.,"We need to build the packages properly without using convert... or get the packages for each platform... in the mean time, we do not enforce redis or AR.
",0,3,['status: accepted']
4373,20864996,1152,3834332,2014-09-07 21:59:36,2014-09-07 22:31:32,closed,updating css for different toolbar positions,"@bryevdv css to address toolbar presentation in different orientations.
",0,1,"['type: feature', 'status: accepted', 'reso: completed']"
4374,20864313,1151,3834332,2014-09-07 20:51:41,2014-09-07 22:30:59,closed,fix websockets in tornado 4.0 from notebook,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4375,20862147,1147,3834332,2014-09-07 17:22:43,2014-09-07 17:30:53,closed,Fixed setup.py and add missing dependencies...,"Modified `setup.py` to install requires and add `tornado` and `pyzmq` dependencies.
",3,1,"['type: bug', 'status: accepted', 'reso: completed']"
4376,20848874,1146,3834332,2014-09-06 13:32:01,2014-09-09 16:16:04,closed,Clean up and improve the CrossFilter ,,1,7,"['type: feature', 'status: accepted', 'reso: completed']"
4377,20847684,1145,3834332,2014-09-06 10:39:26,2014-09-06 11:52:02,closed,"Use None instead of ""none"" in toolbar_location",,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4378,20844105,1144,3834332,2014-09-06 02:10:35,2014-09-18 18:09:47,closed,Support rc candidates in devel builds,"Fixing scripts to get issues and to support `rc` names in tags...
",6,3,"['type: bug', 'status: accepted', 'reso: completed']"
4379,20812633,1141,3834332,2014-09-05 14:51:12,2014-09-09 17:15:54,closed,Collecting fixes for our examples.,"This is a PR to collect all the tiny fixes to our examples before the release.
- Fixed some error in the Readmes. Made consistent all the animation-based examples.
",2,2,"['status: accepted', 'type: task', 'reso: completed']"
4380,20808928,1140,3834332,2014-09-05 13:52:30,2014-09-08 16:57:40,closed,split user guide into separate docs,,5,20,"['status: accepted', 'type: task', 'reso: completed']"
4381,20772957,1138,3834332,2014-09-04 21:09:54,2014-09-05 00:41:46,closed,update tool hit testing to account for multiple raneges,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4382,20748471,1137,3834332,2014-09-04 14:49:33,2014-09-08 16:58:10,closed,Update dev_guide (#754),"This is just the very beginning.
",4,7,['status: accepted']
4383,20744167,1136,3834332,2014-09-04 13:45:33,2014-09-04 15:34:57,closed,Remove all unnecessary files from bokehjs/src/vendor,"This doesn't change functionality of bokehjs, so can we merge this for 0.6? It would be really helpful for publishing bokeh-scala. I was amazed to see that `vendor` weights about 20 megs. Now it's reduced to a little over 4 megs. For 0.6.1 I will follow up with additional PR that updates libraries, flattens the structure, adds version number information, etc. This should be followed with an update of `dev_guide` on how to manage `vendor` (I updated #754). 
",1,1,['status: accepted']
4384,20718524,1133,3834332,2014-09-04 02:14:16,2014-09-05 13:27:29,closed,hotifx/crossfilter,"@hhuuggoo if you have any comments or suggestions where to start please let me know. 

```
2014-09-03 20:28:15,327:ERROR:root:model not found for {u'type': u'Plot', u'id': u'9bf7e2ef-e190-4eb0-96fd-24a9a9504c90'}
2014-09-03 20:28:15,327:ERROR:root:model not found for {u'type': u'ColumnDataSource', u'id': u'6a17cb1f-969c-47a2-a2b4-ef7670670358'}
2014-09-03 20:28:15,327:ERROR:bokeh.server:Exception on /bokeh/bb/7a38c079-7326-4f8a-bdef-232437f6f3c1/CrossFilter/de8f1bc9-5dc0-4f68-b8d3-dcf7511e3147/ [PUT]
Traceback (most recent call last):
  File ""/Users/bryan/anaconda/lib/python2.7/site-packages/flask/app.py"", line 1817, in wsgi_app
    response = self.full_dispatch_request()
  File ""/Users/bryan/anaconda/lib/python2.7/site-packages/flask/app.py"", line 1477, in full_dispatch_request
    rv = self.handle_user_exception(e)
  File ""/Users/bryan/anaconda/lib/python2.7/site-packages/flask/app.py"", line 1381, in handle_user_exception
    reraise(exc_type, exc_value, tb)
  File ""/Users/bryan/anaconda/lib/python2.7/site-packages/flask/app.py"", line 1475, in full_dispatch_request
    rv = self.dispatch_request()
  File ""/Users/bryan/anaconda/lib/python2.7/site-packages/flask/app.py"", line 1461, in dispatch_request
    return self.view_functions[rule.endpoint](**req.view_args)
  File ""/Users/bryan/work/bokeh/bokeh/server/crossdomain.py"", line 29, in wrapped_function
    resp = make_response(f(*args, **kwargs))
  File ""/Users/bryan/work/bokeh/bokeh/server/views/backbone.py"", line 139, in handle_specific_model
    return update(docid, typename, id)
  File ""/Users/bryan/work/bokeh/bokeh/server/views/bbauth.py"", line 20, in wrapper
    return func(docid, *args, **kwargs)
  File ""/Users/bryan/work/bokeh/bokeh/server/views/backbone.py"", line 164, in update
    clientdoc = bokeh_app.backbone_storage.get_document(docid)
  File ""/Users/bryan/work/bokeh/bokeh/server/serverbb.py"", line 92, in get_document
    doc = Document(json_objs)
  File ""/Users/bryan/work/bokeh/bokeh/document.py"", line 45, in __init__
    self.load(*json_objs, dirty=False)
  File ""/Users/bryan/work/bokeh/bokeh/document.py"", line 244, in load
    m.update(**props)
  File ""/Users/bryan/work/bokeh/bokeh/crossfilter/objects.py"", line 330, in update
    self.setup_events()
  File ""/Users/bryan/work/bokeh/bokeh/crossfilter/objects.py"", line 338, in setup_events
    obj.on_change('selected', self, 'handle_filter_selection')
AttributeError: 'NoneType' object has no attribute 'on_change'
```
",3,5,"['type: bug', 'status: accepted', 'reso: completed']"
4385,20716104,1132,3834332,2014-09-04 00:44:22,2014-09-04 17:25:38,closed,updates to allow pip packages to install cleanly,"@kdodia can you test this out?
",5,2,"['type: bug', 'status: accepted', 'reso: completed']"
4386,20715686,1131,3834332,2014-09-04 00:30:43,2014-09-11 19:58:53,closed,Button widgets,"I will finish this tomorrow, but if you want to try it out then `glyphs/widget_server` was updated to use a button (should fill a data source with random data and a plot and handsontable should update).
",12,16,"['type: feature', 'status: accepted', 'reso: completed']"
4387,20687204,1127,3834332,2014-09-03 16:06:13,2014-09-04 00:46:43,closed,Feature/twinx,"Support for multiple axes.

![screen shot 2014-09-03 at 11 06 44 am](https://cloud.githubusercontent.com/assets/1078448/4137131/533f729e-3384-11e4-8d3d-b61e8f2a742b.png)
",8,13,"['type: feature', 'status: accepted', 'reso: completed']"
4388,20686961,1126,3834332,2014-09-03 16:02:36,2014-09-04 01:30:02,closed,Feature/heatmap,"Simple Heatmap chart implementation... a starting point.

![heatmap](https://cloud.githubusercontent.com/assets/1640669/4137342/1fad2a28-3386-11e4-9eb2-3a698d6915da.png)

EDIT: I added a pic...
",13,11,"['type: feature', 'status: accepted', 'reso: completed']"
4389,20673130,1125,3834332,2014-09-03 12:28:45,2014-09-03 12:28:48,closed,"Revert ""fix bug introduced when experimenting with logging""","Reverts ContinuumIO/bokeh#1124 

Use fix from #1038 instead
",0,1,['status: accepted']
4390,20672528,1124,3834332,2014-09-03 12:15:30,2014-09-03 12:15:50,closed,fix bug introduced when experimenting with logging,,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4391,20645450,1122,3834332,2014-09-02 22:38:49,2014-09-02 22:38:52,closed,fix broken logger statement,,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4392,20642066,1120,3834332,2014-09-02 21:34:00,2014-09-03 02:50:47,closed,Fix test flakes; dict keys sorted,"https://github.com/ContinuumIO/bokeh/issues/1119
",2,1,['status: accepted']
4393,20641456,1118,3834332,2014-09-02 21:24:12,2014-09-02 22:35:16,closed,Protocol fix,"https://github.com/ContinuumIO/bokeh/issues/1104

In this patch, it checks that original is datetime64[ns] before workaround converting.  But if original is some other units it does no conversion at all; let me know if you want some other behavior (raise?)
",3,3,['status: accepted']
4394,20639042,1117,3834332,2014-09-02 20:45:06,2014-09-05 14:59:47,closed,Feature/ar recipies,"Makes abstract rendering more accessible for the common cases of making a heatmap or doing HDAlpha by providing a convenience fucntion for each.

Addresses issues:
- 1114 -- Balanced zoom is only enforced on the first rendering, thereafter the X/Y zoom ration is computed based on plot state
- 1115 -- Adds 'render_state' parameter to the server data source request.  If the render state has not changed, server downsample returns a sentinal value.  The default render_state is None, and other server downsample code works without change.
",1,22,['status: accepted']
4395,20629269,1116,3834332,2014-09-02 17:58:12,2014-10-16 23:42:30,closed,Color Mappers on python side,"Probably wil not get to all of these in this PR in order to include in 0.6 release
- [x]  create reflectable `LinearColorMapper` object
- [x] hook up to `image` glyph
- [x] ~~support for cube helix~~
- [x] ~~allow passing color mappers as values for color fields~~
",16,14,['status: accepted']
4396,20617678,1113,3834332,2014-09-02 14:53:52,2014-09-05 22:56:00,closed,feature/toolbar,"This PR is to add a number of features to the toolbar:
- [x] make toolbar visibility configurable
- [ ] add new visual assets
- [ ] put toolbar on top
",8,8,"['type: feature', 'status: accepted', 'reso: completed']"
4397,20589237,1111,3834332,2014-09-02 02:07:40,2014-09-02 14:27:38,closed,Open a new tab when cliking on the logo.,"This addressed #852
",0,1,['status: accepted']
4398,20585414,1110,3834332,2014-09-01 21:28:45,2014-09-03 18:33:53,closed,Feature/object selection,,22,4,"['type: feature', 'status: accepted', 'reso: completed']"
4399,20585293,1109,3834332,2014-09-01 21:22:06,2014-09-03 21:03:27,closed,Feature/timeseries chart,"Time series chart type.

![captura de pantalla de 2014-09-01 18 20 34](https://cloud.githubusercontent.com/assets/1640669/4112164/e54c89b4-321d-11e4-8596-ec87652525ed.png)
",2,3,"['type: feature', 'status: accepted', 'reso: completed']"
4400,20580433,1106,3834332,2014-09-01 16:54:23,2014-09-03 18:24:01,closed,Feature/charts tests,"Test for `Chart` and `ChartObject` classes.
I will add more chart specific test as time permits... so labelling this one as ready.
",1,7,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4401,20536323,1102,3834332,2014-08-30 14:53:28,2014-09-03 18:26:17,closed,Grouped pinning of upstream packages with bugs.,"Collect  conda-build #1046, matplotlib #1077 and requests #1101 downgrades in a pinned file so we can add or revert back packages in a easier way than now...
",12,2,"['type: feature', 'status: accepted', 'reso: completed']"
4402,20535086,1101,3834332,2014-08-30 11:58:23,2014-08-30 14:36:01,closed,Temporarily downgraded requests until they fix a bug.,"In response to #1100
",1,6,['status: accepted']
4403,20531886,1099,3834332,2014-08-30 03:20:18,2014-08-31 23:38:37,closed,Task/cleanup3,"More cleanup
",8,10,"['tag: component: docs', 'tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4404,20531195,1098,3834332,2014-08-30 02:02:36,2014-09-01 04:01:36,closed,Update RBush,"This PR addresses #1097 
",2,2,['status: accepted']
4405,20500967,1090,3834332,2014-08-29 14:04:13,2014-09-01 04:02:20,closed,Update mpl support and charts to use the new add_* low level functions.,"This is on top of #935, so the diff is useless...
I will merge #935 and #961 today and after that it would be readable, so although it is ready, I am labelling as WIP until the afternoon.
",2,6,"['status: accepted', 'type: task', 'reso: completed']"
4406,20416882,1083,3834332,2014-08-28 04:14:58,2014-08-29 18:43:36,closed,Task/cleanup2,"This is the PR to add docs and tests for `Document`, `Session`, and `PlotObject` and possibly others. Also other assorted small general cleanup tasks. 
",14,25,"['tag: component: docs', 'tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4407,20398571,1082,3834332,2014-08-27 20:09:04,2014-08-27 22:08:01,closed,disable autosave by default,"In response to https://github.com/ContinuumIO/bokeh/issues/1027
",1,1,['status: accepted']
4408,20397877,1081,3834332,2014-08-27 19:57:55,2014-08-27 21:38:22,closed,"Made command line output less cluttered (and, in one case, less misleadi...","...ng).
",1,1,"['status: accepted', 'type: task', 'reso: completed']"
4409,20379993,1079,3834332,2014-08-27 15:13:34,2014-08-27 17:14:45,closed,Used our own human_bytes.,"This is #1043 again... because it is not possible to run test on conda environments.
For high-levels conda functions, we will have `conda-api`, but for little utilities like this, it was recommend to us to just copy the function.
",6,1,['status: accepted']
4410,20344137,1077,3834332,2014-08-26 23:19:38,2014-08-27 00:55:52,closed,mpl temp down,"Temporary fix to avoid test failing on TravisCI
",4,5,['status: accepted']
4411,20320851,1072,3834332,2014-08-26 16:35:18,2014-08-26 18:19:38,closed,Don't repeat color names,,3,3,"['status: accepted', 'type: task', 'reso: completed']"
4412,20313466,1071,3834332,2014-08-26 14:47:37,2014-08-26 18:10:23,closed,remove embed tool,"This is a standalone task PR to remove the old and broken EmbedTool. 
",1,2,"['status: accepted', 'type: task', 'reso: completed']"
4413,20304643,1070,3834332,2014-08-26 12:19:50,2014-08-26 13:59:14,closed,Add test for new Gear gylph,"Added a test for the gear gylph that got added since I last looked.
",3,1,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4414,20304627,1069,3834332,2014-08-26 12:19:25,2014-12-19 14:37:25,closed, rects now have an x_offset and y_offset parameter,"the offsets move the plotted glyph a number of pixels in the desired direction.

This is useful for building a grouped column plot.  Otherwise columns for the same x-axis plot on top of each other .
",21,8,['status: declined']
4415,20300867,1068,3834332,2014-08-26 10:53:44,2014-08-26 14:29:06,closed,"Improvements to examples/test (S3 conn, version detection)",,14,4,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4416,20300241,1067,3834332,2014-08-26 10:38:51,2014-08-26 12:03:09,closed,Remove gmaps from server/templates/_page_base.html (#936),,2,1,['status: accepted']
4417,20300106,1066,3834332,2014-08-26 10:35:58,2014-08-26 11:40:55,closed,Disable redis(-py) dependency on windows (#940),,1,1,"['status: accepted', 'type: task', 'reso: completed']"
4418,20299912,1065,3834332,2014-08-26 10:31:16,2014-08-26 20:55:30,closed,Don't repeat Include properties' prefix,"Removed `prefix` from `Include` (use name to infer the prefix) and `Include` isn't a property anymore, just a dummy placeholder (inherits from `object`). 
",9,2,"['type: feature', 'status: accepted', 'reso: completed']"
4419,20264342,1063,3834332,2014-08-25 18:57:03,2014-08-26 00:27:00,closed,Removed server_source_upload example.,"This is just the removal suggested in #1059
",0,1,['status: accepted']
4420,20258006,1061,3834332,2014-08-25 17:05:38,2014-08-25 18:41:51,closed,Cleaning some additional failing examples...,"Some issues I found and clean testing examples in a new env...
",0,3,"['status: accepted', 'type: task', 'reso: completed']"
4421,20245183,1057,3834332,2014-08-25 13:15:46,2014-08-25 15:25:40,closed,Update README.md,"Small typo.
",4,1,"['status: accepted', 'type: task', 'reso: completed']"
4422,20221979,1053,3834332,2014-08-24 17:43:39,2014-08-27 20:01:37,closed,Add logger to BokehJS,"This PR addressed #722 by adding [JSNlog](http://js.jsnlog.com) which is a simple small JS logging library.  It has an AJAX appender that we can explore later for sending log information to the Bokeh Server for easy inspection. For now it is configured with a console appender that looks like this:

![screen shot 2014-08-24 at 12 33 00 pm](https://cloud.githubusercontent.com/assets/1078448/4024052/1c683188-2bb5-11e4-8c60-af488088d666.png)

Some tasks remain:
- [x] ~~need unique logger per... plot? document?~~
- [x] find good mechanism to configure log level from python
- [x] add some log statements to trace general program flow at a high level

@mattpap, @hhuuggoo input on the second question is appreciated.  Some kind of global variable that gets passed on `window`? It would be good for this information to be immediately available so logging can start as early as possible (i.e., not be part of some model, I think, otherwise we would have to wait for all the models to be loaded before logging could be used).  
",25,13,['status: accepted']
4423,20218300,1052,3834332,2014-08-24 09:46:57,2014-10-09 18:05:49,closed,Introduce lazy default values and don't require dummy data sources,"`Glyph.data_source` is now defined as `data_source = Instance(DataSource, lambda: ColumnDataSource())`. This allows to not set `data_source` explicitly. This obviously works for other properties as well. Note that we take advantage of subtyping here setting an instance of specific type of data source to a property that accepts the generic interface. Unfortunately, in bokehjs this isn't respected and currently implementation of column data source leaks where it shouldn't, so the abstraction is broken. Next, I changed how `source_v_select()` computes length of columns. Now I take minimum value instead of first arbitrary value and warn/raise exceptions to notify user about problems. All this allows changes to, for example, `gears.py`, so that we don't have to add `ColumnDataSource(dummy=[0])` (or similar) whenever a glyph takes only scalar values. Actually, thanks to lazy default values, we don't have to explicitly specify any data source in this case. For now I tested all glyph examples and they seem to work, but this is a deep change, so there might be some cases to fix (especially in relation to column lengths).  
",6,11,['status: superseded']
4424,20200907,1050,3834332,2014-08-22 22:32:52,2014-08-23 21:17:49,closed,Update scripts/changes.py for BEP 1.,,17,1,"['type: feature', 'tag: component: tests', 'status: accepted', 'reso: completed']"
4425,20200460,1049,3834332,2014-08-22 22:20:42,2014-08-22 22:31:45,closed,Update scripts/changes.py to comply with BEP 1,"Builds on mattpap/filter_issues and adds a fix to the --list-tags functionality and updated tag configuration to comply with BEP 1.
",0,2,"['type: feature', 'reso: working as intended']"
4426,20198542,1048,3834332,2014-08-22 21:33:38,2014-08-25 17:08:59,closed,better options for js building,,5,15,"['tag: component: docs', 'status: accepted', 'type: task', 'reso: completed']"
4427,20192009,1047,3834332,2014-08-22 19:28:37,2014-08-22 21:06:41,closed,Removed temporarily downloadapp until the slider issue is fixed.,"This is related with #896. 
Currently the example needs a really bad hack to work properly, so we decided so remove it temporarily until #896 get fixed. We can bring the example back into master after solving the issue. It makes no sense to ship not working example on master or release. @kdodia @chdoig @bryevdv and me agreed on the removal, so I will merge this one immediately after tests passed.
",0,1,['status: accepted']
4428,20180327,1046,3834332,2014-08-22 15:57:08,2014-08-22 16:22:56,closed,Use conda-build 1.7.0 until get fixed.,"Making it a PR to easily revert after conda get fixed.
",5,1,"['tag: component: tests', 'status: accepted', 'type: task', 'reso: completed']"
4429,20166539,1045,3834332,2014-08-22 11:38:44,2014-08-23 21:17:23,closed,Don't include rejected issues in scripts/changes.py,"Just a proposal. Make sure to evaluate this properly.
",15,1,"['status: accepted', 'type: task', 'reso: completed']"
4430,20164860,1044,3834332,2014-08-22 10:55:09,2014-08-22 17:28:26,closed,Remove unused Plot.data_sources (#1037),"At first I thought it's just redundant, but it really wasn't used anywhere at all.
",3,1,['status: accepted']
4431,20145299,1043,3834332,2014-08-21 23:40:28,2014-08-22 00:12:51,closed,test script can not be conda-dependent.,"If we have pip users, we have to provide a way to tests things `conda` independently, so I took the `human_bytes` function fro `conda.utils` and now you can test it locally in a pip/virtualenv env.
",4,1,['status: declined']
4432,20139804,1042,3834332,2014-08-21 21:38:21,2014-08-22 16:32:31,closed,Allow remote connections to spectrogram demo,,4,2,"['type: feature', 'status: accepted', 'reso: completed']"
4433,20137442,1041,3834332,2014-08-21 21:00:04,2014-08-27 23:47:39,closed,Some usability cleanup,"- [x] option for ""simple"" ids
- [x] remove necessitty to set `plot` on renderers
- [x] remove necessity to set `plot` on tools
- [ ] ~~cleanup, document and, test `bokeh.document`~~
- [ ] ~~cleanup, document and, test `bokeh.plot_object`~~
- [ ] ~~cleanup, document and, test `bokeh.session`~~
- [ ] ~~remove `PlotContext`?`~~
",8,17,"['status: accepted', 'type: task', 'reso: completed']"
4434,20117319,1038,3834332,2014-08-21 15:32:30,2014-09-03 20:53:18,closed,Handsontable improvements,"This is WIP. I have to put together remaining code I have locally.
",20,19,"['type: feature', 'status: accepted', 'reso: completed']"
4435,20086197,1036,3834332,2014-08-21 02:13:15,2014-08-21 02:13:29,closed,fix spectrogram axis locations,,0,1,"['type: bug', 'status: accepted', 'reso: completed']"
4436,20083168,1035,3834332,2014-08-21 00:17:24,2014-08-21 12:04:49,closed,update documentation to match interface change,"resolves #1028
",1,1,['status: accepted']
4437,20078355,1034,3834332,2014-08-20 22:21:04,2014-08-22 19:13:37,closed,Fixed axis and grids on DownloadsApp,"This pretend to fix #955
",7,1,['status: accepted']
4438,20069923,1033,3834332,2014-08-20 20:02:25,2014-08-22 17:02:21,closed,Make check on previous bokeh install dependent of develop. ,"Fixed #1031 as per suggestion of @bryevdv.
I have made local packages for the fix and master and try to installing over old pip installed bokeh and it seems to work as expected.
",1,1,['status: accepted']
4439,20047430,1030,3834332,2014-08-20 14:16:54,2014-08-20 14:54:39,closed,Remove old sampleapp.,"This simply remove this example because reason exposed in #824.
I will merge as soon as TravisCI pass...
",0,1,['status: accepted']
4440,20041924,1029,3834332,2014-08-20 12:36:46,2014-08-25 16:22:00,closed,Extending AR integration with categories tools,"Includes:
- Categories tools
- NumpyGlyphs speed enhancements
- Balanced zoom in zoom-fit
- Overlay-plot support (using 'hold', but only one can have a server datasource)
- Extended spread to do anti-aliasing (off by default, use with care)
",3,17,"['type: feature', 'status: accepted', 'reso: completed']"
4441,19944281,1026,3834332,2014-08-18 20:58:01,2014-08-22 23:51:25,closed,Fix for multiple plots in the IPython notebook.,"Comeback to curplot instead of curdoc in the IPython notebook environment.

This closes #1024
",5,3,['status: accepted']
4442,19930192,1022,3834332,2014-08-18 16:54:58,2014-08-18 17:47:06,closed,Fixed import error.,"Simple fix, I will merge it soon...
",1,1,['status: accepted']
4443,19924180,1020,3834332,2014-08-18 15:17:06,2014-08-22 15:35:33,closed,Correction to Boxplot Documentation Code,"This is the Pull request corresponding to Issue #1009.

This fixes the documentation to both check that the outliers are not empty for each category as well as to (if needed) shorten the lengths of the stems (if needed) to the minimums or the maximums.

This does not add an additional example that does not have any outliers.

This corrects every instance of the boxpolot code that I could find.

Best Wishes
",4,3,['status: accepted']
4444,19883849,1015,3834332,2014-08-16 21:52:54,2014-08-22 20:20:17,closed,Added independent chart examples.,"This PR fixes #1014.
",3,13,['status: accepted']
4445,19882459,1013,3834332,2014-08-16 19:03:01,2014-08-16 19:38:06,closed,Fixing axes compatibility.,"Just that... merging it soon to make available in the devel build.
Fix #1012
",1,1,['status: accepted']
4446,19880176,1011,3834332,2014-08-16 14:28:47,2014-08-16 16:12:47,closed,Bugfix/xyaxis broken,"Fixes #1010 reported on mailing list.
",1,5,['status: accepted']
4447,19788201,1002,3834332,2014-08-14 13:48:51,2014-09-08 17:16:51,closed,Log Axis Enhancement,"Closes #816 and #817. Previous PR here: #985 (Was accidentally closed).

Couple of fixes to make the axis and respective tickers better. Expose Log Axis on JS Side. Add JS example of a log plot.
",4,2,['status: declined']
4448,19765140,1001,3834332,2014-08-14 02:21:34,2014-08-26 22:19:11,closed,"remove ""default"" from glyph specs",,28,10,"['status: accepted', 'type: task', 'reso: completed']"
4449,19704816,997,3834332,2014-08-13 04:44:49,2014-08-13 04:47:23,closed,show with no obj should show the whole document,,1,1,"['type: bug', 'status: accepted', 'reso: completed']"
4450,19703669,996,3834332,2014-08-13 03:45:18,2014-08-13 22:13:29,closed,grid and axes improvements,"Some improvements to grids and axes. 
",19,12,"['type: feature', 'status: accepted']"
4451,19687584,995,3834332,2014-08-12 20:30:44,2014-08-12 21:16:43,closed,Various improvements to example widget testing script,,0,1,"['type: feature', 'status: accepted']"
4452,19676564,993,3834332,2014-08-12 17:28:35,2014-08-12 18:00:26,closed,fix #990,,0,1,['status: accepted']
4453,19611288,985,3834332,2014-08-11 16:26:15,2014-08-14 09:02:33,closed,Log Axis Fixes,"Closes #816 and #817.

Couple of fixes to make the axis and respective tickers better. Expose Log Axis on JS Side. Add JS example of a log plot.
",8,0,['status: declined']
4454,19563465,982,3834332,2014-08-09 11:02:34,2014-08-17 21:21:42,closed,Feature/sin example,"depends on #981 
",1,9,"['type: feature', 'status: accepted', 'reso: completed']"
4455,19563341,981,3834332,2014-08-09 10:43:35,2014-08-17 17:47:52,closed,added stock example embedded into external flask app,"- modified app_document data for use with embedding into other servers
- modified vboxform.coffee to use mget instead of mget_obj
",5,12,"['type: feature', 'status: accepted', 'reso: completed']"
4456,19541238,976,3834332,2014-08-08 17:45:45,2014-08-14 19:05:04,closed,Server-side colors and ISO Contours,"- Support for image_rgb output from AR (supports for sever-side coloring, including HD alpha)
- Support for poly_line output from AR (supports ISO Contours)
- Tests (in the spirt of PR905)
",12,36,"['type: feature', 'status: accepted', 'reso: completed']"
4457,19480216,974,3834332,2014-08-07 17:05:11,2014-08-07 17:10:53,closed,fix missing mouse callbacks,,2,1,"['type: bug', 'status: accepted']"
4458,19352992,970,3834332,2014-08-05 16:28:06,2014-08-05 18:07:34,closed,Fix _glyph_functions,"Same PR than #962 but changes in branch rather than fork.
",1,1,['status: accepted']
4459,19311775,962,3834332,2014-08-04 22:23:29,2014-08-05 18:00:44,closed,Update _glyph_functions.py,"Solving issue to be able to pass columns other than 'x' and 'y' in bokeh.plotting in bokeh-dev-0.5.2

e.g:

``` python
source = ColumnDataSource(data=dict(
    p = np.random.random(N),
    q = np.random.random(N)    
))

square('p','q',source=source)
show()
```
",14,1,"['type: bug', 'status: superseded']"
4460,19310294,961,3834332,2014-08-04 21:53:03,2014-08-29 21:08:23,closed,Big charts refactor,"WIP, mostly to avoid working in the solitude :stuck_out_tongue:... but NOT for review yet.
",13,21,"['type: feature', 'status: accepted', 'reso: completed']"
4461,19306825,960,3834332,2014-08-04 20:52:26,2014-08-06 21:00:57,closed,Bugfix/server downsample,"Repairs issues with server downsample related to the introduction of cartesian frame and layout.
",15,8,"['type: bug', 'status: accepted', 'reso: completed']"
4462,19283811,957,3834332,2014-08-04 14:05:54,2014-08-05 10:58:39,closed,Fixed labels in charts interface.,"Quick and easy fix.
Closes #956.

Now it is looking OK (include the labels, not cutted), you can see the probe below :wink:

![fixed](https://cloud.githubusercontent.com/assets/1640669/3798024/3aabc0ea-1be0-11e4-88c7-bbe323535087.png)
",2,1,"['type: bug', 'status: accepted']"
4463,19245699,952,3834332,2014-08-02 12:22:41,2014-08-05 18:23:16,closed,remove get/get_obj dichotomy,"First pass, have not done extensive testing. @hhuuggoo, @mattpap comments welcome. 

This is a pre-req for object selection.
",5,5,"['status: accepted', 'type: task']"
4464,19222084,943,3834332,2014-08-01 17:12:37,2014-08-01 19:09:33,closed,fix up plotting.py and js examples,"This also fixes a bug introduced by patches hit testing
",1,3,"['type: bug', 'status: accepted', 'reso: completed']"
4465,19206719,942,3834332,2014-08-01 12:09:54,2014-08-01 14:23:52,closed,hit testing for patches,"Initial checkin has spatial indexing, needs point in poly test added to finish. Fixes #931 
",2,2,"['type: feature', 'status: accepted']"
4466,19200733,941,3834332,2014-08-01 09:26:06,2014-08-01 14:20:19,closed,"Upload log file to S3, but don't print it in after_script","This is because travis-ci often messes up output.
",4,2,['status: accepted']
4467,19197744,939,3834332,2014-08-01 08:08:29,2014-08-06 21:25:33,closed,Feature/stock example,"To run:
(build bokehjs first)
./bokeh-server -d -j -s --script=examples/app/applet/stock_example.py

Changes:
-  added VBoxForm which is just a VBox with a form (like vbox model form, but does not do any input listening/type coercion)
-  added height/width to paragraph/pretext
",6,5,['status: accepted']
4468,19165118,935,3834332,2014-07-31 17:15:22,2014-08-29 21:11:29,closed,Fix boxplot and more refactor...,"Depends on #929.
Some bug fixes over the boxplot chart generated at the scipy sprint. Now it is using the categorical axis in a proper way (instead of an hybrid thing we had before at the time of drawing the segments... it was used some ""kind"" of linear x values instead of the categories in the categorical axis). Also changed quad for rect, deleted unused things and improve the styling a little bit... now look in this way:

![boxplot](https://cloud.githubusercontent.com/assets/1640669/3768303/11d99bb8-18d6-11e4-8275-62fa411db432.png)

(forget the ""cutted"" label... it is another issue)
",8,26,"['type: bug', 'type: feature', 'status: accepted', 'reso: completed']"
4469,19113146,930,3834332,2014-07-30 19:54:28,2014-07-31 07:48:27,closed,make build_js the default,,2,2,"['type: feature', 'reso: working as intended', 'status: superseded']"
4470,19112625,929,3834332,2014-07-30 19:45:50,2014-07-31 19:54:59,closed,Fixed axis location in categorical plots after layout landed.,"Quick fix for people using master.
",2,1,"['type: bug', 'status: accepted']"
4471,18993615,924,3834332,2014-07-28 21:05:30,2014-07-28 22:54:54,closed,remove unused PNGView,"I can find no use of this anywhere in the BokehJS codebase. 

ping @paddymul, in case it is something you need to recreate outside BokehJS.
",0,1,"['status: accepted', 'type: task']"
4472,18993515,923,3834332,2014-07-28 21:04:00,2014-07-28 23:42:13,closed,replace safebind with listenTo and remove safebind.coffee,"@hhuuggoo all tests pass and visual inspection looks good, any comments appreciated, however. 
",1,2,"['status: accepted', 'type: task']"
4473,18993424,922,3834332,2014-07-28 21:02:34,2014-07-28 22:55:10,closed,remove old unused and deprecated embed code,"@paddymul in case there are any of these that you still use. 
",0,3,"['status: accepted', 'type: task']"
4474,18993194,921,3834332,2014-07-28 20:59:04,2014-08-01 14:25:41,closed,clean up top level project dir,"@quasiben can you see if it is possible to move `conda.recipe`and `build_and_upload.sh` into the `scripts` dir?
",3,1,"['status: declined', 'type: task']"
4475,18977115,917,3834332,2014-07-28 16:16:32,2014-07-28 17:14:53,closed,Add return statement in welcome view (#915),,1,1,"['type: bug', 'status: accepted']"
4476,18943981,913,3834332,2014-07-27 20:21:21,2014-08-01 12:10:49,closed,Fix broken wheel zoom in Firefox,"@damianavila, @kdodia, @tabchas  could use windows, linux testing testing. Works on safari, chrome, and firefox on OSX. 
",7,5,"['type: bug', 'status: accepted']"
4477,18940836,912,3834332,2014-07-27 13:37:46,2014-07-28 21:09:27,closed,"simplify canvas dom render, and fix toolbar positions issue","When I merged layout, I split canvas render off from the rest of overall plot render. Something in that was amiss. This seems simpler, and more importantly, works. 

@LilaHickey @hhuuggoo please comment. 
",4,2,"['type: bug', 'status: accepted']"
4478,18939649,911,3834332,2014-07-27 10:22:30,2014-10-17 20:08:50,closed,Rewrite spectrogram demo to use mostly python,,7,27,"['type: feature', 'status: accepted', 'reso: completed']"
4479,18933799,910,3834332,2014-07-26 18:05:00,2014-07-27 06:48:01,closed,"Subtypes, such as numpy int64, are not considered instance of np.int.","Subtypes, such as numpy int64, are not considered instance of np.int. Use np.issubdtype instead. Issue exists when trying the crossfilter demo at /scripts/crossfilter.py.
",2,1,"['type: bug', 'status: accepted']"
4480,18933241,905,3834332,2014-07-26 16:44:09,2014-08-15 15:58:36,closed,add some tests,"@mattpap I am using BeautifulSoup to inspect our embedding HTML closely. What is the easiest way to add it to our test install, everything is conda now correct? We will need to make a conda package and put it somewhere, I think you have thoughts on the best place. 

@mattpap, @damianavila, @kdodia, @tabchas, @hhuuggoo, @JosephCottam  (also ping @pzwang) 

All, we have been fairly lax in keeping up tests for Bokeh, As more people start using Bokeh and we want to move pieces forward this is going to become a liability for us. I'd like to use this PR to collect a reasonable chunk of new tests. In particular, I would like **everyone** to contribute **something** to this PR. It does not have to be something huge or complicated, just something to get back some practice of test writing. 
",5,11,"['tag: component: tests', 'status: accepted', 'type: task']"
4481,18933134,903,3834332,2014-07-26 16:31:55,2014-07-28 22:59:59,closed,fix case where colorspecs mishandled serializing to dictionaries when the value was unset,"The problem stemmed from using `self._isset` to distinguish between ""never having been set"" and ""explicitly set to None"". By ignoring `self.value` the color spec would always serialize to `None` whenever it had been set. The was exposed when running the glyph tests after using the `plotting.py` interface:

```
In [1]: %run test_glyphs.py
............................................................................................
----------------------------------------------------------------------
Ran 92 tests in 0.375s

OK

In [2]: from bokeh.plotting import circle

In [3]: circle([1,2], [3,4])
Out[3]: <bokeh.objects.Plot at 0x1104b8c10>

In [4]: %run test_glyphs.py
..F..F..F.F......F..F.F.F.F.F.F..........F..F..F..F..F..F..F..F..F..F..F..F..F.F.F....F..F.F
```

As of this change, all existing tests pass, a new `test_named_value_unset` test passes. Visual inspection of all test .png outputs also looks correct. However, being a change at a very low level, closer scrutiny is requested from @pzwang @mattpap @damianavila 
",2,1,"['type: bug', 'status: accepted']"
4482,18929717,901,3834332,2014-07-26 08:00:34,2014-07-26 14:22:00,closed,allow xfield and yfield paramters to be scalar values,"Code like `quad(top=hist, bottom=0, left=edges[:-1], right=edges[1:])` fails because `bottom` is a scalar value 0, and not a column name. This is because of code that collects the `""xfields""` and `""yields""` for updating the data ranges assumes those fields are not scalars. This code loosens that assumption. 

This is a temporary fix to this annoying problem. The real solution is to remove data ranges entirely and let renderers be responsible for requesting their preferred bounds. 
",2,1,"['type: feature', 'status: accepted']"
4483,18902806,892,3834332,2014-07-25 15:41:33,2014-07-25 16:16:51,closed,updated the title attributes in the docs example,"the attributes were wrongly named title_font_size instead of
title_text_font_size
also some commas were missing.
",2,1,"['type: bug', 'status: accepted']"
4484,18897767,891,3834332,2014-07-25 14:16:46,2014-07-25 14:46:46,closed,using --tags with git describe,,1,1,"['type: feature', 'status: accepted', 'reso: completed']"
4485,18769948,879,3834332,2014-07-23 11:27:54,2014-07-23 17:41:23,closed,Fix missing attribute on adaptive ticker,"fix #877
",2,3,"['type: bug', 'status: accepted']"
4486,18659525,876,3834332,2014-07-21 15:11:15,2014-07-21 16:12:53,closed,"Revert ""Fix #873""","This reverts commit 72af4989f96e7f296d83c7f56d99e048131e0a25.
Because of the discussion in #873.
I will merge as soon as Travis succeed.
",0,1,"['type: bug', 'status: accepted']"
4487,18642053,874,3834332,2014-07-21 08:13:30,2014-08-26 12:56:39,closed,Raises a warning if unnecessary kwargs are supplied,"@bryevdv I have implemented as per your diff in the comment in #646.

It seems to be working fine, but will require some tests to be added, as per your suggestion. Working on the same.
",8,2,"['type: feature', 'reso: working as intended', 'status: declined']"
4488,18612861,872,3834332,2014-07-18 22:46:45,2014-07-24 21:20:17,closed,Fixes the abstract rendering transpose error,"- Fixes on old line 256 to new line 296 repair the transpose
- Fixes on 229 and 230 make the guides more accurate
- Example classes: abstractrender.py is now correct;  census plot is now in census.py by itself 
- Change in abstract_render in 0.1.1 drove a small interface change (BinarySegment class)
- Lots of formatting changes (because I only recently heard of pep8...)
",1,13,['status: accepted']
4489,18549006,868,3834332,2014-07-17 19:29:17,2014-07-20 05:15:49,closed,Auto range merge,"This pull request has a bunch of changes, mostly around multiple y-axes.
I can split this up into multiple pull requests, let me know what works best.

I added a RightClickEventGenerator
tools now have an option for ""showButton""
I also created an auto_range tool that watches the x-axis, and makes sure that the y-range can accomodate all points in the y_field.

Feedback welcome.
",1,30,"['type: feature', 'status: declined']"
4490,18538228,864,3834332,2014-07-17 16:15:52,2014-07-18 12:19:25,closed,Log files still have dinitialize method,"Change dinitialize() to initialize().
",2,1,"['type: bug', 'status: accepted', 'reso: completed']"
4491,18504783,859,3834332,2014-07-17 01:00:43,2014-07-18 17:40:38,closed,Fix calls to publish_display_data for newer versions of IPython,,19,5,"['status: ready', 'status: accepted']"
4492,18472660,851,3834332,2014-07-16 14:52:06,2014-07-31 14:53:05,closed,Enhanced testing automation (part 1),,37,77,['status: accepted']
4493,18440655,846,3834332,2014-07-15 22:56:45,2014-07-15 23:22:41,closed,Output utf-8 by default.,"This try to solve the issue with the encoding... try to fix #682
",3,1,"['type: bug', 'status: accepted']"
4494,18376225,841,3834332,2014-07-14 21:44:48,2014-07-15 18:56:42,closed,Fixed launching the tests suite from the examples folder.,"Solve the issue when trying to run `./test-d` from the examples directory... closes #758.
",2,1,"['type: bug', 'status: accepted']"
4495,18373159,840,3834332,2014-07-14 20:49:45,2014-07-15 03:15:21,closed,Advice to the user about start the bokeh-server,"Just a reminder to the user to start the bokeh-server. Close #706.

![servernotice](https://cloud.githubusercontent.com/assets/1640669/3577009/46a922c8-0b98-11e4-9bc3-316879733497.png)

I think the failure is more explicit right now...
",1,1,"['type: feature', 'status: accepted']"
4496,18350436,837,3834332,2014-07-14 14:14:27,2014-07-17 14:08:31,closed,Feature/plotting reset,"closes #831 
",11,3,['status: accepted']
4497,18349152,835,3834332,2014-07-14 13:50:35,2014-07-17 15:23:31,closed,added ability to use show commands on objects that are not the current p...,"...lot

@bryevdv @LilaHickey @kdodia 

added a function so we could show crossfilter in the notebook (and debug why the css is not looking great)
",10,2,['status: accepted']
4498,18328085,832,3834332,2014-07-13 23:56:35,2014-07-15 12:40:50,closed,"Simplify less, cleanup builds and implement r.js in Scala","This started as cleanup of bokeh's less, because previously we used imports and had some paths hard-coded in builds. Now we use only imports. Then I did minor cleanup of `Gruntfile` and removed unneeded stuff from sbt build. And then, being annoyed by r.js run times, I implemented (a subset) of r.js in Scala. To use it, issue `./sbt requirejs`. Tests pass using `bokeh.js` generated this way. Currently the biggest issue is resolving cyclic dependencies. Currently any kind of cyclic dependencies are allowed. A warning is issued when this happens (and yes, bokeh's dependency graph contains cycles, mostly due to `common/base`), but the resulting dependency order potentially may be wrong. Use with caution, at least for now.
",4,23,"['status: ready', 'status: accepted']"
4499,18324226,830,3834332,2014-07-13 15:25:58,2014-07-14 22:22:16,closed,Fixed issue converting solid lines from mpl,"Corrects an issue when solid lines are passed by mplexporter as the string 'none'. Previously bokeh would except with a ValueError when trying to convert a plot with solid lines.
",7,1,['type: bug']
4500,18306826,828,3834332,2014-07-11 23:05:56,2014-07-15 23:20:06,closed,Fixes #682.,"I am on windows 7 SP1 using python 3.4 64 bit.

When trying the candlestick example I ran into issue #682. By writing the file as binary we get around the charmap issue. However to write as binary we need to convert the unicode string to bytes for Python 3... The below should also work in Python 2.6 and .7 and on none windows systems but I am unable to test that.

I used the below to help figure this out...
http://stackoverflow.com/questions/14630288/unicodeencodeerror-charmap-codec-cant-encode-character-maps-to-undefined

http://stackoverflow.com/questions/5471158/typeerror-str-does-not-support-the-buffer-interface
",11,2,['status: ready']
4501,18305153,826,3834332,2014-07-11 22:19:44,2014-07-15 17:13:23,closed,added BoxPlot chart,"A BoxPlot chart modeled on Bar and Scatter.
",10,2,"['type: feature', 'status: accepted']"
4502,18254062,818,3834332,2014-07-10 23:58:34,2014-07-11 02:39:35,closed,fix python3 compat issue in setup.py,"In python 3.0 `raw_input` has been renamed to `input`.
",3,1,['type: bug']
4503,18222959,811,3834332,2014-07-10 14:35:50,2014-07-11 13:40:36,closed,Fixes Bokeh Logo repetition in nbviewer notebooks.,"Resolves https://github.com/ContinuumIO/bokeh/issues/809
",2,6,['type: bug']
4504,18173976,807,3834332,2014-07-09 17:25:07,2014-07-11 19:32:59,closed,bokeh/sampledata: Rename US Regions State Boundaries.csv.gz,"Rename US Regions State Boundaries.csv.gz to US_Regions_State_Boundaries.csv.gz
",1,1,['status: ready']
4505,18173875,806,3834332,2014-07-09 17:23:21,2014-09-15 13:05:29,closed,volume slicer widget,"depends on #742 
",4,11,['status: declined']
4506,18146519,803,3834332,2014-07-09 08:05:13,2014-07-14 16:03:11,closed,Make output from examples/test more readable,"The new logging strategy is to write bokeh server's and ipython notebook's logs to a log file and everything else to a log file and to stdout. Locally you can use `tail -f examples.log` (that's the default file name) to view complete log in real time. On Travis CI the leg file will be written to stdout at the end of test run (no matter of the outcome of the tests). Also, `examples/test` will now complain about output cells in notebooks. By default it will fail an example that contains outputs, but you can also ignore outputs and remove them (the last option modifies the file in-place).
",17,23,"['status: ready', 'status: accepted']"
4507,18106394,800,3834332,2014-07-08 14:47:54,2014-07-08 16:10:50,closed,Embedded Plot Css Fix,"Fix for https://github.com/ContinuumIO/bokeh/issues/798. Specific to slides so will not affect any other plots.
",4,2,[]
4508,18079926,797,3834332,2014-07-08 02:12:47,2014-07-08 02:16:27,closed,"bugfix, extra data source creation",,0,1,[]
4509,18072970,795,3834332,2014-07-07 22:22:29,2014-07-08 03:26:02,closed,Added some charts doc to the user guide.,"Some documentation about bokeh charts.
",1,3,['status: ready']
4510,18071390,793,3834332,2014-07-07 21:48:55,2014-07-08 18:51:32,closed,Feature/crossfilter ui,"@LilaHickey please review 
",0,2,[]
4511,18067938,792,3834332,2014-07-07 20:44:35,2014-07-07 20:48:31,closed,Remove Object Explorer's icons,"Those icons have uncertain license, so I'm removing them to stay on the safe side. I left the logic in-place, so if we have good icons, then just copy their base64 enconding into appropriate places in `main.less` (`.bk-icon-type-...`).
",0,2,['status: accepted']
4512,18066870,791,3834332,2014-07-07 20:25:37,2014-07-07 21:37:53,closed,Fixed plots references.,"First commit fixes the not rendering issue in the app_reveal example.
@LilaHickey in working in the css stuff (the new toolbar appears over the plot instead of to the right side.
",0,4,['type: bug']
4513,18065905,790,3834332,2014-07-07 20:07:47,2014-07-07 20:08:46,closed,Update changes script with new project labels.,"The labels have changed since this script was first written. Update the
configuration object that decides what issues are displayed. Also add a
small utility to make this job easier in the future.
",0,1,[]
4514,18065472,789,3834332,2014-07-07 19:59:42,2014-07-07 20:46:54,closed,Feature/fixing crossfilter,"@LilaHickey @pzwang @bryevdv this is waht we need to make the crossfilter look kind of decent with the new UI (before that, the toolbar was getting wrapped to the bottom)

will this work?
",0,5,[]
4515,18065107,788,3834332,2014-07-07 19:52:33,2014-07-14 13:26:43,closed,"Load inline resources lazily (on render, not on init)","Fixes #644.
",13,1,"['type: feature', 'status: accepted']"
4516,18064008,787,3834332,2014-07-07 19:32:40,2014-07-07 20:35:57,closed,Frame cleanup,"Changes:
- switching notebook bokeh icon to css-based version (rather than pulling from cdn)
- updating resize image on toolbar
- removing tabs from less file. 
",3,6,[]
4517,18058588,785,3834332,2014-07-07 17:52:34,2014-07-07 20:23:29,closed,Charts fixes,"Here I am adding some fixes...
- One line docstring to functions.
- Use `show()` instead of `draw()`
- Use `xlabel, ylabel` instead of `xname, y name`
- Update notebook example
- Added automatic labelling in Scatter charts when you pass pandas objects.
",0,4,['status: ready']
4518,18057820,784,3834332,2014-07-07 17:38:07,2014-07-07 17:44:31,closed,Add missing mplexporter package to setup.py,,1,1,['type: bug']
4519,18057338,783,3834332,2014-07-07 17:28:00,2014-07-07 17:45:45,closed,Reduce the number of queries changes script makes.,"Adding the ""since"" parameter to the github issues list resource should
limit the number of issues returned. With pagination, this will also
reduce the number of necessary API calls to gather all relevant data.
",0,1,['type: feature']
4520,18053726,782,3834332,2014-07-07 16:18:20,2014-07-07 20:25:01,closed,removing old bokeh install path,,1,2,['type: bug']
4521,18052033,781,3834332,2014-07-07 15:49:04,2014-07-07 19:05:47,closed,"use simple range specifications, other cleanup",,2,3,"['status: accepted', 'type: task']"
4522,18050903,780,3834332,2014-07-07 15:31:30,2014-07-07 15:31:58,closed,Fix pagination issue in changes script.,"Fetch all pages of relevant issue data, rather than just the first.
",2,1,"['type: bug', 'status: accepted']"
4523,18050092,779,3834332,2014-07-07 15:19:05,2014-07-07 15:30:20,closed,Adding bokeh.charts to setup.py,,1,1,"['type: bug', 'status: accepted']"
4524,18048558,778,3834332,2014-07-07 14:53:53,2014-07-07 17:15:44,closed,minor improvements to log axes,,0,3,['type: feature']
4525,18025577,777,3834332,2014-07-07 03:24:23,2014-07-17 14:11:39,closed,removing dinitialize,"@mattpap @bryevdv @tabchas  I think when I started I didn't know javascript and backbone well enough to do this, but I think this is sufficient to get rid of dinitialize.  Essentially we rip out backbone.js constructor, make the initialization call optional, and when we would like to defer it (loading a bunch of models) then we pass in an option to skip the initialization because the code that loads a bunch of models goes in afterwards and makes all the initialize calls.

It seems to work in a simple test case (the log scale one). I would not merge this in for this release (no benefit to the users really)  But this should make our future development smoother.

@bryevdv I don't think this would have made your layout development any easier, all the things we talked about with regards to simplifying and documenting and understanding the events we use is still important going forward, I think that is what will make some of the complex work we have coming up easier to do
",13,1,"['type: feature', 'status: ready']"
4526,18023168,776,3834332,2014-07-07 00:06:44,2014-07-09 16:31:32,closed,Feature/safeguards for deferred initialization,,4,2,['type: bug']
4527,18021320,775,3834332,2014-07-06 20:17:02,2014-07-07 17:30:32,closed,add tags option for build and upload script,"``` bash
$./build_and_upload.sh -h
build_and_upload.sh [-h] [--tags] -- program to build and upload bokeh pkgs to binstar

    where:
        -h  show this help text
        --tags instructs the version number to be the tagged branch
```
",0,1,"['type: feature', 'status: ready']"
4528,18018723,773,3834332,2014-07-06 14:35:17,2014-07-06 17:54:03,closed,Log Axes support,"Support for Log Axes. Closes #703.
",1,11,['status: accepted']
4529,18011758,771,3834332,2014-07-05 17:03:43,2014-07-05 20:08:27,closed,Fixes to build and upload script,"- added binstar pkgs for nodejs and grunt under bokeh organization
- switched out wakari channel for bokeh channel in `build.sh`
",2,1,"['type: bug', 'status: accepted']"
4530,18005992,770,3834332,2014-07-04 23:00:39,2014-07-04 23:20:02,closed,Avoid abstract rendering package installation on py3.,"Hot fix (I have forgotten the prefix, sorry)... we talk about that with @bryevdv.
If test passed, I will merge in a couple of minutes.
",1,1,"['type: bug', 'status: ready']"
4531,18005167,769,3834332,2014-07-04 21:35:03,2014-07-05 15:41:42,closed,need to add new package to setup.py.. not sure why travis did not catch ...,"...this?
",1,1,"['type: bug', 'status: accepted']"
4532,17973950,768,3834332,2014-07-03 23:35:54,2014-07-05 02:59:22,closed,Bokeh charts,"OK, this is the Bokeh chart interface, at least the very beginning... there is a lot of thing to add... a lot of thins to refactor... 
Currently it is supporting histograms, bar, scatter charts. Grouped and stacked. Support OrderedDict and pandas object as inputs. And we support kwargs and chained methods.
",6,25,"['type: feature', 'status: ready']"
4533,17946894,760,3834332,2014-07-03 14:22:36,2014-07-03 14:22:39,closed,"Revert ""Add support for log scale axes""","Reverts ContinuumIO/bokeh#720
",0,1,[]
4534,17945069,759,3834332,2014-07-03 13:50:25,2014-07-06 14:06:03,closed,Added total-downloads.py example,"It's just a simple example of chart to present total number of downloads: installers or packages.

Before launching this script there is a necessity to clone appropriate source of data (this could be available only for internal developers of Continuum Analytics).
",8,2,"['type: feature', 'status: ready', 'status: declined']"
4535,17943033,757,3834332,2014-07-03 13:11:40,2014-07-03 14:43:35,closed,add support for minor ticks,,2,2,"['type: feature', 'status: ready']"
4536,17931215,755,3834332,2014-07-03 08:23:13,2014-07-06 14:08:25,closed,Feature/abstract rendering guides,"- Adds proper axis support to abstract rendering images
- Fixes early/eager abstract_rendering import warning, closing #747.  Now only prints the warning when the server tries to instantiate the AR object.  Updated warning message to include pip and conda (as well as the AR repo)
",9,15,"['type: feature', 'status: ready']"
4537,17925740,753,3834332,2014-07-03 04:55:39,2014-07-03 13:10:42,closed,Add support for minor ticks,,3,3,"['type: feature', 'status: WIP']"
4538,17920971,752,3834332,2014-07-03 00:50:37,2014-07-03 14:47:33,closed,"Add click tool, allow click and hover tools to be always on",,1,3,"['type: feature', 'status: ready']"
4539,17885407,748,3834332,2014-07-02 13:26:53,2014-07-02 17:46:15,closed,"in merging docs, only merge new objects","closes #695 
",9,1,"['type: bug', 'status: accepted']"
4540,17866881,745,3834332,2014-07-02 03:53:43,2014-07-03 18:54:15,closed,frame improvements,,8,8,"['type: feature', 'status: ready']"
4541,17840645,743,3834332,2014-07-01 16:26:28,2014-07-01 16:53:07,closed,Include version '2.0.0-wakari',"Exception when running bokeh magic extension in Wakari:

Exception: This version of IPython is not currently supported.
Currently supported version are: 1.0.0, 1.1.1, 1.1.2, 1.2.0, 1.2.1 and 2.0.0-dev, 2.0.0-b1, 2.0.0, 2.1.0, 3.0.0-dev.

Added version '2.0.0-wakari' to the list 
",1,1,"['type: bug', 'status: ready']"
4542,17810713,742,3834332,2014-07-01 03:41:00,2014-08-26 02:53:25,closed,tornado websockets (gevent optional),"ripping out websockets into tornado, for more compatibility, and for ability to run multiple server processes
",4,28,"['type: feature', 'status: ready', 'reso: completed']"
4543,17705485,739,3834332,2014-06-27 14:27:35,2014-07-02 13:15:36,closed,Feature/crossfilter,,2,40,"['type: feature', 'status: ready']"
4544,17684625,738,3834332,2014-06-27 03:23:44,2014-07-20 05:01:52,closed,Add layout capability,"- [x] factor canvas code into `Canvas` object
- [x] de-dupe `Plot` and `GMapPlot`
- [ ] expose kiwi objects
- [x] add `Panel` and `CartesianFrame` that use kiwi for constraints 
- [x] add simple plot layout with central `CartesianFrame` content area
- [x] replace `ViewState` with simple plot layout 
- [x] configure axes with panels for layout
",3,62,"['type: feature', 'status: accepted']"
4545,17433341,734,3834332,2014-06-20 23:46:47,2014-06-21 12:36:18,closed,Enhance the setTimeout for starting Qunit. Attempting to fix random failures in Travis.,"I presume the random failures could be raised but Qunit loading before the load of everything else... trying enhancing the timeout ot start Qunit.
",2,1,"['type: bug', 'status: ready']"
4546,17418377,733,3834332,2014-06-20 17:44:33,2014-06-26 01:24:10,closed,Execute ipynb and write a nbconverted html...,"The idea here is to test a simple ipynb to see if it is rendering OK when it is nbconverted, and then if it would be nbviewer-ed OK.
I am using a custom script to execute and nbconvert the notebook, in the future we could change this for a `IPython.nbconvert` preprocessor currently in PR state, but not available until IPython 3.0 
",4,13,"['type: feature', 'status: ready']"
4547,17389045,728,3834332,2014-06-20 04:36:01,2014-07-14 13:08:28,closed,Enable automated testing with Python 3.4,,20,1,"['type: feature', 'status: WIP']"
4548,17377710,727,3834332,2014-06-19 21:36:03,2014-06-24 20:13:33,closed,Skip pan/zoom tool registration,"Closes https://github.com/ContinuumIO/bokeh/issues/464

According to @bryevdv there's no easy way to remove a tool from a plot, so this catches pan and zoom tools added via the `tools` attribute and keeps them from being added to the plot.
",1,5,"['type: bug', 'status: ready']"
4549,17344435,721,3834332,2014-06-19 10:58:12,2014-06-24 22:17:02,closed,BokehJS demo docs fix-ups,"Fixes #694 .
",2,6,['status: accepted']
4550,17302513,720,3834332,2014-06-18 16:02:01,2014-07-03 14:07:38,closed,Add support for log scale axes,"This is a PR for #703 
",2,23,['status: accepted']
4551,17249469,717,3834332,2014-06-17 17:26:41,2014-07-02 18:07:10,closed,Feature/range1d datetime,"This will require a bit of discussion, especially around the Date property.

Closes https://github.com/ContinuumIO/bokeh/issues/635
",4,8,"['type: feature', 'status: accepted']"
4552,17201212,710,3834332,2014-06-16 20:38:22,2014-06-17 21:38:47,closed,respect use_scientific and power limits on axis ticks,"fixed #556 
",1,1,['status: accepted']
4553,17140358,709,3834332,2014-06-14 04:59:21,2014-06-24 22:24:31,closed,First working version of automated execution of notebooks in example folder.,"Very WIP... I will work more on this in the next days...

Edit: No longer a WIP.
",6,10,"['type: feature', 'status: ready']"
4554,17138776,708,3834332,2014-06-14 01:15:06,2014-06-14 02:40:37,closed,fixing error in setup.py--importing bokeh.server.utils and commenting ou...,,0,1,[]
4555,17095251,707,3834332,2014-06-13 06:51:59,2014-06-25 20:42:38,closed,Initial integration of abstract rendering,"Abstract rendering framework integration working for count-based analysis.  Includes slots for aggregator, info, chains of shaders and a few basic shaders. 

Notes: 
- Requires separate installation of abstract rendering, but it prints an error if the import fails, including instructions for how to download/install from the main AR repo
- Axis ticks are wrong...just plain wrong.  Don't trust them when using AR.
- Merged in master at 2:46am on 13Jun2013.

Run examples/plotting/server/abstractrender.py yields....
![ar](https://cloud.githubusercontent.com/assets/2963989/3267190/51361f2e-f2c6-11e3-80b3-66f5833868a5.png)
",18,89,"['type: feature', 'status: ready']"
4556,17026363,702,3834332,2014-06-11 21:52:46,2014-06-17 15:01:10,closed,Add script to help with testing interactive examples.,"Small script I've been using to help test examples that require human interaction.  It opens each file in a given examples directory, waits for user input before opening the next example to see if things had displayed correctly, then logs any errors to a log file.
",9,5,['status: accepted']
4557,17017570,700,3834332,2014-06-11 19:19:09,2014-06-11 20:43:40,closed,Fix bokehjs.html page,"Clickable images to fix https://github.com/ContinuumIO/bokeh/issues/671. Links lead to JSFiddle instances of each glyph.

Preview:

![bokehjs_interface_reference__bokeh_0_4_4_documentation](https://cloud.githubusercontent.com/assets/4944634/3249786/273ba16e-f19d-11e3-8901-aabafcbe43af.png)
",1,3,[]
4558,17016653,699,3834332,2014-06-11 19:02:12,2014-06-12 21:27:09,closed,explicitly ignore zero dim rects,"This is to close #672 

Note: I also removed an extraneous call to `rect` that was in the render function. (filling and stroking are handled in separate loops)
",1,1,"['type: bug', 'status: accepted']"
4559,17007694,698,3834332,2014-06-11 16:17:06,2014-06-13 18:49:12,closed,Remove Serverconfig,"closes #690 

@hhuuggoo @pzwang is removing `Bokeh.Cloud` ok? I forget all the details unfortunately (and I can't find the old discussion), but as @mattpap notes that import in `__init__.py` causes the annoying bokeh server `KeyError` on exist. 
",4,3,"['type: feature', 'status: ready']"
4560,16936773,692,3834332,2014-06-10 12:27:25,2014-06-13 16:23:52,closed,Fix server styles after PR #550,"This PR restores  `bokeh-sever`'s look from before PR #550, well approximately, because now `bokeh-server` uses bootstrap 3. Also cleaned up server's templates a bit (more inheritance, etc.).
",15,23,['status: accepted']
4561,16903306,691,3834332,2014-06-09 19:32:28,2014-06-10 02:02:23,closed,allow ranges to be specified as sequences,"This is for #591 

Can do:

```
figure(x_range=[10, 20])
```

But still does not allow 

```
curplot().x_range = [10, 20]
```
",2,2,['status: accepted']
4562,16898776,689,3834332,2014-06-09 18:07:33,2014-06-10 02:03:54,closed,more succinct server config message,"This is to fix #310 

More generally, I think we need to figure out a coherent logging strategy. 
",6,3,"['type: feature', 'status: ready']"
4563,16860906,688,3834332,2014-06-08 07:00:50,2014-06-10 02:00:18,closed,LESS refactoring,"This is a follow up PR to #588.

There was not much for me to do. LESS seem to be in a better shape now than before. I mostly did minor cleanup, formatting fixes and removed empty css classes.
",3,5,['status: ready']
4564,16838755,686,3834332,2014-06-06 19:41:31,2014-06-10 01:58:56,closed,Added new IPython versions and raise exception if IPython versions do not match.,"Title says it all.
",2,1,"['type: feature', 'status: accepted']"
4565,16837934,685,3834332,2014-06-06 19:23:43,2014-06-06 23:11:15,closed,fix plot_width and plot_height attr names,"Closes https://github.com/ContinuumIO/bokeh/issues/466
",10,3,['status: accepted']
4566,16830831,684,3834332,2014-06-06 16:54:42,2014-06-24 20:15:51,closed,Enforce utf-8 enconding in output_file.,"Pretends to fix #682 enforcing the utf-8 enconding.
",5,2,"['type: bug', 'reso: wontfix']"
4567,16799946,681,3834332,2014-06-06 00:47:50,2014-06-06 16:41:54,closed,Fix hover tooltip going off page,"Closes https://github.com/ContinuumIO/bokeh/issues/675

This could benefit from a few pixel-tweaks; @bryevdv @damianavila please review.

![fullscreen_6_5_14__7_45_pm](https://cloud.githubusercontent.com/assets/4944634/3195575/0473c5f4-ed14-11e3-9fdd-e27c4789f2ae.png)
",2,1,['status: ready']
4568,16738046,678,3834332,2014-06-04 22:14:26,2014-06-04 22:42:56,closed,Updated colorscheme and a version rotate nicety,"Preview: ![donut_chart](https://cloud.githubusercontent.com/assets/4944634/3180755/8e149fa2-ec35-11e3-8058-9cb499d34f3d.png)
",2,2,['status: accepted']
4569,16721579,677,3834332,2014-06-04 17:20:48,2014-06-06 16:36:16,closed,Add explicit returns,"CoffeeScript's implicit returns can cause some minor bloat in the
minified output. Add explicit ""return"" to all functions.
",4,7,"['type: feature', 'reso: working as intended']"
4570,16633348,669,3834332,2014-06-03 03:07:35,2014-07-03 14:53:15,closed,multirange,"inital testing shows all glyphs, tools working

should be able to pass extra_x_ranges, and extra_y_ranges to plot
then configure glyphs and guides with x_range_name and y_range_name
",1,3,"['type: feature', 'status: superseded']"
4571,16617701,668,3834332,2014-06-02 19:32:30,2014-08-15 20:32:22,closed,Image RGBA downsample,"This is still a WIP. I am fairly certain that the downsampling is working properly—[here is](http://nbviewer.ipython.org/urls/gist.githubusercontent.com/kdodia/47f4d9f829320fddbdac/raw/6ef780afb6f12ef16f5e7eb4b4a2e80ea0fbdafe/downsampling_rgba_poc.ipynb) a quick notebook that demonstrates the behavior—but I cannot identify the bug that prevents proper rendering.

It's probably something really simple too.

To test:
`./bokeh-server -D remotedata`
and then
`python examples/plotting/server/remote_image_rgba.py`
",8,1,"['type: feature', 'reso: working as intended', 'status: declined']"
4572,16560868,667,3834332,2014-05-30 23:55:55,2014-06-06 17:12:51,closed,Made report_issue function py3 compatible and docs...,"The title say it all... py3 compat done, but I want to add a some docs in our site about how to use it. What do you think is the best section to add it. I am not sure if it fits in any of our current sections, we can make a new one about Reporting... thoughts?
",6,3,"['type: feature', 'status: accepted']"
4573,16498677,664,3834332,2014-05-29 19:24:57,2014-06-03 00:30:31,closed,"[WIP] Added warning, if un-necessary keyword arguments are supplied","The plotting methods should return a warning if any extra(not relevant) keyword argument is supplied alongwith the call to that method. For this, the list of all relevant keyword args are required for each plotting function.
",2,1,['status: WIP']
4574,16490121,663,3834332,2014-05-29 16:41:21,2014-05-30 15:12:53,closed,Changed clean to delete the /build/lib directory,"Attempt to close issue #662 by deleting the build/lib/bokeh directory when 'setup.py clean' is used.
",9,1,['status: ready']
4575,16310882,656,3834332,2014-05-25 02:39:48,2014-07-03 14:50:40,closed, Example for referencing links using the hover_tool,"OK, I know this isn't ready to go by a mile - that's why didn't make it a PR to start with.  To really do this, I would lean towards creating a new tool.  Let's call it pointer_tool.  It would have the current hover capability in it, plus a few others items:
- User can specify full html for tool-tip box (maybe also allow a graph to be in there?)
- Click/double-click can open a new window, or just link to a new page
- Click/double-click can stuff a value into user clipboard.

The code in this PR relies on the 'magic' field name 'link' to be in the datasource.   It's probably better to do what was done in the hover tool and have the link value be pulled in indirectly.  Then, then interface would look something like:

```
pointer = [t for t in curplot().tools if isinstance(t, PointerTool)][0]
pointer.click_action = ""link"" 
pointer.click_data = ""@url""  # data value depends on action
pointer.double_click_action = ""clipboard""
pointer.double_click_data = ""@directory""
```

Actions:
- link  (data = url and may be $@value_from_datasource)
- newwindow (same as link, but opens in a new window).
- tooltip (data = same as current hover tooltip - data in tabular form)
- tooltip_html (data = a reference to a datasource item which is assumed to be raw html)
- clipboard (data = reference to datasource to be stuffed into clipboard).

Feel free to tell me this is a bad way to go.

Question: how do y'all test this coffee/javascript stuff

G
",13,1,['status: superseded']
4576,16308311,655,3834332,2014-05-24 19:27:42,2014-06-03 13:43:24,closed,Trying to fix issue-586,,9,1,['status: WIP']
4577,16308240,654,3834332,2014-05-24 19:17:16,2014-06-04 23:06:53,closed,Fixes issue 592,,23,12,['status: accepted']
4578,16292969,652,3834332,2014-05-23 20:24:41,2014-06-13 19:15:26,closed,Added embed example.,"This is WIP, but the main idea is to show how to use the new embed API to do nice things...
Here, I wrote a simple Flask app that renders a Reveal.js slidedeck showcasing Bokeh plots :wink:
There are a lot of things to make better, but I want an early feedback, jeje...
Just look at it and let me know what do you think... and how to improve it.
",7,8,['status: accepted']
4579,16280022,651,3834332,2014-05-23 15:39:16,2014-05-23 20:32:28,closed,Docs refresh,"especially for embedding
",1,4,"['tag: component: docs', 'status: accepted']"
4580,16279944,650,3834332,2014-05-23 15:37:47,2014-05-23 16:07:35,closed,"better logging, docs, and error checkout for autoload_static",,1,2,"['type: feature', 'status: accepted']"
4581,16252075,645,3834332,2014-05-23 00:31:17,2014-05-23 18:38:24,closed,compute self._models on the fly,"only updating when `self.add` is called causes code like this to fail:

```
output_file('/tmp/foo.html')
hold()
figure(background_fill=""#222222"")
line([1,2], [1,2])
plot = curplot()
plot.x_range = Range1d(start=0, end=10)
plot.y_range = Range1d(start=0, end=10)
show()
```

Because the ranges do not get added to `self._models`
",6,1,"['type: bug', 'status: WIP']"
4582,16236327,642,3834332,2014-05-22 18:36:22,2014-06-04 22:26:29,closed,Continuous Integration on Bokeh,,4,16,"['type: feature', 'status: accepted']"
4583,16201210,641,3834332,2014-05-22 04:40:43,2014-05-27 15:26:44,closed,bokeh.report_bug function,"I added a new function to open issue programmatically... 
This is a still WIP, I want to add some other things to help us when somebody needs to provide info in a bug scenario...
",18,8,['status: accepted']
4584,16180552,639,3834332,2014-05-21 18:46:08,2014-05-21 19:17:37,closed,Fix small typo in the tutorial,,1,1,['tag: component: docs']
4585,16142342,637,3834332,2014-05-21 01:59:21,2014-05-31 01:48:48,closed,Added pandas plotting basic support to BokehRenderer,"This PR lets you plot pandas series and dataframes using the BokehRenderer (mpl.py).
It is only supporting basic stuff now, but we can add more things later...
",1,8,['status: ready']
4586,16083823,636,3834332,2014-05-20 00:22:52,2014-05-23 21:17:11,closed,Add support for drawing gears,"This adds support for drawing external/internal gears. It's based on http://www.arc.id.au/GearDrawing.html. To make drawings accurate, canvas must be a rectangle (due to known issues), so there is no title, no axes, etc. I tried to use `canvas_width` and `canvas_height`, but that doesn't work at all. Together with PR #630 this could be made into animations.
",7,3,['status: accepted']
4587,16013934,633,3834332,2014-05-16 23:33:06,2014-05-16 23:50:03,closed,fixed TestViewable by preserving model_class_reverse_map and restoring i...,"...t on test teardown

closes #604 
",0,1,[]
4588,15990858,630,3834332,2014-05-16 14:49:59,2014-07-21 18:44:02,closed,Add support for creating JavaScript functions/callbacks/code in Python,"This is really naive, preliminary approach, but allowed to port `server/animated` and run it without server (see `glyphs/roll`). This will be used later by widgets, but has value on its own. Later it should be possible to use this with hover, click, etc. events, e.g. `glyph.on_enter = Function(self, Set(self.color, self.color.lighten(0.1)))` (that's very rough pseudo-code).
",6,4,"['type: feature', 'status: WIP', 'status: declined']"
4589,15929351,629,3834332,2014-05-15 11:51:16,2014-05-23 20:12:12,closed,Add glyphs/gauges example (speedometer),"The first commit is probably wrong, but I couldn't figure out anything better to make `Ray.length` work with `data` units. In general, `length_units` are completely ignored.
",8,2,['status: accepted']
4590,15888613,627,3834332,2014-05-14 16:32:30,2014-06-06 20:15:26,closed,loading a single object from the server,"currently untested - will check this out later today
",8,4,['status: ready']
4591,15879626,625,3834332,2014-05-14 14:03:36,2014-06-03 14:18:48,closed,"Add glyphs/donut example with ""web browser market share"" plot","This also adds tools for color management.

TODO:
- [x] Add labels.
",5,8,['status: accepted']
4592,15822313,619,3834332,2014-05-13 13:43:37,2014-05-14 18:53:44,closed,Fix nbviewer issue.,"To fix the non-plots issues in nbviewer and nbconvert, I delayed the load of plot_js until the html is ready (the browser has loaded the HTML elements into the DOM). It works with nbconvert exported bokeh notebooks and does not seem to affect files or server plots.

This PR would close #559.
",5,2,['status: accepted']
4593,15766804,618,3834332,2014-05-12 13:31:55,2014-05-12 13:59:31,closed,"broken urls becuase we were setting docid, instead of doc in the json",,2,1,['status: accepted']
4594,15744246,615,3834332,2014-05-11 16:51:25,2014-06-27 14:27:05,closed,Feature/crossfilter,"depends on #605

This is the start of the crossfilter widget.  

On the left, you have a  list of all the columns, and some information about them (for continuous data, quantiles, for discrete factor data, some indication of the number of unique values).
You can drag them into a filter area, where you can choose how you want to filter a data (so for discrete factors, you might have a select box where you can decide which values you want to look at, for continuous factors, you would have a histogram of the data, and you could select ranges you want to filter by). 

After that filtering, you would have a UI for constructing plots - deciding which columns to map to X and Y, and what type of glyph to use (bar/line/scatter with marks, etc...)  You would also be able to choose how to facet (so facetting is like making a grid plot, so if for example with the cars mpg dataset, I might facet by make and year, in which case I would get a grid plot, where the columsn would be the different manufacturers (toyota/chevy/etc..) and the rows are years (plots for 77,78,79....etc..)
",5,19,"['type: feature', 'status: WIP']"
4595,15742071,613,3834332,2014-05-11 11:52:41,2014-05-11 14:05:54,closed,Fix static embedding (and gallery build),"Static embedding is not working correctly, affecting the `build_gallery.py` script
- [x] Fix static embeding
- [x] Reimplement `create_html_snippet` with new embed API
- [x] Fix `build_gallery.py` minimally
- [x] rework  `build_gallery.py` to use new embed API directly
",1,8,"['type: bug', 'status: ready']"
4596,15736412,612,3834332,2014-05-10 19:37:39,2014-05-10 21:48:37,closed,better warnings,"Certainly when there is no current plot, but probably there are other places to make better too. 
",1,1,[]
4597,15725177,609,3834332,2014-05-09 22:17:18,2014-05-23 20:34:39,closed,Feature/url prefix,,3,8,['status: accepted']
4598,15723357,608,3834332,2014-05-09 21:31:01,2014-05-09 21:51:40,closed,clean up __init__.py,"- move test and print_version to utils.py
- move load_notebook to utils.py
- move Session to utils.py
",1,1,['status: declined']
4599,15704486,606,3834332,2014-05-09 14:44:50,2014-05-15 20:49:23,closed,mplsubplots fix and integration of show_bokeh into mpl.py,"OK, this PR fixes the non-working subplots issue... In fact, it was a very problematic issue because some limitations in the mplexporter but, mainly in the matplotlib lib. The main problem comes from the fact you can not instanciate a AxisSubplot independently and then load it to a fig (or there is way, but hacky, faulty and prone to be change it soon because you have use use matplotlib internal functions). So, I solve the issue with our own ""hack"" and because it is ours, we can control it better. 

I essentially pass the fig (containing several subplots) to the `BokehRenderer` and add a ""marker"" glyph after each subplot (because of the validation step, it has to be a ""validated object""... so I use a glyph filled with a dummy datasource to make it identifiable later), which let me, in turn, split the plot.renderers list accordingly to ""that"" marker and ""rebuild"" all the available subplots in the proper grid conformation (I know... it is hacky... but I have to confess I enjoy a lot working on this path... anyway, obviously it is widely open to suggestion).

This PR also integrate `show_bokeh` into mpl.py and rename it to `to_bokeh`, so you can easily call it using `mpl.to_bokeh()` which makes more sense and it is nicer than `show_bokeh`.
Finally some other minor fixes in the import ordering and comments.
We can add more thing later, fixes some others, but I want to keep this short... and improve it iteratively...

Thanks. 
",5,6,['status: accepted']
4600,15678581,605,3834332,2014-05-08 22:51:11,2014-06-06 19:54:17,closed,Feature/robust reloader,"@damianavila please review?
",17,6,['status: ready']
4601,15420839,590,3834332,2014-05-02 06:29:26,2014-05-02 06:42:53,closed,Small typo,"Just a small typo I noticed. This project is awesome, and you guys rock!
",2,1,['status: superseded']
4602,15301029,588,3834332,2014-04-29 17:20:33,2014-06-08 06:58:46,closed,"Bootstrap 2 to 3, vendor cleanup, LESS refactoring","### Here is the summary of changes:
- Compile only `bokeh.less` which in turn compiles all its ""imports"" such as `continuum.less`, `flexbox.less`, `widgets.less`. Results in cleaner compiled output
- Updated `modal.js` vendor path in the new Bootstrap 3 folder
- Removed `concat` task from Grunt. All css files are compiled and concatenated into bokeh.css via LESS compiler
- Removed old bootstrap-3.1.1 and bootstrap-2.0.4 folder, it's now simply bootstrap (which is v3.1.1)
- Bokeh toolbar class has been changed for consistency from:

```
<div class='button_bar btn-group'/>
```

to

```
<div class='bk-toolbar'/>
```
- Remove blue ""focus"" outline around buttons when clicking on them in Google Chrome
",26,5,['status: ready']
4603,15297005,587,3834332,2014-04-29 16:05:39,2014-05-27 17:24:15,closed,Limit pantool,,0,35,[]
4604,15236555,581,3834332,2014-04-28 13:30:16,2014-05-09 02:08:59,closed,mpl refactor and subsequent mplexporter integration.,"This PR supersede the initial work in #558 y the initial refactor branch in #580.
Up to now, the exporter works with all the previous mpl, seaborn, ang ggplot examples, except for the subplots plot (working on it yet).

Our new `BokehRenderer` class supported by mplexporter is a sort of Frankenstein, because the mplexporter support thing we don't, and we support things that mplexporter does not... so, I am using the best of both world whereas we evolved to a more unified solution.

Still work in progress, because I have to use more mplexporter features, but very near to be completed, at least in a first implementation. 
",2,35,['status: accepted']
4605,15207354,580,3834332,2014-04-26 23:32:45,2014-04-28 13:33:13,closed,mpl refactor,"This is a full refactor of our mpl support to help me add the mplexporter from Jake.
`axes2plot` is now more compatible with the current generations of plots.
I added a `mpl_helper.py` to throw all the helper functionalities.
I also refactored the functions generating the axes, grids, lines, markers and collections, splitting them in functions which generates the glyphs and objects, and other functions to setup the properties for each one of them.
Finally, I fixed some bugs, corrected and tested all the examples (mpl, seaborn and ggplot).
The work with the Jake's mplexporter will be pushed in another PR based in this one...

Good weekend!
",2,25,['status: superseded']
4606,15192463,579,3834332,2014-04-25 21:41:13,2014-04-25 21:48:01,closed,Session refactor hugo,"@bryevdv 
",3,2,[]
4607,15173597,577,3834332,2014-04-25 14:54:47,2014-05-04 15:01:45,closed,Expose DatetimeTickFormatter.formats in Python API and add an example,"This fixes https://github.com/ContinuumIO/bokeh/issues/575.
",2,5,"['type: feature', 'status: accepted']"
4608,15113779,569,3834332,2014-04-24 11:18:58,2014-05-04 15:01:06,closed,Scale and anchor ImageURL and add an example,"Now you can specify `w` and `h` for width and height. If not provided, image size will be used (the original behavior). Also you can specify `anchor` to override default top-left positioning. See the example for details. `anchor` possibly should be called `position`, at least this is what `distance_vector()` uses, and merged with `distance_vector()`, so that units are managed properly, but the code there didn't encourage me to do this right now.

This is related to https://github.com/ContinuumIO/bokeh/issues/566.
",3,5,['status: accepted']
4609,15060697,564,3834332,2014-04-23 11:27:22,2014-04-23 18:40:31,closed,Use types to compute value of has_ref attribute,"Previously you had to write:

``` python
instance_prop = Instance(SomePlotObject, has_ref=True)
```

Now just write:

``` python
instance_prop = Instance(SomePlotObject)
```

`has_ref` is now a attribute on `Property` and computed based on properties' type, which boils down to whether the type has an `Instance` or not. It is possible this will give false positives (embedded value with no refs in properties, which, I think, doesn't currently happen), but this doesn't influence correctness and shouldn't affect speed by any measurable value.

I wanted this to be a bigger PR that also fixes serialization/deserialization of embedded objects, so that we could remove special case `vm_serialize` and `vm_props`, and `finalize`, etc., and in general cleanup this area, because serialization and deserialization aren't symmetric right now. However, I will submit another one when this is merged.
",4,2,"['type: feature', 'status: accepted']"
4610,15030593,562,3834332,2014-04-22 19:16:11,2014-05-09 16:10:06,closed,Session refactor and embedding work,"This is extreme WIP. 
",13,102,['status: accepted']
4611,14996995,558,3834332,2014-04-22 05:05:41,2014-04-28 13:31:46,closed,mplexporter support,"This is just a very preliminary WIP PR, with some basic matplotlib exportation support using the Jake's mplexporter library.
I am essentially opening this PR to keep a public track about the things I/we want to add (or not) and to discuss some other things I am finding whereas I am using the lib...
- [x] Support figure width and height
- [x] Basic line support.
- [ ] Complete line support.
- [x] Line plot example
- [x] Output file
- [ ] Output notebook
- [ ] Output server
- [x] This is not the end of the list :wink:

So, nothing to review yet, but you can take a look if you are interested, and make suggestions...
",6,2,['status: superseded']
4612,14979941,557,3834332,2014-04-21 19:28:18,2014-05-07 05:14:25,closed,Add env variable to setup test -D at the top level directory,"env variable: `BOKEH_DEFAULT_NO_DEV`

Now `nosetests` run all the test locally as Travis does...

Fixes #541
",9,4,['status: accepted']
4613,14975270,555,3834332,2014-04-21 17:43:50,2014-04-21 20:25:16,closed,"Use shelve for default, add some config printouts","This addresses #542 
",2,3,"['type: feature', 'status: accepted']"
4614,14969543,553,3834332,2014-04-21 15:06:25,2014-04-21 17:22:47,closed,"Expose, fix, rename Image url","This is a PR for #551 

Image below is for 1000 image URLs with the following code:

```
from bokeh.plotting import *
output_file(""foo.html"")
image_url(url=[""http://bokeh.pydata.org/_static/bokeh-transparent.png""]*1000, 
          x=range(1000),y=range(1000), angle=0 )
show()
```

The resulting file sized is 766k. This interface is clunky but I think that should be improved in another PR. 

![screen shot 2014-04-21 at 10 04 16 am](https://cloud.githubusercontent.com/assets/1078448/2755304/40c19ee0-c966-11e3-8f79-45eb4b3b6864.png)
",4,8,"['type: bug', 'status: accepted']"
4615,14969241,552,3834332,2014-04-21 14:57:25,2014-04-21 16:00:51,closed,Frame ui,"Added the working for displaying the window by the side of the plot for getting the datasource information.
",2,7,['status: ready']
4616,14955899,550,3834332,2014-04-21 00:33:31,2014-05-28 15:41:07,closed,Widgets ,"This adds `HandsonTable`, `PivotTable` and `DatePicker` (also `Tabs`, but that's just a stub right now) widgets, `Date` property, `app/downloads`, `glyphs/widget_server.py` and `glyphs/data_tables_server.py` examples. There are improvements to `ObjectExplorer`. ~~This PR merges in `sbt` branch (just for my convenience)~~. This PR is ~~very~~, very, very (or even more) WIP. No point in reviewing right now, but you try running the examples (`app/downloads` requires data; I will send an E-mail tomorrow how to obtain it). 

There are lots of issues with this PR. `HandsonTable` has known issues with rendering, so you may need to resize the window to make it render better, but at least it shows up, which wasn't the case at the beggining. ~~I had to `from .widgetobjects import *` in `bokeh.objects` to help `Viewable` discover classes (first import counts and without this hack you will get missing models errors)~~. I had to include, hopefully temporarily, bootstrap.css to make `PivotTable` render (almost) properly. I tried to use `reference`-less imports, but without success. `glyphs/widget_server.py` allows data editing through `HandsonTable` and line glyph is nicely updated, but not `DataRange1d`, which doesn't follow data modifications.
",23,129,['status: ready']
4617,14934600,545,3834332,2014-04-18 21:24:19,2014-04-21 17:58:14,closed,Remove old ggplot support,"OK, and because PR are free, and a good point to start a discussion, this is my proposal:
- Remove old ggplot support.

Reasoning:
- We have invested (we re investing and we plan to invest) time in developing mpl support for Bokeh... and mpl support gives us very quickly (and with little efforts) to ggplot support (and seaborn, and whatever library uses mpl under the ground)... so, it is makes no sense to me to have our own ""implementation"" of ggplot inside Bokeh if we are providing at the same time with another channel to do that. Also this ""own"" ggplot support is not being developed in the last months and I do not think we are going to spend resources on it in the future (OK, maybe I am missing some things... if this is the case, let me know...).

Implementation:
Just remove all the code :wink:, I mean:
- chaco_gg folder
- ggplot-related files in attic
- functional.py, ggploy.py and pandas_plot_data.py
- test/chaco_gg
- test/web
  and a minor fix to `setup.py`. I think I don't missed any related stuff, but if I do, let me know...

Test are passing for me... but maybe I am breaking something not tested...

Finally, I repeat myself: maybe there is something useful you want to use inside some of these files... or maybe I am missing something big here... please, let me know if this is the case (PRs are free, so we can close it if anyone think this is not appropriate).

OK, just waiting for feedback... thanks!
",3,2,['status: ready']
4618,14928346,544,3834332,2014-04-18 18:30:46,2014-04-18 18:38:03,closed,"- modified server unit tests to use in memory backend, switchable to use...","addresses #542 
",4,1,[]
4619,14873422,536,3834332,2014-04-17 12:56:40,2014-04-18 23:29:10,closed,Testing on Travis CI (part 2),"Improved readability of server logs from `examples/test` (skip `/static` with 200/304 codes), include mpl and ggplot examples, support for Python 3.3, etc.
",11,18,['status: accepted']
4620,14854897,534,3834332,2014-04-17 00:45:43,2014-04-18 16:46:51,closed,Updated package.json and bower.json,"### Updated bower.json
- updated package versions
- bumped bokeh.js to to 0.4.4
- changed dependencies to devDependencies
### Updated package.json
- use the default ^ instead of ~ for version numbers
- updated package versions
- bumped bokehjs to 0.4.4
- changed dependencies to devDependencies for more semantic usage
### Build Status badge
- Build passing / failing badge in bokeh/README.md
### Revised README
### Moved bower.json to `docs`
",12,9,['type: feature']
4621,14852371,533,3834332,2014-04-16 23:19:54,2014-04-21 22:19:34,closed,Example plot showing daylight hours,"Inspired by http://www.jfree.org/jfreechart/images/DifferenceChartDemo2.png.
",20,11,"['type: feature', 'status: accepted']"
4622,14826517,530,3834332,2014-04-16 14:45:23,2014-04-16 15:14:51,closed,Release 0.4.3,,0,24,['status: accepted']
4623,14784640,526,3834332,2014-04-15 18:17:55,2014-04-15 18:39:40,closed,Extended the timeout to avoid Travis failures.,"This try to fix #522... it is 5 seconds enough? I think so...
",3,1,[]
4624,14733978,523,3834332,2014-04-14 18:49:19,2014-05-02 00:11:55,closed,Embed example and added some things to the API,"A continuation from #506...
pinging @bryevdv 
",1,21,[]
4625,14634548,518,3834332,2014-04-11 00:57:33,2014-04-11 23:47:45,closed,--build_js instead of --deploy,"For `setup.py`, we will have `--build_js` instead of `--deploy` and --build_js`will be also present for the`install` option.
Added deprecation warnings too...
",5,5,['status: accepted']
4626,14571168,514,3834332,2014-04-09 19:54:25,2014-04-10 01:23:36,closed,Fix changes script to properly ignore unwanted issues (incorporates Fixed chages to paginate API call. #513).,"The script will now properly display only unlabeled issues, or issues with the labels bug, docs, enhancement, or tests. Also made some PEP8 related style changes.

Take a look at the CHANGEKIND_NAME dict, setting the value of any of the items in there will enable that kind of issue in the changelog, None is used to disable that kind of issue. The order the items appear in the dict determine the order they will appear in the change log. Unlabeled items are indicated by the value 'unlabeled', currently sorted to the top of the changelog.
",2,2,"['type: feature', 'status: accepted']"
4627,14559610,513,3834332,2014-04-09 16:03:41,2014-04-09 20:00:44,closed,Fixed chages to paginate API call.,"Quick fix to get a complete list of issue... we need pagination to avoid a partial list.
BTW, we still need to label the issues properly...
",7,1,['status: superseded']
4628,14552641,512,3834332,2014-04-09 14:03:03,2014-04-09 14:03:57,closed,Appletdiff,,0,27,[]
4629,14533145,510,3834332,2014-04-09 02:41:56,2014-04-10 01:20:14,closed,docs refresh for upcoming release,,4,6,['status: ready']
4630,14531838,508,3834332,2014-04-09 01:29:46,2014-04-09 02:03:23,closed,add tool names for constrained pan and zoom,"And also implement constrained pan and zoom on the js side...
",1,2,"['type: feature', 'status: accepted']"
4631,14522798,506,3834332,2014-04-08 21:05:44,2014-04-14 18:47:35,closed,Embed example and added some things to the embed API,"People, this is based in the Paddy branch with current master merge in...

I have added an example under bokeh/examples/embed...
It is a super simple Flask app which loads a simple line plot.

If you test it as is... the plot using the `hostedCDN` will not be rendered because of the BackTick error in the CDN files...
But if you use the `hosted_file` (current example), instead of `hosted_CDN` pointing to local files living inside /static, it works as expected.

I have modified the API (bokeh/embed) a little bit and probably I am missing a lot of things about the design because I am trying to understand all the possibilities and the usability, and for sure there are some problems... but take a look and let me know...
",9,19,['status: superseded']
4632,14505374,505,3834332,2014-04-08 15:24:39,2014-05-27 17:24:08,closed,[WIP] Improved frame for the plot,"The header and footer is set. The tools will initially not be visible but on click the tools will be visible.  Added the border around the frame.
",14,39,['status: WIP']
4633,14481462,503,3834332,2014-04-08 02:59:43,2014-04-11 16:40:18,closed,Feature/applet,"depends on #480 

this includes select/slider/textinput.  we still need more widgets, but I think this is all we're going to get for this release
",10,47,['status: accepted']
4634,14480314,502,3834332,2014-04-08 02:00:52,2014-04-08 15:29:55,closed,Fixing py3 compat... ,"With this fixes we have no errors in a py3 env with current master...
",5,3,['status: accepted']
4635,14470983,501,3834332,2014-04-07 21:11:08,2014-04-07 22:32:09,closed,Update/tutorial,"Redo pull request
",3,2,"['tag: component: docs', 'status: accepted']"
4636,14470162,498,3834332,2014-04-07 20:56:04,2014-04-08 11:28:37,closed,Cleanup tests,,2,13,"['tag: component: tests', 'status: accepted']"
4637,14469402,497,3834332,2014-04-07 20:41:29,2014-04-07 21:07:34,closed,Update/tutorial,,0,3,['status: superseded']
4638,14431071,495,3834332,2014-04-07 02:23:52,2014-04-08 13:01:23,closed,Basic xkcd support for mpl.,"First, this PR depends on #482, so the last two commits are relevant for this feature.

Essentially I am applying xkcd style to Lines and Text... probably we can add more things later, but for now, I think is enough to be pushed. The hand-written function was taken from Jake post (with some custom parameters).

To use it, you just to pass a new argument to the `show_bokeh` function: `xkcd=True`.
I also added an example (xkcd over a ggplot example) and I pasted the resulting figure here for reference.

![xkcd](https://cloud.githubusercontent.com/assets/1640669/2627143/657dcb30-bdfb-11e3-9639-48d7683eb34d.png)

Finally, I pretend to merge it tomorrow after the merge of #482.
",4,7,"['type: feature', 'status: accepted']"
4639,14426087,493,3834332,2014-04-06 17:14:20,2014-04-11 16:46:55,closed,Feature/one object page,"@paddymul this is probably useful for your embedding stuff 

also it can be used for pure iframe embedding
",1,3,['status: ready']
4640,14425022,492,3834332,2014-04-06 15:02:08,2014-04-10 01:47:37,closed,server upload example,,1,1,['status: accepted']
4641,14415323,489,3834332,2014-04-05 13:55:22,2014-04-05 17:43:52,closed,Add missing type parameter declaration in ServerDataSource (fixes #448),,2,1,"['type: bug', 'status: accepted']"
4642,14403771,485,3834332,2014-04-04 21:04:17,2014-04-05 21:07:43,closed,Background and grid support in mpl.,"The changes are simple (it takes me some time to deal with the matplotlib API - not working right for grid lines, a story for another day :laughing:)... but the results are much better with these changes.
As examples I will add two pics I pasted on FD .

![grid](https://cloud.githubusercontent.com/assets/1640669/2620224/f7fedef8-bc3a-11e3-894b-a61332fb58c0.png)

![violin](https://cloud.githubusercontent.com/assets/1640669/2620284/cd346d7c-bc3b-11e3-8f5f-04aec5aa2c9f.png)
",1,3,"['type: feature', 'status: accepted']"
4643,14392261,484,3834332,2014-04-04 16:49:35,2014-04-07 13:59:53,closed,Feature/shiny,"still WIP
",4,14,['status: superseded']
4644,14351588,483,3834332,2014-04-03 19:57:31,2014-04-28 19:56:01,closed,Experimental bokehjs build system using sbt (scala),"To start you need JRE 1.6+. Issue `./sbt`. This can take a while on the first run, because this script will fetch sbt (http://www.scala-sbt.org/) then sbt will fetch build dependencies (JavaScript is already in `project/src/main/resources`). In sbt console issue `build` to compile coffeescript, less and eco sources, and copy vendor files to build. You can also issue `deploy` to combine individual files using requirejs and then minify using closure compiler.

This uses Rhino (JavaScript interpreter for JVM), so running requirejs is much slower than in node, but then compilation is done by closure compiler which, in turn, is very fast. In general I work with individual files, so I don't see this as a big issue, because compilation of individual files is quite fast and there is incremental compilation, so we don't have to recompile everything. So, if you issue `build` twice or more it will show you that there are no files to compile. Currently build is linear but compiling files in parallel is possible and will be allowed in future. 

Every command can be prefixed with `~`, e.g. `~compile`. This allows to watch files for changes and run specified command whenever there are any changes. Press enter to quit watch. This obviously uses incremental compilation as well.

Note that this is experimental, ~~so there are know issues I will be fixing as time permits~~ but is sufficiently usable for daily work.
",8,19,"['type: feature', 'status: accepted']"
4645,14338335,482,3834332,2014-04-03 15:39:46,2014-04-07 19:18:50,closed,Added ggplot examples.,"I added three ggplot-based examples we can actually render with mpl support.

The plots are the following:

![density](https://cloud.githubusercontent.com/assets/1640669/2623991/9e2ce2f2-bd17-11e3-9946-b063c65a4988.png)

![line](https://cloud.githubusercontent.com/assets/1640669/2623992/a228e7e8-bd17-11e3-8115-10ee5fe11de7.png)

![step](https://cloud.githubusercontent.com/assets/1640669/2623993/a92c6740-bd17-11e3-9415-ef8f3bc7ebac.png)

I also reorganized the mpl examples into mpl, ggplot and seaborn folders.
",7,10,"['type: feature', 'status: accepted']"
4646,14276110,481,3834332,2014-04-02 12:33:49,2014-04-04 21:19:41,closed,Fix years formatting problem,"This PR should fix #479 
",0,3,['type: bug']
4647,14246981,480,3834332,2014-04-01 19:55:06,2014-04-09 13:59:09,closed,first plugin example,,4,5,['status: superseded']
4648,14239860,478,3834332,2014-04-01 17:35:12,2014-04-04 00:46:14,closed,Some enhancements to mpl polycollection support,"Now supporting edgecolors, linewidth, linestyle and alpha...
I have uploaded the poly mpl example to show some of those things... and it look weird, but nice...

![polynew](https://cloud.githubusercontent.com/assets/1640669/2582349/e210eec0-b9c3-11e3-9449-ab12ec021b46.png)
",1,1,"['type: feature', 'status: accepted']"
4649,14239777,477,3834332,2014-04-01 17:33:17,2014-04-07 20:08:07,closed,Feature/new json encoder,"@bryevdv @damianavila can you review?

please ignore the remotedata_tests.py changes.. those are on master already but for some reason GH is flagging them?
",12,5,"['type: feature', 'status: accepted']"
4650,14226811,476,3834332,2014-04-01 13:33:01,2014-04-03 02:20:13,closed,Supersede: Templated setup.py.,"Supersede #436.
I think is ready to be merged. 
",0,2,['status: accepted']
4651,14133856,473,3834332,2014-03-28 22:08:45,2014-03-31 13:21:53,closed,Several py3 fixes.,"Last big PRs reintroduce some py3 incompatibilities, so I fixed all the errors except for two failing test in both environments (Issue #472). I also update the short files accordingly with PEP8 (reasonable, not strict way).
",2,3,['status: accepted']
4652,14080243,471,3834332,2014-03-27 20:25:03,2014-03-29 10:27:51,closed,"Removing old, non-used tutorial folder and its content.","It makes non sense to have this folder because our real new tutorial lives inside the sphinx doc... 
",1,1,['tag: component: docs']
4653,14060681,468,3834332,2014-03-27 14:32:23,2014-04-06 18:45:21,closed,instance validation errors out on Any objects,"@mattpap i think this is necessary?  I guess we would need something similar to support Either as well
",6,1,['status: ready']
4654,14030683,467,3834332,2014-03-26 21:29:37,2014-04-02 00:31:25,closed,Decreased the number of x points and keeping the distribution looklike.,"This PR just decreased the number of x points in histogram.py to avoid excessive data load whereas we keep the shape of the distributions.
My local benchmarks give me around 2-3X improvement in the plot loading with these little changes.
",0,2,['status: accepted']
4655,14013208,465,3834332,2014-03-26 16:02:30,2014-03-27 21:39:14,closed,Fix server sessions (InMemorySession and ShelveSession),"For now I removed duplicated code from `serverbb`. Previously logic was duplicated in all three session types. Now there is one abstract class and data storage adapters for supported data stores. ~~`InMemorySession` still doesn't work~~ and ~~`ShelveSession` requires data store access management~~.
",12,4,"['type: bug', 'status: accepted']"
4656,13976393,461,3834332,2014-03-25 20:57:48,2014-04-07 17:28:50,closed,Add support for testing on Travis CI,"This is continuation of PR #290. I squashed original commits into the first one, as commits individually didn't have any special value. Python 3 support is almost there (obviously file support only). Tests do not pass, but this isn't an objective for this PR. As a side effect of this PR, I had to work around issue #445 here, so that examples work but core problem is still there, though now `undefined` values won't be passed silently around. I also moved `bokeh-server`'s code to `bokeh/server/__init__.py` (`run()` function), so one can run bokeh server with `python -c ""import bokeh.server; bokeh.server.run()""` and `bokeh-server` is basically a one-liner now. With this PR you can use `examples/test` or `nosetests examples` to test examples, or just `nosetests` to test everything (well almost, because documentation isn't tested yet).
",41,23,"['type: feature', 'tag: component: tests', 'status: accepted']"
4657,13966631,460,3834332,2014-03-25 17:52:26,2014-04-02 00:38:57,closed,adding nan/inf check using numpy so we can be fast when we can,"we can probably do the ""NaN"", ""Infinity"", ""-Infinity"" conversion with numpy as well, but we would need to do some dtype conversions first
",6,2,"['type: feature', 'status: superseded']"
4658,13966381,459,3834332,2014-03-25 17:48:06,2014-04-01 16:11:28,closed,Feature/bigdata image,,2,2,"['type: feature', 'status: accepted']"
4659,13965647,458,3834332,2014-03-25 17:35:38,2014-03-26 00:28:33,closed,Fixed missing datetime import.,"Just fixing a missing import.
",1,1,['type: bug']
4660,13954301,456,3834332,2014-03-25 14:24:08,2014-03-27 20:19:01,closed,Feature/bigdata lineplots,"GH mistakenly closed my PR when I merged another PR which had all the same commits (this is WIP)
dependent on #455 
",1,13,"['type: feature', 'status: accepted']"
4661,13953966,455,3834332,2014-03-25 14:18:25,2014-03-27 12:50:56,closed,plots should not break if there is no data loaded,"- fixing properties.coffee with some existence tests in set_vectorize
- composite_ticker returns first scale, if it can't match one

This is needed for the server data sources, our plots need to not be broken if there if the data source is empty.  
",1,3,[]
4662,13953064,454,3834332,2014-03-25 14:00:52,2014-03-25 14:24:56,closed,Fix subprocess error exception call.,"Just a simple fix... I will merge soon if anybody do it first.
",1,1,['type: bug']
4663,13868282,449,3834332,2014-03-22 13:53:07,2014-03-24 18:51:26,closed,big data lineplots WIP,"dependent on #455 
",0,1,[]
4664,13861109,448,3834332,2014-03-21 22:57:10,2014-04-05 09:57:44,closed,Second round of improvements to properties,"This adds validation to remaining properties (e.g. `Dict`, `Either`, `Color`).
",6,21,"['type: feature', 'status: accepted']"
4665,13856414,447,3834332,2014-03-21 20:52:23,2014-03-23 17:44:57,closed,"added gzip from flask_gzip, this gzips data before the flask server resp...","...onds, which is useful for larger data volumes
",1,2,"['type: feature', 'status: accepted']"
4666,13854703,446,3834332,2014-03-21 20:13:54,2014-03-24 18:51:25,closed,Feature/data directory,"this is the start of server side data sources, primarily setting up the data directory that we can point the bokeh server at, and server up hdf5 files via [array management (https://github.com/ContinuumIO/ArrayManagement)
",1,2,['type: feature']
4667,13802208,442,3834332,2014-03-20 18:05:23,2014-03-21 00:13:07,closed,Fixed mpl to incorporate changes landed with PR#427.,"This PR fixes mpl and make it compatible with current master after the land of the big properties PR.
",3,1,[]
4668,13801036,441,3834332,2014-03-20 17:42:45,2014-03-20 22:30:58,closed,Expose remaing tickers to python,"With this PR, people can create more types of customized tickers directly in python. 
",0,2,['type: feature']
4669,13790378,440,3834332,2014-03-20 14:37:43,2014-05-27 17:23:56,closed,Pan drag working on touch devices,"The files modified for this are the event_generators.coffee, plot.coffee and gmap_plot.coffee. Added the corresponding touch handler for touch devices.
",1,3,['type: feature']
4670,13789535,439,3834332,2014-03-20 14:22:14,2014-03-20 22:30:01,closed,Option to dilate pixel distances on some glyphs,"Sometimes when computing distances (for the sizes of rectangles, images, etc.) you can get floating point values. This can result in artifacts such as glyphs that do not quite abut one another that should. This `dilate` property can be set on the glyphspec, and will cause all such distances to always be rounded up before using. 

Note that this solution is not perfect, and can result in the opposite problem: sometimes the rects, etc. will have a minimal overlap. However this can still be useful, especially if there is no alpha compositing to let the overlap show up. 

This work was mostly done by @shughes-uk. 
",0,9,['type: feature']
4671,13786766,438,3834332,2014-03-20 13:22:08,2014-05-27 17:23:49,closed,Display Pinch zoom and Pinch Box Zoom button on touch devices,"The functionality of pinch zoom is yet to be added. Displaying of the Pinch Zoom and Pinch Box Zoom only on touch devices is implemented. The behaviour is currently same as the box zoom.
",0,5,['type: feature']
4672,13780797,437,3834332,2014-03-20 10:31:28,2014-05-27 17:23:41,closed,Incorporated the naming convention and validation condition changes,"Changed the variable names to snake case and also removed the redundant validation for disabling the wheel zoom and box zoom button on touch devices.
",0,6,[]
4673,13772821,436,3834332,2014-03-20 04:56:18,2014-04-01 13:34:48,closed,Templated setup.py.,"Our `setup.py` script is a mess :laughing: 
So, I just reordered and template it. And applied a little bit of PEP8, but always in a reasonable way...
Tomorrow I will do all the testing installation, but you can see how it feels now.
It is a little bit ordered and easy to understand!
Let me know what do you think...
",6,1,['status: superseded']
4674,13768004,434,3834332,2014-03-20 00:30:24,2014-03-28 19:33:28,closed,PyPy compatibility: ,"I need to test it a little more yet, just dropping here for early feedback...
Because pandas do not work on PyPy, I made pandas really optional (in master it is a dependency right now) and skipped some other test because NumPyPy does not pickle arrays yet.
Basically a lot of things seems to work, but I have to test it more deeply to know the extension of the functionality...
",8,13,"['type: feature', 'status: accepted']"
4675,13765305,433,3834332,2014-03-19 23:04:48,2014-03-20 00:10:16,closed,Use minimal try-except blocks in NumpyJSONEncoder and add a test,,4,1,[]
4676,13722486,432,3834332,2014-03-19 06:35:05,2014-03-22 14:44:47,closed,Disable unsupported buttons on touch devices,,8,7,['status: superseded']
4677,13714903,431,3834332,2014-03-18 23:55:16,2014-03-27 21:16:58,closed,Subplots support in mpl,"OK, this is a basic implementation of subplots support in mpl compat layer.
I used np arrays to setup the geometry to pass to GridPlot.

As a bonus, I have made changes into the file to fit a [template](https://gist.github.com/damianavila/9632346) I have added to the wiki, and I think it would let us arrange the code in a visually ordered way... which will saves us some time in the future. 

If you agree I would like to order all the python code in this way... maybe I can open an issue for the discussion... let me know if you want to discuss it elsewhere.
",7,7,"['type: feature', 'status: accepted']"
4678,13693779,430,3834332,2014-03-18 16:39:27,2014-03-20 01:34:21,closed,[WIP] Expose bokehjs objects as backbone objects more consistently,"Several objects (tickers, formatters, mappers) are not currently exposed outside of BokehJS, this means that they cannot easily be configured from python, for example. This PR makes most BokehJS objects available directly to other language bindings. 
",5,24,['type: feature']
4679,13616641,427,3834332,2014-03-16 21:54:02,2014-03-19 20:13:46,closed,Clean up properties and introduce type safety,"This PR will allow us to catch issues like setting `plot.width = ""800px""`, where `width` is declared as `Int` property. This is work in progress, so many things can be broken, thought tests surprisingly pass.

This PR needs:
- [ ] ~~Tests, a lot of tests.~~ EDIT: make this another issue.
- [x] Rewrite `Instance()` as `Instance(Type)`. EDIT: ~~not really feasible right now due to visibility and cyclic imports issues~~. EDIT2: actually it wasn't that hard (with a little help from `importlib`). 
- [x] Figure out how to type-check containers.
- [x] Introduce abstract base classes where needed (e.g. `Tool`).
",34,61,['type: feature']
4680,13552616,425,3834332,2014-03-14 00:17:22,2014-03-18 19:26:45,closed,"Fixed NaN issue in bokeh-server, closes #231.","OK, this takes me some time, but it seems to be solved.

I took some of the code from @paddy's pandas rest, but I modified it a little bit to make more modular and to pass `float('nan')` instead of the `None`, because if we pass `None` to the `jsonencoder`, it is translated to `null`, and `null` seems to not represent a NaN value properly, check this images, ie:
- Using `None` (`null` in json):
  ![1](https://f.cloud.github.com/assets/1640669/2416834/953d6c6e-ab0d-11e3-9b15-9236f3d56fcf.png)
- Using `float('nan')` (`'NaN'` in json):
  ![2](https://f.cloud.github.com/assets/1640669/2416839/a571df70-ab0d-11e3-9d0f-e0f69704563a.png)

This PR seems to fix the issue when you use numpy.array and pandas.series.
",17,2,['type: bug']
4681,13549303,423,3834332,2014-03-13 22:37:43,2014-03-13 22:48:20,closed,Add a test verifying solution to issue #420,"And a little benchmark:

``` python
In [1]: from bokeh.tests.test_objects import large_plot

In [2]: %time context, objects = large_plot(5000)
CPU times: user 4.9 s, sys: 352 ms, total: 5.25 s
Wall time: 5.25 s

In [3]: from bokeh.objects import recursively_traverse_plot_object

In [4]: from bokeh.session.session import Session

In [5]: %time len(recursively_traverse_plot_object(context))
CPU times: user 2.3 s, sys: 4 ms, total: 2.3 s
Wall time: 2.28 s
Out[5]: 85001

In [6]: %time len(set(Session._collect_objs([context])))
CPU times: user 532 ms, sys: 16 ms, total: 548 ms
Wall time: 481 ms
Out[6]: 85001

In [7]: len(objects)
Out[7]: 85001
```
",2,1,['tag: component: tests']
4682,13549116,422,3834332,2014-03-13 22:33:04,2014-04-14 17:23:38,closed,Embed cleanup2,,2,15,['status: superseded']
4683,13546599,421,3834332,2014-03-13 21:35:46,2014-03-13 21:43:22,closed,Update setup.py,"Why is the session module mission, I am unable to run examples from ipython notebook without the bokeh.session package in setup.py
",1,1,[]
4684,13427147,419,3834332,2014-03-11 15:46:48,2014-03-12 17:08:18,closed,Improve handling of static resources in HTMLFileSession,"This changes `js` and `css` to `resources` in `HTMLFileSession.save()` and related functions. Added 'relative-dev' and 'absolute-dev' ('inline-dev' doesn't make sense) options which allow to use `requirejs` instead of `bokeh*.{js,css}` files, so that you can develop with `grunt watch` for fast turnaround.
",12,17,['type: feature']
4685,13405816,418,3834332,2014-03-11 04:27:21,2014-03-11 13:46:30,closed,support --user in non-setuptools setup.py develop,"right now, setup.py develop ignores `--user`, and always tries to install system-wide.
",4,1,['type: feature']
4686,13398369,417,3834332,2014-03-10 22:55:16,2014-03-10 23:28:27,closed,Remove duplicated code from bokeh/session* (#416),,1,1,[]
4687,13372460,413,3834332,2014-03-10 14:02:46,2014-03-10 14:37:15,closed,Py3 compat for bokeh server with different backends,"This PR fixes the issues about py3 incompatibilities in the bokeh-server implementation (tested in my linux environment with the three backends). I keep the changes at minimum to make it work... we can probably make it more consistent, but I don't want to introduce more changes without not knowing the bokeh-server implementation in deep.
",1,2,[]
4688,13356458,412,3834332,2014-03-10 01:09:36,2014-03-10 13:47:41,closed,"Revert ""Merge pull request #408 from damianavila/fix_shelve""","This reverts commit 95642581a9b30703e75056c2b1f1fc11bd174f3a, reversing
changes made to b1023b0e0b1865f70efe9bd2c04d746356f9081b.

I found some problems with py3 compatibility in the current implementation and in master **without** this PR merged, so we need to fix the previous errors first before trying to fix this one.
",1,1,[]
4689,13351828,410,3834332,2014-03-09 16:07:10,2014-03-09 16:10:52,closed,Homogenize changelog issue capitalization and punctuation.,,0,1,[]
4690,13342786,408,3834332,2014-03-08 15:30:17,2014-03-09 21:42:45,closed,Fix shelve backend server from unicode keys.,"This PR try to fixing the #406 issue.
",5,3,[]
4691,13329227,407,3834332,2014-03-07 21:07:31,2014-03-13 15:53:36,closed,Object Explorer,"This adds `ObjectExplorer` (a view and a tool). This is currently a simple tree (using jstree jquery plugin) that displays collections, objects, attributes and values. The ultimate goal (for future PRs) is to have a qt properties viewer kind of plugin, that will allow as to manipulate object structure and see changes in real-time.  As an example see `glyphs/line.py`, which has `ObjectExplorerTool` enabled by default.

Currently packets of events (`ObjectExplorer` listens on `all` on all collections) arriving within 200 ms (configurable) trigger rendering of the tree. References are resolved and cycles cut. Refreshing the tree causes collapse of nodes, so you have to reexpand manually branches that you were exploring (this I would like to improve soon, because it's rather unhelpful to monitor changes to the tree this way). Editing isn't supported yet. There are cases where this component doesn't work very well, e.g. together with `GridPlot`, but this is mostly because of bugs in / or my misunderstanding of `Tool.View` for this special case (I will leave this for another PR) (rendering of the tool happens too many times).

I made a few partially unrelated fixes during development (clean up `.gitignore` (narrow rules), change `base` to `@base()`, add `work_dir` to `bokeh_app` (required for CDX)).
",3,22,['type: feature']
4692,13295436,404,3834332,2014-03-07 03:52:31,2014-03-07 17:35:39,closed,Added script to print exercise comment lines.,"The Bokeh website highlights comments in the tutorial which specify exercises. This script will print out all of those lines automatically so it doesn't have to be done by hand whenever a tutorial is modified.
",0,2,[]
4693,13290165,403,3834332,2014-03-07 00:11:49,2014-03-07 02:24:44,closed,Local newfigures,"@bryan is that what you had in mind?  This PR only include changes to examples in file.  If everything looks good to you, i will do cloud and server as well
",2,11,[]
4694,13289520,402,3834332,2014-03-06 23:53:38,2014-03-06 23:57:56,closed,More clear usage help for changes.py.,,0,1,[]
4695,13287650,401,3834332,2014-03-06 23:03:09,2014-03-06 23:49:11,closed,General enhancements to changes.py script.,"Fixed typo: bugfixs -> bugfixes.
Changed header label to ""Since X"" to avoid confusion.
Added option to set the new version name.
Remove docs and tests from output.
Remove duplicate issues (by title) from output.
",0,1,[]
4696,13285743,400,3834332,2014-03-06 22:19:42,2014-03-06 23:02:44,closed,General enhancements to changes.py script.,"Fixed typo: bugfixs -> bugfixes.
Changed header label to ""Since X"" to avoid confusion.
Added option to set the new version name.
",0,1,[]
4697,13277056,398,3834332,2014-03-06 19:18:37,2014-03-06 19:19:27,closed,Added script to generate changelog.,"Fixing commit author on a bad commit. My apologies.
",0,1,[]
4698,13276686,397,3834332,2014-03-06 19:10:57,2014-03-06 19:11:40,closed,Added script to generate changelog.,"Script will accept a date or tag name and show all changes occurring after that checkpoint. The output format closely mirrors the current CHANGELOG format.
",0,1,[]
4699,13262838,396,3834332,2014-03-06 14:28:40,2014-03-06 18:33:18,closed,Added a little notebook to explain some ways to use the bokeh extension.,"Just what the title says...
",2,1,['type: feature']
4700,13258558,395,3834332,2014-03-06 12:34:09,2014-03-06 13:43:10,closed,Added script for load and install the extension.,"OK, @bryevdv... I think this would fit better your original idea.
The script is called when you do:

`import bokeh.bokeh_magic`

And if it is not installed in the canonical way (IPython way), it will install and load the extension ;-)
So, the users do not have to be aware of the installation...
",2,1,['type: feature']
4701,13239055,394,3834332,2014-03-05 23:34:02,2014-03-06 14:51:45,closed,Swap in histogram example,"The map_overlay link was broken with the latest update so I replaced it with a histogram example for now.

The landing page gallery on the Bokeh docs has the correct link, although it's the only example that's hosted on the [continuumio](https://github.com/ContinuumIO/bokeh) GitHub Page instead of all the other examples at bokeh.pydata.org. It would be nice to keep the source consistent.
",5,3,['tag: component: docs']
4702,13232640,392,3834332,2014-03-05 21:17:20,2014-03-05 22:02:40,closed,generalize packaging data dir,,0,4,['type: feature']
4703,13231710,389,3834332,2014-03-05 20:57:44,2014-03-05 20:59:04,closed,small typo fixes and adding olympics json file to setup.py,,0,1,['tag: component: docs']
4704,13210588,388,3834332,2014-03-05 13:39:14,2014-03-05 20:52:25,closed,Feature/unredis,"provide in-memory and/or shelve backends to extend bokeh-server capability easily to windows platforms
",0,7,['type: feature']
4705,13190471,387,3834332,2014-03-05 00:26:55,2014-03-05 15:06:07,closed,Various typos fixed.,,2,1,['tag: component: docs']
4706,13170746,386,3834332,2014-03-04 17:04:37,2014-03-04 19:07:31,closed,Fixed a few small typos.,,0,1,['tag: component: docs']
4707,13163264,384,3834332,2014-03-04 14:32:43,2014-03-04 14:37:31,closed,Fixed filename in QUICKSTART.md,"I'm not sure if the docs are wrong or the file's name is wrong. Here's a fix to the doc. If it's not 100% clear, the repo has a file named `examples/plotting/server/rect.py` (not `rects.py`).
",1,1,['tag: component: docs']
4708,13096349,383,3834332,2014-03-02 22:12:10,2014-03-04 02:52:10,closed,add ability to use a different ip address and port for bokeh-server,"I added options `--ip` and `--bokeh-port` to bokeh-server. This is useful if you are working over ssh and need to view the plots on a different computer.

For instance,
`bokeh-server --ip 0.0.0.0 --bokeh-port 7000`

serves plots at:
http://name-of-my-server:7000/bokeh/
",2,3,['type: feature']
4709,13013571,381,3834332,2014-02-27 17:32:10,2014-02-28 19:54:17,closed,Deleted reference to sys.real_path in setup.py,"Also added comment about the PR solving the problem upstream.

It pretends to fix the issue reopened at #378
",1,1,['type: bug']
4710,12853049,379,3834332,2014-02-24 13:24:04,2014-02-26 23:01:57,closed,Adding a missing getsitepackage function to install in dev mode,"You can't install Bokeh in a virtualenv because the lack of getsitepackages()
This is an open bug at venv: https://github.com/pypa/virtualenv/issues/355
And pretend to offer a workaround to fix our issue until it is fixed upstream (venv): https://github.com/ContinuumIO/bokeh/issues/378
",2,3,['type: bug']
4711,12832420,377,3834332,2014-02-23 14:37:39,2014-02-23 16:06:22,closed,"np not imported, zeros_like is","Small bug in example. Numpy was not imported as np, zeros_like is. 
",1,1,['tag: component: docs']
4712,12832013,376,3834332,2014-02-23 13:31:28,2014-03-20 03:53:17,closed,Distance dilate for rects,"This with regards to https://github.com/ContinuumIO/bokeh/issues/374

It solves the problem and is toggleable via a flag but I found It impossible to add a javascript default property and had to access it via glyphspec, so it only works for python, standalone bokehJS will just be broken. Just needs the property fixing in JS
",2,6,[]
4713,12831984,375,3834332,2014-02-23 13:26:34,2014-02-23 13:29:07,closed,Smalll PlotObject Test,"More plotobject testing
",0,2,['tag: component: tests']
4714,12723448,371,3834332,2014-02-19 22:57:36,2014-03-05 14:49:52,closed,First basic implementation of PolyCollection.,"This is a WIP PR (not ready to merge yet), but the basic functionality is working...
I will add more things here the following days.
",6,5,['type: feature']
4715,12635225,368,3834332,2014-02-18 02:29:17,2014-02-18 04:16:24,closed,Offset Line Collection example,"Just another example...
",1,2,['type: feature']
4716,12634020,367,3834332,2014-02-18 01:23:32,2014-02-18 04:16:15,closed,Added line collection dashed example and the linestyle support.,"Just a new example of line collection, but with dashed line styles, so I needed to develop the support for linestyles... 
",1,2,['type: feature']
4717,12629513,365,3834332,2014-02-17 22:08:15,2014-02-17 22:10:52,closed,removing setuptools,,0,1,['type: feature']
4718,12620415,362,3834332,2014-02-17 17:15:56,2014-02-17 17:17:03,closed,"Change Name=""..."" to title=""..."" in plotting/file/hover.py",,0,1,['type: bug']
4719,12593112,358,3834332,2014-02-16 17:10:21,2014-02-17 14:32:02,closed,hover tool functionality,,1,24,['type: feature']
4720,12569453,357,3834332,2014-02-14 19:51:16,2014-02-17 14:51:18,closed,Add IPython notebook example with a random walk,"This example is an IPython notebook showing a randow walk. I think it's important to show how realtime data can be plot using Bokeh.

http://en.wikipedia.org/wiki/Random_walk
",2,1,['tag: component: docs']
4721,12568258,356,3834332,2014-02-14 19:21:45,2014-02-14 19:27:01,closed,Added little explanation about running the test suite.,"Closes #347.
",0,2,['tag: component: docs']
4722,12567649,355,3834332,2014-02-14 19:06:30,2014-02-14 19:06:54,closed,Note about dependencies to install PyAudio successfully in debian-based systems.,"Closes #350.
",0,1,['tag: component: docs']
4723,12538153,353,3834332,2014-02-14 00:58:00,2014-03-05 20:34:34,closed,A simple extension to activate interactive support in the IPython notebook,"Forget about importing and running `output_notebook`, just call bokeh_magic extension: `%bokeh`.
The docstring explains how to install it and load it.
",13,28,['type: feature']
4724,12519932,352,3834332,2014-02-13 17:31:14,2014-02-17 20:05:49,closed,[WIP] ListCollection mpl-support ,"Hi people... This is WIP and it is not ready to merge yet.
I have some problems I would like to let you know, to help me find a way to make it work.

The proposal is add the LineCollection support as a Multiline bokeh glyph. So, I have written a `_make_lines_collection` function which mimic `_make_line` function, but using a Multiline glyph instead of a Line one.
The matplotlib LineCollection support the `get_segments` method which gives you the `ends` of each segment, so after dealing with the list provided (containing arrays with coordinates), I could build the `xs` and `ys` lists to pass to the Multiline glyph...
So, I have also written an example of LineCollection to use it as a test case... But the resulting html is not showing the figure. When I see the JSON, the data is there, but the plot is not rendered...
And I don't have any error message to understand why is not working...
Maybe my test case is flaw... or I am missing something in the implementation...
Can you take a look?

Thanks.
PS: pinging @bryevdv, who discuss this with me a little bit by email... but anyone else is invited ;-)
",8,9,['type: feature']
4725,12484290,349,3834332,2014-02-12 21:41:39,2014-02-12 21:43:44,closed,Deleted docs folder.,"Accordingly with the proposal of @bryevdv at Flowdock, and with the agreement of @pzwang, and me ;-), I have deleted the docs folder and put the docs folder content (some ggnotes) at the wiki: https://github.com/ContinuumIO/bokeh/wiki/Notes-ggplot
",1,1,['tag: component: docs']
4726,12483329,348,3834332,2014-02-12 21:19:47,2014-02-18 04:16:51,closed,Avoid pylab and use the specific imports instead.,"The pylab ""interface"" import a lot of things (too many)... and there is a lot of people (including me) trying to avoid the spread of its use. You can check a blog post about the problem of importing pylab here: http://carreau.github.io/posts/10-No-PyLab-Thanks.ipynb.html

Also, using the specific imports makes easy to integrate the matplotlib examples in bokeh mpl examples, which I will need to do to test the LineCollection support.
",0,1,['type: feature']
4727,12437255,346,3834332,2014-02-11 21:51:42,2014-03-21 20:47:22,closed,this renders the image properly without skewing sy away from data space,"@bryevdv I tested this with several offsets, seems to look correct?  I need to compute data space bounds for the downsampling stuff which is why I want to make this change
",6,1,[]
4728,12400019,344,3834332,2014-02-11 01:46:15,2014-02-11 01:46:26,closed,Change command from grunt qunit to grunt test to run the test suite.,"Closes #326.
",1,1,['type: feature']
4729,12398856,342,3834332,2014-02-11 01:00:07,2014-02-11 01:08:19,closed,Changed to grunt deploy to avoid missing minified scripts,"Closes #325.
",1,1,[]
4730,12398593,341,3834332,2014-02-11 00:49:32,2014-02-11 00:49:58,closed,Added link to bokehjs/README,"Closes #324.
",1,1,['tag: component: docs']
4731,12348723,338,3834332,2014-02-09 06:29:27,2014-02-11 02:47:32,closed,Support for categorical ranges,"Add categorical ranges, mappers, axes, and fix up interactions between categorical and non-categorical ranges in axes, etc.
",1,11,['type: feature']
4732,12338291,337,3834332,2014-02-08 02:48:44,2014-02-08 19:59:19,closed,simplify plotting module and make auto-documentable,"split functions unlikely to be used by most users to a helper module, add real docstrings for all glyph functions for autodoc to use. 
",1,13,['tag: component: docs']
4733,12336914,336,3834332,2014-02-08 01:07:26,2014-02-08 01:08:56,closed,Added redis-server to note about low level dependencies.,"Closes #320.
",0,1,['tag: component: docs']
4734,12288455,334,3834332,2014-02-06 21:42:31,2014-02-07 05:24:53,closed,add elements data and example,"Nice small set of data with a few dimensions a and a pretty example to go along.
",2,5,['tag: component: docs']
4735,12276902,333,3834332,2014-02-06 17:20:50,2014-03-21 20:49:38,closed,Feature/remotedata2,"this isn't ready for merge yet, but i wanted to open this up first
",2,14,[]
4736,12273312,332,3834332,2014-02-06 16:07:25,2014-05-27 17:24:50,closed,Column select tool,"There are two tools here.  One is the Remote Data Select Tool that works with the RemoteDataSource to lazily load columns of data from a REST endpoint.

The other is ColumnDataSelectTool which turns on and off plotting for individual columns of a ColumnDataSource
",3,33,[]
4737,12266122,330,3834332,2014-02-06 13:05:58,2014-02-06 16:16:53,closed,Fixed path to server examples.,"Closes #323.
",0,1,['tag: component: docs']
4738,12265957,329,3834332,2014-02-06 13:00:45,2014-02-11 01:34:30,closed,Update of six requirement to version 1.5.2.,"Closes #319.
",15,3,['tag: component: docs']
4739,12265813,328,3834332,2014-02-06 12:55:55,2014-02-06 16:19:08,closed,Added a note about the need of some low level dependencies.,"Closes #318.
",0,2,['tag: component: docs']
4740,12265166,327,3834332,2014-02-06 12:34:56,2014-02-06 16:15:49,closed,Added git clone command to the quickstart.md doc.,"Closes #317.
",0,1,['tag: component: docs']
4741,12184009,315,3834332,2014-02-04 16:19:51,2014-02-04 16:31:42,closed,Better fix for gevent's KeyError issue,"Previous solution fixed `./bokeh-server` but broke IPython. Now both work, but ""import bokeh.server"" in IPython will throw `KeyError`, but server code is unlikely to be used interactively. I had to remove import of `serverconfig` from `bokeh/__init__.py`, but I didn't see any use of this shortcut, so I assume this is not an issue.
",0,1,['type: feature']
4742,12159758,314,3834332,2014-02-04 00:42:23,2014-02-04 03:53:49,closed,properties aren't checking for attrs on backbone views/models,,0,1,[]
4743,12159291,313,3834332,2014-02-04 00:24:51,2014-02-04 00:27:51,closed,Better error message from subprocess.Popen() and fix KeyError issue again,,0,3,['type: feature']
4744,12146348,312,3834332,2014-02-03 19:00:15,2014-02-03 21:43:18,closed,Automatically activate pan tool on mousedown,"It's actually a little more than that. Make sure to test all combinations (button active/inactive, with/without ctrl/shift/alt, etc.) in e.g. `plotting/file/bollinger.py` (it uses most of the interesting tools).
",1,6,['type: feature']
4745,12139340,311,3834332,2014-02-03 16:13:13,2014-02-03 16:24:17,closed,Make Bootstrap's JS not interfere with IPython's notebook (#260),,1,2,[]
4746,12013738,301,3834332,2014-01-29 22:29:20,2014-01-30 05:10:11,closed,Set cursor matching active tool during dragging,,0,2,[]
4747,12009404,300,3834332,2014-01-29 20:49:14,2014-01-29 20:57:01,closed,Fix tools so that keypress doesn't trigger tool activation,,0,2,[]
4748,12002447,299,3834332,2014-01-29 18:07:38,2014-02-03 20:22:34,closed,Don't special-case ColumnDataSource in glyph.coffee,"I'm not sure why this code was there, but `data2` isn't set anywhere and after recent changes to CDX, plots don't work anymore without this ""fix"". I'm looking forward to feedback from anyone who understands this part of bokeh. If there is a reason for this code (with appropriate fixes), then I think that `==` should be replaced with appropriate implementation of `<:` (subtype) type relation.
",12,2,[]
4749,11970903,296,3834332,2014-01-28 23:17:42,2014-01-29 16:14:50,closed,Add support for color mapped and rgba images from python,,5,4,[]
4750,11970412,295,3834332,2014-01-28 23:04:46,2014-01-29 17:25:53,closed,Fix issues with require.config(),"This allows to reduce code duplication with `require.config()` (e.g. different paths everywhere) and for easier embedding in web applications.
",0,3,[]
4751,11958321,293,3834332,2014-01-28 18:22:04,2014-01-29 16:10:35,closed,More tests ,,0,5,[]
4752,11928906,292,3834332,2014-01-28 00:59:38,2014-01-28 02:20:18,closed,Fixes to make CDX work with bokeh@master,,0,2,[]
4753,11876335,291,3834332,2014-01-25 19:30:38,2014-01-28 15:20:46,closed,Better ticking for datetime data (and regular data),"As discussed in email.
## Improvements
- For datetime axes, the ticks are now ""nice"" time values; i.e., round multiples of minutes, hours, days, etc.
- For both datetime and regular axes, ticks no longer flicker as you zoom in and out.
## Remaining issues
- The tests in test/common/ticking_test.coffee are broken, as the functions they test no longer exist.  I can delete this file, or, if it's important to you, add new tests.  You'll have to remind me how to run the tests though; Paddy told me, but I forgot.
- The plumbing code that figures out which type of ticking to use -- basically everything outside of ticking.coffee -- is just the simplest hack I could think of.  I don't have a good grip on the rest of the architecture, so some advice here would be welcome.
- I feel like there's probably a better architecture than the Scale object I used (it's not exactly the same as in Chaco), but this one works.
- There is still the issue of converting Python times (in seconds) to JS times (in millis); right now I'm assuming the conversion happens in the user's Python code, which I think is what the previous code did, but which does not seem to match what the existing Python examples expect.  I'm happy to discuss this further.
- Some cases could be improved (e.g., special handling for years; maybe the exact tick choices could be better; etc.), but those changes should be straightforward.
",11,34,[]
4754,11867931,290,3834332,2014-01-25 00:13:40,2014-03-25 20:58:44,closed,WIP: Add support for testing on Travis-CI ,"TODO:
- [ ] Find free ports where needed.
- [x] Investigate `KeyError` exceptions. EDIT: I'm not sure why, but after using miniconda this error disappeared. 
- [x] Improve installation speed (maybe use Anaconda?). EDIT: Now I use miniconda and pip for dependencies that I couldn't install with conda (`mock`, `websocket`, `IPython@master`). Total time was reduced from 20 to 5~6 minutes.
- [ ] Fix examples that use hard-coded ports.
- [ ] Add Python 3 support.

For testing I set up travis for my fork of bokeh. You can see example build history here: https://travis-ci.org/mattpap/bokeh/builds.
",1,53,[]
4755,11573435,285,3834332,2014-01-16 11:04:20,2014-01-16 18:52:13,closed,Start of some tests for bokeh.protocol,"also trim unusued class in bokeh.protocol
",0,6,[]
4756,11553267,280,3834332,2014-01-15 21:09:22,2014-01-15 21:29:44,closed,Add eco task to watch list in Gruntfile.coffee (#196),,0,1,[]
4757,11515533,279,3834332,2014-01-14 23:04:20,2014-01-14 23:12:41,closed,Use [0...a.length] instead of [0..a.length-1],"Note that in CoffeScript:

```
coffee> a = []
[]
coffee> [0..a.length-1]
[ 0, -1 ]
coffee> [0...a.length]
[]
```
",1,1,[]
4758,11232627,262,3834332,2014-01-05 02:49:57,2014-01-05 04:23:59,closed,Adding link to actual webpage for tutorial information.,"The tutorial1.py directs the user to the tutorial web page, but does
not provide the specific URL.  I have added it.
",0,1,[]
4759,11224190,261,3834332,2014-01-04 00:40:25,2014-01-15 20:49:02,closed,"Improved sessions, bug fixes and headless testing of examples","This started as a simple improvement to replace `session.add(very, many, items)` with something shorter, currently `session.add(plot, recursive=True)`. To test that examples work I added `examples/test` script that uses PhantomJS to render HTML files and collect any errors. The implementation is a little naive and slow (fixed timeout) at this point and there are many caveats. I will document how to use this next week. The script saves rendered pages to `*.png` files along `*.html` files, so you can issues, e.g., `eog examples/glyphs` to visually inspect plots.

~~This PR is WIP~~, because not everything is well tested yet and there might be some changes needing discussion or better implementation (e.g. I don't like `BOKEH_BROWSER` from c63854c, but it was the simplest thing (in my view) to do to proceed with testing). 
",10,63,[]
4760,11128512,257,3834332,2013-12-29 04:30:51,2013-12-30 21:24:09,closed,Feature/selection,"From Bryan:
- using [rbush](https://github.com/mourner/rbush) for spatial indexing on selection masks
- streamlining code for rendering
- de-duplication of legend code
- refactored/simplified screen/view/data spaces - 
  - screen space, top left is origin, convention is sx/sy in the code
  - view coords, bottom left is origin, convention is vx/vy in the code
  - data space is unchanged

@bryevdv please add if I left anything out
",1,32,[]
4761,11126175,256,3834332,2013-12-28 17:53:37,2013-12-28 19:57:04,closed,More tests and a fix,"Renamed server/test to server/tests so bokeh.test() picks it up
Utils.py , **init**.py 100% tested
fixed my email in the git history
",0,35,[]
4762,11005355,255,3834332,2013-12-20 09:40:52,2014-01-29 22:08:41,closed,"make gevent optional - websockets wont' work, but that's mostly ok",,3,4,[]
4763,11004329,254,3834332,2013-12-20 08:52:32,2013-12-20 09:40:42,closed,Restored Python 3 compatibility.,,0,1,[]
4764,10922181,253,3834332,2013-12-18 03:25:49,2013-12-20 09:41:53,closed,Feature/embed issues,"@paddymul  can you give this a once over?
",0,3,[]
4765,10922153,252,3834332,2013-12-18 03:24:13,2013-12-18 07:17:11,closed,adding mpg dataset,"@bryevdv is this dataset small enough to directly include in the sample data directory? (And do i need to do something special to setup.py for it?
",1,1,[]
4766,10922105,251,3834332,2013-12-18 03:21:16,2013-12-21 13:23:01,closed,semi-fixing hold behavior for notebook,,8,3,[]
4767,10872051,250,3834332,2013-12-16 21:24:53,2013-12-16 21:25:17,closed,Bugfix/build error,,0,2,[]
4768,10833660,248,3834332,2013-12-14 22:22:50,2013-12-18 01:56:15,closed,BaseGlyph testing and refactoring test_properties,"test_gylphs now only contains tests for the glyphs and not property tests, those tests are moved to test_properties
wrote a quick test for BaseGlyph & lots of other glyphs
removed a blaze reference too
",1,12,[]
4769,10831849,247,3834332,2013-12-14 17:16:30,2013-12-17 13:54:41,closed,running the bokehserver with splitjs False and devjs True does not work.,"This is because there is an inconsistency with build/release js paths, and
what is on the server.

I think it is easier to standardize on our bokeh.js living inside build/js, or release/js

This commit
- modifies the Gruntfile to build into build/js and release/js
- modifies setup.py to look for files in that directory
- renames JSROOT to BOKEHJSROOT, since the name JSROOT is a bit misleading, as we have things like css in there
- fixes an os.path.join call which had 'static/js' as an arguemnt, since that's not platform agnostic

@bryevdv, @mattpap  what do you think?
",3,1,[]
4770,10831557,246,3834332,2013-12-14 16:24:32,2013-12-18 07:16:32,closed,"pull function is broken - it calls session.load, which doesn't exist, an...","@pzwang am I missing something obvious?  seems like this must have been broken for a while.
",1,1,[]
4771,10831404,244,3834332,2013-12-14 15:56:18,2013-12-14 16:12:09,closed,"css paths were missing ""http://""","@paddymul  please review, simple change but i want to make sure it doens't break anything else
",1,2,[]
4772,10675045,241,3834332,2013-12-10 07:06:09,2013-12-16 20:19:09,closed,Bollinger band examples,"Added some examples for creating Bollinger bands from stock chart data, using the Patch glyph. Contains file, notebook, and server versions.
",2,4,[]
4773,10599474,237,3834332,2013-12-06 16:45:36,2013-12-09 05:38:47,closed,"Fix issues #154 and #229, and a few other improvements",,0,8,[]
4774,10507085,234,3834332,2013-12-04 10:11:13,2013-12-16 17:08:44,closed,Python 3 support,,13,1,[]
4775,10412016,228,3834332,2013-11-30 21:58:57,2013-12-03 19:36:30,closed,Direct column datasource,"This should allow glyph renderers, the circle renderer as a start to directly read the columns in the column datasource. 
",0,55,[]
4776,10408018,227,3834332,2013-11-30 08:09:58,2013-12-01 00:55:27,closed,"dev setup for bokehjs,","@bryevdv  can you look this over and see if it's satisfactory?

The main approach is the addition of a bokehjs_file route, which is used to serve anything that goes in builds, including the compiled bokeh.js which maps to bokehjs/builds if debugjs is true, and maps to bokeh/server/static if debugjs is False.  There is another route for bokehjssrc_file which maps to bokehjs/src.  The idea is that the src route is invalid if debugjs is True.  There is another option, splitjs, which tells the URL templates to use require to load the libs, rather than the build bokeh.js
#### Includes
- supporting incremental builds
- coffeescript source maps
- separate js files, vs a single combined bokehjs file
#### TODO
- extend this to bokehjs demo/test files
- think about removing all the static files from bokeh/server/static  If the bokeh server doesn't need any of it's own static resources (as in, all static resources come from bokehs, which seems to make sense)  then instead of creating a separate route for the bokehjs build directory, we could just toggle the static path for flask depending on what mode we're running in.  In this case, the bokehsjsrc_file route is still necessary, since that does not always exist for all use cases.
",4,2,[]
4777,10374022,224,3834332,2013-11-28 14:37:10,2013-12-02 17:27:49,closed," select tool only draws selection bounds when moving the mouse, waits un..."," select tool only draws selection bounds when moving the mouse, waits until mouseup to update the plot.

@bryevdv can you take a look at this?  I don't like the select tool reaching into the plot and calling render_overlays, but this is performant.
",1,17,[]
4778,10319652,222,3834332,2013-11-26 22:54:39,2013-11-26 23:38:17,closed,bokeh-server ImportError handler just prints the error message,"Old method assumed that the missing module was redis, which isn't necessarily true.
",0,2,[]
4779,10200976,216,3834332,2013-11-22 07:43:52,2013-11-22 15:51:22,closed,Add 'legend' Method to Retrieve Current Legends,"I tried this with

```
from bokeh.plotting import *
output_file('test.html')
line([1,2,3],[2,3,2], legend='blah')
legend()[0].orientation='top_left'
show()
```

and it seemed to have the desired effect. I'm totally new to bokeh and not really sure if this is indeed correct, but I couldn't find a method to easily retrieve the legends of a plot.
",0,1,[]
4780,10184409,211,3834332,2013-11-21 19:51:32,2013-11-21 19:59:55,closed,Fix broken links in README to demos,,1,1,[]
4781,10065846,202,3834332,2013-11-18 21:15:37,2013-11-18 22:13:31,closed,Fix two import errors in bokehjs,,0,2,[]
4782,9946823,163,3834332,2013-11-14 01:40:31,2013-11-14 21:45:24,closed,Rebuild only files that changed,"This uses naive technique (comparing modification times) to select files for recompilation, so if you start with a clean repository and issue `grunt build` twice, then after second run you should get:

```
Running ""coffee:compile"" (coffee) task

Running ""coffee:test"" (coffee) task

Running ""coffee:demo"" (coffee) task

Running ""less:development"" (less) task
>> Destination not written because no source files were provided.

Running ""copy:template"" (copy) task
Copied 5 files

Running ""copy:test"" (copy) task
Copied 1 files

Running ""copy:demo"" (copy) task
Copied 13 files

Running ""copy:vendor"" (copy) task
Copied 2 files

Running ""eco:app"" (eco) task

Done, without errors.
```

As a side effect, there is no need anymore for custom watch task.

This PR includes a few related (and one unrelated - I can move this to another pull request) fixes/improvements.
",5,7,[]
4783,9085781,112,3834332,2013-10-15 00:08:03,2013-10-16 01:41:09,closed,"Add missing requirements, include bokeh.vendor into build","`bokeh.vendor.pycco` is required by `./examples/build_gallery.py`, thus should to be included into the build
",2,2,[]
4784,9049550,104,3834332,2013-10-12 20:45:20,2013-10-17 16:17:35,closed,Bootstrap bokeh prefix,"This fixes #100 
",0,3,[]
4785,9044885,96,3834332,2013-10-12 03:35:30,2013-10-12 04:09:59,closed,Added call to line_example(),"Added call to line_example() in main()
",1,1,[]
4786,7778111,52,3834332,2013-08-22 01:56:04,2013-08-29 02:38:53,closed,Oldcommits,"um... so I had some local commits in Bokeh
as well as some commits I just pushed from CDX from when we were cramming for darpa....

I don't want to just merge them in, but I'm storing them here for now until we can review...
",0,30,['status: accepted']
4787,6863288,44,3834332,2013-07-11 13:17:14,2013-07-15 10:42:48,closed,changing scatter to use rect/circle functions,"this branch does not work yet
",0,1,['status: declined']
4788,6545979,42,3834332,2013-06-25 21:59:39,2013-09-04 10:48:50,closed,I couldn't do run runserver without also installing continuumweb,"```
Traceback (most recent call last):
  File ""runserver.py"", line 3, in <module>
    from bokeh.server import start
  File ""/Users/me/local/Bokeh/bokeh/server/start.py"", line 24, in <module>
    from continuumweb import hemlib
ImportError: No module named continuumweb
Exception KeyError: KeyError(4451569168,) in <module 'threading' from '/usr/local/Cellar/python/2.7.3/Frameworks/Python.framework/Versions/2.7/lib/python2.7/threading.pyc'> ignored
```
",2,1,['status: superseded']
4789,6437322,41,3834332,2013-06-20 07:54:06,2013-06-20 12:10:24,closed,Removed merge markers from bokeh/properties.py file,"Hi,

I removed merge marker from the properties.py module otherwise library won't work.I hope this is ok!
",2,1,['status: accepted']
4790,6431732,40,3834332,2013-06-19 23:38:55,2013-06-20 12:11:27,closed,Installation docs and requirements.txt,"Hi guys, I just did a fresh install today, so I'm contributing two quick changes to the README and a requirements.txt file. This should help you out on issues #30 and #35. 
",0,3,['status: accepted']
4791,5282015,38,3834332,2013-04-21 22:39:40,2013-06-20 12:12:19,closed,Unable to use pandas data model (with fix),"I have the following code:

```
p = mpl.PlotClient('defaultuser', serverloc='http://localhost:5006', userapikey='nokey')
p.use_doc('whisper')
data_source = p.make_source(metrics)
p.plot(""time"", ""foo.bar"", data_source=data_source, is_x_date=True)
```

where `metrics` is a pandas `DataFrame`. One can also run `examples/pandas_example.py` with the distribution. When I run this, I get the following error:

```
Traceback (most recent call last):
  File ""lib/whisper_loader.py"", line 59, in <module>
    p.plot(""time"", ""foo.bar"", data_source=data_source, is_x_date=True)
  File ""/home/stucchio/src/graphene/graphite_server/local/lib/python2.7/site-     packages/bokeh/mpl.py"", line 568, in plot
    scatter=scatter
  File ""/home/stucchio/src/graphene/graphite_server/local/lib/python2.7/site-    packages/bokeh/mpl.py"", line 182, in plot
plotsource.update()
  File ""/home/stucchio/src/graphene/graphite_server/local/lib/python2.7/site-packages/bokeh/bbmodel.py"", line 114, in update
    self.client.update(self)
  File ""/home/stucchio/src/graphene/graphite_server/local/lib/python2.7/site-   packages/bokeh/bbmodel.py"", line 180, in update
    model.to_json(include_hidden=True)))
  File ""/home/stucchio/src/graphene/graphite_server/local/lib/python2.7/site-packages/bokeh/specialmodels/pandasmodel.py"", line 62, in to_json
    data = make_source(index=data.index, **data)
TypeError: make_source() argument after ** must be a mapping, not DataFrame
```

The issue is that Bokeh is passing a dataframe into `make_source`, i.e. `make_source(**data_frame)`. Fixing that bug is pretty straightforward, albeit less than pretty - I build a dict out of the dataframe in the obvious way and passed that in.

I'm uncertain if this fully resolves the issue. At first I was seeing the following js error in the browser:

```
error with binder 
DataRange1d {get_obj: function, resolve_ref: function, convert_to_ref: function, cid: ""c-61E9A5CB935B44048D6800EBF2BDA75A"", attributes: Object…}
 change:data 
```

However, after I started poking around at the coffee script (nothing more than putting in `console.log`), this error went away, and I am unable to reproduce it. 
",0,1,['status: accepted']
4792,5093669,36,3834332,2013-04-10 21:09:44,2013-06-04 01:05:30,closed,Update README.md,"Corrected definition of bokeh. ""Bokeh"" refers only to the aesthetic quality of the blurred background; the technique of blurring the background in order to direct attention to the foreground goes under the more prosaic terms of ""selective focus"" or ""shallow focus."" See the Wikipedia page or Mike Johnston's description here (http://theonlinephotographer.typepad.com/the_online_photographer/2009/01/what-is-bokeh.html).
",1,1,['status: superseded']
4793,4965942,34,3834332,2013-04-03 22:14:03,2013-04-04 02:44:16,closed,Fix README for running basic examples.,"Since the code uses relative paths from cwd. User needs to have terminal cwd in the directory containing the scripts.
",1,1,['status: accepted']
4794,4805486,33,3834332,2013-03-25 22:24:45,2013-03-25 22:56:00,closed,ggplot.to_html out of sync with latest changes?,"Here is a small commit to update to_html in ggplot to support the removal of the notebook method from mpl. This should allow the original ggplot example notebook to work. The example should read:

import pandas
from bokeh.functional import *
df = pandas.read_csv(""../tests/auto-mpg.csv"")
g = ggplot(df, aes(""displ"", ""mpg"", color=""green"")) + facet_grid(""cyl"", ""origin"") + geom_point()
g.to_html(notebook=True)
",3,2,['status: accepted']
4795,4671131,27,3834332,2013-03-18 15:50:05,2013-03-28 14:22:32,closed,Fixing some errors in mpl.py (making startlocal.py work),".json() is the new requests API.
Also better check
",0,1,['status: accepted']
4796,4625480,25,3834332,2013-03-14 20:51:56,2013-03-26 15:41:08,closed,mpl.py AttributeError for cases where data_source=None,"When running the local example, mpl.py kicks out an error in the plot method when data_source is None and it tries to call data_source.typename
",0,1,['status: declined']
4797,4429070,21,3834332,2013-03-04 17:25:33,2013-03-04 21:34:03,closed,Multidoc,,0,22,['status: accepted']
4798,4158782,20,3834332,2013-02-15 05:26:22,2013-02-15 19:20:05,closed,Encode javascript source as UTF-8,,0,1,['status: accepted']
4799,4058172,16,3834332,2013-02-08 15:45:44,2013-02-13 22:33:15,closed,Hem,"can you guys check this out?  this will allow us to modularize our code more. it has some implications to developing Bokeh.
",0,83,['status: accepted']
4800,3808552,13,3834332,2013-01-23 20:57:35,2013-01-23 21:19:36,closed,Update bokehnotebook to have a ggplot example,"Not sure if you want to keep this but this will help newbies get up to speed on ggplot objects.

copied PZWang's code from issue#12 to the bokeh notebook

zach cp
",1,1,['status: accepted']
4801,3802131,9,3834332,2013-01-23 15:42:30,2013-01-23 15:44:05,closed,Add an installation section to the README,,1,1,['status: accepted']
4802,1876160,1,3834332,2012-07-24 16:22:05,2013-01-22 15:36:09,closed,README: fix the link to ggplot,"The old link doesn't seem to work anymore.
",0,1,['status: accepted']
