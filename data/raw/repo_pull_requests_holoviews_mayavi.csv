index,id,number,repo_id,created_at,closed_at,state,title,body,total_comments,total_commits,labels
0,707168083,5063,19542768,2021-08-10 09:07:54,,open,Ensure updates to the bokeh visible style property are applied,As the title says.,0,2,[]
1,706751164,5062,19542768,2021-08-09 18:41:05,,open,Support xyzservices.TileProvider as hv.Tiles input,"Implements suggestion 1) from #5057.

Bokeh and Plotly backends now support `xyzservices.TileProvider` as input for `hv.Plot`:

```py
import xyzservices.providers as xyz

hv.Tiles(xyz.CartoDB.Positron)
```

I have not added tests for the Bokeh backend as I have no idea where it should be. Can you point me to the right direction?

I'll add the same to GeoViews once this gets reviewed and we agree on specifics of the support.",1,2,[]
2,706426472,5061,19542768,2021-08-09 11:10:42,2021-08-09 12:57:05,closed,Optimize lasso selection by applying box-select first,Doing a range selection before applying the geometry testing can result in huge speedups for large datasets.,0,1,[]
3,706412279,5059,19542768,2021-08-09 10:50:40,2021-08-09 12:50:11,closed,Ensure properties with falsey values are applied on update,Previously falsey alpha and color values (like `0`) were ignored when applying updates.,0,1,[]
4,701931975,5052,19542768,2021-08-03 03:54:29,2021-08-03 14:50:33,closed,Add opentopomap as a tile source,https://github.com/holoviz/geoviews/issues/511,0,1,[]
5,701675284,5051,19542768,2021-08-02 18:05:23,2021-08-03 14:30:15,closed,Implement linked selection lasso for cudf using cuspatial,Much faster point in polygon search for lasso selection in `link_selections` when using cuDF and cuspatial.,0,4,[]
6,699592836,5050,19542768,2021-07-29 14:39:07,2021-07-30 15:23:15,closed,fix(core.data.interface): check if data.interface is a class," check if data.interface is a class before calling issubclass()

Fixes https://github.com/holoviz/hvplot/issues/645
",1,1,[]
7,696024839,5044,19542768,2021-07-23 15:25:20,2021-08-03 14:18:55,closed,Add warning to linked selection,"`hv.selection.link_selections` does not work on all objects, if it doesn't know how to recurse into an object it just returns the object (without a warning): https://github.com/holoviz/holoviews/blob/effaf45f9c2e7bf33c9f7ee830c2aa355badaae2/holoviews/selection.py#L180-L182

The absense of any indication that the `link_selections` might not work can be confusing, as I experience myself. I propose adding a warning to signal the user that the `link_selections` might not work as expected.

For example see:
<img src=""https://user-images.githubusercontent.com/951093/126804914-9cc77994-df93-4d6b-82e8-10c2f7d36608.gif"" width=""600"">

Please let me know if you think this is a good idea",3,1,[]
8,695944931,5042,19542768,2021-07-23 13:30:57,2021-07-26 09:27:02,closed,Proposal: Ability to add new streams to DynamicMap.map(),"This PR is a conceptual proposal and is not ready to merge. I would like to start a discussion on how to extend existing `DynamicMap`s with new streams.

I think the ability to extend `DynamicMap` with new streams would be a great addition. Sometimes when creating a complex dashboard I have plots that are derived from other plots. If the source plots are `DynamicMap`s I usually use `DynamicMap.map()` to create the derived plot. For example I might make a projection as a derived plot that can be added to a Adjoint layout. An example of such a projection could be:
```python
x_proj = dmap_2d.map(
    lambda qm: hv.Curve(qm.dataset.transform(z=hv.dim(""z"").xr.sum(dim=""y"")),),
    specs=hv.QuadMesh
)
```

However, sometimes I might want to create an additional interaction with the derived plot. However, adding a new stream with events, and the required effect of the stream event on the data, to an existing `DynamicMap` is currently not possible as far as I know (please correct me if I'm wrong).

I was thinking I would be nice to extend [`DynamicMap.map`](https://github.com/holoviz/holoviews/blob/989c3c304a34e5043a52eba87dd056b6e48d9eea/holoviews/core/spaces.py#L1294) (or maybe create a new mapping method) to allow for new streams to be passed to `.map(streams=...)`, of which the parameters can be used in the `map_fn` function.

As a rough illustration how this could work I created this PR. And have created the following example that illustrates creating a derived plot (histogram) that depends on a new stream (`hv.streams.Selection1D`)


```python
import numpy as np
import holoviews as hv
import panel as pn

hv.extension('bokeh')

# Widgets
x_offset_slider = pn.widgets.FloatSlider(
    name='x-offset', 
    start=-5, end=5, step=0.1, value=0.
)
y_offset_slider = pn.widgets.FloatSlider(
    name='y-offset', 
    start=-5, end=5, step=0.1, value=0.
)
widget_box = pn.WidgetBox(
    x_offset_slider,
    y_offset_slider
)

widget_streams = hv.streams.Params.from_params(dict(
    x_offset=x_offset_slider.param.value, 
    y_offset=y_offset_slider.param.value
))



def gen_points_overlay(x_offset, y_offset):
    return hv.Points(np.random.randn(1000, 2) + np.array([x_offset, y_offset]), kdims=['x', 'y'], label='p1')

dmap_2d = hv.DynamicMap(
    gen_points_overlay, streams=[*widget_streams]
).opts(
    hv.opts.Points(framewise=True, tools=['box_select', 'lasso_select'])
)

selection = hv.streams.Selection1D(source=dmap_2d)

# Map DynamicMap with indexes from additional selection stream
def hist_mapper(points: hv.Points, index, **kwargs):
    selected_points = points
    if index:
        selected_points = points.iloc[index]
    return hv.operation.histogram(selected_points, dimension='y')

dmap_hist = dmap_2d.map(map_fn=hist_mapper, specs=hv.Points, streams=[selection])

plot = dmap_2d + dmap_hist

app = pn.Column(plot, widget_box)
display(app)
```
<img src=""https://user-images.githubusercontent.com/951093/126788423-a40cc559-8549-4d5e-aa13-d4f63de2a053.gif""  width=""400"">

Using the histogram and the selection are just examples of a derived plot and an additional stream here. They could be any other derivation on the original plot's data with any other event stream.

I would love to know what y'all think. Is this something Holoviews want to support? Do you think extending `DynamicMap.map(streams=...)` is the right way, or are there other routes to implementing this behaviour?",4,1,[]
9,695399581,5040,19542768,2021-07-22 18:16:33,2021-07-22 18:18:13,closed,Fixes for bokeh Callbacks,"Fixes https://github.com/holoviz/holoviews/issues/5029
Fixes https://github.com/holoviz/holoviews/issues/4957",0,1,[]
10,695348455,5039,19542768,2021-07-22 17:01:04,2021-08-03 15:10:02,closed,Apply hover postprocessor on updates,Fixes https://github.com/holoviz/holoviews/issues/5000,0,1,[]
11,693231497,5037,19542768,2021-07-20 07:35:35,2021-07-26 09:07:17,closed,Forward DynamicMap.hist dimension parameter to histogram creation,"Fixes https://github.com/holoviz/holoviews/issues/5036

```python
DynamicMap.hist(dimension='y')
```
Results in:
* Before fix:
  <img src=""https://user-images.githubusercontent.com/951093/126271151-793c84d6-b59c-4d81-a2d1-439e1c3ced70.png"" alt=""hist-wrong-dimension"" width=""350"">
* After fix:
   <img src=""https://user-images.githubusercontent.com/951093/126280715-aa573faf-63ad-486f-a6e2-f97f2b8201d6.png"" alt=""hist-wrong-dimension"" width=""400"">
",3,1,[]
12,692775924,5035,19542768,2021-07-19 17:04:05,2021-07-26 15:06:11,closed,Added release dates to releases.rst,,3,2,[]
13,692683178,5034,19542768,2021-07-19 14:59:11,2021-07-27 09:08:09,closed,Updates from 1.14.5 hotfix branch,This PR ports some of the fixes needed to get the tests passing on the 1.14.5 hotfix branch to master.,2,3,[]
14,692646980,5033,19542768,2021-07-19 14:14:52,2021-07-19 16:38:18,closed,Added release notes for the 1.14.5 hotfix release,"It was a bit of a rush getting 1.14.5 due to the breakage around pandas 1.3.0 which meant the release notes weren't added. Once this PR is merged I'll add these notes to the github tag release description and update the website accordingly.

- [x] Add RST version to releases.rst",2,3,[]
15,692081817,5031,19542768,2021-07-18 12:31:11,,open,Show all histograms of an Overlay,"I created a PR to enable showing all histograms of an Overlay:

This PR:
- Fixes `NdOverlay.hist raises AttributeError`: https://github.com/holoviz/holoviews/issues/5022 . `NdOverlay.hist` works in this PR.
- New behaviour: `CompositeOverlay.hist()` shows histograms for all the elements in the overlay. This affects both `NdOverlay` and `Overlay` (e.g. see previous comment @ https://github.com/holoviz/holoviews/issues/5022#issuecomment-882006386)

Illustration of new `CompositeOverlay.hist()` behavior. Notice the histograms being overlaid for both elements in the overlay:
<img src=""https://user-images.githubusercontent.com/951093/126066772-c1a78a5f-0f14-4a63-b8fb-f5830e5d1867.png""  width=""300"">

I would love to get some feedback on this PR",12,1,[]
16,691854132,5030,19542768,2021-07-17 06:21:27,2021-07-17 09:30:06,closed,Fix AdjointLayout in link_selections,"Fixed `AdjointLayout` not working with `link_selections` as illustrated in: https://github.com/holoviz/holoviews/issues/5028

Fix:
<img src=""https://user-images.githubusercontent.com/951093/126027932-114ddf12-f4bc-4286-bf2c-09eebde1ffe8.gif"" alt=""adjoint_layout_working"" width=""400""/>
",2,1,[]
17,691778369,5027,19542768,2021-07-16 22:46:28,2021-07-19 16:33:37,closed,Added release dates to changelog,,2,4,[]
18,691387477,5024,19542768,2021-07-16 10:53:36,,open,Align Bars with annotations on matplotlib,"Align the bars with the annotations such as ErrorBars or Labels.

Fixes #4989",1,1,[]
19,690912938,5020,19542768,2021-07-15 17:31:45,,open,Fix Labels on categorical data,"Fix Labels when working with a categorical axis like:

    hv.Labels([(""hello"", 12, ""text""), (""world"", 18, ""text2"")])

This is especially important as Labels can be used to annotate bar
graphs.

Since matplotlib does not correctly infer the axis units for ax.text(),
we have to help it by adding an invisible scatter plot, so that the axes
are correctly initialized.

Fixes #4992 ",3,1,[]
20,690698303,5019,19542768,2021-07-15 13:03:40,2021-07-15 15:58:04,closed,Trim trailing whitespaces,Trim it all at once so it does not sneak into other unrelated PRs,3,1,[]
21,690644015,5018,19542768,2021-07-15 11:45:38,2021-07-15 21:32:15,closed,Sanitize uses of contextlib.contextmanager,"* try/finally around the yield statement in order to execute the 2nd
  part if an exception is raised in the with statement block

* ""except: raise"" is unncessary, that is the default behaviour of any
  try/finally construct.",1,1,[]
22,690002957,5016,19542768,2021-07-14 15:15:16,2021-08-03 15:00:51,closed,Fix ignored options,,1,5,[]
23,689901880,5015,19542768,2021-07-14 13:11:04,2021-08-09 12:50:46,closed,Allow plotting anonymous pandas.Series,"If a Series has no name (empty string or None), uses a default ""y"" name
to avoid exceptions.

Fixes #4970",13,1,[]
24,689824547,5014,19542768,2021-07-14 11:24:39,,open,Fix Rectangles and Segments color,"* Remove duplicated setting of Rectangles options
* Make Segments default to black, like all the other ""line-only"" shapes
* Make Rectangles use the default color cycle

Fixes #4981",0,1,[]
25,687895819,5013,19542768,2021-07-12 14:27:18,2021-07-13 11:52:28,closed,Add support for pandas>=1.3,"This PR addresses the issue https://github.com/holoviz/holoviews/issues/5009. It adds another check to handle pandas 1.3+ in `holoviews/core/utils.py`, and reverts the `install_requires` to what is what before https://github.com/holoviz/holoviews/pull/4976.

All the tests that were not skipped pass in my branch, in my fresh environment (Mac OS). I'm not sure how to un-skip tests, but PR https://github.com/holoviz/holoviews/pull/4976 mentions that there are 111 failed tests so I'm a bit worried there are other things required to fully support pandas 1.3",1,1,[]
26,687380987,5012,19542768,2021-07-11 18:59:35,2021-07-11 19:02:22,closed,Allow passing custom selection_expr to linked selections filter,,0,1,[]
27,684319793,5006,19542768,2021-07-06 12:09:05,2021-07-06 12:09:30,closed,Removed trailing comma that was breaking notebook JSON,"Removed the commas that were breaking the notebook JSON from #4985.

I'm not expecting the tests to pass for other reasons so I'm going to merge to master so I can fix the tests in a different PR.",0,1,[]
28,684244606,5005,19542768,2021-07-06 10:17:52,2021-07-06 16:18:04,closed,Fix regressions in dim transforms,Namespace object does not necessarily have the attribute you're looking up and the class may not be initialized yet when `__getattribute__` is called the first time.,1,7,[]
29,683595262,5001,19542768,2021-07-05 10:56:00,2021-07-05 10:56:44,closed,Support parameters in slices on hv.dim,"Allows doing:

```
hv.dim('*').iloc[slider.param.value_start:slider.param.value_end]
```",0,1,[]
30,682684222,4999,19542768,2021-07-02 14:45:18,2021-07-05 10:19:32,closed,Implement linked_selection.filter method,Simple helper for applying a linked_selection to some data.,0,3,[]
31,679406610,4994,19542768,2021-06-28 21:08:42,2021-07-08 13:58:06,closed,Fixed small typos in error messages,"In two places, the phrase ""options found"" was typed as ""options founds.""",0,2,[]
32,679104269,4993,19542768,2021-06-28 14:33:47,2021-07-05 11:09:25,closed,Fixes for dim transform getattribute,Implements `__getitem__` which appears to break `__getattr__` in some cases which in turn means I had to switch to implementing `__getattribute__`.,0,2,[]
33,678089025,4991,19542768,2021-06-25 17:59:32,,open,Implement optimized inspect_points using numba vectorize selection,,0,3,[]
34,673533316,4985,19542768,2021-06-18 14:44:22,2021-06-22 11:50:07,closed,Update outdated Ioam references,Replace outdated ioam references as described in #4685 ,3,2,[]
35,673143303,4983,19542768,2021-06-18 03:50:58,,open,Update Plotting_with_Matplotlib.ipynb,Ordering of the fig_bounds tuple in the documentation was different from that in e.g. https://github.com/holoviz/holoviews/blob/40977c515dd9837019aaa0e5708773e78809fbe1/holoviews/plotting/mpl/plot.py#L69,0,1,[]
36,671340252,4976,19542768,2021-06-16 11:04:54,2021-07-06 18:02:58,closed,Fixing CI tests,"I'm repurposing this PR to be a fix for tests and will open a new one tackling the original goals:

## Original PR goals

This PR aims to address https://github.com/holoviz/holoviews/issues/4961

Using the example described in that issue, here is the behavior before:

<img src=""https://user-images.githubusercontent.com/890576/120017472-88c72f00-bfab-11eb-9637-9e88546fbe63.png"" width=60%></img>

And the behavior now:

<img src=""https://user-images.githubusercontent.com/890576/122207807-25bd0f80-ce68-11eb-8bc0-97ebb1658a07.png"" width=60%></img>

The ideas is as follows:

1. Event parameters should *not* be part of the memoization as event parameters are fundamentally transient (e.g. button clicks etc). For this reason they are now dropped from `Params.hashkey`.
2. Nonetheless, triggering event parameters should invoke the callback. This means `Params.transient` is True when any events are occurring and False otherwise.
3. I've disabled setting `transient` in the Params constructor as it seems to depend on the parameters used. Though @philippjfr maybe the behavior should be: `user_provided_transient_value` or `transient_if_event_parameters_are_triggered`? That would allow `transient` to be True for all none Event parameters (if that even makes sense and has a use case).

Will see how much the tests like this change shortly... 
",6,19,[]
37,666841843,4971,19542768,2021-06-10 12:28:02,2021-08-03 15:01:23,closed,Keep ordering of kdim when stacking Areas,Previously it would lexsort the index values which would mess with user sorted categorical values.,0,1,[]
38,666734694,4969,19542768,2021-06-10 10:08:11,2021-06-10 15:36:17,closed,Workaround for AttributeError,See #4968,0,2,[]
39,656213555,4960,19542768,2021-05-28 10:15:49,2021-05-28 13:05:15,closed,Fix batch watching of parameters in Params stream,The Params stream logic to batch the watching of parameters on the same Parameterized class or instance was not correct causing it to watch each parameter separately.,0,2,[]
40,655185000,4958,19542768,2021-05-27 16:57:17,2021-07-19 15:05:14,closed,Hotfix version 1.14.5,"Currently just cherry picks #4956 but the list should be extended with all the other fixes we want to include.

Cherry picked:

- [x] #4956",3,20,[]
41,655106964,4956,19542768,2021-05-27 15:12:56,2021-05-27 15:53:31,closed,Ensure Params stream is treated as linked when it mirrors LinkedStream parameters,Fixes #4955,3,1,[]
42,654755327,4954,19542768,2021-05-27 10:10:37,2021-05-27 12:30:53,closed,Optimize and clean up options system,"A number of optimizations improvements for the options system:

1. Options objects are no longer Parameterized's
2. Store maintains a `_lookup_cache` per backend which resets every time an option is set.

The lookup cache in particular is very important, in my particular example it reduced the number of lookups and therefore instantiation of Options objects from 2168 to 8, shaving off almost 40% of the rendering time.",0,5,[]
43,654566606,4953,19542768,2021-05-27 06:52:44,2021-05-27 15:24:13,closed,Removed unneeded list from dynamic map example (docs),"The `frequencies` list is defined, but not used or needed in the Dynamicmap reference notebook",0,1,[]
44,654258110,4951,19542768,2021-05-26 21:41:06,2021-05-27 15:53:19,closed,Fixed missing handling of nodata for count aggregator with column,The `count_cat` aggregators were handled but `count` wasn't. Simple fix that shouldn't need much discussion once a corresponding unit test is added.,1,5,[]
45,654116932,4950,19542768,2021-05-26 18:31:18,2021-05-27 15:53:41,closed,Pointed GHActions badges to master branch,Minor fix to the Github Actions badges to point them to the master branch.,0,1,[]
46,652825221,4949,19542768,2021-05-25 20:57:08,2021-05-26 00:18:06,closed,Switch to pytest,,0,7,[]
47,650867546,4946,19542768,2021-05-23 22:27:13,2021-05-24 02:08:38,closed,Remove py2 compatibility,"- `basestring` -> `str`
- Removed py2 aliases in `hv.core.util`
- Removed various py2 only tests
- Remove py2 mode in `sanitize_identifier`",0,5,[]
48,650834299,4945,19542768,2021-05-23 18:28:45,2021-05-23 22:23:35,closed,Execute deprecations for 2.0,"- `Dimensioned.opts` now warns about passing in style, plot, norm options.
- `Dimensioned.__call__` now removed (previously allowed setting options)
- `ViewableTree.from_values` removed
- `Element.collapse_data` removed
- `Element.mapping` removed
- `Element.table` removed
- `MultiDimensionalMapping.dframe` removed (now only on `UniformNdMapping`)
- `Overlay.collapse` removed
- `HoloMap.sample` removed
- `HoloMap.reduce` removed
- `DynamicMap`/`HoloMap.split_overlays` removed
- `Histogram` constructor no longer accepts `Histogram(values, edges)` only `Histogram((edges, values))`
- Pickle compatibility for `Histogram`/`QuadMesh` before interface introduction removed
- `Histogram.values` property removed
- `Trisurface` removed (was replaced with `TriSurface`)
- `holoviews.element.graphs.redim_graph` removed (was there for pickle compatibility)
- `Contours`/`Polygons` level parameter was removed
- `Image` pickle compatibility for the time before the `ImageInterface` was removed
- `datashade` `normalization` parameter removed (was renamed to `cnorm`)
- `hv.opts` no longer accepts magic strings, e.g. `hv.opts('Points [width=600]')`",0,5,[]
49,650807047,4944,19542768,2021-05-23 15:19:46,2021-05-23 18:27:07,closed,Clean up after dropping python2,"- [x] Delete all `__future__` imports
- [x] Use bare super where possible",0,4,[]
50,647992128,4941,19542768,2021-05-19 19:47:18,2021-05-20 10:06:40,closed,Tile source replacement warnings,"After quite some discussion with @jbednar  and @philippjfr, here is one proposal for how to handle the tile sources that no longer work.

To replace the `Wikipedia` tile source (showing how you set your own default to disable the warning):

![image](https://user-images.githubusercontent.com/890576/118874801-ea531380-b8b0-11eb-9baf-8a19655730ae.png)

And now that `CartoMidnight` and `CartoEco` no longer work:

![image](https://user-images.githubusercontent.com/890576/118874734-d8717080-b8b0-11eb-9d06-e0459f5d4c96.png)

I think this is as good as we can do once we explain the changes in the release notes. That said, I'm sure we can improve the warning messages further...",2,10,[]
51,647549867,4940,19542768,2021-05-19 11:14:23,2021-05-19 12:24:06,closed,Fix or warn about unavailable tile sources,- [x] Updates URLs for all Stamen maps,0,5,[]
52,647073866,4939,19542768,2021-05-18 20:32:17,2021-05-18 21:13:21,closed,Fixed overlapping labels in violin example,Fixes #4887.,1,1,[]
53,647054079,4938,19542768,2021-05-18 20:06:24,2021-05-18 20:19:39,closed,Update release notes for 1.14.4,,0,1,[]
54,646907975,4937,19542768,2021-05-18 16:23:12,2021-05-18 17:49:21,closed,Fix for area stack,"Fixes #4921

Hope I'm not to late to get this in with the next release like last time...",3,1,[]
55,646825915,4936,19542768,2021-05-18 14:46:50,2021-05-18 15:22:03,closed,Use dataframe index for TriMesh node indices,Fixes https://github.com/holoviz/holoviews/issues/4927,0,2,[]
56,646604708,4935,19542768,2021-05-18 10:03:28,2021-05-18 13:23:33,closed,Fix dask TriMesh rasterization,Previously the vertex and simplex data was always converted to pandas so the dask codepath in datashader was never exercised.,2,4,[]
57,646151262,4934,19542768,2021-05-17 20:08:49,2021-05-18 09:09:22,closed,Ensure float precision issues don't cause issues with bokeh Palette generation,Fixes https://github.com/holoviz/holoviews/issues/4911,0,1,[]
58,646026650,4932,19542768,2021-05-17 16:59:13,2021-05-17 19:57:01,closed,Fix remapping of Params stream parameter names,Fixes https://github.com/holoviz/holoviews/issues/4899,0,1,[]
59,646015608,4931,19542768,2021-05-17 16:40:56,2021-05-17 19:57:27,closed,Do not reverse colormaps with _r suffix a second time,Fixes https://github.com/holoviz/holoviews/issues/4916,0,1,[]
60,646004868,4929,19542768,2021-05-17 16:24:09,2021-05-17 19:56:32,closed,Fix bug using dimensions with label on Bars,Fixes https://github.com/holoviz/holoviews/issues/4925,0,1,[]
61,637616686,4922,19542768,2021-05-10 13:23:37,2021-05-10 15:05:39,closed,Reenable SaveTool for plots with TileRenderer,Seems like the SaveTool works with tile renderers again.,0,2,[]
62,630035546,4919,19542768,2021-05-04 19:19:25,,open,changed default show_legend = True for hv.Path elements,,4,1,[]
63,627172810,4914,19542768,2021-04-30 09:40:38,2021-05-17 09:16:49,closed,Move y to vdims in hv.Scatter,Fixes #4912,1,1,[]
64,621746395,4907,19542768,2021-04-23 03:35:14,2021-05-17 19:57:42,closed,Updated Dashboards user guide to show pn.bind first,"The Dashboards user guide was written before Panel supported `pn.bind`, first showing a Parameterized class and then showing `pn.depends` while saying that the `pn.depends` approach tightly ties the GUI and analysis code together. `pn.bind` doesn't tie it together in that same way, and indeed no longer needs the dummy function that previously was needed so that `pn.depends` could  decorate the analysis function.  All told, I think it's cleaner and clearer to present `pn.bind` first, explicitly creating some widgets and then attaching them to DynamicMap arguments and operation arguments.  So I've done that, motivating it by needing to get a widget to control the operation argument.  Only after that do we get into Parameterized classes.

I think this approach works pretty well, but I'll admit I got lost a bit in the Parameterized sections. I don't think anything there is incorrect, but it seems a bit bewiildering.  What I'd want a user to get out of that section is a solid understanding of how to make dynamic apps with HoloViews + Panel. Panel's own docs can cover everything about how to make apps in general, but having responsive, efficient apps where widgets dynamically affect just a small aspect of a plot seems appropriate to explain here in the HoloViews docs.  I think that's implicit in the current material already, but it would be great if @philippjfr could read through that and more clearly express how one uses the features of HoloViews and Panel to make efficiently responsive apps.",9,4,[]
65,619853028,4904,19542768,2021-04-21 04:52:57,2021-04-21 11:06:10,closed,Name dim transform params properly,Fixes #4903 and [holoviz/hvplot/#593](https://github.com/holoviz/hvplot/issues/593) ,1,1,[]
66,618704817,4902,19542768,2021-04-19 23:25:41,2021-05-17 09:17:22,closed,Check before derefferencing mappers,,2,1,[]
67,618674556,4901,19542768,2021-04-19 23:00:25,2021-04-19 23:19:22,closed,Check before derefferencing mapper,,1,1,[]
68,617883026,4898,19542768,2021-04-19 10:45:22,,open,Change how upper limit is taken for color_levels,"Fixes #4897 

I believe that the offset is due to the N parameter in the `plotting.utils.color_intervals` code and how it is used if there is a clip.

Because of the int(round(...)) we can end up with more values in the camp than the N parameter. So when a slice is taken we should use the `Len(cmap)` rather than `N` which introduces an offset if `len(camp) != N`",2,1,[]
69,615447841,4892,19542768,2021-04-14 18:07:05,2021-04-21 11:07:45,closed,Fix hover for stacked bars,Fixes #4888,0,1,[]
70,614370531,4889,19542768,2021-04-13 11:13:48,2021-04-13 12:04:56,closed,Match pins with conda-forge recipe,Just resolves some differences between what's specified in the setup.py and in the conda-forge recipe that the conda distro team spotted.,0,1,[]
71,612264233,4885,19542768,2021-04-09 08:25:54,2021-04-10 10:36:59,closed,Update dt_to_int,"Fixes #4863
Fixes #4884

Changed `dt_to_int` to work better with timezones so it return the same results as a pandas timestamp input.  

",1,2,[]
72,611496037,4883,19542768,2021-04-08 12:02:09,2021-04-08 12:04:47,closed,Add 1.14.3 release notes,,0,1,[]
73,611474431,4882,19542768,2021-04-08 11:33:52,2021-04-08 11:55:28,closed,Support selection masks and expressions on gridded data,Partially fixes https://github.com/holoviz/holoviews/issues/4851,0,1,[]
74,611465144,4881,19542768,2021-04-08 11:20:06,2021-04-08 11:55:37,closed,Handle tuple unit on xarray attribute,Fixes https://github.com/holoviz/holoviews/issues/4869,0,1,[]
75,611362035,4880,19542768,2021-04-08 08:58:14,2021-04-08 09:20:25,closed,Implement MultiInterface.assign,The assign method required for the `transform` operation and some others was not implemented prior to this causing some operations to fail.,0,1,[]
76,608393306,4878,19542768,2021-04-03 14:23:07,2021-04-08 08:58:32,closed,Matplotlib-3.4.0 compatibility,following this API change https://github.com/matplotlib/matplotlib/pull/18544,1,3,[]
77,595639338,4870,19542768,2021-03-18 14:45:32,2021-03-19 11:37:37,closed,Allow applying linked selections to chained DynamicMaps,,0,1,[]
78,593841877,4868,19542768,2021-03-16 12:06:05,2021-03-19 23:32:13,closed,Issuing improved error message when __radd__ called with an integer,Simple change to address https://github.com/holoviz/holoviews/issues/4834 and help people who try to use `sum` to build `Overlays`.,3,5,[]
79,587031803,4860,19542768,2021-03-08 19:14:56,2021-04-13 10:59:21,closed,Updating GitHub actions,"I have been working on updating the test GitHub Actions and I have come to a point where I want to share it. It is not necessary that this PR is to be merged, but the changes I have made could be added to a future PR.

**Overview over the changes I have done**
- Only accept Python 3.6, 3.7, and 3.8. Maybe this is a bit harsh, but as I understand the 1.14 release will be the last to support 2.7. 
- Added `conda-forge` to channels. This is maybe not needed anymore.
- Loosen some pins, which does not seem to be needed anymore.
- Updated matplotlib/datetime related unittest to be compatible with matplotlib 3.3, the changes is because matplotlib have changed their date2num from a custom format to UNIX time, see example code below. Maybe matplotlib should be pinned for this?
- Changed values of 2 others related to matplotlib update. I would like to know if this is ok?
- I added `mamba` to replace `conda install` but removed it again. I think it could be a good option to add to `pyct`/`pyctdev`.

**Example code of change to matplotlib**
``` python
# located at https://matplotlib.org/3.3.0/_modules/matplotlib/dates.html#_from_ordinalf
# changed the functions a bit to be more compact.

SEC_PER_DAY = 60 * 60 * 24

def new_dt64_to_ordinalf(d):
    # From matplotlib version 3.3.0
    dseconds = d.astype('datetime64[s]')
    extra = (d - dseconds).astype('timedelta64[ns]')
    t0 = np.datetime64(""1970-01-01T00:00:00"", 's')
    dt = (dseconds - t0).astype(np.float64)
    dt += extra.astype(np.float64) / 1.0e9
    dt = dt / SEC_PER_DAY
    return dt

def old_dt64_to_ordinalf(d):
    # From matplotlib version 3.0.3
    extra = d - d.astype('datetime64[s]').astype(d.dtype)
    extra = extra.astype('timedelta64[ns]')
    t0 = np.datetime64('0001-01-01T00:00:00').astype('datetime64[s]')
    dt = (d.astype('datetime64[s]') - t0).astype(np.float64)
    dt += extra.astype(np.float64) / 1.0e9
    dt = dt / SEC_PER_DAY + 1.0
    return dt

x = np.datetime64('2016-04-04', 'ns')
old_dt64_to_ordinalf(x), new_dt64_to_ordinalf(x), old_dt64_to_ordinalf(x) - new_dt64_to_ordinalf(x)
# (736058.0, 16895.0, 719163.0)
```",9,19,[]
80,586090812,4859,19542768,2021-03-06 16:12:37,2021-03-19 14:27:11,closed,Fix wrong subsection level for version number,"Fixes a wrong subsection level for version number in https://holoviews.org/releases.html

![2021-03-06 15_17_16](https://user-images.githubusercontent.com/19758978/110213139-11e43380-7e9f-11eb-9eca-d040c9ff09e2.png)
",1,1,[]
81,584141127,4856,19542768,2021-03-03 17:35:23,2021-03-03 18:23:21,closed,Handle None renderers when merging HoverTool.renderers,The renderers attribute contained Nones raising property errors.,0,2,[]
82,583105550,4853,19542768,2021-03-02 15:07:47,2021-03-02 15:15:06,closed,Fix pandas url in README.md,,1,1,[]
83,583018467,4852,19542768,2021-03-02 13:07:37,2021-03-02 13:41:24,closed,Copying matplotlib cmap to avoid mutating global colormaps,"Fix for https://github.com/holoviz/holoviews/issues/4842.

Before:

![image](https://user-images.githubusercontent.com/890576/109652886-f0ddb480-7b25-11eb-9203-0c60fba9a0dd.png)

After:

![image](https://user-images.githubusercontent.com/890576/109652834-e02d3e80-7b25-11eb-972a-8e1f1deb6fd7.png)
",1,1,[]
84,581969102,4850,19542768,2021-03-01 11:12:05,2021-03-02 16:07:22,closed,Add CHANGELOG for v1.14.2,"If we drop Python 2 we might want to consider whether 1.15.0 is more appropriate (I don't mind doing it either way).

### TODO

- [x] Merge generalized `inspect` PR and reference it
- [x] Add note about `inspect` being experimental and soliciting feedback?
- [x] Corresponding update to `releases.rst`",1,8,[]
85,580754044,4847,19542768,2021-02-26 10:17:24,2021-02-26 12:19:33,closed,Fixed np.nanmax call when computing ranges," np.nanmmax does not exist, np.nanmax exists",1,1,[]
86,577772913,4844,19542768,2021-02-22 16:34:02,2021-02-22 17:22:48,closed,Fixed typo in error message,Minor PR to fix a typo in the warning message.,0,1,[]
87,577707839,4843,19542768,2021-02-22 15:04:52,2021-02-26 17:55:19,closed,Fix for Dimension pickling,"Fixes #4838 by removing the custom `__setstate__` on `Dimension`.

The key thing it was doing `self.label = self.name` which was needed a long time ago before `Dimension` has separate `name` and `label` concepts. The question is whether we still need this to try to unpickle *really* old pickles (>4 years old) in which case a fix for the custom `__setstate__` is needed instead of simply removing it.",4,2,[]
88,576419079,4840,19542768,2021-02-19 12:18:02,2021-02-23 19:23:25,closed,Make fontsize tests compatible with latest Bokeh,Fixes for setting and testing fontsizes in Bokeh backend.,1,1,[]
89,575051059,4839,19542768,2021-02-17 16:35:08,2021-02-17 17:00:30,closed,Fix bokeh property value wrapping,,0,1,[]
90,572609174,4836,19542768,2021-02-12 15:52:53,2021-02-12 18:26:34,closed,Fix Area.stack for non-aligned data,Uses pandas to align the indexes.,0,2,[]
91,570427833,4831,19542768,2021-02-09 16:24:20,2021-02-18 14:29:59,closed,Handle arrays and datetime ticks,Fixes https://github.com/holoviz/holoviews/issues/4655,0,4,[]
92,570378837,4830,19542768,2021-02-09 15:17:28,2021-02-09 17:15:07,closed,Fix muted option on overlaid plots,Fixes https://github.com/holoviz/holoviews/issues/4784,0,4,[]
93,570295357,4829,19542768,2021-02-09 13:21:33,2021-03-02 13:57:00,closed,Compatibility for bokeh 2.3,Further changes for bokeh 2.3 compatibility. Want to build docs against Bokeh 2.3 to check.,0,2,[]
94,570268147,4828,19542768,2021-02-09 12:37:24,2021-02-09 14:02:50,closed,Fix plotting Graph on top of Tiles/Annotation,Fixes https://github.com/holoviz/holoviews/issues/4786,0,3,[]
95,569604810,4827,19542768,2021-02-08 16:30:58,2021-02-08 16:31:23,closed,Fixed typo in Exporting and Archiving notebook,Addresses https://github.com/holoviz/holoviews/issues/4772,1,1,[]
96,569523574,4826,19542768,2021-02-08 14:42:03,2021-03-02 09:53:54,closed,Generalized inspect operation,"WIP.

This generalized operation inspects the pipeline to figure out which concrete `inspect_X` operation to dispatch to:

![PR2](https://user-images.githubusercontent.com/890576/107235497-5b4d7a00-69ea-11eb-8bef-104b246ace79.gif)

The idea is that for most uses, users only ever need to know about `inspect`.

### TODO

- [x] Make sure the `hits` dataframe is mirrored properly.
- [x] Support the `mask` operation.
- [x] Try to reduce the repetition of parameter definitions.",4,15,[]
97,569507741,4825,19542768,2021-02-08 14:19:17,2021-02-09 13:27:22,closed,Updated operation streams parameter definitions,"Running the Large Data notebook on current master revealed a param bug (https://github.com/holoviz/param/issues/455) where `decimate` was failing despite having a valid declaration.

The issue is that https://github.com/holoviz/holoviews/pull/4818 generalized the allowable values for the `streams` parameter but the param bug referenced above means that *all* operations need to use the same `ClassSelector` definition even if the current declaration is a valid subset of what is accepted by the base class (i.e `param.List` or `param.Dict`).

I realize that I probably updated a bunch of parameter definitions in https://github.com/holoviz/holoviews/pull/4818 even though it wasn't strictly necessary (if the param bug wasn't an issue).

It is important to fix this param issue as all user defined operations will also be affected: users shouldn't have to update their `streams` parameter definitions.",1,1,[]
98,568494629,4822,19542768,2021-02-05 17:13:15,2021-02-14 00:16:09,closed,Updated the Responding to Events guide with streams dictionary examples,Still WIP but I would appreciate if @jbednar @philippjfr can help me think of something more interesting than a bank account example (meant to be showing how a parameterized class can capture domain knowledge!),1,7,[]
99,568407374,4821,19542768,2021-02-05 14:53:44,2021-02-05 15:56:39,closed,Fix pandas BaseMaskedArray import,,0,1,[]
100,565442705,4818,19542768,2021-02-01 20:03:32,2021-02-02 18:22:28,closed,Supporting streams dictionaries in operations,"WIP PR to address https://github.com/holoviz/holoviews/issues/4807.

For testing, I've defined the `streams` parameter of `inspect_points` as:

```python
    streams = param.ClassSelector(default=dict(x=PointerXY.param.x,
                                               y=PointerXY.param.y),
                                  class_=(dict, list))
```

And here is the corresponding, working test example:

![PR](https://user-images.githubusercontent.com/890576/106511245-981eeb80-6495-11eb-8e97-533aacc86f39.gif)

However, there are some serious limitations right now. The minor one is that I have to set `hv.streams.PointerXY.x = 0` and 
`hv.streams.PointerXY.y = 0` due to an error processing dictionaries when allowing the `None` default. While I'm sure this can be fixed, this seems to be a far more fundamental problem right now:

<img width=300 src=""https://user-images.githubusercontent.com/890576/106511103-6443c600-6495-11eb-9f20-3fe098324ebb.png""></img>

As operations use stream classes, not instances, how can I get back to the correct *class* with something like `Tap.param.x` when the owner of the parameter may be a superclass? The code needs to instantiate the correct stream instance. Any ideas @jbednar @philippjfr ?

If this can be solved quickly then I can work on this PR to get it into the next minor release. However, if this is a deeper issue (as I suspect it is) then this PR will need to wait for updates in param at the very least. Assuming this has a quick solution, the next steps would be:

- [x] Fix the dictionary keyword issue when the parameter values are initialized with `None`.
- [x] See if this dictionary support can be pushed further down into `Apply` and/or `Dynamic`.",6,18,[]
101,565407324,4817,19542768,2021-02-01 18:58:16,2021-02-01 22:04:13,closed,Handle isfinite for NumPy and Pandas masked arrays,Ensures isfinite works on masked arrays.,0,1,[]
102,565317388,4814,19542768,2021-02-01 16:32:18,2021-02-01 18:57:18,closed,Fix for none properties when cloning bokeh glyphs,,0,1,[]
103,565317290,4813,19542768,2021-02-01 16:32:09,2021-02-01 18:36:21,closed,Fixes for dask backed elements in plotting,,0,1,[]
104,565258886,4812,19542768,2021-02-01 15:12:08,2021-02-01 16:36:16,closed,Disable zoom on axis for geographic plots,,3,1,[]
105,565098353,4811,19542768,2021-02-01 11:19:38,2021-02-01 12:38:25,closed,Update various links on website,,0,1,[]
106,565085619,4810,19542768,2021-02-01 11:01:09,2021-02-01 15:06:34,closed,Fix test regressions after finite range changes,,0,10,[]
107,564695237,4809,19542768,2021-01-31 17:30:27,2021-01-31 17:57:27,closed,Further Bokeh 2.3 compatibility fixes,,0,2,[]
108,563207533,4806,19542768,2021-01-28 12:04:53,,open,Add automatic categorical legend for datashaded plots,"Inspects the pipeline of an RGB element and discovers the shade and rasterize operations used to generate an RGB to then automatically add a legend.

<img width=""1215"" alt=""Screen Shot 2021-01-28 at 1 04 12 PM"" src=""https://user-images.githubusercontent.com/1550771/106136282-5e827380-6169-11eb-8e1f-4f84fea2fefb.png"">

- [x] Clean up operation and factor out operations to traverse pipeline
- [x] Factor out code to render legend plot and use across all interfaces
- [ ] Update legend when needed
 ",7,10,[]
109,563160110,4805,19542768,2021-01-28 10:45:31,2021-01-28 14:22:58,closed,Bokeh 2.3 compatibility,"Fixes for Bokeh 2.3 compatibility:

- Ensure Renderer glyphs set to 'auto' are instantiated ",0,3,[]
110,561859725,4803,19542768,2021-01-26 15:26:10,2021-01-27 15:44:26,closed,Update for compatibility with dask>2020.12.0,In PR #4794 test failures were spotted that were fixed by pinning dask. We can now discuss this issue in this PR instead of that one.,3,4,[]
111,560443590,4798,19542768,2021-01-23 15:54:19,2021-01-26 15:13:39,closed,Add single value numpy array to HLine and VLine input,"This PR adds the ability to give a numpy array with a single value in it to HLine and VLine. 

Furthermore I renamed hline to vline in `test_vline_dimension_values`.",1,2,[]
112,558541814,4796,19542768,2021-01-20 21:28:40,2021-01-21 16:52:23,closed,Added inspect_points operation,This PR requires some of the fixes in https://github.com/holoviz/holoviews/pull/4792 and is essentially a way for me to continue work on https://github.com/holoviz/holoviews/pull/4794 until the aforementioned PR is merged.,1,2,[]
113,558450689,4795,19542768,2021-01-20 18:53:08,2021-01-20 22:10:54,closed,Ensure link_inputs parameter on operations is passed to apply,,1,1,[]
114,557792776,4794,19542768,2021-01-19 22:58:40,2021-01-27 18:20:46,closed,Added inspect_points datashader operation,"WIP.

Here is the example code

```python
import numpy as np
from spatialpandas.geometry import PointArray
from spatialpandas import GeoDataFrame
from holoviews.operation.datashader import rasterize, dynspread, inspect_sample
import holoviews as hv
hv.extension('bokeh')

def gaussian_df(specs=(1.5,0,1.0),num=10000):
    np.random.seed(1)
    xs, ys = np.random.normal(specs[0],specs[2],num), np.random.normal(specs[1],specs[2],num)
    return xs,ys

xs, ys = gaussian_df()
sdf = GeoDataFrame({'geometry':PointArray((xs, ys)),'id':list(range(len(xs)))})
rasterized = dynspread(rasterize(hv.Points(sdf)))
rasterized * inspect_sample(rasterized).opts(color='red', tools=['hover'], size=6)
```
![github1](https://user-images.githubusercontent.com/890576/105103986-14b5d100-5a77-11eb-8be2-d4f969a4d3e0.gif)

Getting tap behavior is as easy as adding `streams=[hv.streams.Tap]` to the operation:

![github1](https://user-images.githubusercontent.com/890576/105104121-4cbd1400-5a77-11eb-99db-d235dcefa84e.gif)

## TODO

- [x] Make sure vdims of original data are preserved for hover information
- [x] Find out why the initial render looks blank until a small zoom in/out occurs
- [x] Handle normal dataframes (getting the x/y from the raster kdims), geopandas, and spatially indexed spatialpandas dataframes.
- [x] Tests
- [ ] Documentation
",22,42,[]
115,557625971,4793,19542768,2021-01-19 18:28:09,,open,add lazy data doc for comments,"I have started a document for lazy data that @philippjfr and @jlstevens and I discussed awhile back.  I included a cell with Philipp's notes on what to include.  I think I need to include some examples, but I wanted to get feedback on what I have so far before I proceed.  ",6,3,[]
116,556206792,4792,19542768,2021-01-16 17:30:29,2021-01-21 15:12:59,closed,Support spatialpandas DaskGeoDataFrame,"Adds support for DaskGeoDataFrame to the SpatialpandasInterface.

- [x] Implements https://github.com/holoviz/holoviews/issues/4234
- [x] Add tests
- [x] Ensure all methods are handled",5,18,[]
117,554509574,4788,19542768,2021-01-13 22:01:29,2021-01-13 23:11:43,closed,Fix for change in coveralls client,Should fix the tests that have been failing on Python 3.,1,1,[]
118,554366015,4787,19542768,2021-01-13 18:03:19,2021-01-14 15:55:59,closed,Supporting streams parameter as a dictionary,"This implements an idea raised in https://github.com/holoviz/holoviews/issues/4781 which is to support dictionary values in the `streams` parameter. This currently works:

<img width=500 src=""https://user-images.githubusercontent.com/890576/104490825-fa6f8500-5596-11eb-9b56-77c19c0d1138.png""></img>

### TODO

- [x] Detect parameters from linked streams to set up bokeh callbacks.
- [x]  Support class parameters.
- [x] Unit tests
",12,14,[]
119,553617499,4785,19542768,2021-01-12 17:11:38,2021-01-12 20:07:35,closed,Check for nested dim dependencies,Propagates dependencies of dim arguments upwards so that all dependencies in the tree are reported.,0,1,[]
120,552358638,4783,19542768,2021-01-10 22:22:13,2021-01-11 19:19:13,closed,Fix broken geoviews link in Gridded_Datasets,,1,1,[]
121,551988236,4782,19542768,2021-01-08 22:16:51,2021-01-20 19:21:29,closed,Expanded on Tap Stream example in Reference Gallery,"Implementing Tap is something I struggle to get right every time. This is partially because the example is limited. In this PR I've added a little more detail and two simplified examples (one using Panel, one without). 

The additional examples came from [this](https://discourse.holoviz.org/t/example-of-using-holoviews-tapstream-with-panel/166) discourse discussion.",2,4,[]
122,547873019,4776,19542768,2021-01-03 12:37:19,2021-03-02 11:38:33,closed,Fixes for index based linked selections,"Fixes two issues with index based linked selections:

1. Ensures empty selection is not applied
2. Ensures that index cols are present on the selected element

Example:

```python
import hvplot.pandas
from holoviews.selection import link_selections
from bokeh.sampledata.autompg import autompg

scatter = autompg.hvplot.scatter('weight', 'accel')
table = autompg.hvplot.table()

link_selections(scatter + table, index_cols=['name', 'yr'])
```

<img width=""1285"" alt=""Screen Shot 2021-01-03 at 1 36 57 PM"" src=""https://user-images.githubusercontent.com/1550771/103478701-c80c9d80-4dc8-11eb-8856-c9e319ed909d.png"">
",2,4,[]
123,547785687,4775,19542768,2021-01-02 18:46:59,2021-02-04 12:08:09,closed,letters in front of plots – matplotlib,Add an explanation of the letters in front of multiple matplotlib plots. See: https://github.com/holoviz/holoviews/issues/4773,6,2,[]
124,547289256,4774,19542768,2020-12-31 08:27:06,2020-12-31 13:30:40,closed,"docs: fix simple typo, inupt -> input","There is a small typo in holoviews/plotting/plotly/util.py.

Should read `input` rather than `inupt`.


Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",1,1,[]
125,544324125,4770,19542768,2020-12-22 19:36:49,2020-12-22 20:30:53,closed,Fixes for coloring on adjoined Histograms,Both bokeh and matplotlib did not handle the condition where an adjoined histogram was added to a colormapped plot but the dimension of the histogram does not match the color dimension.,0,2,[]
126,544275400,4769,19542768,2020-12-22 17:56:19,2020-12-27 23:39:53,closed,Add CHANGELOG for v1.14.1,,0,2,[]
127,543520288,4766,19542768,2020-12-21 14:36:22,2020-12-21 14:38:42,closed,Updated badges in README.md,"Updated badges to point to GitHub Actions, not Travis.",4,1,[]
128,542156735,4764,19542768,2020-12-17 21:59:16,2020-12-22 19:04:04,closed,Clarified Points and Scatter notebooks,Fixes issue 1 from https://github.com/holoviz/holoviews/issues/4760 . Still need to address issue 2.,6,8,[]
129,541152456,4762,19542768,2020-12-16 13:06:50,2020-12-16 13:07:44,closed,Update to nbsite build adding interactivity warning,Small update to enable new nbsite feature (interactivity warning). I'll merge right away as it is a very small change and then trigger a dev doc build.,0,1,[]
130,540394685,4758,19542768,2020-12-15 16:45:32,2020-12-15 19:25:51,closed,Fix issues with linked selections on tables,Fixes https://github.com/holoviz/holoviews/issues/4671,0,3,[]
131,540383690,4757,19542768,2020-12-15 16:37:43,2020-12-15 19:25:40,closed,Fix Heatmap alpha dimension transform,Fixes https://github.com/holoviz/holoviews/issues/4673,0,4,[]
132,540352504,4756,19542768,2020-12-15 15:54:28,2020-12-15 16:47:48,closed,Do not drop tools in linked selections,Fixes https://github.com/holoviz/holoviews/issues/4750,0,2,[]
133,537967885,4749,19542768,2020-12-12 09:54:14,2020-12-12 16:15:11,closed,add missing '.html' in doc/reference_manual/index.rst,Small fix for https://github.com/holoviz/holoviews/issues/4746,0,1,[]
134,535292781,4744,19542768,2020-12-09 16:13:28,2020-12-09 19:30:33,closed,Fixed overspecified version statement with regard to Python 2 support,"Minor but potentially important fix to the docs.

Reflects a direct fix I made the the HTML file on S3 (https://s3-eu-west-1.amazonaws.com/holoviews.org/releases.html)",1,1,[]
135,534297215,4742,19542768,2020-12-08 09:05:51,2020-12-15 15:40:02,closed,Fix for AttributeError in _compute_group_range for linked plots,"After an update, previously working code produced `AttributeError: 'tuple' object has no attribute 'get'` exceptions.

Code to reproduce:
```python
import numpy as np
import holoviews as hv
from holoviews.selection import link_selections
import panel as pn

hv.extension('bokeh')

data = np.random.random((1000, 100))
scatter = hv.Scatter(data)
link = link_selections.instance()
example = link(scatter + scatter)

pn.serve(example)
``` 

In the plot, select a region in one of the linked plots, then the following exception will occur. It will also directly occur, if the plots are datashaded:
``` 
Traceback (most recent call last):
  File ""site-packages/tornado/ioloop.py"", line 741, in _run_callback
    ret = callback()
  File ""site-packages/tornado/ioloop.py"", line 765, in _discard_future_result
    future.result()
  File ""site-packages/bokeh/server/session.py"", line 71, in _needs_document_lock_wrapper
    result = await result
  File ""site-packages/tornado/gen.py"", line 216, in wrapper
    result = ctx_run(func, *args, **kwargs)
  File ""holoviews/holoviews/plotting/bokeh/callbacks.py"", line 466, in process_on_event
    self.on_msg(msg)
  File ""holoviews/holoviews/plotting/bokeh/callbacks.py"", line 163, in on_msg
    raise e
  File ""holoviews/holoviews/plotting/bokeh/callbacks.py"", line 155, in on_msg
    Stream.trigger(streams)
  File ""holoviews/holoviews/streams.py"", line 171, in trigger
    subscriber(**dict(union))
  File ""holoviews/holoviews/streams.py"", line 834, in perform_update
    self.event()
  File ""holoviews/holoviews/streams.py"", line 415, in event
    self.trigger([self])
  File ""holoviews/holoviews/streams.py"", line 171, in trigger
    subscriber(**dict(union))
  File ""holoviews/holoviews/streams.py"", line 919, in perform_update
    self.event()
  File ""holoviews/holoviews/streams.py"", line 415, in event
    self.trigger([self])
  File ""holoviews/holoviews/streams.py"", line 171, in trigger
    subscriber(**dict(union))
  File ""holoviews/holoviews/streams.py"", line 834, in perform_update
    self.event()
  File ""holoviews/holoviews/streams.py"", line 415, in event
    self.trigger([self])
  File ""holoviews/holoviews/streams.py"", line 171, in trigger
    subscriber(**dict(union))
  File ""holoviews/holoviews/plotting/plot.py"", line 244, in refresh
    raise e
  File ""holoviews/holoviews/plotting/plot.py"", line 240, in refresh
    self._trigger_refresh(stream_key)
  File ""holoviews/holoviews/plotting/plot.py"", line 257, in _trigger_refresh
    self.update(key)
  File ""holoviews/holoviews/plotting/plot.py"", line 981, in update
    item = self.__getitem__(key)
  File ""holoviews/holoviews/plotting/plot.py"", line 446, in __getitem__
    self.update_frame(frame)
  File ""holoviews/holoviews/plotting/bokeh/element.py"", line 2388, in update_frame
    ranges = self.compute_ranges(range_obj, key, ranges)
  File ""holoviews/holoviews/plotting/plot.py"", line 638, in compute_ranges
    self._compute_group_range(group, elements, ranges, framewise,
  File ""holoviews/holoviews/plotting/plot.py"", line 873, in _compute_group_range
    ids = values.get('id')
AttributeError: 'tuple' object has no attribute 'get'
``` 

Even without working myself thru the whole code, the offending line looks slightly misplaced:
https://github.com/holoviz/holoviews/blob/39738bc078959c6fc58f940ae0f905ae962a568d/holoviews/plotting/plot.py#L873
Accessing `values` here looks misplaced, which might be `None`, and an `if`-statement taking care of the case that `values` is `None` (which can currently not reached since the access to `.get(...)` would error in case `values` being `None`.

By moving the access past the check, and letting the `if` handle the `tuple` case as well, the problem seems solved and the plots are apparently working as desired, however probably someone with more in-depth knowledge of the `DimensionedPlot._compute_group_range`-function should check if this properly solves the handling.
",1,1,[]
136,531847263,4737,19542768,2020-12-03 15:06:40,2020-12-03 15:06:52,closed,Fix build conditions,,0,1,[]
137,531733480,4736,19542768,2020-12-03 12:11:30,2020-12-03 12:36:55,closed,Avoid matplotlib deprecation warning about vmin/vmax,,1,1,[]
138,531689603,4735,19542768,2020-12-03 10:54:42,2020-12-03 13:38:32,closed,Build packages on GH Actions,,0,9,[]
139,531220553,4733,19542768,2020-12-02 18:49:13,2020-12-02 18:56:11,closed,Fix Arrow fontsize default,,1,1,[]
140,531215006,4732,19542768,2020-12-02 18:41:41,2020-12-02 18:55:31,closed,Normalizing PIL integer data to unit range,This is needed for compatibility with the old matplotlib approach.,0,1,[]
141,531211394,4731,19542768,2020-12-02 18:36:59,2020-12-02 18:37:37,closed,"Revert ""Fix RGB.load_image range""",Reverts holoviz/holoviews#4729,0,1,[]
142,531206279,4730,19542768,2020-12-02 18:27:46,2020-12-02 19:27:14,closed,Drop pipeline and transforms from pickle state,,1,2,[]
143,531202510,4729,19542768,2020-12-02 18:20:33,2020-12-02 18:28:13,closed,Fix RGB.load_image range,,2,1,[]
144,531180212,4728,19542768,2020-12-02 17:38:59,2020-12-02 21:53:41,closed,Move doc builds to GH Actions,,0,13,[]
145,531007077,4727,19542768,2020-12-02 13:11:37,2020-12-02 13:13:09,closed,Fix coloring by count on SideHistogramPlot,,1,1,[]
146,530968897,4726,19542768,2020-12-02 12:03:17,2020-12-02 12:19:19,closed,Fix for inplace dtype multiplication issue,Simple fix to address inplace int/float multiplication issue in `SideHistogram`.,1,1,[]
147,530936610,4725,19542768,2020-12-02 11:04:52,2020-12-02 11:36:47,closed,Sanitize tile_sources listing,The `lon_lat_to_easting_northing` and `easting_northing_to_lon_lat` utilities were being picked up by `locals` and dumped into the `tile_sources` dictionary causing errors (caught by the tests running the reference notebooks which don't seem to be run by GH Actions just yet).,2,1,[]
148,530917313,4724,19542768,2020-12-02 10:33:48,2020-12-02 15:05:53,closed,Fix range calculation in framewise/axiswise configuration,"This fixes a bug related to range calculations but only partially. The problematic situation is that when a stream triggers an update we only recompute the particular subplot(s) that are driven by that stream. This messes with range calculations because those work across plots and we have no way to update the overall range without triggering the range calculation at the top level plot. 

This PR fixes the situation where both axiswise and framewise are set because in that situation we do not have to recompute across all plots. However `framewise=True, axiswise=False` is still a problem and the only idea I have to address the problem is for top level plots to pass all the individual ranges from each element down to each subplot so that they can recompute the overall ranges by simply updating the ranges of the elements that are being updated. That is definitely more effort though.",6,7,[]
149,530798422,4723,19542768,2020-12-02 06:57:35,2020-12-02 17:07:51,closed,Updated Large Data,"As mentioned in https://github.com/holoviz/holoviews/pull/4567, the Large Data notebook still needed a bit of work. I've done that in this PR, but there are a few problems:

- [x] 1. For `decimate(points) + rasterize(points) + rasterize(paths)`, even if I leave off `+ rasterize(paths)`, the colormapping behavior of `rasterize(points)` differs when `decimate(points)` is included. Without `decimate(points)`, the behavior looks reasonable, with colors rescaling to cover the full colormap at each zoom level. With `decimate(points)` in the layout, zooming makes the rasterized data get very light. Why should `decimate` affect a rasterized plot in any way?
- [x] 2. The example in Colormapping using `clim` does not currently show what it purports to show; both plots shown behave the same on zoom and pan; the one with clim defined doesn't do anything different. This is a new example, but I couldn't get the previous Image-based example to work with rasterize() either, even when I forced the z axis to have a different Dimension name, so I don't think it's specific to this example. I don't actually know how to change the x_y Count dimension names, but I assume that won't help since it didn't in the original example. It could still be me doing something wrong, though. In the old example, the colormap rescaled properly on each individual plot, just not when in a layout. On this version, the colormap seems fixed regardless of viewport, which is confusing me. Once it works, it would presumably need a GIF to illustrate it.
- [x] 3. The `xlim=(0.1,0.2), ylim=(0.1,0.2)))` example also presumably needs a gif, as the static website export will otherwise be broken.
- [x] 4. The nodata=None illustration is not working; both plots are identical. Again, am I doing something wrong?
- [x] 5. I haven't tested Large_Data with released versions of Bokeh; does it work reasonably when the new colorbar ticking is not available?
- [x] 6. Is it really `clim` on Bokeh and `clims` on the mpl backend and on shade()? Damn.
- [x] 7. The padding settings don't look right, in the comparison between datashaded and native (mpl) hv plots. Shouldn't there be padding for datashaded non-gridded types, just as for the corresponding non-datashaded non-gridded types (Path, Points, etc.)? 
- [x] 8. And shouldn't padding be 0 for non-datashaded Contour plots? The gap looks bad in regular hv plots; the datashaded ones look much better. In any case, can we make the padding behave the same whether or not we use rasterize?

![image](https://user-images.githubusercontent.com/1695496/100838857-d584df80-3438-11eb-8fad-ba3d39699ff9.png)
![image](https://user-images.githubusercontent.com/1695496/100838877-df0e4780-3438-11eb-81d9-eb91e30b5848.png)
",9,6,[]
150,530616867,4721,19542768,2020-12-01 22:34:23,2020-12-01 23:50:05,closed,Fixed i.e. and e.g. ,Were often misspelled as i.e and e.g .,1,2,[]
151,530388604,4719,19542768,2020-12-01 15:33:51,2020-12-01 16:53:02,closed,Allow supplying named cmap to (data)shade,,0,1,[]
152,530356763,4718,19542768,2020-12-01 14:47:46,2020-12-01 15:10:48,closed,Update path to coveralls badge,The path to the coveralls badge was broken. This updates it. I'm not sure why its showing 0% but I think that's a separate issue?,0,1,[]
153,529814270,4717,19542768,2020-11-30 21:13:08,2020-11-30 21:27:17,closed,Add to_dash use_ranges argument,"Quick option needed to allow Dash to optionally take over all figure autoranging
calculations.

Needed to get https://holoviews.org/reference/streams/plotly/Bounds.html autoranging properly
as the histograms change heights.",1,1,[]
154,529811150,4716,19542768,2020-11-30 21:06:17,2020-12-02 00:41:21,closed,Release notes for version 1.14.0,"Some PRs are still not merged (mainly the cnorm PR) which means the following need to be mentioned:

- [x] Improved support for rasterized elements with cnorm plot option and nodata options
- [x] Updated colormap defaults for charts (`Points`, `Scatter` and maybe `Path`)

@jbednar @philippjfr is there anything important I missed?",1,8,[]
155,529800258,4715,19542768,2020-11-30 20:43:48,,open,[WIP] add macos 3.7,,5,4,[]
156,529709700,4713,19542768,2020-11-30 17:48:20,2020-11-30 19:00:33,closed,Allow the Tiles data argument to be None.,"This way, the plotly backend can call `Tiles()` without a dummy empty string when using mapbox.

The bokeh backend updated to raise an explicit error message if a URL data is not provided.",0,1,[]
157,529624897,4712,19542768,2020-11-30 15:27:49,2020-11-30 19:27:15,closed,Implement support for robust color limits,Implement https://github.com/holoviz/holoviews/issues/4680,1,7,[]
158,529595950,4711,19542768,2020-11-30 14:43:25,2020-11-30 15:52:05,closed,Ensure pandas does not convert to UTC,Fixes https://github.com/holoviz/holoviews/issues/4526,0,2,[]
159,529586345,4710,19542768,2020-11-30 14:28:17,2020-11-30 19:00:49,closed,Disabling multiple kdims on Charts,"Tiny PR to see whether setting `bounds=(1,1)` on `Chart.kdims` passes the tests, addressing https://github.com/holoviz/holoviews/issues/1668. Note that `Bars.kdims` still has `bounds=(1,3)`.",2,2,[]
160,528263637,4707,19542768,2020-11-26 20:54:08,,open,update sankey algorithm to d3-sankey-v0.12.3,Closes #3548 ,13,10,[]
161,528166631,4706,19542768,2020-11-26 16:06:37,2020-11-26 17:26:07,closed,Make Dash and HoloViews autorange play nice,"Fix to make HoloViews and Dash autorange play nice.

Before, Dash was ignoring the HoloViews range specification so that it would run its own autorange calculation.

Now, the HoloViews range/autorange specification is used on initial render, but plotly/dash take over after that to handle zoom/pan events. ",0,1,[]
162,528106541,4705,19542768,2020-11-26 14:20:02,2020-11-26 16:07:23,closed,Fix datashader instability by disabling plot padding for Plotly RGB elements.,"The introduction of plot padding last release broke the default behavior of using `datashade` with the plotly backend in the notebook.  It resulted in the plot continually zooming out and crashing the kernel.

This  simple (and I think appropriate) fix is to disable padding, by default, for the RGB elements with the plotly backend. Even apart from datashader, I think zero padding is a better default for RGB images as it's a bit awkward for there to be an empty border around them.",2,2,[]
163,528079149,4704,19542768,2020-11-26 13:31:11,2020-11-26 17:26:53,closed,"Add ""width"" and ""height"" responsive options to to_dash","Expanded the `responsive` option in `to_dash` to include (and default) to the common case of being able to control the figure height with the HoloViews `.opts(height=N)` option, but fill container width responsively.
",0,1,[]
164,527669456,4702,19542768,2020-11-25 20:09:37,2020-11-26 22:40:46,closed,Fixed Delaunay misspelling,Fixed typo in attribute name.,0,1,[]
165,527382871,4701,19542768,2020-11-25 11:37:53,2020-11-25 13:04:38,closed,Implement datashader aggregation of Rectangles,"Implements https://github.com/holoviz/holoviews/issues/4699

As an example here are 1M OHLC candles:

![OHLC](https://user-images.githubusercontent.com/1550771/100222870-01750200-2f1b-11eb-91d5-4cc09321e6d2.gif)
",0,4,[]
166,524988352,4697,19542768,2020-11-20 22:33:44,2020-11-23 10:34:00,closed,Don't auto-import ibis,"Ibis was being auto-imported, causing an import error when using HoloViews without ibis installed.",1,1,[]
167,524934490,4696,19542768,2020-11-20 20:27:42,2020-11-28 12:28:16,closed,"Add ibis count/count_nonzero aggregations, fix rowid handling","This PR evolved a bit, here is what's currently included:
 - Add support for `len` and `np.count_nonzero` aggregation functions.
 - New test case covering aggregation functions.
 - Fixes to activate rowid-based operations with ibis 1.4.0.
 - Fixes to handle one vs zeros indexed rowids in OmniSci db vs SQLite.

----

**Original Description:**

This adds support for count aggregations using the `ibis` interface by mapping the python `len` function to `ibis.expr.operations.Count`.  Let me know if there's a better way to model this, but `len` is what I use with other interfaces to do a count aggregation.

I added a test to loop through the the aggregations, but there were issues with a few of them (which are commented out):

 - `cumsum` fails, and that actually makes sense to be since this doesn't produce a scalar value
 - all of the variance based operations fail in ibis. Here's a stack trace:

```
Traceback (most recent call last):
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1277, in _execute_context
    cursor, statement, parameters, context
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/default.py"", line 593, in do_execute
    cursor.execute(statement, parameters)
sqlite3.OperationalError: user-defined aggregate's 'finalize' method raised error
The above exception was the direct cause of the following exception:
Traceback (most recent call last):
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/IPython/core/interactiveshell.py"", line 3418, in run_code
    exec(code_obj, self.user_global_ns, self.user_ns)
  File ""<ipython-input-1-433657610532>"", line 1, in <module>
    result.dframe()
  File ""/home/jmmease/PyDev/repos/holoviews/holoviews/core/data/__init__.py"", line 184, in pipelined_fn
    result = method_fn(*args, **kwargs)
  File ""/home/jmmease/PyDev/repos/holoviews/holoviews/core/data/__init__.py"", line 1108, in dframe
    df = self.interface.dframe(self, dimensions)
  File ""/home/jmmease/PyDev/repos/holoviews/holoviews/core/data/interface.py"", line 42, in cached
    return method(*args, **kwargs)
  File ""/home/jmmease/PyDev/repos/holoviews/holoviews/core/data/ibis.py"", line 418, in dframe
    return dataset.data[dimensions].execute()
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/expr/types.py"", line 202, in execute
    return execute(self, limit=limit, params=params, **kwargs)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/client.py"", line 352, in execute
    return backend.execute(expr, limit=limit, params=params, **kwargs)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/client.py"", line 215, in execute
    result = self._execute_query(query_ast, **kwargs)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/client.py"", line 220, in _execute_query
    return query.execute()
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/client.py"", line 54, in execute
    self.compiled_sql, results=True, **kwargs
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/ibis/sql/alchemy.py"", line 1212, in _execute
    return AlchemyProxy(self.con.execute(query))
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 2235, in execute
    return connection.execute(statement, *multiparams, **params)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1011, in execute
    return meth(self, multiparams, params)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/sql/elements.py"", line 298, in _execute_on_connection
    return connection._execute_clauseelement(self, multiparams, params)
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1130, in _execute_clauseelement
    distilled_params,
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1317, in _execute_context
    e, statement, parameters, cursor, context
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1511, in _handle_dbapi_exception
    sqlalchemy_exception, with_traceback=exc_info[2], from_=e
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/util/compat.py"", line 182, in raise_
    raise exception
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/base.py"", line 1277, in _execute_context
    cursor, statement, parameters, context
  File ""/home/jmmease/anaconda3/envs/holoviews_dev/lib/python3.7/site-packages/sqlalchemy/engine/default.py"", line 593, in do_execute
    cursor.execute(statement, parameters)
sqlalchemy.exc.OperationalError: (sqlite3.OperationalError) user-defined aggregate's 'finalize' method raised error
[SQL: SELECT t0.""Gender"", t0.""Weight"", t0.""Height"" 
FROM (SELECT t1.""Gender"" AS ""Gender"", _ibis_sqlite_sqrt(_ibis_sqlite_var_samp(t1.""Height"")) AS ""Height"", _ibis_sqlite_sqrt(_ibis_sqlite_var_samp(t1.""Weight"")) AS ""Weight"" 
FROM (SELECT t2.""Gender"" AS ""Gender"", t2.""Weight"" AS ""Weight"", t2.""Height"" AS ""Height"" 
FROM base.hetero AS t2) AS t1 GROUP BY t1.""Gender"" ORDER BY t1.""Gender"") AS t0
 LIMIT ? OFFSET ?]
[parameters: (10000, 0)]
(Background on this error at: http://sqlalche.me/e/13/e3q8)
```

",12,12,[]
168,524868812,4695,19542768,2020-11-20 18:01:15,2020-11-23 19:01:51,closed,Fix various issues related to data interfaces,"- `DaskInterface.persiste`was a typo
- The fix for masking on linked selections ensures that cuDFs don't error due to dropping to an array type rather than keeping the series type.",3,2,['type: bug']
169,524734820,4694,19542768,2020-11-20 14:17:03,2020-11-20 16:29:24,closed,Dash updates / fixes,"A few misc. fixes / updates to Dash logic:
 - Support `responsive` argument to change whether the figure width/height from HoloViews is hard-coded or whether the figures grow to fill their containers (the default)
 - Support customizing the dash Button component for compatibility third-party components.
 - Don't regenerate figures in response to Dash events that don't change any of the stream values. This avoids regenerating all figures when switching the active toolbar tool.",0,5,[]
170,524689745,4693,19542768,2020-11-20 12:59:03,2020-11-23 11:59:09,closed,Fix handling of custom matplotlib and bokeh colormaps,"Two issues compounded causing our default 'fire' cmap to invert in recent releases. In particular recent versions of matplotlib changed how to look up colormaps and we had to adapt, however in doing so we were no longer picking up custom matplotlib colormaps (such as the fire cmap we were registering), which caused us to fall back to using the bokeh 'fire' palette. The issue there was that we had custom handling to invert non-matplotlib based bokeh palettes, because those are generally stored in reverse order, but since 'fire' in particular was stored in the correct order it was incorrectly inversed.

Fixes #4635 ",2,7,[]
171,524012395,4691,19542768,2020-11-19 14:55:56,2020-11-19 16:24:19,closed,Dask/cudf histogram fixes,"This PR has two small fixes for displaying histograms using dask and cudf.

 - First, the plotly histogram plot was passing Dask arrays into the Plotly Figure dictionary which plotly.py doesn't handle.
 - Second, the histogram operation code was still using the deprecated `normed` argument in one place. Numpy still supports this with a runtime deprecation warning, but cupy doesn't. The replacement is the `density` kwarg, which we were already using several places in the same function so I don't think backward compatibility should be affected at all. Also, the `normed` kwarg has been deprecated in numpy for a long time now (since 1.6.0)

Do these make sense @philippjfr ?",3,3,[]
172,523285245,4690,19542768,2020-11-18 15:55:13,2020-11-19 00:55:16,closed,Fix mysterious id_offset bug,"Can't explain the bug but this should fix it:

```
  File ""C:\Miniconda3\envs\test-environment\lib\site-packages\holoviews\core\options.py"", line 1751, in id_offset
    max_id = max(store_ids)+1 if len(store_ids) > 0 else 0
ValueError: max() arg is an empty sequence
```",0,1,[]
173,523070510,4689,19542768,2020-11-18 10:12:02,2020-11-18 10:29:11,closed,Fixed range calculation on HexTiles,,0,1,[]
174,522369644,4688,19542768,2020-11-17 12:24:04,2020-11-17 13:06:05,closed,Switch to conda-incubator in GH Actions,,0,1,[]
175,521833246,4687,19542768,2020-11-16 17:59:12,2020-11-16 20:58:30,closed,Fix cuDF values implementation,"`to_array()` seems to return the wrong data in some cases, `values_host` behaves better.",0,2,[]
176,521276023,4686,19542768,2020-11-15 23:10:21,2020-11-18 11:28:52,closed,Plotly map tiles support,"## Overviews
This PR enhances the plotly backend with full support for the `holoviews.Tiles` element for displaying maps.

cc @philippjfr @jlstevens @jbednar 

## Features
 - `holoviews.Tiles` element that can display raster maps from a tile server (like the Bokeh backend) or vector tiles maps from the Mapbox service.  Vector tiles from mapbox require a free account with mapbox.com and a user token, but no account or token is required otherwise.

 - Many elements can be overlayed on top of `Tiles` including: `Scatter`, `Points`, `Curve`, `Labels`, `RGB`, `Path`, `Rectangles`, `Bounds`, and `Segments`.

 - The `Range*`, `Bounds*`, and `Selection1d` streams are all supported for traces overlayed on top of `Tiles`.

 - As a consequence of this feature set, `datashader` and `link_selections` both work on elements overlayed on `Tiles`.

 - A new pair of static methods were added to `Tiles` class for converting between lat/lon coordinates and pseudo-Mercator coordinates: `Tiles.lon_lat_to_easting_northing` and `Tiles.easting_northing_to_lon_lat`

 - All of this works with the new Dash support.

 - I added a simple `Tiles` documentation page that matches the Bokeh version, but includes a small section on the vector tiles support.  I plan to add a few examples to the Dash HoloViews docs PR once this is released.

## Challenges
For posterity, here are a few of the challenges I ran into, all a consequence of how plotly.js relies on Mapbox for mapping support:

 - While Mapbox displays maps in the same pseudo-Mercator coordinate system as Bokeh, accepts and returns coordinate in the longitude, latitude coordinate system.  For consistency with the current paradigm, the external interface works with pseudo-Mercator and conversions are done internally in all interactions with plotly.js.

 - Plotly has a separate set of traces for display on top of mapbox layers. So the trace used to draw a line on a map is not the same trace as is used to draw a regular 2D line. Same for lines, text, images, etc.  To make this work with the HoloViews paradigm, many of the plotly plot classes were updated to be able to render themselves either to a 2D Cartesian coordinates, or on top of a mapbox map layer.  This geo mode is activated automatically whenever a geo-supported element is overlayed with a `Tiles` element.  An error is raised on render if an element without geo support is overlayed with a `Tiles` element.

 - Similarly to above, the zoom/pan/selection events emitted by Plotly.js are different for mapbox subplots than regular 2D Cartesian subplots, and they operate in lat/lon coordinates.  So the Plotly callback classes were all updated to handle the mapbox case as well as the Cartesian subplot case.

In the end, I think it all worked out pretty well and the user experience shouldn't be any more complicated than when using the Bokeh backend.

## Screenshots

### All built-in raster tile maps

![Screenshot_20201115_175756](https://user-images.githubusercontent.com/15064365/99199305-21aeff00-276c-11eb-9183-e834c018067d.png)


### `datashader` and `link_selections` over vector tile layer

![plotly_holoviews_map_datashader_link_selections](https://user-images.githubusercontent.com/15064365/99199266-ce3cb100-276b-11eb-805e-f04c6f372384.gif)

## Relationship to other PRs

For testing purposes, this PR contains the changes in https://github.com/holoviz/holoviews/pull/4683#issuecomment-727236514. I'll merge master to fix the conflicts once that one is merged.

I fixed a bug in plotly.js that caused RGB image layers to be pushed behind raster layers. https://github.com/plotly/plotly.js/pull/5269.  Until this fix is released, datashader can only really be used on top of the mapbox vector tile layers. After the fix is released in plotly.js, it will also work properly on top of raster tile layers.

## TODO
 - [x] Python 2.7 compatibility
 - [x] Visually inspect geo elements that cross the date boundary to confirm whether mapbox handles the wraparound internally.",16,18,[]
177,520891509,4683,19542768,2020-11-13 22:58:55,2020-11-17 10:12:54,closed,Support link_selections on dynamic overlays,"This PR adds support for performing `link_selections` on DynamicMaps that are the result of performing the `__mul__` operator on one or more DynamicMap layers.

This came up when trying to use `link_selections` and datashader together on top of a `Tiles` element.

e.g.
```python
link_selections(tiles * datashade(...))
```

The result of  `tiles * datashade(...)` is a `DynamicMap` that returns an `Overlay`. Previously we skipped these in `link_selections` because it's not possible to accurately recurse in the general case.

This PR handles only the very common case of DynamicMaps generated by the `__mul__` operator.
",25,3,[]
178,520135491,4682,19542768,2020-11-12 20:19:41,2020-11-14 18:45:34,closed,Update 1-Introduction.ipynb,Update external hyperlinks,0,2,[]
179,518636731,4677,19542768,2020-11-10 17:08:31,2020-11-16 20:57:03,closed,Allow clashing param stream names,There are many scenarios where you might depend on multiple Parameterized methods with the same dependencies. This allows such scenarios by allowing Params stream contents to clash in general. Since they are fully qualified I don't see any harm in doing this.,0,4,[]
180,513504274,4672,19542768,2020-10-31 22:11:14,2020-10-31 23:04:34,closed,Fix releases urls,Fixes releases.rst urls for version 1.13.5,1,1,[]
181,510764151,4665,19542768,2020-10-27 13:43:46,2020-11-30 15:31:47,closed,Inverted axes fixes for raster plots,Fix https://github.com/holoviz/holoviews/issues/4052,0,1,[]
182,509574068,4661,19542768,2020-10-25 11:06:02,2020-10-26 08:37:38,closed,Drop lasso and index selection streams from Selection1DExpr elements,Elements which only support selection on one axis do not require Lasso and Selection1D (i.e. index selection) streams.,0,6,[]
183,509049538,4660,19542768,2020-10-23 15:38:15,2020-10-23 16:16:45,closed,Attempt to fix py3 tests,,0,4,[]
184,509032905,4659,19542768,2020-10-23 15:14:34,2020-10-23 15:52:41,closed,Fix issues selecting and values function on cuDFInterface,Fixes a number of issues applying selections and errors returning string arrays on cuDFs.,0,1,[]
185,508948752,4658,19542768,2020-10-23 12:57:31,2020-10-23 15:52:29,closed,Version 1.13.5 release notes,Now I'll update releases.rst by converting the markdown with pandoc.,2,5,[]
186,508329159,4656,19542768,2020-10-22 14:20:44,2020-10-23 11:33:28,closed,update Bars example to demo dataframe constructor,"Updates the Bars example to demo dataframe constructor

I've struggled with creating Bars plots in the past. For this example, it turns out it was really easy to switch to dataframes. I thought it would be a better upgrade, but I'll submit it anyway. 

I'm not sure what aspect I struggled with before (maybe I missed the aggregate step?). If I can get a better reproducible example, I'll create a new PR. ",1,3,['tag: docs']
187,507831377,4654,19542768,2020-10-21 20:02:58,2020-10-23 11:32:40,closed,Fix bug resetting ranges,Fix https://github.com/holoviz/holoviews/issues/4653,0,2,[]
188,505563770,4650,19542768,2020-10-18 21:15:50,2020-10-18 22:02:13,closed,Ensure consistent split Violin color assignment,"For split Violins color assignment was not deterministic, this PR makes it so.",0,1,[]
189,505509486,4649,19542768,2020-10-18 17:31:11,2020-10-18 21:14:06,closed,Fix bug matching elements to subplots in DynamicMap,"This fixes a longstanding bug in Overlay plots driven by a DynamicMap. The problem was that the code tried to assign subplots to elements that matched their spec, however each subplot would do this greedily so if a better match comes along later in the iteration then the plot would already have been assigned. This PR checks whether an exact match does exist and if it does it uses that instead.",0,5,[]
190,503346266,4647,19542768,2020-10-14 12:44:10,2020-10-15 21:24:20,closed,Update plotly Bar tests to account for padding,,0,3,[]
191,502807428,4646,19542768,2020-10-13 20:33:53,2020-10-23 11:34:03,closed,copy index values to host for iteration,"cc @philippjfr @jlstevens 

This PR adds some missing `.values_host` calls necessary on cudf indices before iteration. It fixes the following broken tests:

```
FAILED holoviews/tests/core/data/testcudfinterface.py::cuDFInterfaceTests::test_dataset_1D_reduce_hm - AttributeError: 'StringIndex' object has no attribute 'value_host'
FAILED holoviews/tests/core/data/testcudfinterface.py::cuDFInterfaceTests::test_dataset_1D_reduce_hm_alias - AttributeError: 'StringIndex' object has no attribute 'value_host'
FAILED holoviews/tests/core/data/testcudfinterface.py::cuDFInterfaceTests::test_dataset_1D_reduce_ht - AttributeError: 'StringIndex' object has no attribute 'value_host'
FAILED holoviews/tests/core/data/testcudfinterface.py::cuDFInterfaceTests::test_dataset_2D_reduce_hm - AttributeError: 'StringIndex' object has no attribute 'value_host'
FAILED holoviews/tests/core/data/testcudfinterface.py::cuDFInterfaceTests::test_dataset_2D_reduce_ht - AttributeError: 'StringIndex' object has no attribute 'value_host'
```",5,1,[]
192,502615764,4644,19542768,2020-10-13 17:36:37,2020-10-15 21:24:43,closed,Ensure PolyDrawCallback always has vdim data,HoloViews tries to avoid sending data to the frontend if it knows that data isn't going to be used. This would usually go unnoticed but when attaching a CDS stream it can be the case that the data gets updated and now the `vdims` will be missing. A user that is relying on all the data from an element to be available will now get unexpected errors because that data is missing. This simply ensures that if the data is missing it is added on the Python side before the user sees it.,1,3,[]
193,502132222,4643,19542768,2020-10-13 09:22:14,2020-10-23 13:12:04,closed,Implement index based selection in linked brushing,"There appears to have been a regression where `index_cols` was no longer being passed through so that didn't work at all (have to add some tests here). However additionally this also adds support for using the tap tool alongside the lasso and box select tools when `index_cols` are provided.

Implements https://github.com/holoviz/holoviews/issues/4642

ToDo:

- [ ] Write tests for index_cols examples
- [x] Solve problem of both the Selection1D and Lasso/BoundsXY stream triggering on box/lasso select. If we already have the index computed in JS we don't have to do the reverse mapping, from box/lasso -> index selection in Python but currently it's doing both. This also has the benefit that you'll be able to do lasso select without spatialpandas/geopandas as long as you specify `index_cols`.

@jonmmease please review",1,5,[]
194,497125743,4641,19542768,2020-10-02 20:41:23,2020-10-04 19:32:36,closed,Added selected parameter to Bokeh PathPlot,Looks like `PathPlot` was forgotten when the `selected` parameter was added to the Bokeh backend. This PR aims addresses this small oversight.,1,1,[]
195,495453354,4639,19542768,2020-09-30 11:52:12,2020-11-30 15:56:57,closed,Use PIL for RGB.load_image,Switches to using PIL for `RGB.load_image` and adds proper docstring. `plt.imread` leaked memory the way it was used and using PIL directly eliminates an unnecessary dependency on matplotlib here.,3,2,[]
196,494702182,4637,19542768,2020-09-29 09:45:56,2020-09-29 10:06:51,closed,Set default align in bokeh correctly,Fixes https://github.com/bokeh/bokeh/issues/10535 which was causing incompatibility with bokeh 2.3.0dev,0,1,[]
197,494027200,4634,19542768,2020-09-28 09:58:25,2020-09-28 12:22:31,closed,Improve handling of categorical dtypes on empty arrays,"An empty array of string types was not treated correctly for categorical colormapping for various reasons:

- The dtype was dropped in the range calculation
- An explicit colormapping is treated as ground truth for factors and forces categorical colormapping",1,6,[]
198,492511296,4631,19542768,2020-09-24 15:01:59,2020-09-25 10:56:15,closed,Fixed deserialization of polygon/multi_line CDS data in bokeh,Fixes https://github.com/holoviz/holoviews/issues/4626,1,1,[]
199,491201816,4628,19542768,2020-09-22 21:20:58,2020-09-24 16:00:36,closed,Fixes for various small docs and messages issues,Mostly trivial...,2,5,[]
200,490479356,4624,19542768,2020-09-21 18:24:45,2020-09-24 15:18:21,closed,CuDF Series is not iterable,"@philippjfr This is a fix for https://github.com/holoviz/hvplot/issues/510 (which should probably be copied to this repo)

Summary: `.unique()` returns a CuDF Series, which is not iterable unless copied to host. 

No tests as of yet (looking in to GPU CI options)",2,1,[]
201,489166181,4623,19542768,2020-09-18 08:38:19,2020-11-28 17:43:54,closed,Remove pytest as an explicit dependency,"pytest is currently an indirect dependency (comes from nbsmoke).

* Using pytest in place of nose is WIP (#4621), so it makes sense to add it back in that PR, but there should be no need to pin pytest.
* Have removed pytest-cov, as I guess it's unused (not totally certain though, and measuring coverage from notebook runs would be good - should add that; #4622). Again, it could come back in #4621 when pytest is used instead of nose.",0,1,[]
202,488932327,4621,19542768,2020-09-17 21:06:32,2020-11-28 13:45:33,closed,Remove the last remainders of use of nose.,"It is completely unnecessary to pull in particularly nose, when pytest works as well.",12,1,[]
203,488930980,4620,19542768,2020-09-17 21:03:30,2020-11-28 13:40:00,closed,Remove all use of cyordereddict.,It is obsolete and even its upstream declares that the OrderedDict in the standard library is superior to it (since 3.5).,5,4,[]
204,488473900,4617,19542768,2020-09-17 07:42:58,2020-09-17 10:24:14,closed,Resolve other widget types,,0,1,[]
205,488318520,4616,19542768,2020-09-16 23:55:42,2020-09-17 10:26:34,closed,Fix: double double remove callbacks,"I have the following hierarchy of widgets:

> @pn.depends
> > GridMatrix
> > > Points
> > >  > hv.streams.Selection1D(source=points_element)

When I update the input widgets to the @pn.depends, the old GridMatrix/Points/Selection1D get torn down a new hierarchy gets built. However, I receive the following unexpected exception during teardown, even when I comment out the add_subscriber call to Selection1D:

```
Sep 16 22:58:46 ip-172-31-55-18 python[102370]: Traceback (most recent call last):
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/tornado/ioloop.py"", line 743, in _run_callback
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     ret = callback()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/tornado/ioloop.py"", line 767, in _discard_future_result
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     future.result()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/bokeh/server/session.py"", line 71, in _needs_document_lock_wrapper
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     result = await result
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/tornado/gen.py"", line 191, in wrapper
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     result = func(*args, **kwargs)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/viewable.py"", line 516, in _change_coroutine
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self._change_event(doc)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/viewable.py"", line 526, in _change_event
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self._process_events(events)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/viewable.py"", line 512, in _process_events
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self.param.set_param(**self._process_property_change(events))
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/param/parameterized.py"", line 1365, in set_param
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self_._batch_call_watchers()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/param/parameterized.py"", line 1480, in _batch_call_watchers
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     watcher.fn(*events)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/param.py"", line 700, in _replace_pane
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self._update_inner(new_object)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/pane/base.py"", line 368, in _update_inner
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self._pane.object = new_object
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/param/parameterized.py"", line 296, in _f
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     return f(self, obj, val)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/param/parameterized.py"", line 861, in __set__
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     obj.param._call_watcher(watcher, event)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/param/parameterized.py"", line 1456, in _call_watcher
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     watcher.fn(event)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/pane/base.py"", line 188, in _update_pane
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self._update_object(ref, doc, root, parent, comm)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/pane/base.py"", line 155, in _update_object
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     new_model = self._get_model(doc, root, parent, comm)
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/panel/pane/holoviews.py"", line 256, in _get_model
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     old_plot.cleanup()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/holoviews/plotting/bokeh/plot.py"", line 246, in cleanup
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     callback.cleanup()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/holoviews/plotting/bokeh/callbacks.py"", line 97, in cleanup
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     self.reset()
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:   File ""/home/ubuntu/anaconda3/lib/python3.7/site-packages/holoviews/plotting/bokeh/callbacks.py"", line 114, in reset
Sep 16 22:58:46 ip-172-31-55-18 python[102370]:     handle = handles[handle_name]
Sep 16 22:58:46 ip-172-31-55-18 python[102370]: KeyError: 'selected'
```

The code in this pull request solves the problem. I have not built a proper conceptual model for _why_ the problem happens . This is an empirical fix. It seems to make my dashboard work. I am hoping that a maintainer familiar with the holoviews event system internals can verify that the fix is appropriate or suggest something better.",1,1,[]
206,488062482,4614,19542768,2020-09-16 15:15:59,2020-09-16 15:16:08,closed,Fix doc building [doc-build],,0,7,[]
207,487293377,4613,19542768,2020-09-15 13:22:55,2020-09-15 14:02:59,closed,Fixed handling of factors for Violin plots,,0,1,[]
208,487258574,4612,19542768,2020-09-15 12:23:22,2020-09-15 12:26:18,closed,Added special handling to Params for Action parameters,"Work in progress to address #4610. 

- [ ] Handle renaming properly
- [ ] Fix/add tests
- [ ] Make sure we agree on this policy",1,1,[]
209,487257823,4611,19542768,2020-09-15 12:22:01,2020-09-28 09:55:02,closed,Params stream returns True/False for triggering Action,"Closes #4610 

- [x] Updates test
- [ ] Add docs",7,3,['type: enhancement']
210,486173050,4608,19542768,2020-09-13 12:07:00,2020-09-14 15:28:54,closed,HoloViews 1.13.4 documentation fixes [doc-build],,0,4,[]
211,485233755,4605,19542768,2020-09-11 16:16:33,2020-11-07 16:19:07,closed,Add Plotly Dash support,"This PR adds support for displaying dynamic HoloViews objects using Plotly Dash.

The new logic is localized to the single `holoviews/plotting/plotly/dash.py` file which provides a new `holoviews_to_dash` function.

A new section has been added to all of the dynamic Plotly reference guide notebooks that includes the code for displaying the example in a Dash app.  This is a good place to look at the example usage for the `holoviews_to_dash` function.

This PR is dependent on some of the fixes in https://github.com/holoviz/holoviews/pull/4572, and so it should be rebased on master after #4572 is merged.",13,11,[]
212,484907731,4604,19542768,2020-09-11 10:21:09,2020-09-11 11:17:45,closed,Allow toggling link_selections mode from bokeh,"Allow toggling the `selection_mode` on `link_selections` from the context menu in the bokeh toolbar:

<img width=""182"" alt=""Screen Shot 2020-09-11 at 12 08 14 PM"" src=""https://user-images.githubusercontent.com/1550771/92911357-1c120180-f429-11ea-8d9e-73b5faeca07d.png"">
",1,3,['type: enhancement']
213,482283859,4601,19542768,2020-09-08 20:39:25,2020-09-08 22:40:40,closed,Avoid using Parameterized repr in callable_name,@kcpevey Could you test this?,0,2,[]
214,481950611,4600,19542768,2020-09-08 10:38:35,2020-09-08 11:15:59,closed,Ensure dynspread handles zero width/height Image/RBG,Fixes #4379,1,1,[]
215,481912748,4599,19542768,2020-09-08 09:33:09,2020-09-08 11:33:46,closed,Add CHANGELOG for 1.13.4,,0,1,[]
216,479640634,4597,19542768,2020-09-04 12:30:45,2020-09-04 13:24:23,closed,Fix bug in linked_selections table rendering,Fixes https://github.com/holoviz/holoviews/issues/4505,0,1,[]
217,479108043,4595,19542768,2020-09-03 23:41:11,2020-09-04 10:50:41,closed,Add option to link streams on link_selections input,Fixes https://github.com/holoviz/holoviews/issues/4488,0,1,[]
218,479103315,4594,19542768,2020-09-03 23:34:59,2020-09-04 00:25:56,closed,Expose sizing_mode on Div element,Fixes https://github.com/holoviz/holoviews/issues/4388,0,1,[]
219,478952688,4593,19542768,2020-09-03 20:56:04,2020-09-03 23:29:03,closed,Fixed bug colormapping Path,Fixes https://github.com/holoviz/holoviews/issues/4520,0,2,[]
220,478682953,4592,19542768,2020-09-03 14:42:41,2020-11-03 12:04:29,closed,[WIP] Move to GH Actions,Resolves #4565 ,34,82,"['tag: component: testing', 'status: WIP']"
221,478308272,4590,19542768,2020-09-03 02:40:25,2020-09-03 03:13:26,closed,Fix tests on builds,,0,1,[]
222,477495624,4588,19542768,2020-09-02 01:17:28,2020-09-02 01:17:52,closed,Use HTTPS throughout on homepage,Fixes https://github.com/holoviz/holoviews/issues/4091,0,1,[]
223,477455364,4587,19542768,2020-09-02 00:36:42,2020-09-02 01:17:39,closed,Fixed color-ranging after box select on side histogram,Fixes https://github.com/holoviz/holoviews/issues/4483,0,1,[]
224,477431655,4586,19542768,2020-09-02 00:22:43,2020-09-02 00:51:33,closed,Add automatic collate for Overlay of AdjointLayouts,Fixes https://github.com/holoviz/holoviews/issues/4510,0,1,[]
225,477336882,4585,19542768,2020-09-01 21:09:24,2020-09-01 22:25:20,closed,Reset RangeXY when framewise is set,Fixes https://github.com/holoviz/holoviews/issues/4396,0,2,[]
226,477329508,4584,19542768,2020-09-01 20:54:43,2020-09-01 21:30:03,closed,Do not attempt linking on annotations,Fixes https://github.com/holoviz/holoviews/issues/4398,0,1,[]
227,476969704,4583,19542768,2020-09-01 10:05:09,2020-09-01 11:59:57,closed,Handle rcParam deprecations in matplotlib,,0,1,[]
228,476651504,4582,19542768,2020-08-31 23:29:26,2020-09-01 00:54:59,closed,Add __getstate__ / __setstate__ method to dim to fix RecursionError,"Closes https://github.com/holoviz/holoviews/issues/4581

The `Recursion` error was being caused by bouncing between the `__dir__` and `__getattr__` methods while unpickling.  This adds `__getstate__`/`__setstate__` methods to explicitly implement pickling.
",1,1,[]
229,476301614,4579,19542768,2020-08-31 13:32:36,2020-08-31 13:58:51,closed,Fix aspect if width/height has been constrained,If a user supplies min/max width and/or height then the initially computed aspect may be wrong because we can't actually work out what width/height bokeh computes until it is rendered. Therefore we allow the PlotSize stream to trigger an initial event which sets the correct aspect by adjusting the axis limits after initial rendering.,0,2,"['type: bug', 'tag: backend: bokeh']"
230,476225585,4578,19542768,2020-08-31 11:08:21,2020-08-31 13:26:52,closed,Add ability to supply transforms for all dimensions,Allows referencing all dimensions using `hv.dim('*')` which makes it possible to declare transforms on the `.data` as a whole. This is required to implement a general `interactive` API in hvPlot but also opens up the possibility for transforms on entire DataFrames and xarray Datasets in general.,0,1,[]
231,475842859,4577,19542768,2020-08-30 00:10:27,2020-08-30 02:43:34,closed,Allow rendering to pgf in matplotlib,Closes https://github.com/holoviz/holoviews/issues/4525,0,1,[]
232,475840901,4576,19542768,2020-08-29 23:43:05,2020-08-29 23:58:46,closed,Simplify test env,Some of the dependencies are no longer required and require conda-forge which takes a really long time to solve.,0,2,['tag: component: testing']
233,475839859,4575,19542768,2020-08-29 23:27:36,2020-09-01 20:38:44,closed,Fixed categorical handling in Geom plot types,Fixes https://github.com/holoviz/holoviews/issues/4523,0,5,[]
234,475834282,4574,19542768,2020-08-29 22:12:07,2020-08-29 23:29:15,closed,Ensure propagated options are correctly applied in batched mode,Fixes https://github.com/holoviz/holoviews/issues/4533,0,2,['status: ready']
235,475831336,4573,19542768,2020-08-29 21:38:04,2020-08-29 22:26:03,closed,Fix deprecation warning for matplotlib cmaps,Fixes https://github.com/holoviz/holoviews/issues/4531,0,1,[]
236,475753734,4572,19542768,2020-08-29 09:59:49,2020-09-28 12:24:57,closed,Link selections streams refactor,"## Description of Changes
This PR refactors the `link_selections` transformation to fully rely on chained streams converting linked stream interactions (BoundsXY and Lasso) into linked selection interactions.

This is done by extracting much of `link_selections` logic into two new stream classes:
 - `SelectionExprSequence` represents the selection produced by a sequence of selection operations on a single plot (e.g. when selection_mode is `""intersect""`).  `SelectionExprSequence` is a `Derived` stream subclass that uses as input stream a `History` stream wrapping a `SelectionExpr` stream.  It is configured by a `mode` property that corresponds to the `link_selections.selection_mode` parameter.  It produces a `selection_expr` and `region_element` params that represent the series of selections on the plot, combined according to the current `mode`.

 - `CrossFilterSet` represents the combined selection across all linked plots. `CrossFilterSet` is a `Derived` stream subclass that uses as input one `SelectionExprSequence` stream per linked plot. It produces a combined `selection_expr` param. It is supports a `mode` argument that corresponds to the `link_selections.cross_filter_mode` param.

The `SelectionDisplay` for each linked plot now gets the combined `selection_expr` from the `CrossFilterSet` stream, and it gets the region element from the `SelectionExprSequence` stream associated with the plot.

## Motivation
The `link_selections` class still registers callbacks on it's own params to update values of non-interactive streams (e.g. setting the `selected_color` param pushes an update to the internal `_Cmap` stream), but the linked stream updates are handled using `Derived` and `History` streams.  This makes it possible to introspect the Dynamic object produced by `link_selections` and find the linked streams that are driving it.  Along with the new `decollate` transformation logic, this will make it possible to add support for displaying selection linked plots using Dash.

## Testing

The current `link_selections` test suite has been updated, and I ran through the documentation notebook and everything looks like it's working the same way to me. But it would be good for someone else to run through that notebook and play with it by hand as well to check for regressions.

Thanks!
",7,16,[]
237,474104034,4569,19542768,2020-08-26 19:18:14,2020-08-26 22:17:49,closed,Fix issues with boomeranging events when aspect is set,"The logic for maintaining aspect was quite wrong which lead to the axes jumping around.

Fixes https://github.com/holoviz/hvplot/issues/462

",0,2,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
238,473473684,4568,19542768,2020-08-25 20:37:47,2020-08-25 21:45:15,closed,Compatibility with bokeh 2.2 for CDSCallback,Bokeh 2.2 added a dimension field to JS NdArrays which is messing with the CDSCallback.,0,2,[]
239,473228434,4567,19542768,2020-08-25 14:06:36,2020-12-01 23:48:50,closed,Implement cnorm option,"Implements `cnorm` option to switch between 'linear', 'log' and 'eqhist'.

![Screen Shot 2020-08-25 at 4 09 15 PM](https://user-images.githubusercontent.com/1550771/91184816-5c654600-e6ed-11ea-8585-410497f5949a.png)

- [x] Add tests
- [x] Update docs
- [x] Handle clashes with `logz` option",55,98,['type: enhancement']
240,470296563,4562,19542768,2020-08-19 16:56:18,2020-08-21 10:46:46,closed,Updated spreading operation to support aggregate arrays,"Minor changes to the spreading operation in order to support aggregate arrays (https://github.com/holoviz/datashader/pull/771). This change does have some important implications:

1. This won't be compatible with datashader releases prior to the PR references above. I could do a version check to turn `None` into an operator accepted by earlier datashader versions (maybe even use 'source'?)
2. The value of `None` maps to 'over' for RGBs and 'add' for arrays in datashader. This breaks backwards compatibility as the current default is 'source'. 

If I implement the version check idea (using 'source') to support older datashader, then the incompatibility would be for newer datashader versions only (where aggregate spreading is supported). I don't know if that makes things more or less confusing overall...",3,3,[]
241,469045445,4558,19542768,2020-08-17 20:14:03,2020-08-21 20:56:31,closed,legend_opts implemented,"https://github.com/holoviz/holoviews/issues/4356
```
import holoviews as hv
hv.extension('bokeh')

ovl = hv.Curve([0, 1, 2], label='BLUE') * hv.Curve([0, 1, 4], label='RED')
ovl.opts('Overlay', legend_opts={'background_fill_alpha': 0.5, 'background_fill_color': 'red'})
```

![image](https://user-images.githubusercontent.com/15331990/90439855-df5a2100-e09b-11ea-902f-ec0f79e9c268.png)
```
hv.extension('matplotlib')
ovl = hv.Scatter([0, 1, 2], label='BLUE') * hv.Scatter([0, 1, 4], label='RED')
ovl.opts('Overlay', legend_opts={'facecolor': 'red'})
```
![image](https://user-images.githubusercontent.com/15331990/90439869-e719c580-e09b-11ea-966b-2931fd332d96.png)
",3,7,[]
242,469044316,4557,19542768,2020-08-17 20:11:21,2020-08-17 20:14:24,closed,Legend opts,"```
import holoviews as hv
hv.extension('bokeh')

ovl = hv.Curve([0, 1, 2], label='BLUE') * hv.Curve([0, 1, 4], label='RED')
ovl.opts('Overlay', legend_opts={'background_fill_alpha': 0.5, 'background_fill_color': 'red'})
```

![image](https://user-images.githubusercontent.com/15331990/90439855-df5a2100-e09b-11ea-902f-ec0f79e9c268.png)
```
hv.extension('matplotlib')
ovl = hv.Scatter([0, 1, 2], label='BLUE') * hv.Scatter([0, 1, 4], label='RED')
ovl.opts('Overlay', legend_opts={'facecolor': 'red'})
```
![image](https://user-images.githubusercontent.com/15331990/90439869-e719c580-e09b-11ea-966b-2931fd332d96.png)
",1,4,[]
243,468337162,4554,19542768,2020-08-15 16:11:53,2020-08-25 21:45:46,closed,Add History stream,"## Overview
This PR adds a `History` stream type. `History` stream instances wrap another stream and collect a history of the values taken on by that stream. This list of states is as the `values` property

## Motivation
A follow-on PR will refactor `link_selections` to be based on `Derived` (https://github.com/holoviz/holoviews/pull/4532) and `History` streams, making it possible for `uncollate` (See https://github.com/holoviz/holoviews/pull/4551) to extract the linked streams from result of `link_selections`.

But, this is a simple and generally useful stream type, so I wanted to split it out into its own PR.

## Example Usage
```python
Val = Stream.define(""Val"", v=0.0)
history = History(val)
prihnt(history.contents)
```
```
{""values"": [{""v"": 1.0}]}
```
```python
# Perform a few updates on val stream
val.event(v=2.0)
val.event(v=3.0)
print(history.contents)
```
```
{""values"": [{""v"": 1.0}, {""v"": 2.0}, {""v"": 3.0}]}
```
```python
history.clear_history()
print(history.contents)
```
```
{""values"": []}
```
",2,3,[]
244,468096294,4551,19542768,2020-08-14 17:22:33,2020-08-27 23:17:04,closed,Add decollate transformation,"This PR closes https://github.com/holoviz/holoviews/issues/4433.

The goal of this issue was to develop a workflow for using dynamic HoloViews objects in a stateless multi-threaded context like Dash.  The approach that I proposed was to develop a transformation of an arbitrary dynamic HoloViews object into a pure function that inputs all of the required stream values as input argument and returns a non-dynamic HoloViews object.

It turns out that the transformation needed here is the inverse of the current `collate` transformation.  Per the docstring:
```
        Collation allows unpacking DynamicMaps which return Layout,
        NdLayout or GridSpace objects into a single such object
        containing DynamicMaps. Assumes that the items in the layout
        or grid that is returned do not change.
```
While not described in the docstring, collate also processes the streams of the input DynamicMap and pushes them down to the individual DynamicMaps of the resulting container according to the `dmap.callback.stream_mapping` property.

This PR introduces an ~`uncollate`~ `decollate` transformation that is the inverse of `DynamicMap.collate`. Here is the docstring description of ~`Layout.uncollate`~ `Layout.decollate`:
```
        Decollation allows packing a Layout of DynamicMaps into a single DynamicMap
        that returns a Layout of simple (non-dynamic) elements. All nested streams are
        lifted to the resulting DynamicMap, and are available in the `streams`
        property.  The `callback` property of the resulting DynamicMap is a pure,
        stateless function of the stream values. To avoid stream parameter name
        conflicts, the resulting DynamicMap is configured with
        positional_stream_args=True, and the callback function accepts stream values
        as positional dict arguments.
```

Decollation populates the `dmap.callback.stream_mapping` property so that top-level streams can be associated to the correct subplot by the interactive plotting backends. It also lifts key dimensions of the nested objects to the resulting DynamicMap.  

## Example:
Here is a full non-trivial example. Create a two plot layout where:
 - First subplot is a DynamicMap with two kdims and no streams
 - Second subplot is a DynamicMap with one kdim, wrapped in datashade and spread operations.

```python
import holoviews as hv
from holoviews.operation.datashader import datashade, spread

import numpy as np
hv.extension('bokeh')

frequencies = [0.5, 0.75, 1.0, 1.25]
phases = [0, 0.25, 0.5, 0.75, 1.0]

def sine_curve(phase, freq):
    xvals = [0.1* i for i in range(100)]
    return hv.Scatter((xvals, [np.sin(phase+freq*x) for x in xvals]))

def cos_curve(phase):
    freq = 0.5
    xvals = [0.1* i for i in range(100)]
    return hv.Scatter((xvals, [np.cos(phase+freq*x) for x in xvals]))

dmap0 = hv.DynamicMap(sine_curve, kdims=['phase', 'frequency']).redim.range(phase=(0, 3), frequency=(0.5, 1.25))
dmap1 = hv.DynamicMap(cos_curve, kdims=['phase']).redim.range(phase=(0, 3))

layout = dmap0 + spread(datashade(dmap1))
layout
```
![Screenshot_20200814_125707](https://user-images.githubusercontent.com/15064365/90273890-ac125a80-de2d-11ea-932b-5c4a6369781a.png)

```python
print(layout)
```
```
:Layout
   .DynamicMap.I  :DynamicMap   [phase,frequency]
      :Scatter   [x]   (y)
   .DynamicMap.II :DynamicMap   [phase]
      :RGB   [x,y]   (R,G,B,A)
```

Now decollate layout. The resulting object looks and behaves the same way as the input. It has interactive streams for `PlotSize` and `RangeXY` so that datashader zoom/pan interactions work as they do on the input.
```python
layout_decollated = layout.decollate()
layout_decollated
```
![Screenshot_20200814_125707](https://user-images.githubusercontent.com/15064365/90273890-ac125a80-de2d-11ea-932b-5c4a6369781a.png)

If we print the structure of `layout_decollated` we see that is is very different from the input. The object is a DynamicMap that returns a `Layout` of non-dynamic elements. Also note that the union of all of the key-dimensions are granted to the resulting DynamicMap.

```python
print(layout_decollated)
```
```
:DynamicMap   [phase,frequency]
   :Layout
      .Scatter.I :Scatter   [x]   (y)
      .RGB.I     :RGB   [x,y]   (R,G,B,A)
```

The resulting `DynamicMap` has streams corresponding to those introduced by the `datashade` operation on the input subplot.
```python
print(layout_decollated.streams)
```
```
[PlotSize(height=245,scale=1.0,width=238), RangeXY(x_range=None,y_range=None)]
```

## Other inputs
`decollate` can also be run on `Overlay`, `GridSpace`, and `NDOverlay` containers containing DynamicMaps.

## Implementation notes
The implementation of `decollate` involves recursively traversing the input object and building a symbolic expression tree for it. streams and kdims are extracted from the expression tree and replaced by the kdim-index and stream-index respectively.  The callback for the resulting `DynamicMap` inputs the kdim and stream values and uses these to evaluate the expression tree.

[Greenspun's tenth rule](https://en.wikipedia.org/wiki/Greenspun%27s_tenth_rule) constantly came to mind while working on this :smiley: 



",16,8,[]
245,465914513,4548,19542768,2020-08-11 07:10:55,2020-08-14 16:25:59,closed,Fix for inward pointing whiskers for some box plots,"For the Bokeh rendering of box plots, we have been using this definition of a whisker: the maximal data point less than (1.5 times the interquartile region plus the position of the top of the box). With this definition, we can get some strange results, as shown below.

```python
import holoviews as hv
hv.extension('bokeh')

# Box-whisker with transparent box so we can see inward whisker
hv.BoxWhisker(
    data=[1, 2, 3, 10]
).opts(
    box_fill_alpha=0
)
```

<img width=""344"" alt=""Screen Shot 2020-08-10 at 23 17 12"" src=""https://user-images.githubusercontent.com/1873517/89867821-9d465200-db66-11ea-8859-727bc646fd48.png"">

We see that the top whisker is below the top of the box. This is because we are using the above definition of the whisker position. In the case shown above, the end point of the top whisker is 3, but the top of the box is at 4.75. The description on [Wikipedia](https://en.wikipedia.org/wiki/Box_plot) gives a more precise definition of the whisker:

> From above the upper quartile, a distance of 1.5 times the IQR is measured out and a whisker is drawn up to the largest observed point from the dataset that falls within this distance.

To implement this, we can adjust the `_box_stats()` function in `plotting/bokeh/stats.py` to define the upper and lower whiskers as follows.

```
            upper = max(vals[vals <= q3 + 1.5*iqr].max(), q3)
            lower = min(vals[vals >= q1 - 1.5*iqr].min(), q1)
```
",1,1,[]
246,465156010,4547,19542768,2020-08-09 14:03:26,2020-09-18 10:38:39,closed,Add ability to listen to dataset linked_selection,"Linked selections are powerful and can easily be applied to HoloViews elements. However in many cases we may want to subscribe to changes in a linked selection from outside of HoloViews. This PR makes this possible by providing a new method that returns a instance parameter which will contain a reference to the current selection applied to a dataset. By combining this with the internal linked_selection cache we can make sure that if set up correctly this does not result in additional computation. As an example we can do something like this:

```python
@pn.depends(ls.selection_param(df))
def count(selected_df):
    return f'## {len(selected_df)}/{len(df)} selected'
```

Here we create a callback that depends on the current selection of the df and reports the fraction of datapoints that have been selected.",4,2,['type: enhancement']
247,465150349,4546,19542768,2020-08-09 13:09:19,2020-08-09 14:46:07,closed,Set Panel state to busy during callbacks,,0,2,[]
248,465075435,4545,19542768,2020-08-08 21:16:59,2020-08-09 04:08:14,closed,Optimize options machinery,The options machinery is invoked a lot and even small optimizations turn out to be worthwhile. This was just a quick pass to eliminate some of the minor inefficiencies in the options machinery.,0,1,[]
249,464925028,4544,19542768,2020-08-08 01:48:28,2020-08-08 21:12:36,closed,Ensure operations do not recursively accumulate pipelines,"Major, major bug causing Operations to recursively accumulate operations in a pipeline which would progressively degrade anything that would then replay that pipeline (e.g. linked selections). On many linked_selections examples this provides a 2x speedup on initial rendering and then a progressively increasing speedup over the buggy version every time the pipeline is replayed, e.g. for a datashaded plot with linked selections applied you would get 10x slowdowns after just a few seconds of zooming around.",1,1,['type: bug']
250,462807912,4543,19542768,2020-08-04 14:35:15,2020-08-24 13:03:42,closed,Support for datashader spreading of aggregates,This PR is designed to support the new aggregate spreading support introduced in https://github.com/holoviz/datashader/pull/771. Currently the change is very minor but I am considering supporting custom spreading masks too.,1,1,['status: WIP']
251,460497601,4540,19542768,2020-07-31 20:41:31,2020-08-08 20:06:04,closed,Fix pyenv issues in Travis CI setup,,0,4,[]
252,457501789,4537,19542768,2020-07-28 02:32:58,2020-07-31 20:38:11,closed,fix bug when the default value of Dimension is 0,"fix #4536

Use the default value of Dimension if it is not None.",1,1,[]
253,456617637,4534,19542768,2020-07-25 13:49:58,2020-08-14 12:17:23,closed,Support positional stream args in DynamicMap callback,"This PR is a step toward supporting #4433 using a `DynamicMap` transformation.  The idea is described in https://github.com/holoviz/holoviews/issues/4433#issuecomment-663715053.

## Background
The callback function for a `DynamicMap` is currently called by passing the kdim values as positional arguments, followed by stream parameter values as keyword arguments.  For example:

```python
import holoviews as hv
from holoviews.streams import Stream
XY = Stream.define('XY', x=0,y=0)
xy_stream = XY()

def callback_fn(i_value, y, x):
    ...

dmap = hv.DynamicMap(callback_fn, kdims=[""i""], streams=[xy_stream])
```
Here the `i_value` argument is the `i` key dimension that is called positionally (named `i_value` to emphasize that it's called by position not by name), and the `x` and `y` arguments are the stream parameters and they are called as keyword arguments.  So here the `x` and `y` argument names must match the param names of the `xy_stream` stream.

This approach is convenient when writing callback functions by hand, when there are only a few stream parameters and the stream parameter names don't conflict. But it's less convenience when building a callback function programmatically that will input many streams with potentially overlapping parameter names. This will be the situation when building the transformation in #4433.

## Description
This PR adds a `positional_stream_args` parameter to the `DynamicMap` class that, when set to `True`, will configure the `DynamicMap` to pass stream values to the callback function positionally.  The stream arguments will follow the kdim arguments (if any), the value of each stream argument is a `dict` containing key-value pairs for each param in the stream, and the order of the stream arguments is determined by the order of the streams in the `streams` parameter list.

Here's an example of what this looks like:

```python
import holoviews as hv
from holoviews.streams import Stream
XY = Stream.define('XY', x=0,y=0)
xy_stream0 = XY()
xy_stream1 = XY()

def callback_fn(i_value, s0, s1):
    x0, y0 = s0['x'], s0['y']
    x1, y1 = s1['x'], s1['y']
    ...

dmap = hv.DynamicMap(
    callback_fn, kdims=[""i""], streams=[xy_stream0, yx_stream1], positional_stream_args=True
)
```

When `positional_stream_args=True` there is no possibility of stream parameter name clashes.

Of course, the default is `False` to match the current behavior.

Does this sound reasonable @jlstevens @philippjfr ?
",5,6,[]
254,456434857,4532,19542768,2020-07-24 18:44:50,2020-08-10 21:31:19,closed,Add new Derived stream class,"closes https://github.com/holoviz/holoviews/issues/4530

This PR introduces a new `Derived` stream class that generalizes the concept of having a `Stream` that produces values based on one or more other input streams.  

The `SelectionExpr` stream had done this in a somewhat ad-hoc way, but with this PR `SelectionExpr` is now a subclass of the new `Derived` stream.

The existing `SelectionExpr` tests pass with minimal updates. I also added a new set of tests for `Derived` streams directly in `holoviews/tests/teststreams.py`.  This is a good place to look at for a simple example of what a `Derived` stream subclass looks like.

Let me know if you have any questions or concerns about the approach or API. Thanks!",17,6,[]
255,454810866,4527,19542768,2020-07-22 00:19:39,2020-08-25 21:49:48,closed,Hover mode,"https://github.com/holoviz/hvplot/issues/423 I just realized the issue was about `hover='vline'` not `tools=['vline']` but related

![ezgif-5-bacfb7339e4a](https://user-images.githubusercontent.com/15331990/88119814-1d405400-cb87-11ea-8889-db8afc1ef761.gif)
",2,3,[]
256,451143719,4522,19542768,2020-07-17 13:58:19,2020-07-17 19:04:44,closed,Remove special instructions for IPython 5.0,"The installation section still contained a paragraph on working around a specific issue in the notebook 5.0. That issue was fixed in 5.1 and the notebook is actually on version > 6 now, so it seems that that note is no longer needed.

This particular notebook workaround is confusing and I personally don't like tinkering with the defaults if I can avoid it because I never know how they impact my other projects or how these changes are carried forward in upgrades. Since this issue seems to be relevant only for a very specific notebook version that is now a thing of the past, I suggest to remove that paragraph.
(See links in the removed text to stackoverflow and the related notebook issues that show that the issue was resolved.)",1,1,[]
257,448935138,4518,19542768,2020-07-14 14:58:03,2020-07-16 08:36:13,closed,make toolbar=True the default in save(),"Reference issue #4515 .  Making the toolbar default to `True` to correspond to past behavior.

Documentation issue is that the docs for 1.13.3 are not published on the web site, so presumably if they were to get rebuilt the option would show up there.

",11,4,[]
258,447153804,4517,19542768,2020-07-10 00:09:28,2020-11-20 17:31:17,closed,Add an IbisInterface,"Adds an IbisInterface built on the [Ibis project](https://docs.ibis-project.org/index.html) which will let us interface directly with various database backends.

So far this is a basic skeleton which we can fill in bit by bit. The first item for discussion is what object a HoloViews `Dataset` should wrap. To me it seems most appropriate for it to wrap any `Expr` object which represents some expression on a Database, e.g. the selection of an individual Table or any other operation. The question then is what types of expressions should be supported, e.g. can or should we support a `ColumnExpr` or must the basic unit always represent a table.

## Implementation status

### Core methods

- [x] `init`: Basic constructor
- [x] `range`: Computes the range along a column  
- [x] `values`: Returns all values along a column (or only unique values)
- [x] `length`: Returns number of rows in the table
- [x] `nonzero`: Whether there are any rows in the table
- [x] `dtype`: Return the dtype of the column
- [x] `isscalar`: Checks whether column value has a single unique value
- [x] `select`:  Select given boolean mask or given scalar, range or list selection(s)
- [x] `groupby`: Returns one or more Datasets grouped by the values along one or more columns 
- [x] `redim`: Rename columns in the table
- [x] `iloc`: Integer indexing of rows and columns
- [x] `sort`: Sort by one or more columns ascending/descending
- [x] `aggregate`: Aggregate along one or more columns with given function (e.g. mean, min, max)
- [x] `sample`: A list of selections

### Write methods (these methods write back to the data)

- [x] `add_dimension`: Add a column to the table (can this be supported?)
- [ ] `mask`: Mask out values given a boolean mask
- [x] `assign`: Add or overwrite one or more columns

### Conversion methods

- [x] `array`: Return a NumPy array of requested columns

## Tests Status

**Passing**: 73
**Error**: 34
**Fail**: 0
**Skip**: 16

Cc: @kcpevey @tonyfast ",34,68,"['tag: component: data', 'status: WIP']"
259,445974689,4513,19542768,2020-07-08 05:14:14,2020-07-09 16:17:49,closed,add print() to the info property,fix https://github.com/holoviz/holoviews/issues/4512#issue-652965036,0,2,[]
260,443721621,4506,19542768,2020-07-02 20:13:36,2020-11-28 13:46:59,closed,Standardizing build procedures,"This adds support for building dev and release websites with commit messages containing `website_dev` and `website_release` respectively, and building building from tags using `website_release` and `website_dev`, as well as tags of the format `v1.3.1a4` for dev, and `v1.3.1A4` for release.",1,3,[]
261,438511213,4498,19542768,2020-06-23 11:35:50,2020-06-23 11:57:13,closed,Fixed linked selection with index_cols,,0,1,[]
262,438510674,4497,19542768,2020-06-23 11:34:48,2020-06-23 11:56:34,closed,Fixed typed array deserialization,,0,1,[]
263,438120866,4495,19542768,2020-06-22 18:56:08,2020-06-23 11:39:07,closed,Use chain.from_iterable in mpl/renderer.py,@philippjfr This is the continuation of #4486,0,1,[]
264,437635547,4491,19542768,2020-06-22 01:40:26,2020-06-22 18:07:47,closed,Pass inline argument to load_nb,fix #4490 ,1,1,[]
265,435799200,4486,19542768,2020-06-17 11:49:49,2020-06-22 18:07:31,closed,Use chain.from_iterable in mpl/plot.py,"This is a faster and more idiomatic way of using `itertools.chain`. Instead of computing all the items in the iterable and storing them in memory, they are computed one-by-one and never stored as a huge list. This can save on both runtime and memory space.",2,1,[]
266,434137863,4482,19542768,2020-06-14 12:29:08,2020-06-23 13:01:05,closed,Ensure Violin does not break when category is missing,,0,7,[]
267,434079323,4481,19542768,2020-06-14 01:07:37,2020-06-14 12:17:23,closed,Support linked selections on NdOverlays,- [ ] Add tests,1,1,[]
268,434005084,4480,19542768,2020-06-13 13:14:42,2020-06-13 13:51:28,closed,Do not update ranges when plot size changes,"Fixes https://github.com/holoviz/hvplot/issues/462
Fixes https://github.com/holoviz/geoviews/issues/418",0,1,[]
269,433742845,4479,19542768,2020-06-12 15:20:11,2020-06-23 14:15:04,closed,Added CHANGELOG and release notes for v1.13.3,,1,3,[]
270,433733626,4478,19542768,2020-06-12 15:02:50,2020-06-13 16:38:09,closed,Add ability to skip bokeh events on server,Previously we only had a mechanism to skip events in Javascript which worked only in the notebook. This adds the ability to add skip conditions for the server case and makes sure that Bounds and Lasso selections only trigger an event on mouseup.,0,2,['type: enhancement']
271,433330371,4477,19542768,2020-06-11 21:03:08,2020-06-12 11:07:51,closed,v1.13.3 documentation fixes,Fixes #4473 ,8,6,[]
272,433325521,4476,19542768,2020-06-11 20:51:13,2020-06-11 22:05:57,closed,Allow specifying title for hv.save,Fixes #4474 ,0,1,[]
273,433322015,4475,19542768,2020-06-11 20:42:20,2020-06-11 21:19:34,closed,Easily access only non-default options,Added `defaults` option to `Element.opts.get` and fixed weird handling of `Store.lookup_options` with defaults=False when no custom options have been set.,0,1,['type: enhancement']
274,432103200,4470,19542768,2020-06-09 22:43:51,2020-06-09 23:43:38,closed,Update server deployment documentation,,0,2,['tag: docs']
275,432025672,4469,19542768,2020-06-09 19:44:02,2020-06-09 23:43:15,closed,Fixed bug with clashing legend_field and legend_label,Fixes https://github.com/holoviz/holoviews/issues/4456,0,1,[]
276,431993702,4468,19542768,2020-06-09 18:40:35,2020-06-09 19:36:32,closed,Fixed dtype issue when checking for ring geometry,Fixes https://github.com/holoviz/holoviews/issues/4466,0,1,[]
277,431988188,4467,19542768,2020-06-09 18:28:47,2020-06-09 19:10:29,closed,Various fixes along with updates to gallery apps,"- [x] Fixes issues computing categorical factors
- [x] Fixes  bug in range calculation
- [x] Fixes bug when throttling",0,2,[]
278,431769686,4465,19542768,2020-06-09 12:49:33,2020-06-09 19:19:41,closed,documenting the legend positions and style possibilities,"I just hit the ""undocumented legend features"" problem and saw that #3505 discussed accepting PRs for documenting these features. So I came up with this PR that extends the customizing plots notebook with some notes about legends and how they can be moved around and styled, as suggested by @philippjfr in the issue.

Let me know what you think.

Cheers
Florian",2,2,[]
279,431139324,4464,19542768,2020-06-08 13:27:25,2020-06-08 15:13:39,closed,Allow range as color_levels,Implements https://github.com/holoviz/holoviews/issues/2931,0,1,[]
280,431117185,4463,19542768,2020-06-08 12:57:55,,open,Implement support for setting custom options on plot components,"A long time ago we introduced hooks to allow users to apply customizations for options we haven't exposed on the plot classes themselves. However writing custom hooks is cumbersome and quite verbose. This PR implements a suggestions I've been mulling for a long time (I haven't been able to find the issue where I laid out this proposal). Basically it allows declaring a dictionary with accessor specification for setting custom options on the plot components, e.g. something like this:

```
{'colorbar.title_text_color': 'red'}
```

Looks up the colorbar model on the plot and then sets the `title_text_color' to 'red'. This approach should work for arbitrarily nested objects. The user just needs some knowledge of the attributes of the underlying plotting library (which is also needed for hooks) but here we can at least in theory apply some fuzzy-matching to give good suggestions. 

- [ ] Add tests
- [ ] Implement for matplotlib and plotly backends
- [ ] Implement some fuzzy matching to give helpful suggestions when the spec is slightly mis-specified.
- [ ] Add documentation.",24,2,[]
281,431076216,4462,19542768,2020-06-08 11:48:27,2020-06-08 12:48:43,closed,Add support for declaring kdims as variable kwargs,Implements https://github.com/holoviz/holoviews/issues/2318,0,1,[]
282,430583702,4461,19542768,2020-06-08 01:55:55,2020-06-08 02:57:14,closed,Rectangle datetime support,Fixes https://github.com/holoviz/holoviews/issues/4448,0,1,[]
283,430576922,4460,19542768,2020-06-08 01:46:40,2020-06-08 02:20:49,closed,Fix Box rotation,Fixes https://github.com/holoviz/holoviews/issues/4428,0,1,[]
284,430503837,4459,19542768,2020-06-08 00:06:20,2020-06-08 01:43:04,closed,Switch to simple Histogram selections,Switches to simpler Histogram selections because the more complex approach is more expensive and not supported by all Dataset interfaces.,0,3,[]
285,430365446,4458,19542768,2020-06-07 20:40:53,2020-06-09 11:19:43,closed,Fix coloring of SideHistogram in bokeh,"Fixes https://github.com/holoviz/holoviews/issues/4429
Fixes https://github.com/holoviz/holoviews/issues/4378",0,5,[]
286,425999429,4450,19542768,2020-06-01 14:02:09,2020-06-09 00:16:45,closed,Fix bug computing cross-axis ranges when framewise=True,"Fixes https://github.com/holoviz/holoviews/issues/4451
Fixes https://github.com/holoviz/holoviews/issues/4452",0,3,[]
287,425470652,4447,19542768,2020-05-30 14:07:29,2020-05-31 15:06:48,closed,Add support for cupy histograms and box-whisker stats,"Implements support for computing histograms using cupy (if a cuDF dataset is provided).

- With versions of cupy<8.0 only unnormalized histograms are supported
- With versions of cupy>8.0 all normalization options are supported
- Also adds support for string bin options like 'auto', 'fd', 'scott' etc.
- Implements BoxWhisker stats calculations using cupy/dask

Partially addresses #3954 
Fixes #4446",0,5,[]
288,424097575,4443,19542768,2020-05-27 20:29:29,2020-05-27 20:35:13,closed,Updated 15-Large_Data to show by [doc-build] ,"Updated 15-Large_Data.ipynb:
- Show examples of using `by` both with count and mean
- Hide fake points (size=0), to make a more portable example
- Select Bokeh backend after displaying the last few cells with Matplotlib, so that previous Bokeh-based cells can then be re-run

Requires Datashader 0.11 or later, but only for building the docs or examples, not as a core HoloViews requirement, so it seems safe to merge?",0,1,[]
289,423128406,4438,19542768,2020-05-26 10:46:31,2020-05-26 12:32:40,closed,Support by reductions in datashader operations,"As the title says, this PR adds support for the new `by` reduction for datashader aggregations.",0,1,[]
290,422886461,4437,19542768,2020-05-25 20:24:56,2020-05-27 20:42:45,closed,Linked selection improvements,- Fixes empty lasso selects causing errors during selection,1,1,[]
291,422860466,4436,19542768,2020-05-25 18:39:43,2020-05-25 20:09:40,closed,Optimized cuDF interface,For some reason accessing `.columns` on a cuDF is quite expensive so this ensures this only happens once.,0,1,[]
292,421068594,4431,19542768,2020-05-20 23:24:33,2020-05-26 19:01:09,closed,Ensure that ranges do not bounce when data_aspect is set,Requires some more testing,0,1,[]
293,421020165,4430,19542768,2020-05-20 21:07:20,2020-11-20 17:35:21,closed,Clarify data types accepted by Points,"This may be a local fix to a global problem, but it's difficult to tell which types of data are accepted by HoloViews elements, so I thought it would be useful to illustrate various accepted formats for at least one basic Element type, i.e. Points.  The previous example uses np.random to make a random multidimensional array, which is convenient but is quite opaque -- what does each column and row in that array represent? How would I format my own data to use with this Element?

I've kept the existing examples mostly as-is, but added a new bit explicitly listing the x, y, size, and color variables and showing how to supply those to Points:

![image](https://user-images.githubusercontent.com/1695496/82497410-cd281100-9ab3-11ea-8d1e-0ebb5a1ce7b1.png)

Issues:

- [ ] Is this the right place to put this information?  If not, where, and we'll need to link to it from here.
- [ ] Is this a relatively complete list of the data formats that are reasonable to provide? It doesn't need to be exhaustive, but should include the most typical or common ways that we expect users to provide data.
- [ ] Pending approval of this change, I have not updated the Matplotlib and Plotly notebooks in the same way yet.

Also note that I updated the colormap, because the previous colormap (""fire"") was mapping the brightest values to white (the background color of the page), making them disappear:

![image](https://user-images.githubusercontent.com/1695496/82497297-a4078080-9ab3-11ea-869c-0444b5ca1139.png)




as-is (apart from updating the colormap so ",4,2,['tag: docs']
294,418659057,4423,19542768,2020-05-15 15:32:29,2020-05-20 23:23:36,closed,Consistently format dependencies,Consistently adds spaces between package name and version number.,0,2,[]
295,418214117,4422,19542768,2020-05-14 19:54:08,2020-06-07 20:36:13,closed,Delete toolbar by default before exporting the image ,"This pull request refers to issue #3751

I created a new branch so that the review of the pr is easier, sorry for the other pr! Every comment or guideline in order to make the pr successful is more than welcome. Thanks in advance!",1,2,[]
296,418122026,4421,19542768,2020-05-14 16:51:10,2020-05-15 12:27:44,closed,Add obj.potions(toolbar=None) to render and save method,"This pull request refers to issue #3751

Every comment or guideline in order to make the pr successful is more than welcome. Thanks in advance",0,18,[]
297,416107166,4417,19542768,2020-05-11 13:31:39,2020-05-11 23:25:40,closed,Params support for unwatching,Just merging the code written by @analog-cbarber. Issue #4360  ,1,14,[]
298,416083659,4416,19542768,2020-05-11 12:48:57,2020-05-11 13:54:36,closed,Do not compute data_range if Dimension.values supplied,If `Dimension.values` are defined we should not be computing the `range` because this is potentially **very** expensive.,0,1,[]
299,413815658,4413,19542768,2020-05-06 00:18:43,2020-05-12 00:30:02,closed,Fixed partial RangeXY updates on datetime axes,Fixes https://github.com/holoviz/holoviews/issues/4405,0,2,[]
300,413811847,4412,19542768,2020-05-06 00:04:04,2020-05-11 13:55:41,closed,Fixes for Renderer.save and Renderer.html,"Fixes #4407 
Fixes #4409 ",0,2,[]
301,413527628,4410,19542768,2020-05-05 13:48:09,2020-05-07 12:31:22,closed,Allow clearing of auto archive,"As new contributors, we would appreciate any suggestions or guidelines in order to make this pr succesfull. Thanks in advance",2,13,[]
302,412149883,4404,19542768,2020-05-01 14:22:11,2020-06-07 20:35:07,closed,Add ipywidgets and VSCode rendering support,,1,6,[]
303,412145275,4403,19542768,2020-05-01 14:10:59,2020-05-06 00:03:11,closed,Fix empty histogram with explicit bins,Fixes https://github.com/holoviz/hvplot/issues/404,0,2,['type: bug']
304,410414477,4400,19542768,2020-04-28 23:37:50,2020-04-29 16:42:23,closed,Pin binder to v1.13.2,"As suggested in https://github.com/holoviz/holoviews/issues/4390 this PR pins both the conda environment and the repo to the last release, v1.13.2, so that binder doesn't have to build an image again every time there is a commit to master.

The files required by binder have been moved to a ``binder`` directory that it can detect.",1,1,[]
305,410048851,4399,19542768,2020-04-28 11:11:52,2020-04-28 11:46:05,closed,Ensure that dim.params considers dynamic kwargs,- [x] Add tests,0,1,[]
306,408266656,4392,19542768,2020-04-24 00:29:55,2020-04-24 13:23:53,closed,Handle bytes categories,,0,3,[]
307,407175368,4389,19542768,2020-04-22 09:47:24,2020-04-22 12:43:43,closed,Minor fixes for apply_when,,0,1,[]
308,405546471,4387,19542768,2020-04-18 19:13:43,,open,Add layout opts to control y of suptitle in mpl,"Fixes https://github.com/holoviz/holoviews/issues/4380
![image](https://user-images.githubusercontent.com/15331990/79669102-cccbeb80-817e-11ea-9b42-561b1343efee.png)

Defaults to matplotlib's default 0.98
https://matplotlib.org/3.2.1/api/_as_gen/matplotlib.pyplot.suptitle.html
```
import xarray as xr
import hvplot.xarray
import holoviews as hv
hv.extension('matplotlib')
ds = xr.tutorial.open_dataset('air_temperature').isel(time=slice(0, 5))
ds = xr.concat([ds.assign_coords(**{'exp': '1'}), ds.assign_coords(**{'exp': '2'})], 'exp')
ds['air'].attrs =  {}
ds.hvplot('lon', 'lat').layout('time').cols(2)

ds.hvplot('lon', 'lat').layout('time').cols(2).opts(suptitle_y=0.9)
```

The other cropped labels can be fixed with adjusting fig_bounds
`ds.hvplot('lon', 'lat').layout('time').cols(2).opts(suptitle_y=0.9, fig_bounds=(0.1, 0.1, 0.8, 0.8))`
![image](https://user-images.githubusercontent.com/15331990/79669153-26341a80-817f-11ea-8868-5165cd12d978.png)

Without suptitle_y:
`ds.hvplot('lon', 'lat').layout('time').cols(2).opts(fig_bounds=(0.1, 0.1, 0.8, 0.8))`
![image](https://user-images.githubusercontent.com/15331990/79669163-3d730800-817f-11ea-9864-8ab73bb6661a.png)
",0,2,[]
309,404285558,4383,19542768,2020-04-16 11:07:51,2020-04-24 14:04:41,closed,Handle log colormapper zero lower bound,"Ensures compatibility with changes to log colormapping and change to tuple palettes in bokeh 2.0.x 

Also handles None in `clim`.

Fixes #4361 
Fixes #4376 
",1,12,[]
310,402047186,4377,19542768,2020-04-10 20:00:22,2020-04-10 20:22:06,closed,Further fixes to optimize garbage collection,Improves handling of `.dataset` property to ensure data can be garbage collected as soon as possible.,0,2,[]
311,401687601,4372,19542768,2020-04-09 23:14:42,2020-04-10 13:02:18,closed,Configurable throttling schemes on ServerCallback,"The throttling scheme used by `LinkedStream` callbacks on bokeh server has never really worked very robustly. This latest attempt fixes the existing throttle mode and adds two additional modes so that now we support the following throttling modes:

- adaptive (default): The callback adapts the throttling timeout depending on the rolling mean of the time taken to process each message.
- throttle: Uses the fixed `throttle_timeout` as the minimum amount of time between events.
- debounce: Processes the message only when no new event has been received within the `throttle_timeout` duration.

I would like to come up with a good way to expose these options.

- [x] Also fixes https://github.com/holoviz/holoviews/issues/4371 by ensuring server updates are processed immediately as long as the Document can be unlocked",0,9,[]
312,401099533,4370,19542768,2020-04-08 21:52:42,2020-04-29 18:43:15,closed,Adding new information to the HoloViews About Page,"@philippjfr @jlstevens I added new information to the HoloViews About page
",1,4,['tag: docs']
313,401030141,4369,19542768,2020-04-08 19:16:01,2020-04-08 19:18:15,closed,Updating the README file to reference HoloViz resources,@philippjfr @jlstevens ,1,1,[]
314,401027719,4368,19542768,2020-04-08 19:11:07,2020-04-10 10:59:46,closed,Eliminate circular references,Attempt to fix #4367,0,14,[]
315,400730148,4365,19542768,2020-04-08 09:20:39,2020-04-09 01:25:18,closed,Expose center as an output option,"Since we switched to Panel we now allow controlling the `widget_location` using hv.output, this also provides control over whether to `center` the output.",0,1,[]
316,400287761,4364,19542768,2020-04-07 14:02:45,2020-04-08 09:17:57,closed,Only mask value dimensions,This ensures that linked selection masking is only applied to value dimensions. Key dimensions will often not support nan masking so this ensures weird type conversions do not happen and in the cuDF case ensures that there are no type errors.,2,2,['tag: component: data']
317,398575947,4362,19542768,2020-04-04 13:59:31,2020-04-29 17:17:22,closed,Lasso linked select,"Implements #4359 

- [x] Support tabular data, i.e. Points, Scatter (requires spatialpandas or shapely)
- [x] Support gridded/rectilinear data, i.e. Image/QuadMesh (requires datashader)
- [x] Support curvilinear data, i.e. QuadMesh (requires spatialpandas or shapely)
- [x] Support Rectangles and Segments (requires shapely)
- [x] Support Path, Contours, Polygons (requires shapely)
- [x] Fix linked selections on complex dynamicmaps
- [x] Fix region indicators for dynamic plots
- [x] Update docs
- [x] Fix tests
- [x] Add new tests

![lasso_example](https://user-images.githubusercontent.com/1550771/78452727-39c68800-768d-11ea-959a-306043bff430.gif)

![gridded_lasso](https://user-images.githubusercontent.com/1550771/78453630-46e67580-7693-11ea-8374-2808fa06ba9c.gif)

![qmesh_lasso](https://user-images.githubusercontent.com/1550771/78453633-4b129300-7693-11ea-8143-5f5e31c677e4.gif)

![box_lasso](https://user-images.githubusercontent.com/1550771/78464432-eafb0b80-76e9-11ea-9698-d277053d9aa3.gif)

![poly_lasso](https://user-images.githubusercontent.com/1550771/78464925-b1c59a00-76ef-11ea-8fda-bc5317fa9b48.gif)

",3,30,[]
318,398115895,4358,19542768,2020-04-03 11:22:16,2020-09-01 20:41:33,closed,REL+BUG: Fix panel requirement on Python 3.5,"The current release of Holoviews still claims to support Python 3.5.
However, it can not be installed on Python 3.5 with its current installation requirements. The reason for this is an anomaly in the release history of panel. We work around this problem by specifying a maximum version requirement of panel for holoviews when installing on Python 3.5.
More details of the problem are given below.

The new major release of bokeh, v2.0.0, dropped support for Python 3.5. This new python version requirement was specified in its setup.py requirements.
To support the new bokeh API, panel was changed with what was effectively a new major release in v0.9.0. This version of panel is only for bokeh>=2.0.0, and this requirement was specified in its setup.py requirements. However, panel did not change its Python version requirements to >=3.6 until version 0.9.4.
This means that whenever one tries to install the latest available version of panel on Python 3.5, pip will attempt to install version 0.9.3, and then fail because it is not possible to support the bokeh>=2.0.0 requirement on Python 3.5. Consequently, all packages which require panel and continue to support Python 3.5 need to include an extra specification for the panel version on Python <3.6.",16,7,[]
319,397269649,4355,19542768,2020-04-01 22:48:58,2020-04-01 23:18:14,closed,Add check if document has already been set in server mode,Fixes https://github.com/holoviz/holoviews/issues/4347,0,1,[]
320,397231641,4354,19542768,2020-04-01 21:04:16,2020-04-01 22:02:14,closed,Use Panel CommManager if available,,0,1,[]
321,396991079,4351,19542768,2020-04-01 13:21:03,2020-04-01 20:54:32,closed,Fix binder,"Fixes #4349 

I've basically copied the dependencies mentionned in ``setup.py`` to the ``environment.yml`` (those that seemed useful to run the examples) and pinned the last released version of ``holoviews``. The binder from that branch can be tried here: https://mybinder.org/v2/gh/maximlt/holoviews/maximlt-fix-binder?filepath=examples. It would be nice to have a way to keep the environment.yml file synced with setup.py.

I've tried to run the 5 *getting started* notebooks, they all run fine. I came accross two issues while randomly running some other notebooks:
- A few warnings: ``MatplotlibDeprecationWarning: The datapath rcparam was deprecated in Matplotlib 3.2.1 and will be removed two minor releases later``
- The users will have to download the bokeh sampledata with ``import bokeh.sampledata; bokeh.sampledata.download()``. The error message is pretty clear and helpful so that shouldn't be a big problem.

Please let me know if this can be improved :)

(It'd also be nice to have a binder badge on every notebook page of holoview.org :o)",5,6,[]
322,395700795,4342,19542768,2020-03-30 14:46:39,2020-03-30 20:09:32,closed,Refactor mpl deprecation handling,Following discussions in #4335,5,3,[]
323,395699532,4341,19542768,2020-03-30 14:44:39,2020-03-30 16:52:26,closed,Fix undefined Javascript variables in bokeh links,Fixes https://github.com/holoviz/holoviews/issues/4340,0,1,[]
324,395649631,4339,19542768,2020-03-30 13:26:57,2020-03-30 14:47:07,closed,Fixed handling of bokeh resources option,Fixes https://github.com/holoviz/holoviews/issues/4327,0,1,[]
325,395644755,4338,19542768,2020-03-30 13:19:18,2020-03-30 14:46:47,closed,Fixed handling of color and alpha on bokeh ArrowPlot,Fixes https://github.com/holoviz/holoviews/issues/4328,0,1,[]
326,395642112,4337,19542768,2020-03-30 13:14:49,2020-03-30 13:48:43,closed,Fix regression in Sankey computation,Fixes https://github.com/holoviz/holoviews/issues/4330,0,1,[]
327,395626096,4336,19542768,2020-03-30 12:44:51,2020-03-30 13:27:27,closed,Doc: fix broken link,06-Building_Composite_Objects.ipynb should be referred at the end of this notebook,1,1,[]
328,395597992,4335,19542768,2020-03-30 11:47:52,2020-03-30 13:01:42,closed,rcparam datapath deprecated in mpl 3.2.1,"See https://github.com/holoviz/geoviews/issues/452

This whole code to handle deprecated rcparams is now being duplicated in renderer.py and plot.py, should probably factor that out somehow?

https://matplotlib.org/3.2.1/api/prev_api_changes/api_changes_3.2.0.html#the-datapath-rcparam",2,1,[]
329,395575686,4334,19542768,2020-03-30 11:02:59,2020-03-30 11:25:32,closed,Extra streams,See #4333 ,1,2,[]
330,394387101,4329,19542768,2020-03-26 19:52:27,2021-05-23 14:00:03,closed,Switch to Panel CommManager,"Panel version with the CommManager not yet released. 

ToDo:

- [x] Ensure callback skip conditions still apply ",0,20,[]
331,393492621,4325,19542768,2020-03-25 10:02:55,2020-03-25 11:41:17,closed,Better exceptions for unloaded plotting extensions,Fixes #4269 ,0,3,[]
332,393492494,4324,19542768,2020-03-25 10:02:39,2020-03-25 10:41:29,closed,Fix links to user guide from NdOverlay reference,Fixes #4279 ,0,1,[]
333,393480441,4323,19542768,2020-03-25 09:36:22,2020-03-25 10:41:18,closed,Fixed ViewableTree deduplication code,Fixes https://github.com/holoviz/holoviews/issues/4321,0,1,[]
334,392983775,4320,19542768,2020-03-24 13:15:35,2020-03-24 23:57:36,closed,Explicitly namespace dim expressions,"In previous PRs we allowed dim expressions to provide access to any method or accessor. This provides zero validation against typos and is also quite brittle. Instead we have decided that we will provide two additional `dim` objects to explicitly use specific namespaces, the default `dim` effectively mirrors the NumPy namespace, while `df_dim` provides access to the DataFrame-like namespaces, and `xr_dim` to provide access to the XArray namespace. Instead of use these directly we will allow users to access the namespace by using `dim(...).df` and `dim(...).xr`. By default these will only work specifically on objects that can be coerced to conform to this namespace, i.e. a `df_dim` will only work with columnar (or geometry) data, an `xr_dim` will work only on gridded data. The `df_dim` can serve this double purpose since coercion can convert any geometry dataset to either spatialpandas or geopandas which do conform to the dataframe API.

The benefits of namespacing the objects are:

- Tab-completion of the API
- Validation of the API (no more typos accidentally making it through)
- Clear semantics
- Ability to use namespace on compatible objects through coercion",8,20,[]
335,392699857,4319,19542768,2020-03-23 23:53:31,2020-03-24 00:40:52,closed,Add responsive option for Plotly elements,Fixes https://github.com/holoviz/holoviews/issues/3634,0,1,[]
336,392616151,4318,19542768,2020-03-23 20:14:50,2020-03-23 21:43:20,closed,Unified datetime formatting in bokeh,"Fixes https://github.com/holoviz/holoviews/issues/1261
Fixes #4315",0,3,[]
337,392511125,4316,19542768,2020-03-23 17:01:44,2020-03-23 19:06:41,closed,Readd reference manual,Fixes https://github.com/holoviz/holoviews/issues/2001,0,5,[]
338,392372731,4314,19542768,2020-03-23 13:05:08,2020-03-23 15:15:45,closed,Ensure clim is respected even if only upper or lower bound are set,,0,2,[]
339,392358842,4313,19542768,2020-03-23 12:35:52,2020-03-23 15:15:29,closed,Fixed bug updating Arrow element in bokeh,Fixes https://github.com/holoviz/holoviews/issues/3861,0,3,[]
340,392058375,4311,19542768,2020-03-22 19:31:21,2020-03-23 15:24:13,closed,Allow using dim expressions as accessors,"In a recent PR we added support for `dim` expressions which can call arbitrary functions on the datastructure they will be applied to. This PR generalizes this mechanism to allow not just calling methods but also using accessors on the underlying object, e.g. to use datetime accessors on a pandas Series:

```python
dim_expr = hv.dim('dates').dt.week
ds = hv.Dataset(pd.date_range('2012', '2013'), 'dates', datatype=['dataframe'])
ds.transform(week=dim_expr).data
```

![Screen Shot 2020-03-22 at 8 31 05 PM](https://user-images.githubusercontent.com/1550771/77258625-14448200-6c7c-11ea-9798-54c4b1729733.png)
",0,7,[]
341,392047333,4310,19542768,2020-03-22 18:10:13,2020-03-25 00:21:43,closed,Add CHANGELOG for v1.13.1,,0,4,[]
342,392025802,4309,19542768,2020-03-22 15:43:17,2020-03-22 17:57:22,closed,Require pandas,,0,5,[]
343,392024416,4308,19542768,2020-03-22 15:34:03,2020-03-22 16:18:55,closed,Ensure tool string lookup import is robust,Compatibility with upcoming bokeh 2.0.1,0,1,[]
344,391687540,4307,19542768,2020-03-20 18:43:37,2020-03-21 02:21:08,closed,Website: fix canonical link,"See comments in https://github.com/holoviz/holoviews/issues/4305

Note, I skimmed nbsite + theme code only _really briefly_, so this might not be correct. It might even break something else. But if it's easy to try on a dev site build, might be worth it (unless someone inspects the situation)...",1,1,[]
345,391609403,4306,19542768,2020-03-20 15:55:23,2020-03-20 21:47:54,closed,Added CHANGELOG for v1.13.0,,1,12,[]
346,391047578,4304,19542768,2020-03-19 14:47:46,,open,Fix hv.save for png images,"Closes https://github.com/holoviz/holoviews/issues/4302

Calling `holoviews.save` on panels ignores the parameter `fmt` and outputs all the layout objects as `html` files.

This PR updates the name of the file passed to `plot.layout.save` to include the file extension when  the selected format is `png`. This allows panel to also export the panels as `png` images.",8,2,['tag: docs']
347,390646299,4301,19542768,2020-03-18 20:23:44,2020-03-18 22:27:56,closed,Warning if __new__ implicitly casts to DynamicMap,"This PR implements the warning discussed with @jbednar and @philippjfr. The idea is to make the intuitive thing work while alerting the user that some magic is happening in the background. In a sense, this functionality is very similar to how we approach `.collate`.

![image](https://user-images.githubusercontent.com/890576/77003966-4d06f300-692c-11ea-87c2-6a4cf8745d24.png)

Currently work in progress: we can discuss how to improve the warning message and I will format better suggestions for using `.apply` when `kdims`, `vdims` and `kwargs` are not empty.",2,6,[]
348,390538193,4300,19542768,2020-03-18 16:25:48,2020-03-18 17:00:16,closed,Ensure selected plot option can be updated,,0,1,['type: bug']
349,390421894,4299,19542768,2020-03-18 13:00:50,2020-03-18 14:57:48,closed,Avoid datashading twice on Overlay,In certain cases datashade would rasterize the elements of an Overlay twice.,0,1,[]
350,390421148,4298,19542768,2020-03-18 12:59:14,2020-03-18 13:42:13,closed,Fix issues sharing axes on plots with categorical axes,In certain cases plots with one categorical axes were being given a shared axis that is not categorical breaking the plot.,0,1,[]
351,390420366,4297,19542768,2020-03-18 12:57:40,2020-03-18 13:29:40,closed,Do not share Plot.keys between plots,Sharing the Plot.keys between multiple plots can result in a DynamicMap inserting keys which are not valid for other plots therefore we make a copy of the list of keys for each plot.,0,1,[]
352,390102324,4295,19542768,2020-03-17 22:07:41,2020-03-20 15:14:12,closed,V1.13 doc fixes,"* Fixes bug in Slope
* Fixes Bokeh compatibility issues with Linked Stream callbacks including undeclared vars and usage of require to import bokeh modules
* Updates all stream reference notebooks

ToDo:

- [x] Fix error in http://dev.holoviews.org/user_guide/Linked_Brushing.html
- [x] Fix bokeh Bars, CurveEdit, PointerXY thumbnails in ref gallery http://dev.holoviews.org/reference/index.html
- [x] Fix plotly BoxWhisker thumbnail in ref gallery: http://dev.holoviews.org/reference/index.html
- [x] Fix matplotlib Bars thumbnail in ref gallery
- [x] Fix error in http://dev.holoviews.org/user_guide/Tabular_Datasets.html
- [x] Fix warning (WARNING:param.DynamicMap04364: Setting non-parameter attribute link_inputs=False using a mechanism intended only for parameters
) in http://dev.holoviews.org/user_guide/Custom_Interactivity.html
- [x] Fix error in http://dev.holoviews.org/user_guide/Large_Data.html",5,17,[]
353,390010175,4294,19542768,2020-03-17 18:38:37,2020-03-17 19:03:25,closed,Better debouncing of bokeh server callbacks,"This PR fixes issues with debouncing bokeh callbacks on the server, ensuring that events are triggered at most every 50 milliseconds (currently configurable on `ServerCallback.debounce`).",0,1,[]
354,389106848,4292,19542768,2020-03-16 09:42:30,2020-03-16 13:12:53,closed,Fix bug in SpreadingOperation,Previous commit introduced a regression causing images to be flipped.,0,2,[]
355,387850759,4291,19542768,2020-03-13 15:51:34,2020-03-13 16:22:20,closed,Improvements for reducing queued server events,"Uses two strategies to reduce the number of events arriving from a Callback:

1) Does not send the same event twice
2) Batches events that arrive together, e.g. changes on Range1D.start and Range1D.end properties must arrive together",0,2,[]
356,387818864,4290,19542768,2020-03-13 14:52:34,2020-03-16 15:01:04,closed,Generalized concept of implicit categories,Fixes some issues with categorical Segments.,0,1,[]
357,387788307,4289,19542768,2020-03-13 13:52:32,2020-03-13 14:43:59,closed,Add apply_when operation,"A helper function that allows applying an operation if the data in the current viewport matches some user defined predicate, e.g. this allows switching between datashaded and non-datashaded views depending on the zoom level   

```python
apply_when(hv.Points(np.random.randn(10000, 2)), operation=datashade, predicate=lambda p: len(p) > 1000)
```

![apply_when](https://user-images.githubusercontent.com/1550771/76626877-3b8fa680-653a-11ea-97aa-e9f6e7fafb4b.gif)
",0,1,[]
358,387419542,4288,19542768,2020-03-12 18:56:49,2020-03-13 12:19:02,closed,Add flag to declare Operations that should be applied per element,This adds a `_per_element` flag to the Operation baseclass and enables that flag for select subclasses. In 2.0 we can consider flipping that switch and applying it by default as suggested by https://github.com/holoviz/holoviews/issues/1107,2,1,[]
359,386844192,4286,19542768,2020-03-11 18:10:50,2020-03-11 18:41:58,closed,Handle Image types in spread operations,Once datashader supports simple (non-rgb) arrays in spread operations this will ensure they are supported.,0,1,[]
360,386798496,4283,19542768,2020-03-11 16:35:48,2020-03-11 16:35:56,closed,Build fix,,0,7,[]
361,386685741,4282,19542768,2020-03-11 13:21:19,2020-03-11 14:07:15,closed,Ensure AdjointLayout options are applied,https://github.com/holoviz/holoviews/issues/4273,0,1,[]
362,386635078,4281,19542768,2020-03-11 11:31:15,2020-03-11 12:55:29,closed,Add ability to define selected glyphs on bokeh plots,,0,3,[]
363,386277390,4278,19542768,2020-03-10 17:48:13,2020-03-11 01:19:58,closed,Improve TriMesh wiremesh rendering,Switches to rendering datashaded TriMesh wireframe using Canvas.line(axis=1) and also allows rendering trimeshes where the vertex indices are not straightforward integer indices into the node array.,2,3,[]
364,386209278,4277,19542768,2020-03-10 15:39:26,2020-03-10 16:34:29,closed,Allow overlay on a dynamicmap nested in a dynamicmap,Supersedes https://github.com/holoviz/holoviews/pull/4089,0,1,[]
365,386102769,4275,19542768,2020-03-10 12:24:45,2020-03-10 13:21:09,closed,Make cleanup safer,,0,1,[]
366,384465279,4272,19542768,2020-03-05 19:44:14,2020-03-05 19:59:59,closed,Require firefox and geckodriver for doc builds,,0,1,[]
367,384463306,4271,19542768,2020-03-05 19:39:41,2020-03-05 19:41:04,closed,Pin matplotlib for conda.recipe tests,,0,1,[]
368,384433922,4270,19542768,2020-03-05 18:30:05,2020-03-05 19:22:16,closed,Pin matplotlib for conda.recipe tests,,0,1,[]
369,384255312,4268,19542768,2020-03-05 12:45:37,2020-03-05 19:34:28,closed,Various fixes for docs,,0,6,[]
370,384210655,4267,19542768,2020-03-05 11:06:26,2020-03-05 12:47:57,closed,Add support for handling datetime.time types,Fixes #4211 ,0,1,[]
371,383961453,4266,19542768,2020-03-04 23:14:05,2020-03-05 11:06:44,closed,Update custom HoverTool,"Fixes https://github.com/holoviz/holoviews/issues/3609
Fixes https://github.com/holoviz/holoviews/issues/4242",0,1,[]
372,383822368,4265,19542768,2020-03-04 19:42:18,2020-03-05 12:48:39,closed,Require matplotlib-base in conda recipe,Fixes #4263 ,1,1,[]
373,383819014,4264,19542768,2020-03-04 19:37:53,2020-03-04 22:44:26,closed,Rename apply function argument,Fixes https://github.com/holoviz/holoviews/issues/4257,0,1,[]
374,383753222,4262,19542768,2020-03-04 18:05:36,2020-03-04 23:09:34,closed,Added matplotlib trove classifier,As planned in https://github.com/pypa/pypi-support/issues/232,0,1,[]
375,383578063,4260,19542768,2020-03-04 14:07:14,2020-03-04 18:29:31,closed,Datashader fixes and documentation updates,,0,3,[]
376,383559712,4259,19542768,2020-03-04 13:36:18,2020-03-04 14:08:50,closed,Ensure partials are handled correctly as callback,,0,1,[]
377,383513915,4258,19542768,2020-03-04 12:07:11,2020-11-28 13:50:19,closed,Set histogram normed option to False by default,Fixes #2161 ,0,2,[]
378,383138049,4256,19542768,2020-03-03 19:41:13,2020-03-04 12:07:32,closed,Update FAQ language on axiswise option,Fix https://github.com/holoviz/holoviews/issues/4175,0,1,[]
379,383131308,4255,19542768,2020-03-03 19:26:12,2020-03-04 12:07:43,closed,Expose Graph node_marker option,Fixes #4190 ,0,2,[]
380,383126916,4254,19542768,2020-03-03 19:15:47,2020-03-04 13:39:13,closed,Handle pandas 1.0 NA type,,0,1,[]
381,383118544,4253,19542768,2020-03-03 18:56:30,2020-03-04 13:39:27,closed,Improved logic for default Sankey node_padding,Fixes https://github.com/holoviz/holoviews/issues/3501,0,2,[]
382,383105818,4252,19542768,2020-03-03 18:26:13,2020-03-03 19:42:27,closed,Address moved import of Iterable,Fixes https://github.com/holoviz/holoviews/issues/4220,0,2,[]
383,383102712,4251,19542768,2020-03-03 18:18:35,2020-03-04 12:14:13,closed,Handled ImageMagick gif deprecation,Fixes https://github.com/holoviz/holoviews/issues/2460,0,2,[]
384,383095627,4250,19542768,2020-03-03 18:01:44,2020-03-03 18:57:24,closed,Fixes to documentation and moved collapse method,Fixes https://github.com/holoviz/holoviews/issues/1696,0,1,[]
385,383060065,4249,19542768,2020-03-03 16:46:20,2020-03-03 18:04:29,closed,Fix issue setting legend location,Fixes https://github.com/holoviz/holoviews/issues/4191,0,1,[]
386,383045797,4248,19542768,2020-03-03 16:19:53,2020-03-03 17:12:38,closed,Handle missing streams attribute on certain plot classes,Fixes https://github.com/holoviz/holoviews/issues/4231,0,1,[]
387,383041756,4247,19542768,2020-03-03 16:12:38,2020-03-03 16:47:47,closed,Fix empty clabel bug in matplotlib backend,Fixes https://github.com/holoviz/holoviews/issues/4232,0,1,[]
388,383036604,4246,19542768,2020-03-03 16:03:26,2020-03-23 23:09:42,closed,Fix bug setting Overlay.relabel default depth to 1,Fixes #4197 ,0,3,[]
389,383026078,4244,19542768,2020-03-03 15:44:46,2020-03-03 18:03:34,closed,Fixed bug handling packed value dimensions in rasterize operation,Fixes https://github.com/holoviz/holoviews/issues/4208,0,2,[]
390,382632043,4243,19542768,2020-03-02 22:04:23,2020-03-03 18:04:02,closed,Added table of elements supported for link_selections,,0,2,[]
391,381585477,4240,19542768,2020-02-28 20:40:14,2020-02-28 22:18:07,closed,Fix issue with range handling in datashader,Fixes #4239 ,0,1,[]
392,377381398,4233,19542768,2020-02-19 20:32:46,2020-02-19 21:35:24,closed,Ensure get_dimension does not match Dimensions with mismatching spec,"Ensures that the outcome of #843 is actually respected and that Dimensions only match if their spec matches. 
",0,1,[]
393,376584202,4228,19542768,2020-02-18 12:14:54,2020-02-18 13:27:48,closed,small correction in docs on colormaps,Using holoviews 1.12.7 I found the path to the process_cmap function to be different from what the docs mention. Here's a small correction.,0,1,[]
394,376264991,4227,19542768,2020-02-17 18:16:12,2020-02-17 18:57:04,closed,Fix tests for bokeh embedding,,0,2,[]
395,376246006,4226,19542768,2020-02-17 17:20:22,2020-02-29 01:23:59,closed,Bokeh 2.0 compatibility,,0,12,[]
396,370019375,4216,19542768,2020-02-02 15:00:22,2020-02-12 22:27:21,closed,Fix for issue #4209,Fixes chord diagram not working with numpy>=1.18.0,2,1,[]
397,369820151,4215,19542768,2020-02-01 00:06:46,2020-03-10 15:27:59,closed,Add muted style option to bokeh plots,Closes https://github.com/holoviz/holoviews/issues/3730,0,3,[]
398,369819363,4214,19542768,2020-02-01 00:02:58,2020-02-27 21:41:46,closed,Ensure HeatMap handles single value or empty axes,Some issues with the numerical axes support I added to HeatMap,0,1,[]
399,367651753,4207,19542768,2020-01-27 19:01:29,2020-01-29 19:09:33,closed,Add note about ad blockers,Adds a warning on the HeatMap webpage about mysterious problems users could encounter with files named HeatMap.ipynb (https://github.com/holoviz/holoviews/issues/4206). Also fixes a link rendered incorrectly on the website.,1,2,[]
400,366826980,4203,19542768,2020-01-24 13:04:06,2020-01-24 16:52:45,closed,Remove remaining old param API usage,,0,1,[]
401,366600168,4202,19542768,2020-01-23 22:34:31,2020-01-31 23:23:35,closed,Ensure dynamic parameter values are evaluated before being passed to param,Fixes issue introduced by https://github.com/holoviz/param/pull/367,1,1,[]
402,366203604,4201,19542768,2020-01-23 06:35:11,2020-01-24 01:03:18,closed,Warning when using methods outside param namespace,Currently toggling on warnings but once they are all fixed I think it might be worth raising errors instead. My plan is to use travis to find out where things need updating.,3,14,[]
403,365423749,4199,19542768,2020-01-21 17:26:39,2020-01-24 19:08:07,closed,Tab completion via __signature__,"This PR aims to address #4193. 

Note that the docstring approach is used for 2.x only (i.e 2.7 which will be dropped this year) and ``__signature__`` is used for all 3.x. This means things won't work in 3.0, 3.1, 3.2 as ``__signature__`` was introduced in 3.3. I don't believe this matters as holoviews doesn't support those versions anyway.

Currently work in progress:

- [x] Tab completion for `opts`
- [x] Tab completion for the extension.
- [ ] Address other uses of ``__doc__`` for tab completion.

The bigger issue is that most of our parameterized objects used param to implement the tab completion and updating param in a general way is trickier. Thankfully, I think that tab completing options is the critical thing for holoviews and that needs special handling anyway.",4,11,['type: enhancement']
404,364604993,4194,19542768,2020-01-20 01:13:31,2020-03-10 16:34:46,closed,Implement linking on categorical axes,,0,2,[]
405,363907246,4189,19542768,2020-01-17 00:17:17,2020-01-17 00:35:05,closed,Allow other layers in annotator.compose,"Allows adding HoloMap and DynamicMap layers in the background/foreground:

```python
import holoviews as hv
import numpy as np
import geoviews as gv
import panel as pn

hv.extension('bokeh')

select = pn.widgets.Select(options=gv.tile_sources.tile_sources)
show_labels = pn.widgets.Checkbox(name='Show labels', value=True)

@pn.depends(tiles=select, show_labels=show_labels)
def tiles(tiles, show_labels):
    alpha = 1 if show_labels else 0
    return tiles() * gv.tile_sources.StamenLabels().opts(alpha=alpha)

tile_dmap = hv.DynamicMap(tiles)
rectangle = gv.Rectangles([]).opts(global_extent=True, responsive=False, width=500, height=500)

annotator = hv.annotate.instance()
layout = annotator(rectangle, name='Map Annotator', annotations=['Label'])

pn.Column(
    '# Map Annotator',
    pn.Row(select, show_labels),
    hv.annotate.compose(tile_dmap, layout),
)
```

![ezgif-6-224417363e90](https://user-images.githubusercontent.com/1550771/72573786-13335500-38c7-11ea-82b6-b4f28c2ea1e0.gif)
",0,1,[]
406,363739251,4188,19542768,2020-01-16 16:37:18,2020-01-16 17:26:41,closed,Fixed issues with irregular xarray shape,,0,3,"['type: bug', 'tag: component: data']"
407,363643726,4185,19542768,2020-01-16 13:24:48,2020-01-16 13:52:11,closed,fix explanation of Points vs Scatter,"It is the Scatter element where y is considered dependent on x, not the
Points element.",3,1,[]
408,363351140,4184,19542768,2020-01-15 21:42:16,2020-01-16 16:49:45,closed,Allow calling annotator on Overlay,"Allows calling `annotate` on an Overlay containing one element to annotate and other elements which cannot be annotated. Will error if multiple elements to annotate are supplied.

- [x] Add tests
- [x] Update docs",2,7,[]
409,363323565,4183,19542768,2020-01-15 20:29:04,2020-01-15 21:29:46,closed,Refactored Bars plot implementations,"- [x] Implements https://github.com/holoviz/holoviews/issues/2828
- [x] Implements https://github.com/holoviz/holoviews/issues/1407
- [x] Implements https://github.com/holoviz/holoviews/issues/3839
- [x] Updates docs",2,3,[]
410,362390948,4182,19542768,2020-01-14 00:44:14,2020-01-15 19:40:43,closed,Enable padding on all non-raster elements,"- [x] Fixes https://github.com/holoviz/holoviews/issues/1090
- [x] Set padding default to 0.1, default for Area/Curve/Spread to (0, 0.1) and default for raster-like elements to 0
- [x] Update tests
- [x] Remove explicit padding from examples
- [x] Fixed shared axes in plotly
- [x] Fixed BarPlot get_extents issues
- [x] Add config.no_padding flag",7,20,[]
411,361734709,4180,19542768,2020-01-11 14:34:48,2020-01-13 01:03:58,closed,Add support for non-categorical HeatMap,Fixes https://github.com/holoviz/holoviews/issues/2128,7,13,['status: ready']
412,361557642,4179,19542768,2020-01-10 17:48:31,2020-01-11 14:42:07,closed,Disable linking axes of different types,"Previously axes which had values of different types would still share their ranges (causing errors) or linked their axes (causing a lot of weirdness). For now this PR disables the linking and skips computing the shared ranges. The correct solution would be to compute the ranges by type, i.e. datetime and numeric would get stored and shared separately which would allow axes to still share ranges if their types match, e.g. if there are two numeric and one datetime axes the numeric axes would at least still match. 

Fixes https://github.com/holoviz/holoviews/issues/3845",0,4,[]
413,361522666,4178,19542768,2020-01-10 16:18:02,2020-01-10 17:54:31,closed,Fix responsive for Sankey,Fixes https://github.com/holoviz/holoviews/issues/4058,0,1,[]
414,361514211,4177,19542768,2020-01-10 15:57:46,2020-01-10 17:05:23,closed,Ensure we do not push bokeh events when embedding,Fixes issues with Panel embedding,0,1,[]
415,360984638,4176,19542768,2020-01-09 14:22:39,2020-01-09 14:46:19,closed,Avoid unnecessary casting after MultiInterface.iloc,If MultiInterface.iloc returns a list of Datasets the Dataset constructor will attempt to unpack these which can cause unnecessary casting or even drop additional data.,0,1,"['type: bug', 'tag: component: data']"
416,360727171,4174,19542768,2020-01-09 01:23:40,2020-01-10 19:42:07,closed,Simplified packaging,"* Get's rid of the hacky package bundling and uses the MANIFEST in the way we use across projects.
* Uses setuptools `find_packages` which reduces the risk of forgetting to add a newly added subpackage (which has happened a few times)
 * Adds pyproject.toml to ensure that `pip install -e .` works consistently (and should allow GitHub to extract the necessary information from the setup.py)
* Gets rid of param embed_version, we don't use that in any other package and no one has ever complained

I'm also hoping that this will finally allow GitHub to extract the information it needs from the setup.py to add the `Used By` button at the top of the repo.",4,2,[]
417,360704257,4173,19542768,2020-01-08 23:40:26,2020-01-09 00:00:52,closed,Updated annotator docs,"- Moved all tool image PNGs to the end of the line so that their formatting in the notebook is reasonable (not great, but plausible).
- Made description match the new default annotation type of Str
- Other misc updates

(Before this PR, bokeh-tool image PNGs would look fine on the website, but on the notebook they would mess up the line formatting and spacing.)",0,1,[]
418,360677406,4172,19542768,2020-01-08 22:08:48,2020-01-08 22:29:24,closed,Change default annotation type to string,,1,1,[]
419,360486652,4169,19542768,2020-01-08 14:30:23,2020-01-08 19:48:31,closed,Fix builds [doc-build],,0,10,[]
420,360276239,4167,19542768,2020-01-08 04:27:44,2020-01-08 14:05:49,closed,Enhanced Annotators  and clarified docs,"Some changes worth noting/explaining:
- I found it very confusing to introduce the annotator without .instance() first, then have to say it's unusable. Given that doing so is a very strange thing, I opted to use .instance right away, even if it's mysterious.
- To emphasize that annotate is the underlying call and annotator is the thing you'll actually use, I removed the import of annotate and systematically referred to it using hv.annotate instead. I think that helps keep the two things straight; one is an object you can work with in your namespace (annotator); the one provided by the HoloViews library is just for getting something you actually then use, not something to call or work with directly. That's the hope, anyway!
- Changed integer coordinates to floats where it was necessary to avoid issue #4166.
- Added Scatter to the list of supported elements (but there's no Scatter example; should say in words how to make one).
- Commented-out the last cell, which is very confusing on a statically rendered notebook, as the output no longer matches the cell code when reading through it.  Should now be ok.

Ready to merge, but there are things left to do (presumably in a later PR, as this one should be merged to make the docs be usable now):
- [x] Should explain better what to do for types not supported yet (cast to supported type, write new hv code, add Bokeh tools, ?)
- [x] Annotating paths/polygons needs much better docs; it's really hard to figure out how to use it right now. I didn't try to update that section, but not because it doesn't need it!

",3,8,[]
421,360024487,4165,19542768,2020-01-07 14:50:28,2020-01-07 15:37:20,closed,Resolve Annotator according to mro,,0,2,[]
422,359923432,4163,19542768,2020-01-07 10:25:15,2020-01-07 11:30:18,closed,Improvements for annotate function,,0,3,[]
423,359577632,4162,19542768,2020-01-06 14:57:37,2020-01-06 15:17:41,closed,Fixed categorical axis on radial HeatMap,Fixes https://github.com/holoviz/holoviews/issues/4046,0,1,[]
424,359559208,4161,19542768,2020-01-06 14:10:21,2020-01-06 14:34:57,closed,Ensure that matplotlib SpreadPlot applies transforms,Fixes https://github.com/holoviz/holoviews/issues/3994,0,1,[]
425,359536792,4160,19542768,2020-01-06 13:11:52,2020-01-07 12:25:40,closed,Implement fontscaling,"Fixes https://github.com/holoviz/holoviews/issues/4107

Here's 1.4x fontscaling for bokeh and matplotlib:

![Screen Shot 2020-01-06 at 2 25 56 PM](https://user-images.githubusercontent.com/1550771/71820780-7e438700-3090-11ea-938d-30a7efc5c186.png)


![Screen Shot 2020-01-06 at 2 32 05 PM](https://user-images.githubusercontent.com/1550771/71821044-54d72b00-3091-11ea-90cf-68bf4d937d3e.png)
",7,9,[]
426,359510453,4159,19542768,2020-01-06 11:47:23,2020-01-06 13:12:16,closed,Fix support for pscript formatters in bokeh,Fixes https://github.com/holoviz/holoviews/issues/4110,0,1,[]
427,359507899,4158,19542768,2020-01-06 11:38:44,2020-01-06 12:14:38,closed,Allow PandasInterface constructor with duplicate dimensions,Fixes https://github.com/holoviz/holoviews/issues/4139,0,1,[]
428,359506580,4157,19542768,2020-01-06 11:33:56,2020-01-06 12:15:03,closed,Unify hooks across backends,Fixes https://github.com/holoviz/holoviews/issues/4141,0,1,[]
429,359498838,4156,19542768,2020-01-06 11:11:26,2020-01-06 11:39:28,closed,Ensure that widget passed as apply kwarg is treated as dynamic input,Fixes https://github.com/holoviz/holoviews/issues/4148,0,1,[]
430,359308356,4155,19542768,2020-01-05 14:51:45,2020-01-05 20:02:43,closed,Add element nbsmoke tests,"- [x] Adds nbsmoke tests for element notebooks
- [x] Fixes appveyor
- [x] Cleans up all warnings

Look just how beautifully clean the build logs are now: https://travis-ci.org/holoviz/holoviews/jobs/633003368#L1670",0,19,[]
431,359307768,4154,19542768,2020-01-05 14:44:36,2020-01-05 14:51:22,closed,Cleared metadata in all notebooks,,0,1,[]
432,359222148,4153,19542768,2020-01-04 15:25:42,2020-01-04 15:53:07,closed,Ensure that Annotators rerender on parameter changes,,0,1,[]
433,358978125,4151,19542768,2020-01-03 12:49:00,2020-01-03 14:00:59,closed,Annotator bugs,Fixes https://github.com/holoviz/holoviews/issues/4149,0,4,[]
434,358721607,4147,19542768,2020-01-02 16:47:37,2020-01-02 17:06:46,closed,"typo fix, path->poly",minor typo fix to the last cell in the notebook. The poly_annotator was labeled as path annotator.,2,1,[]
435,358666861,4146,19542768,2020-01-02 13:56:26,2020-01-03 18:00:50,closed,Add Rectangles element,"A Rect element is a vectorized geometry element which is somewhat similar to Segments in that it has four kdims, `x0`, `y0`, `x1`, `y1`, representing the corners of the rectangle. It's a versatile element which can be used to draw a variety of different plots, e.g.:

![Screen Shot 2020-01-03 at 4 49 15 PM](https://user-images.githubusercontent.com/1550771/71733084-020b3280-2e49-11ea-911b-424b1b894c75.png)

It is also better suited towards usage with the `BoxEdit` tool, so this PR refactors the corresponding stream to accept and return `Boxes` and adds a `BoxAnnotator` which allows annotating a plot with rectangles/boxes.

- [x] Update BoxEdit stream
- [x] Add bokeh, matplotlib and plotly implementations
- [x] Add Boxes reference examples
- [x] Add BoxAnnotator and added example to user guide
- [ ] Add tests",10,19,['type: feature']
436,358649573,4145,19542768,2020-01-02 12:53:38,2020-01-02 13:37:54,closed,Improvements for Annotators,Minor fixes which enable extensions in GeoViews (see https://github.com/holoviz/geoviews/pull/377),0,1,[]
437,355429077,4138,19542768,2019-12-19 23:50:21,2019-12-19 23:50:26,closed,Allow Dataset type as datashader target,,0,1,[]
438,355401036,4137,19542768,2019-12-19 22:36:33,2019-12-31 12:30:30,closed,Dataset propagation improvements,"https://github.com/holoviz/holoviews/pull/4137/commits/c5adc794e3ecc04ebc6721b0765ef4520938a59e: Cloning a `Dataset` object  with `ds.clone(dataset=None)` should not propagate the `dataset` property to the cloned  object.  That was the behavior initially, but was changed (I think unintentionally) in 83da274a080e99553f531eb591c3983746c12acf. @philippjfr, does this patch look alright?

Added a simple test to lock in the behavior for the future.


https://github.com/holoviz/holoviews/pull/4137/commits/c65395b6fbcc8865f096798e1b5902bc77d99f6f:  Add `Operation._propagate_dataset` class flag to control whether to automatically propagate dataset/pipeline through an operation.

For context, these are both small fixes/improvements needed to get the glaciers demo working with `link_selections`.",2,3,[]
439,355261154,4136,19542768,2019-12-19 17:32:49,2019-12-19 18:03:35,closed,Fixed plotting of Contours,Fixed a regression from #4120 ,0,1,[]
440,354470952,4131,19542768,2019-12-18 07:32:23,2019-12-31 12:30:52,closed,Update 04-Style_Mapping.ipynb,"Changed the first example to show the case where kdims are not x,y . This may help beginner readers to use data sets that are not defined by x,y names.",3,1,[]
441,352578605,4126,19542768,2019-12-12 19:40:17,2019-12-12 21:25:58,closed,Fix XArrayInterface.aggregate handling of **kwargs,"The `aggregate` method of a `holoviews.Dataset` object that was prepared from a `xarray.DataArray` does not pass extra keyword arguments to the aggregation function.

Adding `**kwargs` to the underlying call to xarray's `reduce()` function in the `XArrayInterface.aggregate()` method fixed the issue for me.",1,1,['tag: component: data']
442,350451837,4122,19542768,2019-12-08 20:35:49,2019-12-08 20:49:40,closed,Updated tests after fix to datashader line aggregation,,1,1,['tag: component: testing']
443,350200522,4121,19542768,2019-12-06 21:09:23,2019-12-06 22:26:08,closed,Fix incorrect parameter warnings when using datashade,"
I believe this might be the simplest approach to address the superfluous warnings when using `datashade` as described in #4116.",2,3,[]
444,350115474,4120,19542768,2019-12-06 17:19:51,2019-12-18 19:08:15,closed,Add spatialpandas interface and polygon rasterization,"- [x] Add spatialpandas interface
- [x] Add canonical conversion for all geometry data formats
- [x] Add support for rasterizing geometries 
- [x] Add docs
- [x] Add tests",6,59,"['type: feature', 'status: ready', 'tag: component: data']"
445,349389955,4119,19542768,2019-12-05 11:22:05,2020-03-02 19:32:42,closed,Add crossfilter mode to link_selections,"## Overview
This PR introduces a new `mode` argument to the `link_selections` function that was added in https://github.com/holoviz/holoviews/pull/4044.

The default value, `""overwrite""`, matches the existing behavior where each selection replaces the prior selection across all elements.

In the new `""crossfilter""` mode, each selection replaces any existing selection on the current element, and selections across all elements are combined with an intersection operation.

To make the crossfilter state easier to interpret, the selected region for each element on which a selection has been performed is displayed in a lighter shade of the selection color. For box-select on scatter-like 2D elements, the selection region is displayed as a `Bounds` element.  For histogram elements, the selected region is displayed as an overlayed histogram indicating which bars have been selected.

See the GIFs below for examples of what this looks like.  Do these selection region indicators make sense to others?

Additionally, this PR uses the `PlotReset` stream to reset all selections when the plot is reset.  This works for the bokeh backend, but the `PlotReset` stream is not yet implemented for the Plotly backend.

## Examples
Example notebook at https://anaconda.org/jonmmease/cross_filter_link_selections_pr
### Bokeh scatter/histogram example
![crossfilter1](https://user-images.githubusercontent.com/15064365/70229599-8a03fc80-1724-11ea-8ff6-5f8ffb1256cd.gif)

### Plotly scatter/histogram/scatter3d/table example
![crossfilter2](https://user-images.githubusercontent.com/15064365/70229616-8ff9dd80-1724-11ea-86e2-b081ab074f6d.gif)

### Bokeh violin/bivariate/distribution/histogram example
![crossfilter3](https://user-images.githubusercontent.com/15064365/70229728-be77b880-1724-11ea-84aa-cc4ddf01acb6.gif)

### Bokeh datashader example
![crossfilter4](https://user-images.githubusercontent.com/15064365/70229921-28905d80-1725-11ea-91aa-a8506ecdde57.gif)

## Glaciers Example
Note: I believe this functionality is enough to rewrite the glaciers app once https://github.com/holoviz/holoviews/issues/4116 is fixed.",58,97,[]
446,348252004,4115,19542768,2019-12-03 10:37:49,2019-12-06 21:57:55,closed,Added outer and inner label_position options to Sankey plot (#4065),"Fixes issue: #4065

Changes: added outer and inner option for label_position parameter of Sankey plot

Tested by running on three Sankey examples: energy, ABXYZ and Royal Society report.

@maintainers: I need some help how to run unit tests, is there a guide somewhere?

Output:
right:
![image](https://user-images.githubusercontent.com/7702207/70043229-5e680180-15c0-11ea-9b20-464df0a96b37.png)

left:
![image](https://user-images.githubusercontent.com/7702207/70043319-8ce5dc80-15c0-11ea-9cc4-3306d9cada2c.png)

outer:
![image](https://user-images.githubusercontent.com/7702207/70043364-9f601600-15c0-11ea-82b1-83990ee6b589.png)
![image](https://user-images.githubusercontent.com/7702207/70043452-c61e4c80-15c0-11ea-9379-3d51dec9b1ae.png)
![image](https://user-images.githubusercontent.com/7702207/70043596-10073280-15c1-11ea-8a8e-654a196d41dd.png)

inner:
![image](https://user-images.githubusercontent.com/7702207/70043392-ab4bd800-15c0-11ea-8646-00628acefd02.png)
",1,1,[]
447,346891800,4112,19542768,2019-11-29 04:40:06,2020-01-13 22:32:35,closed,Add split violin,"https://github.com/holoviz/holoviews/issues/4096
Not ready yet. I don't know how to add a legend and change the colors. Not sure if this implementation is the best approach. Also, not sure how to make the widths as proportionate as seaborn. Feel free to edit/make commits directly. Also didn't handle for matplotlib/plotly.

```
import numpy as np
import holoviews as hv
hv.extension('bokeh')

import seaborn as sns
sns.set(style=""whitegrid"")
tips = sns.load_dataset(""tips"")

ax = sns.violinplot(x=""day"", y=""total_bill"", hue=""sex"",
                    data=tips, palette=""Set2"", split=True,
                    scale=""count"")

import pandas as pd
tips = pd.concat([
    tips.loc[tips['day'] == 'Thur'],
    tips.loc[tips['day'] == 'Fri'],
    tips.loc[tips['day'] == 'Sat'],
    tips.loc[tips['day'] == 'Sun']
])

hv.Violin(tips, 'day', ['total_bill', 'sex']).opts(ylim=(-10, 60), width=600)
```

![image](https://user-images.githubusercontent.com/15331990/69844036-f6b45e00-122f-11ea-92d6-9a2e8e8c2580.png)
",10,10,[]
448,346448456,4108,19542768,2019-11-27 22:32:50,2019-11-27 22:51:22,closed,Remove unused imports.,Replaces #3940. Hopefully this should be straightforward to merge.,1,1,[]
449,346176942,4106,19542768,2019-11-27 10:53:51,2019-11-27 14:11:01,closed,Sankey: toggle node sorting in ascending breadth.,"```python
import pandas as pd
import holoviews as hv

hv.extension(""bokeh"")

sankey = hv.Sankey(
    pd.DataFrame(
        [
            [""B"", ""X"", 2],
            [""A"", ""X"", 5],
            [""A"", ""Y"", 7],
            [""A"", ""Z"", 6],
            [""B"", ""Y"", 9],
            [""B"", ""Z"", 4],
            [""Y"", ""F"", 4],
            [""Y"", ""C"", 12],
            [""Z"", ""C"", 5],
            [""Z"", ""F"", 5],
            [""X"", ""F"", 7],
        ],
        columns=[""source"", ""target"", ""value""],
    )
)
sankey.opts(
    width=600,
    height=300,
    edge_color=""target"",
    node_color=""source"",
    color_index=0,
    node_sort=True,  #default
```
sorted:
![sorted](https://user-images.githubusercontent.com/1495173/69717339-2a966300-110c-11ea-97f2-2771a34f0eba.png)
not sorted:
![not_sorted](https://user-images.githubusercontent.com/1495173/69717336-2a966300-110c-11ea-9352-85fc9a412ebd.png)

This is important when comparing Sankey plots for the same dataset while filtering several options. If the sorting is handled by the order of the dataframe passed to Sankey (hence by the user) then nodes not getting sorted allows a straightforward comparison of the plots.",2,1,[]
450,345374898,4105,19542768,2019-11-25 19:16:35,2019-11-27 21:42:24,closed,Passing extra parameters through rasterize operation,"This PR is *not* ready right now: the goal is to get a discussion going about how exactly we can dispatch parameters from a generic parameterized function to delegated parameterized functions.

The code path is tricky but here are the key points of what I am trying to achieve together with the various caveats:

1. `Operation` is given the class attribute `_allow_extra_keywords=False` by default. This preserves the current behavior for most operations. Classes that need to dispatch keywords to parameters can override this to `True` (which all classes will then inherit). This sets the corresponding argument in `param.ParamOverrides`.

2. I can't use param to warn here as the warning is determined by the set of parameterized functions that can be dispatched over. It would be nice to generalize but with this approach HoloViews, not param is doing the warning. 

3. This means I have to also silence unknown parameter warnings in the `instance` method which get used when `rasterize` is called. This is why I am filtering with `{k:v for k,v in params.items() if k in self_or_cls.param}`.

4. The `_process` method involves a loop over 'transforms' (rasterizers) and then over the layers of any overlay passed in. I have to filter out unknown parameters but track which one could get used by one of the rasterizers *whether or not there is an element present for it to apply to*. It might be nicer to warn about parameters that don't actually apply to a specific overlay but it is also reasonable to keep `rasterize` general in what it accepts in case the contents of overlays change.

5. The `process_element` method clobbers `self.p` when it gets used with a new `ParamOverrides` which means `.extra_keywords()` doesn't track the extra keywords properly. This is why it is commented out for now: it seems we need a way to merge/update into an existing `ParamOverrides` object.

As you can see this is a little hairier than I hoped and it isn't entirely obvious how this could be abstracted to work at the param level in a nice way. The current code shows an outline of what we might want to do but right now it is more of a pointer to the various problems!",6,7,['type: enhancement']
451,345312221,4104,19542768,2019-11-25 16:41:19,2019-11-25 20:24:28,closed,Increased tolerance for aspect divergence,"Currently to enforce a `data_aspect` it is sometimes necessary to adjust the axis ranges. This works fine generally but if the tolerance for aspect divergence is too small it can be the case that adjusting the axis ranges causes the ticks to increase or decrease in size which in turn changes the aspect and can trigger a loop of events. By increasing the allowable tolerance for aspect divergence we can avoid these bouncing loops.

Fixes https://github.com/holoviz/geoviews/issues/111",0,1,"['type: bug', 'tag: backend: bokeh']"
452,345292198,4103,19542768,2019-11-25 15:59:51,2019-12-05 23:11:44,closed,Ensure bokeh server events are handled on non-server infrastructure,"When using bokeh server events on non-bokeh server infrastructure (e.g. the new ipywidget support) timeout callbacks are currently not processed. This ensures these events are processed appropriately. With this PR linked streams and other bokeh events are handled correctly when wrapped in jupyter_bokeh.

- [x] Try adding new timeouts to add some throttling",0,3,['tag: backend: bokeh']
453,345288645,4102,19542768,2019-11-25 15:52:50,2019-11-25 16:26:32,closed,Port newer CHANGELOG entries,,0,1,[]
454,341077357,4097,19542768,2019-11-14 16:54:41,2019-11-18 14:47:13,closed,Fixed shared_axes/axiswise regression,,0,1,[]
455,338751147,4089,19542768,2019-11-08 16:19:48,2020-03-10 15:39:06,closed,Allow overlay on a dynamicmap nested in a dynamicmap,"This came up on gitter. The following:

```python
import xarray as xr
import hvplot.xarray

dz = xr.tutorial.open_dataset('air_temperature')
dz2 = xr.concat([dz.assign_coords({'group': ""exp1""}), dz.assign_coords({'group': ""exp2""})], 'group')
dz2.hvplot('lon', 'lat', frame_width=200, coastline=True).layout('group')
```

 was failing with the error:
```python-traceback

~/holoviews/holoviews/plotting/util.py in split_dmap_overlay(obj, depth)
    217     layers = []
    218     if isinstance(obj, DynamicMap):
--> 219         if issubclass(obj.type, NdOverlay) and not depth:
    220             for v in obj.last.values():
    221                 layers.append(obj)

TypeError: issubclass() arg 1 must be a class

:NdLayout   [group]
   :DynamicMap   [time]
      :Overlay
         .Image.I     :Image   [lon,lat]   (air)
         .Coastline.I :Feature   [Longitude,Latitude]
```

With this PR, overlaying on a dynamicmap inside a dynamicmap now works.",1,1,[]
456,337552650,4088,19542768,2019-11-06 20:07:13,2019-11-14 19:35:31,closed,Control sort from .overlay/.layout,"Currently, the elements of a kdim subjected to `.overlay` or `.layout` are sorted by default.

This PR is to explore how to let a user disable sorting through these methods.
The proposed API is
```
obj.overlay('kdim', sort=False')
```",5,5,[]
457,337521941,4087,19542768,2019-11-06 18:54:12,2019-11-06 21:36:47,closed,Ensure plot minimum span causes RangeXY dependent operations to recompute,Fixes https://github.com/pyviz/holoviews/issues/4086 .,2,6,[]
458,336544603,4084,19542768,2019-11-05 00:36:57,2019-12-08 16:03:41,closed,Add Annotators,"- [x] Add `Annotator` baseclass
- [x] Add `PointAnnotator`
- [x] Add `PathAnnotator`
- [x] Add `PolyAnnotator`
- [ ] Add `BoxAnnotator`
- [x] Add `annotate` function
- [x] Document `annotate` function
- [x] Add tests for `Annotator` and `annotate`
- [x] Allow declaring transforms for Stream callbacks (#4083)
- [x] Add SelectionLink and VertexTableLink
",20,40,"['type: feature', 'status: ready']"
459,334886363,4080,19542768,2019-10-31 13:11:24,2020-03-09 17:42:36,closed,Multi-dimensional dim transforms on data sets,"Addresses #3932 and https://github.com/holoviz/holoviews/issues/237

Supersedes #3636.

Related to #3790.

In this PR, we have the possibility to apply arbitrary dim transforms with multiple output values to Datasets, taking into account correct insertion of dimensions. The name of the new method used here is `.transform`, which provides two ways of specifying transforms. You either supply tuples of dimensions and dim_transforms as args or as kwargs and the method will apply these transforms and either replace the existing dimensions or add the newly added dimensions as new value dimensions. 

The upside of all of this is that we get complex statistical aggregation for free - see below for an example with hex bins that compute trends within each bin.

List of changes
- [x] Add Dataset.transform
- [x] Implement Interface.assign
- [x] Dataset.aggregate now handles dim transforms
- [x] tests

### Setup

```python
import xarray as xr
from holoviews import Dataset
import numpy as np
import pandas as pd
import holoviews as hv
from holoviews import dim, opts
```

### Multi-dimensional dim transforms and aggregations


```python
df = pd.DataFrame(dict(
    x=np.array(range(7))%2,
    y=np.array(range(7))%3,
    u=np.array(range(7))%4,
    v=np.array(range(7))%5
))
ds = Dataset(df, ['x', 'y'], ['u', 'v'])
nds = ds.groupby(['x'])

# scalar output
tf1 = dim('u', lambda u, v: np.sum(u) + np.sum(v), dim('v'))
# tuple of arrays
tf2 = dim('u', lambda u, v: (u, np.mean(v)), dim('v'))
```

```python
print(ds.data.head())
```

x|y|u|v
---|---|---|---
0|0|0|0
1|1|1|1
0|2|2|2
1|0|3|3
0|1|0|4




```python
print(ds.transform(w=tf1).data)

# same as:
# ds.transform(('w', tf1)).data
```

x|y|u|v|w
---|---|---|---|---
0|0|0|0|20
1|1|1|1|20
0|2|2|2|20
1|0|3|3|20
0|1|0|4|20
1|2|1|0|20
0|0|2|1|20




```python
print(ds.transform((('a', 'b'), tf2), drop=True).data)
```

a|b
---|---
0|1.5714285714285714
1|1.5714285714285714
2|1.5714285714285714
3|1.5714285714285714




```python
print(ds.aggregate('y', w=tf1).data)
```

y|w
---|---
0|9
1|6
2|5


### Example: Complex hex binning operations


```python
hv.extension('bokeh')
xds = xr.tutorial.open_dataset('air_temperature').sel(time=slice(None, '2013-1-5'))
df = xds.to_dataframe().reset_index()

def regression(x1, x2):
    x1 = pd.to_numeric(x1)/1e9/86400.
    p = np.polyfit(x1, x2, 1)
    return p[0], p[1]

tf = dim('time', regression, dim('air'))
ds = hv.Dataset(df, ['lon', 'lat'], ['time', 'air'])

e = hv.HexTiles(ds)
e.opts(gridsize=10, aggregator=(('trend', 'offset'), tf),
       color=dim('trend'),
       scale=dim('offset').norm(),
       colorbar=True, width=600)
```
![image](https://user-images.githubusercontent.com/38992106/67949549-46b2ed00-fbbe-11e9-9d6b-1484d5e03b19.png)
",6,50,[]
460,332635876,4072,19542768,2019-10-25 18:52:08,2019-11-26 20:08:32,closed,Allow spike_length to override second Spikes vdim behavior,"Simple PR that addresses the first suggestion mentioned in #4071. 

Specifically, the spike_length plot option (when explicitly supplied) should override the second vdim (if present) in terms of controlling the spike heights. This is necessary if you want extra vdims (e.g for hover information) but don't need the spike heights to represent anything.

The other two suggestions are also nice but I think they ought to be addressed in separate PRs.",9,23,[]
461,330666830,4068,19542768,2019-10-21 20:17:55,2020-03-02 19:42:19,closed,Enable datetimes in contours operation,"Fixes #4067 for filled=False (i.e. paths).

```
import xarray as xr
da = xr.tutorial.load_dataset('air_temperature').air.isel(lat=0)

import holoviews as hv
hv.extension('bokeh')
from holoviews.operation import contours
l = hv.QuadMesh(da)
contours(l)
```

now correctly displays datetimes

To do:
- [ ] filled=True (multipolygons)
- [ ] tests",3,1,[]
462,328906932,4063,19542768,2019-10-16 18:53:56,2019-10-30 18:14:53,closed,Added styles for PointDraw (#3819),,1,2,[]
463,328904236,4061,19542768,2019-10-16 18:47:29,2019-10-27 21:19:18,closed,Fixed title formatter in GenericElementPlot,"Before: 
![Screen Shot 2019-10-16 at 2 38 29 PM](https://user-images.githubusercontent.com/38992106/66948623-0c284c80-f023-11e9-8258-2d6de6a97f2d.png)

After:
![Screen Shot 2019-10-16 at 2 46 15 PM](https://user-images.githubusercontent.com/38992106/66949004-bdc77d80-f023-11e9-9e33-763df21e83fb.png)

 This said, I would also like to point out that the `_format_title` methods of `GenericElementPlot` and `GenericCompositePlot` look pretty similar, and both classes directly derive from `DimensionedPlot`, yet when both `title` and `title_format` are set, one falls back to `title`, the other one to `title_format`. I don't know if there was a special reason why the two classes have separate implementations but I think the code could potentially be clearer.


```
from holoviews import opts
import holoviews as hv
hv.extension('bokeh')
# hv.extension('matplotlib')

l = hv.NdLayout({'FOO': hv.Scatter([], group='ONE'), 'BAR': hv.Scatter([], label='TWO')}, kdims='MYDIM').opts(
    opts.Scatter(title_format='this {label} is {group} my {dimensions} formatter')
)
l
```",10,5,[]
464,328871199,4060,19542768,2019-10-16 17:23:16,2019-10-21 15:14:08,closed,Make it possible to apply linked_selection to most DynamicMaps,When using ``linked_selection`` with various DynamicMaps I'd very frequently encounter situations where it could not recurse into the DynamicMap because it could not reconstruct the operations being applied. This PR ensures that all ``Dynamic`` operations record the transform they are applying making it possible to use linked_selections on almost all DynamicMaps.,0,3,[]
465,327896379,4056,19542768,2019-10-14 17:13:14,2019-10-15 09:10:29,closed,Clarified error messages,,1,1,[]
466,325986212,4049,19542768,2019-10-08 22:14:35,2019-10-08 22:49:59,closed,Correctly detect depends fn dependencies,,1,3,['type: bug']
467,325923167,4048,19542768,2019-10-08 19:20:41,2019-10-08 20:43:39,closed,Ensure bokeh legend fields are handled correctly,,0,3,[]
468,325881248,4045,19542768,2019-10-08 17:30:49,2019-10-08 17:40:30,closed,Fix for matplotlib axis formatter,,0,1,[]
469,325785873,4044,19542768,2019-10-08 13:57:53,2019-10-13 08:28:08,closed,support `link_selections` with Dask DataFrames,"Adds support for using the new `link_selections` transformation on elements backed by Dask DataFrames.

There were two problems before:
 1. The `keep_index` and `compute` args were not being passed along to subexpressions (fixed in 
c99c0cf)
 2. The `digitize` and `isin` numpy functions are not implemented as Pandas or Dask Series methods, so Dask Series were getting converted into numpy arrays.  I added custom wrappers for these functions in e38f68f.

Closes https://github.com/pyviz/holoviews/issues/4034

TODO:
 - [x] Tests: We should add tests across all dim transformations to make sure they preserve dask Series as Series when appropriate.",4,6,[]
470,325782040,4043,19542768,2019-10-08 13:49:51,2019-10-08 16:04:07,closed,Fixed bug in new bokeh legend option handling,,0,2,[]
471,325724299,4042,19542768,2019-10-08 11:23:32,2019-10-08 11:44:46,closed,Ensure that deprecated mpl rcparam options are not applied,Fixes https://github.com/pyviz/holoviews/issues/3766,0,1,[]
472,325699456,4041,19542768,2019-10-08 10:12:49,2019-10-08 10:30:19,closed,Ensure that Stream triggering state is handled correctly on bokeh server,Fixes https://github.com/pyviz/holoviews/issues/3699,0,1,[]
473,325676225,4040,19542768,2019-10-08 09:15:17,2019-10-08 09:39:16,closed,Raise error if data does not contain sufficient dimensions,Fixes https://github.com/pyviz/holoviews/issues/3784,0,1,[]
474,325513379,4039,19542768,2019-10-07 22:00:23,,open,Add option to rotate second categorical axis tick labels,"Fixes https://github.com/pyviz/holoviews/issues/2515

@jbednar Any suggestion for a better name than `x_group_rotation`?",4,1,[]
475,325510659,4038,19542768,2019-10-07 21:52:10,2019-10-07 22:29:11,closed,Ensure empty aggregate does not drop datetimes in shade,Fixes https://github.com/pyviz/holoviews/issues/3672,0,1,[]
476,325400803,4036,19542768,2019-10-07 16:59:16,2019-10-07 21:04:50,closed,Fixed compatibility with new bokeh 1.4 legend options,,0,1,['tag: backend: bokeh']
477,325347406,4035,19542768,2019-10-07 14:58:52,2019-10-07 16:15:56,closed,Fix Image element bounds check,,1,1,[]
478,324932623,4032,19542768,2019-10-05 11:42:24,2019-10-06 23:43:42,closed,Handle unqualified Options objects,Fixes https://github.com/pyviz/holoviews/issues/3569,0,1,[]
479,324931614,4031,19542768,2019-10-05 11:26:09,2019-10-05 11:40:35,closed,Fixed issues with matplotlib AxesImage legend,Fixes https://github.com/pyviz/holoviews/issues/3903,0,1,"['type: bug', 'tag: backend: mpl']"
480,324787090,4028,19542768,2019-10-04 17:54:53,2019-10-04 22:39:11,closed,Allow passing widget as dependency,Closes https://github.com/pyviz/holoviews/issues/3976,0,2,['type: enhancement']
481,324768040,4027,19542768,2019-10-04 16:57:59,2019-10-04 16:58:13,closed,Fixes for user guides,,0,1,['tag: docs']
482,324663645,4026,19542768,2019-10-04 12:46:14,2019-10-04 16:04:21,closed,Applied fixes and optimizations for datashader operations,,0,1,[]
483,324657473,4025,19542768,2019-10-04 12:29:46,2019-10-04 12:50:47,closed,Fix issues in .apply dynamic handling,"Two small fixes for .apply:

1) .apply(dynamic=False) works on 0 kdim DynamicMap
2) dynamic variable is not overwritten which caused errors when using .apply on nested datastructures",0,1,['type: bug']
484,324319891,4023,19542768,2019-10-03 17:13:23,2019-10-03 17:29:19,closed,Fix .to.distribution,Fixes https://github.com/pyviz/holoviews/issues/2886,0,1,[]
485,324314692,4022,19542768,2019-10-03 16:59:19,2019-10-03 17:26:30,closed,Warning fixes,Fixes https://github.com/pyviz/holoviews/issues/3767,0,2,[]
486,324264298,4021,19542768,2019-10-03 15:03:36,2019-10-03 17:09:44,closed,Datashade fixes,"- Fixes https://github.com/pyviz/holoviews/issues/3889
- Fixes https://github.com/pyviz/holoviews/issues/2692
- Fixes https://github.com/pyviz/holoviews/issues/3831",0,5,[]
487,324187536,4020,19542768,2019-10-03 12:16:22,2019-10-04 17:10:11,closed,Add support for fast QuadMesh rasterization,"- [x] Ensure datetimes are handled 
- [x] Add tests",0,7,['type: enhancement']
488,323988672,4018,19542768,2019-10-02 23:46:44,2019-10-02 23:46:51,closed,Warn about mpl ArrowPlot fontsize style option,Fixes https://github.com/pyviz/holoviews/issues/2624,0,1,[]
489,323953570,4017,19542768,2019-10-02 21:30:25,2019-10-04 12:08:15,closed,Add support for rendering bokeh and plotly plots as gifs,"- [x] Closes https://github.com/pyviz/holoviews/issues/2956

```python
hmap = hv.HoloMap({i: hv.Curve([1, 2, i]) for i in range(10)})
hv.output(hmap, holomap='gif', fps=3, backend='matplotlib')
hv.output(hmap, holomap='gif', fps=3, backend='bokeh')
hv.output(hmap, holomap='gif', fps=3, backend='plotly')
```

![matplotlib](https://user-images.githubusercontent.com/1550771/66088309-f1fa6300-e57a-11e9-89ce-3b7ab5f15599.gif)
![bokeh](https://user-images.githubusercontent.com/1550771/66088313-f45cbd00-e57a-11e9-9e05-a8c7488b65ef.gif)
![plotly](https://user-images.githubusercontent.com/1550771/66088314-f6268080-e57a-11e9-8d9f-cf74dbd16309.gif)
",1,2,"['tag: backend: bokeh', 'type: enhancement']"
490,323475618,4014,19542768,2019-10-01 21:03:38,2019-10-01 21:22:42,closed,Ensure Point/Scatter plot correctly categorizes data on inverted axes,Fixes https://github.com/pyviz/holoviews/issues/3894,0,1,[]
491,323467987,4013,19542768,2019-10-01 20:43:45,2019-10-01 21:13:17,closed,Do not switch backend when loading backend via renderer,Fixes https://github.com/pyviz/holoviews/issues/3943,0,1,[]
492,323449268,4012,19542768,2019-10-01 19:56:33,2019-10-01 20:44:14,closed,Ensure that DynamicMap.groupby links inputs,Fixes #1704 and #3945,0,1,[]
493,323438337,4011,19542768,2019-10-01 19:29:01,2019-10-01 19:47:57,closed,Accept Resources instance in save,Fixes https://github.com/pyviz/holoviews/issues/3946,0,1,[]
494,323434746,4010,19542768,2019-10-01 19:19:50,2019-10-01 20:44:02,closed,Fixed hover bug when plotting on inverted axis,Fixes #4006 ,0,2,[]
495,322419627,4007,19542768,2019-09-28 14:57:26,2020-01-14 21:02:54,closed,pprint_value_unit func for printing value and unit,"The printing of dimension value with unit is not consistent throughout,
eg missing space between unit and value. This is due to lack of
consistency in logic within construction of the value with unit string.
This PR adds a new function `pprint_value_unit` to `Dimension` based on
`pprint_value_string` that prints just a value and unit, if exists,
with a space between them.
This function replaces the `pprint_value` along with checks for unit.
This concentrates the logic within one place and this will improve 
maintainability",5,1,[]
496,321992711,4000,19542768,2019-09-27 04:21:40,2019-10-02 17:07:47,closed,"Add new annotations, HSpan, VSpan","https://github.com/pyviz/holoviews/issues/3996
Got it mostly working for bokeh, partially for matplotlib, and not touched for plotly. I need help resolving the warnings/errors.

- [x] bokeh center parameter
- [x] matplotlib datetime
- [x] plotly implementation
- [x] unit tests

Bokeh: no idea why it says I'm setting center=True; I didn't do that anywhere. I have a feeling annotation automatically passes that, but I can't find it.
![image](https://user-images.githubusercontent.com/15331990/65742016-01c60300-e0b4-11e9-9c1e-cc5e5c8fa039.png)
![image](https://user-images.githubusercontent.com/15331990/65742044-1aceb400-e0b4-11e9-8a7c-238a1f740dbb.png)

Matplotlib: datetimes don't work, I don't know why it keeps adding 1.0 to the range
![image](https://user-images.githubusercontent.com/15331990/65742067-389c1900-e0b4-11e9-98c5-f471b7de492e.png)
```
[numpy.datetime64('2017-05-01T00:00:00.000000000'), numpy.datetime64('2017-05-01T00:00:00.000000000'), 1.0]
---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
~/anaconda3/lib/python3.6/site-packages/IPython/core/formatters.py in __call__(self, obj, include, exclude)
    968 
    969             if method is not None:
--> 970                 return method(include=include, exclude=exclude)
    971             return None
    972         else:

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/core/dimension.py in _repr_mimebundle_(self, include, exclude)
   1290         combined and returned.
   1291         """"""
-> 1292         return Store.render(self)
   1293 
   1294 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/core/options.py in render(cls, obj)
   1364         data, metadata = {}, {}
   1365         for hook in hooks:
-> 1366             ret = hook(obj)
   1367             if ret is None:
   1368                 continue

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/ipython/display_hooks.py in pprint_display(obj)
    279     if not ip.display_formatter.formatters['text/plain'].pprint:
    280         return None
--> 281     return display(obj, raw_output=True)
    282 
    283 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/ipython/display_hooks.py in display(obj, raw_output, **kwargs)
    249     elif isinstance(obj, (CompositeOverlay, ViewableElement)):
    250         with option_state(obj):
--> 251             output = element_display(obj)
    252     elif isinstance(obj, (Layout, NdLayout, AdjointLayout)):
    253         with option_state(obj):

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/ipython/display_hooks.py in wrapped(element)
    144         try:
    145             max_frames = OutputSettings.options['max_frames']
--> 146             mimebundle = fn(element, max_frames=max_frames)
    147             if mimebundle is None:
    148                 return {}, {}

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/ipython/display_hooks.py in element_display(element, max_frames)
    190         return None
    191 
--> 192     return render(element)
    193 
    194 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/ipython/display_hooks.py in render(obj, **kwargs)
     66         renderer = renderer.instance(fig='png')
     67 
---> 68     return renderer.components(obj, **kwargs)
     69 
     70 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/renderer.py in components(self, obj, fmt, comm, **kwargs)
    351             plot = obj
    352         else:
--> 353             plot, fmt = self._validate(obj, fmt)
    354 
    355         data, metadata = {}, {}

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/renderer.py in _validate(self, obj, fmt, **kwargs)
    276             plot, fmt = HoloViewsPane(obj, center=True, backend=self.backend, renderer=self), fmt
    277         else:
--> 278             plot = self.get_plot(obj, renderer=self, **kwargs)
    279 
    280         all_formats = set(fig_formats + holomap_formats)

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/renderer.py in get_plot(self_or_cls, obj, doc, renderer, comm, **kwargs)
    220             init_key = tuple(v if d is None else d for v, d in
    221                              zip(plot.keys[0], defaults))
--> 222             plot.update(init_key)
    223         else:
    224             plot = obj

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/mpl/plot.py in update(self, key)
    247     def update(self, key):
    248         if len(self) == 1 and ((key == 0) or (key == self.keys[0])) and not self.drawn:
--> 249             return self.initialize_plot()
    250         return self.__getitem__(key)
    251 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/mpl/plot.py in wrapper(self, *args, **kwargs)
     52     def wrapper(self, *args, **kwargs):
     53         with _rc_context(self.fig_rcparams):
---> 54             return f(self, *args, **kwargs)
     55     return wrapper
     56 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/mpl/element.py in initialize_plot(self, ranges)
   1098 
   1099         return self._finalize_axis(key, element=element, ranges=ranges,
-> 1100                                    title=self._format_title(key))
   1101 
   1102 

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/mpl/element.py in _finalize_axis(self, key, element, title, dimensions, ranges, xticks, yticks, zticks, xlabel, ylabel, zlabel)
    181 
    182                 # Set axes limits
--> 183                 self._set_axis_limits(axis, element, subplots, ranges)
    184 
    185             # Apply aspects

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/mpl/element.py in _set_axis_limits(self, axis, view, subplots, ranges)
    319         """"""
    320         # Extents
--> 321         extents = self.get_extents(view, ranges)
    322         if not extents or self.overlaid:
    323             axis.autoscale_view(scalex=True, scaley=True)

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/plot.py in get_extents(self, overlay, ranges, range_type)
   1538         subplot_extents = self._get_subplot_extents(overlay, ranges, range_type)
   1539         zrange = self.projection == '3d'
-> 1540         extents = {k: util.max_extents(rs, zrange) for k, rs in subplot_extents.items()}
   1541         if range_type != 'combined':
   1542             return extents[range_type]

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/plotting/plot.py in <dictcomp>(.0)
   1538         subplot_extents = self._get_subplot_extents(overlay, ranges, range_type)
   1539         zrange = self.projection == '3d'
-> 1540         extents = {k: util.max_extents(rs, zrange) for k, rs in subplot_extents.items()}
   1541         if range_type != 'combined':
   1542             return extents[range_type]

/mnt/c/Users/sephi/GOOGLE~1/Bash/holoviews/holoviews/core/util.py in max_extents(extents, zrange)
   1039             if lower and isinstance(lower[0], datetime_types):
   1040                 extents[lidx] = np.min(lower)
-> 1041             elif any(isinstance(l, basestring) for l in lower):
   1042                 extents[lidx] = np.sort(lower)[0]
   1043             elif lower:

~/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py in amin(a, axis, out, keepdims, initial)
   2616     """"""
   2617     return _wrapreduction(a, np.minimum, 'min', axis, None, out, keepdims=keepdims,
-> 2618                           initial=initial)
   2619 
   2620 

~/anaconda3/lib/python3.6/site-packages/numpy/core/fromnumeric.py in _wrapreduction(obj, ufunc, method, axis, dtype, out, **kwargs)
     84                 return reduction(axis=axis, out=out, **passkwargs)
     85 
---> 86     return ufunc.reduce(obj, axis, dtype, out, **passkwargs)
     87 
     88 

TypeError: invalid type promotion

---------------------------------------------------------------------------
TypeError                                 Traceback (most recent call last)
<ipython-input-10-90bc0078bbee> in <module>()
      6 # hv.Curve([0, 1, 2, 3]) * hv.VSpan(1, 2) * hv.HSpan(1, 5)
      7 
----> 8 hv.Curve((pd.date_range('2017-05-01', '2017-05-03'), [0, 1, 2])) * hv.HSpan(*pd.date_range('2017-05-01', '2017-05-02')) * hv.VSpan(1, 2)

~/anaconda3/lib/python3.6/site-packages/IPython/core/displayhook.py in __call__(self, result)
    255             self.start_displayhook()
    256             self.write_output_prompt()
--> 257             format_dict, md_dict = self.compute_format_data(result)
    258             self.update_user_ns(result)
    259             self.fill_exec_result(result)

~/anaconda3/lib/python3.6/site-packages/IPython/core/displayhook.py in compute_format_data(self, result)
    149 
    150         """"""
--> 151         return self.shell.display_formatter.format(result)
    152 
    153     # This can be set to True by the write_output_prompt method in a subclass

~/anaconda3/lib/python3.6/site-packages/IPython/core/formatters.py in format(self, obj, include, exclude)
    148             return {}, {}
    149 
--> 150         format_dict, md_dict = self.mimebundle_formatter(obj, include=include, exclude=exclude)
    151 
    152         if format_dict or md_dict:

TypeError: 'NoneType' object is not iterable
```",3,5,['type: feature']
497,321244301,3995,19542768,2019-09-25 13:22:07,2019-09-25 18:38:00,closed,Fixed various issues with test imports,,0,1,"['type: bug', 'tag: component: testing']"
498,321020693,3993,19542768,2019-09-25 01:15:46,2019-09-25 10:36:47,closed,Eliminate warnings generated by deprecations,,0,1,[]
499,320964268,3992,19542768,2019-09-24 21:09:50,2019-09-25 00:59:18,closed,Ensure tests run without dask and plotly,,0,4,['tag: component: testing']
500,320936964,3991,19542768,2019-09-24 19:55:20,2019-09-24 20:28:34,closed,Getting rid of xarray print statement,,1,1,[]
501,320684160,3989,19542768,2019-09-24 09:56:38,2019-09-24 11:10:18,closed,Fix apply method on HoloMap,,0,1,['type: bug']
502,320526341,3988,19542768,2019-09-23 23:54:51,2019-09-24 00:09:11,closed,Fix save utility,Fixes #3987 ,0,1,[]
503,320355357,3986,19542768,2019-09-23 15:32:50,,open,Removed all deprecated style mapping index options,"Things to figure out:

- [ ] How to enable default colormapping for Contours/Polygons
- [ ] How to fix min_count for HexTiles
- [ ] Sankey/Chord label fixes",0,15,[]
504,320337071,3985,19542768,2019-09-23 14:55:46,2019-09-23 16:19:38,closed,Enabled deprecation warnings for all future deprecations,,1,3,[]
505,320075896,3984,19542768,2019-09-22 19:39:27,2019-10-02 17:12:44,closed,Remove topics notebooks,"Since the existing topics are now built on example.pyviz.org I've decided to remove them from the HoloViews repo.

Closes https://github.com/pyviz/holoviews/issues/1638",5,1,[]
506,320074542,3983,19542768,2019-09-22 19:20:03,2019-09-24 17:12:31,closed,Add support for packing grid value dimensions,"This PR makes it possible to construct gridded datasets where all the value dimensions are packed into a single array. This is often a much more natural format, e.g. for an RGB:

```
hv.RGB(([1, 2, 3], [1, 2, 3], np.random.rand(3, 3, 3)))
# or equivalently
hv.RGB({'x': [1, 2, 3], 'y': [1, 2, 3], ('R', 'G', 'B'): np.random.rand(3, 3, 3)})
```

Also adds support for packed value dimensions on xr.DataArray types:

```python 
da = xr.DataArray(data=np.random.randint(0, 255, (2, 2, 4)), dims=('x', 'y', 'band'), coords={'x': [1, 2], 'y': [1, 2], 'band': [0, 1, 2, 3]})
hv.RGB(da)
```

Closes https://github.com/pyviz/holoviews/issues/550
Closes https://github.com/pyviz/holoviews/issues/3311",0,9,"['tag: component: data', 'type: enhancement']"
507,319951144,3982,19542768,2019-09-21 10:48:12,2020-03-04 18:32:13,closed,Add cuDFInterface to work with cuDF GPU dataframes and cupy support for XArrayInterface,"This PR adds a new data interface to allow HoloViews to work directly with cuDF GPU dataframes.

- [x] values
- [x] range
- [x] dframe
- [x] select
- [x] groupby (look at optimizing) 
- [x] aggregate
- [x] iloc
- [x] add_dimension
- [x] sort
- [x] sample
- [x] concat

Datashader support:

- [x] Points/Scatter
- [x] Curve/Path/Area
- [x] QuadMesh: rectilinear and curvilinear

Other things to do:

- [x] Implement cuDatashader support once integrated with datashader itself

One major thing to figure out is how we will set up CI tests for the GPU.",3,23,"['type: feature', 'tag: component: data']"
508,319683074,3981,19542768,2019-09-20 11:41:35,2019-10-08 23:06:42,closed,[DO NOT MERGE] v1.12.6 Bugfix Release Changes,Solely for review of backported changes,0,52,[]
509,319658964,3980,19542768,2019-09-20 10:29:25,2019-09-20 11:37:48,closed,Ensure Dynamic utility subscribes to dependent function,"Fixes issue with #3975 

While dependent functions were resolved without this, the DynamicMap did not actually subscribe changes in the dependencies and therefore wouldn't trigger an update until something else changed.",1,4,[]
510,319650848,3979,19542768,2019-09-20 10:06:34,,open,Ensure dim transform columns are qualified to avoid clashes,Fixes https://github.com/pyviz/holoviews/issues/3935,0,1,['type: bug']
511,319646042,3978,19542768,2019-09-20 09:54:32,2019-09-20 10:29:37,closed,Ensure that empty Stream source elements get remapped,Fixes https://github.com/pyviz/holoviews/issues/3965,0,1,['type: bug']
512,319610193,3977,19542768,2019-09-20 08:19:54,2019-09-20 09:46:34,closed,Correctly resample colorcet colormaps,"Fixes  https://github.com/pyviz/holoviews/issues/3964

Cc: @jsignell @jbednar ",1,1,['type: bug']
513,319281156,3975,19542768,2019-09-19 13:35:42,2019-09-20 09:34:30,closed,Resolve dependent functions in Dynamic operations,"This makes it possible to provide a function which declares param dependencies in ``.apply`` and in operations, e.g.:

```python
@pn.depends(field.param.value, agg_fn.param.value)
def aggregator(field, agg_fn):
    field = None if field == ""counts"" else field
    return agg_fn(field)

datashade(..., agg=aggregator)
# or
obj.apply(datashade, agg=aggregator)
```

This complements the ability to use functions with dependencies as ``DynamicMap`` callbacks.

Cc: @jbednar ",2,1,[]
514,319182766,3973,19542768,2019-09-19 09:34:04,2019-09-20 09:17:59,closed,Various fixes for xarray 0.13 compatibility,,0,3,['tag: component: data']
515,318726525,3967,19542768,2019-09-18 09:54:28,2019-09-24 20:52:07,closed,Add pipeline property to track data lineage,"## Overview
This PR adds a new `pipeline` property to the `Dataset` class.  This property holds a list of `(function, args, kwargs)` tuples that represent the sequence of operations needed to transform the `Dataset` stored in the `dataset` property into an element equal to current element.

It also adds a new `execute_pipeline` method that can evaluate this sequence of functions on an input dataset.  This makes it possible to reproduce the same sequence of operations on a new Dataset.

## Relationship to other PRs

### dataset property
The `dataset` property was added to the `LabelledData` class in https://github.com/pyviz/holoviews/pull/3919. This PR moves the `dataset` property down to the `Dataset` class, so there is no longer a `dataset` property on, for example, the `Layout` class.  This reduces the scope of where `dataset` and `pipeline` need to be correct / consistent.

### Histogram _operation_kwargs
This PR removes all special cases associated with Histogram elements.  So the `Histogram._operation_kwargs` property added in https://github.com/pyviz/holoviews/pull/3921 has been removed.

### select all dims
In https://github.com/pyviz/holoviews/pull/3924, the `select` method is updated to consider all dimensions in the `Dataset` stored in the element's `dataset` property.  This PR does not do this, and instead provides the `execute_pipeline` method as a more powerful alternative to acheiving the same goal. See examples below.

### link_selections
This PR will become a more powerful foundation for the automatic linked selection support being added in https://github.com/pyviz/holoviews/pull/3951

## Example 1: Points
Create a sample 3-dimensional dataset. x and y are independently drawn from the standard normal distribution and r is calculated to be the radius of each point from the origin.
```python
import numpy as np
import pandas as pd
import holoviews as hv
from holoviews import dim
from holoviews.operation.datashader import rasterize, datashade, dynspread 
hv.extension('bokeh')

np.random.seed(1)
df = pd.DataFrame(np.random.randn(100, 2), columns=['x', 'y'])

# Add radius column
df['r'] = (df.x ** 2 + df.y ** 2) ** 0.5

ds = hv.Dataset(df)
points = ds.to.points(kdims=['x', 'y'], groupby=[])
points
```
![bokeh_plot-1](https://user-images.githubusercontent.com/15064365/65136633-ea14bd80-d9d5-11e9-99eb-cc731df317f4.png)

Display the pipeline for the new `points`  element
```python
points.pipeline
```
```
[(holoviews.core.data.Dataset, [], {}),
 (holoviews.element.geom.Points,  [],  {'label': '', 'kdims': [Dimension('x'), Dimension('y')], 'vdims': []})]
```
Next, create a new points element by running `execute_pipline` on a subset of the dataset stored in `points.dataset`.  Note that it would not be possible to compute this subset using `points.select` directly because it involves the `r` dimensions which is not a key or value dimension of `points`.

```python
points * points.execute_pipeline(points.dataset.select(x=(0, None), r=(0, 1.5))) 
```
![bokeh_plot-2](https://user-images.githubusercontent.com/15064365/65136961-7de68980-d9d6-11e9-9c51-5674c6de877c.png)

## Example 2: Datashade
Create an `RGB` image element from `points` using the `datashade` and `dynspread` operations with `dynamic=False`.

```python
points_rgb = dynspread(datashade(points, dynamic=False), dynamic=False, threshold=0.9)
points_rgb
```
![bokeh_plot-3](https://user-images.githubusercontent.com/15064365/65137074-b0908200-d9d6-11e9-93dc-4b6977927424.png)

Display the pipeline for `points_rgb`

```python
points_rgb.pipeline
```
```
[(holoviews.core.data.Dataset, [], {}),
 (holoviews.element.geom.Points,  [],  {'label': '', 'kdims': [Dimension('x'), Dimension('y')], 'vdims': []}),
 (datashade(...),  [],  {'dynamic': False}),
 (dynspread(...),  [],  {'dynamic': False, 'threshold': 0.9})]
```
Next, compute a new `RGB` element by calling the `execute_pipeline` method with a subset of the original dataset.  Note that this is a selection that was not possible using the approach in https://github.com/pyviz/holoviews/pull/3924.

```python
points_rgb + points_rgb.execute_pipeline(points_rgb.dataset.select(x=(0, None), r=(0, 1.5)))
```
![Screenshot_20190918_054413](https://user-images.githubusercontent.com/15064365/65137458-5f34c280-d9d7-11e9-84f6-9456d52e281f.png)

## Example 3: Histogram
Next, repeat the same process using a `Histogram` element created from `points`.

```python
hist1 = hv.operation.histogram(points, num_bins=10, dynamic=False, normed=False)
hist1
```
![bokeh_plot-4](https://user-images.githubusercontent.com/15064365/65137556-8ee3ca80-d9d7-11e9-8462-251388f60da5.png)

Display pipeline
```python
hist1.pipeline
```
```
[(holoviews.core.data.Dataset, [], {}),
 (holoviews.element.geom.Points,  [],  {'label': '', 'kdims': [Dimension('x'), Dimension('y')], 'vdims': []}),
 (histogram(...),  [],  {'num_bins': 10, 'dynamic': False, 'normed': False})]
```
Create new `Histogram` element with `execute_pipeline`

```python
hist2 = hist1.execute_pipeline(hist1.dataset.select(x=(0, None), r=(0, 1.5))) 
hist1 * hist2
```
![bokeh_plot-5](https://user-images.githubusercontent.com/15064365/65137686-c5214a00-d9d7-11e9-965e-7d5b02b84ab0.png)

## Example 4: Custom aggregation
In this example, create a `Bars` element from the result of aggregating an original `Dataset`.

```python
df = pd.DataFrame({'a': [1, 2, 3, 4, 5, 6],
                   'b': [2, 1, 3, 0, 10, 4],
                   'c': [0, 0, 0, 1, 1, 1]
                  })
ds = hv.Dataset(df, kdims=['c'], vdims=['a', 'b'])
bars = ds.aggregate('c', function=np.sum).to(hv.Bars)
bars
```
![bokeh_plot-6](https://user-images.githubusercontent.com/15064365/65137824-00bc1400-d9d8-11e9-8288-796816e3452a.png)

pipeline
```python
bars.pipeline
```
```
[(holoviews.core.data.Dataset,
  [],
  {'kdims': [Dimension('c')], 'vdims': [Dimension('a'), Dimension('b')]}),
 (<function holoviews.core.data.Dataset.aggregate(...)>,
  ['c'],
  {'function': <function numpy.sum(...)>}),
 (holoviews.element.chart.Bars,
  [],
  {'label': '',
   'kdims': [Dimension('c')],
   'vdims': [Dimension('a'), Dimension('b')]})]
```
Create a new `Bars` element on a subset of the original dataset using `execute_pipeline`

```python
bars * bars.execute_pipeline(bars.dataset.select(b=(3, None)))
```
![bokeh_plot-7](https://user-images.githubusercontent.com/15064365/65137955-36f99380-d9d8-11e9-8fad-f554be6b63ee.png)
",17,25,"['type: feature', 'tag: API']"
516,317621721,3961,19542768,2019-09-15 09:03:13,2019-09-24 20:51:21,closed,Update ErrorBars to have horizontal errorbar,"Up until now, the `ErrorBars` element only support conveying errors along y-axis.
This PR will update the element to allow selecting between x- and y-axis for the errorbars.
The main user facing change will be addition of `horizontal` param. Setting this param `True` will set the errors to be along x-axis instead of y-axis.

EDIT:
Objectives

- [x] Element Errorbars keyword argument 'horizontal' and tests
- [x] Update plotting classes to use `horizontal` parameter
  - [x] Matplotlib
  - [x] Bokeh
  - [x] Ploty
- [x] Update guides
  - [x] Matplotlib
  - [x] Bokeh
  - [x] Ploty",10,6,[]
517,317380941,3960,19542768,2019-09-13 15:38:31,2019-09-22 19:33:31,closed,Updated cross-selector example to use Panel,,1,1,[]
518,317091901,3959,19542768,2019-09-12 21:14:10,2019-09-12 21:14:23,closed,Fixed typo,,0,1,[]
519,317079462,3958,19542768,2019-09-12 20:38:25,2019-09-13 09:02:19,closed,Fix step interpolation rounding for datetime,"When interpolating datetime values in step(), the values where
converted in floating types: this causes a lack of precision in the
computation. Instead, we can do the computation in datetime64[ns].

Fixes #3878",2,1,[]
520,317010573,3957,19542768,2019-09-12 17:24:45,2019-09-12 17:49:58,closed,Fix Grid level alignment,"Fixes https://github.com/pyviz/holoviews/issues/3797
Fixes https://github.com/pyviz/holoviews/issues/3824",0,2,[]
521,316966990,3956,19542768,2019-09-12 15:31:08,2019-09-12 17:23:42,closed,Fixed error message for Image data with wrong dimensionality,Fixes https://github.com/pyviz/holoviews/issues/3752,0,1,[]
522,316930779,3955,19542768,2019-09-12 14:17:21,2019-09-12 15:08:21,closed,Allow plotting partially irregular QuadMesh,"Fixes https://github.com/pyviz/hvplot/issues/244

Allows things like:

```python
xs = np.arange(100)
hv.QuadMesh((xs, xs * np.arange(50)[:, np.newaxis], np.random.rand(50, 100)))
```

![bokeh_plot - 2019-09-12T163658 918](https://user-images.githubusercontent.com/1550771/64793576-8fb1d200-d57b-11e9-88ec-1e63acdeec9e.png)
",0,1,"['type: bug', 'tag: component: plotting', 'tag: component: data']"
523,316836550,3953,19542768,2019-09-12 10:24:40,2019-09-12 14:42:24,closed,Ensure Bar chart sorts multi-category values correctly,Fixes https://github.com/pyviz/hvplot/issues/299,0,2,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
524,316833403,3952,19542768,2019-09-12 10:16:26,2019-09-12 14:42:39,closed,Fixed bug in bokeh HoverTool lookup,Fixes https://github.com/pyviz/hvplot/issues/271,0,1,"['type: bug', 'tag: backend: bokeh']"
525,316607817,3951,19542768,2019-09-11 19:49:45,2019-10-01 16:18:31,closed,Add link_selections function for automated linked selections,"## Overview
This PR adds a `holoviews.selection.link_selections` function that is an initial implementation of the automatic linked selection approach proposed in https://github.com/pyviz/holoviews/issues/3842.

This function can be used to transform HoloViews objects into new objects with linked selections enabled.

### Dependencies
This PR depends on the following open PRs, and will be rebased once these are merged.
 - https://github.com/pyviz/holoviews/pull/3924
 - https://github.com/pyviz/holoviews/pull/3927

## Example notebook
For examples, see the notebook at https://anaconda.org/jonmmease/link_selections_pr/notebook.

Please play around with this notebook to get a feel for the workflow and capabilities and report back on how things look @jbednar @philippjfr @jlstevens.

## Highlights
Linked `Points` plots with Bokeh backend:
![points_layout](https://user-images.githubusercontent.com/15064365/64727282-84d93d80-d4a6-11e9-9540-823e121910a4.gif)

---
Linked `Points`, `Histogram`, `Scatter3d`, and `Table` layout with Plotly backend:
![plotly_selections](https://user-images.githubusercontent.com/15064365/64727290-899df180-d4a6-11e9-82d5-bd446ee187bd.gif)

---
Linked `Violin`, `Points` and `Bivariate` overlay, and `Distribution` layout with Bokeh backend:
![bivariate_selections](https://user-images.githubusercontent.com/15064365/64727300-902c6900-d4a6-11e9-8eab-03af399ad4b4.gif)

---
Selections on datashaded elements
![datashader_selection](https://user-images.githubusercontent.com/15064365/64727313-96bae080-d4a6-11e9-9e30-e022ea85a500.gif)

---
Linked plots across notebook output cells, and updating selection color after display:
![cross_cell_linking](https://user-images.githubusercontent.com/15064365/64727328-a1757580-d4a6-11e9-8cd7-82e2e01a50f7.gif)

## Extensions
There is a lot more functionality that can be built on this foundation. Here are some directions:

 - The `link_selections` function only stores the latest selection. But the `_base_link_selections` base class is more general, and other subclasses can be added for cross filtering, and glue-style multi-color brushing.
    - For cross-filtering, I really like the 4-color approach used in https://plotly.github.io/plotly.js-crossfilter.js/.  I personally find this easier to make sense of compared to the 2-color approach used in http://crossfilter.github.io/crossfilter/ where the ""filtered"" data is fully removed from the plot.
    - For multi-colored brushing, the inspiration is the glue project http://docs.glueviz.org/en/stable/getting_started/index.html?highlight=subsets#defining-subsets.  This would require a small Panel GUI interface for choosing the current subset color and the subset mode (union, intersection, or subtraction).
 - Add `Bounds` element to display the selected region after a selection is completed. I think this will largely be a requirement for the cross-filter mode, otherwise it would be hard to make sense of the union of the selected regions across plots.
 - Selections could be displayed on grid elements (e.g. vector field, raster) if we had an `element.where` operation (https://github.com/pyviz/holoviews/issues/3933).
 - For full hvplot compatibility, will need to review hvplot to make sure source dataset information flows through all of the produced elements. This happens for some, but not all, elements at the moment.
 - Investigate geoviews compatibility
 - Dask optimization of `dim` expressions and `histogram` operation to make selection with datashader + histogram elements with Dask DataFrames scale well.
 - Support passing full Panel layouts to `link_selections` and traverse them to find `HoloViews` panes. This way a Panel layout with HoloViews panes that use different backends could be linked together.
 - Add a new `BoundsPoly` stream that is analogous to `BoundsXY` but for a polygon rather than a box. Use this to support defining selection regions using lasso selection.

Let me know which of these you think are capabilities that we really should have for the initial release. Thanks!

",14,2,['type: feature']
526,315191363,3948,19542768,2019-09-07 12:15:32,2019-09-10 15:15:33,closed,Add `visible` style option for simple plotly/bokeh plots.,"Setting `visible` to `False` will fully hide the individual element trace.

This option is very useful for the linked selection effort...",8,2,[]
527,313047091,3940,19542768,2019-09-01 16:27:05,2020-09-02 01:29:01,closed,Guess at how to fix up user guide's Deploying Bokeh Apps,"Since #4108 was merged, and given existing comments on this PR, I removed #4108's changes from here and made this PR be just about fixing the error in 'Deploying Bokeh Apps':

```
pytest -v --nbsmoke-lint examples
=========================================================================== test session starts ===========================================================================
platform linux -- Python 3.7.3, pytest-5.2.2, py-1.8.0, pluggy-0.13.0 -- /home/sefkw/mc3/envs/miscdev37/bin/python
cachedir: .pytest_cache
metadata: {'Python': '3.7.3', 'Platform': 'Linux-5.3.0-18-generic-x86_64-with-debian-buster-sid', 'Packages': {'pytest': '5.2.2', 'py': '1.8.0', 'pluggy': '0.13.0'}, 'Plugins': {'html': '2.0.0', 'nbsmoke': '0.3.0', 'metadata': '1.8.0', 'cov': '2.8.1', 'nbval': '0.9.3'}}
rootdir: /home/sefkw/code/holoviz/holoviews
plugins: html-2.0.0, nbsmoke-0.3.0, metadata-1.8.0, cov-2.8.1, nbval-0.9.3
[...]
examples/user_guide/Deploying_Bokeh_Apps.ipynb::/home/sefkw/code/holoviz/holoviews/examples/user_guide/Deploying_Bokeh_Apps.ipynb FAILED                            [ 96%]
[...]
______________________________________________________________________________ test session _______________________________________________________________________________
/home/sefkw/code/holoviz/holoviews/examples/user_guide/Deploying_Bokeh_Apps.ipynb
** line 117 col 27: undefined name 'layout'
** line 151 col 9: undefined name 'layout'
** line 164 col 26: undefined name 'layout'
** line 325 col 0: 'bokeh.io.curdoc' imported but unused
To see python source that was checked by pyflakes: /home/sefkw/code/holoviz/holoviews/examples/user_guide/Deploying_Bokeh_Apps.nbsmoke-debug-postmagicprocess.py
To see python source before magics were handled by nbsmoke: /home/sefkw/code/holoviz/holoviews/examples/user_guide/Deploying_Bokeh_Apps.nbsmoke-debug-premagicprocess.py
```

I have no idea what was supposed to be there, though :)
",3,1,[]
528,312881068,3939,19542768,2019-08-30 20:52:16,2019-09-01 14:07:41,closed,[docs] Fix typos in docstring,,1,2,[]
529,310927979,3927,19542768,2019-08-26 13:51:55,2019-09-12 09:43:19,closed,Add SelectionExpr stream,"## Overview
This PR adds a new stream called `SelectionExprStream`.  This stream attaches to an element and provides `selection_expr` and `bbox` params:
 - `selection_expr`: When not `None`, this holds a dim-expression representing the current selection on the element.
 - `bbox`: When not `None`, this holds a dict representing the bounding box of the selection.  Each key in the dict is a dimension name, and the value is a tuple pair of the min/max values of the selection.

## 2D Cartesian example
```python
import holoviews as hv
import numpy as np
import pandas as pd
hv.extension('bokeh')

scatter = hv.Scatter(([1, 2, 3], [1, 5, 10]))
expr_stream = hv.streams.SelectionExprStream(scatter)
scatter
```
![Screenshot_20190826_093939](https://user-images.githubusercontent.com/15064365/63694901-75d76780-c7e5-11e9-9d1f-b27b33e77bab.png)

```python
print(expr_stream.selection_expr)
```
```
(((dim('x')>=1.6270833696637834)&dim('x')<=2.6270833696637834)&dim('y')>=3.086363863353888)&dim('y')<=6.991322541039838
```

```python
print(expr_stream.bbox)
```
```
{'x': (1.6270833696637834, 2.6270833696637834), 'y': (3.086363863353888, 6.991322541039838)}
```

## Histogram example
```python
hist = hv.Histogram(([1, 2, 3, 4, 5], [1, 5, 2, 3, 7])) 
expr_stream_hist = hv.streams.SelectionExprStream(hist)
hist
```
![Screenshot_20190826_094320](https://user-images.githubusercontent.com/15064365/63695129-fd24db00-c7e5-11e9-9797-0c2a0aa977da.png)

```python
print(expr_stream_hist.selection_expr)
```
```
dim('x'), digitize, array([0.5, 1.5, 2.5, 3.5, 4.5, 5.5])), isin, [2, 4])
```

```python
print(expr_stream_hist.bbox)
```
```
{'x': (1.5, 4.5)}
```

## digitize and isin
To support representing histogram selection as a dim expression, I added the numpy `digitize` and `isin` functions as dim expression.

## Relationship to other PRs
While this PR does not depend on any other open PRs, the `selection_expr` param is compatible with the `selection_expr` arg being added to `select` in https://github.com/pyviz/holoviews/pull/3920.

TODO:
 - [x] Handle/test reversed axes
",8,14,['type: feature']
530,310229181,3925,19542768,2019-08-23 04:47:44,2019-08-23 11:17:36,closed,Mpl colorbar opts,bokeh backend already has this opt,0,1,[]
531,310155370,3924,19542768,2019-08-22 21:41:58,2019-09-18 09:55:30,closed,Support selections across all dimensions in element.dataset,"## Overview
This PR builds on top of following PRs:
 - https://github.com/pyviz/holoviews/pull/3919
 - https://github.com/pyviz/holoviews/pull/3920
 - https://github.com/pyviz/holoviews/pull/3921

It updates the `Dataset.select` method to support down selecting an element using all of the dimensions in the element's `.dataset` property. Without this, it's only possible to down select elements using the key and value dimensions.

## Example 1: Points

Create a sample 3-dimensional dataset.  `x` and `y` are independently drawn from the standard normal distribution and `r` is calculated to be the radius of each point from the origin.
```python
import numpy as np
import pandas as pd
import holoviews as hv
from holoviews import dim
hv.extension('plotly')

np.random.seed(1)
df = pd.DataFrame(np.random.randn(100, 2), columns=['x', 'y'])

# Add radius column
df['r'] = (df.x ** 2 + df.y ** 2) ** 0.5

ds = hv.Dataset(df)
```

Then create a `Points` element from this dataset with `x` and `y` as key dimensions.
```python
points = ds.to.points(kdims=['x', 'y'], groupby=[])
points
```
![newplot-2](https://user-images.githubusercontent.com/15064365/63551037-0ec66400-c502-11e9-98aa-628a9065719a.png)

Prior to https://github.com/pyviz/holoviews/pull/3919, the `points` object would not have dimension information about `r`, so it would not be possible to perform a selection on `points` using `r`.  But, with the addition of the `.dataset` property (and the changes in this PR), it's now possible to perform a selection using `r` as well.

Perform selection using `x` (a key dimension) and `r` (neither a key nor value dimension):
```python
points * points.select(x=(0, None), r=(0, 1.5))
```
![newplot-3](https://user-images.githubusercontent.com/15064365/63551144-52b96900-c502-11e9-8d0f-6be187ee5c10.png)

## Example 2: Histogram
This PR uses https://github.com/pyviz/holoviews/pull/3921 to support rebinning the histogram samples in response to selections.

Here's an example of performing a selection directly on the histogram element that uses both `x` (the histogram's key dimension) and `r` (neither a key nor value dimension):

```python
hist1 = hv.operation.histogram(points, num_bins=10, dynamic=False, normed=False)
hist2 = hist1.select((dim('x') > 0) & (dim('r') < 1.5))
hist1 * hist2
```
![newplot-4](https://user-images.githubusercontent.com/15064365/63551502-56012480-c503-11e9-96e6-52da4112b95a.png)

This example also demonstrates the dim expression support that was added to `select` in https://github.com/pyviz/holoviews/pull/3920.
",10,8,[]
532,309953437,3921,19542768,2019-08-22 13:10:09,2019-09-03 16:03:10,closed,Added operation_kwargs Histogram property,"## Overview
For `Histogram` elements created using the `holoviews.operation.histogram` operation, this new property holds a dict of kwargs that can be used with the operation to recreate the `Histogram` from the same data set.

Or it will contain `None`, if the Histogram was created directly using the Histogram constructor.

## Motivation
Having this information available makes it possible to create histograms with a subset of the original dataset that share the same properties as an original `Histogram`.  For example:

```python
import numpy as np
import holoviews as hv
from holoviews import opts
hv.extension('plotly')

np.random.seed(1)
points = hv.Points(np.random.randn(100,2))

hist1 = hv.operation.histogram(points, cumulative=True, num_bins=10, dynamic=False, normed=False)
hist1.operation_kwargs
```
```
{'cumulative': True,
 'dynamic': False,
 'normed': False,
 'bins': [-1.857981864446752,
  -1.419351107321437,
  -0.980720350196122,
  -0.542089593070807,
  -0.10345883594549199,
  0.335171921179823,
  0.7738026783051382,
  1.212433435430453,
  1.651064192555768,
  2.0896949496810833,
  2.528325706806398]}
```

```python
hist1
```
![newplot](https://user-images.githubusercontent.com/15064365/63517004-1f53eb80-c4bc-11e9-938d-8572f6f78916.png)

```python
hist2 = hv.operation.histogram(points.select(y=(0, None), x=(0, None)), **hist1.operation_kwargs)
hist1 * hist2
```
![newplot-1](https://user-images.githubusercontent.com/15064365/63517091-48747c00-c4bc-11e9-8940-be64f10e3d69.png)

This will be especially convenient when combined with https://github.com/pyviz/holoviews/pull/3919, because the original dataset will be available as the `hist1.dataset` property.

TODO:
 - [x] Presever operation_kwargs through `clone`.",2,4,[]
533,309609159,3920,19542768,2019-08-21 17:40:23,2019-09-03 12:43:39,closed,Add dim-expression support in Dataset.select ,"This PR adds a new `selection_expr` argument to the `Dataset.select` method. This argument may be set to a `holoviews.dim` expression as a way to select rows from a dataset using symbolic expressions.

For example:
```python
import holoviews as hv
import pandas as pd
from holoviews import dim
import dask.dataframe as dd

df = pd.DataFrame({
    'a': [1, 1, 3, 3, 2, 2, 0, 0],
    'b': [10, 20, 30, 40, 10, 20, 30, 40],
    'c': ['A', 'A', 'B', 'B', 'C', 'C', 'D', 'D'],
    'd': [-1, -2, -3, -4, -5, -6, -7, -8]
})

ds = hv.Dataset(df)

print(ds.data)
```
```
   a   b  c  d
0  1  10  A -1
1  1  20  A -2
2  3  30  B -3
3  3  40  B -4
4  2  10  C -5
5  2  20  C -6
6  0  30  D -7
7  0  40  D -8
```
```python
print(ds.select(selection_expr=(dim('b') >= 20) & (dim('a') % 2 == 0)).data)
```
```
   a   b  c  d
5  2  20  C -6
6  0  30  D -7
7  0  40  D -8
```

As long as the expressions are compatible with Dask DataFrames, this also works for `Dataset`s backed by Dask dataframes.

```python
ddf = dd.from_pandas(df, npartitions=2)
dds = ds.clone(data=ddf)
print(dds.select(selection_expr=(dim('b') >= 30)).data)
```
```
Dask DataFrame Structure:
                   a      b       c      d
npartitions=2                             
0              int64  int64  object  int64
4                ...    ...     ...    ...
7                ...    ...     ...    ...
Dask Name: getitem, 8 tasks
```
```python
print(dds.select(selection_expr=(dim('b') >= 30)).data.compute())
```
```
   a   b  c  d
2  3  30  B -3
3  3  40  B -4
6  0  30  D -7
7  0  40  D -8
```

Not all expressions currently work with Dask data structures. This is something I'd like to improve, but I think that should be in a separate PR.

@jlstevens @philippjfr 
",14,6,[]
534,309253203,3919,19542768,2019-08-20 22:21:16,2019-09-03 12:41:10,closed,Add LabelledData.dataset property,"## Motivation
This PR was motivated by the automatic selection proposal in https://github.com/pyviz/holoviews/issues/3842.  The goal that this PR addresses is to provide a way for  elements to maintain a reference to all of the dimensions in the dataset that they were created from.

I believe this approach accomplishes this goal in a fairly general way, and so I expect it to be useful for other purposes as well.

@jlstevens @philippjfr 

## Overview
A new `.dataset` property is added to the `LabelledData` class (the class that defines the `.data` property).  This property should always be either `None` or an instance of a `Dataset` class (not an instance of a subclass of `Dataset`).

## Rules for the dataset property
The rules that the new dataset property follows are best described by the tests in the new test file at `holoviews/tests/core/testdatasetproperty.py`.  Here are some notes:

 - The `dataset` property generally references the same `.data` object as the element and it generally includes dimensions for all of the columns in `.data`.
 - When an element is created directly from the constructor, the `dataset` property is simply a new `Dataset` object wrapping the element's `data`.
- When elements are created from other elements, the goal is to propagate the `dataset` property from the initial element. Some examples where the dataset property propagates:
    - `element.to`
    - `element.clone`
    - `element.reindex`
    - `element.iloc`
    - `element.select`
    -  `Element(element)` (passing one element to an element constructor)

## Special rules for `Histogram`
This PR includes special handling for the `Histogram` element.  This element stores, as its `data` property, the bin edges and frequencies/counts of the histogram.  It does not retain a reference back to any dataset that may have been used to create it.  In this way, it is a bit inconsistent with other related elements, like `Distribution`, which do store the raw data in the `.data` property.

For the `Histogram` element, the `dataset` property stores a reference to the `Dataset` that it was created from (or `None` if the `Histogram` is constructed with predetermined edges and frequencies).  This makes it possible to recreate the histogram from the `dataset` property, or to create a histogram with only a subset of the original data (This is the linked data selection usecase).

If we decided to someday change `Histogram` to work like `Distribution`, then `Histogram` would no longer be a special case.

## TODO
 - [x] Flow dataset through `Distribution` and `Bivariate` elements








",10,15,"['type: feature', 'tag: API']"
535,308963632,3916,19542768,2019-08-20 09:42:30,2019-08-20 09:57:12,closed,Fixed GridSpace axis alignment,"Fixes the alignment of a GridSpace x-axis:

Before:

<img width=""312"" alt=""Screen Shot 2019-08-20 at 11 42 03 AM"" src=""https://user-images.githubusercontent.com/1550771/63336515-8e580580-c33f-11e9-95e9-c531deaa79b4.png"">

After:

<img width=""308"" alt=""Screen Shot 2019-08-20 at 11 39 23 AM"" src=""https://user-images.githubusercontent.com/1550771/63336432-708aa080-c33f-11e9-9b4c-c12a86c917b9.png"">
",0,1,['type: bug']
536,308357347,3915,19542768,2019-08-18 11:42:15,2019-08-29 13:55:44,closed,Refactored datashader operations and add new aggregators,"Some refactoring of datashader operations to make it easier to implement new operations. Additionally adds an operation to aggregate ``Spikes``:

Handles simple spikes:

![uniform_spikes_simple](https://user-images.githubusercontent.com/1550771/63224665-bd4b6b80-c1c7-11e9-8ec3-10aeec86f81e.gif)

Handles datetimes:

![date_spikes_simple](https://user-images.githubusercontent.com/1550771/63224666-c1778900-c1c7-11e9-9654-f075acd3eaa0.gif)

Handles Spikes with vdims:

![date_spikes_with_vdim](https://user-images.githubusercontent.com/1550771/63224668-c3414c80-c1c7-11e9-9ba8-29bcf88a336e.gif)

- [x] Add tests
- [x] Add Spikes aggregator with and with values and positive and negative heights
- [x] Add Area aggregator
- [x] Add Spread aggregator
- [x] Add docs

Cc: @jlstevens @jbednar ",18,9,['type: feature']
537,308302275,3914,19542768,2019-08-17 16:15:29,2019-08-18 10:06:42,closed,Fontsize colorbar,"![image](https://user-images.githubusercontent.com/15331990/63214632-44251900-c0e0-11e9-8971-f9df5a68a305.png)
![image](https://user-images.githubusercontent.com/15331990/63214634-4ab39080-c0e0-11e9-98dc-57a01c28cd83.png)

```
import xarray as xr
import hvplot.xarray

da = xr.tutorial.open_dataset('air_temperature')['air'].isel(time=0)

da.hvplot('lon', 'lat').opts(clabel='test', fontsize={'cticks': 25, 'clabel': 35})
da.hvplot('lon', 'lat').opts(clabel='test', fontsize={'ticks': 25, 'labels': 35})

import xarray as xr
import hvplot.xarray
import holoviews as hv
hv.extension('matplotlib')

da = xr.tutorial.open_dataset('air_temperature')['air'].isel(time=0)

da.hvplot('lon', 'lat').opts(clabel='test', fontsize={'cticks': 25, 'clabel': 35})
da.hvplot('lon', 'lat').opts(clabel='test', fontsize={'ticks': 25, 'labels': 35})
```",0,4,[]
538,308256987,3913,19542768,2019-08-17 01:30:48,2019-08-17 11:32:23,closed,Add cformatter for bokeh,"![image](https://user-images.githubusercontent.com/15331990/63205080-ca037e80-c064-11e9-9f1d-9d28f3f5cb30.png)

```
import xarray as xr
import hvplot.xarray

import holoviews as hv

hv.extension('bokeh')

da = xr.tutorial.open_dataset('air_temperature')['air'].isel(time=0)
da.hvplot('lon', 'lat').opts(clabel='red', cformatter='%.5f')
```",1,2,[]
539,308232439,3912,19542768,2019-08-16 22:05:53,2019-08-17 22:42:46,closed,Plotly: Assorted enhancements to support streams examples,Reopens #3880 against master,1,53,[]
540,308186920,3911,19542768,2019-08-16 19:11:32,2019-08-17 11:31:24,closed,Regrid doc elaboration for image data,"Hi @jbednar I am following up on [your SO comment](https://stackoverflow.com/questions/57446612/prevent-the-colormap-to-be-rescaled-when-using-datashader-to-rerender-an-image-a/57447097?noredirect=1#comment101398216_57447097) to add to the documentation what I think could be helpful to understand datashading operations on image data with the `clim` option.

I added a short paragraph which reflects my current understanding of the topic (which is likely incomplete) and a short example to show the difference between automatic color range rescaling and how to fix the range. Since the rescaling will not show up in the static documentation I also made this gif, but not sure what the policy is for including images vs the notebook output.

![regrid-color-range](https://user-images.githubusercontent.com/4560057/63191511-8cc7ce00-c01d-11e9-9756-3dbc480551e0.gif)

One thing I still find somewhat confusing is that the `datashade()` function doesn't seem to be able to pass `.opts(clim=())` onto the bokeh backend (like `regrid` does). Instead I can pass `clims=()` directly to the `datashade()` function, but when I try to do this I get an error: 

```
WARNING:param.dynamic_operation: Callable raised ""ValueError('span is not (yet) valid to use with eq_hist')"".
Invoked as dynamic_operation(height=400, scale=1.0, width=400, x_range=None, y_range=None)
```
",12,10,['tag: docs']
541,307911968,3907,19542768,2019-08-16 01:42:29,2019-08-18 10:07:06,closed,Add extend for plot,"The main reason why I want to set this manually is so if I have an animation and the min/max goes out of range, it doesn't awkwardly make rectangular edges into triangular and adjust the plot position",2,5,[]
542,307909440,3906,19542768,2019-08-16 01:23:54,2019-08-16 09:18:47,closed,Add cformatter,https://github.com/pyviz/holoviews/issues/3904,0,1,[]
543,307901686,3905,19542768,2019-08-16 00:28:40,2019-08-16 22:01:52,closed,Plotly: Add Panel-based support for linked streams and dynamic updates,"Reopened #3866 against master

## Overview

This PR supersedes https://github.com/pyviz/holoviews/pull/3316, building linked stream support on top of the HoloViews Panel integration started in the base branch (philippjrf/widgetsectomy).  Supported linked streams are:
 - `RangeXY`
 - `RangeX`
 - `RangeY`
 - `BoundsXY`
 - `BoundsX`
 - `BoundsY`
 - `Selection1d`

It also adds support for updating DynamicMaps using streams from Python.

@philippjfr @jlstevens @jbednar 

## Linked Streams Architecture
The core implementation of linked streams is in ff0eb73.  Here's an overview

Every Plotly `ElementPlot` now has a `trace_uid` property. This `trace_uid` is used as the `uid` property of the Plotly trace that will be associated with any linked stream attached to this plot's Element.

This plot element is an input to a new set of `PlotlyCallback` classes.  Each callback class is responsible for tracking all active instances if its own class type using a `WeakValueDictionary` from `trace_uid` to callback instance. (To reduce boilerplate the instance tracking logic is in the `MetaPlotlyCallback` metaclass).

Additionally, each callback class is responsible for dispatching callback events to the streams of all relevant callback instances.  This dispatching is done in the `update_streams_from_property_update` class method of each callback class.

When the plotly backend is activated, a backend switch hook is used to register a custom plotly pane construction function with the Panel `HoloViews` class.  This function is responsible for constructing the Plotly pane instance for the HoloViews pane. In addition, it also installs callbacks to call the `update_streams_from_property_update` methods when the appropriate callback parameter is updated.

## Other changes
The remaining commits are pretty small and self explanatory I think.  Let me know if you have any questions about them!

## Examples
The examples from https://github.com/pyviz/holoviews/pull/3316 still work as-is.
",2,23,[]
544,307425666,3900,19542768,2019-08-14 17:28:58,2019-08-14 17:45:34,closed,Ensure dask.dataframe is imported to use DaskInterface,,0,1,[]
545,307127767,3898,19542768,2019-08-14 00:29:48,2019-08-14 00:30:06,closed,Fix for rendering Scatter3D with matplotlib 3.1,,0,1,[]
546,304737565,3880,19542768,2019-08-06 14:13:26,2019-08-17 12:01:45,closed,Plotly: Assorted enhancements to support streams examples,"## Overview
This PR builds on https://github.com/pyviz/holoviews/pull/3866 (which in turn builds on https://github.com/pyviz/holoviews/pull/3836) to provide all of the plotly backend enhancements needed in order to support the following interactive streams example notebooks.

## Examples
### [Bounds](http://holoviews.org/reference/streams/bokeh/Bounds.html#bokeh-gallery-bounds)
![bounds_selection](https://user-images.githubusercontent.com/15064365/62542159-3b535e00-b829-11e9-9c09-3f0d12187338.gif)

### [Boundsx](http://holoviews.org/reference/streams/bokeh/BoundsX.html#bokeh-gallery-boundsx)

![boundsx_selection](https://user-images.githubusercontent.com/15064365/62542192-4dcd9780-b829-11e9-9e6f-7b232a49e890.gif)

### [Boundsy](http://holoviews.org/reference/streams/bokeh/BoundsY.html#bokeh-gallery-boundsy)

![boundsy_selection](https://user-images.githubusercontent.com/15064365/62542221-6047d100-b829-11e9-9c24-bdb93cf090ba.gif)

### [RangeXY](http://holoviews.org/reference/streams/bokeh/RangeXY.html#bokeh-gallery-rangexy)
![range_histogram](https://user-images.githubusercontent.com/15064365/62542265-75246480-b829-11e9-8f3c-ee0adac76aa9.gif)

**Note:** I haven't tracked down yet how it is that the histogram in the Bokeh version of this example automatically picks up the same colorscale as the heatmap.

### [Selection1d paired](http://holoviews.org/reference/streams/bokeh/Selection1D_paired.html#bokeh-gallery-selection1d-paired)

![multiple_selection](https://user-images.githubusercontent.com/15064365/62542312-8d947f00-b829-11e9-8ff3-283ba3b31c4c.gif)

**Note:** I haven't tracked down yet how it is that the VLines in the Bokeh version of this example automatically pick up the same color as the scatter traces that they are associated with.

### [Selection1d points](http://holoviews.org/reference/streams/bokeh/Selection1D_points.html#bokeh-gallery-selection1d-points)
![point_selection1d](https://user-images.githubusercontent.com/15064365/62542344-9ab16e00-b829-11e9-9f4d-8ab31296a12a.gif)

### Datashader
I didn't see a particular notebook to port to plotly for datashader integration.  But here's an example from the [Working with large data using datashader](http://holoviews.org/user_guide/Large_Data.html#working-with-large-data-using-datashader) section.

![datashader](https://user-images.githubusercontent.com/15064365/62542666-45299100-b82a-11e9-8f8f-e551a8d5065e.gif)

**Note:** I'm currently working on a plotly.js fix for the image flash that happens sometimes right before the image updates.

**Note:** Currently, the rangexy streams are only update after the pan action is completed.  Once https://github.com/pyviz/panel/pull/575 is included in Panel, I think it will be possible for these updates to come continually as with the Bokeh backend.

## New Features
I cleaned up the commit log, so it will probably be easiest to review this commit-by-commit.

Here is a summary of the new features that were added (beyond the basic stream support added in https://github.com/pyviz/holoviews/pull/3866) to make these examples possible.

### New elements
To support these examples, the following new plotly elements were needed
 - VLine
 - HLine
 - Bounds
 - RGB
 - Histogram

And because their implementation is nearly identical to `Bounds`, I also threw in `Box` and `Ellipse` as well.

The `VLine`, `HLine`, `Bounds`, `Box`, and `Ellipse` elements are represented by plotly layout shapes, not traces.  And the `RGB` element is represented by a plotly layout image.  With the previous architecture, elements could only be represented by traces.  Now, elements can be represented by any combination of traces, shapes, images, and annotations.

### Pixel-based layout
Plotly's native layout approach is to position plot elements in normalized relative coordinates.  But because HoloViews computes the sizes of plot elements in pixels it was hard to maintain the appropriate relative sizes of subplots when they were combined together into a layout.  It was also hard to maintain consistent gaps between plots as the figures get wider.  So I reworked the internal `figure_grid` utility function to work in pixel coordinates.  Prior to these changes, it wasn't really possible for adjoint plots to be narrower that their main plot.

### Automatic axis linking
To support linking the axes of the adjoint plots to the main plot in the Bounds example, I added support for automatically linking axes across layouts that represent the same dimensions.  I believe this is now equivalent to the automatic linking that the Bokeh backend performs. And, as with Bokeh, it can be disabled using the `shared_axes` Layout param.

### xaxis/yaxis param support
To support the adjoint plots in the Bounds example, the `xaxis`/`yaxis` params are now supported in order to configure which side of the plot the axes are positioned on, and to configure when to remove axis ticks/labels.

## Documentation updates
In addition to creating a new documentation notebook for each of these 5 interactive streams examples, I also created new notebooks for each of the new elements.  And I updated all of the relevant Bokeh and Matplotlib notebooks to include links to the appropriate plotly notebook.

## Plotly version dependency
I found it really convenient, when defining new elements, to take advantage of the plotly ""magic underscore"" notation. This lets you reference nested properties by separating the nested names with underscores.  With this, the shape-based elements can have a style property called `line_color`, and this can be passed along directly to plotly.py where it will be interpreted as `{'line': {'color': val}}.

At some point, I'd like to go through all of the existing plotly style properties and port them to forms that are compatible with this notation.  I think that will simplify the code a bit, and make it easier folks to find plotly documentation on the style properties.

Using this requires plotly.py version 4.0.0+, so I updated the min version accordingly.

## GIF linkes
To get the GIFs in the new stream notebooks working, I'll need to get the GIFs uploaded to https://assets.holoviews.org/.



",2,52,[]
547,304709091,3879,19542768,2019-08-06 13:09:48,2019-08-09 11:10:08,closed,"fixed ""OSError: [Errno 22] Invalid argument"" for dates < 1970 on Windows",The conversion to datetime object threw an error if dates before 1970-01-01 were passed (negative timestamp). Should be fixed.,0,1,[]
548,304269134,3877,19542768,2019-08-05 11:57:58,2019-08-05 12:29:21,closed,Various updates for matplotlib 3.1 compatibility,,0,1,[]
549,304094662,3876,19542768,2019-08-04 20:52:37,2019-08-04 20:52:46,closed,Fixed bug in DataLinkCallback,DataLink comparison skips ragged arrays.,0,1,[]
550,304094436,3875,19542768,2019-08-04 20:48:15,2019-08-04 20:49:48,closed,Fixed bug in decimate,Fixes #3864 ,0,1,[]
551,303877633,3872,19542768,2019-08-02 17:52:54,2019-08-02 19:09:56,closed,Further aspect fixes,"Fixes #3870 
Fixes issue in https://github.com/pyviz/hvplot/pull/270",0,7,[]
552,302992681,3866,19542768,2019-07-31 14:51:18,2019-08-16 15:38:22,closed,Plotly: Add Panel-based support for linked streams and dynamic updates,"## Overview
This PR supersedes https://github.com/pyviz/holoviews/pull/3316, building linked stream support on top of the HoloViews Panel integration started in the base branch (philippjrf/widgetsectomy).  Supported linked streams are:
 - `RangeXY`
 - `RangeX`
 - `RangeY`
 - `BoundsXY`
 - `BoundsX`
 - `BoundsY`
 - `Selection1d`

It also adds support for updating DynamicMaps using streams from Python.

@philippjfr @jlstevens @jbednar 

## Linked Streams Architecture
The core implementation of linked streams is in ff0eb73.  Here's an overview

Every Plotly `ElementPlot` now has a `trace_uid` property. This `trace_uid` is used as the `uid` property of the Plotly trace that will be associated with any linked stream attached to this plot's Element.

This plot element is an input to a new set of `PlotlyCallback` classes.  Each callback class is responsible for tracking all active instances if its own class type using a `WeakValueDictionary` from `trace_uid` to callback instance. (To reduce boilerplate the instance tracking logic is in the `MetaPlotlyCallback` metaclass).

Additionally, each callback class is responsible for dispatching callback events to the streams of all relevant callback instances.  This dispatching is done in the `update_streams_from_property_update` class method of each callback class.

When the plotly backend is activated, a backend switch hook is used to register a custom plotly pane construction function with the Panel `HoloViews` class.  This function is responsible for constructing the Plotly pane instance for the HoloViews pane. In addition, it also installs callbacks to call the `update_streams_from_property_update` methods when the appropriate callback parameter is updated.

## Dynamic Update Architecture
The core implementation of dynamic update support is in 6352793. Here's an overview.

The `id` property of `PlotlyPlot` instances is now set to a random UID.  This `id` is added as a top-level `_id` key in the plotly figure dictionary produced by the plot class. (this property is removed before the user would get it by calling `hv.render`, see 845f423baff59538679ff7f2918dfa9a939dd7d9).

The custom Plotly pane constructor function described above creates a mapping between the `_id` property in the figure dictionary and the associated plotly pane that is constructed.  This mapping is stored as a class level `WeakValueDictionary` in the `PlotlyRenderer` class.

The `PlotlyRenderer` class has a new `trigger_plot_pane` class method that inputs a plot id and a new figure dictionary, and it is responsible for updating the appropriate plotly pane to the updated value.  This method is called by the various `update_frame` methods across the `PlotlyPlot` class hierarchy.

## Other changes
The remaining commits are pretty small and self explanatory I think.  Let me know if you have any questions about them!

## Examples
The examples from https://github.com/pyviz/holoviews/pull/3316 still work as-is.
",0,21,[]
553,302948868,3865,19542768,2019-07-31 13:15:38,2019-07-31 13:29:54,closed,Propagate backend argument to Store.lookup_options,"Closes https://github.com/pyviz/panel/issues/566

The underlying issue is that the `backend` argument to `Store.lookup_options` was not passed along to the `closest` and `options` methods.  So the input backend was effectively ignored.



",1,2,[]
554,302231596,3862,19542768,2019-07-29 20:53:42,2020-01-06 16:32:00,closed,Add an example of the first Image constructor,"It took me some time to grasp how the indices to `X`,`Y` and `Z` are aligned when the first Image constructor is used. I thought it would be helpful to add a note that the axes may flip depending on how one specifies the coordinate inputs.  I chose to explicitly show how `Z` is constructed from `xs` and `ys` in the first example to be clear about the relationship between indices to `Z` and x-y coordinate (ie. the values in `xs` and `ys`).  I found using `meshgrid` and numpy functions to get `Z` (as in the second added example) less explicit in showing the relationship.  You may find having two examples redundant though.  Please let me know if you have suggestions to improve the wording and example itself. Thanks!",2,4,[]
555,302090790,3860,19542768,2019-07-29 14:16:11,2019-07-29 19:36:04,closed,Optimized axis range and factor finding,"- [x] Skips range finding if explicit dimension range is set
- [x] Avoid computing range on categorical axes
- [x] Respect Dimension.type if set to string
",0,5,['type: enhancement']
556,301117647,3854,19542768,2019-07-25 12:18:49,2019-07-29 13:30:53,closed,Interface improvements for dask and dtype handling,"* Adds an ``Interface.dtype`` method to inspect dtypes without loading data
* Adds Interface.values ``compute`` argument to access dask arrays without loading them into memory",1,8,"['tag: component: data', 'type: enhancement']"
557,301115687,3853,19542768,2019-07-25 12:13:05,2019-07-25 12:35:31,closed,Fix range issues on Bars,Fixes https://github.com/pyviz/holoviews/issues/3838,0,2,['type: bug']
558,300932370,3851,19542768,2019-07-24 23:43:27,2019-07-26 10:06:08,closed,Use Panel to generate HTML output,"In https://github.com/pyviz/holoviews/pull/3836, all HoloViews objects with widgets are displayed using Panel, but objects without widgets are still displayed using the legacy rendering paths.

This PR goes a step further and uses Panel to perform the HTML rendering of non-widget HoloViews objects as well (across all backends). The legacy code paths for rendering figures to static images have been preserved and simplified.

I've spot checked the rendering of objects with and without widgets across all three backends, as well as rendering to static images across all backends.  The tests suite will need some attention if we go this direction.

The commit log is pretty clean, so it might be helpful to look at the changes commit-by-commit.

@philippjfr, if this approach looks alright, then this would supersede https://github.com/pyviz/holoviews/pull/3850.  If this seems too large/risky of a change then I can keep building on https://github.com/pyviz/holoviews/pull/3850 instead.",5,6,['status: WIP']
559,300850572,3850,19542768,2019-07-24 18:50:27,2019-07-25 23:35:18,closed,Replace plotly HTML rendering with Panel,"**Update:** For a more wholistic approach, see https://github.com/pyviz/holoviews/pull/3851

---

Supersedes https://github.com/pyviz/holoviews/pull/3837, based on https://github.com/pyviz/holoviews/pull/3836.

Rendering HoloViews objects with widgets was already working, this branch adds support simple elements without widgets using Panel.

One note, I'm getting a pyviz_comms error when calling `figure_pane._repr_mimebundle_()` from a non-IPython context (debugging in PyCharm).  I'm not sure if this method is supposed to work outside of IPython, so we might need to use something else here eventually. 

 ",1,3,['status: WIP']
560,300667996,3848,19542768,2019-07-24 10:51:06,2019-07-25 11:19:08,closed,Fixed handling of data_aspect,"This PR allows setting the data_aspect even if a fixed width and height are set by adjusting the plot ranges instead of the width and height of the plot. This is already what data_aspect did after the initialization of a plot so all this changes is that this can now also be done during plot initialization.

This is an important usecase and an unfortunate oversight. I also think there was an issue with inverted handling for data_aspect in certain scenarios.",0,3,"['type: bug', 'type: enhancement']"
561,299580510,3837,19542768,2019-07-20 17:51:33,2019-07-24 18:51:04,closed,WIP: Replace plotly HTML rendering with Panel,"Rough initial prototype of using Panel to display plotly figures in HoloViews.  The goal is to combine this with https://github.com/pyviz/holoviews/pull/3836 and https://github.com/pyviz/panel/pull/529 to support interactive streams with the Plotly backend.

If successful, this would become the new foundation for the work started in https://github.com/pyviz/holoviews/pull/3316 to support `Selection1D` and `RangeXY` streams with the Plotly backend.",2,1,['status: WIP']
562,299410509,3836,19542768,2019-07-19 16:58:28,2019-08-15 22:46:54,closed,Replace HoloViews widgets with Panel,"Replacing HoloViews widgets with Panel widgets.

Requires https://github.com/pyviz/panel/pull/543 to match the previous styling.

- [x] Check matplotlib
- [x] Check plotly
- [x] Check bokeh
- [x] Check fps works
- [x] Check periodic works
- [x] Check server works
- [x] Ensure widget json data export works (especially for docs)
- [x] Fix #449
- [x] Fixes #1677 
- [x] Fixes #2885
- [x] Add tests

Closes #3868
Closes #3212 
Closes #84
Closes #3027",13,43,['status: ready']
563,298424657,3823,19542768,2019-07-17 11:25:25,2019-07-21 23:43:14,closed,Make Buffer following behavior toggleable,"Adds a ``following`` argument to the ``Buffer`` stream which toggles whether the plot will ""follow"" the current axis ranges of the plot. Currently streaming data always follows the plot which makes it impossible to zoom. This feature will make it possible to add another ``following`` mode which disables following while a user zooms and reenables it when a user clicks the reset tool. 

First step at addressing https://github.com/pyviz/holoviews/issues/2441

- [x] Adds tests",0,2,['type: enhancement']
564,296750985,3817,19542768,2019-07-11 17:23:26,2019-07-11 17:45:45,closed,Fix builtin import in py3,Fixes https://github.com/pyviz/holoviews/issues/2868,0,1,[]
565,296192256,3815,19542768,2019-07-10 14:10:36,2019-07-11 17:22:31,closed,Fixed CI with latest conda,,0,4,[]
566,295953789,3813,19542768,2019-07-09 23:25:08,2019-07-17 13:17:41,closed,Make matplotlib Bars respect lower ylim if logy=True,"Code:
```
import holoviews as hv
import pandas as pd

hv.extension('matplotlib')

df = pd.DataFrame(dict(u=['A', 'B'], y=[10,3]))
l = hv.Bars(df, ['u'], 'y')
l = l.opts(
    logy=True,
)

l.redim.range(y=(0.0001, 10))
```

Before:

`WARNING:param.BarPlot01437: Logarithmic axis range encountered value less than or equal to zero, please supply explicit lower-bound to override default of 0.100.`

![Screen Shot 2019-07-09 at 7 24 22 PM](https://user-images.githubusercontent.com/38992106/60929393-2e216e80-a27f-11e9-98e4-1010098f079e.png)

After:

![Screen Shot 2019-07-09 at 7 23 53 PM](https://user-images.githubusercontent.com/38992106/60929399-34afe600-a27f-11e9-8dfd-814ecf475d61.png)",0,1,"['type: bug', 'tag: backend: mpl']"
567,295758427,3810,19542768,2019-07-09 13:37:30,2019-07-09 14:07:47,closed,Only set use_jedi=False if available,- Fixes #3782,0,1,[]
568,295738984,3809,19542768,2019-07-09 12:49:27,2019-07-25 11:55:47,closed,Fixed legends for PathPlot,"Ensures that this generates a legend:

```python
data = {""x"": [1,2,3,4,5,6,7,8,9],
""y"":   [1,2,3,4,5,6,7,8,9],
""cat"": [0,1,2,0,1,2,0,1,2]}

colors = [""#FF0000"", ""#00FF00"", ""#0000FF""]
levels=[0,1,2,3]

hv.Path(data, vdims=""cat"").opts(color=""cat"", cmap=dict(zip(levels, colors)), line_width=4, show_legend=True)
```

![bokeh_plot - 2019-07-09T144905 785](https://user-images.githubusercontent.com/1550771/60889167-b5a7b700-a258-11e9-9d1c-195ee119b5a3.png)

- [x] Add unit test
",0,2,['type: bug']
569,295719996,3808,19542768,2019-07-09 11:56:46,2019-07-09 13:14:05,closed,Attempt to fix CI by pinning older python,,0,6,[]
570,294893330,3804,19542768,2019-07-05 14:16:44,2019-07-09 13:32:12,closed,Add MPL 3.1 deprecations to rcparam context manager,"Completes #3745 and thereby fixes #3766
Source: https://matplotlib.org/3.1.0/api/api_changes.html

This confused me for a bit, but it turned out that the deprecated arguments were simply carried over from `matplotlib.rcParams` where they then threw the warnings.

",5,1,['tag: backend: mpl']
571,294879481,3803,19542768,2019-07-05 13:35:39,2019-07-09 13:55:30,closed,Enable cmap option in matplotlib HexTiles,"Now, the following is possible, whereas before it wasn't:

```
import holoviews as hv
hv.extension('matplotlib')
import numpy as np
hv.HexTiles(np.random.randn(10000,2)).opts(cmap='Greens', colorbar=True)
```

If there is any testing being done on cmap and the like, I'd be happy to implement a test if you'd like.",1,1,['tag: backend: mpl']
572,291746506,3793,19542768,2019-06-25 21:55:08,2019-07-08 12:37:51,closed,add package dependencies to nytaxi example,"when running the app, python will complain about missing direct imports
(dask, xarray, datashader), but the other missing dependencies (fastparquet
and python-snappy) are more difficult to track down, since the `bokeh serve`
command will simply show a white page with no exception on the
python console.

The dependencies listed in the PR are the ones needed in addition if
holoviews was installed via the recommended way:

 conda install -c pyviz holoviews bokeh",1,2,[]
573,291641037,3792,19542768,2019-06-25 16:37:19,2019-06-25 17:46:15,closed,Ensure plotting code handles custom array types,"Custom array types (such as pandas CategoricalArray) were not recognized as such, causing issues when coloring by a categorical dtype.

Fixes https://github.com/pyviz/hvplot/issues/213",0,1,[]
574,290830044,3790,19542768,2019-06-22 15:23:26,2020-01-06 16:54:35,closed,New pipe method for more intuitive multidimensional dim transforms,"As discussed in #3636, I propose a thin wrapper around the already present capability of dim transforms to handle custom functions with multiple input dimensions.

I used `pipe` as name for the new class method, inspired by https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.pipe.html

The following is now possible (example a bit convoluted for the sake of demonstration):
```
import numpy as np
import pandas as pd
import holoviews as hv
from holoviews import dim

df = pd.DataFrame(np.random.rand(10, 3), columns=['x', 'y', 'z']).cumsum()
e = hv.Scatter(df, 'x', ['y', 'z'])

def func(x, y, z, u, v=None):
    return u+z*np.polyfit(x, y, 1)[1]

dim.pipe(func, 'x', 'y', 10, np.random.rand(10)).max().apply(e)
```

Edit: Although I start wondering whether it wouldn't be more general to allow passing `str` arguments instead of transforming them into `dim`s by default. Perhaps a keyword `dim_as_str=True` could help?",2,1,['type: enhancement']
575,287987617,3773,19542768,2019-06-13 15:43:45,2019-06-21 16:53:36,closed,Fix graph plotting for unsigned node dtypes,Fixes pyviz/hvplot#217,2,1,[]
576,287586607,3769,19542768,2019-06-12 16:30:22,2019-06-21 18:50:49,closed,Fix GridSpace and GridMatrix sort=False,"Fixes #3462

Previously, `sorted(set(...))` implicitly sorted grid keys, now passing sort=False has the intended effect:

```
import numpy as np
import holoviews as hv
hv.extension('matplotlib')

data = hv.Image(np.random.rand(10,10))
imgs = [
    (('C', 'dummy'), data),
    (('D', 'dummy'), data),
    (('A', 'dummy'), data),
    (('B', 'dummy'), data)
]
hv.GridSpace(imgs, sort=False, kdims=['dim1','dim2'])
```

<img width=""629"" alt=""Screen Shot 2019-06-12 at 12 29 10 PM"" src=""https://user-images.githubusercontent.com/38992106/59369120-b4dd3d00-8d0d-11e9-8750-cd175794e424.png"">

<img width=""380"" alt=""Screen Shot 2019-06-12 at 12 29 31 PM"" src=""https://user-images.githubusercontent.com/38992106/59369141-be66a500-8d0d-11e9-9a27-013be1313940.png"">

#3770 is vaguely related (this PR highlights some code duplication) in the (non-) sorting of dimension values.",3,3,['type: bug']
577,285940633,3761,19542768,2019-06-06 19:35:26,2019-06-21 18:51:44,closed,Allow automatic extent scaling on line annotations,"Fixes #3759 

The following is now possible:

```
import holoviews as hv
hv.extension('bokeh')
import numpy as np

hv.VLine(-1).opts(apply_ranges=True, padding=.1) * hv.Scatter(np.random.rand(100,2))
```

Note that in the matplotlib backend ranges were apparently already applied before then.",0,3,[]
578,285829114,3760,19542768,2019-06-06 14:27:47,2019-07-29 19:07:20,closed,Updated flexx & pscript,"Last version of flexx doesn't include ""pscript""

It is now a standalone package.",12,1,[]
579,285167890,3755,19542768,2019-06-04 22:33:50,2019-06-25 16:51:28,closed,Updated definition of box plot whiskers to match convention for Bokeh plots.,"In #1926, I suggested using a definition of the whiskers length in box plots as follows:

The top whisker extends 1.5 times the IQR beyond the top of the box or to the maximal data point, whichever is smaller. An analogous definition holds for the bottom whisker. This is how the whisker is defined in some places, e.g., [here](https://www.stat.berkeley.edu/~brill/Papers/EDASage.pdf).

A vastly more widely adapted version uses this definition:
The top whisker extends to the maximum of the set of data points that are less than 1.5 times the IQR beyond the top of the box, with an analogous definition for the lower whisker.

This is what the [HoloViews docs say](http://holoviews.org/reference/elements/bokeh/BoxWhisker.html). This PR brings the Bokeh rendering of box and whisker plots.

My apologies for the confusion with #1926.",3,2,[]
580,283430896,3745,19542768,2019-05-29 21:04:11,2019-06-21 17:52:43,closed,remove frameon from default mpl styles,"The frameon rcparam is marked for deprecation in MPL 3.3, see https://github.com/matplotlib/matplotlib/pull/11692",0,1,[]
581,283324748,3744,19542768,2019-05-29 15:49:38,2019-08-03 12:49:24,closed,Add ability to use functions with param dependencies in DynamicMap,"Allows doing things like:

```python
slider = pn.widgets.FloatSlider()

@pn.depends(y=slider.param.value)
def test(y):
    return hv.Curve([0, 1, y])

pn.Column(slider, hv.DynamicMap(test))
```

- [x] Adds tests
- [x] Added docs",4,11,[]
582,282683508,3738,19542768,2019-05-28 06:23:31,2019-05-28 08:35:00,closed,Fixed and unified links on Overlay reference page,"There was a wrong link on the plotly Overlay page which did not lead to the bokeh Overlay page.
Simultaneously I changed the order on the matplotlib Overlay page so that the links don't jump anymore when viewing the Overlay pages of the different plotting backends.",1,1,['tag: docs']
583,282597910,3736,19542768,2019-05-27 19:22:28,2019-05-27 22:32:06,closed,datetime handling for spikes,"The previous implementation of get_data for Spikes in the matplotlib backend used the `element.array()` method, which already coerces datetime values to int in case of mixed data types. I fixed that and updated the datetime handling using recently added utils. 

The following now works, whereas before it didn't:

```
import pandas as pd
import numpy as np
import holoviews as hv
hv.extension('matplotlib')

e = hv.Spikes((pd.date_range('2100-1-1', '2100-10-10', periods=20), np.random.rand(20)), 'Date', 'c')
e.opts(xrotation=45)
```

<img width=""365"" alt=""Screen Shot 2019-05-27 at 3 20 57 PM"" src=""https://user-images.githubusercontent.com/38992106/58436378-13aa8180-8093-11e9-8416-0b3b57399d0b.png"">
",2,2,"['type: bug', 'tag: backend: mpl']"
584,282413159,3735,19542768,2019-05-27 08:19:16,2019-05-27 19:13:20,closed,Updates to new param API,,1,1,[]
585,282301501,3734,19542768,2019-05-26 14:45:30,2019-07-26 08:30:09,closed,Fix setting edge colors for Chord graphs using an explicit mapping,"and normalization (which is turned on by default).

Details:
The color map's vmin/vmax was computed based on factors of the whole range
whereas the palette only used the factors from the actually used values.

When using color normalization this lead to:
-- LineCollection normalizing via vmin/vmax computed above, reflecting the
   whole range.
-- ListedColormap is transforming the normalized color values provided by the
   LineCollection using its own size (N). However that size N was based on the
   actually used values and hence too small.",6,1,['type: bug']
586,282016248,3731,19542768,2019-05-24 13:28:08,2019-05-25 23:34:10,closed,Add numpy logs to transformations,"As title states, this PR adds logs function to the available transformations",4,8,[]
587,280384624,3728,19542768,2019-05-20 13:09:58,2019-05-20 14:55:32,closed,Ensure Param streams handle subobject dependencies,The Params and ParamMethod streams only handled dependencies on the main parameterized object but did not handle subobject dependencies. This PR ensures both are handled.,0,5,['type: bug']
588,280334612,3727,19542768,2019-05-20 10:40:34,2019-05-20 12:24:07,closed,Ensure RGB hover is handled,Fixes https://github.com/pyviz/geoviews/issues/331,7,2,['tag: backend: bokeh']
589,280326553,3726,19542768,2019-05-20 10:16:54,2019-05-20 15:02:51,closed,Added CHANGELOG for 1.12.3,,2,5,[]
590,280310879,3725,19542768,2019-05-20 09:33:22,2019-05-20 09:59:09,closed,Made xarray flags check safe,Fixes https://github.com/pyviz/holoviews/issues/3724,0,1,[]
591,279570730,3720,19542768,2019-05-16 15:56:24,2019-05-16 16:02:55,closed,"use dask_array_module() to get dask array, if possible",Offered as a possible solution to #3685,1,1,[]
592,279570547,3719,19542768,2019-05-16 15:55:58,2019-05-17 08:26:01,closed,Made dask.array imports safe,Fixes https://github.com/pyviz/holoviews/issues/3685,0,2,[]
593,279538748,3717,19542768,2019-05-16 14:42:22,2019-05-16 14:57:39,closed,Fix BokehRenderer width/height plot opt handling,Fixes https://github.com/pyviz/holoviews/issues/3703,0,1,[]
594,279455913,3716,19542768,2019-05-16 11:05:14,2019-05-16 14:01:33,closed,Ensure Dynamic utility correctly resolves posargs,Fixes https://github.com/pyviz/holoviews/issues/3691,0,1,[]
595,279433593,3715,19542768,2019-05-16 10:01:59,2019-05-16 10:17:43,closed,Moved away from deprecated param APIs,Fixes https://github.com/pyviz/holoviews/issues/3702,0,1,[]
596,278334426,3707,19542768,2019-05-13 15:50:59,2019-05-14 14:08:47,closed,Ensure that markers are handled correctly in bokeh batched mode,"Had to add some custom handling to transform the mpl style marker specs to bokeh and also handle angles specifically because some custom marker types define both marker and angle.

Fixes https://github.com/pyviz/holoviews/issues/3706",0,1,[]
597,278114546,3705,19542768,2019-05-13 03:57:15,2019-05-13 07:44:36,closed,Clarified error message,The previous message referred to a notebook magic and then presented a non-magic command.,0,1,[]
598,278071632,3704,19542768,2019-05-12 18:26:47,2019-05-12 21:48:44,closed,Clarify max frames warning in notebooks,"Resolves https://github.com/pyviz/holoviews/issues/2993

This pull request clarifies the wording of a warning message that is shown when a user attempts to display a plot with a big number of frames in a notebook.

Please check spelling and grammar since English is not my first language. ",3,2,[]
599,277319563,3701,19542768,2019-05-09 09:40:28,2019-05-16 14:01:48,closed,Fix updates to Overlay with variable items,Fixes https://github.com/pyviz/holoviews/issues/3696,2,2,[]
600,276317183,3694,19542768,2019-05-06 20:11:43,2019-05-07 08:32:36,closed,DataLink when NaNs are present,Fixes #3690,1,2,[]
601,276024776,3692,19542768,2019-05-05 20:44:21,2019-08-19 08:55:44,closed,Add hover for other projs,"Fixes:
https://github.com/pyviz/geoviews/issues/251

![image](https://user-images.githubusercontent.com/15331990/57200090-e6f3c600-6f3b-11e9-806e-080042853cdd.png)


Linked with:
https://github.com/pyviz/geoviews/pull/321 
",2,1,[]
602,275795571,3689,19542768,2019-05-03 17:46:05,2019-05-03 19:14:54,closed,Fixed hv.help() for non-hv objects,"hv.help() was meant to fall back to pydoc for anything it doesn't understand, but that has apparently been broken for some time (see below).  Looks like it was because `pydoc` was deleted from the module namespace, presumably to clean up our API.  To achieve the same thing while also working properly, did a local import of `pydoc` just where it was needed.

![Screen Shot 2019-05-03 at 12 40 18 PM](https://user-images.githubusercontent.com/1695496/57155482-2afe9380-6da1-11e9-9b37-599f1bdbc769.png)
",1,1,['type: bug']
603,275705984,3688,19542768,2019-05-03 13:09:11,2019-05-03 15:32:22,closed,Reuse PlotSize stream if it exists,In order for data_aspect handling to work when a plot is updated dynamically a PlotSize stream is created to keep track of the screen size. However when the plot already has a PlotSize stream attached this is both superfluous and can cause parameter clashes in the Stream.trigger method. This PR simply reuses existing streams.,1,1,['type: bug']
604,275415096,3684,19542768,2019-05-02 15:37:27,2019-05-02 23:28:32,closed,Revert stream value deduplication due to incomparable types,"Addresses #3681 by largely reverting the changes in #3648. There is still an underlying issue however as taking `set` is not sufficient to remove clashes - there are still three `PlotSize` streams appearing in the example shown in  #3648.

For this reason, I am switching to using a print statement (which shows up in the web console) instead of logging to make sure this underlying issue isn't hidden again.",0,1,[]
605,274720579,3677,19542768,2019-04-30 12:58:51,2019-04-30 13:14:12,closed,Ensure that lists of Paths can be cast easily,"We support a pattern like:

```python
hv.Path([hv.Bounds(...), hv.Bounds(...)])
```

This can be quite convenient but since I switched Bounds to use the dictionary data format I've found out that this pattern doesn't work when the columns in the data aren't named the same as the original object. This PR ensures that if the dimensions don't match they are replaced.

This cropped up when running EarthSim tests against 1.12.2a1",0,1,[]
606,274671301,3676,19542768,2019-04-30 10:12:56,2019-05-01 08:58:32,closed,Added CHANGELOG for 1.12.2 release,,0,3,['tag: docs']
607,274664614,3675,19542768,2019-04-30 09:51:09,2019-04-30 10:11:53,closed,Allow defining categorical axis ordering via Dimension.values,Part of https://github.com/pyviz/holoviews/issues/2468,0,2,['type: enhancement']
608,274645628,3674,19542768,2019-04-30 08:52:09,2019-04-30 10:11:41,closed,Removed HV_DOC_HTML flag,,0,3,['tag: docs']
609,274454160,3670,19542768,2019-04-29 17:14:03,2019-04-29 17:43:03,closed,Ensure that PlotSize changes do not trigger event loop,Fixes https://github.com/pyviz/holoviews/issues/3614,0,1,[]
610,274391062,3668,19542768,2019-04-29 14:16:05,2019-04-29 15:10:20,closed,Handle Paths of heterogeneous types in bokeh,Fixes https://github.com/pyviz/holoviews/issues/3464,0,2,[]
611,274383171,3667,19542768,2019-04-29 13:55:16,2019-04-29 14:46:56,closed,Consistently renamed Applying Customizations user guide,"Fixes https://github.com/pyviz/holoviews/issues/3661, https://github.com/pyviz/holoviews/issues/3642",0,2,['tag: docs']
612,274344933,3666,19542768,2019-04-29 12:00:08,2019-04-29 12:39:16,closed,Ensure that event method works for empty Streams,Fixes https://github.com/pyviz/holoviews/issues/3564,0,1,[]
613,274321458,3665,19542768,2019-04-29 10:35:43,2019-04-29 11:18:01,closed,Ensured that hover tooltips are updated when dimensions change,Fixes https://github.com/pyviz/holoviews/issues/3609,0,1,[]
614,274312844,3664,19542768,2019-04-29 10:05:30,2019-04-29 10:19:14,closed,Expose (data)shade alpha option,Fixes https://github.com/pyviz/holoviews/issues/3611,0,1,[]
615,274306314,3663,19542768,2019-04-29 09:43:46,2019-04-29 10:16:05,closed,Added support for pathlib in save utility,Fixes https://github.com/pyviz/holoviews/issues/3656,0,1,[]
616,274305794,3662,19542768,2019-04-29 09:41:54,2019-04-29 12:38:36,closed,Improved Path and Bounds datetime handling,Supersedes https://github.com/pyviz/holoviews/pull/3640,0,6,['type: bug']
617,274084344,3659,19542768,2019-04-27 05:31:21,2019-04-28 08:24:53,closed,ensure underlying xarray dataset remain consistent with wrapping hv.Dataset,"holoviews `Dataset.select` uses `XArray`'s underlying `sel` method but this method
drops (squeezes) dimension of length 1. The use of `xarray.assign_coords` to restore the dropped
dimensions leaves the `xarray.Dataset` inconsistent with the wrapping` hv.Dataset`.

We use `xarray.expand_dims` to ensure consistency. 

You can see the problem with the following:
```
import numpy as np
import holoviews as hv
import xarray as xr
hv.extension('bokeh')

d = np.random.randn(3, 8)
X = xr.DataArray(
    d,  name='stuff', dims=['chain', 'value'], coords=dict(chain=range(d.shape[0]), value=range(d.shape[1])))
ds = hv.Dataset(X)
chain0 = ds.select(chain=0)
```
Although the XArray dataset dimensions have been restored:
`chain0.data.dims == dict(chain=1,value=8)`,
the underlying data array has still lost a dimension: `chain0.data.stuff.dims == ('value',), chain0.data.stuff.shape == (8,)`.

Making the following fail with ""ValueError: 'chain' is not in list"" (and to.curve, to.bars etc..)
```
chain0.to.table()
```
This pull request fixes this problem by simply using `xarray.expand_dims` instead
of `xarray.assign_coords`.
",1,2,[]
618,274071336,3658,19542768,2019-04-27 01:01:00,2019-04-28 08:25:49,closed,add dimensioned streams to DynamicMap __mul__ clone,"Adds any dimensioned streams to DynamicMap clone operation when overlay '*' operator is
invoked.

Without this, the operation converts a bounded DynamicMap (and therefore displayable) to an
unbounded one (and therefore fails to render).",1,1,[]
619,273575488,3653,19542768,2019-04-25 15:28:52,2019-10-02 17:10:35,closed,Using bokeh's Arrow to draw VectorField,"I realized I never made a PR. Addresses #3485.

This is only a first draft, I'm putting this here for future reference. Needs some tidying up in terms of styling options.",2,1,"['status: WIP', 'type: enhancement']"
620,273363619,3652,19542768,2019-04-25 03:18:35,2019-04-25 11:17:33,closed,One _box_stats function to use,"Part 1 of https://github.com/pyviz/holoviews/issues/3627

Not sure if I need to put it in utils since matplotlib seems to just use the built in boxwhisker/violin?

replicates https://holoviews.org/reference/elements/bokeh/BoxWhisker.html and https://holoviews.org/reference/elements/bokeh/Violin.html (excluding the randomness)
![image](https://user-images.githubusercontent.com/15331990/56707597-64167400-66ce-11e9-9de1-75706534906c.png)
![image](https://user-images.githubusercontent.com/15331990/56707603-6973be80-66ce-11e9-901e-f5c9807b1ece.png)

",1,1,[]
621,272814757,3648,19542768,2019-04-23 16:58:08,2019-04-26 10:10:20,closed,De-duplicating stream contents by value,"If you change [this warning in streams.py](https://github.com/pyviz/holoviews/blob/master/holoviews/streams.py#L143) into a print (e.g `print('Parameter value clashes %s' % clashes)`) you will see that the warning is supposed to be issued for this example:

![image](https://user-images.githubusercontent.com/890576/56600373-24f8fd80-65be-11e9-856f-5cf3a82b1f6b.png)

### Code example

```python
import holoviews as hv
import dask.dataframe as dd
from holoviews.operation.datashader import rasterize

hv.extension('bokeh')
```

```python
path = '../../datashader/examples/data/nyc_taxi_wide.parq'
df = dd.read_parquet(path).persist()

points = hv.Points(df, ['dropoff_x', 'dropoff_y'], ['dropoff_hour','pickup_hour'])
options = hv.opts.Image( data_aspect=1, responsive=True, logz=True,
                      tools=['hover'], colorbar=True)
rasterize(points).options(options)
```

On current master, that warning doesn't appear:

![image](https://user-images.githubusercontent.com/890576/56600566-9fc21880-65be-11e9-8a2a-a5aef22bfa77.png)

The fact the warning is swallowed is one problem and the fact that two sets of `height`, `width` and `scale` are being issued on initialization might be another. That said, the height, width and scale values being sent are consistent duplicates. This PR now only issues a clash warning if the keys clash *and* the values are different. Although we should also avoid sending duplicate stream contents, I think such a change makes sense regardless.
",8,4,[]
622,272373714,3644,19542768,2019-04-22 13:28:28,2019-04-22 15:07:33,closed,Plotly 3.8 support,"Closes https://github.com/pyviz/holoviews/issues/3643

Two changes:
 - Change `plotly.offline.offline.utils` to `plotly.utils `
 - Only add legend options to traces that support them.  Plotly.js cleaned up the schema a bit to remove these entries from traces that don't use them, which resulted in some validation errors here.

These changes are backward compatible with plotly.py <3.8 so no need to change version constraints.",2,2,[]
623,272037490,3640,19542768,2019-04-19 16:30:01,2019-04-29 10:05:49,closed,Allow nonnumeric tuples in Bounds,"Requires #3639 

The matplotlib backend still struggles (requiring floats), but the bokeh backend can now draw `Bounds` elements with datetimes or categorical axes too.",3,1,[]
624,272036033,3639,19542768,2019-04-19 16:23:04,2019-04-29 10:15:44,closed,Fix missing data coercion for multipaths,"In some cases, when the dict interface has to convert e.g. an ndarray to a dict, this was not reflected in the data accessed by the element, leading to the interface failing to understand the data at a later point. The coercion is now explicit for all sub data types.

Required for #3640",4,2,[]
625,271850806,3636,19542768,2019-04-18 22:06:41,2019-10-31 13:12:10,closed,HexTiles aggregator with multiple input vdims,"When exploring spatial data I often find myself regionalizing them before looking for e.g. temporal relationships, but currently HexTiles only permit aggregating column by column. In order to quickly look for regionally aggregated relationships, one would have to do an intermediate step of calculating that relationship after the binning into hex tiles, but before the final aggregation.

This is more of a draft, relying on pandas for the grouping, but generalizing shouldn't be a problem. I also wanted to leave the `.aggregate` method of individual elements/data interfaces alone because that would move it away from how the term is used by pandas and xarray.

Let me know what you think.

![Screen Shot 2019-04-18 at 5 50 43 PM](https://user-images.githubusercontent.com/38992106/56394087-38921600-6204-11e9-9fbd-dd00b44448c3.png)
",13,1,"['status: WIP', 'type: enhancement']"
626,270506405,3629,19542768,2019-04-15 13:01:09,2019-04-15 13:17:42,closed,Suppress bokeh warnings,Fixes #3628 ,0,1,[]
627,270007742,3621,19542768,2019-04-12 13:16:08,2019-04-26 16:50:25,closed,Ensure that bokeh plot refresh has the Document lock,"Currently it is possible to get into situation where HoloViews plot classes modify the models without having the Document lock, leading to errors like this:

>holoviews.core.options.AbbreviatedException: RuntimeError: _pending_writes should be non-None when we have a document lock, and we should have the lock when the document changes",0,2,"['type: bug', 'tag: backend: bokeh']"
628,269127812,3616,19542768,2019-04-10 11:50:05,2019-04-10 17:55:24,closed,Add support for passing in parameter instances as streams,"Makes it possible to pass in a Parameter instance as a stream, which will internally be converted to a Params stream. Also adds some validation to ensure the same parameter is not subscribed to multiple times.

- [x] Adds tests",4,2,['type: enhancement']
629,268690880,3612,19542768,2019-04-09 11:09:35,2019-04-28 17:54:03,closed,Allow ability to define style cycles for Draw tools ,"This PR allows adding style cycles to the PolyDraw stream (but this could be expanded to the other draw streams). As an example here we cycle over the fill_color and line_width of the drawn polygons:

```python
poly = hv.Polygons([[(2, 2), (5, 8), (8, 2)]])

poly_stream = streams.PolyDraw(source=poly, drag=True, show_vertices=True,
                               style_cycles={'fill_color': ['red', 'green', 'blue'],
                                             'line_width': [3, 5, 10]})

poly
```

![style_cycles](https://user-images.githubusercontent.com/1550771/55795698-4f2bc500-5ac0-11e9-9d4a-749db73b47ec.gif)

- [x] Fixes https://github.com/pyviz/holoviews/issues/2694
- [x] Expand to BoxEdit and FreehandDraw tools
- [x] Add example in documentation",9,5,['type: enhancement']
630,267130283,3602,19542768,2019-04-03 16:50:09,2019-04-03 17:08:31,closed,Documented Glasbey colormaps,,2,1,[]
631,267085444,3601,19542768,2019-04-03 14:55:31,2019-04-03 15:04:29,closed,Added new named maps from colorcet2,,1,1,[]
632,266975217,3599,19542768,2019-04-03 10:02:36,2019-04-03 12:03:38,closed,Fix links to pull requests in CHANGELOG for 1.12.0,,1,1,[]
633,266889924,3596,19542768,2019-04-03 04:37:03,2019-04-03 05:47:31,closed,Ensure that apply works on HoloMaps,,0,1,[]
634,266886543,3595,19542768,2019-04-03 04:13:17,2019-04-03 04:48:28,closed,CHANGELOG entry for version 1.12.0,"
- [ ] Get feedback and make appropriate fixes/changes.
- [ ] Update releases.rst",0,7,[]
635,266709220,3594,19542768,2019-04-02 15:56:19,2019-04-02 20:57:15,closed,Ensure CDSCallback also handles patch events on source,,0,3,[]
636,266472755,3593,19542768,2019-04-02 03:18:18,2019-04-29 11:18:51,closed,Remove hardcoding of lightgray fill color to box and violin,"Setting it to Cycle() now makes overlaying color cycle as expected
![image](https://user-images.githubusercontent.com/15331990/55373733-fa35f080-54ba-11e9-994a-d328c1300078.png)

Reverses https://github.com/pyviz/holoviews/pull/2975, but the cycling of these color is redundant of the x-axis 
![image](https://user-images.githubusercontent.com/15331990/55373890-80eacd80-54bb-11e9-9504-d9caa7e2a82a.png)


",2,1,[]
637,265971233,3591,19542768,2019-03-30 21:57:58,2019-03-31 13:06:14,closed,Updated tests after changes in param formatting,"This PR updates tests to match the changed formatting in the latest param dev release. While it fixes the test errors the param change also revealed the fact that the tests seem to have suppressed warnings entirely in the past, which is no longer the case now. We should work on either fixing the warning or suppress them where needed but that can happen in a subsequent PR.",0,2,[]
638,265970660,3590,19542768,2019-03-30 21:46:50,2019-03-31 13:46:11,closed,Colorscale/colorbar fixes for Plotly backend,"This PR includes various fixes related to colorscale/colorbar handling for the plotly backend

Commit summary:
 - 8eb78b0: This addresses #3414 by limiting the length of colorscales passed to plotly.js to a maximum of 255.  Longer colorscales are subsampled.  Plotly.js performs its own colorscale interpolation so I don't foresee this causing visual artifacts for any reasonably smooth colorscale.
```python
import numpy as np
import holoviews as hv
from holoviews import dim
from holoviews import opts
hv.extension('plotly')

surface = hv.Surface(np.sin(np.linspace(0,100*np.pi*2,10000)).reshape(100,100))
surface.opts(cmap='fire', height=500, width=500, colorbar=True)
```
![newplot-1](https://user-images.githubusercontent.com/15064365/55282012-295d2e00-5312-11e9-9e45-82ab80fd9ff1.png)

 - 1ffdef1: Fix for the case where a named colorscale is known only to plotly.py.  Previously this resulted in a malformed colorscale.

```python
surface = hv.Surface(np.sin(np.linspace(0,100*np.pi*2,10000)).reshape(100,100))
surface.opts(cmap='Picnic', height=500, width=500, colorbar=True)
```
![newplot-2](https://user-images.githubusercontent.com/15064365/55282023-5ad5f980-5312-11e9-86d0-e02d86fc0268.png)

 - 9cc745b:  Fixes `colorbar` and `edges_color` handling.  Both of these options are applied to separate traces (separate from the main `mesh3d` trace) which were being dropped.  With these changes, an `Element` may be represented by a series of traces instead of only 1.

```python
y,x = np.mgrid[-5:5, -5:5] * 0.1
heights = np.sin(x**2+y**2)
trisurface = hv.TriSurface((x.flat,y.flat,heights.flat))

trisurface.opts(height=500, width=500, cmap='plasma', colorbar=True, edges_color='cyan')
```
![newplot-3](https://user-images.githubusercontent.com/15064365/55282037-ac7e8400-5312-11e9-9c3e-0420cf178a2c.png)

 - `016a137`: Add/fix colorbar/colorscale handling for the plotly bivariate element.  Previously, the `cmap` and `colorbar` args were ignored.
```python
normal = np.random.randn(1000, 2)
biv = hv.Bivariate(normal)
biv.opts(filled=True, cmap='cividis', showlines=True, colorbar=True)
```
![newplot-4](https://user-images.githubusercontent.com/15064365/55282049-dc2d8c00-5312-11e9-926c-ba29e6dbcd70.png)

```python
normal = np.random.randn(1000, 2)
biv = hv.Bivariate(normal)
biv.opts(filled=False, cmap='plasma', showlines=True, colorbar=True)
```
![newplot-5](https://user-images.githubusercontent.com/15064365/55282060-0a12d080-5313-11e9-83a2-9441be6712b9.png)
 - I tried out the colorbar/colorscale handling of other `Elements` and the rest of them worked fine.
 - 8fb44d8:  Adds a few additional colorbar test cases",7,5,['tag: component: plotting']
639,265162922,3586,19542768,2019-03-28 02:18:15,2019-03-28 21:00:31,closed,Unpin IPython and disable jedi completion by default,"Not supporting newer versions of IPython is really not feasible in the long run, so I've made the holoviews extension disable jedi tab-completion in IPython, if someone really wants jedi completion they can toggle it with ``hv.extension(allow_jedi_completion=True)``.

Fixes https://github.com/pyviz/holoviews/issues/3540

@jlstevens @jbednar Thoughts on this appreciated, users were getting offered old versions of holoviews by conda because conda prefers to install an old version of a new package rather than downgrade the version of an existing package.
",6,2,[]
640,265157563,3585,19542768,2019-03-28 01:42:06,2019-03-28 03:10:11,closed,Ensure that explicit tick lookup of floats works in JS,Fixes https://github.com/pyviz/holoviews/issues/3583,0,1,['status: ready']
641,265155659,3584,19542768,2019-03-28 01:28:34,2019-03-28 01:56:29,closed, Ensure Stream._on_trigger is called before event,"Ensures that the streams relying on trigger counts for memoization are incremented before the first event.

Fixes https://github.com/pyviz/holoviews/issues/3579",0,2,[]
642,264491375,3581,19542768,2019-03-26 12:09:19,2019-04-22 15:47:16,closed,add a environment variable HOLOVIEWS_INLINE_JS,Like @philippjfr suggested on chat.,5,1,[]
643,264345334,3580,19542768,2019-03-26 01:47:49,2019-03-26 18:20:37,closed,Ensure Dimension clone copies all parameters,"The ``onlychanged=True`` check in param doesn't appear to be working at least in some cases. So using ``redim`` in certain cases drops Dimension parameters on clone. It's also not clear to me why ``onlychanged`` was there in the first place, there shouldn't be any harm in passing all of them along.

Fixes #3561 
",1,1,['type: bug']
644,264249220,3578,19542768,2019-03-25 19:01:36,2019-03-26 18:14:31,closed,Improved support for style mapping constant values,"Add support for style mapping constant values on an NdOverlay or in the dimensions of an element. This finally allows using style mapping to assign styles by NdOverlay value (addressing https://github.com/pyviz/holoviews/issues/3534) or by value dimension values, an example of that is the following:

```python
df = pd.DataFrame({
    'Time': np.tile(np.arange(100), 9),
    'y': np.random.randn(900).cumsum(axis=0),
    'gridsize': np.repeat([0, 1, 2, 0, 1, 2, 0, 1, 2], 100),
    'turbulence': np.repeat([0, 0, 0, 1, 1, 1, 2, 2, 2], 100)})

df['label'] = ['Gridsize: %s, Turbulence: %s' % (r.gridsize, r.turbulence) for i, r in df.iterrows()]

curves = hv.Dataset(df, ['Time']).to(hv.Curve, 'Time', ['y', 'gridsize','turbulence'], 'label')
curves.overlay('label').opts(
    opts.Curve(color=dim('gridsize').categorize({0: 'red', 1: 'blue', 2: 'green'}),
               line_dash=dim('turbulence').categorize({0: 'solid', 1: 'dashed', 2: 'dotdash'})),
    opts.NdOverlay(width=900, legend_position='right'))
```

![Screen Shot 2019-03-25 at 7 00 20 PM](https://user-images.githubusercontent.com/1550771/54946572-42d83180-4f30-11e9-8a2f-f3109d4d1c7a.png)

Here we mapped the gridsize dimension to color and the turbulence dimension to the line_dash style.

- [x] Add tests
- [x] Add matplotlib support",5,5,"['tag: component: plotting', 'type: enhancement']"
645,263875307,3575,19542768,2019-03-24 02:16:18,2019-03-25 01:59:48,closed,Fixes when specifying both data_aspect and responsive modes,"Fixes a number of bugs in handling of aspect and responsive modes:

* Ensures that if data_aspect zoom tools are always locked
* Fixes inverted aspect_ratio when responsive=True
* Ensure that aspect is applied even if data_aspect is set",1,3,['type: bug']
646,263862819,3574,19542768,2019-03-23 21:30:01,2019-03-26 18:17:02,closed,Switch to HTML mime bundle,"Fixes https://github.com/pyviz/holoviews/issues/3103
Fixes https://github.com/pyviz/holoviews/issues/3353
Fixes https://github.com/nteract/nteract/issues/3370
",3,5,['tag: notebook']
647,263465995,3572,19542768,2019-03-22 02:31:06,2019-03-22 12:35:33,closed,Fix handling of bokeh colorbar_opts,"Fixes #3537 

- [x] Adds test",0,1,[]
648,263462360,3571,19542768,2019-03-22 02:05:28,2019-03-22 14:17:42,closed,Ensure that defaults set color not fill_color,Fixes https://github.com/pyviz/holoviews/issues/3559,0,1,['status: ready']
649,262860987,3566,19542768,2019-03-20 13:20:39,2019-03-22 01:56:09,closed,Added roadmap,"Draft roadmap capturing our core-developer discussion.  When merged, fixes https://github.com/pyviz/holoviews/issues/3480.",0,1,[]
650,262534115,3563,19542768,2019-03-19 16:27:15,2019-03-22 17:11:30,closed,fixed user guide link,"I was confused that the user guide link did not direct to the actual user guide page. It was actually intended to link the installing and configuring guide. Thus, I changed the wording from 'user guide' to 'installing and configuring guide'. In addition, I added a sentence directing people to the 'Getting started' link. I would like to go to the 'Getting started' page from the home page. 

",2,3,[]
651,261818282,3560,19542768,2019-03-17 04:41:46,2019-03-19 18:11:16,closed,Safe import to avoid tornado issue with nbconvert,Right now you can't load the holoviews extension with latest tornado due to this issue https://github.com/jupyter/nbconvert/issues/894. This PR uses a safer import till the new nbconvert version comes out with a fix.,1,1,[]
652,260856855,3556,19542768,2019-03-13 17:02:54,2019-03-22 01:56:52,closed,add radius for node options for bokeh,"Zooming in causes the node sizes to re-scale, thus defeating the purpose of the zoom. To allow node size to *increase* with zoom-in, Bokeh 
needs the `radius` of the `Circle` set. 
This is discussed here: https://stackoverflow.com/questions/41168347/python-bokeh-google-maps-dynamic-glyph-size-based-on-zoom",1,1,['tag: backend: bokeh']
653,260464573,3554,19542768,2019-03-12 17:29:27,2019-03-22 18:50:05,closed,Allow using apply method with method strings,"Implements the suggestion outlined in https://github.com/pyviz/datashader/pull/723. This allows the apply method to accept strings which refer to methods on the object, e.g.:

![color_picker](https://user-images.githubusercontent.com/1550771/54089760-5ac28980-4364-11e9-9371-f7dfe1381dcb.gif)

![sample_apply](https://user-images.githubusercontent.com/1550771/54089875-ba6d6480-4365-11e9-806d-b209c72a119e.gif)

After some discussion @jlstevens and I have decided to make ``.apply`` a namespace accessor with the following convenience methods:

* ``.apply.opts``
* ``.apply.select``
* ``.apply.reduce``
* ``.apply.aggregate``

This also means we can deprecate ``HoloMap.reduce`` and ``HoloMap.sample`` which are outliers in our API (which are inherited but are not actually usable on DynamicMap) and can be achieved by chaining apply and collapse methods.",3,9,"['type: feature', 'tag: API']"
654,260067129,3553,19542768,2019-03-11 17:35:00,2019-03-22 01:58:13,closed,Website: fix links in footer,,3,1,[]
655,259778970,3550,19542768,2019-03-10 18:26:47,2019-03-15 17:24:59,closed,Fix notebook flakes,"Following on from #2690 (#2439, #2091), while testing nbsmoke again recently I found some flakes in the hv examples directory.

nbsmoke flake checking is not really well tested yet, so each change should probably be checked manually. I looked at the json in each case (briefly), but I didn't open the notebooks or try to run them (laptop can't do it...).

I didn't know what to do with `examples/user_guide/Deploying_Bokeh_Apps.ipynb` so didn't modify it (see end of output, below).

Example of running nbsmoke and its output (after I'd already fixed the flakes it found, except for `Deploying_Bokeh_Apps.ipynb` as mentioned above):

```
(nbsdev) D:\code\ioam\holoviews2>pytest --nbsmoke-lint examples
=============================================================== test session starts ================================================================
platform win32 -- Python 3.6.8, pytest-4.3.0, py-1.8.0, pluggy-0.9.0
rootdir: D:\code\ioam\holoviews2, inifile:
plugins: nbsmoke-0.2.7.post3+gc839325.dirty
collected 263 items

examples\gallery\demos\bokeh\area_chart.ipynb .                                                                                               [  0%]
examples\gallery\demos\bokeh\autompg_histogram.ipynb .                                                                                        [  0%]
examples\gallery\demos\bokeh\autompg_violins.ipynb .                                                                                          [  1%]
examples\gallery\demos\bokeh\bachelors_degrees_by_gender.ipynb .                                                                              [  1%]
examples\gallery\demos\bokeh\bars_economic.ipynb .                                                                                            [  1%]
examples\gallery\demos\bokeh\box_draw_roi_editor.ipynb .                                                                                      [  2%]
examples\gallery\demos\bokeh\boxplot_chart.ipynb .                                                                                            [  2%]
examples\gallery\demos\bokeh\choropleth_data_link.ipynb .                                                                                     [  3%]
examples\gallery\demos\bokeh\directed_airline_routes.ipynb .                                                                                  [  3%]
examples\gallery\demos\bokeh\dot_example.ipynb .                                                                                              [  3%]
examples\gallery\demos\bokeh\dragon_curve.ipynb .                                                                                             [  4%]
examples\gallery\demos\bokeh\dropdown_economic.ipynb .                                                                                        [  4%]
examples\gallery\demos\bokeh\emoji_tsne.ipynb .                                                                                               [  4%]
examples\gallery\demos\bokeh\energy_sankey.ipynb .                                                                                            [  5%]
examples\gallery\demos\bokeh\hextile_movie_ratings.ipynb .                                                                                    [  5%]
examples\gallery\demos\bokeh\histogram_example.ipynb .                                                                                        [  6%]
examples\gallery\demos\bokeh\image_range_tool.ipynb .                                                                                         [  6%]
examples\gallery\demos\bokeh\iris_density_grid.ipynb .                                                                                        [  6%]
examples\gallery\demos\bokeh\iris_example.ipynb .                                                                                             [  7%]
examples\gallery\demos\bokeh\iris_grouped_grid.ipynb .                                                                                        [  7%]
examples\gallery\demos\bokeh\iris_splom_example.ipynb .                                                                                       [  7%]
examples\gallery\demos\bokeh\irregular_quadmesh.ipynb .                                                                                       [  8%]
examples\gallery\demos\bokeh\legend_example.ipynb .                                                                                           [  8%]
examples\gallery\demos\bokeh\lesmis_example.ipynb .                                                                                           [  9%]
examples\gallery\demos\bokeh\lorenz_attractor_example.ipynb .                                                                                 [  9%]
examples\gallery\demos\bokeh\mandelbrot_section.ipynb .                                                                                       [  9%]
examples\gallery\demos\bokeh\measles_example.ipynb .                                                                                          [ 10%]
examples\gallery\demos\bokeh\network_graph.ipynb .                                                                                            [ 10%]
examples\gallery\demos\bokeh\nyc_airport_connections.ipynb .                                                                                  [ 11%]
examples\gallery\demos\bokeh\nyc_radial_heatmap.ipynb .                                                                                       [ 11%]
examples\gallery\demos\bokeh\point_draw_triangulate.ipynb .                                                                                   [ 11%]
examples\gallery\demos\bokeh\quiver_demo.ipynb .                                                                                              [ 12%]
examples\gallery\demos\bokeh\route_chord.ipynb .                                                                                              [ 12%]
examples\gallery\demos\bokeh\scatter_economic.ipynb .                                                                                         [ 12%]
examples\gallery\demos\bokeh\square_limit.ipynb .                                                                                             [ 13%]
examples\gallery\demos\bokeh\step_chart.ipynb .                                                                                               [ 13%]
examples\gallery\demos\bokeh\stocks_example.ipynb .                                                                                           [ 14%]
examples\gallery\demos\bokeh\texas_choropleth_example.ipynb .                                                                                 [ 14%]
examples\gallery\demos\bokeh\timeseries_range_tool.ipynb .                                                                                    [ 14%]
examples\gallery\demos\bokeh\topographic_hillshading.ipynb .                                                                                  [ 15%]
examples\gallery\demos\bokeh\us_unemployment.ipynb .                                                                                          [ 15%]
examples\gallery\demos\bokeh\verhulst_mandelbrot.ipynb .                                                                                      [ 15%]
examples\gallery\demos\matplotlib\area_chart.ipynb .                                                                                          [ 16%]
examples\gallery\demos\matplotlib\autompg_histogram.ipynb .                                                                                   [ 16%]
examples\gallery\demos\matplotlib\autompg_violins.ipynb .                                                                                     [ 17%]
examples\gallery\demos\matplotlib\bachelors_degrees_by_gender.ipynb .                                                                         [ 17%]
examples\gallery\demos\matplotlib\bars_economic.ipynb .                                                                                       [ 17%]
examples\gallery\demos\matplotlib\boxplot_chart.ipynb .                                                                                       [ 18%]
examples\gallery\demos\matplotlib\directed_airline_routes.ipynb .                                                                             [ 18%]
examples\gallery\demos\matplotlib\dragon_curve.ipynb .                                                                                        [ 19%]
examples\gallery\demos\matplotlib\dropdown_economic.ipynb .                                                                                   [ 19%]
examples\gallery\demos\matplotlib\energy_sankey.ipynb .                                                                                       [ 19%]
examples\gallery\demos\matplotlib\hextile_movie_ratings.ipynb .                                                                               [ 20%]
examples\gallery\demos\matplotlib\histogram_example.ipynb .                                                                                   [ 20%]
examples\gallery\demos\matplotlib\iris_density_grid.ipynb .                                                                                   [ 20%]
examples\gallery\demos\matplotlib\iris_example.ipynb .                                                                                        [ 21%]
examples\gallery\demos\matplotlib\iris_grouped_grid.ipynb .                                                                                   [ 21%]
examples\gallery\demos\matplotlib\iris_splom_example.ipynb .                                                                                  [ 22%]
examples\gallery\demos\matplotlib\irregular_quadmesh.ipynb .                                                                                  [ 22%]
examples\gallery\demos\matplotlib\legend_example.ipynb .                                                                                      [ 22%]
examples\gallery\demos\matplotlib\lorenz_attractor_example.ipynb .                                                                            [ 23%]
examples\gallery\demos\matplotlib\mandelbrot_section.ipynb .                                                                                  [ 23%]
examples\gallery\demos\matplotlib\measles_example.ipynb .                                                                                     [ 23%]
examples\gallery\demos\matplotlib\network_graph.ipynb .                                                                                       [ 24%]
examples\gallery\demos\matplotlib\nyc_airport_connections.ipynb .                                                                             [ 24%]
examples\gallery\demos\matplotlib\nyc_radial_heatmap.ipynb .                                                                                  [ 25%]
examples\gallery\demos\matplotlib\polar_scatter_demo.ipynb .                                                                                  [ 25%]
examples\gallery\demos\matplotlib\quiver_demo.ipynb .                                                                                         [ 25%]
examples\gallery\demos\matplotlib\route_chord.ipynb .                                                                                         [ 26%]
examples\gallery\demos\matplotlib\scatter_economic.ipynb .                                                                                    [ 26%]
examples\gallery\demos\matplotlib\square_limit.ipynb .                                                                                        [ 26%]
examples\gallery\demos\matplotlib\step_chart.ipynb .                                                                                          [ 27%]
examples\gallery\demos\matplotlib\stocks_example.ipynb .                                                                                      [ 27%]
examples\gallery\demos\matplotlib\surface_3d.ipynb .                                                                                          [ 28%]
examples\gallery\demos\matplotlib\texas_choropleth_example.ipynb .                                                                            [ 28%]
examples\gallery\demos\matplotlib\topographic_hillshading.ipynb .                                                                             [ 28%]
examples\gallery\demos\matplotlib\trisurf3d_demo.ipynb .                                                                                      [ 29%]
examples\gallery\demos\matplotlib\us_unemployment.ipynb .                                                                                     [ 29%]
examples\gallery\demos\matplotlib\verhulst_mandelbrot.ipynb .                                                                                 [ 30%]
examples\gallery\demos\plotly\surface_3d.ipynb .                                                                                              [ 30%]
examples\gallery\demos\plotly\trisurf3d_demo.ipynb .                                                                                          [ 30%]
examples\getting_started\1-Introduction.ipynb .                                                                                               [ 31%]
examples\getting_started\2-Customization.ipynb .                                                                                              [ 31%]
examples\getting_started\3-Tabular_Datasets.ipynb .                                                                                           [ 31%]
examples\getting_started\4-Gridded_Datasets.ipynb .                                                                                           [ 32%]
examples\getting_started\5-Live_Data.ipynb .                                                                                                  [ 32%]
examples\reference\containers\bokeh\DynamicMap.ipynb .                                                                                        [ 33%]
examples\reference\containers\bokeh\GridSpace.ipynb .                                                                                         [ 33%]
examples\reference\containers\bokeh\HoloMap.ipynb .                                                                                           [ 33%]
examples\reference\containers\bokeh\Layout.ipynb .                                                                                            [ 34%]
examples\reference\containers\bokeh\NdLayout.ipynb .                                                                                          [ 34%]
examples\reference\containers\bokeh\NdOverlay.ipynb .                                                                                         [ 34%]
examples\reference\containers\bokeh\Overlay.ipynb .                                                                                           [ 35%]
examples\reference\containers\matplotlib\DynamicMap.ipynb .                                                                                   [ 35%]
examples\reference\containers\matplotlib\GridSpace.ipynb .                                                                                    [ 36%]
examples\reference\containers\matplotlib\HoloMap.ipynb .                                                                                      [ 36%]
examples\reference\containers\matplotlib\Layout.ipynb .                                                                                       [ 36%]
examples\reference\containers\matplotlib\NdLayout.ipynb .                                                                                     [ 37%]
examples\reference\containers\matplotlib\NdOverlay.ipynb .                                                                                    [ 37%]
examples\reference\containers\matplotlib\Overlay.ipynb .                                                                                      [ 38%]
examples\reference\containers\plotly\DynamicMap.ipynb .                                                                                       [ 38%]
examples\reference\containers\plotly\GridSpace.ipynb .                                                                                        [ 38%]
examples\reference\containers\plotly\HoloMap.ipynb .                                                                                          [ 39%]
examples\reference\containers\plotly\Layout.ipynb .                                                                                           [ 39%]
examples\reference\containers\plotly\NdLayout.ipynb .                                                                                         [ 39%]
examples\reference\containers\plotly\NdOverlay.ipynb .                                                                                        [ 40%]
examples\reference\containers\plotly\Overlay.ipynb .                                                                                          [ 40%]
examples\reference\elements\bokeh\Area.ipynb .                                                                                                [ 41%]
examples\reference\elements\bokeh\Arrow.ipynb .                                                                                               [ 41%]
examples\reference\elements\bokeh\Bars.ipynb .                                                                                                [ 41%]
examples\reference\elements\bokeh\Bivariate.ipynb .                                                                                           [ 42%]
examples\reference\elements\bokeh\Bounds.ipynb .                                                                                              [ 42%]
examples\reference\elements\bokeh\Box.ipynb .                                                                                                 [ 42%]
examples\reference\elements\bokeh\BoxWhisker.ipynb .                                                                                          [ 43%]
examples\reference\elements\bokeh\Chord.ipynb .                                                                                               [ 43%]
examples\reference\elements\bokeh\Contours.ipynb .                                                                                            [ 44%]
examples\reference\elements\bokeh\Curve.ipynb .                                                                                               [ 44%]
examples\reference\elements\bokeh\Distribution.ipynb .                                                                                        [ 44%]
examples\reference\elements\bokeh\Div.ipynb .                                                                                                 [ 45%]
examples\reference\elements\bokeh\Ellipse.ipynb .                                                                                             [ 45%]
examples\reference\elements\bokeh\ErrorBars.ipynb .                                                                                           [ 46%]
examples\reference\elements\bokeh\Graph.ipynb .                                                                                               [ 46%]
examples\reference\elements\bokeh\HLine.ipynb .                                                                                               [ 46%]
examples\reference\elements\bokeh\HSV.ipynb .                                                                                                 [ 47%]
examples\reference\elements\bokeh\HeatMap.ipynb .                                                                                             [ 47%]
examples\reference\elements\bokeh\HexTiles.ipynb .                                                                                            [ 47%]
examples\reference\elements\bokeh\Histogram.ipynb .                                                                                           [ 48%]
examples\reference\elements\bokeh\Image.ipynb .                                                                                               [ 48%]
examples\reference\elements\bokeh\ItemTable.ipynb .                                                                                           [ 49%]
examples\reference\elements\bokeh\Labels.ipynb .                                                                                              [ 49%]
examples\reference\elements\bokeh\Path.ipynb .                                                                                                [ 49%]
examples\reference\elements\bokeh\Points.ipynb .                                                                                              [ 50%]
examples\reference\elements\bokeh\Polygons.ipynb .                                                                                            [ 50%]
examples\reference\elements\bokeh\QuadMesh.ipynb .                                                                                            [ 50%]
examples\reference\elements\bokeh\RGB.ipynb .                                                                                                 [ 51%]
examples\reference\elements\bokeh\RadialHeatMap.ipynb .                                                                                       [ 51%]
examples\reference\elements\bokeh\Raster.ipynb .                                                                                              [ 52%]
examples\reference\elements\bokeh\Sankey.ipynb .                                                                                              [ 52%]
examples\reference\elements\bokeh\Scatter.ipynb .                                                                                             [ 52%]
examples\reference\elements\bokeh\Spikes.ipynb .                                                                                              [ 53%]
examples\reference\elements\bokeh\Spline.ipynb .                                                                                              [ 53%]
examples\reference\elements\bokeh\Spread.ipynb .                                                                                              [ 53%]
examples\reference\elements\bokeh\Table.ipynb .                                                                                               [ 54%]
examples\reference\elements\bokeh\Text.ipynb .                                                                                                [ 54%]
examples\reference\elements\bokeh\Tiles.ipynb .                                                                                               [ 55%]
examples\reference\elements\bokeh\TriMesh.ipynb .                                                                                             [ 55%]
examples\reference\elements\bokeh\VLine.ipynb .                                                                                               [ 55%]
examples\reference\elements\bokeh\VectorField.ipynb .                                                                                         [ 56%]
examples\reference\elements\bokeh\Violin.ipynb .                                                                                              [ 56%]
examples\reference\elements\matplotlib\Area.ipynb .                                                                                           [ 57%]
examples\reference\elements\matplotlib\Arrow.ipynb .                                                                                          [ 57%]
examples\reference\elements\matplotlib\Bars.ipynb .                                                                                           [ 57%]
examples\reference\elements\matplotlib\Bivariate.ipynb .                                                                                      [ 58%]
examples\reference\elements\matplotlib\Bounds.ipynb .                                                                                         [ 58%]
examples\reference\elements\matplotlib\Box.ipynb .                                                                                            [ 58%]
examples\reference\elements\matplotlib\BoxWhisker.ipynb .                                                                                     [ 59%]
examples\reference\elements\matplotlib\Chord.ipynb .                                                                                          [ 59%]
examples\reference\elements\matplotlib\Contours.ipynb .                                                                                       [ 60%]
examples\reference\elements\matplotlib\Curve.ipynb .                                                                                          [ 60%]
examples\reference\elements\matplotlib\Distribution.ipynb .                                                                                   [ 60%]
examples\reference\elements\matplotlib\Ellipse.ipynb .                                                                                        [ 61%]
examples\reference\elements\matplotlib\ErrorBars.ipynb .                                                                                      [ 61%]
examples\reference\elements\matplotlib\Graph.ipynb .                                                                                          [ 61%]
examples\reference\elements\matplotlib\HLine.ipynb .                                                                                          [ 62%]
examples\reference\elements\matplotlib\HSV.ipynb .                                                                                            [ 62%]
examples\reference\elements\matplotlib\HeatMap.ipynb .                                                                                        [ 63%]
examples\reference\elements\matplotlib\HexTiles.ipynb .                                                                                       [ 63%]
examples\reference\elements\matplotlib\Histogram.ipynb .                                                                                      [ 63%]
examples\reference\elements\matplotlib\Image.ipynb .                                                                                          [ 64%]
examples\reference\elements\matplotlib\ItemTable.ipynb .                                                                                      [ 64%]
examples\reference\elements\matplotlib\Labels.ipynb .                                                                                         [ 65%]
examples\reference\elements\matplotlib\Path.ipynb .                                                                                           [ 65%]
examples\reference\elements\matplotlib\Path3D.ipynb .                                                                                         [ 65%]
examples\reference\elements\matplotlib\Points.ipynb .                                                                                         [ 66%]
examples\reference\elements\matplotlib\Polygons.ipynb .                                                                                       [ 66%]
examples\reference\elements\matplotlib\QuadMesh.ipynb .                                                                                       [ 66%]
examples\reference\elements\matplotlib\RGB.ipynb .                                                                                            [ 67%]
examples\reference\elements\matplotlib\RadialHeatMap.ipynb .                                                                                  [ 67%]
examples\reference\elements\matplotlib\Raster.ipynb .                                                                                         [ 68%]
examples\reference\elements\matplotlib\Sankey.ipynb .                                                                                         [ 68%]
examples\reference\elements\matplotlib\Scatter.ipynb .                                                                                        [ 68%]
examples\reference\elements\matplotlib\Scatter3D.ipynb .                                                                                      [ 69%]
examples\reference\elements\matplotlib\Spikes.ipynb .                                                                                         [ 69%]
examples\reference\elements\matplotlib\Spline.ipynb .                                                                                         [ 69%]
examples\reference\elements\matplotlib\Spread.ipynb .                                                                                         [ 70%]
examples\reference\elements\matplotlib\Surface.ipynb .                                                                                        [ 70%]
examples\reference\elements\matplotlib\Table.ipynb .                                                                                          [ 71%]
examples\reference\elements\matplotlib\Text.ipynb .                                                                                           [ 71%]
examples\reference\elements\matplotlib\TriMesh.ipynb .                                                                                        [ 71%]
examples\reference\elements\matplotlib\TriSurface.ipynb .                                                                                     [ 72%]
examples\reference\elements\matplotlib\VLine.ipynb .                                                                                          [ 72%]
examples\reference\elements\matplotlib\VectorField.ipynb .                                                                                    [ 73%]
examples\reference\elements\matplotlib\Violin.ipynb .                                                                                         [ 73%]
examples\reference\elements\plotly\Area.ipynb .                                                                                               [ 73%]
examples\reference\elements\plotly\BoxWhiskers.ipynb .                                                                                        [ 74%]
examples\reference\elements\plotly\Curve.ipynb .                                                                                              [ 74%]
examples\reference\elements\plotly\Distribution.ipynb .                                                                                       [ 74%]
examples\reference\elements\plotly\ErrorBars.ipynb .                                                                                          [ 75%]
examples\reference\elements\plotly\HeatMap.ipynb .                                                                                            [ 75%]
examples\reference\elements\plotly\Image.ipynb .                                                                                              [ 76%]
examples\reference\elements\plotly\ItemTable.ipynb .                                                                                          [ 76%]
examples\reference\elements\plotly\Path3D.ipynb .                                                                                             [ 76%]
examples\reference\elements\plotly\Points.ipynb .                                                                                             [ 77%]
examples\reference\elements\plotly\Raster.ipynb .                                                                                             [ 77%]
examples\reference\elements\plotly\Scatter.ipynb .                                                                                            [ 77%]
examples\reference\elements\plotly\Scatter3D.ipynb .                                                                                          [ 78%]
examples\reference\elements\plotly\Spread.ipynb .                                                                                             [ 78%]
examples\reference\elements\plotly\Surface.ipynb .                                                                                            [ 79%]
examples\reference\elements\plotly\Table.ipynb .                                                                                              [ 79%]
examples\reference\elements\plotly\TriSurface.ipynb .                                                                                         [ 79%]
examples\reference\elements\plotly\Violin.ipynb .                                                                                             [ 80%]
examples\reference\features\bokeh\table_hooks_example.ipynb .                                                                                 [ 80%]
examples\reference\streams\bokeh\Bounds.ipynb .                                                                                               [ 80%]
examples\reference\streams\bokeh\BoundsX.ipynb .                                                                                              [ 81%]
examples\reference\streams\bokeh\BoundsY.ipynb .                                                                                              [ 81%]
examples\reference\streams\bokeh\BoxEdit.ipynb .                                                                                              [ 82%]
examples\reference\streams\bokeh\FreehandDraw.ipynb .                                                                                         [ 82%]
examples\reference\streams\bokeh\PointDraw.ipynb .                                                                                            [ 82%]
examples\reference\streams\bokeh\PointerX.ipynb .                                                                                             [ 83%]
examples\reference\streams\bokeh\PointerXY.ipynb .                                                                                            [ 83%]
examples\reference\streams\bokeh\PolyDraw.ipynb .                                                                                             [ 84%]
examples\reference\streams\bokeh\PolyEdit.ipynb .                                                                                             [ 84%]
examples\reference\streams\bokeh\RangeXY.ipynb .                                                                                              [ 84%]
examples\reference\streams\bokeh\Selection1D.ipynb .                                                                                          [ 85%]
examples\reference\streams\bokeh\Selection1D_paired.ipynb .                                                                                   [ 85%]
examples\reference\streams\bokeh\Selection1D_points.ipynb .                                                                                   [ 85%]
examples\reference\streams\bokeh\Selection1D_tap.ipynb .                                                                                      [ 86%]
examples\reference\streams\bokeh\Tap.ipynb .                                                                                                  [ 86%]
examples\topics\geometry\lsystems.ipynb .                                                                                                     [ 87%]
examples\topics\geometry\square_limit.ipynb .                                                                                                 [ 87%]
examples\topics\simulation\boids.ipynb .                                                                                                      [ 87%]
examples\topics\simulation\hipster_dynamics.ipynb .                                                                                           [ 88%]
examples\topics\simulation\sri_model.ipynb .                                                                                                  [ 88%]
examples\user_guide\01-Annotating_Data.ipynb .                                                                                                [ 88%]
examples\user_guide\02-Composing_Elements.ipynb .                                                                                             [ 89%]
examples\user_guide\03-Applying_Customization.ipynb .                                                                                         [ 89%]
examples\user_guide\04-Style_Mapping.ipynb .                                                                                                  [ 90%]
examples\user_guide\05-Dimensioned_Containers.ipynb .                                                                                         [ 90%]
examples\user_guide\06-Building_Composite_Objects.ipynb .                                                                                     [ 90%]
examples\user_guide\07-Live_Data.ipynb .                                                                                                      [ 91%]
examples\user_guide\08-Tabular_Datasets.ipynb .                                                                                               [ 91%]
examples\user_guide\09-Gridded_Datasets.ipynb .                                                                                               [ 92%]
examples\user_guide\10-Indexing_and_Selecting_Data.ipynb .                                                                                    [ 92%]
examples\user_guide\11-Transforming_Elements.ipynb .                                                                                          [ 92%]
examples\user_guide\12-Responding_to_Events.ipynb .                                                                                           [ 93%]
examples\user_guide\13-Custom_Interactivity.ipynb .                                                                                           [ 93%]
examples\user_guide\14-Data_Pipelines.ipynb .                                                                                                 [ 93%]
examples\user_guide\15-Large_Data.ipynb .                                                                                                     [ 94%]
examples\user_guide\16-Streaming_Data.ipynb .                                                                                                 [ 94%]
examples\user_guide\17-Dashboards.ipynb .                                                                                                     [ 95%]
examples\user_guide\Colormaps.ipynb .                                                                                                         [ 95%]
examples\user_guide\Continuous_Coordinates.ipynb .                                                                                            [ 95%]
examples\user_guide\Customizing_Plots.ipynb .                                                                                                 [ 96%]
examples\user_guide\Deploying_Bokeh_Apps.ipynb F                                                                                              [ 96%]
examples\user_guide\Exporting_and_Archiving.ipynb .                                                                                           [ 96%]
examples\user_guide\Geometry_Data.ipynb .                                                                                                     [ 97%]
examples\user_guide\Installing_and_Configuring.ipynb .                                                                                        [ 97%]
examples\user_guide\Linking_Plots.ipynb .                                                                                                     [ 98%]
examples\user_guide\Network_Graphs.ipynb .                                                                                                    [ 98%]
examples\user_guide\Notebook_Magics.ipynb .                                                                                                   [ 98%]
examples\user_guide\Plots_and_Renderers.ipynb .                                                                                               [ 99%]
examples\user_guide\Plotting_with_Bokeh.ipynb .                                                                                               [ 99%]
examples\user_guide\Plotting_with_Matplotlib.ipynb .                                                                                          [100%]

===================================================================== FAILURES =====================================================================
_________________________________________________________________________  _________________________________________________________________________
D:\code\ioam\holoviews2\examples\user_guide\Deploying_Bokeh_Apps.ipynb
line 117 col 27: undefined name 'layout'
line 151 col 9: undefined name 'layout'
line 164 col 26: undefined name 'layout'
line 325 col 0: 'bokeh.io.curdoc' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
====================================================== 1 failed, 262 passed in 130.18 seconds ======================================================
```
",2,1,[]
656,259630336,3547,19542768,2019-03-08 22:44:39,2019-03-09 00:00:09,closed,Fix links in README (ioam -> pyviz),"URLs in README.md weren't updated when the repository moved from ioam to pyviz. Here, we rectify that.

Some of these links still worked because GitHub automatically redirects URLs when repos move. However, some were broken. For the others, it makes sense to update them anyway to reflect the new repo

- Fixes Travis badge status (unknown -> passing).
- Fixes link to Param's website.
- Changes git clone instruction to use pyviz/holoviews instead of ioam/holoviews.",2,1,[]
657,259220684,3546,19542768,2019-03-07 18:23:37,2019-03-07 19:18:38,closed,Fixes for dynamic Operation and tests,Fixes regression I introduced in https://github.com/pyviz/holoviews/pull/3474,0,1,[]
658,259177020,3545,19542768,2019-03-07 16:15:50,2019-03-07 17:02:54,closed,Unified setup.py and meta.yaml,"Temporarily pins dask to avoid regression in 1.1.3, which we will investigate separately.",1,1,['tag: packaging']
659,257447644,3536,19542768,2019-03-01 13:41:50,2019-03-02 01:43:37,closed,Fixed bokeh periodic callback,Unsubscribing from bokeh periodic callbacks changed a while ago but apparently we never made the update in our periodic utility.,0,1,"['type: bug', 'tag: backend: bokeh']"
660,257447411,3535,19542768,2019-03-01 13:41:07,2019-03-07 14:42:46,closed,Exposed option to set Sankey font size,Fixes https://github.com/pyviz/holoviews/issues/3531,1,1,[]
661,256752033,3532,19542768,2019-02-27 16:33:43,2019-10-02 13:32:44,closed,Segments,"A quick first draft (sufficient for my own use case, which is why I went ahead and put something together). In particular, I haven't yet thought about how to best implement a variable number of kdims in the bokeh backend which is less important to me at this point but which @philippjfr mentioned should be implemented.

Addresses #3498

![screen shot 2019-02-27 at 11 28 23 am](https://user-images.githubusercontent.com/38992106/53506103-49839e00-3a83-11e9-9a56-3128416f536a.png)


![screen shot 2019-02-27 at 11 28 15 am](https://user-images.githubusercontent.com/38992106/53506071-38d32800-3a83-11e9-9491-4a6510b4f7c7.png)
",13,16,['type: feature']
662,256418513,3530,19542768,2019-02-26 19:37:42,2019-03-07 15:07:59,closed,Improved datetime handling in utils to avoid type mixing,"I came across two util functions that do not take into account the possibility that different datetime types may be present in an array, such as when comparing axis ranges in overlayed plots (how this can happen in the first place might be worth investigating in more detail at some point). E.g. combining both pandas and numpy datetimes in the same array ruins calls such as to `numpy.max` etc.

Fixes #3528",3,5,[]
663,256307885,3529,19542768,2019-02-26 14:35:30,2019-02-26 17:27:01,closed,Update matplotlib test data,"The matplotlib 3.0.3 release has changed the test data, this PR is primarily meant to update that test data but also lists Python 3.7 as supported in setup.py.",0,1,[]
664,256267406,3527,19542768,2019-02-26 12:40:25,2019-02-26 12:41:32,closed,Documentation build fixes,,0,8,['tag: docs']
665,256010546,3526,19542768,2019-02-25 19:09:00,2019-02-25 19:09:08,closed,Test doc checkout,,0,4,['tag: docs']
666,255895949,3525,19542768,2019-02-25 13:47:59,2019-02-25 15:11:45,closed,Updated CHANGELOG for 1.11.3,,0,1,"['tag: docs', 'tag: packaging']"
667,255889044,3524,19542768,2019-02-25 13:27:30,2019-02-25 15:08:24,closed,Handle Graph node_color correctly,"Various Graph elements defined a default ``node_fill_color`` which is overrides any explicit ``node_color`` a user might set. This PR defines the ``node_color`` by default which can be overridden by either a user-defined ``node_color`` or a ``node_fill_color``.

Fixes https://github.com/pyviz/holoviews/issues/3516",0,2,"['type: bug', 'tag: backend: bokeh']"
668,255617401,3521,19542768,2019-02-23 14:33:28,2019-02-23 15:32:56,closed,Ensure backend is loaded before using display,Fixes https://github.com/pyviz/holoviews/issues/3426,0,1,[]
669,255615251,3520,19542768,2019-02-23 13:49:45,2019-02-23 15:07:55,closed,Implement datetime hover for Raster/Image types,"Adds support for datetime hover on Image and Raster elements.

Partial fix for https://github.com/pyviz/holoviews/issues/1261",0,2,"['tag: backend: bokeh', 'type: enhancement']"
670,255612421,3519,19542768,2019-02-23 12:58:10,2019-02-23 14:45:55,closed,Fixed datetime out of bounds issues on callbacks,Fixes https://github.com/pyviz/holoviews/issues/3425,0,3,"['type: bug', 'tag: backend: bokeh']"
671,255586764,3518,19542768,2019-02-23 03:24:59,2019-03-22 01:58:36,closed,Set up CI with Azure Pipelines,JUST TESTING,1,8,[]
672,255267972,3517,19542768,2019-02-22 04:26:08,2019-03-27 05:10:31,closed,Add clabel param,"![image](https://user-images.githubusercontent.com/15331990/53219952-f8a11f00-3616-11e9-865a-1b551ceef66e.png)
![image](https://user-images.githubusercontent.com/15331990/53219956-ff2f9680-3616-11e9-897a-6bb2f452ffe5.png)
",5,2,['type: feature']
673,255107078,3515,19542768,2019-02-21 17:04:13,2019-02-22 20:47:07,closed,Added Tiles element from geoviews,,3,11,['type: feature']
674,255090951,3513,19542768,2019-02-21 16:22:10,2019-02-21 17:46:55,closed,Attempt to fix ffmpeg export,"Attempts fix suggested in https://github.com/matplotlib/matplotlib/issues/8760 which is to add bzip2 dependency.

- [x] Reenables unit test for ffmpeg export",0,2,[]
675,255086340,3512,19542768,2019-02-21 16:10:23,2019-02-21 21:29:13,closed,Attempt to debug cftime issues on windows,,0,2,[]
676,255032007,3511,19542768,2019-02-21 13:54:47,2019-02-21 18:54:42,closed,Test that all elements support empty constructors,"Ensures that all non-parameterized elements support empty constructors, annotations that are parameterized (e.g. Arrow, Text, Box, Ellipse etc.) are excluded.

Fixes https://github.com/pyviz/holoviews/issues/2192",0,4,['tag: component: testing']
677,255007388,3510,19542768,2019-02-21 12:39:57,2019-10-02 19:14:56,closed,Add Slope annotation,"Implements https://github.com/pyviz/holoviews/issues/1993 and https://github.com/pyviz/holoviews/issues/2988

- [x] Add tests
- [x] Add docs
- [x] Handle inverted axis",0,4,['type: feature']
678,254862282,3507,19542768,2019-02-21 02:12:34,2019-02-21 03:58:21,closed,Build gallery on travis,"This PR builds the gallery on travis. This works by building the docs in one build stage, uploading the build to S3, then download it again in another build stage and then build the remaining gallery. Once this PR is merged we will get:

* daily doc builds uploaded to build.holoviews.org
* dev doc builds uploaded to dev.holoviews.org
* doc builds uploaded to holoviews.org",0,10,['tag: docs']
679,254494322,3504,19542768,2019-02-20 04:15:15,,open,ENH Stickplots,"Just a draft for what I know by the name of ""Stickplots"" (probably mostly because that's what a popular script for Matlab is called) -  see https://github.com/pyviz/holoviews/issues/3486#issue-408802672. This is only for the bokeh backend - `Ray` is the only Element I know that actually allows specifying an angle on the canvas itself. This is important when one wants to use datetime axes (see #2467), as one often does in these plots (of e.g. wind direction/speed as a function of time). I've previously made these plots in matplotlib (and Matlab), but then you have to work with the aspect ratio (tends to be a mess).

Syntax is like `VectorField`'s: `hv.Sticks((time, y, angles, magnitudes))`.

This is certainly not ready to be merged, but I wanted to hear your opinions before I write tests etc. I'm not married to any of the specifics (name of the Element, number of kdims, ...).

![stickplot](https://user-images.githubusercontent.com/38992106/53065666-b3f07900-349a-11e9-8ebb-9b7e0551fe6c.png)",9,4,[]
680,254343626,3502,19542768,2019-02-19 17:29:20,2019-02-22 16:49:35,closed,Minor tweaks relating to options,So far this includes one whitespace fix and an attempt to remove a condition that appears to be unnecessary.,6,7,[]
681,253585679,3499,19542768,2019-02-15 22:40:14,2019-09-22 19:32:13,closed,Always warn for deprecated call,"Looks like the last release still had the warning behind the [`util.config.future_deprecations` flag](https://github.com/pyviz/holoviews/blob/v1.11.2/holoviews/core/dimension.py#L453). This PR makes sure the warning is always issued so we can finally remove ``__call__`` immediately after the next release.

",5,2,[]
682,253191234,3495,19542768,2019-02-14 19:19:44,2019-02-15 18:05:29,closed,Implement optimized TriMesh wireframe rendering,"Uses optimized datashader segments rendering for TriMesh wireframes and adds support for generating a wireframe using ``interpolation=None`` and ``aggregator='any'/'count'``.

Here's the performance profiling for the initial render (which includes the time converting the trimesh to a wireframe of paths and segments):

![bokeh_plot](https://user-images.githubusercontent.com/1550771/52814903-2b866880-3095-11e9-86b5-21c017eb67cf.png)

- [x] Add tests",3,4,['type: enhancement']
683,252771978,3494,19542768,2019-02-13 16:57:06,2019-02-19 14:15:14,closed,Added an 'output' options group,This PR builds on #3492 in order to tackle the suggestion in #3463: tracking backend in options should be done consistently with everything else by introducing an 'output' options group.,3,38,[]
684,252450699,3492,19542768,2019-02-12 19:57:22,2019-02-13 01:35:37,closed,Using Options attribute for enumerating option groups,This PR is a good idea regardless of whether we add a new options group as suggested in #3463. I'll grep again in case I've missed any more places for an appropriate substitution.,0,4,[]
685,252406834,3491,19542768,2019-02-12 17:33:10,2019-02-13 03:03:21,closed,Enable the use of xlim parameter for timeseries plots,"Hey,

Since `xlim` parameter was a `NumericTuple` it was not possible to set it using dates for timeseries plot. Changing it to `Tuple` makes it more flexible.",4,2,['type: enhancement']
686,252323154,3490,19542768,2019-02-12 13:52:11,2019-02-12 19:31:09,closed,Fixed Param stream memoization,"This fixes a bug in `Param` and `Pipe` stream memoization. In order to support memoization when a hash is either very expensive to compute or when there is no parameter value to hash on we previously introduced a random hashkey which is returned when a Stream is triggering. This works fine in ensuring memoization is disabled for that particular call but any subsequent events triggered by another stream will receive a new hashkey, which disables memoization. Instead of using a random value this PR therefore introduces a `_memoize_counter` which is incremented whenever an event is triggered on these streams, which means subsequent events receive a consistent value to hash on.",2,8,['type: bug']
687,252061196,3488,19542768,2019-02-11 20:56:21,2019-02-12 12:05:45,closed,Fix mistake in VectorField's angle conversion if invert_axes,Title says it all.,1,1,"['type: bug', 'tag: backend: bokeh']"
688,252021783,3487,19542768,2019-02-11 18:43:23,2019-02-11 21:07:35,closed,Fixed LICENSE year range,Minor fix but mostly to check the test data updating infrastructure is now working after moving from ioam to pyviz.,1,2,['tag: component: testing']
689,251780221,3483,19542768,2019-02-11 00:37:21,2019-02-20 14:00:15,closed,Update website build to nbsite,Makes use of ``nbsite.gallery`` (https://github.com/pyviz/nbsite/pull/106),1,36,['tag: docs']
690,251675290,3481,19542768,2019-02-09 13:51:41,2019-03-27 17:21:27,closed,Removed Aliases utility,"We discussed improving the Aliases utility on multiple occasions (e.g in https://github.com/pyviz/holoviews/issues/1427) but the efforts on that front stalled (see https://github.com/pyviz/holoviews/pull/1448), mainly because we couldn't decide what this utility was even for, i.e. dimensions or groups/labels.

My personal feeling is that this kind of thing does not improve the clarity of code in any real sense, because its just another object users have to learn about. Even if it appears new users do not know that. Over the past couple of years I have also very rarely encountered situations where the utility would be particularly helpful.",0,1,['tag: API']
691,251564895,3479,19542768,2019-02-08 18:58:31,2019-02-08 23:40:36,closed,Ensure Image coordinates are rectilinear,"Image used to implicitly allow curvilinear coordinates, this PR ensures it errors in this case and recommends supplying 1D coordinate arrays or using QuadMesh.

- [x] Fixes https://github.com/pyviz/holoviews/issues/3465",0,1,['type: bug']
692,251560149,3478,19542768,2019-02-08 18:40:46,2019-02-08 23:40:54,closed,Retain Element._plot_id on redim,"As long as the data itself does not change ``redim`` should not change the plot_id and therefore break links between plots. This PR checks whether the dimension names change before restoring the previous plot_id on a redim, since the only redim change that necessitates a change to the data is a change in the dimension names.

- [x] Fixes https://github.com/pyviz/holoviews/issues/3458",0,1,['type: bug']
693,251555314,3477,19542768,2019-02-08 18:21:28,2019-02-09 17:56:31,closed,Fixed unclosed paths on polygons,"- [x] Fixes https://github.com/pyviz/holoviews/issues/3452
- [x] Adds unit tests",0,5,"['type: bug', 'tag: backend: mpl']"
694,251546035,3476,19542768,2019-02-08 17:46:16,2019-02-11 04:08:03,closed,Fixed ArrowPlot and added tests,"- [x] Fixes #3467 
- [x] Adds unit tests",0,1,"['type: bug', 'tag: backend: bokeh']"
695,251536412,3475,19542768,2019-02-08 17:10:50,2019-02-08 18:23:39,closed,Fix clip transformation for dim function,There was a small typo on the arguments for the numpy clip function.,3,1,['type: bug']
696,251247835,3474,19542768,2019-02-07 19:54:12,2019-03-07 15:50:53,closed,Add an apply method to apply functions to elements,"This PR implements the outcome of our API discussion to provide a more convenient API than ``hv.util.Dynamic``. The main changes are twofold:

* ``.apply`` now defaults to ViewableElement for its spec keyword, which means it behaves exactly like an Operation
* Added support for supplying streams and keywords to ``.apply``, which make it behave like ``hv.util.Dynamic``, i.e. it provides support for chaining dynamic operations, but also making existing objects become dynamic if there is a stream or parameter dependency declared.

- Supercedes #3473 
- [x] Add support for dynamic parameters
- [x] Add unit tests",12,16,"['tag: API', 'type: enhancement']"
697,251142474,3473,19542768,2019-02-07 14:49:31,2019-02-08 14:38:45,closed,Apply method/operation for chaining dynamic operations,"This PR implements APIs to more easily chain operations applied on objects and more specifically DynamicMaps as requested in https://github.com/pyviz/datashader/issues/698#issuecomment-461263390. As is rightly pointed out in that issue, the ``Dynamic`` utility is confusing to a user, mainly because it was never meant as public API and was designed primarily to implement chaining of DynamicMaps for internal operations.

This is also closely related to https://github.com/pyviz/holoviews/issues/3431, which discusses an API for creating custom operations from functions. The main reason to define an Operation is twofold 1) to express parameters using param and 2) to automatically link the operation's parameters to streams. The ``apply`` method and operation introduced here achieves goal 2 by being able to link stream values to a functions keyword arguments. The proposal in #3431 instead proposes auto-generating an Operation by inspecting the function arguments. IMO this doesn't add much value over a generic ``apply`` operation since we can't infer useful parameter types for a generic function and just defaulting to Parameter types adds no value.

The one worry is that the Python 2 ``apply`` builtin has the opposite signature to the ``apply`` operation mainly for consistency with other operations.

In the examples in the linked issue here's what the three approaches to chaining look like:

```python
# Old
rasterized = Dynamic(data_dmap, operation=self.rasterize, streams=[hv.streams.RangeXY])
...
shaded     = Dynamic(shaded, operation=self.apply_opacity)

# Method
rasterized = data_dmap.apply(self.rasterize, streams=[hv.streams.RangeXY])
...
shaded     = shaded.apply(self.apply_opacity)

# Operation
rasterized = apply(data_dmap, self.rasterize, streams=[hv.streams.RangeXY])
...
shaded     = apply(shaded, self.apply_opacity)
```

In my opinion chaining DynamicMaps is a useful enough operation that having a dedicated method is worthwhile to avoid the import of apply but I could probably be persuaded to start by adding the operation and consider adding the method at a later date. Overall this is just a proposal  though, and we should consider all proposals before deciding.",0,5,[]
698,250978479,3472,19542768,2019-02-07 02:57:47,2019-02-07 12:27:23,closed,Fixed various .rst issues with FAQ,Fixes https://github.com/pyviz/holoviews/issues/3470 and various other formatting issues with the FAQ.,2,1,[]
699,250965848,3471,19542768,2019-02-07 01:26:06,2019-02-07 12:26:48,closed,GitHub URL updates,,5,4,[]
700,250288729,3463,19542768,2019-02-05 05:35:08,2019-02-15 17:42:18,closed,More flexible cross-backend option application,"This PR is a first cut at fixing #3456 by tracking the backend specified:

![image](https://user-images.githubusercontent.com/890576/52254838-70601180-28d5-11e9-82b2-c96cc49c49c8.png)

Still work in progress: will need a lot of testing including new unit tests.",5,11,[]
701,249918882,3460,19542768,2019-02-04 01:11:51,2019-02-04 02:52:46,closed,Fixed datetime handling in datashade operations on dask dataframe,"- [x] Fixes #3459 
- [x] Adds unit test",0,1,['type: bug']
702,249854331,3453,19542768,2019-02-03 04:08:35,2019-02-03 12:54:21,closed,"Ensure all tests pass without pandas, dask, xarray and scipy","As the title says, ensuring the tests match mostly means ensuring that datetimes are handled more consistently. This also uncovered a number of pretty nasty bugs.

- Dropping a kdim on a non-scalar gridded dataset was broken without pandas
- The DictInterface always added an index to an 1D array (instead of respecting auto_indexable_1d)
- Datetime and Date times were not handled as scalars
- Without pandas but with dask the DaskInterface would still accept input but raise an exception when dask.dataframe is imported (fixes https://github.com/ioam/holoviews/issues/3430)
- Image.sample did not work at all without pandas
- Plot padding was broken for datetimes where the axis range was close to the date resolution

Otherwise I updated all tests to appropriately skip if a dependency was not available.",2,13,['tag: component: testing']
703,249693621,3450,19542768,2019-02-01 18:21:28,2019-03-23 16:18:08,closed,Compatibility with bokeh layout refactor,"This PR achieves compatibility with the layout refactor which was merged into bokeh dev and will land in bokeh 1.1.0. It will give us control over the actual plot frame dimensions (excluding the axes, colorbars, legends) and provide control over the plot aspect.

- [x] Adds support for ``aspect`` and ``data_aspect`` in bokeh (https://github.com/pyviz/holoviews/issues/335)
- [x] Fixes support for sizing modes in bokeh
- [x] Adds lower level control over reactive layouts using min/max_width/height and width/height_policy options
- [x] Ensure data aspect is maintained when updating plot
- [x] Ensure datetime and categorical axes warn if data_aspect set
- [x] Test on bokeh server
- [x] Check no events bounce on datashade
- [x] Update documentation
- [x] Update tests
- [x] Add tests

Fixes https://github.com/pyviz/holoviews/issues/3026
Fixes https://github.com/pyviz/holoviews/issues/2992",7,32,['tag: backend: bokeh']
704,249413891,3447,19542768,2019-01-31 21:51:39,2019-02-01 01:24:59,closed,fix typo,,1,2,['tag: docs']
705,248893494,3445,19542768,2019-01-30 14:19:41,2019-02-05 13:10:19,closed,Apply Labels offset using bokeh transform,Makes it possible to link Points and Labels with an offset so they both update when the x/y positions are edited.,0,1,"['tag: backend: bokeh', 'type: enhancement']"
706,248879699,3444,19542768,2019-01-30 13:38:59,2019-02-04 15:17:44,closed,Attempt updating to new build infrastructure,"This PR updates the test and build infrastructure in holoviews to use the pyct(dev) tools used by other packages. It makes a number of modifications to the travis tests:

* Splits flake/unit tests and regression/notebook tests into separate test builds. This simplifies the envs used for the different kinds of tests slightly, isolates the horrible regression testing code, and will make it easier to remove or replace it at a later stage.
* Enables build caching
* Adds new optional ``extras_require`` entries to specify the different test and build dependencies, the old 'recommended', 'examples' and 'extras' are unmodified.
* Switches appveyor to pyctdev based builds

To Do:

- [ ] Update ``holoviews`` command to use pyct, currently still uses ``holoviews --install-examples`` API.
",11,43,"['tag: component: testing', 'tag: packaging']"
707,248517024,3442,19542768,2019-01-29 14:00:53,2019-01-29 21:34:31,closed,Fixes for style updates in matplotlib,"This PR ensures that styles are updated generally in the matplotlib backend and also fixes a concrete bug where updating a scalar size on a Point/Scatter plot raised an error.

- [x] Fixes #3439 
- [x] Adds unit test",1,1,['tag: backend: mpl']
708,248402717,3440,19542768,2019-01-29 07:38:40,2019-02-05 00:20:03,closed,Added a get method to Opts to get an Options object,"Prompted by a stackoverflow question I decide to go ahead and implement the `get` method on `Opts` we have previously discussed. It doesn't do anything fancy for container types but does let you specify the option type if you like e.g with `points.opts.get('style')`.

I haven't put too much thought into the name: `get` was the first thing that came to mind.",5,3,[]
709,248315416,3438,19542768,2019-01-28 22:51:05,2019-01-29 00:30:10,closed,Added underscores to Opts attributes,Addresses #3437. ,1,2,['tag: API']
710,248170350,3436,19542768,2019-01-28 14:58:08,2019-01-28 16:07:00,closed,Updated CHANGELOG for 1.11.2,,1,3,[]
711,247902104,3435,19542768,2019-01-26 17:29:41,2019-01-27 20:50:38,closed,Fixed Overlay constructor bug,"The Overlay constructor was not rewritten when it was changed to inherit from ViewableTree. This meant that the constructor was called twice and the ``id`` used to associate options with an element was always set to None.

- [x] Fixes https://github.com/ioam/holoviews/issues/3434
- [ ] Adds unit tests",2,2,"['type: bug', 'tag: component: options']"
712,247867266,3433,19542768,2019-01-26 04:35:25,2019-01-27 20:04:51,closed,Pandas 0.24 compatibility and CI fixes,"The pandas dtype extensions changed slightly in 0.24 breaking HoloViews in major ways in the process. Apart from updating the import, to avoid this in future I've split the try/except blocks to separate the extension types and added a warning.",3,51,[]
713,247801955,3432,19542768,2019-01-25 20:19:20,2019-01-27 20:48:39,closed,Improved attribute handling in Graph.from_networkx,"This PR improves Graph.from_networkx in a number of ways. First of all it makes sure that non-scalar attributes and indexes (e.g. lists, tuples or dictionaries) do not break the Graph. Secondly this PR will allow passing in a dictionary of node positions which is the canonical way to specify node positions in networkx. 

- [x] Handle non-scalar attributes
- [x] Handle dictionary node positions",1,6,['type: enhancement']
714,247535795,3429,19542768,2019-01-25 01:57:43,2019-01-25 16:40:16,closed,Allow defining hooks on backend load,This PR allows downstream libraries such as geoviews to register a hook which is called when the extension is loaded. This will make it possible to defer loading of plotting modules until they are explicitly loaded (and therefore avoid issues with the matplotlib backend on some platforms).,1,1,['type: feature']
715,247126425,3427,19542768,2019-01-23 21:44:32,2019-01-24 01:37:48,closed,Fix of timestamp selections in streams,"Changed from fromtimestamp to utcfromtimestamp for support of 2.7.15 and 3.6+

Closes #3412 ",2,1,['type: bug']
716,246293147,3422,19542768,2019-01-21 13:29:09,2019-01-29 21:33:26,closed,Added hook to clean up custom option trees,"This PR adds a dictionary of weakrefs to the Store which tracks all HoloViews objects which have had custom options applied to them. Whenever the ``id`` of an object changes or an object is garbage collected a callback then checks whether there are any remaining objects referencing the custom tree and deletes both the weakref and the custom options tree if it is no longer referenced.

- [x] Fixes https://github.com/ioam/holoviews/issues/3421
- [x] Add unit tests",5,14,[]
717,245705695,3419,19542768,2019-01-18 02:02:27,2019-01-18 02:03:55,closed,Added entry point in conda.recipe for windows,This should be the last PR for 1.11.1.,1,1,[]
718,245693611,3417,19542768,2019-01-18 00:42:59,2019-01-18 01:38:33,closed,Updated CHANGELOG for 1.11.1 release,,1,1,[]
719,245659591,3415,19542768,2019-01-17 21:59:07,2019-01-18 00:06:48,closed,Pinning IPython to avoid broken tab-completion behavior,"This PR drops the bokeh pinning and test data update of #3411, only pinning IPython.",1,4,[]
720,245620809,3413,19542768,2019-01-17 19:37:17,2019-01-18 13:27:17,closed,Ensure datetime values are displayed as slider,"This ensures that all datetime types are displayed using the slider widget. This comes up frequently now that xarray uses cftime objects in some cases instead of always defaulting to np.datetime64 types.

- [x] Addresses https://github.com/ioam/holoviews/issues/3159",0,2,[]
721,245608555,3411,19542768,2019-01-17 18:53:56,2019-01-17 21:54:44,closed,Updated pinning of bokeh and IPython,Pins bokeh as 1.0.3 had an issue with broken hover (seems to be fixed in 1.0.4) and IPython due to the broken tab completion described in https://github.com/ipython/ipython/issues/11561.,1,1,[]
722,245526110,3410,19542768,2019-01-17 14:45:30,2019-10-02 17:49:28,closed,Made shared_axes option supported generally and toggle axiswise when disabled,"Disabling sharing of axes (i.e. setting axiswise=True) across a layout is currently quite awkward because you have to disable it on every single element in a layout. The shared_axes option that already existed for bokeh already provided some support for toggling this behavior, this PR generalizes it across backends.

- [x] Addresses https://github.com/ioam/holoviews/issues/3406",0,3,"['tag: component: plotting', 'type: enhancement']"
723,245493872,3409,19542768,2019-01-17 13:05:17,2019-01-17 18:27:58,closed,Fixes for Polygons plotting with holes,"The PolygonPlot implementation switched between the MultiPolygons and Patches glyphs depending on whether the polygons have holes or not. The problem with that is that in a dynamic plot or HoloMap the returned data format may therefore change but the glyph is only initialized once, so a MultiPolygons glyph could end up with the data format for the Patches glyph and vice versa. This PR ensures that Polygons are always plotted using the MultiPolygons glyph **unless** a PolyDraw or PolyEdit stream is attached to the plot, which do not yet support holes. This ensures backwards compatibility while also fixing the bug.

- [x] Adds unit tests",0,6,"['type: bug', 'tag: backend: bokeh']"
724,245329205,3405,19542768,2019-01-16 23:39:08,2019-01-17 15:19:55,closed,Fix violin 'box',Fix 'box' `inner` option for violin plots with singular data and add a test.,2,2,[]
725,244955147,3403,19542768,2019-01-15 22:10:13,2019-01-16 02:13:29,closed,Fixed handling of characters that have no uppercase,"Fix to address #2096: identifiers can contain unicode in Python 3 and not all unicode characters have an equivalent uppercase letter.

This example now works:

![image](https://user-images.githubusercontent.com/890576/51213200-fd6c0800-18df-11e9-87ee-8b9327dd8c39.png)

One thing I want to do before this PR is merged is add a few unit tests.",2,5,[]
726,244951462,3402,19542768,2019-01-15 21:56:24,2019-01-15 22:04:53,closed,Fix TypeError in string formatting expression,"`TypeError: not enough arguments for format string` is raised when evaluating the expression.

I changed it the minimum so that it does not crash, although the error raised is not fully informative, since `not self.allowable(name)` excludes more than `self.disallowed`.",1,1,[]
727,244875609,3401,19542768,2019-01-15 17:23:35,2019-01-17 14:28:10,closed,Readd MultiInterface datatype if data is of that type,"The issue here is that Path has some special handling to detect single paths specified as a list which dropped the multitabular datatype. This PR ensures this datatype is readded if the data indicates that it should be, this ensures that projecting of single paths in GeoViews does not break.

- Fixes https://github.com/pyviz/geoviews/issues/280",0,1,['tag: component: data']
728,244871721,3400,19542768,2019-01-15 17:10:50,2019-01-17 14:00:44,closed,Ensure xarray interface retains metadata,- Fixes https://github.com/ioam/holoviews/issues/3399,0,1,['tag: component: data']
729,244798864,3398,19542768,2019-01-15 13:44:42,2019-01-15 14:15:04,closed,Allow more customizations of bokeh gridlines,"Allows control over grid ticker, level and visible properties, e.g.:

```
xxx = np.random.rand(100, 100)
hv.QuadMesh((range(100), range(100), xxx)).opts(show_grid=True, gridstyle={'grid_level': 'annotation', 'xgrid_visible': False})
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/51184278-afe5a000-18cb-11e9-88c1-159c0684ea1e.png)
",0,1,"['tag: backend: bokeh', 'type: enhancement']"
730,244784731,3397,19542768,2019-01-15 12:56:07,2019-01-15 14:43:58,closed,Fixed bug aggregating empty BoxWhisker/Violin,"- [x] Fixes https://github.com/ioam/holoviews/issues/3378
- [x] Fixes https://github.com/ioam/holoviews/issues/3358",0,2,"['type: bug', 'tag: backend: bokeh']"
731,244781354,3396,19542768,2019-01-15 12:44:21,2019-01-15 15:30:21,closed,Process colorbar option on CompositePlots,- [x] Fixes https://github.com/ioam/holoviews/issues/3372,0,1,"['type: bug', 'tag: backend: bokeh']"
732,244657822,3392,19542768,2019-01-15 02:44:46,2019-01-15 03:17:14,closed,Pin numpy to <1.16.0,"Travis currently failing due to a NumPy version bump, pinning it should fix it for now. Hopefully xarray will push out a compatible release soon.",1,1,['tag: component: testing']
733,244588534,3391,19542768,2019-01-14 21:14:54,2019-01-14 21:17:24,closed,Handled (deprecated) empty __call__ case,"Although ``__call__`` on dimensioned objects is deprecated, the old behavior should be preserved for now.",1,1,[]
734,244423100,3389,19542768,2019-01-14 12:12:44,2019-01-15 12:42:45,closed,Sync axis and grid tickers,"By default axis and grid tickers are independent which is not usually desirable. This PR ensures that at least by default the axis and grid tickers match. Take this simple example:

```python
hv.Curve([1, 2, 3]).opts(
    xticks=[0.25, 0.75, 1.25, 1.75], show_grid=True)
```

Before the PR this produced:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/51111918-ab4eb800-17f5-11e9-8b94-e4dac13bf192.png)

With this PR applied:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/51111886-85291800-17f5-11e9-90d2-8bf1cd84c084.png)
",0,1,['tag: backend: bokeh']
735,244296378,3387,19542768,2019-01-13 18:28:41,2019-01-14 02:53:23,closed,"If xlabel/ylabel, then set axis_label","Before PR, matplotlib already supports this, but bokeh doesn't
![image](https://user-images.githubusercontent.com/15331990/51089180-d9f95f80-171d-11e9-817a-32ee990f9760.png)

After:
![image](https://user-images.githubusercontent.com/15331990/51089187-fc8b7880-171d-11e9-8bc0-b4aa6aba1ae4.png)
",0,1,[]
736,244224908,3385,19542768,2019-01-12 15:19:00,,open,Add support for multi-level categorical axes for all Charts ,"This PR is meant to overhaul handling of categorical axes for all Chart elements. This is a backward incompatible change and the plan is to be able to toggle the new behavior using a config option in the next release and eventually defaulting to the new behavior in 2.0.

This PR implements the suggestion in https://github.com/ioam/holoviews/issues/1668, which allows all chart elements to support multi-level categorical axes. This means that a Chart element with more than one key dimension will always be interpreted as a multi-level categorical axis, which will make it possible to overlay existing charts on top of elements which already support this mechanism for multi-level categorical axes, e.g. as a straightforward example let's take a multi-level Bars plot:

```python
data = [
    ('A', 1, 2, 0.2), ('A', 2, 3, 0.3),
    ('B', 1, 4, 0.7), ('B', 2, 1, 0.5)]
hv.Bars(data, kdims=['a', 'b'], vdims=['c'])
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/51074934-ff825c80-167c-11e9-8395-88a43bf78f6b.png)

Currently if we want to overlay points, errorbars, curves, etc. on top of this plot there would be no way of doing so. Once this PR is merged it will be possible to do this:

```python
data = [
    ('A', 1, 2, 0.2), ('A', 2, 3, 0.3),
    ('B', 1, 4, 0.7), ('B', 2, 1, 0.5)]
hv.Bars(data, kdims=['a', 'b'], vdims=['c']) *\
 hv.ErrorBars(data, kdims=['a', 'b'], vdims=['c', 'error']) 
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/51074976-5851f500-167d-11e9-9d77-92f533ce21bf.png)

Note that this would finally make a very clear distinction between Scatter/Points and Curve/Path, the former would support this categorical nesting, while the latter would continue to interpret multiple key dimensions as 2D space.

Here is the full list of elements that will support this categorical nesting.

### Previously supported

- [x] BoxWhisker
- [x] Violin
- [x] Bars 

### Newly supported

- [x] Curve
- [x] Scatter
- [x] ErrorBars
- [x] Spikes
- [ ] Area
- [ ] Spread
- [ ] Histogram

### Potentially allow via toggling some option

- [ ] HLine/VLine
- [ ] Text/Labels
- [ ] Arrow",9,2,"['type: feature', 'tag: component: plotting', 'status: WIP']"
737,244221134,3384,19542768,2019-01-12 13:57:39,2019-01-12 15:32:31,closed,Fix date_to_int bug,- [x] Fixes https://github.com/ioam/holoviews/issues/3368,0,1,[]
738,244219153,3383,19542768,2019-01-12 13:11:53,2019-01-12 13:47:06,closed,Pinned pandas temporarily,pandas 0.24.0rc1 was pushed to conda-forge for some reason and it's breaking our tests.,0,1,[]
739,244202179,3382,19542768,2019-01-12 05:45:47,2019-01-15 11:31:56,closed,Add color bar limit opt and redim range if values are equal.,"Addresses https://github.com/ioam/holoviews/issues/3373 and https://github.com/ioam/holoviews/issues/3350 and isn't in the same PR as https://github.com/ioam/holoviews/pull/3381 because I wasn't sure if the extra computations are worth it for the warnings.
",4,8,[]
740,244201307,3381,19542768,2019-01-12 05:18:15,2019-01-13 06:50:50,closed,Add clim opt,https://github.com/ioam/holoviews/issues/3369,1,2,[]
741,244199174,3380,19542768,2019-01-12 04:17:35,2019-01-12 14:46:48,closed,Fix jitter when axes inverted,"When testing https://github.com/ioam/holoviews/issues/3379, I realized if I turned off jitter, it showed but misaligned.
![image](https://user-images.githubusercontent.com/15331990/51069116-a7484d80-15dd-11e9-9d40-1e0e4fc0985f.png)

Then I tried just plotting scatter inverted with jitter, and noticed that jitter on inverted didn't work.
![image](https://user-images.githubusercontent.com/15331990/51069121-baf3b400-15dd-11e9-8853-a7436f5c5f4e.png)

This PR fixes that for both scatter and points.
![image](https://user-images.githubusercontent.com/15331990/51069129-eb3b5280-15dd-11e9-99a3-80ab9535cb67.png)

```
import holoviews as hv
from holoviews import dim
hv.extension('bokeh')

from bokeh.sampledata.autompg import autompg as df

title = ""MPG by Cylinders and Data Source, Colored by Cylinders""
hv.BoxWhisker(df, 'cyl', 'mpg', label=title).opts(invert_axes=True) * \
hv.Scatter(df, ['cyl', 'mpg']).opts(invert_axes=True, jitter=0.5)

hv.Scatter(df, ['cyl', 'mpg']).opts(jitter=0.5) + \
hv.Scatter(df, ['cyl', 'mpg']).opts(invert_axes=True, jitter=0.5)

hv.Points(df, ['cyl', 'mpg']).opts(jitter=0.5) + \
hv.Points(df, ['cyl', 'mpg']).opts(invert_axes=True, jitter=0.5)
```",1,1,[]
742,243671209,3377,19542768,2019-01-10 12:36:10,2019-01-10 13:43:57,closed,Fixed bug in non-colormapped SideHistogram,Fixes regression introduced in https://github.com/ioam/holoviews/pull/3346,1,1,[]
743,242660984,3371,19542768,2019-01-07 13:40:00,2019-01-10 14:40:48,closed,Fixed bug updating Raster/Image/RGB alpha,Fixes issue with alpha not being dynamically updated when changed.,1,1,"['type: bug', 'tag: backend: bokeh']"
744,242608915,3370,19542768,2019-01-07 10:07:02,2019-01-08 14:56:46,closed,Fix broken options in Game of Life demo app,"Hi,
I've just tried to run the game of life demo app and noticed that some things had been changed due to options not working anymore.
The proposed pull request fixes the demo app in the following way:
- options are separated in plotting and style
- options are applied when creating the initial hv.Image object
- update was modified slightly to just return the img object that was modified in-place instead of creating a new one

Hope this helps
Best regards
Florian",2,1,[]
745,242317418,3367,19542768,2019-01-04 16:57:04,2019-01-14 11:18:11,closed,Updated exporting and archiving user guide,"Updates this user guide to get rid of the `%%output` and `%%opts` magics and gets rid of some outdated material.

One more major edit I would do is to cut down on the text talking about reproducibility - it is probably better to just get to the point and show what you can do instead of just describing it in text.",5,2,[]
746,241815877,3364,19542768,2019-01-02 18:34:51,2019-01-10 14:57:24,closed,Further replacement of .options with .opts,Continues on from #3362. The remaining uses of `.options` are either necessary or in topics which still needs updating.,3,3,['tag: docs']
747,241656516,3362,19542768,2019-01-01 23:40:14,2019-01-02 17:52:58,closed,Options to opts,"I went through the notebooks and modified `.options()` calls to `.opts()`

That leaves only `./examples/reference/features/bokeh/table_hooks_example.ipynb`
When I tried to run it, I got
```
WARNING:root:TablePlot01553: Plotting hook <function apply_format at 0x7fb51fda0d90> could not be applied:

 'plot'
```
which I did not sort out.",3,4,[]
748,241074434,3352,19542768,2018-12-27 04:48:29,2019-01-02 18:58:37,closed,"Tweak FAQ consistency, removing whitespaces, closing bold stars, moved stuff",,1,1,[]
749,240817586,3349,19542768,2018-12-25 00:11:32,2018-12-25 00:11:51,closed,Added Notebook_Magics.rst to avoid double title,Title explains the addition.,0,1,[]
750,240816643,3348,19542768,2018-12-24 23:41:11,2018-12-24 23:41:17,closed,Fixes for link examples,,0,1,[]
751,240816033,3347,19542768,2018-12-24 23:21:04,2018-12-24 23:26:08,closed,Removed further uses of %output magic from examples,"Remaining uses that need removal:

* Archiving and Exporting user guide.
* The topic notebooks.
",0,2,[]
752,240815884,3346,19542768,2018-12-24 23:15:54,2018-12-24 23:22:30,closed,Updated and fixed matplotlib Scatter reference,,1,1,['tag: docs']
753,240815718,3345,19542768,2018-12-24 23:11:29,2018-12-24 23:13:32,closed,Removed further uses of %%opts from examples,"Still to do:

* Matplotlib `Scatter` needs a full updated.
* Archiving user guide needs a full rewrite.
* Topics need updating (lower priority as they aren't linked to from the website)",0,2,[]
754,240814743,3344,19542768,2018-12-24 22:40:02,2018-12-24 22:43:44,closed,Removed the magics from the Dimensioned Containers user guide,Title says it all. One change is I had to remove `legend_position` from the holomap example as it now causes the bokeh layout solver to break.,0,1,['tag: docs']
755,240814330,3343,19542768,2018-12-24 22:26:08,2018-12-24 22:27:56,closed,Added 1.11 to releases.rst,,1,1,['tag: docs']
756,240814121,3342,19542768,2018-12-24 22:19:21,2018-12-24 22:20:53,closed,Added missing links to the new Notebook Magics user guide,Title says it all.,0,1,['tag: docs']
757,240813660,3341,19542768,2018-12-24 22:07:39,2018-12-26 23:53:35,closed,Removed duplicated output in Custom Interactivity,"This user guide is currently the only one that has static versions of the expected output. For users running the user guides, this is quite confusing.

Although this PR removes the output, it does serve an important purpose for doc building so that the website is more useful. We haven't found a general solution to this yet but for now I think we should be consistent with what we have. The last commit good for doc building (including this output) is 409900f.

I hope we find a good solution to this issue that we can apply throughout.",1,1,[]
758,240813269,3340,19542768,2018-12-24 21:56:45,2018-12-24 21:59:58,closed,Miscellaneous user guide fixes,"Some are quite important (e.g undefined variables, missing imports).",1,5,[]
759,240812001,3339,19542768,2018-12-24 21:23:15,2018-12-24 22:10:12,closed,Bumped version requirements in setup.py,,1,1,[]
760,240803823,3338,19542768,2018-12-24 18:40:42,2018-12-24 19:47:57,closed,Added initial CHANGELOG draft for 1.11,,1,4,[]
761,240799153,3337,19542768,2018-12-24 17:25:24,2018-12-24 18:03:41,closed,Clarified Applying Customization user guide,"Did a pass over the Applying Customization user guide, with clarifications and typo fixes.",2,7,[]
762,240779357,3336,19542768,2018-12-24 14:03:11,2018-12-24 14:03:17,closed,Fixed various links,,0,1,['tag: docs']
763,240768108,3335,19542768,2018-12-24 12:25:33,2018-12-24 12:32:28,closed,Renumbered User Guides,Renumbers all user guides and updates the links.,0,1,['tag: docs']
764,240663700,3334,19542768,2018-12-23 03:42:23,2018-12-24 19:17:55,closed,Include license in wheels,The BSD license requires all copies of the software include the license text.,1,1,['tag: packaging']
765,240641607,3333,19542768,2018-12-22 15:56:59,2018-12-24 11:38:58,closed,Updated user guides on the option system,"I've finally finished updating the options user guide and splitting out a separate user guide on magics. I think this cuts out a lot of material that is now irrelevant and I hope this is now a clearer story with fewer concepts that people need to worry about.

@jbednar @philippjfr Please review! I'm sure you'll have fixes and suggestions. Once that is done, I'll do a final pass to update to the new name (once we have settled on it).

#### TODO

- [x] Rename the user guide. Are we happy with 'Applying Customizations' or do we have a better suggestion?",6,8,[]
766,240637600,3331,19542768,2018-12-22 14:24:48,2018-12-22 15:57:34,closed,Fixed bug casting Paths,Uncovered a small bug building GeoViews docs.,1,1,"['type: bug', 'tag: component: data']"
767,240631203,3330,19542768,2018-12-22 11:51:57,2018-12-22 14:08:50,closed,Fixed bug in looking up valid keywords,Not every backend registers a plot and options for every element.,1,1,['type: bug']
768,240525354,3329,19542768,2018-12-21 16:51:23,2018-12-22 07:08:51,closed,Fix toolbar='disable' option,- [x] Fixes https://github.com/ioam/holoviews/issues/3245,0,1,"['type: bug', 'tag: backend: bokeh']"
769,240482785,3328,19542768,2018-12-21 14:05:57,2018-12-21 15:38:32,closed,Cleaned up docs of last references to .options,Replaces any last usages of ``.options`` in the user guides and the apps.,1,5,['tag: docs']
770,240338827,3327,19542768,2018-12-21 00:17:01,2018-12-21 00:18:17,closed,Fixed indentation in .opts.info,,1,1,[]
771,240313965,3326,19542768,2018-12-20 21:59:20,2018-12-20 22:02:52,closed,Optionally show defaults in opts repr,,1,2,[]
772,240294709,3325,19542768,2018-12-20 20:37:26,2018-12-20 21:53:54,closed,Removed charwidth setting and added output.info method,"This screenshot illustrates the `output.show` method which is the replacement for using the `%output` magic without any arguments:

![image](https://user-images.githubusercontent.com/890576/50309513-b74c9180-0464-11e9-9ead-971052fff39e.png)

The charwidth setting is now removed as it was just confusing and unused cruft.",3,4,[]
773,240241841,3324,19542768,2018-12-20 17:09:52,2018-12-20 21:18:45,closed,Fix style mapping with explicit colormap,"Fixes style mapping when the ``cmap`` is an explicit mapping such as ``{1: 'red', 2: 'green'}``",1,1,"['type: bug', 'tag: backend: bokeh']"
774,240224976,3323,19542768,2018-12-20 16:15:58,2018-12-20 18:09:42,closed,Fixed bug setting options when backends switched,,0,1,[]
775,240071324,3321,19542768,2018-12-20 07:04:45,2018-12-20 19:34:13,closed,Updated scheme used for option builder validation,"@jbednar @philippjfr I think this PR implements the updated validation behavior we discussed:

![image](https://user-images.githubusercontent.com/890576/50269182-24274380-03f3-11e9-8b97-6c60221cd91b.png)
",2,11,[]
776,239965516,3320,19542768,2018-12-19 20:30:54,2018-12-19 21:46:18,closed,Ensure custom trees are propagated for non-specified backend,,1,2,"['type: bug', 'tag: component: options']"
777,239901207,3318,19542768,2018-12-19 16:38:37,2018-12-20 00:04:11,closed,Output cell magic replacement and minor tweaks,"Here is an example of the output cell magic replacement:

![image](https://user-images.githubusercontent.com/890576/50233780-c9053a80-0379-11e9-8360-b40957e0b568.png)

Here is an example of the updated options repr:

![image](https://user-images.githubusercontent.com/890576/50233739-ae32c600-0379-11e9-8adb-7bb6cf66795f.png)

My main worry here is that the return value of `hv.output` has changed from returning the `obj` to returning `None` (needed to avoid double display). This means this change isn't backwards compatible but I don't think anyone was using this other than our automated conversion of magics to python syntax (e.g for bokeh server) behind the scenes.

It is also worth mentioning that anyone using `_` to get the value of the previously executed cell will now change if using this utility.

Finally, I should mention the small hack I added to avoid printing reprs in the IPython terminal. It isn't a big deal if we remove it as in most contexts, `IPython.display` won't be available.",0,10,[]
778,239880311,3317,19542768,2018-12-19 15:40:55,2018-12-19 16:20:41,closed,Fix missing import to get example to work,"Hi,
I just went through the deploying with Bokeh tutorial and found that the above import was missing if you wanted to do standalone execution outside the notebook with `bokeh serve`.
This little fix allowed me to finally run the example.

Hope this helps others.
Best regards,
Florian",1,1,['tag: docs']
779,239819076,3316,19542768,2018-12-19 12:30:09,2019-07-29 19:47:18,closed,Selection1D and RangeXY callback support in plotly backend,"### Overview
This PR adds support the `Selection1D` and `RangeXY` streams in the plotly backend. Comments welcome, and this is obviously intended for consideration after the feature freeze 🙂 

I believe that it is working well, though I've only tested it manually on `Points` elements so far.

### Implementation
This implementation approach differs a bit from the Bokeh backend approach because plotly.py doesn't really have a notion of attaching a JavaScript callback to a plotly.js element.  Instead, the trace UID's are used to provide a mapping between traces and comms, and the renderer is responsible for producing all of the necessary callbacks to handle the active streams.

### Examples
#### `Selection1D`
Here is an example of displaying a red point at the mean of the selected points
```python
import numpy as np
import holoviews as hv
from holoviews.streams import Stream, Selection1D, RangeXY
import param
hv.extension('plotly')

data = np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (100,))
points = hv.Points(data).options(color='gray')

sel = Selection1D(source=points)
rangexy = RangeXY(source=points)

def mean_point(index):
    if index:
        means = data[index, :].mean(axis=0)
        pts1 = hv.Points([means]).options(size=12, color='red')
    else:
        pts1 = hv.Points([])
    
    return pts1

mean_sel = hv.DynamicMap(mean_point, kdims=[], streams=[sel])
points*mean_sel
```
![selection1d](https://user-images.githubusercontent.com/15064365/50219948-d103b100-035e-11e9-803a-dcaa4387cd52.gif)

#### `RangeXY`
And here's an example of displaying a blue dot at the mean of all of the points in the `RangeXY` viewport.
```python
import numpy as np
import holoviews as hv
from holoviews.streams import Stream, Selection1D, RangeXY
import param
hv.extension('plotly')

data = np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (100,))
points = hv.Points(data).options(color='gray')

sel = Selection1D(source=points)
rangexy = RangeXY(source=points)

def mean_point(x_range, y_range):

    if x_range and y_range:
        inds = np.logical_and(np.logical_and(x_range[0] <= data[:, 0], data[:, 0] <= x_range[1]),
                              np.logical_and(y_range[0] <= data[:, 1], data[:, 1] <= y_range[1]))
        x_mean = np.mean(data[inds, 0])
        y_mean = np.mean(data[inds, 1])
        
        print(x_mean, y_mean)
        pts2 = hv.Points([[x_mean, y_mean]]).options(size=12, color='blue')
    else:
        pts2 = hv.Points([])
    
    return pts2

mean_rangexy = hv.DynamicMap(mean_point, kdims=[], streams=[rangexy])
points*mean_rangexy
```
![rangexy](https://user-images.githubusercontent.com/15064365/50219960-dfea6380-035e-11e9-9cdb-cfa790bd00a4.gif)


#### Both `Selection1D` and `RangeXY`
Now with both streams active in the same overlay element

```python
import numpy as np
import holoviews as hv
from holoviews.streams import Stream, Selection1D, RangeXY
import param
hv.extension('plotly')

data = np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (100,))
points = hv.Points(data).options(color='gray')

sel = Selection1D(source=points)
rangexy = RangeXY(source=points)

def mean_point(index, x_range, y_range):
    if index:
        means = data[index, :].mean(axis=0)
        pts1 = hv.Points([means]).options(size=12, color='red')
    else:
        pts1 = hv.Points([])

    if x_range and y_range:
        inds = np.logical_and(np.logical_and(x_range[0] <= data[:, 0], data[:, 0] <= x_range[1]),
                              np.logical_and(y_range[0] <= data[:, 1], data[:, 1] <= y_range[1]))
        x_mean = np.mean(data[inds, 0])
        y_mean = np.mean(data[inds, 1])
        
        print(x_mean, y_mean)
        pts2 = hv.Points([[x_mean, y_mean]]).options(size=12, color='blue')
    else:
        pts2 = hv.Points([])
    
    return pts1*pts2

mean_sel = hv.DynamicMap(mean_point, kdims=[], streams=[sel, rangexy])
points*mean_sel
```
![selection1d_rangexy](https://user-images.githubusercontent.com/15064365/50219997-fe505f00-035e-11e9-854f-65e6d6b6e89a.gif)

And in a Layout (rather than Overlay) configuration
```python
points+mean_sel
```
![selection1d_rangexy_layout](https://user-images.githubusercontent.com/15064365/50220011-0a3c2100-035f-11e9-814c-3343c51170d0.gif)

### Testing
There isn't any yet, do you have any suggestions here?  I have't really dug into the bokeh testing code to know if there's an existing approach to testing interactive callbacks.",9,1,[]
780,239554281,3315,19542768,2018-12-18 16:35:19,2018-12-21 00:19:55,closed,Updated various notebooks to use opts,"## User guides

- [x] 04 - Style Mapping
- [x] 05 - Building Composite objects
- [x] 06 - Live Data
- [x] 07 - Tabular Data
- [x] 08 - Gridded Data
- [x] 09 - Indexing and Selecting
- [x] 10 - Transforming Elements
- [x] 12 - Custom Interactivity
- [x] 13 - Data Pipelines
- [x] 14 - Large Data
- [x] 15 - Streaming Data
- [x] 16 - Dashboards
- [x] Network Graphs
- [x] Plotting with Bokeh
- [x] Plotting with Matplotlib
- [x] Colormaps
- [x] Continuous Coordinates
- [x] Geometry data
- [x] Styling Plots
- [x] Linking Plots",2,24,['tag: docs']
781,239485824,3314,19542768,2018-12-18 13:17:38,2018-12-18 14:42:38,closed,Fixed Contours and Polygons hover,"Ensures the hover data is added to the data source.

- [x] Adds unit test
",0,1,"['type: bug', 'tag: backend: bokeh']"
782,239256095,3313,19542768,2018-12-17 19:22:54,2018-12-17 20:12:34,closed,Added examples of .opts.clear() and .opts.show(),Adds documentation for changes from #3292.,2,1,[]
783,239192079,3312,19542768,2018-12-17 15:50:06,2018-12-17 17:41:14,closed,Active tool fix,This is a two-fold fix for an issue with the ``active_tools`` option. First of all it changes the error when a tool listed in `active_tools` is not found to a warning and secondly it drops the styling applied to the stream source on streams which have a element property.,2,2,[]
784,239152938,3310,19542768,2018-12-17 13:56:27,2018-12-17 17:38:37,closed,Improved RGB clipping logic,As suggested in https://github.com/ioam/holoviews/pull/3305 this fixes the clipping logic in bokeh's RGBPlot. It is now identical to the logic used by matplotlib's imshow internally.,1,1,['tag: backend: bokeh']
785,239143164,3309,19542768,2018-12-17 13:24:35,2018-12-17 14:42:56,closed,Fixed bug in HoloMap.hist,The dimension argument was not being forwarded correctly after a recent refactor.,0,1,[]
786,239007531,3308,19542768,2018-12-17 01:52:37,2018-12-17 02:49:11,closed,Fixed zero-sized array issue in bokeh RGBPlot,,0,1,"['type: bug', 'tag: backend: bokeh']"
787,239005336,3307,19542768,2018-12-17 01:24:04,2018-12-17 01:32:22,closed,Minor notebook syntax error,,0,1,[]
788,239004948,3306,19542768,2018-12-17 01:19:03,2018-12-17 01:20:03,closed,Various syntax fixes in notebooks,,0,4,[]
789,238997513,3305,19542768,2018-12-16 23:17:00,2018-12-17 00:07:09,closed,Improved bokeh RGBPlot dtype handling,"This makes the RGB handling in the bokeh backend consistent with matplotlib. There has been some discussion that we should use the value dimension ranges to define the RGB range but a) I would find this very awkward to use and b) it'd be a large backward incompatible change. This PR instead fixes the ``int`` but not ``uint8`` case which was being handled like it was integers. Instead the plot now does what matplotlib does, which is to interpret floats in a 0-1 range and integers in a 0-255 range, anything outside these ranges is clipped.

- [x] Fixes https://github.com/ioam/holoviews/issues/3291",4,1,"['type: bug', 'tag: backend: bokeh']"
790,238996049,3304,19542768,2018-12-16 22:50:08,2018-12-17 00:22:40,closed,Added support for static plotly export,"This was very easy to support and is necessary for us to create gallery thumbnails easily, so I will likely merge this shortly despite the feature freeze.",1,1,['type: feature']
791,238928808,3302,19542768,2018-12-15 19:43:53,2018-12-16 23:17:19,closed,Assorted minor fixes,Minor issues I ran into while trying to build the docs.,0,1,['type: bug']
792,238928723,3301,19542768,2018-12-15 19:41:55,2018-12-17 17:36:59,closed,Add support for literal opts format,"Add support for literal opts format to ``.opts`` method, e.g.:

```
(hv.Curve([1, 2, 3]) * hv.Scatter([1, 2, 3])).opts(
    {'Curve': dict(color='red'), 'Scatter': dict(size=10)})
```

If we are going to be recommending ``.opts`` everywhere we should support the same formats as ``.options`` did. Two users already raised their confusion over this. That doesn't mean we should recommend this now that we have the opts builders, but we should make transitioning as straightforward as possible.

- [x] Implements #3300 ",1,1,['tag: component: options']
793,238920387,3299,19542768,2018-12-15 16:42:17,2018-12-15 19:42:24,closed,Do not use cache if stream is triggering,,0,1,[]
794,238915815,3298,19542768,2018-12-15 15:02:19,2018-12-17 17:40:43,closed,Colormapping and legend fixes for bokeh,Disable label legends when a plot is not overlaid and fix issues with colormapping Bars.,2,3,"['type: bug', 'tag: backend: bokeh']"
795,238912450,3297,19542768,2018-12-15 13:45:13,2018-12-15 14:39:48,closed,Handle datashader regression introduced by cftime handling,,0,1,[]
796,238889478,3296,19542768,2018-12-15 04:06:52,2018-12-15 16:32:09,closed,Do not apply style mapping directly to data source,Currently style mapping in bokeh is applied directly to the datasource. This bypasses code that column lengths do not get out of sync which has the potential to break plots. The style mapping is therefore applied to the data dictionary which is subsequently used to update the data source.,0,6,"['type: bug', 'tag: backend: bokeh']"
797,238886567,3295,19542768,2018-12-15 02:57:10,2018-12-15 14:33:39,closed,Minor docstring and error message fixes,Title says it all.,0,2,[]
798,238826673,3294,19542768,2018-12-14 19:59:25,2018-12-14 20:54:22,closed,Disable item checks when getting plot frames,"This PR fixes a regression on container plots when getting plot frames. The regression was introduced while fixing another bug to do with memoization, and the fix here is simply to disable redundant item checks on an NdMapping. The actual bug is that we are applying a map operation which progressively replaces all HoloMaps and DynamicMaps with the item at a particular key and while it's replacing the items UniformNdMappings may temporarily hold a mixture of HoloMaps/DynamicMaps and ViewableElements, which errors. To fix it we simply suspend these checks using the existing ``item_check`` context manager.

Also had to fix the fact that the ``item_check`` context manager did not fully disable checks.",0,1,[]
799,238795161,3292,19542768,2018-12-14 17:45:18,2018-12-17 19:14:51,closed,Made the opts method into a callable object,The idea is to support `obj.opts.clear()` and `obj.opts.show()`.,2,8,[]
800,238595160,3290,19542768,2018-12-14 02:46:50,2018-12-24 21:44:53,closed,Document usage of Params stream,"This is the final bit of support for using parameterized methods which define dependencies as dynamic inputs. Here is a simple example, which uses a dynamic operation to change the width of a Curve.

```python
class App(param.Parameterized):
    frequency = param.Number(default=3, bounds=(1, 10))

    line_width = param.Number(default=3, bounds=(1, 10))
    
    @param.depends('frequency')
    def load_curve(self):
        return hv.Curve(np.sin(np.linspace(0, 6*self.frequency)))

    @param.depends('line_width')
    def apply_width(self, obj):
        return obj.opts(line_width=self.line_width)
    
    def view(self):
        dmap = hv.DynamicMap(self.load_curve)
        return hv.util.Dynamic(dmap, operation=self.apply_width)
```

Before this a user would have had to do this themselves, i.e. view would have to be either:

```python
def view(self):
   dmap = hv.DynamicMap(self.load_curve)
   return hv.util.Dynamic(dmap, operation=self.apply_width,
                          streams=[ParamMethod(self.apply_width)])
```

or:


```python
def view(self):
   dmap = hv.DynamicMap(self.load_curve)
   return hv.util.Dynamic(dmap, operation=self.apply_width,
                          streams=[Params(self, ['line_width'])])
```

I'll also use this PR to add documentation for the ``Params`` stream.

- [x] Add documentation
- [x] Add unit tests",5,4,['type: enhancement']
801,238585894,3289,19542768,2018-12-14 01:37:00,2018-12-14 21:07:49,closed,Add options to PrettyPrinter,"Adds options to the ``PrettyPrinter``, very much a work in progress but the basics work. 

```
> p1 = hv.Points([1, 2, 3]).opts(color='red')
> c1 = hv.Curve([]).opts(alpha=0.3, xticks=[1, 2, 3])
> print(p1)

:Points   [x,y]
 Options(color='red')

> print(hv.HoloMap({0: c1*p1}))

:HoloMap   [Default]
   :Overlay
      .Curve.I  :Curve   [x]   (y)
       Options(alpha=0.3, xticks=[1, 2, 3])
      .Points.I :Points   [x,y]
       Options(color='red')

> print(p1 + (c1 * p1).opts(xaxis=None))

:Layout
   .Points.I  :Points   [x,y]
    Options(color='red')
   .Overlay.I :Overlay
    Options(xaxis=None)
      .Curve.I  :Curve   [x]   (y)
       Options(alpha=0.3, xticks=[1, 2, 3])
      .Points.I :Points   [x,y]
       Options(color='red')
```

To do:

- [x] Decide on nice formatting
- [x] Parameterize PrettyPrinter to allow toggling between showing options at all and whether to show default options
- [x] Add tests",7,15,"['tag: component: options', 'type: enhancement']"
802,238532151,3287,19542768,2018-12-13 21:06:40,2018-12-14 16:29:04,closed,Added support for backends argument to opts.defaults,In future this might helps us remove all direct uses of option trees.,1,3,[]
803,238453117,3286,19542768,2018-12-13 16:31:13,2018-12-13 20:39:14,closed,Renamed title_format to title throughout,Simple PR that renamed `title_format` to `title` in python code and notebooks.,0,2,[]
804,238397165,3285,19542768,2018-12-13 13:52:34,2018-12-13 21:34:12,closed,Updated Dashboard user guide,Updates dashboard user guide from using parambokeh to using panel.,1,1,['tag: docs']
805,238386694,3284,19542768,2018-12-13 13:18:48,2018-12-14 20:35:47,closed,Fixes for matplotlib colormapping,"Several fixes for matplotlib colormapping:

* Colormapping elements that support fill does not override edgecolor
* Label the colorbar correctly
* Fixed bug colormapping Contours/Polygons",1,4,"['type: bug', 'tag: backend: mpl']"
806,238179282,3283,19542768,2018-12-12 20:55:28,2018-12-12 23:42:06,closed,Aliased 'title_format' parameter to 'title',Hopefully a simple PR. If the tests pass after the first commit I can update the tests and then the notebooks.,2,5,[]
807,238094150,3281,19542768,2018-12-12 16:11:20,2018-12-13 03:24:04,closed,Updated matplotlib gallery examples,Also includes some minor updates to bokeh examples where I found I could simplify things using newer features e.g. ``dim`` transform style mappings.,1,2,['tag: docs']
808,237842990,3279,19542768,2018-12-11 22:04:26,2018-12-14 16:55:43,closed,Updates to the getting started guide notebooks,"This PR fixes a number of issues in the getting started guide notebooks but is primarily about getting rid of the magics and using `%%opts`. Most of the changes are in the customization and gridded data guides.

- [x] Update the gifs in the Live Data notebook.",17,23,[]
809,237821153,3278,19542768,2018-12-11 20:44:36,2018-12-14 16:29:46,closed,Plotly dynamic map fixes,"In the process of working on `Selection1D` stream support to the plotly backend, I've hit a couple of issues with updating plotly figures inside a DynamicMap.

Setup:
```python
# Imports
import numpy as np
import holoviews as hv
from holoviews.streams import Stream
import param
hv.extension('plotly')

# Data
data = np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (100,))

# Stream
Inds = hv.streams.Stream.define('Inds', index=param.List(default=[]))
inds = Inds(index=[1, 2, 3])

# Points Element
points = hv.Points(data).options(color='gray')

# Dynamic map the generates a single point at mean of indexes provided by the stream
def mean_point(index):
    if index:
        means = data[index, :].mean(axis=0)
        return hv.Points([means]).options(size=12, color='red')
    else:
        return hv.Points([])
mean_sel = hv.DynamicMap(mean_point, kdims=[], streams=[inds])
```

**Case 1)** DynamicMap of single `hv.Points` element

```python
mean_sel
```
![newplot 26](https://user-images.githubusercontent.com/15064365/49827994-baef6280-fd58-11e8-89b0-bc19177d862c.png)

**Case 2)** DynamicMap of overlay of two `hv.Points` elements
```python
points * mean_sel
```
![newplot 27](https://user-images.githubusercontent.com/15064365/49828040-db1f2180-fd58-11e8-84b6-75b85a518525.png)

**Case 3)** DynamicMap of `Layout` of two `hv.Points` elements side-by-side
```python
points + mean_sel
```
![newplot 28](https://user-images.githubusercontent.com/15064365/49828110-0d308380-fd59-11e8-8139-d9a80df02c59.png)

Here the stream was initialized to the list `[1, 2, 3]` and all three cases display properly initially.  Now, update the stream with:

```python
inds.event(index=[4, 5, 6])
```

Prior to this PR, only the output of case 1 would update.  Case 2 and Case 3 remained unchanged. 

**Summary of changes:**
I'm operating at the edge of my understanding of HoloViews' internals here, so I'd appreciate any help on identifying if there are better ways to tackle these issues.

 - Case 2 was fixed by fe95392. Basically the overlay plot layers weren't being regenerated when the overlay plot's `generate_plot` method is called.
 - Case 3 was partially fixed by 19c1320.  A comm was not being created for the plotly LayoutPlot at all, so I pulled a few lines from the constructor of the Bokeh LayoutPlot to do this.  

The other problem with Case 3, and the part I understand the least, is that the subplots were not being regenerated when the LayoutPlot's `refresh` method was called.  I overrode `refresh` and added an explicit call to `initialize_plot` before calling the superclass method in 206b67d.  With this change the plots in case 3 do update when the stream is updated.  But a new problem is that the `mean_point` function ends up being called twice each time the stream is updated.

Thanks for any help on this 🙂  Once we get this worked out, I think I'm pretty close to having `Selection1D` stream support working!",12,12,[]
810,237683600,3275,19542768,2018-12-11 13:42:22,2018-12-12 16:03:31,closed,Make matplotlib's BarPlot consistent with other backends,"Fixes bug in matplotlib BarPlot where Bars are not correctly aligned with ticks.

Broken:

![download 21](https://user-images.githubusercontent.com/1550771/49804485-8a083100-fd4a-11e8-887d-19879eb04d6d.png)

Fixed:

![download 20](https://user-images.githubusercontent.com/1550771/49804482-883e6d80-fd4a-11e8-9312-9db6ddb456bd.png)
",3,4,"['type: bug', 'tag: backend: mpl']"
811,237537897,3273,19542768,2018-12-11 03:17:30,2018-12-11 04:29:26,closed,Pass through bokeh examples gallery renaming .options to .opts,"Continues on from #3188, updating the bokeh gallery examples to use our most recent recommendations for options (mostly turning `.options` into `.opts`).

I will note that `point_draw_triangulate.ipynb` seems to lose the toolbar when switching to `.opts` but I believe @philippjfr is currently working on a fix for that.",2,1,[]
812,237536330,3272,19542768,2018-12-11 03:06:10,2018-12-11 14:26:53,closed,Fixes for opts method,"Fixes two bugs:

* ``img.opts(opts.Image(cmap='viridis'), clone=False)`` was incorrectly recognized as the old signature
* ``DynamicMap.opts`` did not correctly copy stream sources. ",2,3,"['type: bug', 'tag: component: options']"
813,237469266,3270,19542768,2018-12-10 21:18:08,2018-12-11 01:14:28,closed,Updates to matplotlib element references to use opts,,3,6,['tag: docs']
814,237366232,3269,19542768,2018-12-10 15:42:15,2018-12-11 00:33:10,closed,Update of bokeh reference gallery notebooks,This PR will update the Bokeh reference gallery. Hopefully it can serve as a template for updating the matplotlib and bokeh reference galleries making those changes quicker to implement.,4,7,[]
815,237355416,3268,19542768,2018-12-10 15:13:34,2018-12-10 17:56:32,closed,Refactored GraphPlot and fixed renderer ordering,"This PR refactors the ``GraphPlot._init_glyphs`` method so it is a bit less unwieldy and then adds a method which reorders the renderers on the plot depending on the defined ``draw_order``.

- [x] Adds unit tests

Before:

![image 1](https://user-images.githubusercontent.com/1550771/49741312-0e48ae80-fc8e-11e8-84d6-c62192d81a31.png)

After:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/49741339-1e608e00-fc8e-11e8-849b-10362d13bda6.png)
",1,1,"['type: bug', 'tag: backend: bokeh']"
816,237094044,3267,19542768,2018-12-08 22:04:23,2018-12-09 01:31:00,closed,Fixed issue with Selection1D on Table,"Fixes issue instantiating callbacks on Table.

- [x] Adds unit tests",0,1,"['type: bug', 'tag: backend: bokeh']"
817,236977433,3263,19542768,2018-12-07 19:57:53,2018-12-08 20:31:32,closed,Allow Path elements with single item,- [x] Add unit tests,6,10,"['tag: component: data', 'type: enhancement']"
818,236917882,3262,19542768,2018-12-07 16:11:41,2018-12-07 22:39:24,closed,Additional fixes and tests for updated .opts method,"This PR follows on from #3257. Once this is merged, the work will be on updating the docs.",1,7,"['type: bug', 'tag: component: options']"
819,236629323,3261,19542768,2018-12-06 18:33:22,2018-12-06 18:33:28,closed,Minor fix for Link lookups,Straightforward fix for Link lookups where the target is None.,0,1,[]
820,236403596,3260,19542768,2018-12-06 04:21:23,2019-01-11 06:18:46,closed,Updated to param 2.0 API,"Methods updated:

- [x] debug
- [x] defaults
- [x] force_new_dynamic_value
- [ ] get_param_values
- [x] get_value_generator
- [x] inspect_value
- [x] message
- [ ] params
- [ ] pprint
- [x] print_param_defaults
- [x] print_param_values
- [x] script_repr
- [x] set_default
- [x] set_dynamic_time_fn
- [x] set_param
- [x] state_pop
- [x] state_push
- [x] verbose
- [x] warning",7,1,[]
821,236299281,3259,19542768,2018-12-05 19:44:21,2018-12-05 21:06:01,closed,Fixed missing static attribute on DivPlot,,0,1,"['type: bug', 'tag: backend: bokeh']"
822,236247666,3257,19542768,2018-12-05 16:51:35,2018-12-07 13:23:39,closed,Miscellaneous fixes to opts validation,Fixes `opts.defaults` and enables cross-backend validation in the `hv.opts` completers.,4,21,[]
823,235670979,3256,19542768,2018-12-04 03:50:57,2018-12-11 05:27:04,closed,Refactored plotly backend,"Cleanup and refactoring of the plotly backend.

- [x] Adds Path3D element https://github.com/ioam/holoviews/issues/2453
- [x] Consistently handles ``invert_axes`` and ``invert_x/y/zaxis`` options
- [x] Adds support for ``xticks``/``yticks``/``zticks``
- [x] Ports basic dim transforms to plotly backend
- [x] Updates TablePlot to trace type
- [x] Adds ``LabelPlot``, ``AreaPlot``, ``SpreadPlot``, ``ViolinPlot``
- [x] Adds unit tests for element plot classes
- [x] Add documentation for plotly containers
- [x] Added/updated element reference notebooks",7,33,"['tag: component: plotting', 'type: enhancement']"
824,235645336,3255,19542768,2018-12-04 01:03:18,2018-12-04 02:44:28,closed,New subplot foundation for Plotly backend,"## Overview
This PR introduces a new foundation for combining plotly elements into a figure.

## Background
Currently, the plotly backend makes use of the `plotly.tools.make_subplots` function to support laying out multiple elements in a single plotly figure.  This function is pretty flexible when working with Cartesian trace types, but it has limited support for 3D traces and no support for other trace types. Additionally, it cannot be used recursively so it's not possible to use `make_subplots` to build a `GridSpace` figure and then `make_subplots` again to layout multiple `GridSpace` views in a single figure.

## PR Notes
There is a pretty detailed commit log, but here are the two top-level goals:

### Replace `make_subplots` with `figure_grid`
This PR replaces the use of `make_subplots` with a new `figure_grid` function.  This function inputs a 2D list of figure `dict` instances, along with optional spacing arguments, and returns a new figure that is the combination of all of the input figures.  It handles all plotly trace types along with annotations, shapes, and images that are specified in Cartesian axis coordinates.  It also works fine recursively, so it is now possible to, for example, layout a `GridSpace` next to a `HoloMap`.

I may eventually try to roll this functionality into plotly.py directly, but it would need to be a lot more general, so I'd rather start in Holoviews where we have control over how figures are constructed.

### Replace `graph_objs` with `dicts` at the `Element` level
This PR also changes the elements and layouts to work with `dict` instances rather than `graph_objs` instances. The `graph_objs` in version 3+ perform a lot more validation than in version 2, which is great when a user is directly building their own figure but it does have a performance cost.  For a system like Holoviews that is performing lots of iterative construction, I think it's better to build up the figure using raw `dict` and `list` instances and then convert it to a `graph_objs.Figure` object for validation just before rendering.

I'm not sure if this was the best place for it, but I added the step to convert the figure `dict` to a `Figure` instance to the `_figure_data` method of `PlotlyRenderer`.

## Usage highlights
Here are some examples of layouts that did not work previously

### 3D plots in a layout
```python
import numpy as np
import holoviews as hv
hv.notebook_extension('plotly')

y,x = np.mgrid[-5:5, -5:5] * 0.1
heights = np.sin(x**2+y**2)
scatt3d = hv.Scatter3D(zip(x.flat,y.flat,heights.flat))
scatt3d+scatt3d.options(color_index=2, size=5, cmap='fire')
```
![newplot 11](https://user-images.githubusercontent.com/15064365/49410227-ec9d7380-f731-11e8-97bb-9e7c21725f76.png)

### Tables in a layout
```python
import holoviews as hv
hv.extension('plotly')

gender = ['M','M', 'M','F']
age = [10,16,13,12]
weight = [15,18,16,10]
height = [0.8,0.6,0.7,0.8]

table = hv.Table((gender, age, weight, height), ['Gender', 'Age'], ['Weight', 'Height'])
table.select(Gender='M') + table.select(Gender='M', Age=10)
```
![newplot 12](https://user-images.githubusercontent.com/15064365/49410280-15256d80-f732-11e8-8cdc-4acc07a845c5.png)

Note: I still want to replace this `figure_factory` table with the plotly table trace, but using the figure factory implementation here shows how annotations are merged and maintained successfully.

### GridSpace inside a layout
```python
import numpy as np
import holoviews as hv
hv.extension('plotly')

def sine_curve(phase, freq):
    xvals = [0.1* i for i in range(100)]
    return hv.Curve((xvals, [np.sin(phase+freq*x) for x in xvals]))

phases      = [0, np.pi/2, np.pi, 3*np.pi/2]
frequencies = [0.5, 0.75, 1.0, 1.25]
curve_dict_2D = {(p,f):sine_curve(p,f) for p in phases for f in frequencies}

gridspace = hv.GridSpace(curve_dict_2D, kdims=['phase', 'frequency'])
hmap = hv.HoloMap(gridspace)
hmap + hv.GridSpace(hmap)
```
![gridspace_hmap](https://user-images.githubusercontent.com/15064365/49410146-903a5400-f731-11e8-89f5-f71c1a1ba019.gif)

Note that the `GridSpace`s shared x-axes and y-axes are maintained when placed inside a larger layout.

## Performance
The plotly backend had felt a bit sluggish to me compared to bokeh and matplotlib, but with these changes it's much faster that it was, and faster than the other backends in some cases.  I'm not sure how to time this exactly, but here's a GIF of the display time for a layout of two 4x4 `GridSpace`s using each backend

![gridspace_performance](https://user-images.githubusercontent.com/15064365/49410948-fecce100-f734-11e8-8b8c-8f6d8784e8fb.gif)

Thanks for taking a look, and please let me know if you have any questions!

",9,11,['type: feature']
825,235610173,3254,19542768,2018-12-03 22:10:59,2018-12-04 03:21:45,closed,Ensure Link is idempotent,"- [x] Fixes https://github.com/ioam/holoviews/issues/3253
- [x] Adds unit test",1,5,[]
826,235591417,3252,19542768,2018-12-03 21:03:19,2018-12-03 23:02:29,closed,Removed trailing whitespace in the core,Title says it all.,0,1,[]
827,235476742,3251,19542768,2018-12-03 14:57:46,2018-12-07 16:13:44,closed,Add ability to set active tools,"This PR provides control over the active tools on a plot via the ``active_tools`` option which should be a list of tools that will be activated. The list can be specified as strings or as the tool instances being activated.

Note that currently bokeh does not allow setting active tools for a merged toolbar, so for the option to work on a Layout or Grid the ``merge_tools`` option has to be disabled.

- [x] Fixes https://github.com/ioam/holoviews/issues/2730
- [x] Adds unit tests
- [x] Updates existing example to make use of the option",1,3,"['type: feature', 'tag: backend: bokeh']"
828,235459803,3250,19542768,2018-12-03 14:09:00,2018-12-03 15:48:59,closed,Tutorial typo fix (due to renaming?),"I've been going through this tutorial and spotted this.
I think this fixes a small typo in the ""responding to events"" tutorial: `crosshairs` must have been renamed to `markers` earlier, because at that point in the tutorial, no object with this name has been introduced.",1,1,['tag: docs']
829,235294259,3249,19542768,2018-12-02 23:30:03,2018-12-03 18:22:41,closed,Support linking DynamicMaps,"Reuses the logic used for finding stream sources to find Link sources.

- [x] Fixes https://github.com/ioam/holoviews/issues/3248
- [x] Adds unit test",1,2,['type: enhancement']
830,235285290,3247,19542768,2018-12-02 21:07:31,2018-12-24 19:07:43,closed,Improve comm message handling (reopened),"Reapplies https://github.com/ioam/holoviews/pull/3233

This PR makes a number of improvements to comm message handling. To summarize:

* Avoids bokeh registering a comm handler avoiding bokeh raising warnings outside a notebook environment
* Reuses the bokeh_msg_handler from pyviz_comms avoiding code deduplication
* Updates the widget based message handler to support changes made in pyviz/pyviz_comms#26

DO NOT MERGE UNTIL pyviz_comms has been released and we're about to release holoviews 1.11",0,3,[]
831,235285100,3246,19542768,2018-12-02 21:04:36,2018-12-02 21:40:40,closed,Fixed bare axis option in bokeh,"- [x] Fixes https://github.com/ioam/holoviews/issues/3243
- [x] Adds unit tests",0,1,"['type: bug', 'tag: backend: bokeh']"
832,235278129,3242,19542768,2018-12-02 19:10:16,2018-12-03 00:56:38,closed,Fixed nested categorical sort order,"A recent PR forced nested categorical axes to be sorted, this is to avoid a bug in bokeh where the boundaries between categories are situated incorrectly if the categories are not sorted. The sorting that was implemented was applied after the categories were cast to strings causing wrong sort order for numeric values.",0,2,"['type: bug', 'tag: backend: bokeh']"
833,235275493,3241,19542768,2018-12-02 18:23:19,2018-12-02 18:26:29,closed,"Revert ""Improve comm message handling""","I hit merge when I shouldn't have. Sorry!

Reverts ioam/holoviews#3233",1,1,[]
834,235237220,3240,19542768,2018-12-02 04:39:53,2018-12-03 21:11:16,closed,Improved linking of axis ranges,"This PR makes two improvements:

1) Instead of having custom logic to compute custom axis labels for some plots it consistently computes the axis labels from dimensions. This also fixes various plots that did not implement the xlabel/ylabel options correctly.

2) It improves/fixes the logic which enables shared axes in bokeh, previously it was matching only on the label, which no longer works if a user defines a custom xlabel/ylabel and automatically links dimensions with identical labels but different names (which has forced us to use terrible Histogram/Distribution axis labels).

The new approach uses the bokeh tags property to define a tuple spec on the axis range, which other plots can then match on. Currently the spec consists of the (name, label) of the dimensions the axis range is drawn from. @jlstevens @jbednar Let me know if these semantics for linking axes make sense to you or if for example it should also match on the unit.

- [x] Add some docstrings
- [x] Add unit tests
- [x] Make Histogram/Distribution y-axis labels sane again (and fix https://github.com/ioam/holoviews/issues/3093)",6,12,['tag: backend: bokeh']
835,235205827,3239,19542768,2018-12-01 17:25:34,2018-12-01 22:39:21,closed,Fixed rendering of whiskers on BoxWhisker,- [x] Fixes https://github.com/ioam/holoviews/issues/2203,0,2,"['type: bug', 'tag: backend: bokeh']"
836,235202580,3238,19542768,2018-12-01 16:28:39,2018-12-01 19:00:47,closed,Fixed bug triggering update to Graph datasource,- [x] Fixes https://github.com/ioam/holoviews/issues/2889,0,1,"['type: bug', 'tag: backend: bokeh']"
837,235202119,3237,19542768,2018-12-01 16:19:59,2018-12-01 17:41:39,closed,Fixed documentation of bounds format,- [x] Fixes https://github.com/ioam/holoviews/issues/3165,0,1,['tag: docs']
838,235200239,3236,19542768,2018-12-01 15:44:43,2018-12-01 20:34:30,closed,Skip tests if dependency not available,,0,2,['tag: component: testing']
839,235197630,3235,19542768,2018-12-01 14:55:08,2018-12-03 18:16:41,closed,Avoid erroring when aggregating on non-numeric columns,"- [x] Fixes https://github.com/ioam/holoviews/issues/2350
- [x] Adds unit test",4,2,['tag: component: data']
840,235193535,3234,19542768,2018-12-01 13:28:31,2018-12-02 18:35:12,closed,Allow overlaying Layout with element or HoloMap,"This PR allows overlaying a Layout with an element, overlay or HoloMap.

- [x] Implements https://github.com/ioam/holoviews/issues/2596",6,3,['type: enhancement']
841,235190183,3233,19542768,2018-12-01 12:18:49,2018-12-02 18:19:00,closed,Improve comm message handling,"This PR makes a number of improvements to comm message handling. To summarize:

* Avoids bokeh registering a comm handler avoiding bokeh raising warnings outside a notebook environment
* Reuses the ``bokeh_msg_handler`` from pyviz_comms avoiding code deduplication
* Updates the widget based message handler to support changes made in https://github.com/pyviz/pyviz_comms/pull/26",7,3,[]
842,235107390,3232,19542768,2018-11-30 20:32:09,2018-12-01 10:20:07,closed,Skip empty stream callbacks,"This fix seems correct to me, i.e. I see no reason why an empty message received by a callback should trigger a stream event even if that stream is declared transient, but maybe I'm just missing something. The skipping and the exception for transient streams was made here https://github.com/ioam/holoviews/pull/1350 but I can't see any reference to the reasoning behind making an exception for transient streams.",1,1,[]
843,235087227,3231,19542768,2018-11-30 19:12:32,2018-12-03 15:03:44,closed,Add support for legends when using categorical color mapping,The ``color_index`` options automatically added a legend for categorical mappings so this enables the same behavior.,0,3,"['tag: backend: bokeh', 'tag: component: plotting']"
844,235004441,3229,19542768,2018-11-30 14:26:51,2018-11-30 20:13:32,closed,Clip Pointer stream bounds,"The pointer and tap streams sometimes fire even when outside the plot area. We avoided this by clipping the values in a JS callback but the JS callback is never executed on bokeh server so this PR adds conditional code to ensure that the positions are clipped on bokeh server as well.

- [x] Fixes https://github.com/ioam/holoviews/issues/3145",1,3,[]
845,234826562,3228,19542768,2018-11-29 23:51:45,2018-11-30 14:23:50,closed, Fixed regression in datetime key handling on Widgets,,0,4,['tag: component: plotting']
846,234658315,3225,19542768,2018-11-29 14:30:00,2018-11-29 15:23:06,closed,Fixed initialization of scrubber widget,Fixes a regression introduced recently when I fixed initialization of the SelectionWidget.,1,1,[]
847,234642911,3224,19542768,2018-11-29 13:44:59,2019-07-26 08:25:08,closed,Consistently renamed to PyViz global object,"Completes the renaming from the HoloViews global object to PyViz.

Linked to https://github.com/pyviz/pyviz_comms/pull/24",5,1,[]
848,234401508,3222,19542768,2018-11-28 19:44:47,2018-11-28 22:19:34,closed,Fixed Spline.clone and added docstrings,"- [x] Fixes https://github.com/ioam/holoviews/issues/3200
- [x] Add unit test",2,1,['type: bug']
849,234376494,3221,19542768,2018-11-28 18:14:18,2018-11-28 23:01:22,closed,Add dilate kwarg to heatmap,"Closes https://github.com/ioam/holoviews/issues/3220

Indeed my test is not very useful, let me know if I should remove it",4,3,[]
850,234334212,3219,19542768,2018-11-28 16:07:12,2018-11-28 19:26:29,closed,Install plotly from conda-forge,"The more channels are used to specify an environment the longer it takes to resolve the dependencies so this switches plotly back to the conda-forge channel.

I've also added the testing modules to setup.py in this PR so other libraries can run the tests against our releases (e.g. bokeh).",1,3,['tag: component: testing']
851,234328417,3218,19542768,2018-11-28 15:52:27,2018-11-29 12:28:10,closed,Ensure 3d elements are initialized with 3D projection,- Fixes https://github.com/ioam/holoviews/issues/3216,0,1,"['type: bug', 'tag: backend: mpl']"
852,234297820,3217,19542768,2018-11-28 14:32:12,2018-11-29 19:55:15,closed,Stream and Link are inherited on clone,"A highly confusing issue has meant that whenever you attach a Stream or Link to an element and subsequently apply some method to it, e.g. ``.relabel``, ``.redim``, ``.options`` etc., it becomes unlinked. This behavior is extremely confusing and routinely catches even me out even though I'm fully aware of the issue.

In the  case of linking a DynamicMap we had already solved this issue via the ``link_inputs`` parameter on the ``Callable``. This solution is complementary to what is being proposed here, but this PR standardizes linking behavior by adding a ``link`` argument to all ``clone`` methods. This controls both the ``link_inputs`` behavior of a DynamicMap and controls whether an element remains linked. I haven't touched the way links on Stream and Link classes are actually stored as the current arrangement allows garbage collection to occur properly, therefore I've only changed how a linked Stream or a Link is looked up. The required changes are therefore fairly minimal, but I believe this will provide a huge improvement to usability.

There is some risk that a user might accidentally end up with multiple links in their plots, but I'm quite certain this would only occur if they use cloned elements in unorthodox ways and they always have the option to unlink. The benefit therefore hugely outweighs the risk because currently you have to structure your code in very awkward ways or know about things like ``.options(..., clone=False)`` if you want to ensure your element stays linked.",3,2,['type: enhancement']
853,234275693,3215,19542768,2018-11-28 13:26:52,2018-11-28 15:42:39,closed,Do not expand scalar style options,"As part of the style mapping PR I added some code that expands the ``color`` and ``alpha`` options to ``fill_color``/``fill_alpha`` and ``line_color``/``line_alpha``. This should however only apply for actual style mapping while currently it also applies to scalar options, which in some cases overrides the desired styling.

Before the fix:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/49154777-3db3fe80-f311-11e8-9687-333fd15fd5dd.png)

With the fix:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/49154738-29700180-f311-11e8-8f0e-c7b5cbfd935e.png)
",1,1,"['type: bug', 'tag: backend: bokeh']"
854,234140746,3214,19542768,2018-11-28 04:01:48,2018-11-28 04:16:06,closed,Make FAQ more consistent,"Before fix:
![image](https://user-images.githubusercontent.com/15331990/49128235-44923100-f27f-11e8-8bc4-d8e8d283b021.png)

After fix:
![image](https://user-images.githubusercontent.com/15331990/49128274-6ab7d100-f27f-11e8-92f1-7e2d089e8df1.png)
",1,1,[]
855,234137959,3213,19542768,2018-11-28 03:42:10,2018-11-28 21:16:17,closed,Fixed DataLink comparison on lists,"Fixes issue with DataLink described in https://github.com/ioam/holoviews/pull/3188.

- [x] Adds unit test",2,5,"['type: bug', 'tag: backend: bokeh']"
856,234066848,3211,19542768,2018-11-27 21:30:38,2018-11-28 02:54:13,closed,Implement mul for overlay * holomap,Attempting to fix the issues in #3208 and #3210 - there was a submodule update in those PRs that may have been intentional but may also have been accidental (explaining the issue).,0,3,[]
857,234025102,3210,19542768,2018-11-27 19:01:45,2018-11-27 23:37:23,closed,Fixed HoloMap/Overlay mul,Supercedes #3208 because that had weird issues with submodules on travis.,0,1,[]
858,234016865,3208,19542768,2018-11-27 18:32:53,2018-11-27 19:01:52,closed,Implement mul for overlay * holomap,"I'm a bit perplexed that this wasn't implemented already but it's a pretty straightforward addition.

- [x] Add unit test",1,1,[]
859,233996554,3206,19542768,2018-11-27 17:23:04,2018-11-27 18:56:51,closed,Fixed handling of Link targets,Since Links now use a weakrefdict to store handles on the source and target objects it is possible for the reference to be deleted before the plot is instantiated. In cases like that the plots should not attempt to instantiate the link callback.,3,1,['type: bug']
860,233902182,3204,19542768,2018-11-27 13:00:47,2018-11-27 17:38:43,closed,Fixed sorting issues in HoloMap export,"- [x] Fixes https://github.com/ioam/holoviews/issues/3182
- [x] Adds unit test",1,2,['type: bug']
861,233773888,3203,19542768,2018-11-27 04:10:51,2018-12-01 15:36:01,closed,Unlimit vdims,"To make https://github.com/pyviz/geoviews/pull/253 work

Not irregular is now implemented:
![image](https://user-images.githubusercontent.com/15331990/49061054-b2c5ed80-f1c4-11e8-8773-e140a46bfa14.png)

Still working on irregular",1,4,[]
862,233772100,3202,19542768,2018-11-27 03:57:43,2018-12-04 04:05:09,closed,A number of smaller fixes,"This PR contains a number of small fixes that have accumulated in my stash.

- [x] Fixes https://github.com/ioam/holoviews/issues/3226",2,8,[]
863,233732893,3201,19542768,2018-11-26 23:41:14,2018-11-27 05:40:50,closed,Improve dim transform repr and add further operators,"This PR improves the repr of ``dim`` transform to ensure it is in most cases fully usable. It also adds support for further operators and numpy functions.

Here's a mixture of unary operators (``-``), binary operators (``*`` and ``+``), numpy ufuncs (``np.log``), and ndarray methods (``min``): 

```python
> np.log(-dim('A')*3+3).min()

np.log((-dim('A')*3)+3)).min()
```

And here's an example using one of some of the custom functions (``norm`` and ``categorize``):

```python
> (dim('y').norm()>0.5).categorize({False: 'red', True: 'blue'})

(dim('y').norm()>0.5).categorize(categories={False: 'red', True: 'blue'}, empty=None)
```",3,7,['type: enhancement']
864,233673314,3199,19542768,2018-11-26 19:39:28,2018-11-27 11:00:06,closed,Fixed broken links and typos,Fixes issues raised by Adam McLaughlin.,2,1,[]
865,233635023,3198,19542768,2018-11-26 17:17:11,2018-11-26 19:38:01,closed,Minor fixes for gridstyle and formatter options,The formatter options weren't being propagated and the gridstyle visible option was not being processed correctly.,2,3,"['tag: component: plotting', 'tag: component: options']"
866,233413991,3197,19542768,2018-11-26 00:53:24,2019-08-17 11:35:25,closed,Implement datetime selections as strings and datetimes,Closes https://github.com/ioam/holoviews/issues/886,6,8,['type: feature']
867,233400729,3195,19542768,2018-11-25 21:06:15,2018-11-26 01:03:36,closed,Fixed Path hover issues,Closes https://github.com/ioam/holoviews/issues/2872,1,1,['type: bug']
868,233339120,3194,19542768,2018-11-24 20:42:55,2018-11-25 13:25:53,closed,Update plotly backend to support plotly.py version 3,"This PR updates the plotly backend to be compatible with (and require) plotly.py version 3.4+.  This closes https://github.com/ioam/holoviews/issues/2864.

I left a detailed commit trail explaining the updates, but let me know if you have any questions! For more background, see the plotly.py [version 3 migration guide](https://github.com/plotly/plotly.py/blob/master/migration-guide.md).",5,15,[]
869,233301365,3193,19542768,2018-11-24 05:06:57,2018-11-25 18:28:40,closed,Unlimit the vdim bounds and add ability for additional vdim hover,"```
import xarray as xr
import holoviews as hv
hv.extension('bokeh')

ds = xr.Dataset({'int_': (('x', 'y'), [[0, 1], [2, 3]]), 'str_': (('x', 'y'), [['zero', 'one'], ['two', 'three']])})
hv.Image(ds, ['x', 'y'], ['int_', 'str_']).options(tools=['hover'])
```

![image](https://user-images.githubusercontent.com/15331990/48964763-895a5700-ef63-11e8-8a10-76332048f1c3.png)

Let me know if there needs to be some changes (especially the l, b, dw, dh part; I only took a quick glance at it) or feel free to make changes directly!

Issue was opened in wrong repo:
https://github.com/pyviz/geoviews/issues/242",2,2,[]
870,233098166,3192,19542768,2018-11-23 03:02:33,2018-11-23 15:41:55,closed,Implemented continuous style mapping for Paths,"Followup on the recent PR to support mapping styles. In that PR I had not yet implemented style mappings for continuously varying paths.

Here is an example of a continuously colormapped, alpha-mapped, and linewidth-mapped path:

![screen shot 2018-11-23 at 3 01 30 am](https://user-images.githubusercontent.com/1550771/48927233-29fd3800-eecc-11e8-9738-845ba1cb09ee.png)

- [x] Add unit tests
- [x] Update existing continuous colormapping example",1,5,"['tag: component: plotting', 'type: enhancement']"
871,232727806,3188,19542768,2018-11-21 16:32:22,2018-11-29 00:51:38,closed,Helper methods for updating options syntax,This PR aims to offer a few useful tools that will make it easier to start using the new options syntax introduced in #3173. Currently the API is quite simple - see the unit tests for examples.,25,31,[]
872,232067253,3186,19542768,2018-11-19 18:15:14,2018-11-20 00:53:54,closed,Fixed conversion of Pandas Timestamp to integer for Bokeh,"- Reverts #3075 which effectively drops support for datetime types entirely
- Use [`pandas.Timestamp.timestamp`](https://pandas.pydata.org/pandas-docs/version/0.23.4/generated/pandas.Timestamp.timestamp.html#pandas.Timestamp.timestamp) to convert to a POSIX timestamp, which will handle timezone conversions to fix #2857 and also support millisecond precision in Timestamps

Closes #3167 ",1,2,[]
873,231729854,3181,19542768,2018-11-17 14:08:32,2018-11-17 17:29:49,closed,Correctly pin python version on travis,,0,1,[]
874,230285520,3173,19542768,2018-11-12 22:16:01,2018-11-17 00:33:16,closed,Replacement for cell magic with tab-completion,"Work in progress to address #3095. I'm mostly happy with this approach, illustrated here:

![image](https://user-images.githubusercontent.com/890576/48378173-9e96d200-e695-11e8-809e-6c77517ec75d.png)

### Notes:

* This is *not* an exact replacement for `%%opts` unless you use `clone=False`. The magics set options on the displayed object, not a clone of it.
* This is still the line magic equivalent to `%opts Curve (color='k')`:

```
    opts(""Curve (color='k')"") # Or equivalently
    opts({'Curve': {'style': {'color':'k'}}})
```
* This is still the more *direct* cell magic equivalent (without tab-completion) to
   `%%opts Curve (color='k')`:
```
    curve = hv.Curve([1,2,3])
    opts(""Curve (color='k')"", curve) # Or equivalently
    opts({'Curve': {'style': {'color':'k'}}}, curve)
```
* `opts` can now tab-complete *all possible options* if you *only* use keywords, returning an `Option` object.
* `Option` objects have been enhanced with improved validation and reprs (and can now take something like `Curve.Group.Label` as a key.
* Switching the backend updates the completer objects (and the docstrings needed for tab-completion)
* The `opts` entries do not exist until a backend is loaded.
* There is a minor API change to `.options` as you can no longer set `backend` as a positional argument.

### TODO:

* [x] Check `set_current_backend` is used correctly throughout.
* [x] Fix setting the `opts` class docstring so it isn't clobbered.
* [x] Move the merge option utility out of the parser.
* [x] Unit tests.
* [x] Post an ad hoc script to demonstrate automated conversion from cell magics. **[Would be nice, doesn't have to be in this PR though]**
* [x] Update docs and new docs **[To be done in the next PR]**

### Decisions to make **[We can address these in the docs update PR]**:

* [x] Qualified imports always or can we make `opts` available in the namespace of examples? (I vote yes) 
* [x] Default name for the list of `Option` objects (I think `options` isn't bad but a bit long)
* [x] Improve the API of `Options` now it is more user facing than before? i.e make some methods private? Should we document any of the methods/properties at all? Are they useful (e.g the `cyclic` predicate?)",14,35,[]
875,229895092,3168,19542768,2018-11-10 15:29:29,2018-11-10 18:31:26,closed,Ensure changing CDS columns do not trigger errors,"In https://github.com/ioam/holoviews/pull/3158 I made a change to the way bokeh events are handled, which sent each bokeh model change as a separate event and thereby avoided an error triggered by one event breaking a plot irreparably because subsequent errors would be ignored. Unfortunately that change introduced a noticeable delay between a CDS data and color mapper ranges being updated, resulting in undesirable flicker on updates. It was also a bit of a hack around the actual issue because the underlying issue would still trigger errors. This PR reverts that change and fixes the underlying problem.

It does this through a fairly involved change, so I'll step through it slowly:

1. It detects whether a glyph dataspec references a CDS.data column which does not yet exist
2. If this is the case it triggers a new ModelChangedEvent which replaces the data with empty columns which do contain the new column(s) and the old column(s)
3. Once the glyph has been updated to reference the new column(s), it sends another event containing the actual data ",1,6,"['type: bug', 'tag: backend: bokeh']"
876,229734461,3166,19542768,2018-11-09 15:46:10,2019-01-29 00:30:47,closed,add appveyor build test,"@philippjfr 

#3162
> That said in the long term we should set up CI tests on Windows.

I made an initial appveyor.yml script to run tests on windows.
[Example of one build](https://ci.appveyor.com/project/xavArtley/holoviews/builds/20177641)

Tests ends with errors.
Some are specific to windows  <class 'numpy.int32'> != <class 'numpy.int64'>
Others I don't know.


",5,3,['tag: component: testing']
877,229571438,3164,19542768,2018-11-09 02:39:43,2018-11-22 20:06:03,closed,Added support for indicating directionality on Graphs,"Adds support for arrows on Graph edges to allow indicating directionality of graphs. uses same trick as VectorField to render the arrows.

- [x] Closes https://github.com/ioam/holoviews/issues/2521
- [x] Add gallery example
- [x] Add section to networks user guide

Simple example:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/48239921-acfc9980-e3c8-11e8-87ad-50440fa38ac8.png)

Real data example:

![bokeh_plot](https://user-images.githubusercontent.com/1550771/48239902-96eed900-e3c8-11e8-8682-02670ed95943.png)
",2,3,['type: enhancement']
878,229461071,3163,19542768,2018-11-08 18:12:21,2018-11-08 19:02:55,closed,Removing redundant call to `gaussian_kde`,There are only two ways the procoess can go forth. Either `kde` is set correctly to the return value of `stats.gaussian_kde` or there's an exception and the function `return`s. The second call to `stats.gaussian_kde` seems redundant,2,1,[]
879,229459246,3162,19542768,2018-11-08 18:05:25,2018-11-08 21:38:14,closed,Fixed PermissionError when saving gif output on Windows,"NamedTemporaryFile causes issues when auto-deleting on windows, this fix is what is used by bokeh to ensure exporting works on windows and some basic testing by myself and by @smillies seems to confirm it works. That said in the long term we should set up CI tests on Windows.

- [x] Fixes https://github.com/ioam/holoviews/issues/3151",1,1,"['type: bug', 'tag: backend: mpl']"
880,229247006,3161,19542768,2018-11-08 04:27:57,2018-11-08 17:13:41,closed,Open rcfile with utf-8 encoding,- [x] Fixes https://github.com/ioam/holoviews/issues/3087,0,1,[]
881,229241533,3160,19542768,2018-11-08 03:44:38,2018-11-08 21:37:47,closed,Table improvements,"Adds support for updating the number of rows in matplotlib tables and adding titles to bokeh tables.

- [x] Closes https://github.com/ioam/holoviews/issues/734
- [x] Closes https://github.com/ioam/holoviews/issues/1741",1,4,[]
882,229150873,3158,19542768,2018-11-07 19:59:55,2018-11-08 17:19:27,closed,Add mode to send bokeh updates as individual comm messages,"Currently when working in the notebook we batch bokeh change events and send them all in a big chunk. This is generally okay but if any of the events causes an error on the frontend none of the subsequent events are processed. This PR ensures that each event is sent and therefore processed separately. This allows certain changes to plots to be made without irrecoverably breaking a plot.

- [x] Fixes https://github.com/ioam/holoviews/issues/3125
- [x] Unblocks https://github.com/ioam/holoviews/pull/3072",1,2,"['tag: backend: bokeh', 'tag: component: plotting']"
883,229139943,3157,19542768,2018-11-07 19:20:36,2018-11-07 20:27:11,closed,Avoid deprecation warning in datetime64 conversion utility,- [x] Closes https://github.com/ioam/holoviews/issues/3148,0,1,[]
884,229122880,3156,19542768,2018-11-07 18:18:51,2018-12-24 21:17:42,closed,Subclass pyviz_comms extension and add delete hook,"This PR subclasses the extension from pyviz_comms ensuring that independently of which extension you load all plots are cleaned up correctly when a cell is deleted, re-executed or cleared.

Should not be merged until pyviz_comms 0.7 containing the extension has been released.

- Depends on https://github.com/pyviz/pyviz_comms/pull/21",1,5,[]
885,229078674,3155,19542768,2018-11-07 16:01:32,2018-11-09 02:25:25,closed,Lowered ImageInterface precedence,- [x] Closes https://github.com/ioam/holoviews/issues/2623,1,1,[]
886,229077750,3154,19542768,2018-11-07 15:59:02,2018-11-08 20:35:20,closed,Add explicit xlabel/ylabel(/zlabel) plot options,"Overriding the axis labels is currently a fairly complex procedure because you have to redimension a bunch of elements. Particularly when you are working with a DynamicMap where you can't necessarily inspect the dimensions of returned elements it is, in some cases, not feasible at all. It also would add huge complexity to perform operations like this in ``hvplot``. Various users have therefore requested explicit ``xlabel``/``ylabel``(``/zlabel``) plot options, which are easy to add and much easier to control.

- [x] Closes https://github.com/ioam/holoviews/issues/2833",3,4,"['tag: component: plotting', 'type: enhancement']"
887,229055254,3153,19542768,2018-11-07 14:57:17,2018-11-07 17:28:42,closed,Update dimensioned stream layout title,When plotting a layout or grid containing dimensioned streams the layout or grid title does not currently update because it is not notified about changes in the stream values. This ensures that the plots subscribe to changes in any dimensioned streams.,1,3,"['tag: component: plotting', 'type: enhancement']"
888,229036419,3152,19542768,2018-11-07 13:59:37,2018-11-07 14:59:43,closed,Ensure that contours operation is robust to curvilinear coord edges,"Due to recent changes the contours operation did not robustly deal with curvilinear quadmesh coordinate edges.

- [x] Add unit test",1,1,['type: bug']
889,228678525,3146,19542768,2018-11-06 12:42:55,2018-11-06 14:15:24,closed,Ensure OverlayPlot parameters are updated,"In a somewhat incredible oversight the OverlayPlot parameters were never being updated.

- [x] Closes https://github.com/ioam/holoviews/issues/3144
- [x] Closes https://github.com/ioam/holoviews/issues/2682
- [x] Add unit tests",1,3,"['type: bug', 'tag: component: plotting']"
890,228363062,3141,19542768,2018-11-05 14:04:22,2018-11-05 14:20:44,closed,Skip Tap callbacks if outside axis bounds,"Unlike the PointerXY stream where we clip the pointer location if it goes outside the bounds to ensure that fast mouse movements are captured the tap callback should simply be skipped if the tap occurs outside the plot bounds.

- [x] Closes https://github.com/ioam/holoviews/issues/3135",1,1,['tag: backend: bokeh']
891,228246239,3140,19542768,2018-11-05 05:41:59,,open,Export svg,"https://github.com/ioam/holoviews/issues/2966

This works now with bokeh v1.0.1 without the: `RuntimeError: Models must be owned by only a single document, Range1d(id='7308857a-9088-49fb-9be8-993d2d514c40', ...) is already in a doc`

https://anaconda.org/ahuang11/holoviews_svg_test/notebook

[some_svgs.zip](https://github.com/ioam/holoviews/files/2547060/some_svgs.zip)

",3,4,"['type: feature', 'tag: backend: bokeh']"
892,228215872,3139,19542768,2018-11-05 00:39:28,2018-11-05 19:08:44,closed, Handle updating of bokeh legends,"Previous legends were completely static in the bokeh backend, i.e. in a HoloMap it would display all legend items for all frames at once and in a DynamicMap they would simply not update. Additionally this PR fixes a bug where the addition of an annotation on a plot would cause a legend to appear.

Also includes various fixes for dynamically creating and reassigning plot instances to ensure that a) the cyclic index is consistent and that b) dynamically created plot instances are updated appropriately despite not being assigned the correct stream mappings.

- [x] Closes https://github.com/ioam/holoviews/issues/2611
- [x] Closes https://github.com/ioam/holoviews/issues/2927
- [x] Add unit tests",1,9,"['type: bug', 'tag: backend: bokeh', 'type: enhancement']"
893,228190550,3138,19542768,2018-11-04 17:27:30,2020-11-20 17:51:51,closed,Fixed usage of dynamic Overlay as a stream source,"Need to determine why this condition was added in the first place before this can be merged in case there is a good reason.

- [x] Closes https://github.com/ioam/holoviews/issues/2529",0,1,[]
894,228188536,3137,19542768,2018-11-04 16:54:20,2020-09-02 01:30:47,closed,Remove key argument from operations,- [x] Closes https://github.com/ioam/holoviews/issues/1386,1,1,['tag: API']
895,228179319,3134,19542768,2018-11-04 14:12:47,2018-11-16 15:05:28,closed,Add top-level save and render utilities,"This PR adds top-level ``hv.save`` and ``hv.render`` utilities which we have long wanted and are much more obvious than the obscure ``hv.renderer(backend).save(obj, filename, fmt)`` and ``hv.renderer(backend).get_plot(obj).state`` APIs.

* ``hv.render``: Renders the holoviews object to the representation in of the backend, e.g. for bokeh returns bokeh Figure objects. This is very useful for incorporating HoloViews into a workflow where you're working directly with the underlying library but want to take advantage of some plot type that's only provided by HoloViews.

* ``hv.save``: Convenient API for saving holoviews objects to any format, including png, svg, gif, mp4, and both scrubber and selection widgets.

[Here](https://anaconda.org/philippjfr/save_and_render_utilities/notebook) is a notebook demonstrating what the API looks like in practice (note that because of the way exported HTML files are embedded some of the widget examples do not work but will work when working with the exported file directly).

- [x] Add documentation",12,20,['tag: API']
896,228153830,3133,19542768,2018-11-04 02:40:43,2018-11-04 13:56:50,closed,Minor optimizations,Small optimization which speeds up the slow speed in https://github.com/ioam/holoviews/issues/2940 by 20% simply by reordering if statements. Particularly useful when several hundred elements are plotted at once.,0,1,[]
897,228153256,3132,19542768,2018-11-04 02:22:47,2018-11-05 12:24:35,closed,Ensure RGBPlot is not a ColorbarPlot,"Ensures that RGBPlot is separate from RasterPlot to ensure it does not inherit plot and style options related to colormapping.

- [x] Fixes https://github.com/ioam/holoviews/issues/2873",2,1,"['type: bug', 'tag: component: plotting']"
898,228149293,3131,19542768,2018-11-04 00:19:13,2018-11-07 15:05:55,closed,Graph improvements,"Improvements for graphs:

* layout_nodes function allows passing weights to networkx layout functions
* Plot classes allow passing dictionaries as colormaps
* Fixed bug where axis labels would be wrong for overlaid Graph
* Improved Graph user guide with additional networkx examples and example of displaying node labels

New NYC Airport Connections example (addresses https://github.com/ioam/holoviews/issues/2402):

![bokeh_plot](https://user-images.githubusercontent.com/1550771/47958648-278f7880-dfc7-11e8-87b4-400dfb59f949.png)

",1,7,"['tag: docs', 'type: enhancement']"
899,228148755,3130,19542768,2018-11-04 00:05:36,2018-11-04 01:11:44,closed,added muted_alpha option for Vectorfield and for Spikes,found myself wanting muted_alpha for both of these elements,1,1,[]
900,228123706,3129,19542768,2018-11-03 15:20:21,2018-11-05 19:04:32,closed,Improved documentation for Raster-like elements,"Various improvements for the docstrings and documentation of gridded data and raster-like elements.

- [x] Closes https://github.com/ioam/holoviews/issues/2998
- [x] Closes https://github.com/ioam/holoviews/issues/1766",4,24,['tag: docs']
901,228117097,3128,19542768,2018-11-03 12:58:25,2018-11-27 19:23:10,closed,"Deprecation, consistency and docstrings for core methods","This PR is an attempt to make the core API more consistent by ensuring that method signatures are consistent, deprecating methods which are not useful or duplicative and add consistent docstrings throughout.

As a first step I added a ``config`` variable called ``future_deprecations`` which guards all forward going deprecation warnings. A user could enable this flag to see if they are affected by any of the deprecations

## Newly deprecated methods

These will go through a whole deprecation cycle, i.e. we will announce them as deprecated in the release notes, then disable the ``future_deprecations`` conditional in the next release so the warnings are raised and finally remove these methods. In all likelihood these methods will start raising warnings in 1.12 and be fully removed in 1.0. 

- ``.table``: This method exists on all elements and NdMapping types, despite the fact that a tabular representation makes little sense for many types of data, if we decide to replace this method we should instead add a ``dataset`` method which concatenates all types of data appropriately instead of ""tabularizing"" it. However ``HoloMap.collapse`` already offers this capability and in the simple case you can simple cast the Element to a Table so there is not much gained by adding a new method. However this method is used a fair bit throughout the docs so I think it has to go through a longer deprecation cycle. We may also have to consider moving collapse onto ``UniformNdMapping`` to allow collapsing types other than a HoloMap.
- ``.mapping``: This exists on all elements and returns the horrible NdElement based dictionary format which we have removed a **long** time ago.
- ``ItemTable.values``: This existed for consistency with our old ``NdColumns`` class which has been replaced with ``Dataset`` long ago. It's not useful and should be removed. It also means that we might consider renaming ``dimension_values`` to ``values`` so removing clashes like this now will help us in the long run.
- ``HoloMap``/``DynamicMap`` ``.split_overlay``: This method is really not very useful to a user so I've decided to make it private
- ``Overlay.collapse``: We should make ``collapse`` an operation that can be applied to all kinds of objects, the Overlay.collapse implementation was hugely outdated and will not work for the majority of types
- ``Element.collapse_data``: This was a classmethod to perform collapse operations which has slowly been getting replaced with an Interface based implementation
- ``Dimension.__call__``: Was replaced with Dimension.clone but we never added a warning.
- ``ViewableTree.from_values``: Old method which was required to construct tree from list of items, this is now supported by the standard constructor
- ``ViewableTree.regroup``: Recomputes groups for items in ViewableTree which is highly inefficient and very rarely useful, also equivalent functionality achievable with ``hv.Layout(layout.relabel(group='New Group').values())``.

## Methods made more consistent

There are still a number of data conversion methods that have some usefulness and are used throughout the code and therefore probably require a longer deprecation cycle if we were to decide to remove them:

- ``Element.columns``: Returns an OrderedDict of values along each dimensions. The main issue here is that this will flatten gridded and geometry data into a flat column, which is of limited utility. It may be nice to replace this with a method that returns the native dictionary format for each different type of data, columnar, geometry and gridded but we would have to find a different name.
- ``Element.array``: Returns an ndarray of values along each dimension again in a columnar format. This method is used a fair bit throughout the code and we probably shouldn't remove it.
- ``Element.dframe``: Returns a pandas dataframe of the values along each dimension, once again in a columnar format. Again this is frequently used so I've given it a good docstring, gave it a consistent signature throughout and allowed key dimensions to become dataframe indexes.
- ``Element.sample``: Element.sample and HoloMap.sample now accept the same signature (fixes https://github.com/ioam/holoviews/issues/298)
- ``.hist``: The .hist implementation had 4 completely different signatures which are now consistent (fixes https://github.com/ioam/holoviews/issues/1728)

## Methods we should consider introducing as replacements

- ``UniformNdMapping.dataset``: As a replacement for ``.table`` we could provide a way method to collapse UniformNdMapping types down to a single Dataset.

## Old deprecations

A number of items have been deprecated for a long time but were never removed

- [x] ElementOperation removed (was replaced with Operation)
- [x] ``.to`` ``mdims`` argument no longer supported
- [x] Remove PositionX, PositionY and PositionXY (were renamed to PointerX/Y)
- [x] ``Layout.display`` used to control display modes for Layout but removed a long time ago

## Element hierarchies

Addressing https://github.com/ioam/holoviews/issues/143

This PR adjusts the inheritance hierarchies, introducing a new category of elements with ``Geometry`` as its baseclass.

There are now the following general classes of elements:

* Charts:  These elements have independent and dependent variables corresponding to the key and value dimensions respectively (e.g. Curve, Scatter, Bars, Histogram etc.)
* Geometries: Geometries represent coordinates in a 2D coordinate system rendered as a number of different shapes (e.g. Points, VectorField, Path, Contours, Polygons etc.)
* Rasters: These elements represent a discretely sampled grid of an underlying continuous coordinate system (e.g. Raster, Image, RGB, HSV, QuadMesh)
* Statistics: Subtype of charts where the dependent variables are summary statistics computed from the data
* Graphs: Connected nodes and edges (e.g. Graph, Chord, Sankey)

## Docstrings

- [x] Partially address https://github.com/ioam/holoviews/issues/2322 by adding docstrings for most methods on core classes

Classes that have had docstrings added:

- ``core/dimension.py``
    - [x] ``LabelledData``
    - [x] ``Dimensioned``
- ``core/element.py``
    - [x] ``Element``
- ``core/data/__init__.py``
    - [x] ``Dataset``
- ``core/layout.py``
    - [x] AdjointLayout
    - [x] Layout
    - [x] NdLayout
- ``core/ndmapping.py``
    - [x] ``MultiDimensionalMapping``
    - [x] ``NdMapping``
    - [x] ``UniformNdMapping``
- ``core/overlay.py``
    - [x] ``Overlay``
- ``core/spaces.py``
    - [x] ``HoloMap``
    - [x] ``DynamicMap``
",10,28,['tag: API']
902,228116763,3127,19542768,2018-11-03 12:50:20,2018-11-16 15:06:45,closed,Ensure methods accept both single dimension/spec and list of them,"In general we have ensured that methods that accept either dimensions or specs will accept both single items and lists of items but this has never been done very consistently.

- [x] Fixes https://github.com/ioam/holoviews/issues/3080",2,2,['tag: API']
903,227720454,3121,19542768,2018-11-01 18:47:21,2018-11-01 20:07:56,closed,Updated nbpublisher submodule reference,Previous nbpublisher tag had issues importing nbformat.current,0,2,[]
904,227652126,3120,19542768,2018-11-01 15:10:23,2018-11-02 14:20:43,closed,Minor fixes for comm cleanup,When using HoloViews with panel the cleanup of comms usually occurs in panel so to avoid exceptions because a comm has already been closed this PR ensures that this does not error.,0,1,[]
905,227627132,3119,19542768,2018-11-01 13:56:36,2018-11-02 13:46:55,closed,Fixed Selection1D stream,"In the most recent release of bokeh it is now no longer possible to listen to the selected attribute on a ColumnDataSource, instead one has to listen to the indices on the selected object.",0,1,"['type: bug', 'tag: backend: bokeh']"
906,226686910,3116,19542768,2018-10-29 19:34:09,2018-10-30 13:36:06,closed,Hotfix 1.10.9 [DO NOT MERGE],,1,10,[]
907,226665958,3115,19542768,2018-10-29 18:22:42,2018-10-29 21:59:37,closed,Relax bokeh pin to allow <1.1.0 and update to bokeh 1.0 on travis,,1,8,[]
908,226655404,3114,19542768,2018-10-29 17:49:45,2018-10-29 19:17:27,closed,Fixed bugs colormapping Labels,- [x] Fixes issue in https://github.com/pyviz/hvplot/pull/98,1,1,[]
909,226598207,3113,19542768,2018-10-29 15:11:26,2018-10-29 18:10:41,closed,Port changes in 1.10.8 hotfix back to master,,2,10,[]
910,226309270,3110,19542768,2018-10-27 17:17:42,2018-11-30 19:52:27,closed,Remove the if statement,"Not sure if should just remove legend_cols and implement legend_orientation since I don't think bokeh supports legend cols yet?

![image](https://user-images.githubusercontent.com/15331990/47607180-9bcb8a00-d9d1-11e8-8c2b-0bddcfd5cf0b.png)
",2,1,[]
911,226115899,3106,19542768,2018-10-26 14:21:07,2018-10-29 13:44:32,closed,Ensure garbage collection is able to clean up after bokeh server sessions are destroyed,"Cleans up plots when a bokeh server session is destroyed allowing the plots and objects to be garbage collected.

Here's a screenshot of the output of ``memprof`` of a bokeh server session where I open consecutive sessions and then close them. As you can see after all the sessions are cleaned up memory usage returns to the 200 MB baseline, which is used to keep all the sys.modules in memory and run a bokeh server.

Before:

![screen shot 2018-10-26 at 10 21 41 pm](https://user-images.githubusercontent.com/1550771/47592988-8d4b8700-d96d-11e8-9af1-667cf806cce2.png)

After:

![screen shot 2018-10-26 at 10 13 00 pm](https://user-images.githubusercontent.com/1550771/47592730-6c366680-d96c-11e8-89ce-04869e3cb9ac.png)

Without https://github.com/bokeh/bokeh/pull/8368 the garbage collection will not happen immediately and things may stick around for a while. So we won't quite see the behavior shown above until bokeh 1.0.1 is released with that fix.

- [x] Closes https://github.com/ioam/holoviews/issues/2111",7,7,['tag: backend: bokeh']
912,225747262,3104,19542768,2018-10-25 12:53:39,2018-10-29 16:35:28,closed,Hotfix 1.10.8 [DO NOT MERGE],"Do not merge this, merely opened to provide overview of cherry-picked changes.",1,76,[]
913,225261548,3101,19542768,2018-10-24 04:30:35,2018-11-08 19:38:22,closed,Add size_index to graphs,"Try to address https://github.com/ioam/holoviews/issues/3097, but I'm not really sure what I'm doing; just copying a bunch of code from the other scripts.

Still useless too because I can't seem to figure out where it only takes the first three(?) columns and converts it to `['index', 'x', 'y']`(?) instead of `['index', 'x', 'y', 'test']` so size_index/color_index only works on either `'index'`, `'x'` or `'y'`... (I think if the three column restriction is removed, it'll help complement the fix to the image hover_col limit too(?) https://github.com/pyviz/geoviews/issues/242 besides changing `bounds=(1, None))`)

![image](https://user-images.githubusercontent.com/15331990/47406329-90930880-d70a-11e8-84d6-a626b94d940b.png)


",4,1,[]
914,225042221,3099,19542768,2018-10-23 13:37:39,2018-10-23 20:42:13,closed,Implement MultiInterface groupby,"This PR implements groupby operations for the MultiInterface. A groupby on a MultiInterface can only be applied if the dimension being grouped on is a scalar value in each item of the data. This allows polygon type data indexed by a variable to be grouped by one of those index values. For example you might have a Dataset containing geometries for all countries indexed by continent. Using groupby you can group the polygons by continent:

```python
> ds
:Dataset   [lon,lat,continent] (country)

> ds.groupby('continent')
:HoloMap   [continent]
   :Dataset   [lon,lat]   (country)
```

- [x] Add unit tests
",1,5,"['tag: component: data', 'type: enhancement']"
915,225021155,3098,19542768,2018-10-23 12:37:42,2018-10-23 13:29:42,closed,Renamed outdated columns variables to dataset,"A long time ago we had a baseclass for our elements called ``Columns``, this was later replaced with the ``Dataset`` basetype. However the ``Interface`` code was not consistently updated to reflect this name change. ",0,1,['tag: component: data']
916,224860198,3096,19542768,2018-10-23 01:03:19,2018-10-23 02:37:06,closed,Fixed bug setting integer number of contour levels,"Small bug I introduced in the recent geometry handling PR, for older versions of matplotlib an integer number of contours needs to be passed in as a positional argument.",1,2,['type: bug']
917,224282671,3092,19542768,2018-10-19 13:13:01,2018-10-23 00:30:07,closed,Add support for Polygons with holes,"In conjunction with the corresponding geoviews PR this represents a full protocol for round-tripping data between the dictionary format in holoviews and shapely geometries. Therefore this formally defines the conventions of our format relative to GEOS geometry definitions.

* A ``MultiInterface`` can hold a ``list`` of standard columnar data structures, the columnar data structures may be, numpy arrays, dictionaries of columns, (pandas/dask) dataframes and dictionaries of a geometry and other data.
* Each item in a ``MultiInterface`` ``list`` represents an individual geometry, where a geometry can be a LinearString, LinearRing, Polygon, MultiLineString or MultiPolygon.
* If an item in the list represents a MultiLineString or MultiPolygon then each polygon/line string should be separated by nans.
* In order to store holes for MultiPolygons the holes are deeply nested to unambiguously assign each hole to each polygon:
   - **1st.** The first level of nesting corresponds to the list of geometries
   - **2nd.** The second level corresponds to each Polygon in a MultiPolygon
   - **3rd.** The third level of nesting allows for multiple holes per Polygon
 
To demonstrate this let's take a few examples of polygon geometries with holes. In the simplest case we have a Polygon of a few coordinates with holes defined as a list of list of arrays:

```python
coords = [(1, 2), (2, 0), (3, 7)]
holes = [[[(1.5, 2), (2, 3), (1.6, 1.6)], [(2.1, 4.5), (2.5, 5), (2.3, 3.5)]]]
hv.Polygons([{('x', 'y'): coords, 'holes': holes}])
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/47274110-a7195280-d598-11e8-9faa-6771f1049d99.png)

In the case of a ``MultiPolygon`` which contains the Polygon from above it becomes clearer. The coords now contain a nan separator and there are two separate lists of holes, one the same as above the second empty:

```python
coords = [(1, 2), (2, 0), (3, 7), (np.nan, np.nan), (6, 7), (7, 5), (3, 2)]
holes = [[[(1.5, 2), (2, 3), (1.6, 1.6)], [(2.1, 4.5), (2.5, 5), (2.3, 3.5)]], []]
hv.Polygons([{('x', 'y'): coords, 'holes': holes}])
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/47274108-9a94fa00-d598-11e8-92f2-52ecba14fc92.png)

To further illustrate this, we can split the ``MultiPolygon`` into two separate Polygons like this:

```
coords = [(1, 2), (2, 0), (3, 7)]
holes = [[[(1.5, 2), (2, 3), (1.6, 1.6)], [(2.1, 4.5), (2.5, 5), (2.3, 3.5)]]]
coords2 = [(6, 7), (7, 5), (3, 2)]
hv.Polygons([{('x', 'y'): coords, 'holes': holes, 'value': 1},
             {('x', 'y'): coords2, 'value': 2}], vdims='value')
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/47274174-f4e28a80-d599-11e8-81f1-462cabe98373.png)

producing almost the same plot but allowing us to set two distinct values for each polygon, when in the MultiPolygon case they would have had to share the same value.

This scheme can also be used to faithfully round-trip matplotlib geometries (e.g. Patches) to this format, which means we can finally handle the ``contours`` operation correctly.

- [x] Closes https://github.com/ioam/holoviews/issues/2017
- [x] Rewrite contours operation to convert matplotlib Patches correctly
- [x] Added [Geometry data user guide](https://anaconda.org/philippjfr/geometry_data/notebook)
- [x] Add unit tests",8,37,"['type: feature', 'tag: API', 'tag: component: plotting', 'tag: component: data']"
918,223682611,3090,19542768,2018-10-17 17:02:07,2018-10-17 17:56:28,closed,Handled exception on LinkedStream callbacks,Ensure errors in Stream subscribers do not cause Stream metadata to stick around incorrectly.,1,1,[]
919,222668109,3088,19542768,2018-10-13 18:45:01,2020-03-10 16:35:57,closed,Ability to specify transforms for `Params` streams on parameters when .contents is accessed,"As discussed with @philippjfr. 

I just ended up sticking this in `hv.streams.Params` for now instead of `hv.streams.Stream` as a proof-of-concept. I wasn't sure whether it was desired to have this functionality for all `Stream`s or just this specialized one. Also wasn't 100% sure what to call the optional transformation parameter. Let me know what you think. 

As an alternative to the style used in the `Tap` example documentation, where the `Year` `kdim` has to be converted back to an integer after being casted to a string by the `HeatMap`:

```python
# Declare HeatMap
heatmap = hv.HeatMap(dataset.aggregate(['Year', 'State'], np.mean),
                     label='Measles Incidence').select(Year=(1928, 2002))

# Declare Tap stream with heatmap as source and initial values
posxy = hv.streams.Tap(source=heatmap, x=1951, y='New York')
# Define function to compute histogram based on tap location
def tap_histogram(x, y):
    return hv.Curve(dataset.select(State=y, Year=int(x)), kdims='Week',
                   label='Year: %s, State: %s' % (x, y))

heatmap + hv.DynamicMap(tap_histogram, kdims=[], streams=[posxy])
```

New style - conversions/casting can be handled without having to define a `DynamicMap` / callable pair in the case where you need to cast (for example) the `HeatMap`'s string `kdim` back to the `kdim` type of your actual `Dataset`:

```python
hv_heatmap = ds.to(hv.HeatMap)

tap_stream = Params(
    Tap(source=hv_heatmap, y=coeffs[0]), 
    ['y'], rename={'y': 'coeff'},
    contents_transforms={'coeff': int}
)

(
    hv_heatmap
    +
    Dynamic(ds.to(hv.Curve).redim.range(y=(da.min(), da.max())), streams=[tap_stream])
).cols(1)
```

Note that I was using `Params` here in the first place because in my application that eventually resulted in this PR I only wanted the y coordinate from the `Tap` as a `kdim`.

See https://anaconda.org/zbarry/2018-10-13_stream_transforms_work/notebook for the complete example.

P.S.: first PR. Let me know if I've done something silly.",14,5,[]
920,222476029,3083,19542768,2018-10-12 13:58:41,2018-10-17 17:55:50,closed,Ensure axis are inverted after shared axis ranges are combined,"- [x] Fixes https://github.com/ioam/holoviews/issues/3082
- [x] Add unit test
",1,2,"['type: bug', 'tag: backend: bokeh']"
921,221930747,3081,19542768,2018-10-10 20:58:01,2018-10-11 00:05:14,closed,Ensure QuadMesh with xarray handles datetime range,"When using the xarray interface with a QuadMesh the range method would break on the datetimes.

- [x] Adds unit tests",1,2,"['type: bug', 'tag: component: data']"
922,221816465,3077,19542768,2018-10-10 14:40:39,2018-10-10 15:56:48,closed,Attempt to pin specific python3.6 build,,0,1,[]
923,221786895,3075,19542768,2018-10-10 13:20:31,2018-10-10 19:00:57,closed,Fixed bug in HLine/VLine datetime handling,"Apparently there is no need to transform datetime types in the HLine/VLine plotting code and getting rid of this processing also fixes timezone issues.

- [x] Closes https://github.com/ioam/holoviews/issues/2857",1,1,"['type: bug', 'tag: backend: bokeh']"
924,221781648,3074,19542768,2018-10-10 13:04:57,2018-10-10 18:30:23,closed,Ensure toolbar=None does not disable tools,"As discussed in https://github.com/ioam/holoviews/issues/3006 setting toolbar=None should not disable all the tools, it should simply hide the toolbar. I've added a toolbar='disable' option instead.

- [x] Closes https://github.com/ioam/holoviews/issues/3006",1,1,['tag: backend: bokeh']
925,221777730,3073,19542768,2018-10-10 12:53:33,2018-10-10 17:30:06,closed,Fixed Python <3.5 issue import RecursionError,- [x] Closes https://github.com/ioam/holoviews/issues/2939,1,1,[]
926,221774939,3072,19542768,2018-10-10 12:44:42,2019-09-12 15:19:16,closed,Dynamically switch colormapper type,"Does not yet work since changng the colormapper instance before updating the data will cause the new colormapper to choke on the old data and if you change the data before the colormapper the old colormapper will choke on the new data.

- [ ] Fixes https://github.com/ioam/holoviews/issues/2989
",0,1,"['tag: backend: bokeh', 'status: WIP']"
927,221768653,3071,19542768,2018-10-10 12:24:00,2018-10-10 21:07:37,closed,Allow using explicit colormapping on non-categorical data,"This PR allows providing an explicit colormapping for non-categorical data.

- [x] Closes https://github.com/ioam/holoviews/issues/3033
- [x] Adds unit test",2,4,"['tag: backend: bokeh', 'type: enhancement']"
928,221639223,3070,19542768,2018-10-10 02:18:57,2018-10-10 19:28:35,closed,Fixed no memoization bug if stream provides no kwargs,"Our recent work on supporting ``param.depends`` allows defining DynamicMaps which do not have any args or kwargs, since the parameters are available on the ``self`` in the parameterized method callback. However there is a small bug in ``Callable`` which skips memoization if both args and kwargs are empty rather than checking the ``kwarg_hash`` which is what is actually memoized on.",2,4,['type: bug']
929,221620209,3069,19542768,2018-10-09 23:51:21,2018-10-10 17:24:11,closed,Fixed bug in Interface.applies,"@jlstevens This was the actual cause of the geopandas issue you encountered today. The ``types`` check used a exact match rather than isinstance before my deferred loading PR, which meant pandas would match for a geopandas dataframe when it wasn't meant to.",1,1,"['type: bug', 'tag: component: data']"
930,221435160,3066,19542768,2018-10-09 13:16:44,2018-10-09 17:27:17,closed,Improved handling of the bokeh root model and comm,"On bokeh plots the root model is required to set up comm callbacks. Currently this is handled in some pretty terrible ways, e.g. after subplots set up a comm callback any layout plot or similar that is wrapping the plot has to then search and replace a placeholder root model id with the actual root model id. By allowing users to pass in a root model into a plot we can at least avoid having to replicate this logic on upstream libraries like ``panel``.

Similarly this PR also allows passing in a ``Comm`` instance, so that upstream libraries do not have to patch all plots manually.",2,6,['tag: backend: bokeh']
931,221269062,3065,19542768,2018-10-08 23:26:14,2018-10-09 17:04:00,closed,Fixed bug in combining data range and soft_range,"The ``dimension_range`` utility which is responsible for combining different types of ranges did not correctly handle soft ranges if one of the limits is not defined.

- [x] Fixes https://github.com/pyviz/pyviz/issues/117
- [x] Fixes https://github.com/ioam/holoviews/issues/3021
- [x] Added unit test",2,3,[]
932,221258008,3064,19542768,2018-10-08 22:17:59,2018-10-09 00:58:43,closed,Unpin dependencies in test environment,,0,1,[]
933,220967546,3059,19542768,2018-10-07 19:24:12,2018-10-07 20:08:24,closed,Eliminated usage of pip in travis.yml,,0,1,['tag: component: testing']
934,220955688,3058,19542768,2018-10-07 15:42:24,2018-10-07 17:09:05,closed,Further fix for deprecated mpl rcParams,,0,1,['tag: backend: mpl']
935,220953748,3057,19542768,2018-10-07 15:07:15,2018-11-28 00:37:14,closed,Enable nbsmoke tests,,0,7,['tag: component: testing']
936,220909748,3056,19542768,2018-10-06 20:28:28,2018-10-07 13:28:14,closed,Simplify CI setup and environment,,6,6,['tag: component: testing']
937,220896585,3055,19542768,2018-10-06 16:30:20,2018-10-08 14:21:39,closed,Improve import times,"This PR attempts to improve import times by deferring imports of:

* xarray
* dask
* datashader and therefore numba (these were accidentally imported automatically in ``element/graphs.py``)

Here are the current import timings:

* Before this PR (with iris): 2.5 seconds
* Before this PR (without iris): 1.5 seconds
* After this PR: 0.55 seconds

In addition to some utilities to load the backends this PR works by declaring two new methods to `Interfaces`. The first method ``Interface.loaded`` is called to check whether an interfaces dependencies have been loaded, if not the interface is skipped, this defaults to true for backward compatibility. The second method ``Interface.applies`` is used to check whether the Interface applies to the supplied data object. By default this method simply checks whether the data is one of the ``Interface.types``, maintaining backward compatibility. However interfaces with heavy dependencies can subclass this method to defer the import.  

- [x] Closes https://github.com/ioam/holoviews/issues/1892",11,5,['tag: component: data']
938,220893698,3054,19542768,2018-10-06 15:39:46,2018-10-07 15:58:21,closed,Removed iris interface,Since the iris interface is heavily coupled to geo-based workflows and has a dependency on cartopy it is moving to the geoviews repository.,3,2,"['tag: API', 'tag: component: data']"
939,220891102,3053,19542768,2018-10-06 14:57:32,2018-10-07 15:32:31,closed,Fixed warnings when using matplotlib >= 3.0,- [x] Fixes https://github.com/ioam/holoviews/issues/2963,0,1,[]
940,220884800,3052,19542768,2018-10-06 12:57:10,2018-10-06 15:15:49,closed,Moved tests inside holoviews package,"Moves tests inside the HoloViews package, which will allow upstream libraries (like bokeh) to run our test suite to ensure compatibility and downstream libraries (like geoviews) to reuse interface tests, which will allow us to finally move the iris interface.

- [x] Closes https://github.com/ioam/holoviews/issues/2580",1,1,['tag: component: testing']
941,220703337,3051,19542768,2018-10-05 13:33:03,2018-10-05 15:45:28,closed,Drop gridplot width kwarg,"For some reason we were passing a total width to the bokeh gridplot function, which it simply ignored internally. In bokeh 1.0dev this hole in kwarg validation was fixed and passing in the width now errors, so this PR is required for forward compatibility.",1,1,"['type: bug', 'tag: backend: bokeh']"
942,220698345,3050,19542768,2018-10-05 13:16:49,2018-10-05 15:55:58,closed,Change trimesh_rasterize value dimension handling,"Makes a number of changes and fixes to trimesh rasterization:

* A value dimension defined on the nodes takes precedence over one defined on the tris
* If an explicit aggregator is defined that column is actually respected
",3,1,['type: bug']
943,220685089,3049,19542768,2018-10-05 12:29:14,2018-10-06 14:38:37,closed,Improve Params stream handling,"This PR makes twofold improvements for Params streams:

* First of all it improves hashing on Params streams, disabling memoization temporarily when a ``param.Action`` is triggered.

* Just like a DynamicMap will listen to the dependencies of a parameterized method ``hv.util.Dynamic`` will do the same if it is passed a parameterized method as an operation.

- [x] Adds unit tests",4,7,['type: enhancement']
944,220580365,3047,19542768,2018-10-05 04:07:33,2018-10-08 16:17:44,closed,Address categorical labels not responding to fontsizes,"https://github.com/ioam/holoviews/issues/3007

Okay I think it's ready?
![image](https://user-images.githubusercontent.com/15331990/46588615-41837d00-ca54-11e8-98ab-9de1fd244cd7.png)

![image](https://user-images.githubusercontent.com/15331990/46588610-3597bb00-ca54-11e8-89f0-af1f0be8669a.png)",7,10,[]
945,220238922,3045,19542768,2018-10-04 03:23:36,2018-10-05 15:42:18,closed,Use robust isfinite utility throughout,"We use np.isfinite in many places across the code, however the numpy version of this function is not robust to many different types which is why we created the ``hv.core.util.isfinite`` utility. Unfortunately this is not yet used everywhere throughout the code, leading to bugs like https://github.com/ioam/holoviews/issues/3044 and https://github.com/ioam/holoviews/issues/3040

- [x] Add unit tests",2,4,['type: bug']
946,220118965,3043,19542768,2018-10-03 17:30:21,2018-10-06 01:01:46,closed,Minor fixes to examples and docs,"- Fix ""size"" option that may have been accepted by some Matplotlib versions, but is supposed to be ""s"" as far as I know
- Clarify that we decided that ""finalize_hooks"" was the correct spelling, and that ""final_hooks"" is the deprecated spelling, even though we all prefer ""final_hooks"", because ""finalize_hooks"" has been accepted by both bokeh and mpl backends for many releases while ""final_hooks"" is only accepted by the mpl backend.",2,3,[]
947,220113018,3042,19542768,2018-10-03 17:09:15,2018-10-05 15:48:54,closed,Add tick formatter plot options,"Adds plot options to control the axis formatting directly rather than using the `Dimension.value_format` which only accepts formatter functions. These accept:

* Format strings like '%d', '%.3f' etc.
* Python functions which are compiled to JS with flexx (or converted to a FuncFormatter in mpl)
* TickFormatter instances (or matplotlib.ticker.Formatter instances for mpl)

- [x] Add unit tests
- [x] Add documentation (to styling plots notebook)",5,4,"['type: feature', 'tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
948,219912420,3041,19542768,2018-10-03 04:32:45,2018-10-07 15:01:42,closed,Fix layout titles,"https://github.com/ioam/holoviews/issues/3039

```
r.theme = 'caliber'  # with theme
hv.Curve([0, 1, 2])  # single no label
(hv.Curve([0, 1, 2]) * hv.Curve([4, 5, 6]))  # overlay no title
(hv.Curve([0, 1, 2]) * hv.Curve([4, 5, 6])).relabel('This title')  # labeled overlay
(hv.Curve([0, 1, 2]) + hv.Curve([4, 5, 6]))  # layout no title
(hv.Curve([0, 1, 2]) + hv.Curve([4, 5, 6])).relabel('This title')  # labeled layout
```
![image](https://user-images.githubusercontent.com/15331990/46389996-52b23f80-c68a-11e8-907f-a78dcdd78d82.png)
![image](https://user-images.githubusercontent.com/15331990/46390001-58a82080-c68a-11e8-8f32-d75a1f254e64.png)

```
import holoviews as hv
hv.extension('bokeh')
r = hv.renderer('bokeh')
# ensure other plots still work without a theme
hv.Curve([0, 1, 2])  # single no label
(hv.Curve([0, 1, 2]) * hv.Curve([4, 5, 6]))  # overlay no title
(hv.Curve([0, 1, 2]) * hv.Curve([4, 5, 6])).relabel('This title')  # labeled overlay
(hv.Curve([0, 1, 2]) + hv.Curve([4, 5, 6]))  # layout no title
(hv.Curve([0, 1, 2]) + hv.Curve([4, 5, 6])).relabel('This title')  # labeled layout
```
![image](https://user-images.githubusercontent.com/15331990/46389976-34e4da80-c68a-11e8-9808-2c1609bd797e.png)
![image](https://user-images.githubusercontent.com/15331990/46389982-3d3d1580-c68a-11e8-89a0-45a4747a4e5a.png)



Works for other layouts too:
Without theme:
![image](https://user-images.githubusercontent.com/15331990/46390055-af155f00-c68a-11e8-8774-0683e37f6950.png)

With:
![image](https://user-images.githubusercontent.com/15331990/46390038-9442ea80-c68a-11e8-80a5-b7c01a0ce815.png)

",4,5,[]
949,219363372,3028,19542768,2018-10-01 12:48:53,2018-10-01 16:01:23,closed,Fixes for Params and ParamMethod streams,"Fixes some issues with ``Params`` and ``ParamMethod`` streams such as the ability to rename parameters and being able to provide an explicit list of parameters.

- [x] Adds unit tests",2,1,['type: bug']
950,219183157,3025,19542768,2018-09-30 03:55:13,2018-10-03 17:12:22,closed,Add normalization faq,https://github.com/ioam/holoviews/issues/3016,1,8,[]
951,219170652,3024,19542768,2018-09-29 21:30:21,2018-10-01 15:57:33,closed,Fixes for Selection1D callback,Bokeh changed the Selection API a while ago and removed the backward compatible Python API some time more recently. This broke the Selection1D stream on bokeh server. This PR fixes the callback and adds a number of unit tests to ensure the callback specs resolve correctly.,2,3,"['type: bug', 'tag: backend: bokeh']"
952,219112069,3023,19542768,2018-09-29 00:13:47,2018-10-05 15:34:37,closed,Do not expand full DynamicMap cartesian product,"I previously removed code that computed the cartesian product of DynamicMap dimension values which is completely infeasible for large parameter spaces. It seems this was still being done for layout plots, I'll have to have another look but afaik I already ensured that the fact that these keys aren't expanded doesn't cause any issues.",5,1,"['type: bug', 'tag: component: plotting']"
953,218357500,3017,19542768,2018-09-26 15:19:05,2018-09-28 15:14:13,closed,Fixes for handling of curvilinear coordinates,"- [x] Adds support for constructing curvilinear xarray dataset from literals
- [x] Fixes bug where rasterization would flip QuadMesh
- [x] Fixes bug where canonicalization would flip value dimension arrays when curvilinear coordinate arrays are used (this is unnecessary and caused various bugs)",2,10,"['type: bug', 'tag: component: data']"
954,217507420,3013,19542768,2018-09-23 12:24:52,2018-09-24 12:03:45,closed,Suppress warnings about deprecated rcParams in matplotlib>=3.0,- [x] Fixes https://github.com/ioam/holoviews/issues/2963,5,1,[]
955,216006358,3005,19542768,2018-09-17 14:41:32,2018-09-17 19:18:34,closed,Various fixes for bokeh datetime handling,"- [x] Fixes datetime formatting in Table
- [x] Fixes datetime formatting in Path hover
- [x] Fix datetime formatting in Chart hover
- [ ] Add unit tests",3,7,"['type: bug', 'tag: backend: bokeh']"
956,215842114,3002,19542768,2018-09-16 19:59:15,2018-09-17 10:56:13,closed,Fix broken links,"Fixes
https://github.com/ioam/holoviews/issues/2854

I just copied from bokeh/Paths.ipynb or matplotlib/Paths.ipynb and replaced Path with Labels",1,1,['tag: docs']
957,215841140,3001,19542768,2018-09-16 19:37:10,2018-09-17 12:57:45,closed,Don't sort by default in element conversion,"Fixes https://github.com/ioam/holoviews/issues/2795
![image](https://user-images.githubusercontent.com/15331990/45600213-d6430f80-b9ad-11e8-928e-14fb79ed1440.png)

",0,2,['tag: API']
958,215468214,2996,19542768,2018-09-14 02:56:55,2018-09-14 15:09:02,closed,Fixed plot extent calculation when apply_ranges=False,"Fixes small bug in extent calculations for plots with ``apply_ranges=False`` which skip extent calculation.

- [x] Add unit test",2,2,[]
959,213916781,2990,19542768,2018-09-07 12:45:22,2018-09-13 22:45:56,closed,Split all value dimensions when splitting by path color,"When displaying a path with a varying value dimension used to color each line segment the path is split into little chunks. However previously other value dimensions would not be split in this way which would cause several issues:

1) When enabling hover on the path the CDS would end up with mismatched shapes
2) When enabling a drawing tool on the path the CDS would also end up with mismatching shapes

The solution is to split all value dimensions by default.",3,11,"['type: bug', 'tag: backend: bokeh']"
960,212762635,2977,19542768,2018-09-03 14:18:05,2018-09-03 16:36:45,closed,Updated to latest pyviz_comms version,"Various updates for use with pyviz_comms 0.1.2

- [x] Get classic notebook MIME renderer from pyviz_comms
- [x] Get embed_js code from pyviz_comms
- [x] Close comms on cleanup

- [x] Pin pyviz_comms 0.6.0 (once released)",2,5,[]
961,212556555,2975,19542768,2018-09-01 17:31:26,2018-09-14 14:28:35,closed,Fix misleading example boxplot and change default,"Fixes misleading plot (title says colored by cylinder, but the coloring looks random) https://github.com/ioam/holoviews/issues/2974

Also, changes the default of box and violin's fill color from Cycle() to 'lightgray' because the colors don't really add any value unless there are multiple categories. See https://serialmentor.com/dataviz/color-pitfalls.html Figure 15.3

This has a misleading title
![image](https://user-images.githubusercontent.com/15331990/44948450-5b390100-add2-11e8-99bd-1f46ab315354.png)

This is correct but looks a bit ugly to me
![image](https://user-images.githubusercontent.com/15331990/44948474-fc27bc00-add2-11e8-9008-c7ad7c30bd8a.png)

This looks the cleanest to me
![image](https://user-images.githubusercontent.com/15331990/44948477-047ff700-add3-11e8-8b60-bf5af2503dac.png)

",1,2,[]
962,212553136,2973,19542768,2018-09-01 16:08:19,2018-09-14 21:53:25,closed,Fix theme's title,"This should not be merged until bokeh's master is released because `from bokeh.themes import built_in_themes` doesn't exist yet in the latest stable version.

https://github.com/ioam/holoviews/issues/2871
![image](https://user-images.githubusercontent.com/15331990/44947725-7b62c300-adc6-11e8-9522-0c109bde4b2a.png)
![image](https://user-images.githubusercontent.com/15331990/44947727-80277700-adc6-11e8-9ca2-ad9330ce0885.png)
![image](https://user-images.githubusercontent.com/15331990/44947729-86b5ee80-adc6-11e8-88c5-3e29110ca6f7.png)
",4,4,[]
963,212551193,2972,19542768,2018-09-01 15:18:38,2018-09-01 19:47:08,closed,Support input of strings to theme,"https://github.com/ioam/holoviews/issues/2870

![image](https://user-images.githubusercontent.com/15331990/44947270-a0076c80-adbf-11e8-9da1-229b206dc0bf.png)
",3,2,"['tag: backend: bokeh', 'type: enhancement']"
964,212152147,2968,19542768,2018-08-30 17:19:04,2018-08-30 20:16:29,closed,Assign int index of coords if no coords in xarray object,I am not sure exactly how this should work if there is one set of coords specified but not another. But this is a start at least following on the ideas here: https://github.com/ioam/holoviews/pull/2579#issuecomment-417344368,5,2,[]
965,211930479,2967,19542768,2018-08-30 01:26:08,2018-08-30 14:00:12,closed,Add support to adjust fontsize for zlabels/zticks,"https://github.com/ioam/holoviews/issues/2964

Test zticks/label alone
![image](https://user-images.githubusercontent.com/15331990/44824128-da52ed00-abb8-11e8-8e76-c32151d7e4a3.png)

Test ticks/labels
![image](https://user-images.githubusercontent.com/15331990/44824134-e2129180-abb8-11e8-8c41-c3f8c2827d6a.png)

Test other plots
![image](https://user-images.githubusercontent.com/15331990/44824143-e9399f80-abb8-11e8-9773-5554eb2bfeff.png)
",2,1,['tag: backend: mpl']
966,211424922,2962,19542768,2018-08-28 13:35:07,2018-08-30 17:44:22,closed,Fix issue with value dimensions on PolyDraw stream,"This PR addresses issues when attaching a Polygons/Path element which contains value dimensions to a PolyDrawTool. The issue arises because value dimensions are only added to the CDS when they are actually needed but the drawing streams expects the data to be in the data it receives. This PR simply ensures that the stream itself adds any missing dimensions to the CDS.

- [x] Fixes bug in PolyDraw stream on element with value dimensions
- [x] Adds unit tests",2,3,"['type: bug', 'tag: backend: bokeh']"
967,211169840,2961,19542768,2018-08-27 17:03:24,2018-08-30 19:12:55,closed,Add functionality to stream from parameterized objects and methods,"Requires https://github.com/ioam/param/pull/253 to work

- [x] Adds ability to directly stream from methods decorated with ``param.depends``
- [x] Adds ability from parameterized classes
- [x] DynamicMap allows declaring whether to dependencies on parameterized method
- [ ] Add unit test
- [ ] Update docs",3,8,[]
968,210924730,2959,19542768,2018-08-25 22:50:17,2018-09-01 18:01:17,closed,Reorganize FAQ,"Start FAQ with questions about common things like how to label, re-range, adjust size, legend, and exporting, then some miscellaneous questions, and lastly advanced customization.",6,2,[]
969,209595080,2954,19542768,2018-08-20 17:47:05,2018-09-14 15:15:39,closed,Fixed value label formatting in HoloMap widgets,- [x] Fixes https://github.com/ioam/holoviews/issues/2921,3,2,['type: bug']
970,209513495,2953,19542768,2018-08-20 13:01:54,2018-08-20 15:37:32,closed,Fixed bug in DaskInterface.range for non-numeric columns,"- [x] Fixes https://github.com/ioam/holoviews/issues/2880
- [x] Adds unit tests",2,1,"['type: bug', 'tag: component: data']"
971,209507939,2952,19542768,2018-08-20 12:41:09,2018-08-20 15:37:54,closed,Fixed bug clearing Buffer stream when streaming dataframe with index,"- [x] Fixes https://github.com/ioam/holoviews/issues/2913
- [x] Adds unit test",1,1,['type: bug']
972,209505697,2951,19542768,2018-08-20 12:31:32,2018-08-20 15:40:56,closed,Fixed bug streaming SpreadPlot data,"- [x] Fixes https://github.com/ioam/holoviews/issues/2917
- [x] Adds unit test",2,1,"['type: bug', 'tag: backend: bokeh']"
973,209503319,2950,19542768,2018-08-20 12:21:38,2018-08-20 15:56:16,closed,Handle empty and flat distribution Violin plots,"- [x] Fixes https://github.com/ioam/holoviews/issues/2897
- [x] Add unit tests",1,5,['type: bug']
974,208836375,2945,19542768,2018-08-16 12:04:46,2018-08-16 13:35:07,closed,Ensure MultiInterface.add_dimension works on array interface,Since the ArrayInterface does not support arbitrary types the MultiInterface.add_dimension method now converts the data to dictionary types when adding dimensions.,2,2,"['type: bug', 'tag: component: data']"
975,208695126,2944,19542768,2018-08-15 22:07:39,2018-08-16 00:44:29,closed,Multi interface improvements,,2,6,['tag: component: data']
976,208557281,2943,19542768,2018-08-15 13:06:53,2018-08-15 15:08:37,closed,Attempted fix of travis.yml,,5,1,[]
977,208550085,2942,19542768,2018-08-15 12:33:25,2018-08-15 22:14:42,closed,Ensure initial PolyDraw and FreehandDraw data is projected,"When the PolyDraw and FreehandDraw stream is initialized the initial data stored in the ColumnDataSource is used to set the .data on the stream. If the data has been projected (as is the case in GeoViews) this initial data will be wrong, which means it needs to be passed through ``_process_msg`` first to ensure it is projected first.",2,3,"['type: bug', 'tag: backend: bokeh']"
978,208464825,2941,19542768,2018-08-15 03:32:00,2018-08-17 13:05:01,closed,Faq updates,Minor updates.,7,10,[]
979,207728423,2937,19542768,2018-08-10 21:39:43,2018-08-13 17:07:40,closed,Add new drawing tool functionality,"This PR adds multiple drawing tool features I recently added to bokeh:

* Adds ``num_objects`` option to limit the number of glyphs that can be drawn
* Adds ``show_vertices`` option on ``PolyDraw`` enabling display of and snapping to vertices
* Adds new ``FreehandDraw`` stream

* Tests will have to wait until we have support for Selenium

- [x] Add documentation",2,4,['type: feature']
980,207151452,2932,19542768,2018-08-08 22:07:34,2018-08-20 15:56:32,closed,Add exception to the error message printed from DynamicMap,"RIght now, if an error is raised in a DynamicMap, we get a warning, but it doesn't indicate anything about what the problem was:

```
import holoviews as hv, datashader as ds, pandas as pd, dask.dataframe as dd
from holoviews.operation.datashader import datashade, rasterize, dynspread
hv.extension('bokeh')
df = dd.read_parquet('../data/nyc_taxi_wide.parq').persist()
points = hv.Points(df, ['dropoff_x', 'dropoff_y'], 'dropoff_hour')
rasterize(points, aggregator=ds.last('dropoff_hour'))
```

```
WARNING:root:dynamic_operation: Exception raised in callable 'dynamic_operation' of type 'function'.
Invoked as dynamic_operation(height=400, scale=1.0, width=400, x_range=None, y_range=None)
```

It's quite unclear what a user is meant to do in this case.  With this change, the type and text of the exception will be shown, letting the user know what to do:

```
WARNING:root:dynamic_operation: Exception ""NotImplementedError('last is currently implemented only for rasters',)"" raised in callable 'dynamic_operation' of type 'function'.
Invoked as dynamic_operation(height=400, scale=1.0, width=400, x_range=None, y_range=None)
```

I don't think we want to show a full backtrace in this case, because there may be many such errors raised dynamically at different points of a DynamicMap's lifetime, but at least knowing the error is vastly better than just guessing...",5,5,[]
981,206264173,2928,19542768,2018-08-05 23:38:29,2018-08-15 01:48:52,closed,"Update FAQ with the actual, latest FAQs",Addresses https://github.com/ioam/holoviews/issues/2906 ,6,3,[]
982,206210491,2924,19542768,2018-08-04 21:22:54,2018-08-04 23:28:49,closed,Added more elements .to,"https://github.com/ioam/holoviews/issues/2918

Test notebook
https://anaconda.org/ahuang11/test_hv_ds_to/notebook",2,2,['type: enhancement']
983,206209617,2923,19542768,2018-08-04 20:58:22,2018-08-13 17:47:23,closed,Update Customizing Plots Docs with more description about .options,"Somewhat addresses https://github.com/ioam/holoviews/issues/2916

This task turned out to be more difficult than I initially imagined (kudos to you guys for writing all the docs!)

There seems to be redundancy across places in the docs, and I'm not sure if it's appropriate to remove them or leave them there.  Maybe it's best to wait for https://github.com/ioam/holoviews/issues/2485 so it's not necessary to show other methods of customization in detail besides `.options` besides a brief mention? I think, that way, the documentation can be more straightforward and clear for the average user.

(I'm not sure why the muted alpha stuff is still showing  as commits if it's already merged into master).

Perhaps, it's more helpful to update the FAQ or create a cheat sheet first while the core developers can discuss the best way forward for the customization docs?",6,10,[]
984,206194645,2922,19542768,2018-08-04 14:23:19,2018-08-04 15:55:28,closed,Fixed bug in testing machinery by updating nbpublisher,Fixes issues exporting plots with ``%%output filename='...'`` in the notebook testing code.,0,1,[]
985,205502884,2915,19542768,2018-08-01 17:48:59,2018-08-04 16:46:44,closed,Address loop bug in CDSStream on bokeh server,"Fixes an issue when using a CDSStream, or any of the drawing tool streams which are subclasses, on bokeh  server. Previously the data dictionary was modified in place which meant it would continuously trigger new events causing an endless loop, by making a copy of the dict we avoid triggering events.

Since we still don't have a way of testing bokeh server apps this can be merged without tests for now.",0,1,"['type: bug', 'tag: backend: bokeh']"
986,205351056,2914,19542768,2018-08-01 08:47:06,2018-08-01 13:05:55,closed,WIP: Demo unpickling of pre-namespace parameterized objects.,"WIP to see what changes are required to get hv data tests to pass. (The alternative would be updating the hv reference data.)

Explanation (copied from #2903)...

On unpickling, the recently added param namespace object is not being set up correctly from the state in the pickle (of the old param). Specifically, the param object's self isn't set (so is None). That of course leads to various problems (e.g. get_param_values(), used in hv's comparisons, reports the class's values rather than the instance's values).

To test that idea out, I thought it'd be a one line fix in Parameterized.setstate to set self on the param object, but one or more hv things (e.g. LabelledData) appear to have their own independent state handling for pickle, and don't use Parameterized's, so I need to discuss if that's deliberate or an oversight.

I also need to see what param's current policy is regarding backwards compatibility of pickles (and consider if that's how it should be). I used to make pickle loading backwards compatible with old pickles when param was part of topographica, but not sure if I ever moved any of that stuff to param itself, or what's happened since then...",5,4,[]
987,205302935,2912,19542768,2018-08-01 04:02:07,2018-08-01 12:05:54,closed,Fix clickable legends for some elements,"Test notebook
https://anaconda.org/ahuang11/test_muted_alpha/notebook",1,2,[]
988,205113583,2907,19542768,2018-07-31 13:31:19,2020-06-08 15:19:11,closed,Example for deploying Bokeh app in Flask,"Here I added an example inside the user guide Deploying_Bokeh_Apps.ipynb where you can use the Bokeh Application that you create a Holoviews Dynamic Map in, and then serve that Application through a Flask Application. ",11,3,[]
989,205067365,2903,19542768,2018-07-31 10:33:06,2018-08-04 16:46:32,closed,Fix shape and length reporting of gridded interfaces for Python 3.6 on Win 64,"Part of #2895 (this PR just covers grid-based interfaces).

I used the below test files to check these changes. After switching to pyctdev and getting windows tests, these tests could be included in hv's test suite (but presumably re-written into class-based unit tests, which would reduce some boilerplate overlap). (Note for the future: the tests are intentionally set up to work on a machine with less than 4GB ram, for travis/appveyor.)

test_grid.py:
```python
import numpy as np, holoviews as hv
shape = (100, 1+np.iinfo(np.int32).max//100)
img = hv.Image( (range(shape[1]), range(shape[0]), np.empty(shape,dtype=np.uint8)), datatype=['grid'])
img = img.clone(datatype=['grid'])

print(shape, img.shape, type(img.shape[0]))
s = shape[0]*shape[1]

grid_shape = img.interface.shape(img)
# fails because Grid.shape() is wrong
assert grid_shape[0] == s, ""%s != %s""%(grid_shape[0],s)
```

test_image.py:
```python
import numpy as np, holoviews as hv
shape = (100, 1+np.iinfo(np.int32).max//100)
img = hv.Image(np.ndarray(shape,dtype=np.uint8))


print(shape, img.data.shape, type(img.data.shape[0]), img.shape, type(img.shape[0]))
s = shape[0]*shape[1]

length = img.interface.length(img)
# fails because Image.length() is wrong
assert length==s, ""%s != %s""%(length,s)
assert img.shape[0]==s, ""%s != %s""%(img.shape[0],s)
```

test_iris.py:
```python
import numpy as np, holoviews as hv
shape = (100, 1+np.iinfo(np.int32).max//100)
img = hv.Image( (range(shape[1]), range(shape[0]), np.empty(shape,dtype=np.uint8)), datatype=['grid'])
img = img.clone(datatype=['cube'])

print(shape, img.data.shape, type(img.data.shape[0]), img.shape, type(img.shape[0]))
s = shape[0]*shape[1]

# fails because CubeInterface.length() is wrong
assert img.shape[0]==s, ""%s != %s""%(img.shape[0],s)
```

test_xarray.py:
```python
import numpy as np, holoviews as hv
shape = (100, 1+np.iinfo(np.int32).max//100)
img = hv.Image( (range(shape[1]), range(shape[0]), np.empty(shape,dtype=np.uint8)), datatype=['grid'])
img = img.clone(datatype=['xarray'])

print(shape, img.shape, type(img.shape[0]))
s = shape[0]*shape[1]

# fails because XArrayInterface.shape() is wrong
assert img.shape[0]==s, ""%s != %s""%(img.shape[0],s)
# fails because XArrayInterface.length() is wrong
assert img.interface.length(img)==img.shape[0] # TODO verify that definition of length is right
```

",14,5,[]
990,202931740,2883,19542768,2018-07-20 19:04:32,2018-09-26 15:39:29,closed,Flip y axis for QuadMesh as trimesh,Possible fix for https://github.com/pyviz/hvplot/issues/59,3,1,[]
991,200557297,2869,19542768,2018-07-11 00:23:35,2018-09-17 13:54:01,closed,Handle zero ranges correctly in regrid operation,"While I fixed the zero range handling in the aggregate operation I seemingly did not do it properly in the regrid operation. Additionally this PR allows Images to contain arrays with a (0, 0) shape, which previously required a hack which would instead store a (1, 1) image.

- [x] Fixes https://github.com/ioam/holoviews/issues/2817
- [x] Adds unit test",6,7,['type: bug']
992,199905948,2866,19542768,2018-07-07 17:19:17,2018-07-08 16:52:20,closed,Hotfix 1.10.7 - DO NOT MERGE,**DO NOT MERGE**,1,7,[]
993,199902703,2865,19542768,2018-07-07 15:57:50,2018-07-07 17:16:23,closed,ColorBar ticker set to linear if low value <=0,- [x] Fixes https://github.com/ioam/holoviews/issues/2606,1,1,"['type: bug', 'tag: backend: bokeh']"
994,199891776,2863,19542768,2018-07-07 10:52:30,2018-07-07 16:35:33,closed,Handle non-finite range in datashader operations,"Non-finite ranges in the datashader operation were being given special treatment by defining a fake range. This is incompatible with the bounds and density validation so just like the zero-range case it will now actually use an empty range.

Additionally this PR adds support for zero-ranges to the ImageInterface.",0,3,[]
995,199816068,2861,19542768,2018-07-06 18:16:50,2018-07-06 20:14:16,closed,Fixed bug in frame key lookup,Fixes issue when plotting multiple HoloMaps/DynamicMaps with non- or partially overlapping dimensions.,1,1,[]
996,199776890,2860,19542768,2018-07-06 15:18:01,2018-07-06 16:31:16,closed,Constant value datashader aggregation,"Further fixes for datashader aggregation on an axis with a constant value (i.e. zero-range). Also fixes a datetime issue and some issues when cloning Image types.

- [x] Fixes https://github.com/ioam/holoviews/issues/2858
- [x] Adds unit test",2,4,"['type: bug', 'tag: component: data']"
997,199751834,2859,19542768,2018-07-06 13:44:05,2018-07-06 15:46:00,closed,Ignore non-referenced data in dictionary format,Turns out I hadn't correctly caught everything in https://github.com/ioam/holoviews/pull/2855. This PR further ensures nothing attempts to use dictionary keys that have not been referenced as a dimension.,3,1,['tag: component: data']
998,199216621,2855,19542768,2018-07-04 11:11:49,2018-07-04 16:08:16,closed,DictInterface only validates referenced columns,Disables validation for columns which are not referenced as a dimension in the DictInterface. It can be useful to store other data in the dictionary and validation should not prevent non-standard data from being stored when HoloViews will just ignore that data anyway.,2,1,['tag: component: data']
999,198393692,2849,19542768,2018-06-29 18:38:03,2018-06-29 19:45:24,closed,Do not sort by default when concatenating pandas data,Avoids very large futurewarning when concatenating pandas datasets.,3,1,['tag: component: data']
1000,198388014,2848,19542768,2018-06-29 18:12:44,2018-06-29 18:39:22,closed,Added CHANGELOG for 1.10.6,,2,2,[]
1001,198383433,2847,19542768,2018-06-29 17:52:29,2018-06-29 18:22:33,closed,Added matplotlib SideAreaPlot,"Improves adjoined Distribution plots by reducing their axis offset, e.g.:

![image](https://user-images.githubusercontent.com/1550771/42106917-8e0e3226-7bcd-11e8-8ab2-d91aeb45084b.png)
",2,1,"['tag: backend: mpl', 'type: enhancement']"
1002,198104527,2843,19542768,2018-06-28 17:47:01,2018-06-28 19:15:44,closed,Fixed bug rendering gif using mpl,Fixes an annoying bug that's been causing tests to fail about 80% of the time recently. Not sure why or how it worked sometimes but the previous approach was definitely wrong.,3,1,"['type: bug', 'tag: backend: mpl']"
1003,198006944,2842,19542768,2018-06-28 12:01:34,2018-06-29 11:10:49,closed,Improve handling of zero range datashader aggregations,"Ensures datashader aggregation on zero-range data is handled correctly. Previously there were some workarounds that did one of two things:

1. If the range was zero-width then it was padded by an arbitrary factor of 0.5
2. If the width or height were 0 then it would simply increase it to 1

Both were only workarounds and led to unexpected behavior so the operations now return Images with zero sized arrays. This is also related to https://github.com/bokeh/datashader/pull/612 but doesn't require it since the operations are doing all the guarding against the bad cases that datashader doesn't handle correctly.

- [x] Fixes https://github.com/ioam/holoviews/issues/2817
- [x] Adds unit tests",6,9,['type: bug']
1004,197760646,2840,19542768,2018-06-27 14:54:47,2018-06-28 11:02:44,closed,Fixes for empty Paths and contour operation,"Fixes bugs related to applying contours operation to Image without range and MultiInterface.values method.

- [x] Adds unit test",2,4,"['type: bug', 'tag: component: data']"
1005,197758063,2839,19542768,2018-06-27 14:46:48,2018-06-28 11:03:21,closed,Avoid duplicate titles on adjoined plots,"Disables titles on adjoined plots in bokeh.

- [x] Fixes https://github.com/ioam/holoviews/issues/2816",2,1,"['type: bug', 'tag: backend: bokeh']"
1006,197756858,2838,19542768,2018-06-27 14:42:51,2018-06-28 11:13:02,closed,Improved handling of scalar and non-scalar handling in Paths,Ensures that the ``DictInterface.isscalar`` function also handles object types correctly and improves handling for non-scalar values in ContourPlot.,2,2,"['tag: component: plotting', 'tag: component: data']"
1007,197755533,2837,19542768,2018-06-27 14:39:03,2018-06-29 17:57:15,closed,Allow setting HLine/VLine level in bokeh,Makes sure that the overlay zorder is respected by default but old behavior can be restored.,1,1,"['tag: backend: bokeh', 'type: enhancement']"
1008,197751463,2836,19542768,2018-06-27 14:26:19,2018-06-28 10:30:39,closed,Removed bokeh 0.12.14 streaming fix,Removes a fix introduced to patch over a bug in bokeh 0.12.14 since we now require bokeh >= 0.12.15.,2,2,['tag: backend: bokeh']
1009,197700202,2835,19542768,2018-06-27 11:25:22,2018-06-27 20:25:13,closed,Fixed colorbar on RadialHeatMapPlot,"The bokeh RadialHeatMapPlot was not drawing a colorbar.

- [x] Adds unit test",2,1,"['type: bug', 'tag: backend: bokeh']"
1010,197497072,2832,19542768,2018-06-26 17:27:31,2018-07-03 13:58:52,closed,Add ability to define Links between plots,"This PR adds the concept of a ``Link`` to HoloViews. Conceptually the ``Link`` is somewhat similar to a Stream in that it subscribes to changes and events on some ``source`` object and in turn triggers some event in response to it. However unlike a Stream it will not transmit that event from the frontend to the backend, instead it directly triggers some action on the ``target`` object. It therefore allows complex linked behaviors to be executed without involving a Python kernel.

This has several major benefits:

* The linked action can be performed even in a static plot
* The data does not have to be sent across a websocket (and then trigger an event which again sends stuff back across a websocket)
* It is much faster and more responsive than python callback

The design/implementation of the ``Link`` also borrows very heavily from the inspiration of the ``Stream`` classes which has proven itself to be very solid and flexible. Each ``Link`` has a corresponding ``LinkCallback`` which defines what happens in case an event on the source is triggered. In the case of bokeh (currently the only supported backend for Links), the ``LinkCallback`` defines a (hopefully) small amount of JS which defines the action to be performed.  In addition just like a ``StreamCallback`` it defines which models the callback should have access to and on which events/changes should trigger it. In this way we can concisely declare the linkage between two visualizations.

As a simple example I've prototyped a ``PathTableLink``, what this does is show a table of the currently selected Path.

```python
path = hv.Path([np.random.rand(10, 2), np.random.rand(10, 2)], ['xs', 'ys']).options(tools=['tap'])
table = hv.Table([], ['xs', 'ys'])
hv.links.PathTableLink(path, table)
path + table
```

![path_table_link](https://user-images.githubusercontent.com/1550771/41928812-514a1a50-796e-11e8-83a4-a24d9e45ef52.gif)

- [x] Write documentation about links
- [x] Add at least 2-3 example Link classes along with reference examples
- [x] Add unit tests",15,19,"['type: feature', 'tag: API', 'tag: backend: bokeh', 'status: WIP']"
1011,197405850,2831,19542768,2018-06-26 12:32:01,2018-06-26 14:04:50,closed,Add ability to mute legend entries by default,"Adds a ``legend_muted`` plot option which mutes the legend entries by default.

- [x] Implements https://github.com/ioam/holoviews/issues/2742",1,2,"['tag: backend: bokeh', 'type: enhancement']"
1012,197397398,2830,19542768,2018-06-26 11:59:25,2018-06-26 14:06:55,closed,Fix for matplotlib BoxWhisker and Violin overlays,"The legend code in the matplotlib looks at the artist in the ``handles`` dictionary and tries to hash it in order to generate a unique legend entry for each artist. In the case of BoxWhisker and Violin elements the artist is a dictionary which cannot be hashed. This PR adds each artist to the handles separately ensuring and aliases the 'boxes' and 'bodies' artists to the 'artist' handle, which allows the legend code to correctly process the legend for these elements.

- [x] Fixes https://github.com/ioam/holoviews/issues/2826
- [x] Adds unit tests",1,3,"['type: bug', 'tag: backend: mpl']"
1013,197379208,2829,19542768,2018-06-26 10:46:17,2018-06-26 14:09:43,closed,Fixed bug datashading NdOverlay with datetime axis,"The datashading code was not converting coordinates back to datetimes when applied to an NdOverlay. This PR simply ensures the same conversion is applied as in all other cases.

- [x] Fixes https://github.com/ioam/holoviews/issues/2819
- [x] Adds unit test
",1,1,['type: bug']
1014,196908488,2824,19542768,2018-06-23 15:55:05,2018-06-23 17:54:11,closed,Update plotly/raster.py to fix Raster for plotly,"This should fix an issue with Raster for plotly backend which was reported here:
https://github.com/ioam/holoviews/issues/2821",4,1,[]
1015,196113455,2815,19542768,2018-06-20 11:57:39,2018-06-20 15:30:50,closed,Bump version requirement to include bokeh 0.13,,1,1,['tag: backend: bokeh']
1016,196088493,2814,19542768,2018-06-20 10:16:10,2018-06-20 15:29:29,closed,Added support for setting Text/Label rotation,"Adds ability to define the rotation/angle of Text and Labels annotations.

- [x] Fixes https://github.com/ioam/holoviews/issues/2813
- [x] Fixes https://github.com/ioam/holoviews/issues/2737
- [x] Adds unit tests",2,1,"['tag: backend: bokeh', 'type: enhancement']"
1017,195896629,2812,19542768,2018-06-19 17:04:39,2018-06-22 11:40:15,closed,Histogram enhancements,"Various enhancements for the histogram operation:

* Remove ``individually`` parameter which didn't do anything
* Added ``cumulative`` parameter to compute cumulative histogram (https://github.com/ioam/holoviews/issues/2811)
* Added option to pass in explicit list/array of bins
- [x] Adds unit tests  ",2,4,['type: enhancement']
1018,195501738,2808,19542768,2018-06-18 11:57:51,2018-06-20 15:20:04,closed,Fix for non-categorical discrete color levels in bokeh,Fixes bug that was introduced in the recent PR to support color intervals. Also improves the unit test to ensure it would have caught this regression.,2,2,"['type: bug', 'tag: backend: bokeh']"
1019,195162289,2806,19542768,2018-06-15 12:40:25,2018-06-19 12:51:45,closed,Fixed updating of dynamic Overlay with tabs=True,Partial fix for https://github.com/ioam/holoviews/issues/2782 ensuring that an Overlay where tabs=True creates a new subplot for each tab and does not try to generate a legend. Full fix also requires https://github.com/ioam/holoviews/pull/2286.,2,1,"['type: bug', 'tag: backend: bokeh']"
1020,194868791,2805,19542768,2018-06-14 11:57:03,2018-06-14 16:18:32,closed,Do not sort data in Violin and BoxWhisker plots,"Stops the Violin and BoxWhisker plots from sorting the data on groupbys which provides a temporary fix for #2792 until we disable sorting on groupbys in general in https://github.com/ioam/holoviews/pull/2803.

- [x] Fixes #2792 
",1,1,"['type: bug', 'tag: backend: bokeh', 'tag: backend: mpl']"
1021,194611494,2803,19542768,2018-06-13 14:43:42,2018-07-06 14:38:26,closed,Ensure that Dataset.groupby does not sort by default,"Seemingly all the tabular data interfaces sorted the groups when applying a groupby, which is not always desirable, and is inconsistent with the gridded interfaces, which already maintain the supplied ordering. It also causes issues like https://github.com/ioam/holoviews/issues/2792, where the user expected the data to stay in the order it was defined in. While I think the previous behavior was incorrect I'm also somewhat wary of changing it right away since it is a definite change in behavior. Any thoughts @jbednar and @jlstevens?

- [x] Fixes https://github.com/ioam/holoviews/issues/2792",5,2,"['type: bug', 'tag: component: data']"
1022,194583667,2802,19542768,2018-06-13 13:19:26,2018-06-13 20:12:28,closed,Fixed colorbar axis label in matplotlib,"Straightforward fix to ensure the colorbar axis is labelled correctly.

- [x] Fixes #2800 ",2,1,"['type: bug', 'tag: backend: mpl']"
1023,194577510,2801,19542768,2018-06-13 12:58:14,2018-06-13 20:11:55,closed,Allow specifying port and multiple websocket_origins in BokehRenderer,"The BokehRenderer.app method did not allow specifying multiple websocket origins, useful when trying to access the app locally and remotely, and also did not allow setting the port to serve the plot on.

- [x] Implements https://github.com/ioam/holoviews/issues/2791",2,1,"['tag: backend: bokeh', 'type: enhancement']"
1024,194279380,2797,19542768,2018-06-12 13:26:33,2018-06-13 20:10:54,closed,Allow defining color intervals,"This PR adds support for defining color intervals via the color_levels option. The ``color_levels`` option now allows defining a list of levels to map each supplied color to.

The example used in the docs is as follows:

```python
levels = [0, 38, 73, 95, 110, 130, 156, 999]  
colors = ['#5ebaff', '#00faf4', '#ffffcc', '#ffe775', '#ffc140', '#ff8f20', '#ff6060']

path = [
    (-75.1, 23.1, 0),   (-76.2, 23.8, 0),   (-76.9, 25.4, 0),   (-78.4, 26.1, 39),  (-79.6, 26.2, 39),
    (-80.3, 25.9, 39),  (-82.0, 25.1, 74),  (-83.3, 24.6, 74),  (-84.7, 24.4, 96),  (-85.9, 24.8, 111),
    (-87.7, 25.7, 111), (-89.2, 27.2, 131), (-89.6, 29.3, 156), (-89.6, 30.2, 156), (-89.1, 32.6, 131),
    (-88.0, 35.6, 111), (-85.3, 38.6, 96)
]

hv.Path([path], vdims='Wind Speed').options(
    color_index='Wind Speed', color_levels=levels, cmap=colors, line_width=8, colorbar=True, width=450
)
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/41293181-8b2453b2-6e4c-11e8-88dc-65c56aa216cc.png)
",2,5,"['tag: component: plotting', 'type: enhancement']"
1025,193981393,2794,19542768,2018-06-11 13:28:24,2018-06-14 16:17:14,closed,Handle single pixel Image types,"In https://github.com/ioam/holoviews/issues/2785 an issue describes how when creating a single-pixel Image datashading breaks. This is because Image cannot compute a density from a single coordinate. This can be worked around if the resampling operation directly supplies the Image ``bounds``. Additionally this PR adds an explicit check for invalid densities, which arise when a single-pixel image is declared without supplying bounds.",9,4,['type: bug']
1026,193980089,2793,19542768,2018-06-11 13:23:50,2018-06-13 22:36:05,closed,Dropping gridded data non-scalar coordinates casts datatype ,"Currently when dropping non-scalar gridded data dimensions it still attempts to maintain the datatype, which can cause issues due to duplicate coordinates. This PR cleans up the detection of scalar coordinates (i.e. key dimensions) and ensures that if a non-scalar dimension is dropped the data is cast from a gridded to a tabular datatype.

- [x] Adds unit test",5,6,"['type: bug', 'tag: component: data']"
1027,193828105,2790,19542768,2018-06-10 14:09:30,2018-06-26 16:17:33,closed,Cleaned up Dimension casting and name lookup,"The code is currently littered with ``isinstance(dim, Dimension)`` checks, which is not optimal because it's duplicative but more importantly because it does not check for the full range of valid dimension specs which include tuples and dictionaries. This PR adds two utilities one to cast Dimension-like objects to Dimensions if it isn't already one and the other that looks up the name on Dimensions or Dimension-like objects. It then uses these utilities throughout the code.

- [x] Adds unit test",4,5,"['type: bug', 'tag: component: data']"
1028,193775686,2789,19542768,2018-06-09 12:36:39,2018-06-11 13:08:58,closed,Handle kdims referencing multi-index in dask,"Since dask dataframes do not support multi-indexes the current code does not detect when a multi-index is referenced. The only way of checking whether the multi-index exists is to speculatively reset the index (which is almost free when using dask) and check whether the columns exist on the reindexed dataframe. This code now resets the index and uses the reindexed dataframe if the columns are present there (otherwise the validation code will complain about missing columns as before).

- [x] Adds unit tests",3,1,"['type: bug', 'tag: component: data']"
1029,192772019,2774,19542768,2018-06-05 16:50:06,2018-06-05 16:54:36,closed,Added branch for pyviz_comms backwards compatibility,This should avoid the problem when loading old notebooks with output.,0,2,[]
1030,192715990,2773,19542768,2018-06-05 13:55:37,2018-06-05 16:29:41,closed,Added CHANGELOG entry for 1.10.5,,1,1,[]
1031,192568862,2771,19542768,2018-06-05 01:33:39,2018-06-05 13:27:19,closed,Fixed inverted QuadMesh bug,"As reported in a HoloPlot issue the coordinates in a QuadMesh are not correctly ordered causing the plot to be inverted. This is a simple fix to use the ordered coordinates. 

- [x] Fixes https://github.com/pyviz/holoplot/issues/23",2,2,"['type: bug', 'tag: backend: bokeh']"
1032,192534871,2770,19542768,2018-06-04 21:34:55,2018-06-05 13:29:25,closed,Update the bokeh reset ranges,"In https://github.com/bokeh/bokeh/pull/7948 I added ``reset_start`` and ``reset_end`` parameters for bokeh ranges to allow updating the range the reset tool resets to. This is a longstanding annoyance for HoloViews plots and this PR simply updates the reset_range whenever the actual ranges are updated.

- [x] Fixes https://github.com/ioam/holoviews/issues/2371",5,1,"['tag: backend: bokeh', 'type: enhancement']"
1033,192419480,2767,19542768,2018-06-04 14:05:45,2018-06-04 20:19:15,closed,Minor Interface improvements,"Three minor fixes/improvements for data interfaces:

1) Fixed pandas 0.23 deprecation warning in rolling operation
2) Added element conversion method for violin (Fixes https://github.com/ioam/holoviews/issues/2763)
3) Filter warnings for nan/inf comparisons on Interface.select_mask",2,5,"['tag: component: data', 'type: enhancement']"
1034,192387299,2766,19542768,2018-06-04 12:10:20,2018-06-04 16:11:04,closed,Theme fix,"Unfortunately theming broke in the notebook again. This is because theming lacks unit tests, partially because it is difficult to test - checking Bokeh's ``.state`` in the usual way does not seem to work.

This PR restores theming in the notebook and I seem to have found a way to test it (at least for the notebook context) at the display hooks level. For some reason, everything has to go through the full notebook machinery for theming to be applied.

Although it *looks* like it is working again this PR is still WIP:

- [x] I'm not sure if this is the right fix - it seems to work in notebook but maybe it is incorrect or breaks something else?
- [x] Need to test theming keeps working in the bokeh server context.
- [x] Need to improve this new unit test (e.g skip if bokeh is unavailable, simplify test theme, tear it down nicely etc)",7,9,"['type: bug', 'tag: backend: bokeh']"
1035,192377632,2765,19542768,2018-06-04 11:28:03,2018-06-04 14:44:02,closed,Fixed bokeh gridstyle option in Overlays,"Fixed application of gridstyles in Overlays by declaring it as an option to be propagated.

- [x] Fixes https://github.com/ioam/holoviews/issues/2764
- [x] Adds unit test",2,2,"['type: bug', 'tag: backend: bokeh']"
1036,192197044,2762,19542768,2018-06-02 13:08:21,2018-06-22 11:59:51,closed,Implement grid concatenation and standardize datatype casting,"This PR has two main aims:

1) Standardize and simplify how casting between different datatypes works
2) Implement concatenation for all datatypes

Before this PR was applied past both casting and concatenation were limited to columnar data formats, which meant that certain operations could not be applied to gridded data, e.g. a HoloMap collapse. Having a dedicated concat implementation for both columnar and gridded data also allows much more efficient concatenation than what is currently in use by methods like ``.table`` and ``.dframe`` and will generalize them so that we can eventually replace the column specific ``.table`` implementation with a general one that returns a dataset of arbitrary type.

Implementing concatenation along HoloMap dimensions also means that Dataset.groupby operations are now reversible and fixes HoloMap.collapse.

- [x] Fixes https://github.com/ioam/holoviews/issues/1417
- [x] Adds unit tests",5,14,"['type: bug', 'tag: component: data', 'type: enhancement']"
1037,192093253,2761,19542768,2018-06-01 17:12:14,2018-06-04 15:12:25,closed,Fixed bug adding dimension to XArrayInterface,"The XArrayInterface.add_dimension method was assuming that the underlying xarray Dataset dimension ordering would be the same as the dimensions on the hv.Dataset, which does not have to be the case. This PR ensures that the dimensions are declared in the correct order.

- [x] https://github.com/ioam/holoviews/issues/2752
- [x] Adds unit tests",3,2,"['type: bug', 'tag: component: data']"
1038,192087977,2760,19542768,2018-06-01 16:47:58,2018-06-04 14:24:36,closed,Fixes hover on inverted Histogram,"Very simple fix for Histogram hover, the inversion of top/bottom values on the bars caused bokeh not to correctly perform the hover hit testing.

- [x] Fixes https://github.com/ioam/holoviews/issues/2747",3,1,"['type: bug', 'tag: backend: bokeh']"
1039,192031698,2757,19542768,2018-06-01 13:16:48,2018-06-20 15:17:46,closed,Fix for mid date interpolation,"`steps[0, 1:-1:2] = steps[0, 2::2] = (x[:-1] + x[1:]) / 2`

This does not work for interpolating datetimes. This is because adding date does not makes sense and Numpy will throw an error

`TypeError: ufunc add cannot use operands with types dtype('<M8[us]') and dtype('<M8[us]')`

By changing it to an equivalent form

`steps[0, 1:-1:2] = steps[0, 2::2] = x[:-1] + (x[1:] - x[:-1])/2`

it adds a datetime and a delta datetime.

This works equally well for numbers.

**With a bit of help I could also write tests.**",15,6,[]
1040,192020305,2755,19542768,2018-06-01 12:27:59,2018-06-04 14:05:05,closed,Nested legend,"This PR ensures that nested Nd(Overlays) generate a legend. Previously nesting Overlays inside an NdOverlay would mean two things:

1) The styling group_counter would be reset inside the nested OverlayPlot meaning that color cycles would not work.
2) The topmost legend plot would not find matplotlib artists nested further down and the bokeh version would not pass its dimensions down to the individual elementplots meaning that no legend would be generated.

```python
%%opts Spread (alpha=0.1) Path [show_legend=True]

d = {}
for i in range(1, 5):
    xs = np.linspace(0, 1)
    ys = xs**2 / i + 5 * i
    d[i] = hv.Path((xs, ys), kdims=['X', 'Y']) * hv.Spread((xs, ys, 2))
hv.NdOverlay(d)
```

<img width=""304"" alt=""screen shot 2018-06-01 at 1 27 20 pm"" src=""https://user-images.githubusercontent.com/1550771/40840658-8b62b644-659f-11e8-82ff-fe96578f5e2a.png"">

![image](https://user-images.githubusercontent.com/1550771/40840633-6eafbaba-659f-11e8-9b5b-b56bacb56483.png)

- [x] Fixes https://github.com/ioam/holoviews/issues/2754",2,3,"['type: bug', 'tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
1041,191236671,2750,19542768,2018-05-29 18:46:45,2018-05-29 19:56:41,closed,fix typo,,2,1,['tag: docs']
1042,191022392,2748,19542768,2018-05-29 02:58:43,2018-05-29 13:11:30,closed,Fix dynamic ScrubberWidget and add throttling,"Fixes two issues with the ScrubberWidget:

1. A few releases ago we added the ability to use the ScrubberWidget on a DynamicMap as long all  its dimensions define ``values``, however for this to work the plots had to expand the values into their cross-product. We subsequently reverted the expansion change because it was very slow and expensive for large cross products but did not disable the scrubber. This PR ensures that this works even without expanding the whole cross-product.

2. This PR adds throttling to the ScrubberWidget by using the same approach used by the selection widgets.

- [x] Fixes https://github.com/ioam/holoviews/issues/2571",3,2,['type: bug']
1043,190960706,2746,19542768,2018-05-28 15:51:33,2018-05-28 18:42:09,closed,Grid interface reindex,"This ensures that GridInterface.reindex has the same behavior as NdMapping.reindex, which is to drop scalar dimensions automatically. Also fixes a bug in ``XArrayInterface.ndloc`` uncovered in the process of writing tests for the new reindex functionality.

- [x] Fixes https://github.com/ioam/holoviews/issues/2362
- [x] Adds unit test",2,3,"['type: bug', 'tag: component: data']"
1044,190941129,2745,19542768,2018-05-28 14:13:47,2018-05-28 18:46:26,closed,Move DynamicMap unbounded error onto Renderer,"The validation for unbounded DynamicMaps previously lived inside the display hooks which meant that when working on bokeh server it did not raise a reasonable error message. This moves the validation onto the Renderer which ensures that it is properly validated in and outside the notebook.

- [x] Fixes https://github.com/ioam/holoviews/issues/2309",2,1,"['type: bug', 'tag: component: plotting']"
1045,190831347,2744,19542768,2018-05-28 04:17:15,,open,Add apply_xrange and apply_yrange options,"These are the same as the apply_ranges option, but allow the increased granularity of being able to turn it on or off independently for the x or y axis.",0,2,[]
1046,190802704,2741,19542768,2018-05-27 19:16:15,2018-05-28 17:03:58,closed,Fixed bug in js conversion of value formatters,"Ensures that only the formatter function is modified.

- [x] Fixes https://github.com/ioam/holoviews/issues/2707",1,1,"['type: bug', 'tag: backend: bokeh']"
1047,190802554,2740,19542768,2018-05-27 19:12:27,2018-05-28 18:46:42,closed,Fixed bokeh LayoutPlot bugs,"Turns out that the bokeh LayoutPlot implementation was wrong in all kinds of subtle ways so I've completely rewritten the implementation from scratch. The main issue was that AdjointLayout plots were not correctly positioned on the grid. Secondly when enabling ``tabs`` AdjointLayout plots were split across multiple tabs.

- [x] Fixes https://github.com/ioam/holoviews/issues/1489
- [x] Fixes https://github.com/ioam/holoviews/issues/2568
- [x] Fixes https://github.com/ioam/holoviews/issues/2652
- [x] Adds unit test",4,5,"['type: bug', 'tag: backend: bokeh']"
1048,190802110,2739,19542768,2018-05-27 19:02:21,2018-05-28 18:51:42,closed,Allow the conversion interface to discover pandas indexes,"Allows referencing pandas indexes in .to interface even when Dataset does not declare them as dimensions.

- [x] Fixes https://github.com/ioam/holoviews/issues/2717",2,2,"['tag: component: data', 'type: enhancement']"
1049,190721750,2734,19542768,2018-05-26 02:34:07,2018-05-28 12:17:47,closed,Interface test reorganization,"Reorganizes the interface tests into several files, previously a single file contained >1000 tests, which was less than ideal and quite annoying if you were simply testing changes to one interface. Secondly the class hierarchies of the tests were in some cases not correct and in other cases it wasn't testing the correct interface. The PR expands the test suite by about 200 tests by running more of the tests against a wider set of interfaces. Additionally this fixes two bugs uncovered by running the tests against other interfaces.",2,6,"['type: bug', 'tag: component: testing']"
1050,190641965,2732,19542768,2018-05-25 16:44:30,2018-11-22 14:27:42,closed,Add baseclass for Overlay and Layout,"As was rightly pointed out in https://github.com/ioam/holoviews/issues/2673 ``Overlay`` currently inherits from ``Layout`` which is not a sensible class hierarchy and also leads ``Overlay`` to inherit a number of methods and behaviors which do not make sense, e.g. ``.cols``, ``.shape`` and ``.grid_items``. This needs pretty thorough testing so it'll have to go in the 1.11 release.",8,3,['tag: API']
1051,190463738,2728,19542768,2018-05-25 02:01:57,2018-12-06 19:02:21,closed,Added support for cftime types,"This PR adds support for ``cftime`` types which are a custom time type used by xarray for dates that cannot be stored in a datetime64 type. A small example:

```python
ref_date = '0181-01-01'
ds = xr.DataArray([1, 2, 3], dims=['time'],
                  coords={'time': ('time', [1, 2, 3],
                                   {'units': 'days since %s' % ref_date})}
                  ).to_dataset(name='foo')
with xr.set_options(enable_cftimeindex=True):
    ds = xr.decode_cf(ds)
print(ds)
hv_ds = hv.Dataset(ds)
hv_ds.to(hv.Curve)
```

```
<xarray.Dataset>
Dimensions:  (time: 3)
Coordinates:
  * time     (time) object 0181-01-02 00:00:00 0181-01-03 00:00:00 ...
Data variables:
    foo      (time) int64 ...
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/40522053-d1439324-5fc6-11e8-85fd-e944fdf79c52.png)

This approach seems to work well but there are a questions I have, which @rabernat and @spencerclark hopefully can answer:

1. Which types does it make sense to support, and do they all support conversion to a timetuple? As far as I could tell this is the list of types ``cftime`` provides:

```
cftime._cftime.Datetime360Day
cftime._cftime.DatetimeGregorian
cftime._cftime.DatetimeJulian
cftime._cftime.DatetimeNoLeap
cftime._cftime.DatetimeProlepticGregorian
```

2. Secondly in what context can I expect these types to be used? Will they mostly be used by xarray or should I also handle them elsewhere?

- [x] Addresses https://github.com/ioam/holoviews/issues/2709 and https://github.com/pydata/xarray/issues/2164
- [x] Add unit tests
- [x] Handle matplotlib
- [x] Handle datashader (if possible)",9,14,['type: enhancement']
1052,190400543,2727,19542768,2018-05-24 19:48:25,2018-05-24 22:07:08,closed,Fixed inconsistent whitespace that was messing up hv.help(),"Fixes #2710. I had thought that there would be lots of misformatted docstrings, but it turned out there were only a dozen or so, so I went ahead and fixed those.  Also made trivial changes to docs where I spotted issues. Ready to merge when tests pass.",4,2,[]
1053,190391616,2726,19542768,2018-05-24 19:12:57,2018-05-29 13:26:18,closed,Avoid making clone in DynamicMap.options method if requested,"This is a tricky issue, we recently added the ability to use ``.options`` without making a clone, which has worked out great and is used quite frequently (at least by me) since it is very convenient when working with an element that is a stream source. However the ``DynamicMap.options`` method still made clones even when ``clone=False`` was set, this is because our general approach to applying any operation to a DynamicMap is to wrap the DynamicMap in another DynamicMap either by writing a wrapping callback or by using the ``Dynamic`` utility. In this particular case we have to make an exception and wrap the user supplied callback function directly without wrapping the DynamicMap. It's not ideal and doesn't fit the model we use elsewhere but it's the only way to avoid inconsistencies like the one raised in https://github.com/ioam/holoviews/issues/2698.",6,1,['type: bug']
1054,190390118,2725,19542768,2018-05-24 19:06:51,2018-05-24 20:17:14,closed,Removed usage of deprecated DataFrame.from_items,"DataFrame.from_items is deprecated, I already removed one of these elsewhere but missed this one.",2,1,['tag: component: data']
1055,190294398,2724,19542768,2018-05-24 13:42:14,2018-05-26 22:23:40,closed,Ensure vdims are initialized on PointDraw stream,"When plotting a Points object with a PointDraw stream various value dimensions may be defined which are not necessarily defined on the ColumnDataSource (because vdims are usually only sent when the hover tool is requested). This can cause issues downstream because the PointDraw tool won't know to add values along that dimension. This PR ensures that the PointDrawCallback initializes those columns if the plot hasn't already done so.

- [x] Fixes https://github.com/pyviz/EarthSim/issues/87
- [x] Add unit test",3,1,"['type: bug', 'tag: backend: bokeh']"
1056,190281355,2723,19542768,2018-05-24 13:00:50,2018-05-25 12:04:26,closed,Minor bug fix for adding custom node attributes,"Followup on #2714, fixes a bug when supplying custom node attributes.

- [x] Adds unit test",2,1,['type: bug']
1057,190268708,2722,19542768,2018-05-24 12:17:40,2018-05-24 14:15:34,closed,Fixed bug defining callbacks on synced sources,"After datasources are synced, i.e. shared across a layout any callbacks defined on the datasource is currently not given the correct plot id. When the top level plot syncs the datasources, the callbacks are reinitialized at which point we can directly pass the plot_id to the callback.

- [x] Adds unit test",4,2,['type: bug']
1058,190267062,2721,19542768,2018-05-24 12:11:26,2018-05-24 13:49:00,closed,Added image hover examples to the docs,"In the bokeh element reference:

![image](https://user-images.githubusercontent.com/890576/40484548-d9a5bfce-5f53-11e8-87d7-d41285dba251.png)

In the bokeh user guide:

![image](https://user-images.githubusercontent.com/890576/40484569-ef65bdb4-5f53-11e8-9aef-bdad73ba4052.png)
",5,3,['tag: docs']
1059,190071723,2720,19542768,2018-05-23 18:52:30,2018-06-04 18:20:26,closed,Importing comms machinery from pyviz_comms,This PR is to update holoviews to use the new [pyviz_comms](https://github.com/pyviz/pyviz_comms) package. Note that the ``builder`` and ``nbpublisher`` submodules in ``doc`` will need updating.,5,7,[]
1060,190033152,2719,19542768,2018-05-23 16:21:50,2018-05-28 16:55:57,closed,Support datetimes in histogram operation,"This PR makes it possible to generate a histogram from datetime data as requested in https://github.com/ioam/holoviews/issues/2713 and https://github.com/pyviz/holoplot/issues/12. This is consistent with ``plt.hist`` which also handle datetimes and can be useful to determine the sampling frequency of a dataset.

- [x] Implements https://github.com/ioam/holoviews/issues/2713
- [x] Adds unit tests",3,9,['type: enhancement']
1061,189795816,2716,19542768,2018-05-22 21:20:34,2018-05-24 14:39:30,closed,Handle NaT types in isfinite utility,As mentioned in https://github.com/ioam/holoviews/pull/2715 we currently do not handle NaT types at all. Unfortunately this is a bit of a pain since it has only been consistently supported in NumPy >= 1.13. Additionally this PR improves the ``isfinite`` utility to work correctly on various arraylike types including pandas index and series types.,3,1,[]
1062,189736859,2715,19542768,2018-05-22 17:24:58,2018-05-22 18:41:21,closed,Add a isfinite utility to use throughout code,"Throughout our code we check whether a value is finite using the np.isfinite utility, in almost all of those cases this usage is accompanied by additional checks whether the value is a None, datetime or string type. This also caused various bugs when we did not check for these extra types (e.g. https://github.com/ioam/holoviews/issues/2708). I've therefore added a ``isfinite`` utility that accounts for these corner cases.

- [x] Fixes https://github.com/ioam/holoviews/issues/2708
- [x] Fixes https://github.com/ioam/holoviews/issues/2712
- [x] Adds unit tests",9,5,['type: bug']
1063,189723282,2714,19542768,2018-05-22 16:32:25,2018-05-22 17:37:52,closed,Graph.from_networkx method now extract node and edge attributes,"This PR will allow the Graph.from_networkx method to extract any attributes defined on the nodes and edges and also fixes a bug when trying to plot a Graph with no edges (i.e. only nodes).

- [x] Addresses https://github.com/ioam/holoviews/issues/2696
- [x] Fixes https://github.com/ioam/holoviews/issues/2711
- [x] Add unit tests",6,3,"['type: bug', 'type: enhancement']"
1064,189255401,2706,19542768,2018-05-20 22:08:44,2018-05-21 11:01:07,closed,Fix bug dropping streams in DynamicMap.groupby,"- [x] Fixes #2705 
- [x] Adds unit test",2,1,['type: bug']
1065,189203107,2702,19542768,2018-05-19 19:30:46,2018-05-21 14:19:37,closed,Update contours operation to work with QuadMesh,The ``contours`` operation had not been updated to work with the new Dataset based ``QuadMesh`` API.,3,2,['type: bug']
1066,189189130,2701,19542768,2018-05-19 13:54:15,2018-05-21 10:55:06,closed,Fixes for datashader reduction error,"- [x] Fixes bug in datashade/rasterize operation error handling
- [x] Defines missing 'sum': rd.sum reduction",4,1,['type: bug']
1067,189188918,2700,19542768,2018-05-19 13:48:40,2018-05-21 10:55:34,closed,Fixed ResetCallback,"The ResetCallback for the PlotReset stream was still incorrectly returning {'reset': True}, rather than the updated ``{'resetting': True}``.

- [x] Adds unit test",1,1,"['type: bug', 'tag: backend: bokeh']"
1068,189188549,2699,19542768,2018-05-19 13:38:46,2018-05-21 10:53:42,closed,Fixed DeprecationWarning in pandas 0.23,"In pandas 0.23 the pd.DataFrame.from_items method raises deprecation warnings, this replaces the offending line in the PandasInterface.",1,1,['tag: component: data']
1069,188737761,2691,19542768,2018-05-17 13:30:46,2018-05-21 13:41:50,closed,Fixed plotting of QuadMesh with nan coordinates,"Ensure that curvilinear coordinate meshes are all valid before plotting. Useful when plotting projected QuadMesh with some invalid values.

![bokeh_plot](https://user-images.githubusercontent.com/1550771/40180495-dfa85730-59de-11e8-9d7d-7537a2f62414.png)
",2,2,"['type: bug', 'tag: backend: bokeh']"
1070,188355863,2690,19542768,2018-05-16 08:33:28,2018-05-16 16:14:15,closed,Addressed some notebook flakes,"Follows on from #2439 (and #2091), where I'm testing a notebook flake checking tool.

My current dev version (which is supposed to handle hv opts now too) finds the following minor flakes in the examples directory:

```
$ pytest --nbsmoke-lint -k "".ipynb"" examples
======================================================== test session starts =========================================================
platform linux -- Python 3.6.4, pytest-3.5.1, py-1.5.3, pluggy-0.6.0
rootdir: /scratch/holoviews, inifile:
plugins: nbsmoke-0.2.6+g68f61cf.dirty
collected 239 items                                                                                                                  

examples/gallery/demos/bokeh/area_chart.ipynb .                                                                                [  0%]
examples/gallery/demos/bokeh/autompg_histogram.ipynb F                                                                         [  0%]
examples/gallery/demos/bokeh/autompg_violins.ipynb F                                                                           [  1%]
examples/gallery/demos/bokeh/bachelors_degrees_by_gender.ipynb F                                                               [  1%]
examples/gallery/demos/bokeh/bars_economic.ipynb F                                                                             [  2%]
examples/gallery/demos/bokeh/box_draw_roi_editor.ipynb .                                                                       [  2%]
examples/gallery/demos/bokeh/boxplot_chart.ipynb F                                                                             [  2%]
examples/gallery/demos/bokeh/dot_example.ipynb F                                                                               [  3%]
examples/gallery/demos/bokeh/dragon_curve.ipynb .                                                                              [  3%]
examples/gallery/demos/bokeh/dropdown_economic.ipynb F                                                                         [  4%]
examples/gallery/demos/bokeh/emoji_tsne.ipynb .                                                                                [  4%]
examples/gallery/demos/bokeh/energy_sankey.ipynb .                                                                             [  5%]
examples/gallery/demos/bokeh/hextile_movie_ratings.ipynb F                                                                     [  5%]
examples/gallery/demos/bokeh/histogram_example.ipynb .                                                                         [  5%]
examples/gallery/demos/bokeh/iris_density_grid.ipynb F                                                                         [  6%]
examples/gallery/demos/bokeh/iris_example.ipynb F                                                                              [  6%]
examples/gallery/demos/bokeh/iris_grouped_grid.ipynb F                                                                         [  7%]
examples/gallery/demos/bokeh/iris_splom_example.ipynb F                                                                        [  7%]
examples/gallery/demos/bokeh/irregular_quadmesh.ipynb .                                                                        [  7%]
examples/gallery/demos/bokeh/legend_example.ipynb .                                                                            [  8%]
examples/gallery/demos/bokeh/lesmis_example.ipynb .                                                                            [  8%]
examples/gallery/demos/bokeh/lorenz_attractor_example.ipynb .                                                                  [  9%]
examples/gallery/demos/bokeh/mandelbrot_section.ipynb .                                                                        [  9%]
examples/gallery/demos/bokeh/measles_example.ipynb .                                                                           [ 10%]
examples/gallery/demos/bokeh/network_graph.ipynb .                                                                             [ 10%]
examples/gallery/demos/bokeh/nyc_radial_heatmap.ipynb .                                                                        [ 10%]
examples/gallery/demos/bokeh/point_draw_triangulate.ipynb F                                                                    [ 11%]
examples/gallery/demos/bokeh/quiver_demo.ipynb .                                                                               [ 11%]
examples/gallery/demos/bokeh/route_chord.ipynb F                                                                               [ 12%]
examples/gallery/demos/bokeh/scatter_economic.ipynb F                                                                          [ 12%]
examples/gallery/demos/bokeh/square_limit.ipynb .                                                                              [ 12%]
examples/gallery/demos/bokeh/step_chart.ipynb F                                                                                [ 13%]
examples/gallery/demos/bokeh/stocks_example.ipynb .                                                                            [ 13%]
examples/gallery/demos/bokeh/texas_choropleth_example.ipynb F                                                                  [ 14%]
examples/gallery/demos/bokeh/topographic_hillshading.ipynb F                                                                   [ 14%]
examples/gallery/demos/bokeh/us_unemployment.ipynb .                                                                           [ 15%]
examples/gallery/demos/bokeh/verhulst_mandelbrot.ipynb .                                                                       [ 15%]
examples/gallery/demos/matplotlib/area_chart.ipynb .                                                                           [ 15%]
examples/gallery/demos/matplotlib/autompg_histogram.ipynb F                                                                    [ 16%]
examples/gallery/demos/matplotlib/autompg_violins.ipynb F                                                                      [ 16%]
examples/gallery/demos/matplotlib/bachelors_degrees_by_gender.ipynb F                                                          [ 17%]
examples/gallery/demos/matplotlib/bars_economic.ipynb F                                                                        [ 17%]
examples/gallery/demos/matplotlib/boxplot_chart.ipynb F                                                                        [ 17%]
examples/gallery/demos/matplotlib/dragon_curve.ipynb .                                                                         [ 18%]
examples/gallery/demos/matplotlib/dropdown_economic.ipynb F                                                                    [ 18%]
examples/gallery/demos/matplotlib/energy_sankey.ipynb .                                                                        [ 19%]
examples/gallery/demos/matplotlib/hextile_movie_ratings.ipynb F                                                                [ 19%]
examples/gallery/demos/matplotlib/histogram_example.ipynb .                                                                    [ 20%]
examples/gallery/demos/matplotlib/iris_density_grid.ipynb F                                                                    [ 20%]
examples/gallery/demos/matplotlib/iris_example.ipynb F                                                                         [ 20%]
examples/gallery/demos/matplotlib/iris_grouped_grid.ipynb F                                                                    [ 21%]
examples/gallery/demos/matplotlib/iris_splom_example.ipynb F                                                                   [ 21%]
examples/gallery/demos/matplotlib/irregular_quadmesh.ipynb .                                                                   [ 22%]
examples/gallery/demos/matplotlib/legend_example.ipynb .                                                                       [ 22%]
examples/gallery/demos/matplotlib/lorenz_attractor_example.ipynb .                                                             [ 23%]
examples/gallery/demos/matplotlib/mandelbrot_section.ipynb .                                                                   [ 23%]
examples/gallery/demos/matplotlib/measles_example.ipynb .                                                                      [ 23%]
examples/gallery/demos/matplotlib/network_graph.ipynb .                                                                        [ 24%]
examples/gallery/demos/matplotlib/nyc_radial_heatmap.ipynb .                                                                   [ 24%]
examples/gallery/demos/matplotlib/polar_scatter_demo.ipynb .                                                                   [ 25%]
examples/gallery/demos/matplotlib/quiver_demo.ipynb .                                                                          [ 25%]
examples/gallery/demos/matplotlib/route_chord.ipynb F                                                                          [ 25%]
examples/gallery/demos/matplotlib/scatter_economic.ipynb F                                                                     [ 26%]
examples/gallery/demos/matplotlib/square_limit.ipynb .                                                                         [ 26%]
examples/gallery/demos/matplotlib/step_chart.ipynb F                                                                           [ 27%]
examples/gallery/demos/matplotlib/stocks_example.ipynb .                                                                       [ 27%]
examples/gallery/demos/matplotlib/surface_3d.ipynb .                                                                           [ 28%]
examples/gallery/demos/matplotlib/texas_choropleth_example.ipynb F                                                             [ 28%]
examples/gallery/demos/matplotlib/topographic_hillshading.ipynb F                                                              [ 28%]
examples/gallery/demos/matplotlib/trisurf3d_demo.ipynb .                                                                       [ 29%]
examples/gallery/demos/matplotlib/us_unemployment.ipynb .                                                                      [ 29%]
examples/gallery/demos/matplotlib/verhulst_mandelbrot.ipynb .                                                                  [ 30%]
examples/gallery/demos/plotly/surface_3d.ipynb .                                                                               [ 30%]
examples/gallery/demos/plotly/trisurf3d_demo.ipynb .                                                                           [ 30%]
examples/getting_started/1-Introduction.ipynb .                                                                                [ 31%]
examples/getting_started/2-Customization.ipynb .                                                                               [ 31%]
examples/getting_started/3-Tabular_Datasets.ipynb .                                                                            [ 32%]
examples/getting_started/4-Gridded_Datasets.ipynb .                                                                            [ 32%]
examples/getting_started/5-Live_Data.ipynb .                                                                                   [ 33%]
examples/reference/containers/bokeh/DynamicMap.ipynb .                                                                         [ 33%]
examples/reference/containers/bokeh/GridSpace.ipynb .                                                                          [ 33%]
examples/reference/containers/bokeh/HoloMap.ipynb .                                                                            [ 34%]
examples/reference/containers/bokeh/Layout.ipynb .                                                                             [ 34%]
examples/reference/containers/bokeh/NdLayout.ipynb .                                                                           [ 35%]
examples/reference/containers/bokeh/NdOverlay.ipynb .                                                                          [ 35%]
examples/reference/containers/bokeh/Overlay.ipynb .                                                                            [ 35%]
examples/reference/containers/matplotlib/DynamicMap.ipynb .                                                                    [ 36%]
examples/reference/containers/matplotlib/GridSpace.ipynb .                                                                     [ 36%]
examples/reference/containers/matplotlib/HoloMap.ipynb .                                                                       [ 37%]
examples/reference/containers/matplotlib/Layout.ipynb .                                                                        [ 37%]
examples/reference/containers/matplotlib/NdLayout.ipynb .                                                                      [ 38%]
examples/reference/containers/matplotlib/NdOverlay.ipynb .                                                                     [ 38%]
examples/reference/containers/matplotlib/Overlay.ipynb .                                                                       [ 38%]
examples/reference/elements/bokeh/Area.ipynb .                                                                                 [ 39%]
examples/reference/elements/bokeh/Arrow.ipynb .                                                                                [ 39%]
examples/reference/elements/bokeh/Bars.ipynb .                                                                                 [ 40%]
examples/reference/elements/bokeh/Bivariate.ipynb .                                                                            [ 40%]
examples/reference/elements/bokeh/Bounds.ipynb F                                                                               [ 41%]
examples/reference/elements/bokeh/Box.ipynb .                                                                                  [ 41%]
examples/reference/elements/bokeh/BoxWhisker.ipynb .                                                                           [ 41%]
examples/reference/elements/bokeh/Chord.ipynb F                                                                                [ 42%]
examples/reference/elements/bokeh/Contours.ipynb .                                                                             [ 42%]
examples/reference/elements/bokeh/Curve.ipynb .                                                                                [ 43%]
examples/reference/elements/bokeh/Distribution.ipynb .                                                                         [ 43%]
examples/reference/elements/bokeh/Div.ipynb .                                                                                  [ 43%]
examples/reference/elements/bokeh/Ellipse.ipynb .                                                                              [ 44%]
examples/reference/elements/bokeh/ErrorBars.ipynb .                                                                            [ 44%]
examples/reference/elements/bokeh/Graph.ipynb F                                                                                [ 45%]
examples/reference/elements/bokeh/HLine.ipynb .                                                                                [ 45%]
examples/reference/elements/bokeh/HSV.ipynb .                                                                                  [ 46%]
examples/reference/elements/bokeh/HeatMap.ipynb .                                                                              [ 46%]
examples/reference/elements/bokeh/HexTiles.ipynb .                                                                             [ 46%]
examples/reference/elements/bokeh/Histogram.ipynb .                                                                            [ 47%]
examples/reference/elements/bokeh/Image.ipynb .                                                                                [ 47%]
examples/reference/elements/bokeh/ItemTable.ipynb F                                                                            [ 48%]
examples/reference/elements/bokeh/Labels.ipynb .                                                                               [ 48%]
examples/reference/elements/bokeh/Path.ipynb .                                                                                 [ 48%]
examples/reference/elements/bokeh/Points.ipynb .                                                                               [ 49%]
examples/reference/elements/bokeh/Polygons.ipynb .                                                                             [ 49%]
examples/reference/elements/bokeh/QuadMesh.ipynb .                                                                             [ 50%]
examples/reference/elements/bokeh/RGB.ipynb .                                                                                  [ 50%]
examples/reference/elements/bokeh/RadialHeatMap.ipynb .                                                                        [ 51%]
examples/reference/elements/bokeh/Raster.ipynb .                                                                               [ 51%]
examples/reference/elements/bokeh/Sankey.ipynb F                                                                               [ 51%]
examples/reference/elements/bokeh/Scatter.ipynb .                                                                              [ 52%]
examples/reference/elements/bokeh/Spikes.ipynb .                                                                               [ 52%]
examples/reference/elements/bokeh/Spline.ipynb F                                                                               [ 53%]
examples/reference/elements/bokeh/Spread.ipynb .                                                                               [ 53%]
examples/reference/elements/bokeh/Table.ipynb F                                                                                [ 53%]
examples/reference/elements/bokeh/Text.ipynb .                                                                                 [ 54%]
examples/reference/elements/bokeh/TriMesh.ipynb F                                                                              [ 54%]
examples/reference/elements/bokeh/VLine.ipynb .                                                                                [ 55%]
examples/reference/elements/bokeh/VectorField.ipynb .                                                                          [ 55%]
examples/reference/elements/bokeh/Violin.ipynb .                                                                               [ 56%]
examples/reference/elements/matplotlib/Area.ipynb .                                                                            [ 56%]
examples/reference/elements/matplotlib/Arrow.ipynb .                                                                           [ 56%]
examples/reference/elements/matplotlib/Bars.ipynb .                                                                            [ 57%]
examples/reference/elements/matplotlib/Bivariate.ipynb .                                                                       [ 57%]
examples/reference/elements/matplotlib/Bounds.ipynb F                                                                          [ 58%]
examples/reference/elements/matplotlib/Box.ipynb .                                                                             [ 58%]
examples/reference/elements/matplotlib/BoxWhisker.ipynb .                                                                      [ 58%]
examples/reference/elements/matplotlib/Chord.ipynb F                                                                           [ 59%]
examples/reference/elements/matplotlib/Contours.ipynb .                                                                        [ 59%]
examples/reference/elements/matplotlib/Curve.ipynb .                                                                           [ 60%]
examples/reference/elements/matplotlib/Distribution.ipynb .                                                                    [ 60%]
examples/reference/elements/matplotlib/Ellipse.ipynb .                                                                         [ 61%]
examples/reference/elements/matplotlib/ErrorBars.ipynb .                                                                       [ 61%]
examples/reference/elements/matplotlib/Graph.ipynb F                                                                           [ 61%]
examples/reference/elements/matplotlib/HLine.ipynb .                                                                           [ 62%]
examples/reference/elements/matplotlib/HSV.ipynb .                                                                             [ 62%]
examples/reference/elements/matplotlib/HeatMap.ipynb .                                                                         [ 63%]
examples/reference/elements/matplotlib/HexTiles.ipynb .                                                                        [ 63%]
examples/reference/elements/matplotlib/Histogram.ipynb .                                                                       [ 64%]
examples/reference/elements/matplotlib/Image.ipynb .                                                                           [ 64%]
examples/reference/elements/matplotlib/ItemTable.ipynb F                                                                       [ 64%]
examples/reference/elements/matplotlib/Labels.ipynb .                                                                          [ 65%]
examples/reference/elements/matplotlib/Path.ipynb .                                                                            [ 65%]
examples/reference/elements/matplotlib/Points.ipynb .                                                                          [ 66%]
examples/reference/elements/matplotlib/Polygons.ipynb .                                                                        [ 66%]
examples/reference/elements/matplotlib/QuadMesh.ipynb .                                                                        [ 66%]
examples/reference/elements/matplotlib/RGB.ipynb .                                                                             [ 67%]
examples/reference/elements/matplotlib/RadialHeatMap.ipynb .                                                                   [ 67%]
examples/reference/elements/matplotlib/Raster.ipynb .                                                                          [ 68%]
examples/reference/elements/matplotlib/Sankey.ipynb F                                                                          [ 68%]
examples/reference/elements/matplotlib/Scatter.ipynb .                                                                         [ 69%]
examples/reference/elements/matplotlib/Scatter3D.ipynb .                                                                       [ 69%]
examples/reference/elements/matplotlib/Spikes.ipynb .                                                                          [ 69%]
examples/reference/elements/matplotlib/Spline.ipynb F                                                                          [ 70%]
examples/reference/elements/matplotlib/Spread.ipynb .                                                                          [ 70%]
examples/reference/elements/matplotlib/Surface.ipynb .                                                                         [ 71%]
examples/reference/elements/matplotlib/Table.ipynb F                                                                           [ 71%]
examples/reference/elements/matplotlib/Text.ipynb .                                                                            [ 71%]
examples/reference/elements/matplotlib/TriMesh.ipynb F                                                                         [ 72%]
examples/reference/elements/matplotlib/TriSurface.ipynb .                                                                      [ 72%]
examples/reference/elements/matplotlib/VLine.ipynb .                                                                           [ 73%]
examples/reference/elements/matplotlib/VectorField.ipynb .                                                                     [ 73%]
examples/reference/elements/matplotlib/Violin.ipynb .                                                                          [ 74%]
examples/reference/elements/plotly/BoxWhiskers.ipynb .                                                                         [ 74%]
examples/reference/elements/plotly/Curve.ipynb .                                                                               [ 74%]
examples/reference/elements/plotly/Distribution.ipynb .                                                                        [ 75%]
examples/reference/elements/plotly/ErrorBars.ipynb .                                                                           [ 75%]
examples/reference/elements/plotly/HeatMap.ipynb .                                                                             [ 76%]
examples/reference/elements/plotly/Image.ipynb .                                                                               [ 76%]
examples/reference/elements/plotly/ItemTable.ipynb F                                                                           [ 76%]
examples/reference/elements/plotly/Points.ipynb .                                                                              [ 77%]
examples/reference/elements/plotly/Raster.ipynb .                                                                              [ 77%]
examples/reference/elements/plotly/Scatter.ipynb .                                                                             [ 78%]
examples/reference/elements/plotly/Scatter3D.ipynb .                                                                           [ 78%]
examples/reference/elements/plotly/Surface.ipynb .                                                                             [ 79%]
examples/reference/elements/plotly/Table.ipynb F                                                                               [ 79%]
examples/reference/elements/plotly/TriSurface.ipynb .                                                                          [ 79%]
examples/reference/features/bokeh/table_hooks_example.ipynb F                                                                  [ 80%]
examples/reference/streams/bokeh/Bounds.ipynb .                                                                                [ 80%]
examples/reference/streams/bokeh/BoundsX.ipynb .                                                                               [ 81%]
examples/reference/streams/bokeh/BoundsY.ipynb .                                                                               [ 81%]
examples/reference/streams/bokeh/BoxEdit.ipynb F                                                                               [ 82%]
examples/reference/streams/bokeh/PointDraw.ipynb F                                                                             [ 82%]
examples/reference/streams/bokeh/PointerX.ipynb F                                                                              [ 82%]
examples/reference/streams/bokeh/PointerXY.ipynb .                                                                             [ 83%]
examples/reference/streams/bokeh/PolyDraw.ipynb F                                                                              [ 83%]
examples/reference/streams/bokeh/PolyEdit.ipynb .                                                                              [ 84%]
examples/reference/streams/bokeh/RangeXY.ipynb F                                                                               [ 84%]
examples/reference/streams/bokeh/Selection1D.ipynb .                                                                           [ 84%]
examples/reference/streams/bokeh/Selection1D_paired.ipynb .                                                                    [ 85%]
examples/reference/streams/bokeh/Selection1D_points.ipynb .                                                                    [ 85%]
examples/reference/streams/bokeh/Selection1D_tap.ipynb .                                                                       [ 86%]
examples/reference/streams/bokeh/Tap.ipynb F                                                                                   [ 86%]
examples/topics/geometry/lsystems.ipynb .                                                                                      [ 87%]
examples/topics/geometry/square_limit.ipynb .                                                                                  [ 87%]
examples/topics/simulation/boids.ipynb .                                                                                       [ 87%]
examples/topics/simulation/hipster_dynamics.ipynb .                                                                            [ 88%]
examples/topics/simulation/sri_model.ipynb F                                                                                   [ 88%]
examples/user_guide/01-Annotating_Data.ipynb .                                                                                 [ 89%]
examples/user_guide/02-Composing_Elements.ipynb .                                                                              [ 89%]
examples/user_guide/03-Customizing_Plots.ipynb .                                                                               [ 89%]
examples/user_guide/04-Dimensioned_Containers.ipynb .                                                                          [ 90%]
examples/user_guide/05-Building_Composite_Objects.ipynb .                                                                      [ 90%]
examples/user_guide/06-Live_Data.ipynb .                                                                                       [ 91%]
examples/user_guide/07-Tabular_Datasets.ipynb .                                                                                [ 91%]
examples/user_guide/08-Gridded_Datasets.ipynb F                                                                                [ 92%]
examples/user_guide/09-Indexing_and_Selecting_Data.ipynb .                                                                     [ 92%]
examples/user_guide/10-Transforming_Elements.ipynb .                                                                           [ 92%]
examples/user_guide/11-Responding_to_Events.ipynb .                                                                            [ 93%]
examples/user_guide/12-Custom_Interactivity.ipynb .                                                                            [ 93%]
examples/user_guide/13-Data_Pipelines.ipynb .                                                                                  [ 94%]
examples/user_guide/14-Large_Data.ipynb .                                                                                      [ 94%]
examples/user_guide/15-Streaming_Data.ipynb .                                                                                  [ 94%]
examples/user_guide/16-Dashboards.ipynb .                                                                                      [ 95%]
examples/user_guide/Colormaps.ipynb .                                                                                          [ 95%]
examples/user_guide/Continuous_Coordinates.ipynb .                                                                             [ 96%]
examples/user_guide/Deploying_Bokeh_Apps.ipynb .                                                                               [ 96%]
examples/user_guide/Exporting_and_Archiving.ipynb .                                                                            [ 97%]
examples/user_guide/Installing_and_Configuring.ipynb .                                                                         [ 97%]
examples/user_guide/Network_Graphs.ipynb .                                                                                     [ 97%]
examples/user_guide/Plots_and_Renderers.ipynb F                                                                                [ 98%]
examples/user_guide/Plotting_with_Bokeh.ipynb .                                                                                [ 98%]
examples/user_guide/Plotting_with_Matplotlib.ipynb .                                                                           [ 99%]
examples/user_guide/Styling_Plots.ipynb .                                                                                      [ 99%]
examples/user_guide/Tips_and_Tricks.ipynb .                                                                                    [100%]

============================================================== FAILURES ==============================================================
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/autompg_histogram.ipynb
line 18 col 0: 'numpy as np' imported but unused
line 19 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/autompg_violins.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/bachelors_degrees_by_gender.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/bars_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/boxplot_chart.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/dot_example.ipynb
line 16 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/dropdown_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/hextile_movie_ratings.ipynb
line 14 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/iris_density_grid.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/iris_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/iris_grouped_grid.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/iris_splom_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/point_draw_triangulate.ipynb
line 14 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/route_chord.ipynb
line 18 col 0: 'numpy as np' imported but unused
line 19 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/scatter_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/step_chart.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/texas_choropleth_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/bokeh/topographic_hillshading.ipynb
line 30 col 0: redefinition of unused 'np' from line 20
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/autompg_histogram.ipynb
line 18 col 0: 'numpy as np' imported but unused
line 19 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/autompg_violins.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/bachelors_degrees_by_gender.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/bars_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/boxplot_chart.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/dropdown_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/hextile_movie_ratings.ipynb
line 14 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/iris_density_grid.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/iris_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/iris_grouped_grid.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/iris_splom_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/route_chord.ipynb
line 18 col 0: 'numpy as np' imported but unused
line 19 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/scatter_economic.ipynb
line 18 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/step_chart.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/texas_choropleth_example.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/gallery/demos/matplotlib/topographic_hillshading.ipynb
line 31 col 0: redefinition of unused 'np' from line 20
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Bounds.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Chord.ipynb
line 24 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Graph.ipynb
line 23 col 0: 'pandas as pd' imported but unused
line 25 col 0: 'networkx as nx' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/ItemTable.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Sankey.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Spline.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/Table.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/bokeh/TriMesh.ipynb
line 23 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Bounds.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Chord.ipynb
line 24 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Graph.ipynb
line 25 col 0: 'pandas as pd' imported but unused
line 27 col 0: 'networkx as nx' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/ItemTable.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Sankey.ipynb
line 20 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Spline.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/Table.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/matplotlib/TriMesh.ipynb
line 23 col 0: 'pandas as pd' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/plotly/ItemTable.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/elements/plotly/Table.ipynb
line 22 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/features/bokeh/table_hooks_example.ipynb
line 14 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/BoxEdit.ipynb
line 23 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/PointDraw.ipynb
line 23 col 0: 'numpy as np' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/PointerX.ipynb
line 25 col 0: 'holoviews.streams' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/PolyDraw.ipynb
line 23 col 0: 'numpy as np' imported but unused
line 26 col 0: 'matplotlib.path.Path' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/RangeXY.ipynb
line 25 col 0: 'holoviews.streams' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/reference/streams/bokeh/Tap.ipynb
line 26 col 0: 'holoviews.streams' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/topics/simulation/sri_model.ipynb
line 203 col 8: local variable 'spatial_dims' is assigned to but never used
line 250 col 0: 'holoviews.core.options.Palette' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/user_guide/08-Gridded_Datasets.ipynb
line 177 col 0: redefinition of unused 'xr' from line 16
To see python source that was flake checked: pass --nbsmoke-lint-debug
__________________________________________________________________  __________________________________________________________________
/scratch/holoviews/examples/user_guide/Plots_and_Renderers.ipynb
line 29 col 0: 'holoviews.plotting.mpl' imported but unused
To see python source that was flake checked: pass --nbsmoke-lint-debug
=============================================== 62 failed, 177 passed in 18.56 seconds ===============================================
```

I've 'fixed' these in this PR (except for the last one, which is discussed in one of the previous PRs, and which is a general pyflakes issue).

However, I'm as much testing the flake checking tool as I am looking for hv flakes, so the changes should definitely be inspected. (And in one case I removed an unused variable that was maybe part of the text flow.)

Flakes are supposed to be only things like unused imports and undefined names, which to me means things that would confuse me as a reader - and which I always want someone to remove before I see their code. So I am quite happy for flakes to be errors. But nbsmoke also has an '--only-warn' option, so flakes are just reported by pytest as warnings instead.",3,1,[]
1071,188125531,2688,19542768,2018-05-15 13:18:56,2018-05-21 10:54:26,closed,Minor fixes and updates for docs,,2,3,['tag: docs']
1072,187929425,2686,19542768,2018-05-14 19:39:22,2018-05-14 21:19:41,closed,Added CHANGELOG for 1.10.4,,4,1,[]
1073,187929195,2685,19542768,2018-05-14 19:38:21,2018-05-14 20:46:55,closed,Fixed bug initializing empty data in combined dictionary format,"The DictInterface allows combining two columns into one array, however when this array is empty it currently fails and raises an error. This PR ensures that this works:

```python
Dataset({('x', 'y'): []}, kdims=['x', 'y'])
```

- [x] Adds unit test",1,1,"['type: bug', 'tag: component: data']"
1074,187927900,2684,19542768,2018-05-14 19:32:35,2018-05-14 20:33:56,closed,Fixed legend entries for Labels element,"Minor bug fix for Labels element legend, where the handle contains multiple artists in a list.",1,1,"['type: bug', 'tag: backend: mpl']"
1075,187819206,2683,19542768,2018-05-14 13:00:34,2018-05-14 15:16:35,closed,OverlayPlot passes projection to subplots,"Very simple change which ensures that an OverlayPlot forwards the projection to all subplots. This was not needed for matplotlib since the OverlayPlot (or Layout/GridPlot) creates the axis with the appropriate projection but is needed for bokeh where each plot needs to know its projection independently.

- [x] Adds unit tests",3,3,['type: enhancement']
1076,187637077,2681,19542768,2018-05-12 19:44:37,2018-05-14 12:29:17,closed,Correctly check if hover data should be added,"This PR addresses a class of bugs in the bokeh backend where the data required to display hover information for the element was added if any subplot of the overlay enabled hover information even if the hover for a particular element was not actually displayed. Rather than checking if the bokeh plot object has a HoverTool, it now checks whether the hover tool has been added to the holoviews plot handles, which is the correct way of checking whether hover was enabled.",1,1,"['type: bug', 'tag: backend: bokeh']"
1077,187635284,2680,19542768,2018-05-12 18:59:22,2018-05-14 12:27:17,closed,Allow setting alpha on bokeh Raster/Image/RGB,Recently bokeh added support for setting a global alpha for image and rgb plots (I think this was in 0.12.15). This PR simply defines the style option so the option can be set.,3,1,"['tag: backend: bokeh', 'type: enhancement']"
1078,187635005,2679,19542768,2018-05-12 18:52:09,2018-05-14 12:26:13,closed,Fixed bug initializing PolyDrawCallback,"Fixes bug introduced in #2663 which caused the PolyDrawCallback not to be initialized.

- [x] Add unit tests",2,2,"['type: bug', 'tag: backend: bokeh']"
1079,187627932,2678,19542768,2018-05-12 16:07:39,2018-11-06 12:54:35,closed,Enable Travis checking for Python linting rules we are currently not …,…violating.,2,1,[]
1080,187617230,2677,19542768,2018-05-12 11:34:20,2018-05-14 12:23:49,closed,Ensure plot is rendered into last output in notebook cell,"This PR ensures that plots are rendered into the last output in a notebook cell ensuring that multiple outputs can be rendered with the IPython display function.

- [x] Fixes https://github.com/ioam/holoviews/issues/2676",2,1,['tag: notebook']
1081,187556461,2675,19542768,2018-05-11 20:00:12,2018-05-14 12:25:59,closed,Added restructured text releases page to link to blog,"
Currently it contains the CHANGELOG and looks like this:

![image](https://user-images.githubusercontent.com/890576/39944439-9d8774fa-555e-11e8-90d1-3135e71bd789.png)

It is mostly the CHANGELOG converted to rst from pandoc. There was some annoyance when backticks appear in markdown links (I made comments in the file about both these issues).

My two remaining concerns:

* Releases hasn't appeared in the side bar for me, despite adding an entry to the TOC (how is this different from the entry for the 'about' page?). **Note**: the other entries are missing as I deleted a bunch of rst files before building, so that much is expected.
* The link to the blog is rather underwhelming. There needs to be a way to really encourage people to click through to the blog. Another image maybe?",3,2,[]
1082,187531625,2674,19542768,2018-05-11 18:04:41,2018-05-12 15:00:21,closed,Fixed undefined variable bug in XArrayInterface,"Fixed undefined variable bug when slicing with tuples and added unit tests for grid slicing.

- [x] Add unit tests",2,3,"['type: bug', 'tag: component: data']"
1083,187176370,2671,19542768,2018-05-10 12:12:41,2018-05-10 16:27:21,closed,Remove trailing whitespace,"Hello all,  this should fix #2457  :)",7,1,[]
1084,186717077,2670,19542768,2018-05-08 18:25:40,2018-05-08 20:25:29,closed,Added CHANGELOG for 1.10.3,,1,1,[]
1085,186713724,2669,19542768,2018-05-08 18:12:02,2018-05-08 19:02:40,closed,Added check to ensure empty subplot is not added,"In 1.10 we started supporting dynamically adding subplots, however the code that adds them did not check whether a subplot was actually created correctly, potentially adding Nones to the subplots dictionary, causing downstream issues.",1,1,"['type: bug', 'tag: component: plotting']"
1086,186713029,2668,19542768,2018-05-08 18:09:02,2018-05-08 18:58:05,closed,Fixes bug sampling 2D Datasets,"As the title says, fixes ``sample`` on non-Image 2D data types.

- [x] Fixes https://github.com/ioam/holoviews/issues/2667
- [x] Adds unit test",2,1,"['type: bug', 'tag: component: data']"
1087,186675429,2666,19542768,2018-05-08 15:39:57,2018-05-08 18:03:46,closed,Allow changes to columns in bokeh CDS,"This PR eliminates a long-standing limitation in updating plots with elements where the dimensions change. Specifically the code that updates a CDS now checks whether the data needs to be replaced completely, which occurs in one of two conditions 1) there is a new column which does not match the length of old columns or 2) there is an old column which is not being updated which does not match the updated columns in length.

Here are some examples of what this allows (note the changes in the axis label and table column header):

![curve_update](https://user-images.githubusercontent.com/1550771/39767337-697a4278-52de-11e8-858a-90dd1658ac9f.gif)
![table_update](https://user-images.githubusercontent.com/1550771/39767340-6b5b4dee-52de-11e8-88d7-d93e74792f06.gif)

Technically we could just always replace the data completely but a) that can be inefficient and b) it breaks ``shared_datasource``. I've double checked shared sources are not affected by this change.",0,6,"['tag: backend: bokeh', 'type: enhancement']"
1088,186622395,2665,19542768,2018-05-08 12:44:45,2018-05-08 18:52:18,closed,Fixed PlotReset stream parameter,"The reset parameter on the PlotReset stream was shadowing the reset method on Streams, causing errors when the parameter was reset to None on transient events.",6,1,['tag: API']
1089,186449678,2664,19542768,2018-05-07 20:04:42,2018-05-08 13:25:12,closed,GridSpace and GridPlot fixes,"Fixes three bugs related to grids:

*  The outer axes label ordering of the grid (which was in some cases wrong)
*  Indexing on a GridSpace with non-numeric keys
* Disable zooming on the GridPlot outer axes",3,4,"['type: bug', 'tag: backend: bokeh']"
1090,186341949,2663,19542768,2018-05-07 12:48:31,2018-05-08 10:44:08,closed,Ensure PolyDraw data has consistent keys on initialization,"Previously the PolyDraw stream renamed the keys in its .data dictionary, but only after initialization. This is inconsistent in two ways, first of all other draw/edit streams give the data consistent keys, such as x0/x1/y0/y1 in the case of ``BoxEdit`` or 'xs' and 'ys' in the case of ``PolyEdit``, while this renamed the keys to match the dimensions. We already offer a ``.element`` property on the stream, which transforms the columns so it's preferable to give the stream.data consistent naming.

- [x] Fixes https://github.com/ioam/holoviews/issues/2650",1,1,"['type: bug', 'tag: API']"
1091,186334534,2662,19542768,2018-05-07 12:15:54,2018-05-08 10:46:59,closed,Fixed updates to QuadMesh colorbar,"- [x] Fixes https://github.com/ioam/holoviews/issues/2661
- [x] Adds unit test",2,1,"['type: bug', 'tag: backend: mpl']"
1092,186324134,2660,19542768,2018-05-07 11:24:42,2018-05-07 12:42:52,closed,Fixed slicing on inverted axis in xarray,"- [x] Fixes https://github.com/ioam/holoviews/issues/2658
- [x] Adds unit test",2,1,"['type: bug', 'tag: component: data']"
1093,186200179,2657,19542768,2018-05-06 11:10:45,2018-05-07 12:40:32,closed,Made Div signature consistent,"As discussed in https://github.com/ioam/holoviews/issues/2656 the ``Div`` element signature differs from other elements in that the ``data`` argument is named ``html``. This is inconsistent and as highlighted by that issue it's surprising. Since 1.10 hasn't been out long @jbednar and I agreed that it would be better to make it consistent now.

",2,1,['tag: API']
1094,186055816,2654,19542768,2018-05-04 17:41:20,2018-05-07 12:46:17,closed,Sort dynamic dimension values in widget constructor,"Fixes two separate bugs caused by Dimension.values potentially being unsorted while the slider widget always expects sorted values.

- [x] Fixes https://github.com/ioam/holoviews/issues/2641
- [x] Added unit tests",3,3,['type: bug']
1095,186041265,2653,19542768,2018-05-04 17:01:53,2018-05-04 17:58:47,closed,Fixed unicode bug in XArrayInterface,Fixes bug in XArrayInterface handling unicode dimensions in python2.,1,1,"['type: bug', 'tag: component: data']"
1096,185969428,2646,19542768,2018-05-04 12:27:53,2018-05-04 18:03:35,closed,Optimize display of large DynamicMap parameter space,"As described in https://github.com/ioam/holoviews/issues/2645, a DynamicMap with a large parameter space can be very slow to initialize, this is because we have started to process its keys more consistently but did not take into account the fact that the DynamicMap parameter spaces can be much larger. This now avoids a number of computations that are not necessary and optimized some others:

```python
def test(t, z, cmap, vmin, vmax):
    return hv.Image(np.random.rand(100, 100))
    
dmap = hv.DynamicMap(test, kdims=['t','z', 'cmap', 'vmin','vmax']).redim.values(t=range(10), z=range(10) ,cmap=['viridis','Greys'], vmin=range(100), vmax=range(100,200))
```

This DynamicMap defines a parameter space with 2 million keys, previously this would take 52 seconds to display, with this PR this drops to 0.5 seconds.

![bokeh_plot](https://user-images.githubusercontent.com/1550771/39636307-bd150df2-4fb7-11e8-9e4f-e86b2a6c1b9d.png)


",4,9,['type: enhancement']
1097,185541558,2643,19542768,2018-05-02 19:44:39,2018-05-03 19:04:35,closed,Fixed bug disabling axis labels with labelled option,"The ``labelled`` plot option allows disabling axis labels, however in bokeh it is being ignored by the ``_update_plot`` method. This fixes the issue.

- [x] Add unit tests",3,1,"['type: bug', 'tag: backend: bokeh']"
1098,185020263,2639,19542768,2018-04-30 17:49:11,2018-04-30 18:28:38,closed,Pinned to param 1.6.1 or greater,"This will make sure the latest version of ``Version`` is used which is friendlier when using ``python setup.py develop`` (among other relatively minor, but useful changes).",1,1,[]
1099,185014981,2638,19542768,2018-04-30 17:25:27,2018-04-30 17:41:31,closed,Added CHANGELOG entry for 1.10.2,,1,1,[]
1100,184974861,2636,19542768,2018-04-30 14:41:55,2018-04-30 17:40:47,closed,Fixed bug inverting matplotlib heatmap,"Matplotlib handles inverting the data automatically if an axis is inverted which means that the code to invert the HeatMap data was actually undoing the inversion.

- [x] Fixed https://github.com/ioam/holoviews/issues/2633",4,2,"['type: bug', 'tag: backend: mpl']"
1101,184831427,2634,19542768,2018-04-29 12:06:43,2018-04-30 13:12:35,closed,Fixed PlotSelector bug in matplotlib colormapping,"The code that handles adjoined colormapping in matplotlib was not taking into account PlotSelector instances, which are now resolved correctly.

- [x] Fixes a bug mentioned in https://github.com/ioam/holoviews/pull/2629",2,2,"['type: bug', 'tag: backend: mpl']"
1102,184614048,2630,19542768,2018-04-27 12:54:35,2018-04-30 14:54:04,closed,Fix for empty options method call,When calling the ``.options`` method without any arguments it would previously be an error. This PR ensures that condition is handled appropriately.,4,2,"['type: bug', 'tag: component: options']"
1103,184609106,2629,19542768,2018-04-27 12:32:40,2018-04-30 15:33:04,closed,Updates opts to options in documentation,"Updates existing uses of the ``.opts`` method to the ``.options`` method, significantly simplifying many examples.",4,8,"['tag: docs', 'tag: component: options']"
1104,184433122,2627,19542768,2018-04-26 18:56:27,2018-04-26 21:45:27,closed,Fixed namespace issue in opts utility,"Simple fix to address #2576.

In the ipython module where the magic is defined, ``self.shell.user_ns`` is used as the namespace passed to the parser which is safe as the entire subpackage assumes you are in an IPython environment. In this PR, the IPython namespace is used if available, otherwise it falls back to ``globals`` which should be fine outside of an IPython context.",2,2,[]
1105,184428799,2626,19542768,2018-04-26 18:39:08,2018-04-26 21:45:49,closed,Updated bokeh pinning in the meta.yaml,"Although bokeh was pinned to 0.12.15 in the setup.py, it was less strict than required in the meta.yaml.",0,1,[]
1106,184426895,2625,19542768,2018-04-26 18:31:30,2018-04-30 15:05:49,closed,Added support for Image hover,Adds support for Image hovering which will land in bokeh 0.12.16.,3,1,"['tag: backend: bokeh', 'type: enhancement']"
1107,184323358,2622,19542768,2018-04-26 12:28:45,2018-04-26 17:24:18,closed,Implemented Contours datashading,"Implements contours rasterization which takes into account the iso-contour level defined on the value dimension by default. Should decide if it should also use the value dimension on Path by default.

- [x] Implements https://github.com/ioam/holoviews/issues/2609
- [x] Adds unit tests",1,1,['type: enhancement']
1108,184308267,2621,19542768,2018-04-26 11:25:29,2018-04-26 17:22:47,closed,Fixed PlotSelector bug in RadialHeatMapPlot,"The PlotSelector predicate was not checking for HoloMaps/DynamicMaps. Also fixed issue with empty RadialHeatMapPlot

- [x] Fixes https://github.com/ioam/holoviews/issues/2610
- [x] Fixes https://github.com/ioam/holoviews/issues/2503
- [x] Adds unit test",1,4,"['type: bug', 'tag: component: plotting']"
1109,184212554,2620,19542768,2018-04-26 02:48:55,2018-04-26 12:41:37,closed,Handle HoverTool with string tooltip,"A small bit of code wasn't expecting the HoverTool tooltip to be a string.

- [x] Fixes https://github.com/ioam/holoviews/issues/2614
- [x] Added unit test",2,1,"['type: bug', 'tag: backend: bokeh']"
1110,184157638,2617,19542768,2018-04-25 20:42:55,2018-04-26 17:30:50,closed,Added validation for Image bounds,"Previously the Image element would allow passing in bounds which did not match the coordinates that were declared. This adds validation ensuring that if both bounds and coordinates are passed they are appropriately validated.

- [x] Add unit test
- [x] Fixes https://github.com/ioam/holoviews/issues/2605",7,2,"['type: bug', 'tag: component: data']"
1111,183712055,2612,19542768,2018-04-24 11:59:40,2018-04-26 12:40:42,closed,Add update_display_data event handler,"This PR makes it possible to update existing plotting output using Jupyter ``update_display_data`` messages. While we no longer aim to support or work much with paramnb, this will provide a much cleaner mechanism than it currently uses and can be used more generally to replace displayed plots in the notebook, e.g.:

```python
curve = hv.Curve(np.random.rand(100))
handle = hv.ipython.display(curve, display_id='A')
```

Can be updated with:

```python
scatter = hv.Scatter(curve)
handle.update(scatter)
```

Note: depends on https://github.com/jupyter/notebook/pull/3560, which ~~should be merged soon~~ is now merged and will make it into the imminent 5.5 release, but this approach is already supported by our JupyterLab extension.",1,1,"['tag: notebook', 'type: enhancement']"
1112,183537510,2608,19542768,2018-04-23 19:44:18,2018-04-25 16:05:16,closed,Doctweaks,"Minor tweaks to docs:

- Fixed typos and punctuation spacing
- Fixed missing first cell in Colormaps guide on holoviews.org
- Added entry for Styling Plots and Colormaps guides in CHANGELOG.md

I made a few halfhearted attempts to clean up the extra space inserted after links and before their punctuation:

![image](https://user-images.githubusercontent.com/1695496/39149327-55af4efe-4704-11e8-8505-b97761764416.png)

(the space after the orange bits), i.e. by moving the punctuation inside the link.  That works, but it's very unnatural when writing and reading the .md code, and it makes the punctuation be colored like the link.  @ceball, is there no more direct solution in the CSS for nbsite?  

I see the same behavior on holoviews.org and pyviz.org, whether in notebooks or in .rst files, but it doesn't seem inevitable, as Github doesn't have the problem:   [holoviews.org](http://holoviews.org), [geoviews.org](http://geoviews.org), ...

(notice how the punctuation is *not* part of the link in those two links using Github Markdown)
",3,5,[]
1113,183532375,2607,19542768,2018-04-23 19:22:45,2018-04-23 22:34:43,closed,Handled signal interrupt in bokeh apps,"Added callbacks to handle interrupts for bokeh apps in ``BokehRenderer.app`` method. This allows a server to be cleanly stopped on KeyboardInterrupt when working in a Python REPL, making interactive use from a Python interpreter possible.",2,1,"['tag: backend: bokeh', 'type: enhancement']"
1114,183289351,2604,19542768,2018-04-22 19:21:04,2018-04-26 18:11:59,closed,Deal with clashing style and plot options,"A number of options exist both as plot and style, which results in issues when using ``.options``. The clashing options are listed in https://github.com/ioam/holoviews/issues/2411 

- [x] Fixes https://github.com/ioam/holoviews/issues/2599
- [x] Fixes https://github.com/ioam/holoviews/issues/2411
- [x] Adds unit tests to avoid future option clashes",3,5,['tag: component: options']
1115,183267298,2603,19542768,2018-04-22 11:01:22,2018-04-23 11:22:02,closed,Fixed png and svg display_formats,"Fixes display_formats in the notebook to publish png and svg MIME types to the notebook.

- [x] Fixes https://github.com/ioam/holoviews/issues/2592
- [x] Adds unit tests",2,1,"['type: bug', 'tag: notebook']"
1116,183220767,2598,19542768,2018-04-21 12:16:13,2018-04-23 09:32:24,closed,Generalized display function again,"In the past the ``hv.ipython.display`` function simply extended the IPython version to add support for displaying HoloViews objects. When refactoring the MIME types that generality was lost and non-holoviews objects were simply rendered as their ``repr``, which disrupted various usages of the function inside the extension, e.g. to adjust the ``width`` or display various warnings.

- [x] Fixes https://github.com/ioam/holoviews/issues/2548",2,3,['tag: notebook']
1117,183220656,2597,19542768,2018-04-21 12:12:57,2018-04-22 11:33:44,closed,Add support for Tool.renderers == 'auto',"In the upcoming bokeh 0.12.16 some tools may now have ``Tool.renderers == 'auto'``, something that is not handled by the current code. This PR ensures that if the renderers are set to 'auto' HoloViews will explicitly override that.",1,1,"['type: bug', 'tag: backend: bokeh']"
1118,183051991,2590,19542768,2018-04-20 12:47:14,2018-04-20 15:02:57,closed,Added CHANGELOG for 1.10.1,,3,1,['tag: packaging']
1119,183044309,2589,19542768,2018-04-20 12:13:22,2018-04-20 14:12:25,closed,Support Plot in ipython display function,"In the past we allowed Plot objects to display themselves, this was a bad idea. For easier debugging I therefore suggest we instead support it in the ipython ``display`` function.",2,1,"['tag: notebook', 'type: enhancement']"
1120,183022715,2588,19542768,2018-04-20 10:32:12,2018-04-20 11:15:22,closed,Allowing use of upcoming 0.12.16 bokeh release,Simple update to how bokeh is pinned in the meta.yaml.,1,1,['tag: packaging']
1121,182947498,2586,19542768,2018-04-20 02:53:13,2018-04-20 11:20:38,closed,Fixed resolving Selection1D in bokeh callback,"In bokeh 0.12.15 the selection API was changed introducing a dedicated Selection model. This PR ensures that the 1D indices are correctly resolved in bokeh server mode.

- [x] Re-added unit test",2,1,"['type: bug', 'tag: backend: bokeh']"
1122,182922895,2585,19542768,2018-04-19 23:15:53,2018-04-20 14:20:11,closed,Changed Image.rtol to a warning and increased default tolerance,"An exception turned out to quite disruptive to a large number of users and the error was less than informative. We've now further increased the tolerance and switched from an exception to more informative warning. Additionally I have also ensured that the ImageInterface would not simply accept irregularly sampled coordinates and replace them with bounds.

- [x] Updates unit tests",3,3,['type: enhancement']
1123,182920035,2584,19542768,2018-04-19 22:57:04,2018-04-20 00:27:40,closed,Fixed unreferenced variable in matplotlib colormapping,"Fixes bug when clims is passed to a colormapped matplotlib plot and the ``categorical`` variable is then not defined.

- [x] Added unit test",1,1,"['type: bug', 'tag: backend: mpl']"
1124,182843867,2583,19542768,2018-04-19 17:19:02,2018-04-19 18:32:43,closed,Add support for looping edges in Chords element,"The operation that lays out the Chord paths did not take into account nodes connected to themselves. This PR ensures these no longer cause errors and are displayed as looping arcs.

- [x] Fixes https://github.com/ioam/holoviews/issues/2581",4,2,['type: bug']
1125,182840687,2582,19542768,2018-04-19 17:05:04,2018-04-19 17:40:43,closed,Tweaks to the documentation for 1.10.1,"
Currently serves to address PR #2578 regarding the pip installation instructions and to mention pyviz.org on the homepage.",1,3,[]
1126,182739978,2579,19542768,2018-04-19 11:00:58,2018-04-20 09:59:50,closed,Restored old xarray coord order inference behavior,"In 1.10.0 the code that infers the coordinate order from an XArray Dataset changed, unintentionally changing the behavior. This PR restores the old behavior. 

- [x] Fixes regression described in https://github.com/ioam/holoviews/issues/2577
- [x] Adds unit test",25,1,['tag: component: data']
1127,182553344,2575,19542768,2018-04-18 17:42:44,2018-04-19 11:27:35,closed,Fixed recursive comparison issue in Sankey operation,Fixes a bug where an ``in`` statement implicitly resulted in recursive comparisons in certain scenarios.,2,1,['type: bug']
1128,182207381,2574,19542768,2018-04-17 15:35:50,2018-04-17 19:38:07,closed,Add support for HTML export after moving to MIME bundle,"When we switched to rendering our plots using the ``_repr_mimebundle`` we lost all support for exporting bokeh plots and holoviews widgets to standalone HTML files. This is because nbconvert will only render a single MIME type, whichever is highest in its priority ordering. Since ``application/javascript`` has the highest priority only that gets rendered and doesn't end up finding the HTML tags it's meant to render into.

The only approach I could possible see how to make it work is to dynamically create the HTML DOM nodes that the JS renders into. So this PR adds a bit of JS code to each plot that includes ``application/javascript``, which looks for an existing DOM element with the matching ``element_id`` and if that doesn't exist it dynamically creates it on its own parent node. This means that in the notebook nothing changes but in a static HTML export the DOM nodes are appropriately created.

I have to say I really dislike this approach but it is absolutely the only way I see to make this possible, since I can only publish a single MIME type in the nbconvert output and ``application/javascript`` will always take precedence.",4,5,"['type: bug', 'tag: notebook']"
1129,182110256,2570,19542768,2018-04-17 09:49:29,2018-04-17 12:45:53,closed,Added v1.10.0 CHANGELOG draft,,2,5,[]
1130,181016484,2561,19542768,2018-04-11 20:19:07,2018-04-20 00:25:52,closed,Updated bokeh version used on travis,Updates the bokeh version in travis.yml.,6,5,['tag: component: testing']
1131,181003444,2560,19542768,2018-04-11 19:24:26,2018-04-11 19:25:13,closed,Fixed incorrect options specification,"Fixes this issue where the alpha value ended up greater than one:

![image](https://user-images.githubusercontent.com/890576/38638482-fe392eac-3d93-11e8-9773-dd35e1b2977e.png)
",1,1,[]
1132,180952631,2559,19542768,2018-04-11 16:00:40,2018-04-11 16:02:02,closed,Fixed missing import in setup.py,"Fix to address #2528. 

I believe this is the problem so I recommend merging this right away so I can double check pip+git works correctly.",0,1,[]
1133,180710741,2558,19542768,2018-04-10 19:56:06,2018-04-10 20:38:10,closed,Fix for shared_datasource,"When plotting something with a ``shared_source`` in bokeh the ColumnDataSource updates need to be coordinated otherwise bokeh will generate very ugly warnings. However the code that coordinates these changes clears the datasource, which wasn't an issue when we were computing events ourselves, however ever since we started using bokeh protocols the clearing event was sent to bokeh triggering errors. This PR pops the clearing event from the document so that bokeh never sees it.",0,1,"['type: bug', 'tag: backend: bokeh']"
1134,180681905,2557,19542768,2018-04-10 17:57:39,2018-04-10 18:30:58,closed,Switched to parambokeh in Dashboards user guide,Latest versions of ipywidgets are basically broken as far as I can tell and since we aim to switch to paramBokeh more generally I've replaced the usage of paramnb with parambokeh in the Dashboards notebook.,1,1,"['type: bug', 'tag: docs']"
1135,180661491,2556,19542768,2018-04-10 16:36:05,2018-04-10 18:28:27,closed,Added workaround for dask interface select issue,"Workaround for a dask bug when performing comparisons between a NumPy scalar and a dask Series (reported in https://github.com/dask/dask/issues/3392).

- [x] Fixes https://github.com/ioam/holoviews/issues/2555
",0,1,"['type: bug', 'tag: component: data']"
1136,180488430,2554,19542768,2018-04-10 04:43:45,2018-04-10 13:00:59,closed,Ensure all tabular interfaces treat empty list equally,This PR ensures that all tabular interfaces treat an empty list equally generating data columns of float64 types. Previously the pandas interface would interpret an empty list as 'object' type data which is inconsistent with other interfaces and caused issues in some of our examples (specifically the Tap example in the Custom Interactions user guide).,1,1,['tag: component: data']
1137,180440052,2553,19542768,2018-04-09 22:04:42,2018-04-10 19:57:55,closed,Use different bokeh Documents in notebook context,"In the notebook all bokeh plots were attached to curdoc(), resulting in references to deleted plots to be kept and causing issues sending updates to multiple plots at once.",1,2,"['type: bug', 'tag: backend: bokeh']"
1138,180439868,2552,19542768,2018-04-09 22:03:48,2018-04-10 02:37:20,closed,Fixes for cleanup of LayoutPlots,The plot cleanup code was not correctly cleaning up LayoutPlots which caused events to be sent to non-existent plots on the JS side.,1,1,"['type: bug', 'tag: component: plotting']"
1139,180317481,2550,19542768,2018-04-09 13:52:36,2018-04-10 16:27:46,closed,Fixed typos and added performance notes,"Addresses performance suggestions raised in #1909, along with some typo corrections raised in comments on #2533.
",1,2,[]
1140,180311978,2549,19542768,2018-04-09 13:33:11,2018-04-10 19:21:31,closed,Fixed matplotlib HeatMap extents,"HeatMap extents weren't being set correctly when the values were numeric.

- [x] Adds unit test",1,1,"['type: bug', 'tag: backend: mpl']"
1141,180177779,2547,19542768,2018-04-08 20:09:23,2018-04-08 20:13:39,closed,Fixed contours operation empty level bug,Fixes bug in contours operation when a level is empty.,1,1,['type: bug']
1142,180175851,2546,19542768,2018-04-08 19:27:55,2018-04-09 03:35:15,closed,Handle empty datasource updates when streaming,When streaming data using Buffer we provide a ``Buffer.clear`` method which clears all the existing data however it seems the ColumnDataSource updating code wasn't appropriately detecting whether the data was cleared. This PR ensures that when all the data is cleared the CDS is cleared as well.,0,1,"['type: bug', 'tag: backend: bokeh']"
1143,180173843,2545,19542768,2018-04-08 18:46:25,2018-04-08 21:35:01,closed,Fixed bug in GridInterface.groupby,Fixes bug in ``GridInterface.groupby`` when only a single value dimension is used which can be reproduced by an example in the Gridded Datasets user guide.,1,1,"['type: bug', 'tag: component: data']"
1144,180173753,2544,19542768,2018-04-08 18:44:35,2018-04-10 21:21:17,closed,Tweaks to docs for 1.10,"I am currently going through the notebooks to make sure they work correctly with 1.10. This PR makes a number of small fixes and tweaks.

One issue I found in the gridded data user guide: 

![image](https://user-images.githubusercontent.com/890576/38471147-d0e69e98-3b32-11e8-8165-fc02843e10a9.png)

Edit: Fixed in https://github.com/ioam/holoviews/pull/2545
jlstevens: confirmed to be fixed.
",23,20,[]
1145,180172696,2543,19542768,2018-04-08 18:20:23,2018-04-08 19:25:10,closed,Add environment variable to combine mime bundle into HTML,,0,1,['tag: docs']
1146,180165783,2542,19542768,2018-04-08 15:44:20,2018-04-10 19:15:45,closed,XArray: enable overriding dimension names,"Referencing issue #2319, I made some small changes so that the automatic extraction of units and labels from Dataset and DataArrays is only done if no key or value dimensions are supplied, respectively. This makes it easy to override labels and units e.g. for a DataArray loaded from a netcdf file.",2,1,"['type: bug', 'tag: component: data']"
1147,180159769,2541,19542768,2018-04-08 13:25:39,2018-04-08 17:55:59,closed,Fixed mimebundle None handling,When we introduced ``_repr_mimebundle_`` we did not correctly handle None returns causing errors.,0,1,"['type: bug', 'tag: notebook']"
1148,180159717,2540,19542768,2018-04-08 13:24:34,2018-04-09 04:00:51,closed,Fixed Sankey and documentation examples,Various hotfixes for documentation including updates to Histogram and Sankey examples and plotly Distribution.,1,2,"['type: bug', 'tag: docs']"
1149,180135610,2539,19542768,2018-04-08 02:32:35,2018-04-08 03:41:20,closed,Fixed handling of categorical colormapping,"In the recent PR to make colormapping consistent across bokeh and matplotlib I adopted the categorical colormapping behavior that was used by matplotlib, which linearly interpolated the colormap. However for categorical values you instead want to cycle through the colors. This PR ensures that when colormapping a categorical dimension with a categorical colormap it cycles through the colors instead of interpolating between the colors.",1,1,['tag: component: plotting']
1150,180107644,2536,19542768,2018-04-07 14:18:20,2018-04-07 16:47:32,closed,Use HoloViews.plot_index to track bokeh models,"In a recent PR I added a ``HoloViews.plot_index`` which did little more than keep track of the ids of plots that were displayed. Since then I've found another issue related to the ``Bokeh.index``, which is bokeh's way of keeping track of the root models. The problem with ``Bokeh.index`` is that it is reset every time the extension is loaded (nothing we can do about that), which ends up breaking HoloMaps because they require access to the root model. This PR simply uses the ``HoloViews.plot_index`` to mirror the ``Bokeh.index``, which means that HoloMaps will continue  working even when the extension is reloaded.",1,1,"['type: bug', 'tag: notebook']"
1151,180077563,2535,19542768,2018-04-07 00:00:28,2018-04-08 00:47:16,closed,Replace display hooks with mimebundle,"This PR is an initial attempt at replacing the IPython display hooks with a ``_repr_mimebundle_`` method. There is still a bit of cleanup to do but this seems to work.
 
- [x] Fixes https://github.com/ioam/holoviews/issues/2462",3,9,['tag: notebook']
1152,179958422,2534,19542768,2018-04-06 14:05:10,2018-04-08 18:24:03,closed,Added example of exporting to HTML,"Addresses suggestion made in #1819. 

A remaining issue is that there are various tornado messages printed in the notebook throughout, along with a Bokeh deprecation warning in cell 19 after pressing play and then pause:

<img width=""996"" alt=""screen shot 2018-04-06 at 8 59 04 am"" src=""https://user-images.githubusercontent.com/1695496/38425189-cf42c758-3978-11e8-9b7d-382bab277744.png"">

If anyone knows a fix for those issues, feel free to push them to this PR.  Otherwise ready for review and merge.

",2,3,['tag: docs']
1153,179830641,2533,19542768,2018-04-06 00:38:10,2018-04-08 03:23:52,closed,Updated and expanded 14-Large_Data.ipynb,"The updated notebook is readable in uncleared form at: https://anaconda.org/jbednar/14-large_data

Adds a section near the front explaining rasterize vs shade vs datashade, a section near the end showing all the supported Element and Container types, a section at the very end discussing performance, and various other cleanups throughout.

@philippjfr, can you please check the section listing the supported types, and see if you agree with the ones I think could eventually be supported (e.g. by making a trimesh-based approximation to Area, etc.), and those that make no sense to support?",4,2,[]
1154,179814655,2532,19542768,2018-04-05 22:35:15,2018-04-07 16:56:40,closed,Maded embed_version function more robust,Addresses a point made by @ceball in #2528 about how the ``embed_version`` function can be made more robust.,2,1,[]
1155,179733025,2531,19542768,2018-04-05 16:39:44,2018-04-05 17:54:02,closed,Fixed issues in notebook plot cleanup,"In https://github.com/ioam/holoviews/pull/2500 I added cleanup code that cleans up any artifacts whenever a plot is deleted. In doing so the ``notebook_extension``created a new Comm whenever the extension was executed, which in certain scenarios caused errors. The Comm is now created just once, when the extension is loaded for the first time, and corresponding JS code cleans up the cached Comm when the kernel is restarted.

@jbednar would be helpful if you could test.",8,1,"['type: bug', 'tag: notebook']"
1156,179712358,2530,19542768,2018-04-05 15:26:40,2018-04-05 16:01:45,closed,Support index_position for hv.Table,Support bokeh 0.12.15 feature of `index_position` for `hv.Table`,2,1,"['tag: backend: bokeh', 'type: enhancement']"
1157,179619762,2528,19542768,2018-04-05 09:31:21,2018-04-05 21:03:43,closed,Removed embedded autover version.py,"
I'll now test this PR against the param 1.6 alpha versions.",10,4,[]
1158,179511690,2525,19542768,2018-04-04 21:02:29,2018-04-05 11:14:25,closed,Fixes for TriMesh rasterization,"This PR fixes issues determining the aggregator for ``TriMesh`` elements when no value dimensions are defined or the value dimensions are defined on the ``TriMesh.nodes``.

- [x] Fixes https://github.com/ioam/holoviews/issues/2523
- [x] Adds unit tests",7,1,['type: bug']
1159,179497347,2524,19542768,2018-04-04 20:03:53,2018-04-04 21:51:57,closed,Now reading in README.md for PyPI description,"PYPI now supports markdown so we can get rid of the ugly, hardcoded blurb.",1,1,['tag: packaging']
1160,179468021,2522,19542768,2018-04-04 18:01:27,2018-04-04 19:41:24,closed,Disabled auto-indexable on Dataset baseclass,"A while back it seem I accidentally enabled auto-indexing for the Dataset baseclass. The feature was meant as a convenience for 1D Chart types but absolutely should not apply to the baseclass which should accurately represent the underlying data and not fiddle with it. This needs to be called out explicitly in the release notes but should be done immediately since it is a bug and can make it awkward to work with ``Graph`` types which allow passing in a list or array of node indices to define an explicit order. This currently will not work correctly because it will add an index automatically.

- [x] Updated existing tests",2,1,"['tag: API', 'tag: component: data']"
1161,179400005,2520,19542768,2018-04-04 13:59:58,2018-04-04 17:10:52,closed,Mentioned bokeh PNG export and saving to disk using the magic,"
PR to address #2151 by mentioning bokeh's PNG export capability and pointing to a use of the ``%%output`` magic to save to file.",2,1,[]
1162,179388357,2519,19542768,2018-04-04 13:21:20,2018-04-04 23:17:44,closed,Fixed bugs using groupby on transposed gridded data,"When using ``.to`` or ``.groupby`` to group a dataset by one or more dimensions it is possible to reorder the dimensions by passing explicit kdims in. This works fine for xarray datasets but when transposing gridded data in the dictionary format the underlying data actually needs to be transposed appropriately, otherwise it raises an error about mismatching shapes.

- [x] Add unit tests",4,4,"['type: bug', 'tag: component: data']"
1163,179385511,2518,19542768,2018-04-04 13:11:34,2018-04-04 13:32:55,closed,Various fixes to documentation,This PR aims to address some of the points raised in issue #1696.,2,3,[]
1164,179358582,2516,19542768,2018-04-04 11:20:26,2018-04-04 22:01:23,closed,Update conda.recipe to noarch,"
- [x] Updates the recipe to build noarch
- [x] Makes things more consistent with the recipe on conda-forge.
- [x] Removes conda-forge from extra channels (only used at build time)",7,2,[]
1165,179159711,2514,19542768,2018-04-03 16:56:50,2020-09-02 01:30:25,closed,Add a gitfilter to clean the output and metadata from an ipynb,"Regarding https://github.com/ioam/holoviews/issues/1617 and https://github.com/ioam/holoviews/pull/2507.

What about this?

You activate the filter with:
```bash
git config filter.nbstrip_jq.clean './nbstrip_jq.sh'
git config filter.nbstrip_jq.smudge cat
git config filter.nbstrip_jq.required true
```",3,1,[]
1166,179139535,2513,19542768,2018-04-03 15:41:32,2018-04-03 16:34:37,closed,Fixes issues handling unsigned integers in plotting,"Ensures that unsigned integers are explicitly handled in plotting code.

- [x] Adds unit test",2,2,"['type: bug', 'tag: component: plotting']"
1167,179128679,2512,19542768,2018-04-03 15:05:53,2018-04-03 16:08:51,closed,Put .show method in user guide,"My small contribution to HoloViews.  Added documentation in user guide that mentions the matplotlib renderer `show` method, since it took me a LONG time to find it in documentation of an old pull request.
",7,3,['tag: docs']
1168,179108744,2511,19542768,2018-04-03 14:02:14,2018-04-03 16:16:12,closed,Ensured Callback plot_id matches top-level,"The recent changes to Comms mean that it is now necessary to use the plot id to establish a Comm in JupyterLab. In bokeh this plot id is synonymous with the ID of the root-level bokeh model. In a composite plot the individual ElementPlots do not have access to the root level model because it isn't created until a later point. This PR inserts a placeholder into the callbacks CustomJS code, which the composite plot (i.e. LayoutPlot or GridPlot) replaces with the actual id once it is known.

- [x] Fixes https://github.com/ioam/holoviews/issues/2510",4,2,"['type: bug', 'tag: backend: bokeh']"
1169,179070311,2509,19542768,2018-04-03 11:34:10,2018-04-03 15:45:17,closed,Broken link fixes,"This PR aims to fix the broken links identified in #1650.

I don't intend to worry about the broken links on ``build.holoviews.org`` as many of those are actually fine on ``holoviews.org``. At least to start with, I will focus on links I think are genuinely broken...",4,14,[]
1170,179064333,2508,19542768,2018-04-03 11:07:11,2018-04-03 16:31:46,closed,Moved bokeh from 'extras' to 'recommended' require list,"PR to address #2262.

@jbednar @philippjfr Do you think this is sufficient to address the above issue or is a change to the docs needed too? I think this will now behave as described....",3,1,[]
1171,179057070,2507,19542768,2018-04-03 10:34:59,2018-04-03 16:45:15,closed,Stripped metadata from bokeh element notebooks,"This PR aims to address #1617.

Here is the script I used:

```bash
#!/bin/bash
jq --indent 1 \
    '
    (.cells[] | select(has(""outputs"")) | .outputs) = []
    | (.cells[] | select(has(""execution_count"")) | .execution_count) = null
    | .metadata = {}
    | .cells[].metadata = {}
    ' $1 > /tmp/$(basename $1)
cat /tmp/$(basename $1) > $1
```

Note: This now clears *all* the notebook metadata, unlike the earlier versions of the script. I checked and the notebooks still work correctly.

Here is how I would clear the metadata from a directory:

```
for f in *.ipynb; do  strip_kernel.sh $f; done
```",4,1,[]
1172,179049729,2506,19542768,2018-04-03 10:04:05,2018-04-03 16:03:01,closed,Clarified that VectorField angles are in radians,"Small tweak to the docs to address #2467, clarifying that the angles in ``VectorField`` are expressed in radians.",2,1,[]
1173,178811574,2504,19542768,2018-04-02 10:09:37,2018-04-05 10:04:56,closed,Update to version.py,"This PR updates ``version.py`` to match the current state of [autover](https://github.com/ioam/autover) as it isn't available via param just yet.

The hope was that recent changes would get the tag from the directory after extracting the git archive zip (specifically for conda-forge dev builds) but this didn't work correctly. Instead, I updated the source in the conda-forge recipe to be a git source which *does* work (see https://github.com/conda-forge/holoviews-feedstock/pull/28)

You can now run ``conda install -c conda-forge/label/dev holoviews`` to get the 1.10.0a2 dev release. To make sure everything is still working after this PR, I'll tag 1.10.0a3 and go through the process again on conda-forge to see if the automatic PRs for updating the recipe work correctly.",5,1,[]
1174,178609462,2500,19542768,2018-03-30 18:21:18,2018-04-02 14:29:03,closed,Improved notebook MIME type handling and added cleanup on cell deletion,"Currently the ``Renderer`` publishes JS code on two different MIME_TYPEs, one used by the classic notebook (``application/js``) and the other used by the JupyterLab extension (``application/vnd.holoviews_exec.v0+json``). The main issue with this is that all the data is sent both times a) doubling network traffic and b) doubling the size of the notebook.

This PR ensures that the Renderer will now only publish the actual data to the ``application/js`` MIME type. Additionally it adds a MIME handler for the classic notebook which processes the empty ``application/vnd.holoviews_exec.v0+json`` output and replaces it with ``application/js`` output, (which is what the jupyterlab extension was already doing). 

Finally this lays the groundwork to notify Python when a cell is deleted, which will allow us to clean up unused plots and stream callbacks.

- [x] Tested in classic notebook
- [x] Tested in JupyterLab
- [x] Tested in nbconvert export",7,13,"['tag: notebook', 'type: enhancement']"
1175,178575797,2499,19542768,2018-03-30 14:58:50,2018-04-02 00:49:13,closed,Fixed PointerXY inverted axis bug,"Fairly straightforward bug fix, the PointerXY stream callback code clips the data but the clipping code did not take into account inverted axes.

- [x] Fixes https://github.com/ioam/holoviews/issues/2211",2,1,"['type: bug', 'tag: backend: bokeh']"
1176,178479857,2498,19542768,2018-03-30 02:02:52,2018-03-31 15:07:30,closed,Colormap categories,"This PR replaces #2492 (rebasing it on master).  What it mainly adds is the ability to pull out any particular category, provider, or source of colormaps (e.g. `list_cmaps(category='Diverging', provider='bokeh', source='d3'))`, which I think will be very useful when building GUIs.  Usually, only a subset of the types are relevant for any given plot, and it's very painful to list them out by name in an app or dashboard, yet it's also very painful for users to page through long lists of mostly inappropriate colormaps.  I think that this approach will allow a given app or dashboard to select just the subset of colormaps that would be relevant for it much more easily.

Using this facility, I've also created a new [Colormaps user guide](https://anaconda.org/jbednar/colormaps) that breaks down all of the available colormaps by type and explains how and when to use each one.

For any of this to work, I had to list each of the various colormaps provided across backends, declaring their category, etc., because that information is not otherwise available programmatically except for colorcet.  This ended up being less verbose than I expected, but it does encode knowledge about the external backends that we should be aware that we are encoding. Colormaps that are deleted from the packages in the future will simply fail to show up in these lists, and those that are added will appear in the 'Miscellaneous' category until someone adds some other category and source information for them.

Tasks required:

- [x] Fix handling for reversed ('_r') colormaps
- [x] Define a useful default for colormaps not found in the lookup table
- [x] Find a better way to break up the big list of colormaps with big category labels (presumably not possible in the same cell, given the lack of hierarchical layouts?)
- [x] Sort colormaps in the displayed list
- [x] Clean up categorization of Bokeh maps to make sure they end up in the same category as similar Matplotlib maps
- [x] Consider merging list_cmaps with lookup_cmaps, e.g. making the current list_cmaps private and making lookup_cmaps be a superset of its functionality
- [x] There's no obvious way to specify a colormap by provider, and so when providers have matching-named colormaps the example currently shows only one of them, twice; must be fixed.
- [x] Add examples of pulling out categories of colormaps, e.g. for a gui (maybe to pyviz?)
- [x] Allow categorizing by background type as well, to make it simpler for dashboards to select the right set of useful colormaps?
- [x] Consider allowing excluding certain colors (white, black), for the same reason? Decided against, as people can already do that programmatically by searching in the colormap itself.",6,9,"['tag: docs', 'tag: component: plotting', 'type: enhancement']"
1177,178402139,2495,19542768,2018-03-29 18:11:32,2018-03-30 00:36:28,closed,Fixed inverted colors for bokeh.palettes.mpl,"In the recent colormap consistency PR it was noticed that upper case Magma, Inferno, Viridis, Plasma palettes were being inverted incorrectly. These should not be inverted like many of the other palettes that ship with bokeh. Additionally this PR fixes an issue resampling categorical bokeh palettes.",5,4,"['type: bug', 'tag: backend: bokeh']"
1178,178335371,2493,19542768,2018-03-29 13:52:57,2018-03-29 14:24:10,closed,Fixed DynamicMap collation for changing keys,"This PR improves collation on DynamicMap, ensuring that the items in the return container object can change their label and key as long as 1) the number of items in the object does not change and 2) the types of the items in the container do not change.

- [x] Fixes https://github.com/ioam/holoviews/issues/1918
- [x] Adds unit tests",2,1,['type: bug']
1179,178216074,2492,19542768,2018-03-29 03:06:00,2018-03-30 01:48:09,closed,Colormap categories (WIP),"This WIP PR is mainly for discussion, building on the unmerged PR for colormap_consistency.  Only the last two commits are new, so please only discuss those two.

The code isn't quite done, but I wanted to get feedback before going further. What it mainly adds is the ability to pull out any particular category, provider, or source of colormaps (e.g. `lookup_cmaps(category='Diverging',provider='bokeh', source='d3'))`, which I think will be very useful when building GUIs.  Usually, only a subset of the types are relevant, and it's very painful to list them out by name, yet it's also very painful for users to page through long lists of mostly inappropriate colormaps.  I think that this approach will allow a given app or dashboard to select just the subset of colormaps that would be relevant for it.

I've also put in the bare minimum version of listing the colormaps by category in the Styling user guide:

![image](https://user-images.githubusercontent.com/1695496/38067772-9aefd9ba-32d3-11e8-98df-33c05c82e1df.png)

But note that to do this, I had to list each of the various colormaps provided, declaring their category, etc., because that information is not otherwise available programmatically except for colorcet.  This ended up being less verbose than I expected, but it does encode knowledge about the external backends that we should be aware that we are encoding.

There are still several tasks remaining:

- [x] Fix handling for reversed ('_r') colormaps
- [x] Define a useful default for colormaps not found in the lookup table
- [x] Find a better way to break up the big list of colormaps with big category labels (presumably not possible in the same cell, given the lack of hierarchical layouts?)
- [ ] Add examples of pulling out categories of colormaps, e.g. for a gui (maybe to pyviz?)
- [x] Sort colormaps in the displayed list
- [x] Clean up categorization of Bokeh maps to make sure they end up in the same category as similar Matplotlib maps
- [x] Consider merging list_cmaps with lookup_cmaps, e.g. making the current list_cmaps private and making lookup_cmaps be a superset of its functionality
- [x] There's no obvious way to specify a colormap by provider, and so when providers have matching-named colormaps the example currently shows only one of them, twice; must be fixed.
- [ ] Allow categorizing by background type as well, to make it simpler for dashboards to select the right set of useful colormaps?
- [ ] Allow excluding certain colors (white, black), for the same reason?",3,27,[]
1180,177864887,2489,19542768,2018-03-27 21:04:09,2018-03-28 03:26:31,closed,Added check for duplicate dataframe columns,"- [x] Addresses https://github.com/ioam/holoviews/issues/2476
- [x] Adds unit test",2,1,[]
1181,177836005,2488,19542768,2018-03-27 19:06:13,2018-03-28 13:33:10,closed,Provide full control over bokeh grid styles,"Provides control over grid styling in the bokeh backend.

- [x] Addresses https://github.com/ioam/holoviews/issues/1903 and should fix https://github.com/ioam/holoviews/issues/1967
- [x] Adds unit tests
- [x] Adds documentation entry",2,1,"['type: feature', 'tag: backend: bokeh']"
1182,177285349,2483,19542768,2018-03-25 11:45:06,2018-03-29 14:20:32,closed,Make colormap handling consistent and allow discrete mapping,"This PR makes colormapping more consistent between backends:

* Adds support for ``color_levels`` to generate discrete colormaps ( https://github.com/ioam/holoviews/issues/1856)
* Allows defining an explicit mapping from category to color.
* Adds the symmetric plot option to bokeh plots for consistency with matplotlib backend
* Removes hard dependency on matplotlib in bokeh backend by defining ``MPL_COLORS`` in holoviews (https://github.com/ioam/holoviews/issues/829, https://github.com/ioam/holoviews/issues/1807)
* Adds support for colormap interpolation to bokeh backend so, even in the absence of matplotlib, colormaps are smoothly interpolated and therefore (almost) identical to matplotlib (https://github.com/ioam/holoviews/issues/1502) (there are some rounding issues causing, at least for me, imperceptible differences)
* Adds a new ``Styling_Plots`` user guide which currently covers Cycles/Palettes and colormaps.
* Enables 'transparent' as an alias for transparent NaN color and sets Raster/Image/QuadMesh default NaN color to transparent (https://github.com/ioam/holoviews/issues/2487)
* Extended the default color Cycle (https://github.com/ioam/holoviews/issues/1591)

This means that the following list of colormaps are now supported consistently across backends:

```
['Blues',
 'BrBG',
 'BuGn',
 'BuPu',
 'GnBu',
 'Greens',
 'Greys',
 'OrRd',
 'Oranges',
 'PRGn',
 'PiYG',
 'PuBu',
 'PuBuGn',
 'PuOr',
 'PuRd',
 'Purples',
 'RdBu',
 'RdGy',
 'RdPu',
 'RdYlBu',
 'RdYlGn',
 'Reds',
 'Spectral',
 'YlGn',
 'YlGnBu',
 'YlOrBr',
 'YlOrRd',
 'Accent',
 'Dark2',
 'Paired',
 'Pastel1',
 'Pastel2',
 'Set1',
 'Set2',
 'Set3',
 'magma',
 'inferno',
 'plasma',
 'viridis']
```

I'm not opposed to adding colorcet to that list, but it's now no longer required for our colormap handling to be consistent.

- [x] Add unit tests",23,25,"['type: feature', 'tag: backend: bokeh', 'tag: backend: mpl', 'type: enhancement']"
1183,177240041,2482,19542768,2018-03-24 14:29:05,2018-03-29 17:32:18,closed,Add HexTiles element,"This PR adds a HexTiles element which is very useful as a density map. The functionality is all there now, but this depends on the unmerged bokeh PR https://github.com/bokeh/bokeh/pull/7682. So far bokeh does not yet support hexagons with unequal scales along the two axes which is required for consistency with matplotlib and for it to be generally useful.

By default hex bins simply count the values in each bin but it may also be used for weighted binning.

<img width=""595"" alt=""screen shot 2018-03-24 at 2 28 15 pm"" src=""https://user-images.githubusercontent.com/1550771/37865111-a09475f4-2f6f-11e8-93c1-039293f29c22.png"">

<img width=""500"" alt=""screen shot 2018-03-24 at 3 05 28 pm"" src=""https://user-images.githubusercontent.com/1550771/37865472-d4e2f5e2-2f74-11e8-9e98-3571320a0dbf.png"">

On an implementation level we are letting matplotlib handle the binning internally while in the bokeh case we generate the hex binning using a Compositor and an operation. Unlike in other cases this operation is not user facing since the hex coordinates are not useful to a user. To make the Compositor work just for the bokeh backend it now includes an option to apply the compositor only for certain backends.

Notebook with examples: https://anaconda.org/philippjfr/hextiles/notebook

- [x] Adds HexTiles element
- [x] Addresses https://github.com/ioam/holoviews/issues/1141
- [x] Add unit tests
- [x] Add reference notebook entry",3,20,['type: feature']
1184,177205276,2480,19542768,2018-03-23 23:32:26,2019-07-26 08:24:35,closed,Adding HTML holomap export to notebook archive,"This WIP PR is attempting to address #449.

Unfortunately, it isn't working yet as bokeh JS isn't included in the output. I see various issues:

* I think ``__call__`` should simply be the data saved to file by ``save``.
* The ``__call__`` method should not be used internally e.g in the ``html`` method.

By making ``__call__`` closely related to ``save``, users using ``__call__`` will get useful, self-contained output which is currently not the case.

If we fix those issues, I'll have to think about whether the changes I've currently made to the renderers needs to stick or go away.",1,3,[]
1185,177053850,2479,19542768,2018-03-23 12:19:00,2018-03-26 21:49:58,closed,Fixed expansion of Cycles of unequal lengths,"This PR implements the suggestion in https://github.com/ioam/holoviews/issues/2333, ensuring that cycles of unequal color are expanded by cycling over each item individually. It will try to expand the styles up to the defined max_cycles or until the combined cycle starts repeating. To prevent combinatorial explosion the total number of cycles is clipped at 1000.

- [x] Addresses https://github.com/ioam/holoviews/issues/2333 and fixes https://github.com/ioam/holoviews/issues/1852
- [x] Added unit tests",4,7,"['type: bug', 'tag: component: options', 'type: enhancement']"
1186,177053167,2478,19542768,2018-03-23 12:15:41,2018-04-03 14:30:47,closed,Change inspect.getargspec to inspect.getfullargspec in order to fix the DeprecationWarning," In Python 3.6 I keep getting the following warning:
```
/home/tinkerer/.conda/envs/dev/lib/python3.6/site-packages/ipykernel/__main__.py:2: DeprecationWarning: inspect.getargspec() is deprecated, use inspect.signature() or inspect.getfullargspec()
```

When creating some kind of composite object this warning is often printed a dozen times.",11,1,[]
1187,176818145,2474,19542768,2018-03-22 15:33:20,2018-03-26 13:57:47,closed,Allow specifying Bivariate levels,"This PR allows specifying levels for the Bivariate element as requested in #2099. Additionally it also ensures that the contours operation actually generates the requested number of levels, which was not the case before. Probably changes some test data but it's a clear bug fix.

- [x] Addresses https://github.com/ioam/holoviews/issues/2099
- [x] Added unit tests",5,2,"['type: bug', 'type: feature']"
1188,176806355,2473,19542768,2018-03-22 14:58:27,2018-03-27 12:37:09,closed,Implemented and standardized GridSpace/NdLayout overlay operations,"This PR makes ``NdLayout.__mul__`` consistent with ``GridSpace.__mul__``. Both are homogeneous layout containers and should therefore overlay in the same way. Adding ``__mul__ `` support for Layout as discussed in the corresponding issue is imo a different topic that would require more discussion. In that case I think the suggested semantics are more confusing than helpful while the semantics for NdLayout/GridSpace are well defined. In the ``GridSpace*GridSpace`` or ``NdLayout*NdLayout`` items can be matched up based on their keys while zipping Layouts will surprise at least some people.

- [x] Addresses https://github.com/ioam/holoviews/issues/2075
- [x] Adds unit tests",10,6,['type: feature']
1189,176769145,2472,19542768,2018-03-22 12:56:09,2018-03-22 14:28:17,closed,Avoid zero division warnings in live data user guide,Addresses #2250. I also thought it was worth making the backend explicit when loading the extension. Was there a good reason not to?,3,1,['tag: docs']
1190,176487281,2471,19542768,2018-03-21 14:07:32,2018-03-21 17:24:53,closed,Updated docstrings and cleaned up inheritance for datashader operations,"Minor updates following on from #2465:

1. Removed unnecessarily duplicated docstrings in subclasses (param docstrings are inherited even if the parameter is redefined with a different default in a subclass)
2. Created a new abstract base class to hold the ""linked_inputs"" parameter to avoid duplicated docstrings and allow users to set the value for all such plots as a single class parameter. 
3. Minor typo fixes and docs clarifications.

I would assume that only item 2 would be potentially controversial, but that parameter was duplicated in  three different places, with various errors from copying the docstring and not updating it, so I think it's important to have a single definition for what that parameter does.  Plus, it seems like a parameter that people might want to disable uniformly for all such plots, and right now to do that one would have to search the code to find all places where it's used and set each such class parameter.",2,1,"['tag: API', 'type: enhancement']"
1191,176486572,2470,19542768,2018-03-21 14:05:14,2018-03-21 16:54:41,closed,Using HTTPS for all links to assets.holoviews.org,"
PR to address #2464 that greps for ``http://assets.holoviews.org`` and replaces it with ``https://assets.holoviews.org``.

@philippjfr Look right to you? This won't be tested until a doc build is executed and uploaded...

",4,5,['tag: docs']
1192,176327362,2466,19542768,2018-03-20 21:26:59,2018-04-19 18:49:06,closed,More notebook flakes checking,"I used python27 for flake checking, and got this for examples/user_guide/Plotting_with_Matplotlib.ipynb:

```
__init__.py                 80 ERROR    Notebook JSON is invalid: u'name' is a required property

Failed validating u'required' in notebook[u'properties'][u'metadata'][u'properties'][u'language_info']:

On instance[u'metadata'][u'language_info']:
{}
```

I didn't understand it, so opened in jupyter notebook server:

<img width=""1075"" alt=""screen shot 2018-03-20 at 9 11 32 pm"" src=""https://user-images.githubusercontent.com/1929/37683578-f43fdd62-2c84-11e8-94a6-fcb85e94df46.png"">

I still didn't understand it, but I ran my local notebook metadata stripping tool, and that seemed to make it work and I can kind of see why...but please check the change makes sense to you.


I've also fixed the mistake I made in #2439 (my change there was correctly flagged by nbsmoke here - I'd made a mistake, probably because I was editing lots of notebooks at the same time).
",13,1,[]
1193,176294315,2465,19542768,2018-03-20 19:12:28,2018-03-21 13:50:37,closed,Improved rasterize API,"This PR ensures that the ``rasterize`` and ``datashade`` operations correctly apply datashading operations to all elements that support it, specifically regridding of Image types can now also be invoked in this way. Secondly this PR improves handling for the aggregator functions, which may now be defined as strings or ``ds.reductions.Reduction`` types.
 
Adding documentation is a separate task which @jbednar volunteered for, specifically these two issues should be addressed by documentation updates:

https://github.com/ioam/holoviews/issues/1909
https://github.com/ioam/holoviews/issues/2158

The rasterize operation works by dispatching each Element type to a specific underlying operation with a specific default aggregator:

- ``Curve``/``Scatter``/``Points``/``Path``: ``aggregate`` (count)
- ``Image``/``RGB``/``HSV``: ``regrid`` (mean)
- ``TriMesh``: without vdims ``aggregate`` (count), with vdims ``trimesh_rasterize`` (mean)
- ``QuadMesh``: ``quadmesh_rasterize`` (mean)

- [x] Addresses https://github.com/ioam/holoviews/issues/2461
- [x] Add tests",5,6,"['tag: API', 'type: enhancement']"
1194,176255787,2463,19542768,2018-03-20 16:51:39,2018-03-21 00:37:52,closed,Apply utc offset to bokeh callback datetimes,"This fixes an issue dynamically regridding data. The problem was that when bokeh sent datetimes back to Python those were in the local timezone and therefore did not necessarily match the data. By applying an UTC offset to the callback values it seems the bug is fixed. However I don't pretend to know enough about timezones in general to know whether this will cause other issues.

- [x] Fixes https://github.com/ioam/holoviews/issues/2459",8,1,['type: bug']
1195,175784708,2456,19542768,2018-03-19 00:55:43,2018-03-19 17:31:56,closed,Define custom css for JupyterLab slider,"Has no effect on the CSS design in the classic notebook but overrides improves the styling for JupyterLab which does not include bootstrap.css.

<img width=""1214"" alt=""screen shot 2018-03-19 at 1 25 17 am"" src=""https://user-images.githubusercontent.com/1550771/37574014-8c338d92-2b15-11e8-9f3c-17fe308ae4fa.png"">


There's still some things that could be improved but I haven't been able to figure out a way without affecting the styling in the classic notebook.",2,3,['type: enhancement']
1196,175704682,2455,19542768,2018-03-17 15:05:35,2018-03-19 17:17:18,closed,Avoid computing frame ranges for dynamic plots,"In the past Plot.keys would only initialize with the first key when plotting DynamicMaps, however at some point it was generalized such that it would contain all possible dynamic key combinations. This causes issues for the range computation because if framewise it will compute evaluate the entire dynamic parameter space on initialization, which is completely infeasible in many cases. This restores the old behavior of only computing the first frame range on initialization.

- [x] Fixes https://github.com/ioam/holoviews/issues/2373",4,1,"['type: bug', 'tag: component: plotting']"
1197,175553750,2454,19542768,2018-03-16 14:45:44,2018-03-19 17:12:10,closed,Fixed MPLRenderer anim output regression,"During the update to the renderer code to make it work in JupyterLab a regression was introduced to rendering animation output using matplotlib (e.g. gif, mp4 and webm output). This PR fixes the regression.

Additionally this switches to the pillow animation writer for matplotlib>=2.2.0, which provides an easy way to generate gifs on windows.

- [x] Added unit tests
- [x] Addresses https://github.com/ioam/holoviews/issues/385, https://github.com/ioam/holoviews/issues/2095
- [x] Improved documentation of animation support",2,5,"['type: bug', 'tag: backend: mpl']"
1198,175334127,2452,19542768,2018-03-15 18:03:18,2018-03-19 16:58:12,closed,Fixed datashading data on subpixel resolution,"As the title says, currently when zooming in to very low densities the width and height can reduce to 0, causing exceptions. This clips the minimum sizes at 1. Along with https://github.com/bokeh/datashader/pull/573 this should address issues zooming beyond a single pixel.",8,1,['type: bug']
1199,174944483,2447,19542768,2018-03-14 12:49:23,2018-03-19 16:59:16,closed,Made mpl SurfacePlot work with different datatypes,"The matplotlib SurfacePlot implementation was never updated to support the different datatypes that are now supported.

- [x] Fixes https://github.com/ioam/holoviews/issues/2450",2,1,"['type: bug', 'tag: backend: mpl']"
1200,174786077,2445,19542768,2018-03-13 20:51:21,2018-03-13 22:20:09,closed,Fixed bokeh bug with offset being undefined,"Fixes a small bug in bokeh which occurs in certain layouts containing ``Empty`` objects.

- [x] Fixes https://github.com/ioam/holoviews/issues/2378",1,1,"['type: bug', 'tag: backend: bokeh']"
1201,174785056,2444,19542768,2018-03-13 20:47:02,2018-03-19 17:10:35,closed,Improved validation for nested DynamicMaps and other invalid nestings,"This PR extends the validation of nesting structures we perform during plotting. Currently when plotting a DynamicMap which returns another DynamicMap you receive an obscure error, this PR ensures you get a sensible error, which describes the two most common scenarios under which this might occur: 1) the callback actually returns a DynamicMap 2) an operation with dynamic=True was applied.

This PR also extends the validation of invalid nesting structures to Layouts/GridSpaces which contain objects which are invalidly nested.

- [x] Addresses https://github.com/ioam/holoviews/issues/2392",4,1,[]
1202,174780167,2443,19542768,2018-03-13 20:27:01,2018-03-14 00:53:08,closed,Ensure HoloMap.opts and .options apply to elements,"Makes HoloMap consistent with DynamicMap such that any options applied to it, get passed down to the objects contained by the HoloMap.

- [x] Fixes https://github.com/ioam/holoviews/issues/2408
- [x] Adds tests",5,1,['tag: API']
1203,174764775,2442,19542768,2018-03-13 19:24:02,2018-03-13 22:35:15,closed,Fixed transposed expanded grid coords,"In investigating a bug in the ``Surface`` element I discovered that expanded coordinates are seemingly transposed from the expected orientation. Additionally the ImageInterface.coords method did not allow returning coordinate edges (rather than centers) like the other grid based interfaces.

If this PR passes there's clearly a gap in the unit tests, if it fails I'll have to investigate why this seemingly didn't cause issues or remove workarounds that were put in place elsewhere to make this work.",5,2,['tag: component: data']
1204,174641556,2440,19542768,2018-03-13 12:16:45,2018-03-19 16:57:03,closed,Allow overriding rtol on Image,Supersedes #2423,1,7,[]
1205,174520087,2439,19542768,2018-03-12 23:15:54,2018-03-19 16:53:53,closed,Notebook flake fixes.,"Following on from #2091, I did some more work on a notebook flakes tool, and ran it on examples/. This PR is the result.

Notes:
* examples/user_guide/Deploying_Bokeh_Apps.ipynb: `loop` comes up as being an undefined name; is it?
* examples/user_guide/Plots_and_Renderers.ipynb: `holoviews.plotting.mpl` is imported near the start, but is unused. I made it be used. You might not like the change. An alternative supported by the flakes tool would be to add `#noqa: reason` to the `holoviews.plotting.mpl` import, and reverting the change I've made here.",15,2,[]
1206,174516337,2438,19542768,2018-03-12 22:52:17,2018-04-30 16:36:32,closed,Linked to and updated install guide,"Currently a draft and I'm not 100% sure the rst markup is correct. That said, it is worth updating this before 1.10.",2,5,[]
1207,174485964,2436,19542768,2018-03-12 20:30:52,2018-03-12 20:41:54,closed,Fixing version fetched via git archive,I think I found the issue though I need to check it is working now before this PR is merged.,1,1,[]
1208,174431171,2435,19542768,2018-03-12 16:55:21,2018-03-12 22:18:18,closed,Added conda.recipe directory,"Finally add the ``conda.recipe`` directory. Not quite ready yet as I get:

```
INFO:conda_build.variants:Adding in variants from internal_defaults
Adding in variants from config.variant
INFO:conda_build.variants:Adding in variants from config.variant
Undefined Jinja2 variables remain (['version']).  Please enable source downloading and try again.
```
This is something to do with the use of ``{% set sdata = load_setup_py_data() %}`` in the ``meta.yaml``. I'm not quite sure why though as the tested autover examples [also use this](https://github.com/ioam/autover/tree/master/examples/pkg_depend/conda.recipe) and it seems to work there. @ceball Any ideas?

",4,4,[]
1209,174371952,2434,19542768,2018-03-12 13:45:17,2018-03-12 15:24:49,closed,Optimize range computations,"In benchmarking HoloViews for the pangeo project which will predominantly use dask arrays wrapped using xarray I identified a number of bottlenecks in the range calculations, which are being done inefficiently or unnecessarily.",3,3,[]
1210,174355641,2433,19542768,2018-03-12 12:40:28,2018-03-12 20:19:27,closed,Added support for the labmode comms,"This small change allows HoloViews comms to support [labmode](https://github.com/pyviz/labmode). To be clear about the responsibilities of labmode:

1. Labmode will not be defining ``Jupyter`` on the root so this is a pure fallback (and if ``Jupyter`` ever does get stubbed, it will have to support enough of the same API that this PR can be reverted).
2. Labmode is responsible for mirroring the Jupyter comms API.

I just want to make it clear that I don't want to add any more labmode specific code to HoloViews. This PR is simple enough that the only point I see for discussion is whether the check should be for ``window.comm_manager`` or maybe something else labmode can set...",3,2,[]
1211,174228325,2431,19542768,2018-03-11 16:11:17,2018-03-15 16:00:30,closed,XArrayInterface improvements: dimension units and labels,"This addresses the first two points in #2319. As @philippjfr suggested, it's relatively straightforward to read units and dimension labels from xarray and attach them to the appropriate key and value dimensions (as far as I can tell, the attributes `units` and `long_name` are a standard for netcdf files). I could not reproduce the the problem with the swapped kdims for xarray.DataArray vs. xarrayDataset, but I added a test to guard against it.

I would like to try to add some stuff to this PR with your input (see #2319):
- ~~Support for dimensions without coordinates~~
- ~~Perhaps a better way to deal with non-coordinate dimensions~~
- [x] When everything else is done: some extra documentation.",12,4,[]
1212,174126839,2428,19542768,2018-03-09 22:43:20,2018-03-12 12:54:24,closed,Fixed empty Element visibility bug in bokeh plots,"When using the drawing tools you often initialize the plot with an empty element, but currently empty elements make the glyph renderer invisible. This ensures that only missing elements set visible=False on the renderer.",1,2,"['type: bug', 'tag: backend: bokeh']"
1213,174043738,2426,19542768,2018-03-09 16:09:07,2018-03-09 23:56:04,closed,Switch versioning system to use autover,"Currently the PR is relying on ``embed_version`` during the build step and the JSON fallback in ``__init__.py`` which should be sufficient for packaging an alpha release.

This should also be sufficient once a param release is available includes ``Version``. Until then, the version won't be up-to-date when working from a git repository which means this PR shouldn't be merged until either 1) a new param is released and pinned 2) we decide to temporarily bundle autover  instead.",2,16,[]
1214,174025811,2425,19542768,2018-03-09 14:58:40,2018-03-13 16:14:03,closed,Made pandas autoindexing behavior backwards compatible,"Recent changes to the way pandas indexes are handled caused a regression in the behavior of the interface when passing in a single column dataframe. This restores the old behavior while still allowing the use of the index on a single column dataframe.

- [x] Fixes https://github.com/ioam/holoviews/issues/2400",4,2,"['tag: API', 'tag: component: data']"
1215,173900173,2424,19542768,2018-03-09 01:57:42,2018-03-09 18:50:29,closed,Ensure select on dask arrays in GridInterface is lazy,Followup from https://github.com/ioam/holoviews/pull/2305 which ensures that select and sample operations are applied lazily and do not load the dask array into memory.,20,8,"['type: bug', 'tag: component: data']"
1216,173842275,2423,19542768,2018-03-08 20:30:47,2018-03-13 12:18:01,closed,Allow overriding rtol on Image,Supersedes #2380  ,2,6,[]
1217,173742632,2421,19542768,2018-03-08 13:59:19,2018-03-08 17:50:12,closed,Renderer and Widget bug fixes,"The recent PRs to add Dimension.default and JupyterLab support caused some small issues for the widgets and renderers. This PR fixes two bugs:

1. Initializing the matplotlib scrubber widget now works again
2. Fixes the signature of PlotlyRenderer._figure_data so it no longer errors.",2,2,"['type: bug', 'tag: component: plotting']"
1218,173738154,2420,19542768,2018-03-08 13:40:22,2018-03-08 15:12:59,closed,Handle streamz 0.3.0 API changes,"The streamz 0.3.0 release changed the names of the StreamingDataFrame and StreamingSeries to just DataFrame and Series, this PR ensures that the HoloViews Buffer stream supports both old and new versions of streamz.

- [x] Fixes https://github.com/ioam/holoviews/issues/2409",2,1,[]
1219,173453951,2418,19542768,2018-03-07 13:38:21,2018-03-07 17:46:47,closed,Bokeh renderer fixes,"Fixes two bugs introduced in the JupyterLab refactor:

1) Fixes png export by correctly handling it in ``_figure_data`` (where it should be handled)
2) Fixes wrong logic in bokeh message handler, which incorrectly skipped messages when Bokeh.protocol was defined.",1,2,"['type: bug', 'tag: backend: bokeh']"
1220,173401958,2417,19542768,2018-03-07 09:56:57,2018-03-07 12:27:51,closed,mention hv.help-mechanism in user_guide on customizing plots,as proposed in https://github.com/ioam/holoviews/issues/2413,2,1,[]
1221,173160686,2407,19542768,2018-03-06 13:40:38,2018-03-06 15:38:27,closed,Attempt at unpinning dask to fix conda constraint errors on Travis,"Attempt at fixing:

```
UnsatisfiableError: The following specifications were found to be in conflict:
dask 0.16.1* -> dask-core 0.16.1.*
iris -> dask >=0.17.1
Use ""conda info <package>"" to see the dependencies for each package.
```",1,1,['tag: component: testing']
1222,173154801,2405,19542768,2018-03-06 13:16:47,2018-03-07 17:48:14,closed,Fixed bug setting bokeh toolbar location,"The LayoutPlot and GridPlot were not using the correct keyword to set the toolbar location on a gridplot.

- [x] Fixes https://github.com/ioam/holoviews/issues/2370
- [x] Adds tests",3,1,"['type: bug', 'tag: backend: bokeh']"
1223,173148394,2404,19542768,2018-03-06 12:49:41,2018-03-06 20:18:15,closed,Miscellaneous plot fixes,"Smaller bug fixes along with tests to avoid regressions.

- [x] Fixes https://github.com/ioam/holoviews/issues/1757, https://github.com/ioam/holoviews/issues/1921 and https://github.com/ioam/holoviews/issues/2347",2,5,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1224,172736458,2399,19542768,2018-03-04 19:35:41,2018-10-06 15:18:40,closed,Delete iris interface (and move it to geoviews),"In https://github.com/ioam/holoviews/issues/1892 we decided to move the iris to GeoViews. This can be merged once I've opened a corresponding PR on geoviews.

- [ ] Add iris interface to geoviews",3,1,['tag: component: data']
1225,172727778,2397,19542768,2018-03-04 16:28:40,2018-03-06 18:10:41,closed,Move shared plot parameters to base classes,"As the title says, where ever possibly this moves plot parameters to the baseclasses.

- [x] Addresses https://github.com/ioam/holoviews/issues/2369",2,1,"['tag: API', 'tag: component: plotting']"
1226,172720991,2396,19542768,2018-03-04 14:03:42,2018-03-06 18:08:57,closed,Add support for Dimension.default,"Implements ``Dimension.default`` to allow initializing a plot to something other than the first key value.

- [x] Addresses https://github.com/ioam/holoviews/issues/704 and https://github.com/ioam/holoviews/issues/1258
- [x] Add new tests
- [x] Add example to docs",8,11,"['type: feature', 'tag: component: plotting']"
1227,172700662,2394,19542768,2018-03-04 03:37:41,2018-03-06 18:05:37,closed,Allow drawing colorbar on bokeh QuadMeshPlot,Colorbars weren't being drawn on bokeh QuadMesh plots. I'll double check all other plots that allow colormapping draw colorbars and add some tests.,2,2,"['type: bug', 'tag: backend: bokeh']"
1228,172676562,2391,19542768,2018-03-03 16:58:25,2018-03-06 18:02:33,closed,Replaced badge with monthly download badge,The current conda download badge only takes into account downloads from the ioam channel even though that is not even the most popular channel for installing holoviews (conda-forge is). This replaces the badge with a badge that shows rolling monthly download stats aggregating over conda and PyPI. Reporting 6-7k downloads per month looks a lot better than 20k all time downloads which is just totally wrong.,2,1,['tag: docs']
1229,172645561,2390,19542768,2018-03-03 02:36:23,2018-03-04 01:44:49,closed,Fixes for widget step and sorting,"This PR fixes unsorted slider values and an issue supplying a step when the range is supplied as an integer. Also adds a number of tests.

- [x] Fixes https://github.com/ioam/holoviews/issues/1707 and https://github.com/ioam/holoviews/issues/1835
- [x] Added tests ",2,3,"['type: bug', 'tag: component: plotting']"
1230,172642503,2389,19542768,2018-03-03 01:40:20,2018-03-03 13:43:56,closed,Correctly handle comms in bokeh<0.12.15,In the JupyterLab PR we switched to handling the comm messages ourselves which does not work in bokeh versions <=0.12.14 however I did not guard against this case appropriately. This now ensures that Bokeh exposes the ``protocol`` module and only creates a comm for bokeh versions < 0.12.15.,2,1,"['type: bug', 'tag: backend: bokeh']"
1231,172377253,2386,19542768,2018-03-01 22:53:27,2018-03-08 20:29:32,closed,Fix for issue #2380,"changed rtol to a param of Image, so that it when the Image is cloned rtol is included in the clone. Also added a unit test to catch the problem described in issue #2380 report",8,15,[]
1232,172297251,2384,19542768,2018-03-01 17:06:29,2018-03-02 13:11:30,closed,Hotfix 1.9.5,Just opened to easily see the changes that were applied. Can be closed once released.,1,7,[]
1233,172286293,2383,19542768,2018-03-01 16:28:24,2018-03-12 15:38:02,closed,Workaround for datetime streaming bug in bokeh,Very ugly workaround for https://github.com/bokeh/bokeh/issues/7587 in bokeh datetime streaming.,8,2,"['type: bug', 'tag: backend: bokeh']"
1234,172222384,2382,19542768,2018-03-01 12:24:00,2018-03-01 21:43:45,closed,Fixed Renderer widget export,"After adding JupyterLab support the widgets were returning separate HTML and JS components which were not appropriately assembled into a single document on export.

This PR restores the old behavior on ``NdWidgets`` and adds a keyword to return the components separately matching the keyword on ``Renderer._figure_data``.

- [x] Fixes https://github.com/ioam/holoviews/issues/2381",2,1,"['type: bug', 'tag: component: plotting', 'status: WIP']"
1235,171540328,2377,19542768,2018-02-27 01:34:13,2018-02-27 02:47:23,closed,Fixed bug finding Layout label,"Fixes a bug revealed by https://github.com/ioam/holoviews/pull/2331 currently messing with some tests. Before that PR it would try to access Layout.label and simply return a new Layout node, but now this causes issues.",3,1,['type: bug']
1236,171055352,2372,19542768,2018-02-23 16:18:21,2018-02-27 19:23:43,closed,Add CommManager classes ,"Builds on https://github.com/ioam/holoviews/pull/2368 abstracting all Comm handling onto so called CommHandler classes. By default HoloViews will ship with a JupyterCommHandler, which will handle both the classic notebook and JupyterLab.

Here is the current status of JupyterLab support:

Static plots
-------------

* Static plots work (all backends)
* Embedded widgets work (all backends)

Backend -> Frontend
-------------------------

* Can send data from backend to frontend and update matplotlib and plotly plots
* Cannot yet update bokeh plots

Frontend -> Backend
-------------------------

* Bokeh callbacks work
* Dynamic and Live widgets work

- [x] Handle bokeh messages (either by exposing the API in bokeh or by duplicating some of that code in HoloViews)
- [ ] Add tests
- [x] Review API and docstrings with @jlstevens ",11,34,['type: feature']
1237,170754377,2368,19542768,2018-02-22 13:47:14,2018-02-27 02:40:08,closed,Support for JupyterLab,"This PR adds initial support for working in JupyterLab. So far it supports plotting static plots and embedded widgets by piggybacking on top of the bokeh JupyterLab extension. To make that work I have to do a number of pretty terrible things such as dynamically loading jQuery and require, so in the long term this isn't a good solution. However in the long term we plan on rewriting the widgets anyway, so this is a stopgap solution to get our foot in the door.

The main changes that were required to get this to work were:

* Put the HoloViews widgets and JS utilities into a global HoloViews namespace (rather than making them all global)
* Split the core JS code from the HTML and JS templates
* Add ``Renderer.components`` method which returns data and metadata dictionaries both indexed by ``MIME_TYPE``
* Have the display hooks render the HTML with publish_display_data and then publish the JS code in a separate step

Current issues:

* The display hooks were designed to return the HTML rather than publishing it using ``publish_display_data``, however an HTML blob cannot work in this new approach since the HTML needs to be published before the JS code.
* No handling of Comms yet, this will follow in a later PR which isolates all comm code on ``HoloViews.CommManager`` so we can ship a CommManager that handles Jupyter Notebook & JupyterLab but also allow overriding the CommManager for other environments.

<img width=""1575"" alt=""screen shot 2018-02-22 at 1 46 49 pm"" src=""https://user-images.githubusercontent.com/1550771/36541767-e09a2988-17d6-11e8-9c2c-abe64be110c8.png"">
",3,6,['status: WIP']
1238,170457041,2363,19542768,2018-02-21 12:32:47,2018-02-21 13:04:39,closed,fixed color option in code snippet,the bokeh reference page for BoxWhisker has an element option that needed updating,1,1,"['tag: docs', 'tag: component: options']"
1239,170354634,2360,19542768,2018-02-21 01:25:23,2018-02-21 16:43:51,closed,Fixed clip parameter on Violin,The clip option on ViolinPlot made no sense as it would actually override any custom ranges.,5,1,"['tag: API', 'tag: backend: bokeh']"
1240,170289148,2357,19542768,2018-02-20 19:41:51,2018-02-22 12:29:14,closed,Decode bytes in bokeh plots,"Attempt to decode bytes types passed to bokeh plots. As part of the Intake project I'm building a HoloViews based plotting API, many of the data sources in this project includes ``bytes`` types even in Python3 which currently cannot be serialized by bokeh causing errors. In this API its not really practical to convert the bytes types to strings, so it would be helpful if we could just assume utf-8 encoding (which will be most common). This will of course not always work but based on my testing it works in most cases, which is better than the current case where it works in no cases.",3,1,['tag: backend: bokeh']
1241,169987549,2354,19542768,2018-02-19 15:18:51,2019-09-22 19:33:02,closed,Option error refactor,"Picks up where https://github.com/ioam/holoviews/pull/2306 left off, completely refactoring option error handling. All methods of setting options will now either warn or error when given an invalid option. Could consider readding a skip option for the OptionsMagic, because that won't let you be explicit about the backend you're trying to set options on yet.

- [ ] Update existing unit tests
- [ ] Add new unit tests",2,5,['tag: component: options']
1242,169839609,2352,19542768,2018-02-18 17:06:58,2018-04-03 18:58:38,closed,Added Labels element,"Adds a Labels element type for vectorized drawing of labels and text. Also adds an emoji clustering dataset (~1 kB in size). 

- [x] Addresses https://github.com/ioam/holoviews/issues/819 and https://github.com/ioam/holoviews/issues/1837
- [x] Add unit tests
- [x] Add reference notebooks
- [x] Add demo notebooks
- [x] Update examples using an NdOverlay of Text elements. 
- [x] Add xoffset and yoffset options to make usage as labels easier.",11,13,"['type: feature', 'tag: component: plotting']"
1243,169838358,2351,19542768,2018-02-18 16:40:13,2018-02-18 23:14:25,closed,Moved all tests into appropriate subpackages,"Reorganizes unit tests so they are in the appropriate subpackages.

- Addresses https://github.com/ioam/holoviews/issues/1422",2,4,['tag: component: testing']
1244,169652139,2349,19542768,2018-02-16 15:28:22,2018-02-16 16:42:47,closed,speedup TriMesh.edgepaths by a factor 20,"Based on what I did for https://github.com/python-adaptive/adaptive/commit/9f481562b0118199d4011667e857ed8eb764a2a5 I made these changes here too.

The numbers say everything :)
```python
# with this PR
%timeit trimesh.edgepaths 
4.7 ms ± 271 µs per loop (mean ± std. dev. of 7 runs, 100 loops each)

# @ master
%timeit trimesh.edgepaths
86.6 ms ± 5.65 ms per loop (mean ± std. dev. of 7 runs, 10 loops each)
```",3,1,[]
1245,169651011,2348,19542768,2018-02-16 15:24:02,2018-02-17 20:01:37,closed,Fallback for unknown dask categories,"When the categories on a categorical column aren't known it throws an NotImplementedError, in this case this falls back to getting the categories the usual way.",1,1,[]
1246,169434638,2346,19542768,2018-02-15 17:23:32,2018-02-16 14:29:14,closed,Miscellaneous minor bug fixes,"Fixed a number of minor bugs handling empty data, wrong variable names and partial dimension overlap.",2,7,[]
1247,169429441,2345,19542768,2018-02-15 17:03:18,2018-02-19 15:20:49,closed,Handle range on heterogeneously typed Dataset column,Calling range on a heterogeneously typed column currently causes all kinds of issues (including errors) due to python 3 sorting semantics. While range should generally not be called on object or string dtype columns it currently is so this needs to work robustly for the time being. Therefore this PR uses the python2sort utility to do the sorting robustly in python3.,3,3,"['type: bug', 'tag: component: data']"
1248,169419068,2344,19542768,2018-02-15 16:25:45,2018-02-16 13:20:36,closed,Datashader fixes,"Addresses another bug in the datashader handling of datetimes, when the range is not supplied with nanosecond resolution. Also adds a test and some extra handling for datashading empty objects.",3,3,['type: bug']
1249,169197323,2342,19542768,2018-02-14 19:14:21,2018-02-14 23:14:59,closed,Correctly register pandas matplotlib conversions,"Fixed issue registering the matplotlib conversion hooks for datetime types when using pandas 0.22.0. The register function does not seem to exist where pandas says it does, so I'm now importing it explicitly from the converter module.",2,1,[]
1250,169003748,2340,19542768,2018-02-14 01:48:36,2018-02-14 13:22:33,closed,Add flake8 checking on travis,"Adds this line to the travis.yml:

    flake8 --ignore=E,W,F999,F405 holoviews tests

Also fixes all current flake issues, fixing two undefined variable bugs in the process. In another PR we should clean up the install and consider moving some of the code out into scripts so we can clean up a bit and start using separate build stages for linting, tests and eventually package building.",3,4,['tag: component: testing']
1251,168884825,2338,19542768,2018-02-13 16:02:32,2018-02-20 12:51:18,closed,Deprioritized array interface,"Finally implements https://github.com/ioam/holoviews/issues/1236, this is long overdue since the ArrayInterface mostly just causes troubles due to mixed types. With this change you should only ever end up with an ArrayInterface when you pass in an ``NxM`` array explicitly.",6,6,['tag: component: data']
1252,168662698,2337,19542768,2018-02-12 19:08:33,2018-02-18 17:09:42,closed,Hotfix v1.9.4,"Unfortunately a regression in the regrid operation was introduced in the hotfix 1.9.3 branch. This PR represents the fixes for that branch, and should not be merged.

Other PRs that would be good to get into this release are:

* https://github.com/ioam/holoviews/pull/2336
* https://github.com/ioam/holoviews/pull/2329

The latter would be good to ensure that we are actually testing against the latest versions of different libraries, which is what caused the ``regrid`` bug to slip through.",8,11,[]
1253,168659201,2336,19542768,2018-02-12 18:52:04,2018-02-13 19:43:35,closed,Fixed bug in bokeh TablePlot not escaping dimensions correctly,"The dimension names were not escaped on bokeh's TablePlot, resulting in no data being displayed when plotting Table containing columns with spaces or special characters in them.",2,2,"['type: bug', 'tag: backend: bokeh']"
1254,168605614,2335,19542768,2018-02-12 15:17:16,2018-02-13 20:05:29,closed,Fixed bug handling dask dataframe indexes,"Fixed bug handling dask dataframe types, since unlike pandas DataFrames their index does not have a ``names`` attribute in recent versions of dask.

I may also bump the dask version in this PR because this bug slipped by because we are currently only testing against dask=0.13.0.",1,1,"['type: bug', 'tag: component: data']"
1255,168464891,2334,19542768,2018-02-11 17:49:49,2018-02-11 19:21:21,closed,Pass operation to Operation hooks,Recently we added hooks to operations which could do some pre- and post-processing on the data. The current implementation only passes the unprocessed and processed objects to the pre- and post-hook respectively when it would be more general if it also passed in the operation. This can be useful e.g. to apply pre-processing the operation parameters. The specific use-case I have in mind is ensuring that GeoViews returns RangeXY stream bounds in the correct coordinate system.,2,1,['tag: API']
1256,168414289,2332,19542768,2018-02-10 18:29:40,2018-03-28 13:32:11,closed,Improved Dimension validation and error messages,Improves a number of error messages listed in: https://github.com/ioam/holoviews/issues/2101 and implements https://github.com/ioam/holoviews/issues/2315.,2,6,['tag: API']
1257,168412879,2331,19542768,2018-02-10 17:58:28,2018-02-26 22:44:46,closed,Ensured Tree types do not create lowercase node on attribute access,"As discussed in https://github.com/ioam/holoviews/issues/1182, Tree based objects (e.g. Overlay and Layout) should not insert new lower-case nodes when the attribute is lower case.",9,3,['type: bug']
1258,168412355,2330,19542768,2018-02-10 17:48:51,2018-02-19 22:57:59,closed,Add Element.__contains__ method,"As discussed in https://github.com/ioam/holoviews/issues/540 this PR adds a ``__contains__`` method to Element types. This is consistent with the way xarray and pandas handle the ``__contains__`` method, and makes the common task of checking whether an element contains a particular dimension easier.

- [x] Implements https://github.com/ioam/holoviews/issues/540
- [x] Add tests",6,4,"['type: feature', 'tag: API']"
1259,168406938,2329,19542768,2018-02-10 15:41:07,2018-02-13 19:40:20,closed,Bumped Travis testing dependencies to latest versions,Bumps the matplotlib version on Travis to 2.1.2 (i.e. latest). This is long overdue and **hopefully** will finally make the transient test failures disappear. Will require rebuilding test data of course.,6,15,['tag: component: testing']
1260,168401191,2328,19542768,2018-02-10 13:07:42,2018-04-08 03:15:54,closed,Add Sankey Element,"As requested in #1123 this PR implements a Sankey element based on the implementation in d3-sankey. The code consists of three components, which are very similar to the Chord element:

* The Sankey element type based on Graph
* An Operation which is called by the Sankey constructor which lays out the nodes of diagram and computes an abstract graph representation
* The plotting classes

```python
%%opts Sankey [label_position='left' show_values=False]
edges = pd.read_csv('energy.csv')
Sankey(edges).redim(value='TWh')
```

<img width=""925"" alt=""screen shot 2018-02-10 at 1 03 59 pm"" src=""https://user-images.githubusercontent.com/1550771/36062369-1642fc5e-0e63-11e8-9c71-04fe20272943.png"">

The plots looks pretty much identical across backends. Here is what a simpler example looks like:

```python
%%output backend='matplotlib' fig='svg'
Sankey([
         ('Wage', 'Pension', 200),
         ('Wage', 'Social Security', 200),
         ('Wage', 'Net Income', 3500),
         ('Net Income', 'Rent', 1000),
         ('Net Income', 'Utilities', 200),
         ('Utilities', 'Electricity', 39),
         ('Utilities', 'Internet', 50),
         ('Utilities', 'Gas', 89),
         ('Net Income', 'Investment', 500),
         ('Wage', 'Tax', 1000),
         ('Net Income', 'Leisure', 300),
         ('Net Income', 'Food', 400),
         ('Leisure', 'Cinema', 20),
         ('Leisure', 'Drinks', 50)])
```

![image](https://user-images.githubusercontent.com/1550771/36062378-4598376c-0e63-11e8-9949-385aa69ee251.png)

Suggestions for reference examples welcome.

- [x] Add tests
- [x] Add reference gallery examples
- [x] Add gallery demos
",4,20,"['type: feature', 'tag: component: plotting']"
1261,168327693,2327,19542768,2018-02-09 19:51:22,2018-02-11 21:49:56,closed,Hotfix 1.9.3,,3,45,[]
1262,168025763,2321,19542768,2018-02-08 16:44:36,2018-02-08 17:49:41,closed,Ensure CDSStream.data is initialized correctly,Fixes https://github.com/ioam/holoviews/issues/2320,2,1,['tag: component: plotting']
1263,167670345,2316,19542768,2018-02-07 11:45:13,2018-02-09 12:54:26,closed,Added an example in the user guide on using operations on 2d elements.,"This is in response to issue #1108. Even though the documentation has improved massively since I first started using Holoviews, I was having some trouble applying operations to Images recently, so I thought it might be nice to have an example of this in the documentation. I also think it's neat to show the ability to apply an operation to a container in this section, which is an amazing and convenient feature, imo. Just let me know what you think.",6,3,['tag: docs']
1264,167514030,2314,19542768,2018-02-06 19:55:38,2018-02-08 22:03:27,closed,Optimize VectorField min distance calculation,"Makes multiple improvements:

- Minimum distance only computed when required
- Matplotlib now consistent with bokeh (distances rescaled per frame)
- Attempts to use scipy's pdist functionality first, then falls back to own implementation (15x speedup)
- Slightly optimized existing minimum distance calculation (3x speedup)
- Filter annoying/useless warnings

- [x] Addresses https://github.com/ioam/holoviews/issues/2313",2,3,['tag: component: plotting']
1265,167390773,2312,19542768,2018-02-06 11:41:53,2018-02-06 12:34:52,closed,Fix/ignore matplotlibrc,"Overwrite the matplotlibrc setting `image.origin : lower` for RasterPlot and its children
Remove orphaned ImagePlot",1,2,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
1266,167224875,2307,19542768,2018-02-05 18:51:00,2018-02-05 20:55:53,closed,Allowed custom sampling tolerance,"The tolerance for all types is now consistent with datetimes, you can now specify a global tolerance value using ``hv.config`` and tolerance values per ``Image`` by specifying ``rtol`` in the constructor.

TODO:

- [x] Add unit tests.
- [x] Add docs.",4,9,[]
1267,167189776,2306,19542768,2018-02-05 16:24:01,2018-02-20 01:19:39,closed,Added .options method for simplified option setting,"Adds a .options method to all objects making it simpler to set options in a flattened way. Two formats are supported:

```python
img.options(width=600, cmap='viridis')
```

and the more explicit:

```python
img.options({'Image': dict(width=600, cmap='viridis')})
```

which allows usage on complex nested objects.

- [x] Addresses https://github.com/ioam/holoviews/issues/222, https://github.com/ioam/holoviews/issues/803, https://github.com/ioam/holoviews/issues/2287
- [x] Add unit tests
- [x] Add docstrings
- [x] Add section in getting started and user guides
- [x] Move logic into separate utility
- [x] Add DynamicMap.options",12,14,"['type: feature', 'tag: component: options']"
1268,167160196,2305,19542768,2018-02-05 14:36:44,2018-03-07 17:58:39,closed,Added support for dask arrays in GridInterface,As requested in https://github.com/ioam/holoviews/issues/2176 this PR adds support for using dask arrays with the gridded interface. This turned out to be completely trivial (as you can see most of the new code is tests)  and let users use dask arrays without relying on the heavier xarray dependency. @jakirkham Would you mind testing this and seeing whether it addresses your requirements?,13,1,"['type: feature', 'tag: component: data']"
1269,167142880,2304,19542768,2018-02-05 13:24:07,2018-02-06 18:36:28,closed,Raise non-gridded data errors on raster types,"As outlined in https://github.com/ioam/holoviews/issues/1745, trying to use the .to method to display columnar data as gridded currently throws an obscure error. This PR ensures a more informative error is raised. ",2,1,['tag: component: data']
1270,166977724,2300,19542768,2018-02-03 19:57:12,2018-02-05 12:23:10,closed,Fixed bug computing cartesian product of keys,The ``cartesian_product`` implementation it was using is not safe for all types since it uses NumPy so I replaced it with itertools.product. Fixes a bug when using booleans as keys.,4,1,"['type: bug', 'tag: component: plotting']"
1271,166913715,2296,19542768,2018-02-02 22:01:47,2018-02-04 17:02:22,closed,Support Datashader spread operation,"HoloViews has long supported Datashader's ``dynspread`` operation, but not the simpler fixed ``spread`` version.  Made a new abstract class with code and parameters common to both, and added new ``spread`` operation.",2,1,['type: feature']
1272,166711903,2295,19542768,2018-02-02 03:46:25,2018-02-05 13:17:15,closed,Fixed bug computing categorical datashader aggregates,"Recently I added some validation to xarray Datasets that disallows coords (kdims) and data variables (vdims) with the same name, which was apparently being used by the datashader ``aggregate`` operation for categorical aggregates. This handles them correctly.

- [x] Add tests for categorical aggregates",5,6,['type: bug']
1273,166527586,2293,19542768,2018-02-01 12:46:32,2018-09-13 22:45:17,closed,Added option for dimension range padding,"Adds support for dimension range padding as suggested in https://github.com/ioam/holoviews/issues/1090. Was reasonably straightforward, for backward compatibility no padding is added by default. Logic for computing padding on Overlays not yet quite correct.

All changes should for now be backward compatible and tests should pass.",37,48,"['type: feature', 'tag: component: plotting']"
1274,166424739,2292,19542768,2018-02-01 01:55:20,,open,Make Raster a Dataset type,This is my initial attempt at making Raster a Dataset type. So far all I've done is make it a Dataset subclass and delete all the custom method implementations and surprisingly not that much broke. Will have to see how much more is required to get this working.,1,8,['tag: component: data']
1275,166360694,2290,19542768,2018-01-31 19:58:04,2018-02-05 12:30:39,closed,Allow sharing of PolyEditTool across multiple streams,"The PolyEditTool can edit multiple renderers at once, so this exposes an option to share the tool across multiple PolyEdit streams. Also since we're not using parameters for Stream settings I've added docstrings to describe the options.

- [x] Add tests
- [x] Update PolyEdit reference notebook",9,3,"['type: feature', 'tag: backend: bokeh']"
1276,166351339,2289,19542768,2018-01-31 19:17:51,2018-02-01 13:17:41,closed,Added options for toolbars on Layout and Grid plots,"Adds options to disable merging of toolbars and setting the toolbar position on bokeh's LayoutPlot and GridPlot.

* Addresses https://github.com/ioam/holoviews/issues/1977",2,1,"['type: feature', 'tag: backend: bokeh']"
1277,166248894,2288,19542768,2018-01-31 12:40:55,2018-01-31 17:40:04,closed,Small bokeh plot fixes,"Fixes two bugs in bokeh plots:

1. Introduced recently when improving TablePlot erroneously assuming the data is non-empty.
2. Batched plots are ending up with the wrong colors due to static source optimization. Disabled for the time being, correctness more important than speed.",2,3,"['type: bug', 'tag: backend: bokeh']"
1278,166132221,2286,19542768,2018-01-31 00:03:39,2018-06-22 15:14:14,closed,Implemented dynamic split_overlays,"This PR ensures that ``DynamicMap.split_overlays`` does something that at least makes sense and matches what the plotting code is already doing internally. None of the logic here is new so I'm pretty confident about the change. 

- [x] Fixes https://github.com/ioam/holoviews/issues/2782
- [x] Fixes https://github.com/ioam/holoviews/issues/2284
- [x] Implements  https://github.com/ioam/holoviews/issues/2254",9,8,[]
1279,166115033,2285,19542768,2018-01-30 22:26:58,2018-01-31 18:26:30,closed,Fixed bokeh SideHistogram with (non)inverted axis,"When plotting an adjoint histogram in bokeh the dynamic color range functionality was not set up to handle an adjoint plot at the top.

<img width=""323"" alt=""screen shot 2018-01-30 at 10 27 32 pm"" src=""https://user-images.githubusercontent.com/1550771/35594915-caf99702-060c-11e8-837c-582d73729cbf.png"">
",4,1,"['type: bug', 'tag: backend: bokeh']"
1280,166036614,2283,19542768,2018-01-30 16:50:15,2018-01-30 17:47:09,closed,Setting the theme to None now disables theming,"Simple PR that completes the theming support by allowing you to disable theming by setting ``theme`` on the renderer to ``None``.

I suppose I'll add mention of this in the user guide.",2,3,[]
1281,165700991,2281,19542768,2018-01-29 13:14:44,2018-02-05 18:52:28,closed,Handled transposed xarray shapes correctly,"The XArray interface shape method was not taking into account data that was transposed relative to the key dimensions of the element resulting in wrong densities and causing further issues with selecting on the resulting object.

- [x] Fixes https://github.com/ioam/holoviews/issues/2258",9,2,"['type: bug', 'tag: component: data']"
1282,165592429,2278,19542768,2018-01-28 22:53:17,2018-01-29 17:59:05,closed,Use nanosecond resolution for datashader sampling,"Datashader operations sometimes have issues with regular sampling. This is because ``Image`` types (or rather SheetCoordinateSystems) only handle microsecond resolution, however the issue can be avoided by having the datashader operation to use nanosecond resolution internally and converting back to microseconds before constructing the Image.

Also ended up having to define a lower sampling tolerance again because SheetCoordinateSystem only handles microsecond resolution.

- [x] Fixes https://github.com/ioam/holoviews/issues/2276 and ioam/holoviews#2280",3,4,['type: bug']
1283,165540784,2275,19542768,2018-01-27 22:48:53,2018-01-28 13:25:10,closed,Fix to allow use of Empty in AdjointLayouts,Simple fix to address #2274.,1,1,[]
1284,165180386,2273,19542768,2018-01-25 17:26:57,2018-01-26 13:31:21,closed,Fixed bogus overlay warnings in bokeh OverlayPlot,"In #2253 I ensured that OverlayPlot does not rerender its subplots unless necessary. Since there is a check to ensure that all elements in the overlay were plotted correctly this causes bogus warnings to appear, this change ensures that it correctly detects that the subplots were indeed processed.",2,1,"['type: bug', 'tag: backend: bokeh']"
1285,165179727,2272,19542768,2018-01-25 17:24:06,2018-01-27 16:44:47,closed,Fix bokeh SideHistogram colormapper CustomJS,"The API for triggering change events in Bokeh clientside has changed. This updates it to use the new API, since we've pinned bokeh to recent versions this is safe and has no backward compatibility implications.",4,1,"['type: bug', 'tag: backend: bokeh']"
1286,165135329,2271,19542768,2018-01-25 14:39:42,2018-01-26 17:23:31,closed,Fix bug in bokeh server setup when using RangeXY stream,"Starting a bokeh server app would fail if a RangeXY stream was attached to a subplot triggering changes to the ranges before the plot was even fully set up. In a scenario like this it would trigger change events during the plot instantiation and before the Document was set, causing errors.

This PR ensures callback events aren't processed until the plot is fully set up and adds some initial bokeh server unit tests.",3,5,"['type: bug', 'tag: backend: bokeh']"
1287,164916113,2270,19542768,2018-01-24 17:39:26,2018-01-28 12:43:41,closed,Set bgcolor default to None,"This is a tiny change which I think is an improvement:

1. This allows bokeh themes to change the background color instead of always setting it to white.
2. The default background color without theming is white anyway, so it should not affect anything that isn't themed.

I think the same logic applies to matplotlib but a quick rgrep suggests it is more complicated:

![image](https://user-images.githubusercontent.com/890576/35347594-7cf4d762-012d-11e8-9fbf-05d20611369c.png)
",2,1,[]
1288,164586127,2268,19542768,2018-01-23 14:11:59,2018-01-31 14:01:25,closed,Added draw streams for new bokeh drawing tools,"Adds drawing streams which are linked to the new bokeh edit tools (introduced in https://github.com/bokeh/bokeh/pull/7415). The tools+stream allow drawing boxes, points and polygons/paths on a plot as well as editing the vertices of existing paths and polygons. Whenever the tool edits the bokeh data sources the results are synced back to Python letting you access the data that has been edited/drawn.

- [x] Add tests
- [x] Add reference examples for each stream
- [x] Add gallery examples",22,14,"['type: feature', 'tag: backend: bokeh']"
1289,164478238,2267,19542768,2018-01-23 04:02:41,2018-01-26 13:35:27,closed,Datetime improvements,"This PR has several related purposes:

* datetime.datetime handled better throughout
* datetime.date handled (addressing https://github.com/ioam/holoviews/issues/2100)
* Use client-side formatters on bokeh tables to allow data to be shared between plots",3,4,"['type: feature', 'tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting', 'tag: component: data']"
1290,164189061,2266,19542768,2018-01-21 18:56:46,2018-01-21 22:50:03,closed,Updated Deploying_Bokeh_Apps user guide,"Fixes two bugs in the bokeh apps documentation, ``_figure_data`` is now private (for consistency) and bokeh's ``Server`` no longer requires/accepts an explicit ioloop. The API around ``_figure_data`` still needs to be improved but ``BokehRenderer.figure_data`` no longer exists so at least things will work now.",2,2,['tag: docs']
1291,164140478,2265,19542768,2018-01-20 18:55:40,2018-01-26 18:04:55,closed,Mesh improvements,"Improvements for handling QuadMesh and TriMesh. Both @jbednar and I have been writing up documentation on dealing with meshes of different kinds and in doing so both of us hit some things that make it awkward to work with TriMeshes in particular at the moment. In particular in order to pass in a set of vertices with associated values you previously would have to construct a set of Nodes or Points yourself and pass those into the ``TriMesh`` constructor. With this change you can now pass in a pandas DataFrame of vertices and it will correctly infer the value dimension.

Secondly this PR refactors the regrid operation in such a way that a bunch of the code can be reused by regridding operations in other packages (specifically xESMF based regridding in GeoViews).

Finally this PR changes the way bokeh QuadMesh plots are created avoiding binary serialization. Sending a bunch of small array chunks seems to confuse bokeh and cause errors and actually adds more overhead than simply sending the data without binary transfer.",5,4,"['tag: API', 'status: ready', 'tag: component: data']"
1292,162848537,2259,19542768,2018-01-14 23:16:15,2018-02-05 12:11:52,closed,Fixed categorical coloring of Contours in matplotlib,"As the title says, Contours/Polygons in matplotlib did not handle categorical values for the ``color_index``.",6,2,"['type: bug', 'tag: backend: mpl']"
1293,162540997,2257,19542768,2018-01-12 03:30:42,2018-01-15 16:26:04,closed,Using Pylint to lint the code base against Python best practices or P…,"…EP8.

https://www.pylint.org/

For consistency, always use """"""triple double quotes"""""" around docstrings.
Surround top-level function and class definitions with two blank lines.
Method definitions inside a class are surrounded by a single blank line.
Always surround these binary operators with a single space on either side: assignment (=), augmented assignment (+=, -= etc.), comparisons (==, <, >, !=, <>, <=, >=, in, not in, is, is not), Booleans (and, or, not).
Don't use spaces around the = sign when used to indicate a keyword argument or a default parameter value.

https://www.python.org/dev/peps/pep-0008/#blank-lines
https://www.python.org/dev/peps/pep-0008/#whitespace-in-expressions-and-statements
https://www.python.org/dev/peps/pep-0257/",10,2,[]
1294,162443012,2256,19542768,2018-01-11 17:38:06,2018-01-11 19:22:30,closed,Miscellaneous stream fixes,"Includes three small fixes:

* AreaPlot no longer allows streaming data (because the glyph type doesn't allow it)
* TablePlot initializes stream callbacks
* When a data source is shared across multiple plots callbacks are reinitialized",6,3,"['type: bug', 'tag: backend: bokeh']"
1295,162208405,2253,19542768,2018-01-10 19:22:49,2018-01-11 16:24:48,closed,Avoid rerendering of overlaid DynamicMaps with non-triggered streams,"This PR addresses a very hairy issue that's probably responsible for a fair number of bugs. I'll first outline the issue and then describe the solution I've come up with. This PR will require some very thorough testing since it messes with some very central code.

The main issue is that when a DynamicMap returns an Overlay it is not immediately clear whether the constituent parts of that Overlay were each supplied by another DynamicMap or whether the user defined callback directly returns an Overlay. Secondly it is worth knowing that when a DynamicMap that returns Overlays has streams on it, the streams will trigger updates on the whole OverlayPlot rather than the specific ElementPlot it might have been originally attached to (for important reasons I won't get into). This means that all the items in the Overlay will get re-rendered even if they shouldn't be. This rerendering on it's own can have implications when there are complex stream dependencies between different elements, e.g. when two layers are linked bi-directionally. In the worst case this will result in loops, while in the best case it will break the rendering of the plot.

The secondary issue is that each subplot of the OverlayPlot is given a DynamicMap that does not necessarily correspond to the thing it's actually rendering. This in turn can cause validation issues if that DynamicMap is actually called (which it ideally shouldn't be) because the thing it's returning may not match what has been put in its cache. This is because ``DynamicMap`` does not have its own ``split_overlays`` method implementation and simply uses the ``HoloMap.split_overlays`` method which is technically incorrect (but does sort of work in most scenarios).

The aim then should be for the OverlayPlot to only trigger rendering of the specific Elements that should actually be redrawn. However due to the way the OverlayPlot tries to split up the overlaid DynamicMap it actually has no idea which component triggered the update. The appropriate solution therefore is for the ``split_overlays`` method on DynamicMap to correctly split up the DynamicMap into the original DynamicMaps that the user composed using the ``*`` operator.

This should result in more optimized updates and fix a number of annoying bugs.

Related to https://github.com/ioam/holoviews/issues/493 and https://github.com/ioam/holoviews/pull/2174",10,1,['type: bug']
1296,161934749,2252,19542768,2018-01-09 17:44:32,2018-01-09 22:07:10,closed,Ensure linked streams are resolved on HoloMap and Table objects,"There was a bug in the code that caused non-static and non-dynamic plots not to correctly resolve streams registered on an Element or HoloMap, this PR ensures that this is now resolved correctly. Additionally it adds support for resolving linked streams on bokeh's TablePlot which was previously not possible (because it was not implemented).",5,3,"['type: bug', 'tag: backend: bokeh']"
1297,161528156,2249,19542768,2018-01-07 16:17:11,2018-01-08 00:43:39,closed,Add scroll_to_selection bokeh Table style option,Adds ``scroll_to_selection`` style option for bokeh TablePlot which is often useful when streaming data.,1,1,['tag: backend: bokeh']
1298,161491847,2248,19542768,2018-01-06 19:06:59,2018-01-06 22:37:30,closed,Ensure no information is lost when casting Image and Graph types,"Generally casting between different or the same type is straightforward, however for Image and Graph types copying the ``.data`` and parameters is not sufficient. This PR adds special handling ensuring that Image bounds and densities and Graph/TriMesh nodes and edgepaths are inherited during casting.",3,2,['tag: component: data']
1299,161491306,2247,19542768,2018-01-06 18:53:22,2018-01-06 21:05:46,closed,Added pre and postprocess hooks to Operation,"An implementation of https://github.com/ioam/holoviews/issues/2246 allowing hooks to be registered with operations, e.g. to allow datashader operation to transfer the CRS of GeoViews elements without requiring subclassing of the operation (https://github.com/ioam/geoviews/issues/45).",2,1,['type: feature']
1300,161421937,2245,19542768,2018-01-05 20:34:26,2018-01-08 18:38:55,closed,QuadMesh and irregular xarray data fixes,"Three separate fixes for irregular gridded data and QuadMeshes. 

1) Ensures that xarray data is correctly canonicalized as previously constant dimensions were not appropriately squeezed out by the XArrayInterface.

2) Improved QuadMesh.trimesh method ensuring that key dimensions are inherited

3) Simplifies the matplotlib QuadMeshPlot

4) Add inference for xarray multi-dimensional (irregular) coordinate variables

These are all issues I ran into while implementing https://github.com/ioam/geoviews/pull/116.

- [x] Add unit test for canonicalizing xarray Dataset with constant dimension 
  ",4,11,"['type: bug', 'tag: component: data']"
1301,161386381,2244,19542768,2018-01-05 17:15:49,2018-01-05 18:02:10,closed,Fixed broken error message for aggregate(),"When supplying an incorrect column name to aggregate() or datashade(), the error message is currently:

```
ValueError: Aggregation column %s not found on %s element. Ensure the aggregator references an existing dimension.
```

This PR fixes that to fill in what was presumably intended:

```
ValueError: Aggregation column z not found on :Points   [x,y] element. Ensure the aggregator references an existing dimension.
```",2,1,['type: bug']
1302,161376150,2243,19542768,2018-01-05 16:26:05,2018-01-05 18:25:59,closed,Xarray warnings,"Fixes deprecation warnings raised due to recent changes in xarray. Also changes the unit tests on Travis to be verbose, making it easier to track down warnings.

Fixes: https://github.com/ioam/holoviews/issues/2229",2,2,[]
1303,161357025,2242,19542768,2018-01-05 14:56:21,2018-01-05 17:08:44,closed,Fixed irregular binning validation,"Due to poorly chosen test cases I didn't notice that the validation for irregular array data did not work for arrays that are not of shape ``(N[+1], N[+1], ...)``. This PR fixes this issue and changes the tests so they test for non-square cases.
  
  ",2,1,"['type: bug', 'tag: component: data']"
1304,161179926,2241,19542768,2018-01-04 17:48:19,2018-01-04 23:13:22,closed,added muted_alpha option to Distribution,Allows Distribution and Histogram elements to make use of muted legends when using the bokeh backend (as suggested in https://github.com/ioam/holoviews/issues/2170).,1,2,['tag: backend: bokeh']
1305,161115480,2240,19542768,2018-01-04 12:41:19,2018-01-04 23:38:24,closed,Refactor Graph types for extensibility,Some small amount of refactoring for ``Graph`` code to make it easier for extension libraries to subclass and extend ``Graph`` elements. In particular GeoViews will offer Graph and TriMesh elements and these changes are required to make that work.,6,5,[]
1306,160918957,2239,19542768,2018-01-03 14:13:02,2018-01-03 14:24:28,closed,Fixed bokeh server Callback queue bug,"A previous PR seems to have introduced a bug which clears the event queue before it is processed when using ``on_event`` based stream callbacks such the Tap event.

Fixes: https://github.com/ioam/holoviews/issues/2231
  ",2,1,"['type: bug', 'tag: backend: bokeh']"
1307,160910520,2238,19542768,2018-01-03 13:26:06,2018-01-03 19:15:44,closed,Changed Image regular sampling validation,"As is evident in https://github.com/ioam/holoviews/issues/2228, the new Image sampling validation which relies on machine floating point precision does not work correctly. This PR switches the validation strategy to one that ensures that the maximum difference in the sampling is one billionth (1e9) of the smallest sampling step. This works consistently based on my now more thorough testing and is still a very strict constraint to ensure regular sampling.",4,2,['tag: component: data']
1308,160907029,2237,19542768,2018-01-03 13:05:00,2018-01-03 17:40:48,closed,Fixed drawing of bokeh QuadMesh,"Fixed bug mentioned by @ea42gh in https://github.com/ioam/holoviews/issues/2232.

```python
np.random.seed(123)
x = np.array(sorted(1000*np.random.random(10)))
y = np.linspace(0,9,10)
z = np.random.normal(size=(10,10))
hv.QuadMesh((x, y, z))
```

Old drawing behavior:

<img width=""305"" alt=""screen shot 2018-01-03 at 1 02 44 pm"" src=""https://user-images.githubusercontent.com/1550771/34521593-6da7d4f6-f086-11e7-802a-b98000744cd4.png"">

Fixed drawing behavior:

<img width=""304"" alt=""screen shot 2018-01-03 at 1 02 22 pm"" src=""https://user-images.githubusercontent.com/1550771/34521598-7596198e-f086-11e7-8261-b6b6f78534e7.png"">

For comparison purposes the matplotlib version:

![image](https://user-images.githubusercontent.com/1550771/34521627-9af7e400-f086-11e7-91d8-bc050db58481.png)
",3,2,"['type: bug', 'tag: backend: bokeh']"
1309,160663021,2235,19542768,2018-01-01 22:44:04,2018-01-03 17:23:02,closed,Doc updates jan18,some minor changes to documentation.,6,7,[]
1310,160589334,2233,19542768,2017-12-30 13:23:23,2018-01-02 16:19:48,closed,Fix link to homepage in introduction,,2,1,[]
1311,159945922,2227,19542768,2017-12-22 23:27:44,2017-12-27 21:58:12,closed,"added 'lower_head', 'upper_head' to bokeh ErrorBars plot","exposed 'lower_head', 'upper_head' options for bokeh ErrorBars",2,1,['tag: backend: bokeh']
1312,159656062,2225,19542768,2017-12-21 13:21:53,2018-01-03 14:21:32,closed,Use patch glyph to draw Spread and Area,"In https://github.com/ioam/holoviews/commit/1c93aab342913ea03633475f30fc84063d3979ad I originally switched from patches to Band glyphs to draw Area and Spread elements in bokeh. This has a number of consequences, particularly that legends do not work. This PR now uses the patch glyph to draw these elements which makes legends work again and addresses:

* https://github.com/ioam/holoviews/issues/2163
* https://github.com/ioam/holoviews/issues/2118",2,1,['tag: backend: bokeh']
1313,159653039,2224,19542768,2017-12-21 13:06:06,2018-11-05 19:10:11,closed,Cleaned up top-level namespace,"As suggested in https://github.com/ioam/holoviews/issues/2202 this PR cleans up the top-level namespace, removing the following items:

Element2D, Element3D, Dimensioned, AttrTree, Overlayable, StoreOptions, UniformNdMapping, ViewableElement, Overlayable, CompositeOverlay

",3,2,['tag: API']
1314,159650340,2223,19542768,2017-12-21 12:52:18,2018-03-16 15:39:36,closed,Add Div Element,"As suggested in #2221 this PR adds a Div element wrapping around the bokeh Div model, which opens up all kinds of possibilities for nice demos.

- [x] Add plotting tests
- [x] Add element reference entry",4,5,"['type: feature', 'tag: backend: bokeh']"
1315,159515163,2222,19542768,2017-12-20 20:51:47,,open,Added double_pendulum example,"Adds double_pendulum examples as suggested in: https://github.com/ioam/holoviews/issues/1544

<img width=""493"" alt=""screen shot 2017-12-20 at 8 51 19 pm"" src=""https://user-images.githubusercontent.com/1550771/34228152-95c2da9a-e5c7-11e7-8d04-0b443c44787c.png"">

![pendulum](https://user-images.githubusercontent.com/1550771/34228134-82c6a9e4-e5c7-11e7-90e4-43217c7a5d3e.gif)
",3,1,['tag: docs']
1316,159443624,2220,19542768,2017-12-20 15:23:11,2018-01-03 14:13:37,closed,Notebook improvements,"Various notebook improvements:

- [x] Added list of supported data formats to Tabular Datasets user guide
- [x] Fixed Plotting with Bokeh axis example
- [x] Added section about bokeh interactive legends to Plotting with Bokeh  (as requested in https://github.com/ioam/holoviews/issues/1265)
",3,3,['tag: docs']
1317,159212434,2219,19542768,2017-12-19 16:29:26,2017-12-20 13:16:07,closed,Trisurface renamed to TriSurface,The branch is misnamed after deciding that ``TriMesh`` was not the inconsistent name but ``Trisurface`` was.,8,6,[]
1318,159207517,2218,19542768,2017-12-19 16:11:48,2017-12-20 13:16:53,closed,Fixes for bokeh server widgets,Fixes and unit tests for bokeh server widgets,1,2,"['type: bug', 'tag: backend: bokeh']"
1319,158890380,2214,19542768,2017-12-18 11:31:03,2017-12-18 13:32:13,closed,Add quiet flag when installing iris,Attempt to get rid of recent Travis conda issues as suggested here: https://github.com/conda/conda/issues/6468,2,1,[]
1320,158877409,2213,19542768,2017-12-18 10:27:40,2017-12-18 13:29:58,closed,Fixes and tests for empty TriMesh,Fixes https://github.com/ioam/holoviews/issues/2209 and adds some tests.,1,1,['type: bug']
1321,158812631,2210,19542768,2017-12-18 00:41:07,2018-01-21 22:47:31,closed,Addition of Bokeh theme support to BokehRenderer,"
On current bokeh master, a PR has been merged which (re)enables bokeh themes in the notebook: bokeh/bokeh#7325. Bokeh themes in general is something HoloViews should support for extra control over options that might not be exposed via plot/style options. In addition, we do support style files for matplotlib so it makes sense to support Bokeh themes as the analogous concept.

This PR shows one way this could work (you will need the latest bokeh master for this to work) using a theme file:

![image](https://user-images.githubusercontent.com/890576/34085591-1107b4d0-e38b-11e7-9b24-e9e71087a849.png)

Or using a JSON spec (not a great theme but it gets the point across!):

![image](https://user-images.githubusercontent.com/890576/34085604-36f3a816-e38b-11e7-8c01-726af14727ac.png)

I'm not committed to this API (though it seems ok to me) and I wonder if I should do a bokeh version check? This won't cause any errors/exceptions if you use an earlier bokeh version but the theming won't work either.
",10,5,"['type: feature', 'tag: backend: bokeh']"
1322,158674689,2206,19542768,2017-12-15 19:20:22,2017-12-18 13:57:38,closed,Implement precomputing of datashader input data,"An initial go at https://github.com/ioam/holoviews/issues/2196. It allows datashader operation to precompute results, which can be used by the operation. For now only implemented for TriMesh rasterization but should be straightforward enough to do for other aggregation (although unnecessary for rasters).

I'm still considering how to improve this further. I think memoizing the precomputed results based on the element ID would be sufficient but will continue thinking about it.",4,4,[]
1323,158434254,2201,19542768,2017-12-14 18:48:23,2017-12-15 17:38:18,closed,Add mybinder badge and updated environment.yml,"Note the badge won't work until this is merged but you can try it out here:

https://mybinder.org/v2/gh/ioam/holoviews/mybinder?filepath=examples",3,4,[]
1324,158429343,2200,19542768,2017-12-14 18:24:02,2017-12-14 21:24:56,closed,Fixed bug in bokeh BarPlot colormapping integer values,When using a CategoricalColorMapper integer values need to be transformed. The logic to apply this transformation was incorrect leading to BokehJS errors in certain cases.,1,2,"['type: bug', 'tag: backend: bokeh']"
1325,158428814,2199,19542768,2017-12-14 18:21:27,2017-12-15 13:08:26,closed,Fixed bug validating stats elements in PandasInterface,The PandasInterface was trying to validate the value dimensions which do not exist on stats elements like Distribution and Bivariate causing errors.,3,2,"['type: bug', 'tag: component: data']"
1326,158428558,2198,19542768,2017-12-14 18:20:04,2017-12-19 13:59:47,closed,Small notebook fixes,Minor fixes/improvements to existing notebooks.,7,5,['tag: docs']
1327,158392729,2197,19542768,2017-12-14 15:52:22,2017-12-18 11:56:12,closed,Matplotlib plotting fixes,"In recent versions of pandas the matplotlib unit conversions for pandas datetime types is no longer automatic, this ensures that if pandas is available they are registered with matplotlib. The PR also fixes a bug handling legends in Python 3.",1,2,"['type: bug', 'tag: backend: mpl']"
1328,157683977,2194,19542768,2017-12-11 22:05:22,2017-12-11 22:50:42,closed,Ensure Compositor does not make superfluous copies,A partial workaround/fix for https://github.com/ioam/holoviews/issues/2129. The correct fix will be to ensure that a Compositor transfers the ID a stream is registered to when it is applied but since we do not ship any actual Overlay compositors by default this fix should be sufficient for 1.9.2.,3,1,"['type: bug', 'tag: backend: bokeh']"
1329,157670199,2193,19542768,2017-12-11 20:59:24,2017-12-11 22:54:30,closed,Added CHANGELOG entry for 1.9.2,,2,3,[]
1330,157639035,2190,19542768,2017-12-11 18:32:35,2017-12-11 20:19:35,closed,Allow empty Distribution and Bivariate elements,Empty Distribution and Bivariate elements weren't handled correctly.,4,3,['type: bug']
1331,157570633,2189,19542768,2017-12-11 14:03:54,2017-12-11 20:15:37,closed,Added support for date types on Pointer derived streams,"This was already handled at the bokeh callback level but parameter validation meant that datetime types were not allowed on Pointer derived streams. This ensures that Pointer derived streams all consistently support the various types that might be returned by a bokeh callback.

Addresses https://github.com/ioam/holoviews/issues/2124.",1,1,"['type: bug', 'tag: backend: bokeh']"
1332,157568881,2188,19542768,2017-12-11 13:56:44,2017-12-11 20:13:31,closed,Fixed integer indexing on Layout,Fixed python3 bug in Layout integer indexing https://github.com/ioam/holoviews/issues/2134.,1,1,['type: bug']
1333,157566935,2187,19542768,2017-12-11 13:48:12,2017-12-11 20:27:10,closed,Box whisker improvements,Improved BoxWhisker element docstrings as requested in https://github.com/ioam/holoviews/issues/1838 and fixed hover issues as requested in https://github.com/ioam/holoviews/issues/2142.,2,2,[]
1334,157557374,2186,19542768,2017-12-11 13:04:10,2017-12-11 20:20:48,closed,Improved error message for DataArray without name,Improves error message when a DataArray without a name is supplied and the default value dimension name clashes with a coordinate. Addresses https://github.com/ioam/holoviews/issues/2147.,1,1,"['tag: API', 'tag: component: data']"
1335,157351136,2185,19542768,2017-12-08 22:53:53,2019-07-26 08:22:55,closed,Issue template,Please edit! This is just to get it started...,14,3,[]
1336,157289684,2181,19542768,2017-12-08 17:05:47,2017-12-08 18:55:03,closed,Fixed bug when using mpl cmap instance,In a previous PR I introduced a small regression in colormap handling which resulted in matplotlib colormap instances not being handled anymore. The PR fixes the issue and adds a test to avoid future regression.,1,1,"['type: bug', 'tag: component: plotting']"
1337,157253712,2179,19542768,2017-12-08 14:23:04,2017-12-13 11:01:40,closed,Element comparison: allow alternative functions (and arguments) for 'assert approx equal'.,"If the idea is ok, I can clean up and add info into the docstring.",3,1,[]
1338,156288033,2174,19542768,2017-12-04 19:43:27,2018-03-29 15:47:56,closed,Allow dynamically adding new subplots,"This PR allows OverlayPlots to dynamically add new subplots when a DynamicMap returns more elements than were present on initialization. So far this is very much WIP and requires thorough testing. It does seem to work based on initial testing and should be a huge generalization of DynamicMaps.

Addresses: https://github.com/ioam/holoviews/issues/2097, https://github.com/ioam/holoviews/issues/1388, https://github.com/ioam/holoviews/issues/493",26,7,"['type: feature', 'tag: component: plotting']"
1339,156061675,2172,19542768,2017-12-03 13:58:26,2017-12-04 17:34:45,closed,Fixed bug in bokeh ArrowPlot,"Fixes bug plotting Arrow elements in bokeh, which can be seen here: http://holoviews.org/gallery/demos/bokeh/dropdown_economic.html",2,1,"['type: bug', 'tag: backend: bokeh']"
1340,156061325,2171,19542768,2017-12-03 13:49:52,2019-01-12 14:00:25,closed,Provide control over bokeh aspect,"This PR adds support for exposing the ``match_aspect`` option in bokeh as requested in https://github.com/ioam/holoviews/issues/1953. While it isn't ideal it provides at least some control over the screen vs. data space aspect. The main problem being that it doesn't work when explicitly set ranges are used, so for now it simply skips setting the holoviews computed ranges and relies on bokeh's data range calculations. This is mostly useful for plots like this https://github.com/ioam/holoviews/pull/2155, which require a fixed screen vs. data range aspect ratio.",2,1,"['type: feature', 'tag: backend: bokeh']"
1341,156024795,2169,19542768,2017-12-02 18:23:15,2017-12-02 19:34:26,closed,Allow defining CompositeElementPlot glyph order,"Previously the glyph ordering was not applied correctly, which is causing issues in https://github.com/ioam/holoviews/pull/2155. I've now fixed that and moved the ordering out to a separate function with a doctest.",2,1,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1342,155911639,2167,19542768,2017-12-01 17:08:37,2017-12-02 00:55:18,closed,Removed stray mentions of lancet,"Lancet was an optional dependency for pip, but became a required dependency for conda when the conda-forge recipe was created.  For clarity, especially while lancet is only available for some platforms, make sure that it's not included in anything but documentation.",3,1,[]
1343,155890122,2166,19542768,2017-12-01 15:37:06,2017-12-03 22:30:09,closed,WIP: js fixups,,6,1,[]
1344,155775998,2164,19542768,2017-12-01 03:36:09,2018-02-05 12:14:44,closed,Handling pandas Series and single column DataFrames,"This PR adds support for handling pandas and dask ``Series`` and single column ``DataFrame``s by resetting their index, turning it into a dimension. It should not have any backwards compatibility issues, except that constructing a ``Dataset`` from a single column ``DataFrame`` will now use the index and make it a dimension, while previously it would have just had the single column as a dimension. In all other cases it would have previously errored.",11,2,"['type: feature', 'tag: component: data']"
1345,155204076,2160,19542768,2017-11-28 22:47:15,2017-12-22 12:04:03,closed,GridInterface bin support for Histogram and QuadMesh,"This PR adds support for binned coordinates to the GridInterface addressing https://github.com/ioam/holoviews/issues/547. This is one of the final conversions of Elements to a Dataset type.

- [x] Get unit tests passing
- [x] Add ``__setstate__`` for pickle compatibility
- [x] Move Histogram and QuadMesh tests into testbinneddataset.py or similar
- [x] Add examples of irregular meshes to reference documentation and gallery

Several nice to haves, which don't necessarily have to hold up merging this PR:

- [x] Support for xarray Datasets
- [x] Support for irregular meshes (i.e. 2D array coordinates)

I've now managed to also support irregular meshes, which are a commonly requested feature particularly for GeoViews. Support for datashading quadmeshes will come in a later PR (probably after TriMesh is merged). Here are some irregular meshes:

<img src=""https://user-images.githubusercontent.com/1550771/33405534-b376f4d0-d560-11e7-82db-e8668d681058.png"" width=300></img>

<img src=""https://user-images.githubusercontent.com/1550771/33405551-c81b122c-d560-11e7-8546-8c90b61ba0ea.png""  width=300></img>

And all the usual machinery also works to explore high-dimensional datasets, e.g. here is an example of a multi-dimensional irregularly gridded dataset (requested in https://github.com/ioam/geoviews/issues/57 and https://github.com/ioam/geoviews/issues/73).

```python
lon, lat = np.meshgrid(np.linspace(-20, 20, 5), np.linspace(0, 30, 4))
lon += lat/10
lat += lon/10

da = xr.DataArray(np.arange(40).reshape(2, 4, 5), dims=['z', 'y', 'x'],
                  coords = {'lat': (('y', 'x'), lat),
                            'lon': (('y', 'x'), lon),
                            'z': [0, 1]}, name='A')

ds = hv.Dataset(da, ['lat', 'lon', 'z'])
ds.to(hv.QuadMesh, groupby=['z'])
```",12,25,[]
1346,155175404,2159,19542768,2017-11-28 20:29:57,2017-11-30 20:59:27,closed,Handle ToolbarBox size for bokeh 0.12.11 compatibility,Small change required for compatibility with bokeh 0.12.11.,1,1,['tag: backend: bokeh']
1347,154909026,2157,19542768,2017-11-27 20:29:49,2017-11-27 21:16:35,closed,Fixed shared_axis bug when plotting GridMatrix with Histogram,This code was leftover from when Histogram's all had the same y-axis label and it was more convenient to ensure they were not linked when in GridMatrix. Fixes https://github.com/ioam/holoviews/issues/2131,2,1,"['type: bug', 'tag: backend: bokeh']"
1348,154702733,2155,19542768,2017-11-26 23:14:09,2018-03-19 16:52:05,closed,Feature radial heatmap,"This PR is not meant to be finished but is rather a work in progress for discussion purposes.

I implemented a first version of a radial heatmap which still has several limitations:

### Issues

- **Plotting order**: In order to enhance readability, one can define separation lines to distinguish groups of annular wedges more clearly via plot option `separate_nth_segment`. However, sometimes they show up, sometimes they don't. I guess this is due to the z-order in which glyphs are plotted. I added the `_draw_order` class attribute without any effect.

- **Match aspect**: Coordinates of annular wedges, lines and text do not result in corresponding alignments (same coordinates differ in visual field). This is a known issue in bokeh, see here [#7218](https://github.com/bokeh/bokeh/issues/7218). One workaround I've found is to completely remove any range and axis definition from a bokeh figure and set `match_aspect` to `True` in order to get the correct aspect ratio (however one has to overwrite many inherited methods...). Another way is to manually adjust the width and height to match the aspect ratio but this depends on toolbar location, colobar and other elements and hence is not really meaningful. Therefore, I guess we have to wait until a bokeh site of fix.

- **Colobar does not show up** if selected

- **Input key dimension differ to output dimension**: The key dimensions of the input data are categorical. However, the plot is based on numerical values a in interval scaled coordinate system. As far as I can understand the class design, holoviews expects input key dimension to map on the actual x and y ranges. I've thought about creating a custom `holoviews.Operation` to convert the categorical input into numerical radii and radiants just like `histogram`.

### Still missing:

- **Add labels for second key dimension**: At the moment, labels are only available for the first key dimension.

### Open question:

- **Separate** `RadialHeatMap` **class**: As discussed in #2139, I decided to create its own element class representation instead of using the `HeatMap` element class because the radial heatmaps also require custom layout options which are very different from the rectular heatmap requirements. WIthout the extra class, I wasn't able to set the visualization defaults in the *bokeh/__init__.py* properly.

Overall, the plain example works in *examples/gallery/demos/bokeh/radial_heatmap.ipynb*.

I'm very happy for every feedback.",42,38,['type: feature']
1349,154657171,2152,19542768,2017-11-25 23:33:59,2018-11-22 05:14:12,closed,Add support for dim transforms to set style options,"As discussed in https://github.com/ioam/holoviews/issues/768 this PR adds support for scaling various style options by values in the element. It adds an ``op`` object which allows defining deferred transforms on an element dimension implementing the standard mathematical operations and common NumPy operations.

You can see what is currently supported [here](https://anaconda.org/philippjfr/op_transforms/notebook).

As we had discussed in the issue we will also support tuple and string syntax so you only have to define an ``op`` to define complex transforms more easily.

Here are some example:

```python
scatter = hv.Scatter(np.arange(11))
o = (op('y')-op('y').min())/op('y').max()
print(o)
o.eval(scatter)
```

    truediv(sub('y', amin('y')), amax('y'))
    array([ 0. ,  0.1,  0.2,  0.3,  0.4,  0.5,  0.6,  0.7,  0.8,  0.9,  1. ])

```python
%%opts Points (alpha=op('z') size=np.log1p(op('z'))*20)
hv.Points(np.random.rand(100, 3), vdims=['z'])
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/33235814-06a0a190-d239-11e7-9986-c1d9128f3dca.png)

```python
%%opts Curve [show_legend=False width=500] (line_width=10*op('y').mean())
hv.NdOverlay({i: hv.Curve(np.random.rand(10)) for i in range(5)})
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/33235820-17acc9be-d239-11e7-8685-8e561e6d8ac5.png)
",13,117,"['type: feature', 'tag: component: plotting']"
1350,154558071,2149,19542768,2017-11-24 14:20:11,2017-11-24 14:43:34,closed,Fixes for updating Graph colors,"Another PR laying groundwork for #2138 and #2143, in this case fixing some issues handling updates to Graph colors.",2,1,['tag: component: plotting']
1351,154548739,2148,19542768,2017-11-24 13:31:59,2017-11-24 13:58:05,closed,Refactored and improved CompositeElementPlot,Small amount of plotting code refactoring to work with CompositeElementPlots more easily and ensuring that the glyph mapping takes precedences over simple style properties.,1,1,['tag: component: plotting']
1352,154410254,2145,19542768,2017-11-23 16:00:02,2017-11-23 19:41:58,closed,Improved Graph element,"Since I started writing the Chord (#2138) and TriMesh (#2143) elements, it's become clear that the Graph element is quite useful as a baseclass for other elements. However currently it isn't as solid, optimized and tested as I'd like it to be, so rather than mixing up a bunch of changes into the ``Chord`` and ``TriMesh`` PRs I've decided to first build on ``Graph``, ensuring that it is well tested and solid at it's core.

This will improve Graphs in a number of ways:

Graph Element Improvements
======================

1. Add an optimized pandas based implementation that handles drawing direct edge paths between nodes. The naive implementation relying just on HoloViews functionality is way to slow and this provides a ~100x speedup as long as pandas is installed.
2. Graphs allowed supplying node information without defining the explicit node positions. This code was brittle and relied on implicit assumptions on the ordering of nodes. I've hardened the exception handling here, being much stricter about how node information is merged and relying on pandas to handle actual merges between node indices.

Graph Plot improvements
===================

1. The Graph glyphs are now updated in a well defined order, which ensures that explicit paths are re-rendered correctly when updated.
2. The ``GraphPlot`` implementations now support an ``edge_color_index`` allowing them to be colored both by categorical attributes (e.g. by their source node) or by a value (e.g. a weight value).

- [x] Added tests
- [x] Added documentation",2,5,['tag: component: plotting']
1353,154220513,2144,19542768,2017-11-22 17:54:57,2017-11-25 23:36:29,closed,Inherit parameters when casting Image to QuadMesh,"Due to an oversight the kdims, vdims, group and label aren't inherited when casting an Image to a QuadMesh.",1,2,['type: bug']
1354,154207989,2143,19542768,2017-11-22 16:58:42,2017-12-14 15:35:08,closed,Add TriMesh element,"Triangle meshes are a common form of data when working with complex polygons and are frequently employed in environmental modeling. The most common way to compute such a mesh is using Delaunay triangulation and the data is usually represented as two data structures:

1. The **simplices** representing each triangle, usually these are node indices.
2. The **nodes** or points representing each corner of a triangle.

This representation is in fact simply a specific type of graph and closely follow the data structures we already use for graphs, where the **simplices** represent the abstract connectivity of the mesh and the nodes represent the positions. It was therefore trivial to write a ``TriMesh`` element which simply reuses the same data structures, organization, and plotting code as existing graph elements.

Here is a simple example:

```python
import param
import numpy as np
import holoviews as hv
from scipy.spatial import Delaunay

from holoviews.element.graphs import Graph, EdgePaths

hv.extension('bokeh')

n_verts = 1000
pts = np.random.randint(1, n_verts, (n_verts, 2))
tris = Delaunay(pts)

hv.TriMesh((tris.simplices, tris.points))
```

![bokeh_plot](https://user-images.githubusercontent.com/1550771/33139587-a20f5b8a-cfa5-11e7-9f6d-afe224600ebc.png)

This approach is reasonably fast for small meshes (~1 second/5000 triangles) and once you start plotting more than ~10k triangles you will want to use datashader anyway. It is also flexible enough to associate additional values both with the simplices and with the nodes.

Once https://github.com/bokeh/datashader/pull/525 is merged I will get on with allowing datashader operation such as aggregate to operate on the TriMesh element.

- [x] Reference gallery entries
- [x] Unit tests",18,28,['type: feature']
1355,153896045,2140,19542768,2017-11-21 13:53:36,2017-11-22 17:49:29,closed,Fixes and improvements for CompositeElementPlot,Fixes bug when using glyphs containing an underscore and allows defining an explicit draw order for glyphs.,1,1,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1356,153452772,2138,19542768,2017-11-18 14:45:20,2018-02-14 23:17:30,closed,Add Chord element,"As outlined in https://github.com/ioam/holoviews/issues/2137 this PR adds support for a ``Chord`` element. So far this is just a WIP, but basically this just extends the existing ``Graph`` element to lay things out in a circle and draw bezier splines between the nodes. The next step will be to allow scaling the line thickness by a value in a separate PR, which will allow scaling the chords representing the edges between nodes and then start drawing the bands around the circle.

Progress for what is supported can be tracked in: https://anaconda.org/philippjfr/chord/notebook",7,16,['type: feature']
1357,153192896,2133,19542768,2017-11-17 01:17:38,2017-11-17 23:44:09,closed,Fixed yrotation and zrotation for mpl overlay plots.,"Maybe I shouldn't be trying to rotate axis labels, but I was, and I got quite confused...",1,1,['type: bug']
1358,152245823,2122,19542768,2017-11-13 14:04:04,2017-12-11 20:18:34,closed,Updates and fixes to user guides and demos,Fixed some issues in the dashboarding user guide and used tornado PeriodicCallback for asynchronous streaming data example.,7,3,['tag: docs']
1359,152120473,2120,19542768,2017-11-12 20:01:46,2017-11-12 20:52:00,closed,Improved streaming updates on overlaid plots,"Previously the stream handling code in the bokeh backend was not correctly handling a condition where multiple subplots were attached to different streaming sources. In those cases it would fall back to sending a full update of the data for some subplots. It now appropriately skips updates to a streaming plot when it isn't being triggered.

Additionally it now forces the ranges to be updated in streaming mode, which previously caused issues when running a plot reset.",1,2,"['tag: backend: bokeh', 'tag: component: plotting']"
1360,152115737,2119,19542768,2017-11-12 18:10:03,2017-11-12 20:52:31,closed,Added CHANGELOG for v1.9.1 release,,2,1,[]
1361,152104297,2117,19542768,2017-11-12 13:32:37,2017-11-12 14:45:29,closed,Image grid fixes,"Fixes for https://github.com/ioam/holoviews/issues/2094, the ImageInterface was not validating that the Image coordinates matched the array shape and the regrid operation was not ensuring the array had the correct orientation before regridding.",1,4,"['type: bug', 'tag: component: data']"
1362,152037705,2114,19542768,2017-11-11 02:40:02,2018-02-05 21:08:52,closed,Add Violin Element,"Since we now have a univariate_kde operation implementing a Violin plot was pretty easy.

Here's what the element can do, it acts much like BoxWhisker: https://anaconda.org/philippjfr/violin/notebook

![bokeh_plot](https://user-images.githubusercontent.com/1550771/32694242-4f4f75c6-c733-11e7-964d-9b93db9bf31f.png)

![image](https://user-images.githubusercontent.com/1550771/35489915-6db398b0-0493-11e8-98dd-07852118d75b.png)

- [x] Added matplotlib plotting tests
- [x] Added bokeh plotting tests
- [x] Added Element reference notebooks
- [x] Added gallery examples ",5,18,"['type: feature', 'tag: backend: bokeh', 'tag: backend: mpl']"
1363,152024670,2113,19542768,2017-11-10 23:34:03,2017-11-11 01:58:12,closed,Fix bokeh version import,"fixes bokeh_version import otherwise leads to

`  line 422, in set_server_callback
   if self.on_events and bokeh_version >= '0.12.5':
NameError: name 'bokeh_version' is not defined`

atleast while serving a bokeh app. ",3,2,[]
1364,152020505,2112,19542768,2017-11-10 22:59:48,2017-11-11 15:34:14,closed,Fixed throttling on bokeh server,"This PR fixes two bugs:

1. A left over and undefined ``bokeh_version`` variable causing errors
2. The previous approach to server side throttling never really worked and this is a huge improvement. ",1,1,"['type: bug', 'tag: backend: bokeh']"
1365,151737311,2110,19542768,2017-11-09 19:10:58,2017-11-11 15:33:16,closed,Bokeh plotting fixes,"A number of smaller fixes/enhancements for bokeh plots:

* CompositeElementPlot now allows drawing multiple glyphs from the same datasource
* CompositeElementPlot no longer errors when a plot doesn't return data for a particular glyph (fixes http://holoviews.org/gallery/demos/bokeh/dropdown_economic.html)
* BoxWhisker and BarPlot use regular Range1d models not DataRange1d, which has changed behavior in 0.12.11dev and no longer updates as one would expect (also DataRange1d is not actually required anymore)",1,6,"['type: bug', 'tag: backend: bokeh']"
1366,151719315,2109,19542768,2017-11-09 17:49:14,2017-11-09 23:30:01,closed,Added min_alpha parameter to shade and datashade,Fixes #2108.,4,1,[]
1367,151201669,2103,19542768,2017-11-07 19:13:03,2017-11-11 15:32:08,closed,"Improvements for kde operation error, dimension and range handling","There were some bugs in the univariate_kde dimension handling but I've also included improvements to range and exception handling for both kde operations.

I'll add some more unit tests before this is ready to merge.",1,4,['type: bug']
1368,150703879,2093,19542768,2017-11-05 02:03:35,2017-11-06 12:40:37,closed,Enable compute_edges with unequally spaced data,"This is a simple modification that allows one to use `QuadMesh` etc. with unevenly spaced points without having to explicitly provide the bin boundaries.  This simply uses the midpoints as bin boundaries and sets the endpoints as the midpoints of the outer cells.  This thus maintains the previous behaviour when equally-spaced points are provided, and now simply allows for unevenly spaced points.  (See also issue #1869.)",2,1,[]
1369,150651561,2091,19542768,2017-11-04 00:08:58,2017-11-06 13:38:29,closed,Notebook flake fixes,"I'm testing a notebook linting tool. These are the issues it found in the `doc/` directory, running it with python3.

It's not clear to me that everything it's found is correct, e.g.

* Is there a notebook about pandas that doesn't use pandas? Or is it because you need to import pandas to get features of the pandas backend?
* Do notebooks work in python 2 and python 3 with both the print statement and function? One notebook had both in.
* Are some things in notebooks deliberately imported and unused?

This is what I ran:
```
pip install pytest-nbsmoke
pytest --tb=short --nbsmoke-lint doc/
```

`--tb=short` is necessary because currently the combined pytest/nbconvert output is huge, unfortunately.

If I run nbsmoke on `examples/`, I get a lot more to fix. But first I wanted to see how you feel about these changes...",6,1,[]
1370,150527696,2088,19542768,2017-11-03 13:30:11,2017-11-03 16:23:24,closed,"Fix plotting of empty image, closes #2087",,9,2,[]
1371,150523898,2086,19542768,2017-11-03 13:11:35,2017-11-03 13:19:29,closed,Added draft of version 1.9 CHANGELOG,"Handing this over to @jlstevens, feel free to make any edits you want.",1,3,[]
1372,150453797,2085,19542768,2017-11-03 04:31:34,2017-11-03 04:32:10,closed,Small updates for stats elements,Some minor things that I forgot to update when adding the stats elements.,1,1,[]
1373,150448834,2084,19542768,2017-11-03 03:21:25,2017-11-03 03:59:51,closed,Fixed issues with Dataset conversions for stats elements,The data conversion methods were still trying to import the elements from seaborn. Additionally the elements pose some challenges for the conversion interfaces in general so the interfaces really benefit from some additional strictness about the dimensions it tries to infer. That change only catches conditions which would otherwise have errored.,2,2,['tag: component: data']
1374,150444915,2083,19542768,2017-11-03 02:29:08,2017-11-03 03:10:53,closed,Fixed bug when raising Dimension error,"This error in Dimension previously raised errors about not all string arguments being converted because ``spec`` could be a tuple, to fix it I've simply cast the variable to a string.",1,1,['type: bug']
1375,150441279,2082,19542768,2017-11-03 01:39:00,2017-11-03 03:43:27,closed,Ensure HeatMap correctly constructs from pandas,Since ``HeatMap`` didn't define a dimension bounds the ``PandasInterface`` was incorrectly handling the kdims and vdims. So I've defined the ``bounds`` on the kdims and ensured the PandasInterface correctly infers dimensions for an Element that doesn't define the kdims bounds.,1,5,"['type: bug', 'tag: component: data']"
1376,150437705,2081,19542768,2017-11-03 00:53:54,2017-11-03 01:44:09,closed,Added CSS class to logo block,Adds a CSS class to the logo in the extension so it can be styled separately in the doc build.,4,1,['tag: docs']
1377,150428409,2080,19542768,2017-11-02 23:28:17,2017-11-03 00:15:58,closed,Removed NdMapping cached variables,"All of these cached variables are completely pointless, we removed features that relied on them and now they are causing issues with DynamicMap changes I made in https://github.com/ioam/holoviews/pull/2059.",2,1,[]
1378,150418913,2078,19542768,2017-11-02 22:24:26,2017-11-03 01:41:44,closed,Changed datashader default colormap to fit HV defaults,"Currently, ``holoviews.operation.datashade.shade()`` and  ``holoviews.operation.datashade.datashade()`` use a default colormap of ``fire``, originally chosen to match the default Image colormap in HoloViews.  This made sense at first, because datashader produces images.  However, a datashader plot is rarely a dense image covering every pixel; instead it tends to have many transparent pixels, and is thus much more like a line or points plot in HoloViews.  When using ``datashade()`` on an ``hv.Points()``, etc. object using the HV/Jupyter/browser default white page background, a fire colormap is inappropriate, because the highest value maps to the page color.  This resulted in bits of datashader plots disappearing, which appeared to be a bug in datashader but was simply the result of using a colormap ending in white on a white page.  These bits sometimes disappear in the initial rendering, if there happen to be isolated pixels at the highest strength, or more often when zooming in far enough that a single color becomes visible, at which point the entire plot disappears.

This PR selects a colormap designed to be thematically compatible with the HV default blue color for lines and points:

![image](https://user-images.githubusercontent.com/1695496/32353231-906461fe-bff2-11e7-986b-927ed7ae076d.png)
",3,2,[]
1379,150412293,2077,19542768,2017-11-02 21:47:01,2017-11-02 23:45:27,closed,Adds a basic MANIFEST.in file,"Fixes https://github.com/ioam/holoviews/issues/1791

Make sure to include the README, LICENSE, and CHANGELOG. Also make sure to package the tests. Further ensure the docs and examples are included as well. This is useful for deploying sdists and other products and ensuring they are feature complete.",17,1,[]
1380,150402240,2076,19542768,2017-11-02 20:57:59,2017-11-02 21:25:56,closed,Fixed Surface plot without cmap,Surface now errors when you try to add a colorbar without having a cmap.,1,1,"['type: bug', 'tag: backend: mpl']"
1381,150389354,2074,19542768,2017-11-02 19:58:27,2017-11-02 21:09:23,closed,Improved pandas dim handling further,"One more condition for pandas dataframe dimension extraction that I didn't handle correctly, including a test.",2,1,['type: bug']
1382,150364553,2073,19542768,2017-11-02 18:05:12,2017-11-02 19:17:03,closed,Fixed issues updating categorical axes and mappers,"Ensures that categorical axes are updated before the ColumnDataSource, avoiding errors in https://github.com/bokeh/bokeh/issues/7084. Also ensures that the colormapper correctly updates depending on the type of the data.",1,1,"['type: bug', 'tag: backend: bokeh']"
1383,150362580,2072,19542768,2017-11-02 17:57:02,2017-11-02 18:55:13,closed,Made data first argument for both Pipe and Buffer,After just demoing the streaming API I realized that Pipe and Buffer constructors are inconsistent. This PR ensures that both accept the initial data as the first argument.,1,1,['tag: API']
1384,150358919,2071,19542768,2017-11-02 17:42:06,2017-11-02 19:33:09,closed,Fixed pandas dimension ingestion,"The changes I made to how the pandas interface ingests dimensions weren't quite correct so this restores the old behavior while also fixing an issue with too many dimensions being extracted as vdims.

This time I also added a bunch of tests to ensure it's actually working properly.",1,1,['tag: component: data']
1385,150284260,2070,19542768,2017-11-02 13:00:10,2017-11-02 18:37:56,closed,Ensure Graph node colors persist when updated,Small fix to ensure the Graph style does not override colormapped columns on Graph.,1,1,"['type: bug', 'tag: backend: bokeh']"
1386,150202142,2069,19542768,2017-11-02 04:31:06,2017-11-02 04:32:01,closed,Fixed bug in MultiPath nonzero,"In certain cases a bug can arise where param (incorrectly) checks ``if not obj`` on a ``Dataset`` while it is being constructed. This is usually not a problem because that checks the length and the length can usually be checked before the parameters are set. In the case of the MultiInterface this is not true because it has to construct sub-elements to check the length. This PR just checks the length of the interface ``.data``, which works fine and doesn't require constructing sub-elements. Separately I'll submit a change to param so it no longer tries too check whether the object evaluates to True.",1,1,['type: bug']
1387,150197634,2067,19542768,2017-11-02 03:38:48,2017-11-02 03:59:23,closed,Fix Bounds bokeh callbacks skipping,"The previous check apparently fails in bokeh 0.12.10, I'll follow up on that but this should work fine.",1,1,['tag: backend: bokeh']
1388,150195064,2066,19542768,2017-11-02 03:13:07,2017-11-02 03:58:55,closed,Allow empty data on Bivariate element,"As the title says, this was previously not handled at all, resulting in errors inside scipy.",1,1,['type: bug']
1389,150194779,2065,19542768,2017-11-02 03:10:26,2017-11-02 03:39:42,closed,Handle various error conditions in Interface constructor,"Handles some cases in the interfaces that would previously work even though they really shouldn't, includes:

```
Dataset({'x': np.zeros(5)}, kdims=['Test'], vdims=[])

Dataset({'x': 1}, kdims=['Test'], vdims=[])
```

Also handles elements which really only have one dimension, e.g. ``Distribution`` when passing in pandas dataframe with more than 2 dimensions.

```
Distribution(pd.DataFrame({'x': np.zeros(5), 'y': np.zeros(5), 'z': np.zeros(5)})
```

Once this is merged I'm going to make an issue about eventually dropping the dictionary mapping format that has clung on since ``NdElement``, examples include ``{0: 1}, {('A', 'B'): 1}, {('A', 'B'): (1, 2)}``, here both keys and values represent dimension values. It's terrible to validate and just not a great format. The only time it's semi-useful is for specifying HeatMaps.",1,2,['tag: component: data']
1390,150174236,2064,19542768,2017-11-01 23:51:32,2017-11-02 00:53:29,closed,Fixed updating of matplotlib ErrorBars,It seems some recent version of matplotlib (probably 2.0) changed the API for updating ErrorBars. We should probably pin matplotlib version > 2.0 in the release.,1,1,"['type: bug', 'tag: backend: mpl']"
1391,150163055,2063,19542768,2017-11-01 22:32:48,2017-11-02 00:00:43,closed,Fixes for empty or missing frames,"Fixes a number of bugs handling empty frames:

* Fixed updating title when initial frame had no title (Bokeh)
* Ensured that glyphs with a renderer, e.g. Band and Whisker, toggle visibility (bokeh)
* When embedding plot update plot to last frame to ensure all change events are recorded correctly (bokeh)
* Do not adjust legend if the current frame is empty (matplotlib) 
",1,1,"['type: bug', 'tag: component: plotting']"
1392,150104694,2062,19542768,2017-11-01 18:00:10,2017-11-01 20:50:36,closed,Fixed bounding box issues in regrid,While adding datetime support to regrid I messed with the bounding boxes that were returned. This restores the old behavior while handling datetimes correctly.,2,1,['type: bug']
1393,150101043,2061,19542768,2017-11-01 17:45:07,2017-11-01 20:52:37,closed,Removed Collector and interface submodule,"We decided a while back that we'd move Collector elsewhere (probably topographica) and since the remaining files in ``interface`` are now gone, now would be a good opportunity to get rid of the entire ``interface`` submodule.",4,1,[]
1394,150042200,2059,19542768,2017-11-01 13:44:59,2017-11-01 16:19:09,closed,Improved handling of DynamicMap transform methods,"This PR fixes an issue when applying .map to a DynamicMap where the mapped function transforms the type of element. Previously the mapping function was applied to the DynamicMap cache first and then the function was applied to the DynamicMap clone that had the converted data. This resulted in type mismatches between what was returned by the new DynamicMap callback and what was already in the cache. By simply copying over the cache we avoid this issue and get rid of one additional superfluous level of DynamicMap nesting, resulting in a cleaner graph.",2,2,['type: bug']
1395,149948961,2058,19542768,2017-11-01 02:28:59,2017-11-01 03:32:38,closed,Fixed bugs in Interface validation code,Bugs introduced while improving dataset validation.,1,1,"['type: bug', 'tag: component: data']"
1396,149945773,2057,19542768,2017-11-01 01:54:40,2017-11-01 02:29:19,closed,Replaced usage of Array.includes with Array.indexOf in callbacks,Fixes https://github.com/ioam/holoviews/issues/1954,0,1,[]
1397,149932441,2056,19542768,2017-10-31 23:36:14,2017-11-02 19:44:12,closed,Various docs fixes,A collection of documentation fixes before release.,1,7,['tag: docs']
1398,149928304,2055,19542768,2017-10-31 23:01:58,2017-11-01 02:06:44,closed,Rewrote SpikesPlot to use segment glyph,Since bokeh no longer supports plotting ``multi_line`` glyphs on categorical axes this PR switches the Spikes element over to use the ``segment`` glyph which does work.,1,2,"['type: bug', 'tag: backend: bokeh']"
1399,149925908,2054,19542768,2017-10-31 22:45:39,2017-10-31 23:38:33,closed,Fixed DynamicMap unbounded range checks,Fixes a bug encountered in http://dev.holoviews.org/user_guide/Live_Data.html when plotting an unbounded DynamicMap together with a HoloMap. The ``within_range`` method was not checking for NaNs appropriately.,0,1,"['type: bug', 'tag: component: plotting']"
1400,149709150,2053,19542768,2017-10-31 06:54:59,2017-10-31 15:37:54,closed,"Changed kdims,vdims to positional arguments without lists where possible","Now that all Elements other than Histogram accept positional arguments for kdims and vdims, and accept both lists and single dimensions, changed nearly all examples to use the simplest format feasible.  

Added a bit of explanation of these positional arguments in the getting-started Introduction and in the Annotating user guide, but there's probably more explanation and maybe an example that could be added.

It would be great if someone else could review the diffs, looking for things like using positional arguments for HoloMap and DynamicMap (which I avoided to avoid confusion because they don't have quite the same argument format). None of this has been tested yet, but hopefully the PR tests will catch any errors?

Feel free to push fixes and merge this without me!",5,4,[]
1401,149689767,2052,19542768,2017-10-31 03:45:21,2017-10-31 03:59:47,closed,Explain how to use PIL images and imagen with RGB and Image,,3,2,['tag: docs']
1402,149430880,2049,19542768,2017-10-30 03:45:03,2017-10-30 11:42:41,closed,Fixed bug computing min_distance for empty VectorField,Simple fix for plotting an empty VectorField.,1,1,['tag: component: plotting']
1403,149430843,2048,19542768,2017-10-30 03:44:41,2017-10-30 17:23:31,closed,Fixed bug in bokeh Graphs when plotting string index,When the hover tool was enabled and the node indices were not integers Graph nodes would in some cases disappear.,1,1,"['type: bug', 'tag: backend: bokeh']"
1404,149430587,2047,19542768,2017-10-30 03:41:37,2017-10-30 11:42:58,closed,Fixed memoization bug when using generator in DynamicMap,"As title says, straightforward bugfix.",1,1,['type: bug']
1405,149353860,2046,19542768,2017-10-28 20:30:23,2017-10-28 21:49:43,closed,Ensure overlaid BoxWhisker color cycles,Currently when overlaying a BoxWhisker element the color cycle is lost. This simple looks up the color cycle in a way that works robustly.,1,1,"['type: bug', 'tag: backend: bokeh']"
1406,149349676,2045,19542768,2017-10-28 18:53:28,2017-10-28 21:31:14,closed,Ensure that key dimensions are hashed correctly,"In an earlier PR I accidentally dropped the DynamicMap key dimensions values from the memoization hash, which meant it never updated. Somehow this wasn't caught at all so I've added some unit tests.",1,1,['type: bug']
1407,149344821,2044,19542768,2017-10-28 17:01:53,2017-10-28 18:54:09,closed,Pass fontsize to Overlay subplots,Fixes https://github.com/ioam/holoviews/issues/875,1,1,"['type: bug', 'tag: backend: mpl']"
1408,149344568,2043,19542768,2017-10-28 16:57:17,2017-10-28 18:01:10,closed,Handle bokeh callback Comm issues,Ensures that dynamic plots with bokeh callbacks can be instantiated outside a notebook context.,1,1,"['type: bug', 'tag: backend: bokeh']"
1409,149343906,2042,19542768,2017-10-28 16:43:53,2017-10-28 18:00:31,closed,Fix renderer issues with different matplotlib backends,"Certain matplotlib backends do not consistently define the renderer object but getting the renderer with ``fig.canvas.get_renderer()`` works consistently.

Fixes: https://github.com/ioam/holoviews/issues/1496",1,1,"['type: bug', 'tag: backend: mpl']"
1410,149315722,2041,19542768,2017-10-28 02:58:15,2017-10-28 16:02:07,closed,Added DataError for irrecoverable data interface initialization errors,"We really need to do something about Interface data errors, particularly those that can provide clear and unambiguous exception message when the data is definitely incorrectly defined. In this PR I introduce a ``DataError``, which prevents the Interface from trying to fall back to other data types and therefore allows raising a proper exception message. This approach is much simpler than what I outlined in https://github.com/ioam/holoviews/issues/1986 and makes the process of raising specific exceptions quite simple.

Addresses:

https://github.com/ioam/holoviews/issues/1762
https://github.com/ioam/holoviews/issues/1867",12,6,['tag: component: data']
1411,149309937,2040,19542768,2017-10-28 00:32:19,2017-10-29 12:41:43,closed,Add axis handles to OverlayPlot,"The bokeh callbacks sometimes inspect the handles to determine whether to transform the data in some way, e.g. to convert datetimes. On an OverlayPlot this currently does not work because the axis is not defined in the handles.",1,1,"['type: bug', 'tag: backend: bokeh']"
1412,149305656,2039,19542768,2017-10-27 23:35:22,2017-10-28 00:28:18,closed,DynamicMap raises KeyError when out of bounds,As discussed in https://github.com/ioam/holoviews/issues/482 DynamicMap should raise a KeyError not a StopIteration error here.,1,1,[]
1413,149304397,2038,19542768,2017-10-27 23:21:06,2017-10-27 23:21:59,closed,Updated Large Data user guide with datetime support,"As the title says, now that datetimes are supported by Images and the datashader operations the previous workarounds are no longer needed.",1,1,['tag: docs']
1414,149303109,2037,19542768,2017-10-27 23:08:21,2017-10-27 23:35:53,closed,Removed width/height style opts from TabularPlot,For some reason width and height style options were defined on bokeh TabularPlot leading to confusion and errors like in this issue: https://github.com/ioam/holoviews/issues/1583,1,1,['tag: backend: bokeh']
1415,149258882,2034,19542768,2017-10-27 18:42:19,2017-10-27 21:13:15,closed,Added datetime support for mpl Spikes,More complex than I had hoped but fixes https://github.com/ioam/holoviews/issues/1481,2,1,"['type: bug', 'tag: backend: mpl']"
1416,149252879,2033,19542768,2017-10-27 18:12:15,2017-10-27 22:12:25,closed,Added support for datetimes on Bounds streams,Add support for datetimes on linked Bounds streams by converting bokeh timestamp to datetime64 like other streams. Addresses https://github.com/ioam/holoviews/issues/1674,1,1,"['type: feature', 'tag: backend: bokeh']"
1417,149250101,2032,19542768,2017-10-27 17:57:46,2017-10-31 03:42:15,closed,Allowed RGB elements to accept a PIL image,"HoloViews RGB elements can plot PIL images, but only if you know to convert them to Numpy arrays first using ``numpy.array(pil_image)``.  This PR tries to detect PIL images and convert them automatically so that they can be passed directly to RGB:

![image](https://user-images.githubusercontent.com/1695496/32118097-23be80ce-bb16-11e7-9de4-f287b4947e06.png)

We don't import PIL to do the check, for two reasons: most users of RGB are unlikely to need PIL, and PIL comes in two flavors, PIL and pillow, which can have strange interactions if both imported.  I *think* this approach is safe, in that this code should rarely be executed if not for actual PIL objects and vastly more rarely could the conversion to Numpy cause a problem in that case not resulting in an exception, but it's possible that I'm overlooking some scenario of importance.",7,23,[]
1418,149242978,2031,19542768,2017-10-27 17:20:13,2017-10-27 18:44:12,closed,Allow setting explicit BoxWhisker range,Currently there is no way to set the BoxWhisker range at all. While it makes sense that it auto-ranges by default it should respect explicitly set ranges. Partially addresses https://github.com/ioam/holoviews/issues/1937.,1,1,"['type: bug', 'tag: backend: bokeh']"
1419,149238433,2030,19542768,2017-10-27 16:56:56,2017-10-27 22:23:27,closed,Various fixes and cleanup of bokeh BarsPlot,"The BarsPlot has gone through a lot of iteration due to fundamental changes to the way categoricals are handled in Bokeh. As a long term goal I think it should be rewritten again but for the time being this PR addresses several issues:

* Negative values are stacked correctly
* Stacked bars are colored correctly and stay in their original order
* Avoid warnings that the ColumnDataSource columns are not of matching lengths",1,1,"['type: bug', 'tag: backend: bokeh']"
1420,149208824,2029,19542768,2017-10-27 14:47:35,2017-10-27 19:21:19,closed,Suppress warning when data empty in histogram operation,When the data is empty on a histogram element it currently generates a true_div warning. This suppresses this warning.,6,1,[]
1421,149208270,2028,19542768,2017-10-27 14:45:22,2017-10-27 16:19:17,closed,Fixed bug in BoxWhisker coloring,Fixes issues with categorical coloring of BoxWhisker plots. ,1,1,"['type: bug', 'tag: backend: bokeh']"
1422,149207870,2027,19542768,2017-10-27 14:43:46,2017-10-27 16:18:49,closed,Fixed Area.stack when passing in an NdOverlay,"The Area.stack classmethod provides an easy way to stack an Overlay of Areas, but currently it does not work with NdOverlays. This is an easy fix to address this issue.",1,1,['type: bug']
1423,149010391,2024,19542768,2017-10-26 18:26:32,2017-10-26 18:30:29,closed,Fix minor typo,,1,2,[]
1424,148830054,2023,19542768,2017-10-26 03:28:05,2017-10-27 00:41:11,closed,Add support for datetime axis on Image,"Adds support for datetime axes on Image, SheetCoordinateSystem, BoundingBox and Slice. The basics are all working including instantiation of an Image with datetime bounds and slicing and indexing. Will make it possible to generate datashaded images with datetime axes.

<img width=""903"" alt=""screen shot 2017-10-26 at 4 27 42 am"" src=""https://user-images.githubusercontent.com/1550771/32033716-0b9c0a18-ba06-11e7-8b30-2029bf6ff8e3.png"">
",10,14,"['type: feature', 'tag: component: data']"
1425,148424231,2020,19542768,2017-10-24 15:02:30,2017-10-26 19:02:38,closed,Remove all bokeh backward compatibility code,As we decided in #1949 we are going to drop compatibility with versions of bokeh older than 0.12.10 in the next release. This PR removes all code that handles backward compatibility for older versions.,5,4,['tag: backend: bokeh']
1426,148246827,2019,19542768,2017-10-23 21:37:31,2017-10-24 14:13:27,closed,Fixed empty data issues with multiinterface,The MultiInterface for Paths was not handling empty data correctly in some cases. This fixes the issues and adds various data interface and plot tests.,1,1,"['type: bug', 'tag: component: data']"
1427,148189711,2018,19542768,2017-10-23 17:14:49,2017-10-23 21:46:24,closed,Correctly handle BoxWhisker plot with empty data,Ensures that plotting BoxWhisker with empty data does not result in errors.,2,1,['tag: backend: bokeh']
1428,148008188,2014,19542768,2017-10-22 19:02:37,2017-10-24 14:13:51,closed,Qualify bokeh OverlayPlot legend style_opts,Avoids the confusion in https://github.com/ioam/holoviews/issues/1785 by qualifying border line options with the ``border_`` prefix.,2,1,"['tag: backend: bokeh', 'tag: component: options']"
1429,148007522,2013,19542768,2017-10-22 18:48:03,2017-10-22 23:49:28,closed,Ensure all clone methods correctly retain id,"Certain clone methods on Annotations, BaseShape and UniformNdMapping were not passing the ``id`` along resulting in styles getting dropped when different operations were applied to these objects. One issue that's caused by this is https://github.com/ioam/holoviews/issues/1904, but there may be others I missed.",3,1,"['type: bug', 'tag: component: options']"
1430,147920452,2011,19542768,2017-10-21 00:55:46,2017-10-30 15:03:30,closed,Support for streaming data,"This PR builds on #2007 adding a ``StreamDataFrame`` Stream, which lets you subscribe to updates from a ``streamz.StreamingDataFrame``. The dependency is entirely optional and with a bit of glue it's very easy to subscribe to generate a streaming plot this way. For now I have just monkey-patched streamz using this code:

```python
from streamz.dataframe import StreamingDataFrame, StreamingSeries, Random
from holoviews.streams import StreamDataFrame

def to_hv(self, function, backlog=2000):
    return hv.DynamicMap(function, streams=[StreamDataFrame(self, backlog=backlog)])

StreamingDataFrame.to_hv = to_hv
StreamingSeries.to_hv = to_hv
```

The individual chunks emitted by the ``StreamingDataFrame`` are fed through a user supplied callback and are then used to update the bokeh plot using the ``CDS.stream`` method, which sends just the most recent samples. It may also be worth considering an option where ``StreamingDataFrame`` itself accumulates data rather than just emitting chunks, which can also be very useful. The current approach makes something like this possible:

![streamz](https://user-images.githubusercontent.com/1550771/31846518-c1324d66-b604-11e7-8366-3e01f27e6d42.gif)

",54,20,['type: feature']
1431,147540119,2007,19542768,2017-10-19 12:15:04,2017-10-23 10:47:06,closed,Disable deep hashing if memoization is off,"Currently ``Callable`` runs deep hashing on the stream values whether or not memoization is enabled. This PR simply disables it when memoization is off, which has no effect but can be more efficient.",7,9,[]
1432,147070222,2003,19542768,2017-10-17 15:16:04,2017-10-18 09:09:08,closed,Add pandas timezone datetime64 type to datetime_types,"Adds ``pandas.core.dtypes.dtypes.DatetimeTZDtypeType`` to recognized datetime types, fixing https://github.com/ioam/holoviews/issues/1713. ",2,1,"['type: bug', 'tag: component: plotting']"
1433,147068947,2002,19542768,2017-10-17 15:11:57,2017-10-17 22:07:37,closed,Improved support for adding hover info via Graph.from_networkx method,"Previously the ``Graph.from_networkx`` method allowed passing a dataset containing hover data which would be used to create the nodes. However the nodes in this dataset would have to match the edges in the supplied networkx graph exactly, which could at times be difficult. This filters the edges and the supplied nodes to use only the subset that are present in both so the user doesn't have to do the filtering.",1,1,[]
1434,146079664,1996,19542768,2017-10-11 22:44:03,2017-10-12 02:34:53,closed,Ensure histogram operation does not raise deprecation warning,In a recent PR I added a deprecation warning when constructing a Histogram with two separate arguments for edges and values but overlooked the fact that the histogram operation still does this.,1,1,['type: bug']
1435,146079281,1995,19542768,2017-10-11 22:41:29,2017-10-12 16:49:07,closed,Fixed bug introduced in recent bokeh plots refactor,"As the title says, this fixes an oversight I made in #1984.",3,1,"['type: bug', 'tag: backend: bokeh']"
1436,145588961,1991,19542768,2017-10-10 02:56:15,2017-10-22 13:04:15,closed,"Reimplement Path, Contours and Polygons plots","Over the past few months I've slowly been laying the groundwork to support more powerful Path, Contours and Polygons elements and in this PR I am also finally exposing this new functionality in plotting classes. This PR finishes off some final issues with the internally facing API and will reimplements the plotting classes based on this new API.

New features:

* Path, Contours and Polygons can now have any number of value dimensions associated with them which are revealed while hovering and which can be colored by.
* Each geometry in a Contours or Polygons element can now have a different value associated with it, so you no longer have to create huge NdOverlays with one element per geometry.
* Path now allows supplying varying value dimensions which are drawn as paths with continuously varying color.

[Here](https://anaconda.org/philippjfr/new_path_interface/notebook) is a demo of the new (and old) features.

 This PR will address the following issues:

* https://github.com/ioam/holoviews/issues/102
* https://github.com/ioam/holoviews/issues/416
* https://github.com/ioam/holoviews/issues/1558
* https://github.com/ioam/holoviews/issues/1963
* https://github.com/ioam/holoviews/issues/1856

and will allow me to finish off my geopandas interface in geoviews:

* https://github.com/ioam/geoviews/pull/88",11,39,"['type: feature', 'tag: API', 'tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting', 'tag: component: data']"
1437,145510660,1989,19542768,2017-10-09 17:45:10,2017-10-29 12:39:25,closed,Fix issue with bokeh legends,"Since bokeh 0.12.7 you can specify a column in the CDS to draw the legend from. This can result in issues like this when the Element ``label`` matches the column name:

![screen shot 2017-10-09 at 6 43 41 pm](https://user-images.githubusercontent.com/1550771/31351140-dbf48f38-ad21-11e7-86e9-c00dd7dc458b.png)

Thanks to Bryan I found out that ""if the legend name is also a column name you need to explicitly pass value(name)"", so that's what I've done here.",3,2,"['type: bug', 'tag: backend: bokeh']"
1438,145486625,1988,19542768,2017-10-09 15:43:51,2017-10-09 22:01:53,closed,Added support for scalars in dictionary interface,"As part of improving support for associating additional information with paths we decided that the dictionary interface should allow scalars as part of the format, avoiding having to duplicate the scalar value for each sample of a path/polygon. This PR makes this possible, while follow up PRs will start adding support for using this to represent scalar values associated with paths.",11,2,"['type: feature', 'tag: component: data']"
1439,145362098,1985,19542768,2017-10-09 00:50:25,2017-10-31 19:03:53,closed,"Add bokeh statistics operations, elements and plots","This PR will replace the seaborn interface with a set of statistical elements, operations and plots which will all work together. For now it's very much a WIP since there's still some groundwork to be laid, but it's a good start with the basic functionality in place for Distribution and Bivariate elements and corresponding operations.

Demo notebook can be seen [here](https://anaconda.org/philippjfr/statistical_elements/notebook)",7,40,"['type: feature', 'tag: API', 'tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
1440,145360975,1984,19542768,2017-10-09 00:21:38,2017-10-09 15:20:34,closed,Refactored bokeh plotting API,"This PR represents a major cleanup of the (internal) bokeh plotting API to make it more consistent with matplotlib and simplify some things. Basically it adds the dictionary of style options to the bokeh ``ElementPlot.get_data`` method signature and return types. This means that at least the input signature of these methods now matches matplotlib. It's also in many cases much cleaner because a) most ElementPlots need the style as input and b) many also modify the style depending on the element data or parameters, which currently requires subclassing a completely different method. This will make it easier to write a guide on extending HoloViews with new plots and also simplify the process itself.

Concretely the motivation here was to make it easier for me to write some of the statistical plot classes.

This does represent a major change and will force me to pin the latest version of holoviews in the new geoviews release, however in another recent change I already removed the ``empty`` keyword from the signature so that was already necessary.",2,1,"['tag: API', 'tag: backend: bokeh']"
1441,145347197,1983,19542768,2017-10-08 18:37:15,2017-10-08 19:43:07,closed,Add display_options parameter to bokeh widgets,"This simply makes the API of bokeh widgets consistent, ensuring that they do not raise a warning when display_options are passed. The only actual display_option being passed is the ``fps``, which does not apply to these widgets since they do not have a ""play"" feature.

Fixes #1660 ",1,1,['tag: backend: bokeh']
1442,145344934,1982,19542768,2017-10-08 17:39:10,2017-10-08 22:01:32,closed,Added JS callback to lock grid axis,This PR attaches a CustomJS callback which ensures the GridSpace axes are locked as requested in https://github.com/ioam/holoviews/issues/1546.,1,1,['tag: backend: bokeh']
1443,145334733,1981,19542768,2017-10-08 13:22:18,2017-10-08 19:41:19,closed,Add support for passing list as cmap in mpl,As the title says this allows passing a list of colors as a cmap for mpl matching the bokeh behavior and addressing https://github.com/ioam/holoviews/issues/1885.,2,2,"['type: feature', 'tag: backend: mpl']"
1444,145334236,1980,19542768,2017-10-08 13:07:46,2017-10-29 19:09:40,closed,Make copies of supplied bokeh tool instances,"Since you can only ever supply a bokeh model to a single plot and HoloViews objects can be displayed multiple times user supplied tool instances should be copied before attaching them to a plot.

Fixes https://github.com/ioam/holoviews/issues/1851",1,1,"['type: bug', 'tag: backend: bokeh']"
1445,145331038,1979,19542768,2017-10-08 11:30:52,2017-10-08 13:01:24,closed,Handle zero-sized array reductions,"When applying the histogram and datashader operations to an empty array it currently errors due to zero-sized array reductions and zero-range errors. This PR ensures that both operations default to a 0-1 range in that case and also handles colormapping issues in matplotlib for empty arrays. 

Fixes: https://github.com/ioam/holoviews/issues/1506 and https://github.com/ioam/holoviews/issues/1522",2,4,[]
1446,145330715,1978,19542768,2017-10-08 11:19:54,2018-02-19 12:05:05,closed,Enable situate_axes in matplotlib for consistency,"Very early on when implementing holoviews we added a ``situate_axes`` option which disables axis normalization for Raster and Image types in matplotlib. This pops up as a user question fairly frequently since it is inconsistent behavior.

Fixes: https://github.com/ioam/holoviews/issues/692",9,1,"['tag: backend: mpl', 'tag: component: plotting']"
1447,145274446,1976,19542768,2017-10-07 02:57:40,2017-10-07 18:07:48,closed,Fix for Position and Tap stream on categorical axes,"Since bokeh 0.12.9 hover and tap events over a categorical axis no longer report the categorical coordinate but a float value instead. This restores the old behavior by looking up the coordinate in the ``FactorRange``. This also fixes at least two gallery examples with bokeh>=0.12.7.

Fixes https://github.com/ioam/holoviews/issues/1955",2,1,"['type: bug', 'tag: backend: bokeh']"
1448,145130976,1972,19542768,2017-10-06 11:33:58,2017-10-06 14:38:00,closed,Support 32-bit types in VectorField,"Currently the utility that is used to space VectorField arrows automatically requires the coordinates to be 64-bit types. This PR casts the data to 64-bits before computing the distances.

Fixes: https://github.com/ioam/holoviews/issues/1864",2,1,"['type: bug', 'tag: component: plotting']"
1449,145128612,1971,19542768,2017-10-06 11:19:46,2017-10-06 14:37:47,closed,Handle Bars with log axes,"Handling logarithmic bar plots is a special case because Bars usually start at zero, which bokeh does not allow. This PR uses the same code that we usually use to display logarithmic plots in bokeh, which will provide a warning that it automatically computed a logy lower bound and the user should override it. 

Fixes: https://github.com/ioam/holoviews/issues/1780",1,1,"['type: bug', 'tag: backend: bokeh']"
1450,145059699,1969,19542768,2017-10-06 02:16:01,2017-10-06 14:27:00,closed,Ensure Renderer.html works with comms msg_handler,"The ``Renderer.html`` method tries to add a ``msg_handler`` to dynamic plots. In some cases none is provided in which case it shouldn't error, this skips adding the ``msg_handler`` when none is provided. Fixes #1735 and #1897.",2,1,"['type: bug', 'tag: backend: bokeh']"
1451,144931252,1966,19542768,2017-10-05 14:24:36,2017-10-05 15:27:32,closed,return correct data types after interp,step interpolation didn't work with a datetime x-axis. This small change fixes it,4,1,['type: bug']
1452,144895650,1965,19542768,2017-10-05 11:55:18,2017-10-05 20:57:44,closed,Made HLine.dimension_values API consistent,The ``HLine.dimension_values`` method does not support the canonical arguments breaking under certain conditions. Fixes https://github.com/ioam/holoviews/issues/1828.,2,1,"['type: bug', 'tag: API']"
1453,144894530,1964,19542768,2017-10-05 11:49:23,2017-10-05 17:53:15,closed,Fix static source optimization on Graph Element,The Graph.clone method was not retaining the ``_plot_id`` which is what the static source optimization uses resulting in data being sent unnecessarily.,2,2,['type: bug']
1454,144665762,1962,19542768,2017-10-04 13:14:04,2017-10-04 14:57:19,closed,Fixed BokehRenderer.app io_loop issue,"Fix for small API change in bokeh, addresses https://github.com/ioam/holoviews/issues/1931",2,1,"['type: bug', 'tag: backend: bokeh']"
1455,144660565,1961,19542768,2017-10-04 12:51:45,2017-10-04 14:18:04,closed,Improvements for ndloc and sampling,"A while ago we added ``ndloc`` as a means to provide array like integer indexing for gridded Datasets. This has worked out well overall and this PR simply builds on top of that. In particular this PR adds an out-of-bounds IndexError when sampling outside the Image bounds. Secondly it adds an xarray ndloc implementation, which should be more efficient than the generic implementation that we currently have, ensure that the datatype doesn't change when sampling and selecting and also ensure that any xarray variables that are not referenced by HoloViews aren't dropped after a slicing operation. Also added a number of additional unit tests ensuring that the implementations behave identically.",1,5,['tag: component: data']
1456,144567265,1960,19542768,2017-10-04 01:51:21,2017-10-04 13:41:52,closed,"Dataset array, dframe and redim method fixes",Various fixes for Dataset methods along with unit tests.,4,7,"['type: bug', 'tag: component: data']"
1457,144565375,1959,19542768,2017-10-04 01:29:41,2017-10-04 10:47:55,closed,Small Graph fixes,Fixes the datashader Graph operations and adds a unit test ensuring they are working correctly.,2,6,['type: bug']
1458,144513905,1958,19542768,2017-10-03 19:57:36,2017-10-03 21:07:23,closed,Optimize RGB regridding,"This simplifies and optimizes the regridding of RGB elements by regridding each value dimension individually, which removes the overhead from dstacking the data.",1,1,[]
1459,144464278,1957,19542768,2017-10-03 16:08:28,2017-10-03 21:06:52,closed,Avoid seaborn API import warning,Since seaborn 0.8.0 the apionly import is the default and trying to ``import seaborn.apionly as sns`` raises a deprecation warning.,1,1,['tag: backend: mpl']
1460,144240255,1952,19542768,2017-10-02 17:35:46,2017-10-03 18:39:26,closed,Bokeh optimizations,"This PR is meant to provide various optimizations for the bokeh backend. In particular we have the static data optimization in the bokeh backend preventing the data source from being updated and sent to the frontend. However since styling options may still change, the get_data method still has to be executed to modify color mappers and other style-data mappings. However certain data columns are guaranteed to never change and therefore can be skipped. This can provide significant improvements particularly for large paths, and geoviews geometries.",5,3,['tag: backend: bokeh']
1461,144184893,1951,19542768,2017-10-02 13:34:39,2017-10-02 19:31:47,closed,Various Graph improvements,"This PR includes a number of fixes and improvements for Graphs:

* The EdgePaths on a Graph may now be split (e.g. a separate array/dataframe for each edge) or nan separated (as is most efficient for datashading). Unlike before both are validated to have the correct number of edges.
* Applying selections and plotting with bokeh are now both allowed when nan separated data is used.
* Selection on a Graph selects all edges that connect to one of the selected nodes (and keeps both the selected nodes and the nodes that they connect to) by default. If you want to select only edges between the selected subset of nodes you can use ``selection_mode='nodes'``. This is much more useful behavior to select an important subgraph and provides more flexibility.
* Added a ``directly_connect_edges`` operation (based on datashader), which is much faster than the automatic behavior (and not split by default).
* Hide x, y location of nodes on hover",2,9,"['type: feature', 'tag: API']"
1462,144100087,1949,19542768,2017-10-02 01:56:34,2017-10-24 14:14:37,closed,Use the bokeh protocol for embedding static widgets,"Turns out completely switching to the bokeh protocol even for static plots was trivial. This means that all bokeh messages are now generated in exactly the same way whether on bokeh server, using dynamic or live widgets and statically embedded widgets. The PR is based off https://github.com/ioam/holoviews/pull/1940, which was required to get this working. You might particularly appreciate the large amount of hacky code we can now delete.

Edit: I'll likely reapply the changes in this PR once #1940 is merged.",14,4,['tag: backend: bokeh']
1463,144064869,1946,19542768,2017-10-01 10:34:00,2017-10-08 16:58:45,closed,Standardized constructor signature with dimensions as positional args,"As suggested in https://github.com/ioam/holoviews/issues/1938 this PR standardizes the constructors of Dimensioned objects such that ``kdims`` and ``vdims`` are the second and third argument respectively for Elements and ``kdims`` are the second argument for dimensioned containers (NdMapping, HoloMap, NdOverlay etc.). Currently ``Histogram`` and ``Annotations`` are the exceptions to this.",9,8,['tag: API']
1464,143944926,1940,19542768,2017-09-29 17:57:50,2017-10-02 14:43:03,closed,Added support for updating and replacing axis properties,"As I was investigating getting the MercatorTicker working in GeoViews I realized that the code that handles updating of axis properties never correctly handled updating of ticker and formatter models. I have now added a utility which handles recursive updates to bokeh models, preventing unnecessary updates and even handling cases where the model is being replaced (which we now allow in live and dynamic modes as well as on the server). Once I've figured out whether we can use the new bokeh protocol to embed data we may eventually be able to switch out models at will and use this update function everywhere, e.g. to replace a linear axis with a log or categorical axis on the fly.

Turns out this was also the reason why I had to filter ticker and formatter model updates from the static json patches before, allowing me to simplify that now.",4,3,"['type: feature', 'tag: backend: bokeh']"
1465,143708567,1936,19542768,2017-09-28 17:25:53,2017-09-28 18:10:30,closed,Compatibility with bokeh 0.12.10dev,"Bokeh is finally stabilizing it's API around exporting and embedding plots, which has involved some churn in the API before everything settles down. This PR switches to the now public ``get_screenshot_as_png`` function and replicates the functionality of the now deprecated ``notebook_div`` function.

In future we will also switch away from generating a single combined ``notebook_div`` and split the HTML from the JS code, which will give us JupyterLab support (at least for static bokeh plots). For now this will maintain compatibility with the latest bokeh version.",1,2,['tag: backend: bokeh']
1466,143480822,1934,19542768,2017-09-27 19:34:46,2017-10-30 13:03:21,closed,Added Reset stream,A Reset stream triggered when the reset tool has been hit in bokeh can be quite useful to reset selections and other custom interactive behavior. ,5,1,"['type: feature', 'tag: backend: bokeh']"
1467,143469387,1933,19542768,2017-09-27 18:40:23,2017-09-28 18:15:12,closed,Fixes for compatibility with bokeh categorical handling,Further fixes for compatibility with the new categorical handling introduced bokeh 0.12.7. Really hoping this is it.,2,1,"['type: bug', 'tag: backend: bokeh']"
1468,142889318,1927,19542768,2017-09-25 13:55:45,2017-09-25 15:50:36,closed,Fix for Graph edge hover labels,Fixes bug where it would not find hover info because edge start/end points in datasource is always start/end while Graph.kdims can be any names.,1,1,"['type: bug', 'tag: backend: bokeh']"
1469,142816793,1926,19542768,2017-09-25 07:57:32,2017-09-25 12:13:04,closed,Updated BoxWhisker in Bokeh to have Tukey-style whisker bounds.,"The Bokeh version of BoxWhisker currently uses the following definitions:

- Top of box: 75th percentile
- Bottom of box: 25th percentile
- Middle of box: 50th percentile (median)
- Bottom whisker: 25th percentile, minus 1.5 times the interquartile region (75th - 25th percentile)
- Top whisker: 75th percentile, plus 1.5 times the interquartile region
- Outliers: Anything that is 1.5 IQRs away from top or bottom of box

While the definitions for the box and the outliers is pretty standard (and definitely what I would choose), I have never seen that definition of the whisker. Rather, the ""most standard"" definition is what [Tukey proposed](https://en.wikipedia.org/wiki/Box_plot).

- Bottom whisker: The larger of:  (25th percentile minus 1.5 times the IQR, smallest data point)
- Top whisker: The smaller of:  (75th percentile plus 1.5 times the IQR, largest data point)

In fact, this is what we get using `hv.BoxWhisker` with Matplotlib and Plotly renderers. So, I think it is a bug in the Bokeh version. This PR fixes that bug.

This is also relevant for #1838.",3,1,['tag: backend: bokeh']
1470,142771605,1924,19542768,2017-09-24 21:23:57,2017-09-25 16:17:38,closed,Disable shared axes when +axiswise,"As suggested in https://github.com/ioam/holoviews/issues/1906, setting axiswise=True should force shared axes to be disabled.",3,1,['tag: backend: bokeh']
1471,142770904,1923,19542768,2017-09-24 21:03:37,2017-09-25 15:55:44,closed,Removed prepending of param to syspath,"I think this must be leftover from some time ago, unless you can think of a reason this should still be here @jlstevens. May also fix https://github.com/ioam/holoviews/issues/1920.",4,1,[]
1472,142764188,1922,19542768,2017-09-24 18:09:34,2017-09-24 19:40:06,closed,Fixed initial frame bug for matplotlib animations,"The plot was being initialized twice causing the initial frame to persist throughout the animation.

Fixes: https://github.com/ioam/holoviews/issues/1621",1,1,"['type: bug', 'tag: backend: mpl']"
1473,142734807,1919,19542768,2017-09-24 00:30:43,2017-10-07 18:09:09,closed,Handle invert_axes for all Element types,"We never implemented ``invert_axes`` for all Element types. This code does that ensuring that any plot can now be adjoined.

Fixes: 

* https://github.com/ioam/holoviews/issues/1033
* https://github.com/ioam/holoviews/issues/780
* https://github.com/ioam/holoviews/issues/358",7,12,"['tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
1474,142722460,1916,19542768,2017-09-23 17:36:24,2017-09-25 15:59:04,closed,Fixed adjoined overlay,"Fix for https://github.com/ioam/holoviews/pull/1663, overlaid adjoined histograms now handled correctly:

![image](https://user-images.githubusercontent.com/1550771/30775562-f62cef62-a08d-11e7-91da-00adf60dd349.png)
",2,2,"['type: bug', 'tag: backend: mpl']"
1475,142716819,1915,19542768,2017-09-23 14:56:56,2017-09-25 20:44:27,closed,Switched to Whisker and Band glyphs for ErrorBars and Spread,"Bokeh introduced glyphs for errorbars and confidence bands a while ago, which both look better and are more efficient than the ``multi_line`` and ``patches`` implementation we were using previously. Since the categorical overhaul this is also the only way these elements will work with categorical axes.

Fixes: https://github.com/ioam/holoviews/issues/1893

Old ErrorBars:

<img width=""306"" alt=""screen shot 2017-09-23 at 3 54 35 pm"" src=""https://user-images.githubusercontent.com/1550771/30774247-8f4f7708-a077-11e7-91b3-12a5a267f2b0.png"">

New ErrorBars (note the addition of whiskers):

<img width=""306"" alt=""screen shot 2017-09-23 at 3 54 46 pm"" src=""https://user-images.githubusercontent.com/1550771/30774248-8f69ebe2-a077-11e7-882d-3bd9b194cc23.png"">

Old Spread:

<img width=""306"" alt=""screen shot 2017-09-23 at 3 56 10 pm"" src=""https://user-images.githubusercontent.com/1550771/30774262-c36aebf8-a077-11e7-8e00-f570053283ae.png"">

New Spread (note the lack of border lines one left and right):

<img width=""300"" alt=""screen shot 2017-09-23 at 3 55 42 pm"" src=""https://user-images.githubusercontent.com/1550771/30774266-cc0d2c08-a077-11e7-9104-462b8acdd222.png"">
",3,3,['tag: backend: bokeh']
1476,142709387,1914,19542768,2017-09-23 10:37:26,2017-09-25 22:39:37,closed,Improved stream resolution to allow collapsed (Nd)Overlays,"The code that resolves which plot to attach a linked stream to previously gave up when some part of the graph reduces an (Nd)Overlay by one or more layers since it cannot easily determine which layers were dropped. However in the case of operations that collapse multiple input layers into a single layer, e.g. the new datashader stack operation which combines multiple RGBs into one, there is no ambiguity since information from all the input layers persists. This means that an operation like this:

```python
stream = [RangeXY()]
stack(datashade(points1, streams=[stream]) * datashade(points2, streams=[stream]))
```

now correctly resolves the linked stream and therefore responds to zoom events. In order to provide more flexibility I've also exposed the ``link_inputs`` argument on the ``DynamicMap.map`` method in case linking is not desired.

Here's an example:

![collapse_streams](https://user-images.githubusercontent.com/1550771/30772508-c76f6d8c-a054-11e7-912c-33526c2beed6.gif)

```
   Points              Points
     |                   |
 datashade           datashade
     |                   |
    RGB ----- * ------- RGB
              |
           Overlay          <-- Previously gave up resolving streams here
              |      ^
            stack    |
              |      |  Direction of resolution
             RGB     |
```",4,3,[]
1477,142691231,1913,19542768,2017-09-23 00:15:44,2017-09-25 15:56:56,closed,Fixed bug defining grouped bar categories,Small bug introduced when adding compatibility for new bokeh categorical features.,2,1,"['type: bug', 'tag: backend: bokeh']"
1478,142691187,1912,19542768,2017-09-23 00:15:05,2017-09-23 11:13:27,closed,Fixed py3 bug in Stream.subscribers,Fixes https://github.com/ioam/holoviews/issues/1887,1,1,['type: bug']
1479,142690884,1911,19542768,2017-09-23 00:10:40,2017-09-23 10:29:46,closed,Fixed bug in array interface groupby,Caught a bug in the ArrayInterface groupby implementation and added a test.,3,1,"['type: bug', 'tag: component: data']"
1480,142414387,1908,19542768,2017-09-21 18:32:46,2017-09-26 11:22:49,closed,Add stack operation for compositing RGBs,Wraps around the datashader stack operation adding support for compositing multiple RGBs one of the defined compositor operations. The operation takes an Nd(Overlay) of RGBs as input and spits out a single composited RGB.,26,5,['type: feature']
1481,142379497,1907,19542768,2017-09-21 15:47:39,2017-09-23 11:14:06,closed,Add support for datashader Graph layouts,The ``layout_nodes`` operation now supports datashader LayoutAlgorithm functions and allows returning a Graph containing the newly computed node positions.,6,3,[]
1482,142315465,1905,19542768,2017-09-21 11:03:42,2017-09-21 12:12:31,closed,Optimized Path update with static_source,When a static element is updated in a DynamicMap ``get_data`` on the plot is still called which can be fairly slow for large paths. This prevents the path coordinates to be unpacked unnecessarily. For example in this [census gerrymandering example](https://anaconda.org/jbednar/census-hv-dask/notebook) it saves about 600ms per update.,5,1,['tag: backend: bokeh']
1483,142229406,1902,19542768,2017-09-21 00:00:57,2017-09-21 01:07:02,closed,Fixed Graph selection using edge information,"Fixes an oversight, where selecting a Graph by edge information would leave nodes unfiltered.",1,1,['type: bug']
1484,142222871,1901,19542768,2017-09-20 23:05:52,2017-09-21 01:07:47,closed,Datashade paths interface fix,When introducing the path interface I did not update the datashade operation. This adds that support. I also included an inline import for ``hammer_bundle`` to ensure it raises an exception when dependencies are not met.,1,3,[]
1485,142151872,1900,19542768,2017-09-20 16:58:44,2017-09-20 21:20:54,closed,Fixed regression in bokeh 0.12.9 compatibility,"In a recent commit I broke compatibility with bokeh 0.12.9, tiny fix to restore it.",1,1,[]
1486,141998808,1899,19542768,2017-09-20 02:42:59,2017-09-20 11:22:00,closed,Widget throttling fix,"The widget event throttling code was an odd mixture of an old approach and the newer approach we use elsewhere, this switches fully to the new approach which blocks until Python sends back a complete message. I've also tidied up the rest of the code a fair bit removing old, dead code and fixing indentation.",2,2,[]
1487,141935325,1896,19542768,2017-09-19 19:24:10,2017-09-20 10:36:16,closed,Bokeh protocol improvements,"Three small fixes to improve event handling with bokeh protocol:

* Place hold on Document after adding root (avoid RootAdded events)
* Avoid sending updates without events entirely
* Only update colormapper if attributes have changed (avoid ModelChanged events and glyph redraws)",2,3,['tag: backend: bokeh']
1488,141673340,1894,19542768,2017-09-18 18:35:25,2017-09-19 10:55:28,closed,Support for using bokeh protocol in the notebook including binary transfer,"The https://github.com/bokeh/bokeh/pull/6945 PR adds support for sending bokeh events in the notebook using the regular bokeh protocol. This means we can now take advantage of binary transfer for arrays providing a ~5x speedup, which is particularly noticeable for images. Additionally this will allow us to dynamically add new glyphs to a plot, which means a DynamicMap will be able to return varying numbers of layers with a bit of work.

For now I've left in support for the old way of generating JSON patches and moved some small deprecated bokeh functions into holoviews, as it's not quite clear to me yet whether we can use the protocol for statically embedded data.",4,4,"['type: feature', 'tag: backend: bokeh']"
1489,141206579,1889,19542768,2017-09-15 00:39:43,2017-09-15 15:20:37,closed,Fix for the removal of the notebook_type argument in bokeh,Tiny PR for bokeh compatibility after the removal of the ``notebook_type`` argument since bokeh 0.12.9 (i.e current bokeh dev).,1,1,[]
1490,140919972,1884,19542768,2017-09-13 20:17:27,2017-09-13 23:09:55,closed,v1.8.4 hotfix release,This PR squashes the cherry picked commits on the release_1.8.4 branch (a temporary branch that will be deleted) in order to make a 1.8.4 hotfix release.,2,4,[]
1491,140881160,1883,19542768,2017-09-13 17:08:12,2017-09-13 18:19:41,closed,Fixes for Bounds streams on bokeh server,"Add support for using the Bounds streams on bokeh server by making use of the ``selectiongeometry`` events added in bokeh 0.12.7, addressing issue https://github.com/ioam/holoviews/issues/1790. (@timothydmorton if you have time to test this that would be greatly appreciated).  ",2,1,['tag: backend: bokeh']
1492,140871675,1882,19542768,2017-09-13 16:22:36,2017-10-01 16:49:50,closed,Handle positive and negative bar stacks,Correctly handles mixed positive and negative stacked bars as requested in https://github.com/ioam/holoviews/issues/1709.,4,7,"['type: bug', 'tag: backend: bokeh']"
1493,140852213,1881,19542768,2017-09-13 15:04:59,2017-09-13 16:40:03,closed,Fixed incorrect scoping bug in widget template,Fixes https://github.com/ioam/holoviews/issues/1871 addressing an issue with the scope of the widget value and label variables.,2,1,['type: bug']
1494,140594704,1878,19542768,2017-09-12 14:27:01,2017-09-13 11:31:51,closed,Fixed bug regridding RGB/HSV types,"Fixes https://github.com/ioam/holoviews/issues/1857, ensuring that RGB and HSV types can be regridded correctly.",2,2,['type: bug']
1495,140545730,1877,19542768,2017-09-12 10:43:57,2017-09-12 17:52:55,closed,Ensure that title_format plot option is inherited by OverlayPlot,"As outlined in https://github.com/ioam/holoviews/issues/1859, the ``title_format`` plot option should be propagated upwards to the OverlayPlot so that it is not ignored when overlaying an Element.",1,1,['tag: backend: bokeh']
1496,140544941,1876,19542768,2017-09-12 10:39:53,2017-09-13 10:41:25,closed,Cleaned up Element range handling,"As described in https://github.com/ioam/holoviews/issues/1870, QuadMesh is currently not handling explicitly set dimension ranges. This PR adds a utility to combine the data range with the dimension ranges and uses it in various Element.range implementations.",4,1,"['type: bug', 'tag: component: data']"
1497,140542847,1875,19542768,2017-09-12 10:29:04,2018-05-28 21:23:24,closed,Added support for initial_hooks to bokeh,Matches the initial_hooks plot option that we've had in matplotlib for a long time.,3,1,"['type: feature', 'tag: backend: bokeh']"
1498,140542376,1874,19542768,2017-09-12 10:26:38,2017-09-12 17:48:01,closed,Fixed bug inverting categorical axes,"The ``_get_factors`` returns the categorical factors for the axes and inverts them if ``invert_axes=True``. Since coords is a generator inverting it requires that it is a tuple or list not a generator, simple but important fix.",1,1,"['type: bug', 'tag: backend: bokeh']"
1499,140541566,1873,19542768,2017-09-12 10:22:34,2017-09-12 17:46:11,closed,Fixed wrongly inherited code on Pointer callbacks,The PointerX and PointerY callbacks are wrongly inheriting JS code that is meant only for the PointerXY callback.,1,1,"['type: bug', 'tag: backend: bokeh']"
1500,140540554,1872,19542768,2017-09-12 10:17:26,2017-09-13 18:27:05,closed,Correctly handle invert_x/yaxis options on Image/RGB,"As reported in https://github.com/ioam/holoviews/issues/1853 (although that's not the right issue), Image and RGB currently do not handle the invert_xaxis and invert_yaxis options correctly.",2,1,"['type: bug', 'tag: backend: bokeh']"
1501,140451247,1866,19542768,2017-09-11 22:39:59,2017-09-12 17:44:57,closed,Compatibility for bokeh 0.12.8 document changes,Compatibility for latest changes to Document. Bokeh will be replacing current implementation for notebook comms completely in coming releases so we'll have likely have to overhaul our code entirely. For now this maintains compatibility for updating bokeh plots.,2,1,[]
1502,140358709,1865,19542768,2017-09-11 15:05:44,2017-09-11 15:08:08,closed,Fix for bokeh BoxWhiskerPlot category factor handling,Fixes bug in bokeh BoxWhiskerPlot when one categorical dimension is used.,1,1,"['type: bug', 'tag: backend: bokeh']"
1503,139217704,1850,19542768,2017-09-04 23:39:58,2017-09-07 04:16:05,closed,Added separate color_key for datashader shade to use color cycle by default,"PR https://github.com/ioam/holoviews/pull/1697 changed the default cmap for datashader's ``shade()`` operation to ""fire"".  @philippjfr wanted this replace datashader's default blue ``cmap``, but it also replaced datashader's default ``color_key`` of Sets1to3, causing all categorical datashded output to be mapped to the first few colors of the fire colormap, which all look nearly identical  (as reported in #1834).  

The original behavior for categories can be restored by explicitly passing ``Sets1to3`` to ``shade.cmap`` whenever a category is used, but that's awkward and mysterious; the defaults should not be covering up categories. 

This PR adds a separate ``color_key`` parameter, defaulting to None (and thus falling through to Sets1to3), leaving ``cmap`` at the default ``fire`` value for now. 

Personally, I think ``cmap`` should not be defaulting to ``fire`` either, because ``fire`` is intended only for black backgrounds, and the Bokeh defaults consistently use white backgrounds. So I wonder whether we should remove the ""fire"" default?  E.g. if we set ``shade.cmap=""#30a2da""``, we get behavior that is similar to the non-datashaded colors used by hv/bokeh:

![image](https://user-images.githubusercontent.com/1695496/30040131-6038b62c-91a0-11e7-806f-ac8f196f0a65.png)

It's not very pretty, but seems better than fire:

![image](https://user-images.githubusercontent.com/1695496/30040121-3d638fc8-91a0-11e7-92a0-b6253c5f8efb.png)
",3,1,['tag: API']
1504,139153166,1849,19542768,2017-09-04 13:01:46,2017-09-04 16:53:34,closed,Fixes for changes to categorical handling in bokeh 0.12.7,"Addresses https://github.com/ioam/holoviews/issues/1839 by adding support for the new categorical handling to bokeh Bar plots.

Old Bars:

<img width=""304"" alt=""screen shot 2017-09-04 at 2 00 35 pm"" src=""https://user-images.githubusercontent.com/1550771/30027581-7947862e-9179-11e7-847c-0885100009a6.png"">

New Bars:

<img width=""304"" alt=""screen shot 2017-09-04 at 2 14 29 pm"" src=""https://user-images.githubusercontent.com/1550771/30028056-68c1d730-917b-11e7-8d2b-63482602ff7c.png"">

Old BoxWhisker:

<img width=""613"" alt=""screen shot 2017-09-04 at 2 15 04 pm"" src=""https://user-images.githubusercontent.com/1550771/30028068-7aa3988a-917b-11e7-97b4-f2b705c7015d.png"">

New BoxWhisker:

<img width=""607"" alt=""screen shot 2017-09-04 at 2 12 14 pm"" src=""https://user-images.githubusercontent.com/1550771/30028073-8156aafa-917b-11e7-96be-7befe21125aa.png"">",4,5,['tag: backend: bokeh']
1505,139147012,1848,19542768,2017-09-04 12:26:52,2017-09-04 15:01:00,closed,Bugs in bokeh Arrow implementation.,When the number of Arrow Elements in an NdOverlay exceeds the ``legend_limit`` this condition would generate an error.,1,1,"['type: bug', 'tag: backend: bokeh']"
1506,139065613,1845,19542768,2017-09-03 23:15:57,2017-09-04 12:14:30,closed,Disable reorderable option on bokeh TablePlot,"Fixes #1844, which is a compatibility issue with bokeh 0.12.7 caused by removing jQuery-UI from bokeh. Disabling reordering which isn't hugely useful anyway fixes it.",1,1,['tag: backend: bokeh']
1507,139060833,1843,19542768,2017-09-03 20:35:06,2017-09-04 12:13:40,closed,Added support for reverse sort of tabular data,"Add support for reverse sort to tabular interfaces as requested in https://github.com/ioam/holoviews/issues/1167. Adds a ``reverse`` argument to the ``Dataset.sort`` method, alternatively could rename it ``ascending``.",3,2,"['type: feature', 'tag: API']"
1508,139058389,1842,19542768,2017-09-03 19:17:14,2017-09-03 19:57:16,closed,fix for Matplotlib-2.1.0rc1,"AnchoredText unused import was removed from mpl_toolkit by https://github.com/matplotlib/matplotlib/commit/efb3f5ad446c3172eaf0af3343d3cc74e37c2c79.

 fix https://github.com/ioam/holoviews/issues/1840",3,1,['tag: backend: mpl']
1509,139057220,1841,19542768,2017-09-03 18:40:31,2017-09-03 20:08:10,closed,Completely remove NdElement,We originally added a deprecation warning whenever an NdElement is constructed in v1.7. Removing it as part of v1.9 therefore seems safe. Will be very glad to finally be rid of it.,2,1,['tag: component: data']
1510,138676784,1836,19542768,2017-08-31 14:09:16,2017-10-31 22:37:43,closed,Histogram improvements,Cleaned up and made various outstanding fixes for PR https://github.com/ioam/holoviews/pull/1784.,8,15,[]
1511,138458355,1832,19542768,2017-08-30 15:31:06,2017-08-31 13:14:57,closed,Fixed scrubber bug and add support for discrete DynamicMap scrubber,"Addresses https://github.com/ioam/holoviews/issues/1567 fixing a bug in the way scrubber handled looping. Additionally also adds support for using the scrubber when a DynamicMap defines ``values`` for all its dimensions, which effectively makes it discrete and therefore the same as a Holomap.",4,10,['type: bug']
1512,137984446,1829,19542768,2017-08-28 16:22:23,2017-09-20 20:35:55,closed,Graph support,"Based on the discussion @jlstevens and I had during SciPy sprints this PR adds a Graph Element to HoloViews. The outline below represents the discussion surrounding the API we had:

# Terminology

Graph: Element that *may* or may not visualize itself.
Nodes: Element associating indices to positions and other information. Self-visualizing.
NodePaths: dataframe of connectivity information. Self-visualizing.

### Graph - Composite Element

- Can be abstract
- .data represents the abstract graph (i.e. start and end pairs of node indices)
- Can be visualized by a bokeh layout algorithm as a plot option.
- Can be visualized with straight line connections if given Nodes.
- Can be visualized with arbitrary paths if given NodePaths.

*data*: start and end columns (where start and end are the node indices)
*kdims*: [start, end]
*vdims*: [edge label and other metadata]

### Nodes

Defines concrete position of each node using three columns/kdims, x/y position plus node index/label. Any value dimensions will be exposed as hover labels.

*data*: x,y positions + node index + anything else
*kdims*: [x, y, index]
*vdims*: [anything else (used as hover labels)]

### NodePaths

Subclass of ``Path`` using multi-interface representing the concrete paths

*data*: [ dfs/array, ... ]
*kdims*: [x, y]
df/array: [xs,ys] Defines the path for each edge defined in abstract Graph

## Graph Constructors

Graph(edges)  - Abstract graph (cannot be displayed).
Graph((edges, nodes)) - Defines concrete node positions 
Graph((edges, nodes, nodepaths)) - Define concrete node positions and concrete paths for edges connecting paths

## Graph attributes

* .data - exposes just the abstract graph (i.e. start and end connections)
* .nodes - exposes concrete nodes
* .nodepaths - Computed automatically from .nodes (direct connections) or returns explicitly supplied paths.

# ToDo

* [x] Add matplotlib plotting code
* [x] Add user guide
* [x] Provide control over inspect and hover policy in bokeh
* [x] Add better support for hover information
* [x] Add gallery examples
* [x] Add tests
",15,60,['type: feature']
1513,137699644,1826,19542768,2017-08-25 15:32:38,2017-08-31 15:29:13,closed,Ensure BoundsXY stream callback is registered,"Addresses https://github.com/ioam/holoviews/issues/1789 by registering the BoundsXY stream, which wasn't registered due to an oversight after renaming the stream.",2,1,"['type: bug', 'tag: backend: bokeh']"
1514,137558385,1825,19542768,2017-08-24 21:43:42,2017-08-28 16:41:55,closed,Fix code typo in example notebook,,8,1,[]
1515,137494346,1824,19542768,2017-08-24 16:16:16,2017-08-31 14:12:07,closed,Fix warning.,"As far as I know, there's no `param.warning()`. Also there's a missing argument.

I'm not hugely familiar with param's logging since it was switched to use python's stdlib logging, so I might be wrong. Or maybe holoviews does something to make there be a `param.warning()`? When I grepped for other occurrences, I found this:

```
tests/__init__.py:        self.param_methods = {'WARNING':'param.warning()',
```

If you can explain what that's about (I can't run the tests for hv in any useful way right now...but that's another story), I could check for and fix any other occurrences of param.warning(), message(), etc.

Meanwhile, I also noticed that holoviews tends to do `parameterized_object.warning(""message %s""%x)`; I just wanted to point out that param's logging allows you to avoid processing strings that will not be shown:

```
    def warning(self,msg,*args,**kw):
        """"""
        Print msg merged with args as a warning, [...]
```

That could in some circumstances be important, because maybe `x` is something with an expensive-to-compute repr. Probably that would never be an issue in holoviews, but thought it was worth mentioning (because the reason's not documented in param as far as I know...).
",4,1,[]
1516,136833599,1817,19542768,2017-08-21 20:11:54,2017-08-21 20:48:04,closed,Ensure nested Overlays correctly merge hover tools,Addresses https://github.com/ioam/holoviews/issues/1815 by ensuring that nested OverlayPlots correctly merge their HoverTool instances.,3,1,"['type: bug', 'tag: backend: bokeh']"
1517,136764482,1814,19542768,2017-08-21 13:54:39,2017-08-21 20:37:57,closed,Define bokeh slider start values,"In bokeh 0.12.6 the slider start value would simply default to the supplied value, in bokeh 0.12.7 this causes an error so this fix is required for compatibility.",1,1,['tag: backend: bokeh']
1518,136650855,1813,19542768,2017-08-20 17:15:59,2017-08-21 13:44:53,closed,Add sizing_mode plot option to bokeh backend,"Allows specifying sizing_mode options other than ""fixed"", which is primarily useful when creating apps.",2,2,['tag: backend: bokeh']
1519,136529631,1811,19542768,2017-08-18 17:38:54,2019-02-23 15:40:48,closed,Preprocessor improvements,This PR aims to improve the nbconvert preprocessors from notebook to vanilla Python. This will make it easier to use notebooks together with bokeh server.,4,4,[]
1520,136493637,1810,19542768,2017-08-18 14:34:05,2017-08-18 16:00:56,closed,BokehRenderer in server mode attaches curdoc automatically,Ensures that bokeh's curdoc is attached to the plot in server mode which is required for linked streams to communicate correctly.,2,1,['tag: backend: bokeh']
1521,136484076,1809,19542768,2017-08-18 13:50:42,2017-08-18 14:22:56,closed,Fixed jinja templating when logo=False,"Minor fix to address #1797.

One annoyance I don't know how to fix yet is the vertical whitespace above the logo. Here are the divs responsible but I don't know what is generating them:

![image](https://user-images.githubusercontent.com/890576/29461637-4dc19f42-8424-11e7-84a4-84e7de82297e.png)

@philippjfr If you don't have any ideas how to fix that whitespace, this PR is ready to merge.
",2,1,[]
1522,135613516,1806,19542768,2017-08-14 14:45:54,2017-08-15 12:27:08,closed,Correctly register empty stream sources,Fixes small bug registering stream source for empty element.,1,1,[]
1523,135477607,1805,19542768,2017-08-13 00:41:09,2017-08-21 20:40:55,closed,Docs and minor code fixes,"struggled with git, hope I did not mess up too badly:
Minor documentation changes to improve readability.",4,52,['tag: docs']
1524,135098291,1804,19542768,2017-08-10 11:07:43,2017-08-10 12:06:34,closed,Replaced deprecated VBox and HBox imports,VBox and HBox were deprecated a while back and have been removed in 0.12.7dev so I've just replaced them Row/Column which is what they were aliasing.,2,1,['tag: backend: bokeh']
1525,134880798,1798,19542768,2017-08-09 12:29:54,2017-10-09 19:52:55,closed,Added support for live streaming with a DataStream,"Initial prototype for a special stream type that allows live streaming of data. Mostly opened for discussion.

A simple example looks like this:

![curve_stream](https://user-images.githubusercontent.com/1550771/29121763-c715e0f2-7d07-11e7-9d7f-10c1f7fee166.gif)
",1,1,"['type: feature', 'tag: API', 'type: discussion']"
1526,134555132,1796,19542768,2017-08-08 00:47:03,2017-08-11 16:32:11,closed,Removal of dead links to tutorials in examples,"After this PR, the word 'tutorial' no longer appears in any of the ``examples/`` notebooks. A lot of links to the old tutorials were fixed and replaced to the corresponding user guide links.",3,8,['tag: docs']
1527,134310061,1792,19542768,2017-08-06 00:45:02,2017-08-08 21:53:13,closed,Periodic utility now stops when StopIteration is raised,"What is hopefully a simple fix to stop the periodic utility automatically when ``StopIteration`` is raised e.g when using a generator in a ``DynamicMap``.

I understand why you might want to skip ``KeyError`` in ``get_plot_frame`` but I don't get why it is blocking all exceptions and simply printing them. For now I am just catching ``StopIteration`` specifically and re-raising those exceptions. 

@philippjfr Why can't exceptions other than ``KeyError`` be left alone and allowed to bubble up?",2,1,[]
1528,134181826,1788,19542768,2017-08-04 14:36:33,2017-08-04 15:32:10,closed,Converted CHANGELOG to markdown,"Now we have converted the README to markdown, it seems consistent to do the same with the CHANGELOG. In this PR, I used pandoc to do the conversion.

Note that the links are *not* longer than necessary as markdown documents in the repo don't support the short linking to issues and PRs (e.g #1596) that you can use in github comments.",2,3,[]
1529,134087514,1784,19542768,2017-08-04 04:12:07,2017-08-31 14:10:33,closed,Improvements to histogram,"Two updates to the histogram operation:

- Implemented the change suggested in #1776.  Caveat here is that I don't actually like the label being 'x Frequency' or 'y Frequency'; I suggest that when #1783 is fixed, the label should switch back to 'Frequency'.  
- Added a `height_normed` parameter.  This allows histograms to normalize their frequencies to unity, which is useful when overlaying two histograms that have significantly different frequency magnitudes.",26,33,[]
1530,134048544,1782,19542768,2017-08-03 21:44:12,2017-08-03 23:07:36,closed,Fixes to setup.py for pip install,PR to try and address #1734 and #1659.,4,4,[]
1531,133926042,1779,19542768,2017-08-03 11:55:03,2017-08-03 18:39:44,closed,Enabled warnings about the use of __call__ on travis,This change should help us detect uses of ``__call__`` for styling (now deprecated).,18,9,[]
1532,133806936,1778,19542768,2017-08-02 20:57:33,2017-08-02 23:48:56,closed,HTML fix in logo for export,"PR to address #1769. The current commit (removing inner divs) fixes the export. The problem is that the logos now look like this:

![image](https://user-images.githubusercontent.com/890576/28894592-3515bbda-77cd-11e7-9e43-620970ad7f0e.png)

As opposed to the previous arrangement that was:

![image](https://user-images.githubusercontent.com/890576/28894554-0f220ca8-77cd-11e7-93f3-d7a9ea03d2ea.png)

With all three logos, it now looks like:

![image](https://user-images.githubusercontent.com/890576/28894670-6cec2e2c-77cd-11e7-9aeb-96a269298b98.png)

Which I don't quite like as much but either way, fixing the export is far more important than the arrangement of the logos!",2,2,[]
1533,133447560,1773,19542768,2017-08-01 11:14:34,2017-08-04 19:59:22,closed,Added datashader regridding operation,"As suggested and outlined in https://github.com/ioam/holoviews/issues/1552 this PR adds a ``regrid`` operation that allows dynamically downsampling and upsampling HoloViews Image, RGB and HSV types to a specified x_range, y_range, width and height. It closely mirrors the ``aggregate`` operation but operates on Images instead. I introduced a common baseclass for the two operations and have started using it in various projects. It will require some further cleanup, decisions on naming and documentation but is now fully functional.",11,14,['type: feature']
1534,133092404,1765,19542768,2017-07-29 13:13:26,2017-07-31 23:15:40,closed,Docs and minor code fixes,"I made the changes suggested in #1696 that I was comfortable with.
I left out changes that would modify the structure of the documents.",8,11,[]
1535,132753479,1763,19542768,2017-07-27 13:50:28,2017-07-27 20:10:29,closed,Add opts in doc 2,"Cleaner version of https://github.com/ioam/holoviews/pull/1760, which inadvertently picked up https://github.com/ioam/holoviews/pull/1759 during a rebase.",1,2,[]
1536,132651476,1760,19542768,2017-07-27 02:07:30,2017-07-27 13:49:54,closed,Replace (...) with .opts(),"* Complements https://github.com/ioam/holoviews/pull/1759
* Execute `git grep -lE '\)\((style|plot|norm)=' -- examples | xargs  perl -pi -e 's/\)\((style|plot|norm)=/).opts($1=/g'`
* Spot check notebooks",5,3,[]
1537,132647238,1759,19542768,2017-07-27 01:18:10,2017-07-27 12:33:19,closed,Docs and minor code fixes,"hope this works:
changed ``__call__`` to .opts() in 3 files",2,3,[]
1538,132366930,1752,19542768,2017-07-25 20:00:53,2017-07-25 22:53:54,closed,Cleaned up first two user guides,"Did a full pass over the first two guides, cleaning up the descriptions, fixing typos, and improving some of the examples.",1,2,[]
1539,131952549,1746,19542768,2017-07-23 23:09:07,2017-10-04 16:00:21,closed,Switched from deprecated GridImage to Image in conversion interface,Simple PR to address some of the issues in #1745. Fixes to the image conversion interface should probably go into this PR too.,3,1,[]
1540,131660125,1740,19542768,2017-07-20 22:03:25,2018-02-09 03:14:19,closed,Initial prototype of triggering with stream parameter hooks,"This is a prototype of an idea I had during the SciPy 2017 sprints that would let us relax the requirement for ``constant=True`` for stream parameters.

The reason stream parameters should always be declared constant currently is that stream parameter should *only* be changed via the ``event`` and ``update`` interfaces to ensure clean semantics regarding event triggering: the expectation is that changes to stream parameters trigger updates to the corresponding visualization.

This PR is linked to PR 178 in param (https://github.com/ioam/param/pull/178) which allows parameter setting to always call trigger:

![image](https://user-images.githubusercontent.com/890576/28440505-79be1f5e-6d9e-11e7-8aac-9b256b179e1e.png)

Note that this is a prototype and I still feel there are some open questions:

1. How useful is this in practice? To use this I need to keep a handle on my stream instance.
2. Will opening up a new way of using streams be helpful of cause confusion? What is the advantage of this over using ``dmap.event``? Is this just syntactic sugar and is that a good justification?
3. This syntax is always unbatched (one trigger per parameter changed).

Having to keep a stream handle is annoying in particular, which is why I prefer ``dmap.event``. What I can imagine doing is making ``dmap.event`` into an object with a ``__call__`` method (behaves as normal) but that supports the same setting syntax for *all* stream parameters on the dynamicmap e.g:

```python
dmap.event(x=0, y=1,custom=4) # Batched but the unbatched equivalents also work:
dmap.event.x = 0
dmap.event.y = 1
dmap.event.custom = 4
```

The fact that the new syntax is unbatched also worries me. Setting multiple parameter is best done using ``dmap.event()`` which batches the changes together. In other words, the proposed syntax is only a good replacement for ``dmap.event()`` when setting a single parameter.


",4,1,['type: feature']
1541,131645958,1739,19542768,2017-07-20 20:43:46,2017-07-31 12:23:46,closed,Fixed clone on NdLayout to propagate cols properly,"PR title explains the change. My only worry is why does the ``id`` need to be copied across, doesn't super handle that?",4,1,['type: bug']
1542,130770930,1733,19542768,2017-07-16 23:41:01,2017-07-17 20:54:37,closed,Added missing import.,,1,1,[]
1543,130731854,1732,19542768,2017-07-15 22:29:45,2017-07-16 23:31:03,closed,Ensure dask.array is imported,"Simple fix to ensure dask.array is actually imported, fixing issue described in

https://github.com/ioam/holoviews/issues/1710",1,1,"['type: bug', 'tag: component: data']"
1544,130699851,1730,19542768,2017-07-15 02:11:19,2017-07-15 04:24:45,closed,Fix spelling for strings and comments,,1,1,[]
1545,130626301,1725,19542768,2017-07-14 16:31:18,2017-07-15 22:02:07,closed,Added a groupby argument to the histogram operation,"As suggested in https://github.com/ioam/holoviews/issues/1716 we should have an easier way to generate a grouped/faceted histogram. The current approach is as follows:

```
hv.Dataset(autompg).groupby('cyl').hist(dimension='mpg', adjoin=False).overlay()
```

For simplicities sake I suggest adding this:

```
hv.Dataset(autompg).hist(dimension='mpg', groupby='cyl', adjoin=False)
```

OR

```
histogram(hv.Dataset(autompg), dimension='mpg', groupby='cyl')
```

![bokeh_plot 90](https://user-images.githubusercontent.com/1550771/28221199-feb68a14-6887-11e7-9f33-e052dd84f007.png)


Going to add gallery demos before this is ready to merge.",5,2,['type: feature']
1546,130620776,1724,19542768,2017-07-14 16:01:31,2017-07-15 22:10:05,closed,Define default group on Dataset,Simple oversight which results in some bad behaviors when inheriting the groups for some operations.,1,1,[]
1547,130619458,1723,19542768,2017-07-14 15:54:40,2017-09-29 15:11:53,closed,Automatically sort Dataset dictionary input,"Addresses https://github.com/ioam/holoviews/issues/1714, when passing a standard python dictionary to a Dataset the data is now sorted automatically.",3,1,['tag: component: data']
1548,130055007,1712,19542768,2017-07-12 04:52:18,2017-07-12 04:52:59,closed,Merge pull request #1 from ioam/master,Update from original,0,1,[]
1549,129789792,1711,19542768,2017-07-10 22:45:11,2017-07-14 15:42:35,closed,Table finalize hook fix and example,One solution to https://github.com/ioam/holoviews/issues/1708,4,3,['tag: backend: bokeh']
1550,129760148,1705,19542768,2017-07-10 19:55:49,2017-07-11 19:55:25,closed,"fix typos ""{X,Y}Bounds"" -> ""Bounds{X,Y}""",,4,2,[]
1551,129393702,1700,19542768,2017-07-07 12:26:53,2017-07-07 14:01:52,closed,Updated search ordering when looking for holoviews.rc,"
Addresses #1689.",4,2,[]
1552,129389879,1699,19542768,2017-07-07 12:02:09,2017-09-29 11:25:04,closed,Fixes to the SRI model notebook,Addresses #1684. The fix that worried me most is that ``key_dimensions`` didn't work when ``kdims`` did.,1,1,[]
1553,129384714,1697,19542768,2017-07-07 11:27:52,2017-07-07 11:53:35,closed,Set default datashader cmap to fire,"Simple change, the default defined by datashader isn't great.",2,1,[]
1554,129316258,1695,19542768,2017-07-07 02:08:41,2017-07-07 13:20:48,closed,Added safety margin for grid axis constraint issue,"Once again fixes https://github.com/ioam/holoviews/issues/1675, several constraints seem to have been off by exactly 1 pixel. This adds a safety margin of 10 pixels. As the issue already states we need to find a better way to deal with this.",0,1,"['type: bug', 'tag: backend: bokeh']"
1555,129313077,1694,19542768,2017-07-07 01:31:06,2017-07-07 01:36:39,closed,All enabled plotting extension logos now shown,"
Examples:

![image](https://user-images.githubusercontent.com/890576/27939377-262f13e4-62bc-11e7-9407-87238b389ee5.png)
![image](https://user-images.githubusercontent.com/890576/27939384-3149bdd8-62bc-11e7-86ea-03d81ea8bcf8.png)
![image](https://user-images.githubusercontent.com/890576/27939394-3db4827e-62bc-11e7-9e0e-aa783a42d886.png)
![image](https://user-images.githubusercontent.com/890576/27939407-4eb09d7e-62bc-11e7-87ba-04e94f8fc786.png)

",2,1,[]
1556,129312575,1693,19542768,2017-07-07 01:24:45,2017-09-25 15:57:47,closed,Fixed colormapping of adjoined histogram in matplotlib,"Fixes bug mentioned in #1663 

![image](https://user-images.githubusercontent.com/1550771/27939243-6026a2fc-62bb-11e7-8d06-2196e6f422d2.png)

Histogram now correctly determines if it should be colormapped or not.",5,1,"['type: bug', 'tag: backend: mpl']"
1557,129306938,1692,19542768,2017-07-07 00:17:06,2017-07-07 00:22:52,closed,Fixed link to reference gallery on hv.org.,,1,1,[]
1558,129306155,1691,19542768,2017-07-07 00:08:43,2017-07-07 11:22:50,closed,Handled bokeh log axes with axis lower bound <=0,"Addresses https://github.com/ioam/holoviews/issues/1679. If the range lower bound is <= 0, it uses a lower bound of 0.01 unless the upper bound is <0.01, in which case it backs up to a value one decimal point lower than the upper value.",4,1,[]
1559,129300369,1690,19542768,2017-07-06 23:13:26,2017-07-07 00:05:35,closed,User guide 01 and 02 fixups,"First pass through 01 and 02.

Note that I have changed some example code, and I have potentially changed the meanings of some sentences. But no reorganization.",2,6,[]
1560,129205283,1687,19542768,2017-07-06 14:51:08,2017-07-06 19:49:28,closed,Raise SkipRendering error when plotting nested layouts,Adds a SkipRendering error when trying to display a Layout of NdLayouts. Fixes https://github.com/ioam/holoviews/issues/1678,2,1,[]
1561,129196185,1686,19542768,2017-07-06 14:15:01,2017-07-06 20:28:46,closed,Make NdMapping slice lower bound always be inclusive ,"Fixes a longstanding bug when slicing NdMapping types. When slicing an NdMapping without an upper bound on the slice the lower bound was exclusive for some reason, which is inconsistent with our documentation and what happens when upper bound is supplied.",2,1,['type: bug']
1562,129192091,1685,19542768,2017-07-06 13:57:36,2017-07-06 14:46:25,closed,LabelledData.map drops None values returned by map function,Discussion about why this fix is needed in https://github.com/ioam/holoviews/issues/1681,3,1,['type: bug']
1563,129082435,1683,19542768,2017-07-06 00:39:22,2017-07-07 00:57:03,closed,Choose better magic values for GridSpace plot label offsets,"The GridSpace plot has to appropriately expand the sizes of the axes when the label length changes. This code is never going to be perfectly robust but it appears the magic values I chose initially weren't very good and resulted in errors for even fairly short labels, as seen here:

https://github.com/ioam/holoviews/issues/1675

Tested the new values with GridSpaces of varying size, varying fontsize with tick labels ranging from 1 to 100 characters.",3,1,['tag: backend: bokeh']
1564,129078117,1682,19542768,2017-07-05 23:52:51,2017-07-06 14:45:56,closed,Fixed handling of Spacer models in sparse grid,"Fixes small bug handling ``Spacer`` models, which occur in sparse GridSpaces in bokeh. Fixes issue: https://github.com/ioam/holoviews/issues/1676",2,1,"['type: bug', 'tag: backend: bokeh']"
1565,128690611,1672,19542768,2017-07-03 20:32:37,2017-07-05 23:59:12,closed,Renamed Bounds to BoundsXY for consistency,PR title says everything other than the fact that ``Bounds`` still exists as an alias (with a deprecation warning).,2,1,[]
1566,128522089,1671,19542768,2017-07-02 14:16:41,2017-07-07 11:15:18,closed,Set SpikesPlot color index to None by default,"Before:

<img src='https://user-images.githubusercontent.com/890576/27770585-10d5e3a0-5f39-11e7-84c4-5040fb2fd0de.png' width='30%'></img>

After:


<img src='https://user-images.githubusercontent.com/890576/27770596-47f702ec-5f39-11e7-9a76-7887e6ddfc79.png' width='30%'></img>

I think this is a bug fix, not a style change as before a vdim was being mapped to both height *and* color when it should only be mapped to height.",3,5,[]
1567,128488303,1665,19542768,2017-07-01 13:18:25,2017-07-07 14:03:37,closed,Tweak user guides,"PR to tweak user guides.

@philippjfr The fact I have to use matplotlib for the continuous coordinates one is worrying...",1,2,[]
1568,128486153,1664,19542768,2017-07-01 11:48:53,2017-08-11 16:17:24,closed,Getting started guide tweaks,"PR to make small fixes to the getting started guide.

I'll update the online HTML manually to reflect the changes in the first two commits.",3,4,[]
1569,128452059,1663,19542768,2017-06-30 21:16:26,2017-09-29 15:11:31,closed,Added simpler .hist example,"The Histogram page in the Reference Gallery didn't have a simple example of using '.hist()', which is typically much more convenient than the complex example shown.  Added this simple example:

![image](https://user-images.githubusercontent.com/1695496/27754225-14f21ae8-5daf-11e7-9779-2384342f0893.png)

Works fine for Bokeh, but in mpl there is a strange colormap:

![image](https://user-images.githubusercontent.com/1695496/27754242-2bf9c434-5daf-11e7-833c-0e47ca42281f.png)

The last example on that page (not really modified in this PR)  is also aligned and sized very strangely for matplotlib, though it works fine for bokeh:

![image](https://user-images.githubusercontent.com/1695496/27754268-4174ff90-5daf-11e7-9e5f-7678ac5d642f.png)
",8,2,['type: bug']
1570,128425557,1662,19542768,2017-06-30 18:25:57,2017-07-07 11:20:11,closed,Fix broken website links,"PR to address the broken links, many of which are listed in #1650",5,6,[]
1571,128284247,1658,19542768,2017-06-30 02:25:36,2017-07-07 00:22:08,closed,Start matplotlib guide,"* follow intro style of bokeh guide
* copy some info from Exporting guide
* add new animated GIF example",5,1,[]
1572,128258658,1657,19542768,2017-06-29 22:12:41,2017-06-30 10:27:29,closed,Cleaned up changelog,,2,1,[]
1573,128228818,1656,19542768,2017-06-29 19:28:21,2017-06-29 19:33:21,closed,Added three very basic reference apps,,1,1,['tag: docs']
1574,128204558,1654,19542768,2017-06-29 17:21:12,2017-06-29 18:27:00,closed,Cleared kernelspec and metadata of all notebooks,Clears out unhelpful notebook metadata.,2,2,[]
1575,128199159,1653,19542768,2017-06-29 16:51:16,2017-06-29 16:53:02,closed,Tweaks to user guides,Main change is the reworked 'customizing plot' user guide.,1,3,[]
1576,128197217,1652,19542768,2017-06-29 16:41:23,2017-06-29 17:38:16,closed,Fixed bug in renderer size scaling for bokeh,"Since the plot sizes are defined ""inside out"" in bokeh (i.e. each component defines its own size) the size scaling should be applied on bokeh's ElementPlot unlike matplotlib where it can be applied on the renderer. Before this fix it was applied twice, which was obviously wrong.",3,1,"['type: bug', 'tag: backend: bokeh']"
1577,128194720,1651,19542768,2017-06-29 16:28:46,2017-11-01 12:44:59,closed,Added twitter feed to homepage,,1,1,[]
1578,128143550,1649,19542768,2017-06-29 12:51:44,2017-06-29 18:07:14,closed,Added a CHANGELOG entry for v1.8,,5,3,[]
1579,128141062,1648,19542768,2017-06-29 12:39:07,2017-06-29 12:43:43,closed,Various fixes for website linking,Mostly just fixing links,1,1,[]
1580,128130876,1647,19542768,2017-06-29 11:41:34,2017-06-29 13:08:36,closed,Updated extension logo,"
Here are some of the ones I tried, currently using the bottom right one:

![options](https://user-images.githubusercontent.com/890576/27685896-20c5a034-5cc8-11e7-8fbe-058eee640b91.png)

Using a size of 64x64 (used to be 25x25 which I think is too small).",4,2,[]
1581,128074056,1646,19542768,2017-06-29 05:54:33,2017-06-29 09:52:31,closed,Added multi-res favicon,"Not sure how to test it without deploying it, but I think this version will be more visible...",1,1,[]
1582,128061425,1645,19542768,2017-06-29 03:13:20,2017-06-29 09:48:13,closed,Allowed using timedeltas in widgets,Tiny fix to allow timedeltas to appear in the widgets. Tiny and safe fix that I hope can make it into 1.8.,2,1,[]
1583,128052224,1644,19542768,2017-06-29 01:23:16,,open,matplotlib/bokeh image processing demo,,5,1,[]
1584,128040239,1642,19542768,2017-06-28 23:18:30,2017-06-28 23:51:00,closed,Fixed flakes,"Fixed flakes found with ``flake8 --ignore=E,W,F999,F405  .``",2,1,[]
1585,128029330,1641,19542768,2017-06-28 21:58:22,2017-06-28 23:03:58,closed,Added installation options to user guide,Merged what was left that was useful from installation.html into Installing_and_Configuring in the user guide.,2,1,[]
1586,128017236,1640,19542768,2017-06-28 20:51:33,2017-06-28 21:07:12,closed,Linked configuring holoviews guide to website,PR title says it all.,0,2,[]
1587,128001954,1639,19542768,2017-06-28 19:32:58,2017-06-28 21:22:20,closed,First pass at homepage,"Simplifying the homepage, readme, and installation instructions.

- [x] Simplify homepage
- [x] Make readme match homepage",1,8,['tag: docs']
1588,127934498,1636,19542768,2017-06-28 14:21:09,2017-06-28 14:23:33,closed,User Guide Improvements,Correctly lower cased the doc/User_Guide folder and added dashboards guide.,1,2,['tag: docs']
1589,127926578,1635,19542768,2017-06-28 13:46:21,2017-06-28 15:50:59,closed,Minor miscellaneous documentation fixes.,"
TODO:

* [x] Updated stream notebook names.
* [x] Add a little description to the getting started sections index.
* [x] Fix some of the asset paths (e.g to penguins.png) - see #1637 as this has been deferred till later.",2,4,[]
1590,127906527,1632,19542768,2017-06-28 12:05:10,2017-06-28 13:20:44,closed,Cleaned up user guides and converted to bokeh,As the title says mostly includes fixes for links in user guides but also converts plots to bokeh and uses gifs to illustrate custom interactivity guide.,2,3,['tag: docs']
1591,127903892,1631,19542768,2017-06-28 11:49:35,2017-06-28 13:20:59,closed,Index page updates,PR to shorten the user guide descriptions and to give each top level page an appropriate introductory paragraph.,3,10,[]
1592,127821099,1630,19542768,2017-06-28 00:39:06,2017-06-28 00:53:46,closed,Various docs fixes,Various fixes for doc rst and added plots and renderers guide.,1,3,['tag: docs']
1593,127809495,1629,19542768,2017-06-27 22:50:19,2017-06-27 23:10:19,closed,Add Dynamicmap container notebooks,Add ``DynamicMap`` to the set of container notebooks.,1,2,[]
1594,127783202,1628,19542768,2017-06-27 20:20:19,2017-06-27 20:29:41,closed,Added Dimensioned Containers and Pipelines guides,Title says it all.,1,2,['tag: docs']
1595,127779307,1627,19542768,2017-06-27 20:00:06,2017-06-27 20:20:37,closed,User guide fix links,Fixed links in the 5th and 6th user guides.,1,3,[]
1596,127774515,1626,19542768,2017-06-27 19:34:49,2017-06-27 19:39:20,closed,Updated About text,,1,1,[]
1597,127773526,1625,19542768,2017-06-27 19:29:36,2017-06-27 20:07:06,closed,Updated the FAQ page,PR title says everything.,0,1,[]
1598,127766299,1624,19542768,2017-06-27 18:51:59,2017-06-27 22:28:03,closed,Fixed URLs supplied by the help system,"
PR to address #1504  and #1455.",2,3,[]
1599,127750880,1622,19542768,2017-06-27 17:33:22,2017-06-27 17:47:00,closed,Reapply Arrow commits,Can be merged right away as this PR re-introduces changes that were accidentally erased from the getting_started PR.,0,2,[]
1600,127718123,1620,19542768,2017-06-27 15:04:34,2017-06-27 16:45:37,closed,Improved the first two user guides,This PR is to get the first two user guides presentable.,2,3,[]
1601,127585956,1616,19542768,2017-06-26 23:43:34,2017-06-27 00:17:24,closed,Renamed bokeh HeatmapPlot to HeatMapPlot,This makes the naming consistent with Matplotlib.,1,1,[]
1602,127536206,1613,19542768,2017-06-26 18:40:25,2017-06-26 20:08:45,closed,Added case_sensitive_completion option to extension,"This fixes a bug with recent IPython versions, namely the fact that completions are listed in a case-insensitive order (ignoring both the default behavior of ``dir`` and ``__dir__`` as well as the semantic importance of case in Python identifiers).

As this monkey patches a particular function in IPython, the default of this parameter is False but you can enable it by adding a ``~/.holoviews.rc``:

```
import holoviews as hv
hv.extension.case_sensitive_completion=True
```

This is highly recommended as it allows you to index into ``Layout`` and ``Overlay``as originally intended. Hopefully, this fix will make it's way into the next IPython release.",5,3,[]
1603,127534244,1612,19542768,2017-06-26 18:29:59,2017-06-27 00:24:22,closed,Add .idea to .gitignore for PyCharm users,,2,1,[]
1604,127522054,1611,19542768,2017-06-26 17:29:47,2017-06-26 21:12:13,closed,Fixed bug in bokeh fixed ticker formatting,Tiny fix for supplying non-string fixed ticker labels.,1,1,"['type: bug', 'tag: backend: bokeh']"
1605,127499249,1610,19542768,2017-06-26 15:34:59,2017-06-26 21:18:05,closed,Updated style with new show_frame settings ,"Talking to @philippjfr we decided that only raster types, path types and vectorfields should have frames.",4,8,[]
1606,127479631,1609,19542768,2017-06-26 14:10:54,2017-06-26 15:19:13,closed,Command utility improvements,This PR improves the usability of the new ``holoviews`` command.,2,4,[]
1607,127469487,1608,19542768,2017-06-26 13:24:35,2017-06-26 17:04:05,closed,Add ArrowPlot implementation for bokeh,Although we want to make Arrow more general in the future this PR adds support for the current Arrow in bokeh. Here is a comparison between the mpl and bokeh arrows: https://anaconda.org/philippjfr/arrow/notebook,2,2,"['type: feature', 'tag: backend: bokeh']"
1608,127440816,1607,19542768,2017-06-26 10:27:58,2017-06-26 10:42:57,closed,Add .idea to .gitignore for PyCharm users,,1,1,[]
1609,127372986,1605,19542768,2017-06-25 18:22:08,2017-06-25 20:09:40,closed,Define Palettes and Cycles from backend specific colormaps/palettes,"Since we no longer import the matplotlib backend the list of Palettes are only populated if that particular backend is imported. This PR does several things:

1) A Cycle can be instantiated with a key or a list of values without having to specify the parameter name, i.e. before you had to do ``Cycle(values=['red', 'green', 'blue'])`` or ``Cycle(key='default_colors')`` now you can do ``Cycle(['red', 'green', 'blue'])`` or ``Cycle('default_colors')``.
2) We now define a number of default Cycles for both matplotlib and bokeh, since there is at least some overlap we can always rely on things like ``Set1-3``, ``Dark2`` and a few others to be there.
3) We also define default Palettes in bokeh.

The behavior of ``Palette`` has always been a bit odd and we should probably discuss/address that for 2.0, since it samples the provided function like a colormap and therefore does not cycle. I think that distinction still makes sense as cycling is what Cycle is for but we need to document this at some point. For the time being this is 1) completely backward compatible, 2) allows using categorical colormaps as Cycles and 3) ensures that at least a subset of categorical colormaps/palettes are available for both matplotlib and bokeh.",8,1,"['tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
1610,127336466,1604,19542768,2017-06-24 17:06:26,2017-06-25 21:27:22,closed,Replace bkcharts based BoxWhisker with pure bokeh implementation,"Replace last bkcharts based plot implementation with bokeh plotting API based implementation. Here's the notebook containing the implementation:

https://anaconda.org/philippjfr/boxwhisker/notebook

- [x] Allow separate styling of whiskers, boxes and outliers
- [x] Add coloring support
- [x] Correctly handle univariate BoxWhisker.
- [x] Support nice hover info
- [x] Support invert_axes
",2,19,"['tag: backend: bokeh', 'tag: component: plotting']"
1611,127331561,1603,19542768,2017-06-24 14:22:31,2017-06-25 21:27:36,closed,Fixes for bound_range utility,"Since the introduction of ``ndloc`` the precise numerical precision of Image coordinates is not a real issue anymore. This PR drops the rounding that we previously applied to the density based on the system float precision. This means that Image can handle very small values, which are currently rounded to zero. I've also filtered some warnings.",4,2,[]
1612,127331487,1602,19542768,2017-06-24 14:19:04,2017-06-24 15:45:39,closed,Various small fixes for plotly backend,Some simple fixes for the plotly backend making it more consistent with other backends and updating for small API changes in latest plotly versions.,2,1,[]
1613,127189721,1601,19542768,2017-06-23 11:42:39,2017-06-23 12:58:50,closed,Added argument for websocket_origin on BokehRenderer.app,"When launching a server instance from inside a notebook or in some other deployment scenarios you have to provide an explicit ``websocket_origin`` argument, which sets up the permissions for websocket comms. I ran into this when trying to start apps from a notebook server on a non-default port (i.e. not 8888).",3,1,['tag: backend: bokeh']
1614,127074138,1599,19542768,2017-06-22 19:54:10,2017-06-22 23:20:15,closed,Fix ndloc on descending coordinates,"Currently ndloc does not work when the coordinates are descending rather than ascending, this fix ensures ndloc only ever sees the ascending coordinates. I've also made sure that ``select`` returns the same datatype if possible. Will add unit tests shortly.",2,3,"['type: bug', 'tag: component: data']"
1615,127047861,1597,19542768,2017-06-22 17:37:41,2017-06-22 20:04:23,closed,Python 3 and other minor fixes to the Linked Streams tutorial,"PR title says it all. 

@philippjfr If you have moved any of this stuff into one of the user guides, please make the corresponding fixes there...",3,1,[]
1616,127005716,1596,19542768,2017-06-22 14:26:22,2017-06-28 00:54:06,closed,Collage for website and README,Adding a collage of nice examples to the website and README.,19,12,[]
1617,126802460,1593,19542768,2017-06-21 16:05:25,2017-06-21 17:51:24,closed,Fixed typo in dask dataframe interface,Tiny typo in the dask interface. Fixes the issue mentioned here: https://stackoverflow.com/questions/44666455/plotting-tabular-data-with-holoviews,2,2,"['type: bug', 'tag: component: data']"
1618,126802393,1592,19542768,2017-06-21 16:05:07,2017-06-21 16:19:32,closed,Compatibility for png export in bokeh 0.12.7,Minor fix for API change for png export in bokeh 0.12.7devX.,5,1,['tag: backend: bokeh']
1619,126600812,1589,19542768,2017-06-20 18:34:56,2017-06-21 15:42:53,closed,Added DynamicMap.opts method to apply opts to returned object,"When applying opts to a DynamicMap using the ``.opts`` method the options sometimes aren't applied correctly. By mapping the applied opts on the DynamicMap the opts are applied directly to the returned Elements. I think the issue may be that the ``id`` doesn't get copied or applied correctly, which means that the ``DynamicMap._style`` method doesn't apply the options correctly.",1,2,['type: bug']
1620,126587723,1588,19542768,2017-06-20 17:27:03,2017-06-21 02:11:20,closed,Registered Plot instances with the display hooks,"
Addresses #1490 so that this works (also works with matplotlib):

![image](https://user-images.githubusercontent.com/890576/27346735-fd24a9ce-55e5-11e7-8bf6-05d0d78d817c.png)

My main worry about this is it would make it easy to confuse plot instances with HoloViews elements...
",2,1,[]
1621,126575477,1587,19542768,2017-06-20 16:24:44,2017-06-20 16:57:37,closed,Suppressing stream parameters with Stream.rename ,"
Implements the suggestion in #1437 which turned out easier to implement than I anticipated:

![image](https://user-images.githubusercontent.com/890576/27344063-f32452c0-55dc-11e7-8c27-f6c6eb555b8b.png)",2,2,[]
1622,126546741,1586,19542768,2017-06-20 14:26:47,2017-06-20 14:55:26,closed,Updated manual renderer usage entry in the FAQ,PR fixing the FAQ entry regarding using renderers directly. Addresses #1078.,2,1,[]
1623,126374482,1585,19542768,2017-06-19 19:02:32,2017-06-19 19:14:03,closed,Cleaned up demo notebooks,Removed titles from demo notebooks so sphinx can index them correctly. Also cleared a couple notebooks which still had embedded output and renamed two notebooks.,2,1,['tag: docs']
1624,126317220,1582,19542768,2017-06-19 14:30:20,2017-06-19 14:48:27,closed,Added 3D Element notebooks and made small fixes,Still need to add Scatter3D.,1,3,['tag: backend: mpl']
1625,126302540,1581,19542768,2017-06-19 13:27:10,2017-06-19 15:04:51,closed,Moved and addded bokeh server apps to examples,Revised existing bokeh apps and moved them to ``examples/apps/bokeh`` and added a few new apps. These apps can definitely still be polished but this is a start.,1,1,['tag: backend: bokeh']
1626,126290919,1580,19542768,2017-06-19 12:27:35,2017-06-19 13:53:32,closed,Minor fixes for bkcharts based plots,"While we want to replace the BoxWhisker plot in bokeh soon this PR addresses some current issues with it, which are causing errors in some user guides.",2,1,"['type: bug', 'tag: backend: bokeh']"
1627,126285682,1579,19542768,2017-06-19 11:57:52,2017-06-19 13:28:23,closed,Fixed small bug in mpl ColorbarPlot logz handling,Made a mistake when handling zeros in #1576.,2,1,['tag: backend: mpl']
1628,126273052,1577,19542768,2017-06-19 10:42:39,2017-06-19 14:18:33,closed,Callable signature error message improvements,Shows the callable name in the signature validation. Addresses #1551.,3,4,[]
1629,126217278,1576,19542768,2017-06-19 03:15:24,2017-06-19 11:42:49,closed,Handle zero values in logz colormapping for mpl,Matplotlib throws an exception when using LogNorm colormapping and the vmin is zero. Now uses the smallest non-zero value.,3,1,['tag: backend: mpl']
1630,126217202,1575,19542768,2017-06-19 03:14:25,2017-06-19 11:35:01,closed,Bokeh fixed ticks cast to string,"Small fix for fixed ticker when tick labels aren't strings, affects a SpikesPlot example in 0.12.6",2,1,[]
1631,126217161,1574,19542768,2017-06-19 03:13:51,2017-06-19 15:15:10,closed,hv.renderer tries to import backend if not available,This avoids having to import the backend when deploying an app. The ``hv.renderer`` function now simply attempts to import a backend if it's not already available and errors if the import fails.,5,1,[]
1632,126203491,1573,19542768,2017-06-18 21:45:20,2017-06-18 23:51:30,closed,Using hv.extension() consistently in element notebooks,Updated the example notebooks to use ``hv.extension`` and to be explicit when using matplotlib (i.e avoiding ``hv.extension()`` and using ``hv.extension('matplotlib')``),2,1,[]
1633,126202557,1572,19542768,2017-06-18 21:12:31,2017-06-18 23:53:07,closed,Box spec is now matches Ellipse,"This is a simple fix to ``Box`` so it uses the (width, height) spec, matching ``Ellipse``. I think what happened is I fixed the flip in ``Ellipse`` but forgot to make the same fix in ``Box``.",3,2,[]
1634,126164408,1571,19542768,2017-06-17 18:48:34,2017-06-19 13:54:44,closed,Added verhulst_mandelbrot demo notebook for bokeh and matplotlib,"Adds one of my favorite visualizations from an old notebook I had:

Bokeh:

<img src=""https://user-images.githubusercontent.com/890576/27255381-864fda14-5395-11e7-83f5-2fcf208e2800.png"" width=""50%""></img>

Matplotlib:

<img src=""https://user-images.githubusercontent.com/890576/27255385-97c102b4-5395-11e7-8f2b-181ecc759739.png"" width=""50%""></img>

There is enough material that I could write a topic notebook to expand on this later on. My main worry with this example is that Bokeh seems to struggle with all the green points a lot more than matplotlib does (which admittedly never needs any re-rendering).
",8,3,['tag: docs']
1635,126157430,1570,19542768,2017-06-17 14:55:42,2017-06-17 18:54:46,closed,Importing unicode_literals into histogram example notebook,PR title says it all - thumbnailing has to be run with Python 2 and this should allow the thumbnail to be generated for this example.,2,1,[]
1636,126157148,1569,19542768,2017-06-17 14:46:06,2017-06-17 16:58:12,closed,Fix for using rgba tuples when coloring bokeh BarPlot,"Simple fix for rgba tuples in BarPlot, which are often used by our ``Palettes``.",2,1,"['type: bug', 'tag: backend: bokeh']"
1637,126157072,1568,19542768,2017-06-17 14:43:10,2017-06-17 17:42:56,closed,Switched bokeh SideHistogram to use ybox_select for colormapping,Slightly better UI to select the colormapping range on an adjoined Histogram.,3,1,"['type: feature', 'tag: backend: bokeh']"
1638,126156654,1566,19542768,2017-06-17 14:26:25,2017-06-17 16:57:27,closed,Fixed bug plotting empty bokeh SpikesPlot,"As outlined in https://github.com/ioam/holoviews/issues/1497, the bokeh SpikesPlot breaks when the Spikes Element is empty at the moment. This ensures it works correctly and adds a unit test.",1,1,"['type: bug', 'tag: backend: bokeh']"
1639,126156488,1565,19542768,2017-06-17 14:20:04,2017-06-17 17:07:54,closed,Correctly categorize Path data (including ErrorBars),"Fix for plotting Path plots on categorical axes, specifically fixes https://github.com/ioam/holoviews/issues/1470, which involves ErrorBars not showing up on categorical plots.

![bokeh_plot 76](https://user-images.githubusercontent.com/1550771/27253646-588f396e-5370-11e7-831e-ecba2fa9e791.png)

![bokeh_plot 77](https://user-images.githubusercontent.com/1550771/27253653-6abddd70-5370-11e7-9d4f-b916ac8a2dd0.png)

",2,1,"['type: bug', 'tag: backend: bokeh']"
1640,126155944,1564,19542768,2017-06-17 14:00:31,2017-06-17 16:56:11,closed,Correctly associate hover tool instances with plot renderer,When passing an explicit HoverTool instance to an ElementPlot it should associate that tool with only that subplot. This PR fixes the issue described in https://github.com/ioam/holoviews/issues/1449 and adds a unit test.,1,1,"['type: bug', 'tag: backend: bokeh']"
1641,126155435,1563,19542768,2017-06-17 13:41:58,2017-06-17 14:27:25,closed,Label bokeh tabs with subplot title if possible,"As outlined in https://github.com/ioam/holoviews/issues/1425, this PR uses the subplots ``_format_title`` method to compute tab titles. This is more consistent affords better control over the title using the ``title_format`` plot option and by setting just a ``label``. The tab titles do not contain information about the current frame, i.e. HoloMap/DynamicMap key dimension information. If no label, group or custom title_format is set it will revert back to using the Layout/Overlay path to compute the title.",3,1,['tag: backend: bokeh']
1642,126154579,1561,19542768,2017-06-17 13:11:02,2017-06-17 16:56:01,closed,Added support for Empty adjoint plots in bokeh,"This was already handled correctly by matplotlib but https://github.com/ioam/holoviews/issues/1478 highlighted that bokeh did not handle padding for empty adjoints correctly. Also added a unit test, and here is an example:

```python
hv.AdjointLayout([hv.Curve([0,1,1,2,3]), hv.Empty() ,hv.Curve([0,1,1,0,1])(plot=dict(height=100))])
```

<img width=""318"" alt=""screen shot 2017-06-17 at 2 10 35 pm"" src=""https://user-images.githubusercontent.com/1550771/27253139-c6b40c12-5366-11e7-9aad-774c77d99984.png"">
",1,1,"['type: bug', 'tag: backend: bokeh']"
1643,126153173,1560,19542768,2017-06-17 12:14:30,2017-06-17 12:56:32,closed,Fixed bug saving to BytesIO on Renderer,Small fix ensuring that ``Renderer.save`` can save to ``BytesIO`` object when exporting widgets. Fixes  https://github.com/ioam/holoviews/issues/1381.,2,1,['type: bug']
1644,126135121,1559,19542768,2017-06-17 00:18:42,2017-06-17 12:57:42,closed,Updated the website search to search holoviews rather than bokeh,"As title says, the new theme relied on a custom Google search which was still pointing at bokeh. I've now set up a custom search for holoviews.",5,1,['tag: docs']
1645,126068165,1557,19542768,2017-06-16 16:21:08,2017-06-16 16:52:34,closed,Fix to square limit example so it works on Python 2,PR contents described by the title. Problem was integer division in Python 2.,2,1,[]
1646,126029070,1556,19542768,2017-06-16 13:07:30,2017-06-16 14:56:03,closed,Added boids example to topics/simulation/boids.ipynb,"PR title says it all. Here is what it looks like:

![boids](https://user-images.githubusercontent.com/890576/27227836-08901538-529d-11e7-971c-99481f70bc9c.gif)

I decided to strip out my attempts at interactive boids for now as that needs more work.
",2,1,[]
1647,126021247,1555,19542768,2017-06-16 12:20:06,2017-06-16 12:59:10,closed,Made count None by default in DynamicMap.periodic,"Simple PR that allows me to use:

```
dmap.periodic(0.01, timeout=60)
```

Without the awkward:

```
dmap.periodic(0.01, count=None, timeout=60)
```

Only the first argument (the period) is mandatory so if you supply nothing else it will run forever. This is fine for the blocking version (now the default) and bokeh server and this combination is only disabled for the threaded version where killing threads can be a problem.

",1,1,[]
1648,125948963,1554,19542768,2017-06-16 02:39:34,2017-06-16 14:49:33,closed,Add BoundsX/BoundsY streams,"* Core code is thanks to @philippjfr via gitter
* Added notebook examples and animated gifs
* Fixed mismatch in Bounds.bounds doc string",6,3,[]
1649,125905154,1550,19542768,2017-06-15 20:27:34,2017-06-15 21:36:02,closed,hv.output can now warn if an object is supplied without a filename,"Simple PR that allows the ``hv.output`` utility to warn about object supplied without an export filename. The ``filename_warning`` parameter can be set at the class level or supplied as a keyword:

![image](https://user-images.githubusercontent.com/890576/27200383-68ce6bac-5211-11e7-85d9-677fa83ab4f1.png)
",1,1,[]
1650,125888173,1549,19542768,2017-06-15 18:51:49,2017-06-15 20:08:48,closed,Fixed newly introduced bar width bug,"Introduced a bug in #1545, the width variable is used again later and shouldn't be overridden.",1,1,"['type: bug', 'tag: backend: bokeh']"
1651,125886223,1548,19542768,2017-06-15 18:41:05,2017-06-15 19:11:50,closed,Output files generated with hv.output now respect all settings,"My initial approach was too simplistic and didn't use all the supplied keywords. For instance this now correctly outputs an SVG file:

![image](https://user-images.githubusercontent.com/890576/27196474-78d79d7a-5202-11e7-956c-36483b29944c.png)

In addition I added keyword validation to make sure only the appropriate keywords are supplied.",2,1,[]
1652,125877576,1547,19542768,2017-06-15 17:54:25,2017-06-15 19:32:27,closed,Bokeh renderer now saves necessary HTML assets to file,"
I did the simplest thing that I could think of to address issue #1411. I'm happy to hear any suggestions on how to improve it and I just need to test on Python 2: I get nervous when I see anything relating to unicode!

```python
%%output filename=""output""
x = [1, 2, 3, 4, 5]
y = [6, 7, 2, 4, 5]
hv.Curve((x,y),label=""Temp"")
```

Now generates a self-contained HTML file:

![image](https://user-images.githubusercontent.com/890576/27194748-acee9764-51fb-11e7-9037-ef36822248b6.png)
",3,1,[]
1653,125812820,1545,19542768,2017-06-15 12:43:50,2017-06-15 15:33:17,closed,Fix issues with empty aggregates and Bars,Fixes issues aggregating empty Datasets and displaying empty Bars.,2,4,['type: bug']
1654,125731374,1543,19542768,2017-06-15 02:46:44,2017-06-15 16:45:29,closed,Small fixes for computing spreadfn aggregates,Fixed a small bug when aggregating with a spreadfn. In writing unit tests for this I also noticed that pandas uses ddof=1 (delta degrees of freedom) while the numpy default is ddof=0. I've adjusted the code to catch those cases and change the pandas version to ddof=0.,3,1,"['type: bug', 'tag: component: data']"
1655,125717935,1542,19542768,2017-06-15 00:08:23,2017-06-15 00:33:41,closed,Minor fixes for unnecessary warnings/exceptions,This PR allows reuse of ``redim.label`` if the supplied label is unchanged and prevents a warning about label overrides between the keyword/tuple format if the label is in fact the same.,2,2,[]
1656,125710156,1541,19542768,2017-06-14 22:57:01,2017-06-14 23:37:12,closed,Allow redim.label if no custom label set,"As the title says this allows using redim.relabel to set a custom label as long as the current label is the same as the name, i.e. no custom label has been supplied previously.",2,3,[]
1657,125708630,1540,19542768,2017-06-14 22:44:26,2017-06-14 23:29:17,closed,Added missing 'ms' style option to matplotlib CurvePlot,"Title of the PR says it all: 'marker' was supported but 'ms' to change the size wasn't.

You can now do:

![image](https://user-images.githubusercontent.com/890576/27157807-62503c1c-515b-11e7-8626-6ff8a594c457.png)
",2,1,[]
1658,125623520,1537,19542768,2017-06-14 15:21:02,2017-06-27 12:54:43,closed,Getting started guide,"This PR will add the new getting started guide notebooks to examples, the assets and the related .rst files.",19,99,[]
1659,125349630,1535,19542768,2017-06-13 12:21:31,2017-06-13 13:14:41,closed,Added Square limit example notebook,"In addition to adding this notebook to ``examples/topic`` and ``examples/demos``, we decided to standardize all non element notebooks to underscore separated lowercase filenames.",6,4,[]
1660,125258556,1533,19542768,2017-06-13 00:50:09,2017-06-13 00:57:28,closed,Escaping braces in opts preprocessor,Tiny PR where I fix an escaping issue in the opts preprocessor (e.g when normalization options are used) as well as an outdated exception message I spotted in ``Renderer``.,2,1,[]
1661,125248843,1532,19542768,2017-06-12 23:11:14,2017-06-14 15:19:18,closed,Suppress bokeh validation warnings,"Bokeh has recently added various validation warnings which are helpful for developers but in most of our usage cases warn about deliberate decisions by us, such as padding a bokeh layout with empty plots. This PR suppresses those warnings.",5,1,['tag: backend: bokeh']
1662,125120733,1529,19542768,2017-06-12 12:05:33,2017-06-13 12:36:01,closed,Bokeh SplinePlot handles multiple cubic splines,"The bokeh bezier glyph supports cubic splines, by reading the matplotlib based spline codes we can easily split a set of cubic splines and draw them correctly with bokeh. This PR adds supports for drawing multiple cubic splines in this way. Splines of length 1 are simply ignored, while any other splines will raise warning. Briefly I thought I could handle quadratic and linear splines as well but that does not seem to be the case. Also adds support for instantiating and plotting empty splines with ``hv.Spline(([], []))``.

Here's an example:

![bokeh_plot 66](https://user-images.githubusercontent.com/1550771/27033303-98e9bb28-4f70-11e7-8428-183af7a6ca1a.png)
",5,3,"['type: feature', 'tag: backend: bokeh']"
1663,124631433,1526,19542768,2017-06-08 11:50:35,2017-06-15 17:44:07,closed,Fixed various bugs canonicalizing arrays,In https://github.com/ioam/holoviews/pull/1524 I made some fixes for grid based interfaces but seemingly also introduced a bug. This PR finally addresses these issues correctly. Unit tests to follow.,2,2,"['type: bug', 'tag: component: data']"
1664,124299185,1524,19542768,2017-06-06 22:09:15,2017-06-07 00:10:46,closed,Fixed bug in canonicalizing xarray data,"There is a bug in how xarray arrays are canonicalized which occurs when there is scalar dimension in the dataset which is not referenced in the kdims. This fixes that bug and also fixes another bug that ignores explicitly supplied kdims when constructing an Element from a xr.DataArray.

Fixes bug https://github.com/ioam/geoviews/issues/72",1,2,"['type: bug', 'tag: component: data']"
1665,124000060,1521,19542768,2017-06-05 15:30:00,2017-06-05 21:50:03,closed,General improvements to new toplevel utilities,"
In this PR I wish to:

- [x] Improve validation in the opts utility.
- [x] Support the filename argument in the output utility.
- [ ] Improve the preprocessor when multiple expressions are one line.
- [x] Fixed ``hv.help`` when no backends are loaded. Addresses #1520. ",3,7,[]
1666,123898077,1518,19542768,2017-06-05 00:24:05,2017-06-21 19:28:41,closed,Miscellaneous style fixes,This PR is for style changes and fixes that are bound to break the display tests. We could use this PR to update styles in general for 1.8.,23,11,[]
1667,123897769,1517,19542768,2017-06-05 00:13:38,2017-06-05 19:21:32,closed,Defined hv.extension and hv.renderer utilities,Defines ``hv.renderer`` which helps load rendering backends outside of a notebook context.,2,10,[]
1668,123890687,1516,19542768,2017-06-04 20:16:50,2017-06-18 00:10:10,closed,Removed all mpld3 support,,3,6,['tag: backend: mpl']
1669,123886714,1515,19542768,2017-06-04 18:12:15,2017-06-04 19:44:18,closed,Replaced usage of deleted stack_area operation,"``stack_area`` was removed, replaced with ``Area.stack``",4,1,['tag: docs']
1670,123842309,1514,19542768,2017-06-03 13:24:28,2017-09-14 13:59:23,closed,Added basic MultiInterface for Path types,This is my initial attempt at making a general interface for Path types as discussed extensively in https://github.com/ioam/holoviews/issues/416. This PR should keep complete backward compatibility paving the way for a later PR that expands the capabilities of this approach. This PR will also allow me to write an initial geopandas interface for paths in geoviews.,9,19,"['type: feature', 'tag: component: data']"
1671,123815151,1513,19542768,2017-06-02 23:06:59,2017-06-04 16:13:26,closed,Allow aggregate to rasterize to target Image gridding,"This PR allows the aggregate datashader operation to generate rasterize data onto the same grid as an existing Image. This is very useful when working with columnar and rasterized datasets and want to merge them into the same space, allowing simple arithmetic and more complex machine learning pipelines to be performed on the data.

Technically this is a complete regridding solution even for Images but hopefully we can decide what to do about a more efficient ``gridtools`` based implementation (which I already prototyped).",2,4,['type: feature']
1672,123694582,1512,19542768,2017-06-02 11:10:19,2017-06-04 18:20:27,closed,Allowed using xarray with dask arrays,XArray supports wrapping around dask arrays. Generally this doesn't cause any issues but the ``dimension_values`` method should always return an in-memory NumPy array so this PR is sufficient for us to have full support for dask arrays via xarray.,6,3,['tag: component: data']
1673,123553153,1511,19542768,2017-06-01 17:31:56,2017-06-01 23:48:23,closed,Switched Lissajous example to use Path instead of Curve,Tiny fix to use ``Path`` instead of ``Curve`` for the first example in the streams tutorial as I think ``Path`` is more appropriate.,2,1,[]
1674,123491697,1509,19542768,2017-06-01 12:53:14,2017-06-04 23:37:42,closed,Ellipse parameter now supports major/minor axis lengths,"Implements a suggestion by @ea42gh that is backwards compatible with the old behavior. Needs testing and final discussion on whether this is useful before I add unit tests.

**Edit:** I'll also update the new element notebook for ellipse if we decide this is useful.",6,13,[]
1675,123488015,1508,19542768,2017-06-01 12:33:45,2017-06-04 14:14:36,closed,Added span parameter for datashade operation,Not sure ``span`` is the best name for this parameter but I just used the datashader argument name for now. Maybe ``clims`` or ``color_range`` would be better?,10,1,['type: feature']
1676,123399752,1505,19542768,2017-06-01 01:00:00,2017-06-01 11:41:01,closed,Compatibility fix for bokeh 0.12.6 webgl handling,Needed for bokeh 0.12.6dev7 to work.,1,1,['tag: backend: bokeh']
1677,123327591,1503,19542768,2017-05-31 17:33:19,2017-05-31 20:48:17,closed,Added support for supplying fixed ticks with labels,"Finally adds ticking support with fixed labels to the bokeh backend, e.g.:

```python
%%opts Curve [xticks=[(0, 'Foo'), (1, 'Bar'), (2, 'Baz')]]
hv.Curve([1,2,3])
```

![bokeh_plot 60](https://cloud.githubusercontent.com/assets/1550771/26645346/9c963746-462f-11e7-995b-9926b43b54d5.png)

Will be available when 0.12.6 is released, both the code and the tests are appropriately guarded to work only with bokeh version > 0.12.5.",2,1,"['type: feature', 'tag: backend: bokeh']"
1678,123292768,1501,19542768,2017-05-31 14:52:22,2017-05-31 15:19:09,closed,Only colormap adjoined Histogram when dimensions match,"Fixes dimension lookup error with this example:

```python
%%opts Scatter [color_index=2 size_index=3 scaling_factor=50]
np.random.seed(10)
data = np.random.rand(100,4)

scatter = hv.Scatter(data, vdims=['y', 'z', 'size'])
scatter + scatter[0.3:0.7, 0.3:0.7].hist()
```",2,1,['type: bug']
1679,123242996,1500,19542768,2017-05-31 10:31:44,2017-05-31 15:11:40,closed,Histogram data fixes,"Fixes two bugs in the Histogram constructor:

1) Updated old code assuming that Chart data is always arrays, fixing how Charts are cast to a Histogram.

2) Fixed code to compute bin edges from bin centers when centers are defined as integers.",3,3,"['type: bug', 'tag: component: data']"
1680,123239775,1499,19542768,2017-05-31 10:14:33,2017-05-31 20:47:44,closed,Add support for colormapping Contours,"Turns out ``Contours`` in bokeh did not support colormapping, which I noticed as I was reworking the Contours element example. Since colormapping is handled on a baseclass this was an easy addition:

```
%%opts Contours (cmap='viridis')
hv.operation.contours(hv.Image(np.sin(x**2+y**2)), levels=np.linspace(0, 1, 9),
                      overlaid=False)
```

![bokeh_plot 59](https://cloud.githubusercontent.com/assets/1550771/26627386/3b6c7e72-45f2-11e7-827f-9a9c9d000d27.png)
",4,3,"['type: feature', 'tag: backend: bokeh']"
1681,122931830,1495,19542768,2017-05-29 18:26:58,2017-09-25 15:56:18,closed,Fixed batched Spike overlay extents bug,"Fixes https://github.com/ioam/holoviews/issues/1480, the SpikePlot was iterating over the ``current_frame`` in batched mode for no reason causing issues when the plot was overlaid and the ``current_frame`` isn't initialized.",1,1,"['type: bug', 'tag: backend: bokeh']"
1682,122925950,1494,19542768,2017-05-29 17:14:47,2017-05-29 19:06:26,closed,Fix dynamic sort,"The Dynamic utility converts HoloMaps to DynamicMaps by setting the HoloMap key dimension values as Dimension.values on the ``DynamicMap``. Currently they are unordered, this PR ensures they retain their original order.",1,2,['type: bug']
1683,122818572,1493,19542768,2017-05-29 02:00:55,2017-05-29 14:03:11,closed,Added support for static bokeh png rendering,"The bokeh 0.12.6 release will add static png rendering support and this PR exposes this support at the bokeh renderer level. Because rendering to png is so slow this is not particularly useful for working interactively but will be very useful for generating output which can be embedded in any document, including the thumbnails for our gallery.",9,2,"['type: feature', 'tag: backend: bokeh']"
1684,122813495,1492,19542768,2017-05-28 23:41:39,2017-05-29 01:25:55,closed,Handled bkcharts compatibility,"In bokeh 0.12.6 bokeh charts will move into their own repository. For the meantime we still depend on their box and whisker plot, aiming to replace it with our own implementation by holoviews 2.0. Since bokeh 0.12.6 will still require bkcharts this will buy us a bit more time. I did some extra refactoring creating a compute_plot_size utility so that ``hv.plotting.bokeh.renderer`` doesn't have to import various bokeh models and handle the conditional ``Chart`` import.",2,1,['tag: backend: bokeh']
1685,122812255,1491,19542768,2017-05-28 22:55:46,2017-06-04 12:49:09,closed,Magic preprocessors for conversion to vanilla Python,This is very much a work-in-progress prototype. I will update this description if we decide to go ahead with this approach and after I have pushed forced a cleaner commit history.,13,54,['status: WIP']
1686,122431027,1487,19542768,2017-05-25 12:32:33,2017-05-28 18:48:20,closed,Ensured notebook_extension aborts outside notebook context,This PR ensures that when running the notebook extension outside an IPython context it skips the notebook initialization steps. This allows for a HoloViews notebook which loads the extension to be deployed as a bokeh app.,3,2,[]
1687,122430596,1486,19542768,2017-05-25 12:29:35,2017-05-29 17:23:21,closed,Made BokehRenderer.server_doc method more general,"The BokehRenderer.server_doc method was mostly used internally to create and attach a plot to a bokeh Document and return it. Apart from fixing a bug attaching the periodic utility, this PR allows the method to be called directly with a HoloViews object.",2,1,"['tag: API', 'tag: backend: bokeh']"
1688,122426126,1485,19542768,2017-05-25 11:57:53,2017-05-25 13:07:10,closed,Compatibility fixes for bokeh 0.12.6 release,"Bokeh compatibility fixes based for the latest bokeh 0.12.6 dev release. With conditional imports for the remaining bokeh chart, hopefully we can drop it soon after our 1.8 release.",1,1,['tag: backend: bokeh']
1689,122424123,1484,19542768,2017-05-25 11:43:45,2017-05-31 15:19:39,closed,Bokeh colormapping fixes,"Two colormapping fixes the first fixes a bug in assigning colors to Bars in the right order, the second allows passing a list of colors to bokeh instead of a matplotlib colormap which should always have been allowed.",3,4,['type: bug']
1690,122423874,1483,19542768,2017-05-25 11:41:51,2017-05-25 13:06:26,closed,Fixed deprecated pandas import,"Missed this one the first time around, hopefully this is the last pandas 0.20.1 compatibility fix.",1,1,[]
1691,121986322,1479,19542768,2017-05-23 12:33:59,2017-05-23 14:57:32,closed,Fixed HLine/VLine invert_axes,Straightforward fix for #1475 along with unit tests.,1,1,"['type: bug', 'tag: backend: bokeh']"
1692,121882123,1477,19542768,2017-05-22 22:59:10,2017-05-23 01:41:20,closed,Added initial demo notebooks,Adds a number of demos which will become part of the gallery. Where possible the demos are implemented across backends and link to each other (plotly only has 3d examples).,7,1,['tag: docs']
1693,121853954,1476,19542768,2017-05-22 20:01:57,2017-05-31 23:46:31,closed,Add example notebooks for Elements,"As one of the main tasks for the new documentation we want to split out the example notebooks. I started converting individual examples and in doing so found that many examples in the existing Element tutorials are either outdated or downright wrong so I started updating them. I got through a fair few of them and made bokeh specific additions. It probably would have been easier to start porting the existing materials and then adapting them once they are added and only then add backend specific additions for the different backend specific versions.

Given that I've already started updating them I'd suggest the following plan, that @jlstevens can help me with. I'd suggest you work through the Elements I've already added and add matplotlib versions for each, making improvements to both versions if you think they are necessary and replacing/removing bits that rely on bokeh features in the matplotlib version (e.g. hover tool -> show_values in the HeatMap example). In the meantime I'll work on bokeh and matplotlib versions of the outstanding elements, which are: 

* [x] Contours
* [x] QuadMesh
* [x] Paths
* [x] Histogram
* [x] HLine/VLine
* [x] Arrow
* [x] Text
* [x] Spline
* [x] Box
* [x] Ellipse
* [x] Bounds
* [ ] Surface (mpl only)
* [ ] Scatter3D (mpl only)
* [ ] Trisurface (mpl only)",10,28,['tag: docs']
1694,121774527,1474,19542768,2017-05-22 13:14:37,2017-05-22 21:40:19,closed,Fixed bug in widget JS code when outside notebook,Fixes issues with the widgets when trying to display a dynamic plot with widgets outside a notebook context.,2,1,[]
1695,121762761,1473,19542768,2017-05-22 12:11:19,2017-05-30 21:36:21,closed,Initial holoviews docs theme redesign,"Switches from readthedocs based Sphinx template to a template based on the [bokeh_theme](https://github.com/bokeh/bokeh/tree/master/sphinx/source/bokeh_theme) and CSS based on [bokehplots.com](https://github.com/bokeh/bokehplots.com/). Also introduces basic website skeleton based on the plan discussed in https://github.com/ioam/holoviews/issues/1379.

An initial build can be seen at: build.holoviews.org",2,2,['tag: docs']
1696,121677829,1471,19542768,2017-05-21 22:01:52,2017-05-21 23:35:19,closed,Simplified NotebookArchive and fixed Python 3 issue,"
This PR fixes issue #1441 where ``StringIO`` was not working properly on Python3. Thankfully this fix helps *simplify* ``NotebookArchive`` while fixing the Python 3 issue.",3,3,[]
1697,121672394,1469,19542768,2017-05-21 19:18:20,2017-05-22 10:27:03,closed,Fix for BokehRenderer.server_doc for plots with widgets,"This fixes a bug in the ``BokehRenderer.server_doc`` method, which resulted in the bokeh widgets not being added to the Document and therefore not appearing.",4,1,['type: bug']
1698,121671950,1468,19542768,2017-05-21 19:05:09,2017-05-23 14:57:58,closed,Fixed bugs in QuadMesh indexing,QuadMesh indexing is currently partially broken. I'll add a few unit tests before this is ready to merge.,2,2,['type: bug']
1699,121671861,1467,19542768,2017-05-21 19:02:37,2017-05-22 10:26:26,closed,Avoid xarray len implementation loading data,"XArray supports lazy loading of data but the current xarray interface uses the actual array data to determine the length of the data, which is highly inefficient. This PR instead uses the product of the coordinate array lengths which are always in memory to determine the overall length.",2,1,['tag: component: data']
1700,121671736,1466,19542768,2017-05-21 18:58:25,2017-05-22 10:26:06,closed,Correctly sanitize HeatMap and Bar plot CDS columns,When ColumnDataSource columns contain special characters or spaces the column names have to be sanitized. This PR ensures the BarPlot and HeatmapPlot implementations correctly sanitize the column names.,4,2,"['type: bug', 'tag: backend: bokeh']"
1701,121565581,1465,19542768,2017-05-19 19:18:00,2017-05-21 19:05:43,closed,Options now drop invalid keywords from kwargs,"
PR to fix #1463 - invalid keywords weren't actually being skipped (i.e dropped from kwargs) which meant invalid values were being set on the options tree.

If the tests go green I'll add a unit test to make sure this stays fixed.",2,3,[]
1702,121542510,1464,19542768,2017-05-19 16:58:14,2017-05-21 22:18:59,closed,DynamicMap.clone support for link_inputs argument,"This is a fairly straightforward PR to address issue #1398.

Ready for review/merge once the tests go green.
",1,2,[]
1703,121408672,1461,19542768,2017-05-19 01:23:48,2017-05-19 16:10:33,closed,Used  @attr(optional=1) and SkipTest to skip non-core tests,"This PR aims to address issue #1420. It was more work than expected!

Tests no longer error if you install only core holoviews (i.e param and numpy) as installed with:

```bash
pip install holoviews
conda install nose
```

And run ``nosetests  -a  '!optional'``

There is one exception though, you get this failure if pandas isn't installed:

```
======================================================================
ERROR: test_idxmapping_groupby_unsorted (tests.testndmapping.NdIndexableMappingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/jstevens/Desktop/development/holoviews/tests/testndmapping.py"", line 103, in test_idxmapping_groupby_unsorted
    grouped = MultiDimensionalMapping(data, sort=False, kdims=['X', 'Y']).groupby('Y')
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/ndmapping.py"", line 285, in groupby
    group_type, sort=True, **kwargs)
  File ""/Users/jstevens/miniconda2/envs/testfix5/lib/python2.7/site-packages/param/parameterized.py"", line 1888, in __new__
    return inst.__call__(*args,**params)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1326, in __call__
    group_type, sort=sort, **kwargs)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1361, in groupby_python
    for k, v in iterative_select(ndmapping, dim_names, selects)]
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1042, in iterative_select
    items.append((s, obj.select(**{dimensions[-1]: s[-1]})))
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/dimension.py"", line 994, in select
    selection = self[tuple(select)]
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/ndmapping.py"", line 526, in __getitem__
    return self._dataslice(self.data[map_slice], data_slice)
TypeError: unhashable type
```

Note that I also added a fix to ``unique_array`` in this PR.

Oddly, I get three failures with matplotlib when pandas is missing, but only when installing using ``conda install -c ioam holoviews`` (pip + matplotlib without pandas seems fine!):

```
======================================================================
ERROR: test_idxmapping_groupby_unsorted (tests.testndmapping.NdIndexableMappingTest)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/jstevens/Desktop/development/holoviews/tests/testndmapping.py"", line 103, in test_idxmapping_groupby_unsorted
    grouped = MultiDimensionalMapping(data, sort=False, kdims=['X', 'Y']).groupby('Y')
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/ndmapping.py"", line 285, in groupby
    group_type, sort=True, **kwargs)
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/param/parameterized.py"", line 1888, in __new__
    return inst.__call__(*args,**params)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1326, in __call__
    group_type, sort=sort, **kwargs)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1361, in groupby_python
    for k, v in iterative_select(ndmapping, dim_names, selects)]
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/util.py"", line 1042, in iterative_select
    items.append((s, obj.select(**{dimensions[-1]: s[-1]})))
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/dimension.py"", line 994, in select
    selection = self[tuple(select)]
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/core/ndmapping.py"", line 526, in __getitem__
    return self._dataslice(self.data[map_slice], data_slice)
TypeError: unhashable type

======================================================================
ERROR: test_curve_datetime64 (tests.testplotinstantiation.TestMPLPlotInstantiation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/jstevens/Desktop/development/holoviews/tests/testplotinstantiation.py"", line 182, in test_curve_datetime64
    plot = mpl_renderer.get_plot(curve)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/renderer.py"", line 178, in get_plot
    plot.update(0)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/plot.py"", line 243, in update
    return self.initialize_plot()
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/plot.py"", line 42, in wrapper
    return f(self, *args, **kwargs)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 492, in initialize_plot
    **axis_kwargs)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 198, in _finalize_axis
    self._finalize_ticks(axis, dimensions, xticks, yticks, zticks)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 241, in _finalize_ticks
    rotation=self.xrotation)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 423, in _set_axis_ticks
    for tick in axis.get_ticklabels():
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1237, in get_ticklabels
    return self.get_majorticklabels()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1191, in get_majorticklabels
    ticks = self.get_major_ticks()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1320, in get_major_ticks
    numticks = len(self.get_major_locator()())
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 986, in __call__
    self.refresh()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 1006, in refresh
    dmin, dmax = self.viewlim_to_dt()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 763, in viewlim_to_dt
    return num2date(vmin, self.tz), num2date(vmax, self.tz)
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 401, in num2date
    return _from_ordinalf(x, tz)
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 254, in _from_ordinalf
    dt = datetime.datetime.fromordinal(ix).replace(tzinfo=UTC)
OverflowError: signed integer is greater than maximum

======================================================================
ERROR: test_curve_heterogeneous_datetime_types_overlay (tests.testplotinstantiation.TestMPLPlotInstantiation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/jstevens/Desktop/development/holoviews/tests/testplotinstantiation.py"", line 204, in test_curve_heterogeneous_datetime_types_overlay
    plot = mpl_renderer.get_plot(curve_dt*curve_dt64)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/renderer.py"", line 178, in get_plot
    plot.update(0)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/plot.py"", line 243, in update
    return self.initialize_plot()
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/plot.py"", line 42, in wrapper
    return f(self, *args, **kwargs)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 838, in initialize_plot
    title=self._format_title(key))
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 198, in _finalize_axis
    self._finalize_ticks(axis, dimensions, xticks, yticks, zticks)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 241, in _finalize_ticks
    rotation=self.xrotation)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/plotting/mpl/element.py"", line 423, in _set_axis_ticks
    for tick in axis.get_ticklabels():
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1237, in get_ticklabels
    return self.get_majorticklabels()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1191, in get_majorticklabels
    ticks = self.get_major_ticks()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/axis.py"", line 1320, in get_major_ticks
    numticks = len(self.get_major_locator()())
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 986, in __call__
    self.refresh()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 1006, in refresh
    dmin, dmax = self.viewlim_to_dt()
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 763, in viewlim_to_dt
    return num2date(vmin, self.tz), num2date(vmax, self.tz)
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 401, in num2date
    return _from_ordinalf(x, tz)
  File ""/Users/jstevens/miniconda2/envs/testfix6/lib/python2.7/site-packages/matplotlib/dates.py"", line 254, in _from_ordinalf
    dt = datetime.datetime.fromordinal(ix).replace(tzinfo=UTC)
OverflowError: signed integer is less than minimum

======================================================================
FAIL: test_curve_dt_datetime (tests.testplotinstantiation.TestMPLPlotInstantiation)
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""/Users/jstevens/Desktop/development/holoviews/tests/testplotinstantiation.py"", line 197, in test_curve_dt_datetime
    self.assertEqual(plot.handles['axis'].get_xlim(), (735964.0, 735973.0))
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/element/comparison.py"", line 81, in assertEqual
    asserter(first, second)
  File ""/Users/jstevens/Desktop/development/holoviews/holoviews/element/comparison.py"", line 233, in compare_tuples
    raise AssertionError(msg or '%s != %s' % (repr(t1), repr(t2)))
AssertionError: (735963.55000000005, 735973.44999999995) != (735964.0, 735973.0)

----------------------------------------------------------------------
Ran 1515 tests in 25.456s
```

There is also the odd issue about '#008000' != u'green' in Bokeh (#1460) but I'm ignoring that.


",5,9,[]
1704,121272150,1458,19542768,2017-05-18 12:32:45,2017-05-18 17:41:32,closed,Removed TreeOperation,"
Finishes off the last suggestion made in in issue #1419. 

Featuremapper still has TreeOperations so ioam/featuremapper#14 should be merged first. I've already pushed a commit to Topographica to make sure it can use the featuremapper version when the HoloViews version disappears.",1,1,[]
1705,121265395,1457,19542768,2017-05-18 11:55:12,2017-05-18 17:41:55,closed,Removed automatic sorting of dimension values,"
Very simple PR to address issue #1383: ``Dimension`` no longer sorts the supplied values. This change *should* be ok - the notebook tests will help us decide!",2,1,[]
1706,121183434,1456,19542768,2017-05-18 01:18:48,2017-08-11 11:19:19,closed,Simple utility to turn parameters into dimensions,"This PR aims to address #1190. 

Other than finding a better name for the utility, everything is straightforward (see the tests for an example of how to use it). Ready for review/merge once the tests are green.",8,3,[]
1707,121178233,1454,19542768,2017-05-18 00:19:37,2017-05-18 06:05:16,closed,Ignoring all ImportErrors when setting notebook_extension stub,Trivial PR to address #1393. @philippjfr I think it can be merged right away.,1,1,[]
1708,121177127,1453,19542768,2017-05-18 00:07:32,2017-05-18 08:01:13,closed,Exposing inargs and inkwargs as Callable.args and .kwargs,"Simple PR to address #1307 - before it is called the callable ``.args`` and ``.kwargs`` attributes are None, afterwards they reflect how the callable was invoked.",2,2,[]
1709,121003008,1452,19542768,2017-05-17 08:43:33,2017-05-18 19:59:04,closed,Make the naming consistent,"The other option is to rename everything in this tutorial into ""waves"" instead of ""sine""",8,1,[]
1710,120873399,1448,19542768,2017-05-16 16:40:31,2018-11-30 19:48:28,closed,Alias utility update,"This PR aims to address #1427. I realize we don't yet have a solution everybody is happy with but I think this is worth updating while the utility still exists.

Here is an example of it in use:

![image](https://cloud.githubusercontent.com/assets/890576/26117440/7f6e1652-3a5e-11e7-83d3-178704e10e4a.png)

For this example it doesn't do much but if you have a long notebook that reuses dimensions/groups/labels constantly, I think this utility really pays off, making everything more succinct and organized. It means you can specify the definitions once at the top, making the rest of the notebook more succinct.

Once we do find a good solution to defining dimensions and sanitized groups/labels without awkward repetition we should document it and probably remove the dimension preset system.",5,4,[]
1711,120846468,1447,19542768,2017-05-16 14:47:39,2017-05-16 20:09:51,closed,Fixed pretty printed repr output on Python 3,This fixes the issue with Python 3 showing the repr as a bytes object with the ``b`` prefix.,2,3,[]
1712,120805750,1446,19542768,2017-05-16 11:37:21,2017-05-16 22:44:04,closed,Element extents fixes,"Certain Elements have special semantics for dimension ranges, e.g. on ErrorBars/Spread the y-range is determined by the combination of y-values and y-errors. This is handled correctly but it currently completely ignores explicitly set ranges, which should always override auto-computed ranges. Additionally ``Histogram`` uses extents to compute the bin ranges when it should simply use ``.range`` like all other Elements.

Fixes:

https://github.com/ioam/holoviews/issues/1432
https://github.com/ioam/holoviews/issues/1433
https://github.com/ioam/holoviews/issues/1445",5,6,['type: bug']
1713,120798552,1444,19542768,2017-05-16 10:55:21,2017-05-16 20:09:41,closed,Improved BokehRenderer.app API,"The BokehRenderer.app method now has three ways of working:

1) By default it just returns a document with plot attached to it, this can be used in a script to deploy it with ``bokeh serve``.

2) When using the ``show`` option it will create an Application instance, if the notebook extension has been loaded it will start a server and display it inline.

3) When using the ``show`` option when the notebook extension has not been loaded or if the ``new_window`` option is supplied it will create the app and open it in a new window. This may be used from an IPython terminal or within the notebook.

Suggestions for improving the naming of the ``show`` and ``new_window`` arguments or other suggestions for improving the API welcome.",4,3,"['tag: API', 'tag: component: plotting']"
1714,120722295,1443,19542768,2017-05-16 00:29:14,2017-05-16 00:55:33,closed,Do not warn about unfilled subplots,Currently creating a layout where some plots are unfilled generates warnings as described in https://github.com/ioam/holoviews/issues/1390.,2,1,['tag: component: plotting']
1715,120718082,1442,19542768,2017-05-15 23:47:11,2017-05-16 00:55:19,closed,Disable bokeh toolbar when set to None,"Seems to have been an indentation issue, but I've also ensured the toolbar option is propagated to the OverlayPlot. Layouts and Grids probably needs their own way of disabling and placing toolbars, but that's a separate issue.",2,1,"['type: bug', 'tag: backend: bokeh']"
1716,120675811,1440,19542768,2017-05-15 19:28:17,2017-05-15 23:53:14,closed,Fix for initializing batched plot with empty element,Since we now support empty elements the previous approach in this code to get a non-empty element breaks if you're trying to initialize a batched plot with an empty element.,2,1,"['type: bug', 'tag: backend: bokeh']"
1717,120673757,1439,19542768,2017-05-15 19:16:31,2017-05-15 20:50:37,closed,Attach linked streams in batched mode,"In batched mode linked streams weren't being attached, previously this would have been handled by the OverlayPlot wrapping the batched plot. I think this fix won't cause any issues but I'll run through examples now to double check.",3,2,"['type: bug', 'tag: backend: bokeh']"
1718,120621016,1438,19542768,2017-05-15 14:54:02,2017-05-15 16:06:59,closed,Filter style opts for plots not declaring style_opts,The logic here was slightly wrong in that plots can declare that they have no valid ``style_opts`` and filtering should still be applied.,2,1,['type: bug']
1719,120504371,1436,19542768,2017-05-14 22:10:48,2017-05-15 23:55:14,closed,Miscellaneous stream improvements,"This PR aims to implement the suggestions in issue #1426. 

The first commit distinguishes ``SingleTap`` from ``Tap`` and ``DoubleTap`` where ``Tap`` is supposed to capture all tap events.

@bryevdv Unfortunately I can't quite implement the intended semantics for ``Tap`` as a double tap event should resolve into two taps. As far as I can tell, the way hammer is used in bokeh does not allow for this. 

Is this correct? Would it be reasonable to add a bokeh event that reflects all taps, whether single or part of a double tap?",12,6,['tag: API']
1720,120500017,1435,19542768,2017-05-14 20:09:16,2017-06-19 01:18:49,closed,Add .iloc and .ndloc integer indexing methods for Datasets,"Adds a tabular integer indexing interface for all data interfaces, allowing slicing and indexing by row and column indices. In the case of gridded ndarray data this operates on the flattened arrays. The main issue is that dask does not support integer indexing so ``iloc`` actually has to evaluate the graph and load a whole column at a time into memory, we should probably warn about this.

Valid signatures:

```
# Get first row
ds.iloc[0]

# Get first 10 rows
ds.iloc[:10]

# Get 1st, 3rd and 5th row
ds.iloc[[1, 3, 5]]

# Get every 3rd row
ds.iloc[::3]

# Get first column
ds.iloc[:, 0]

# Get 1st and 3rd column
ds.iloc[:, [0, 3]]

# Get columns 1 to 3
ds.iloc[:, 1:4]
```

And any combination of these.

- [x] Support for row, column indexing on all interfaces
- [x] Support ndarray like indexing on gridded interfaces
- [x] Unit tests
- [x] Better docstrings
- [x] Documentation

This also allows for the following optimizations:

- [x] Improve the ``decimate`` operation implementation
- [x] Improve ``Tabular`` indexing and implement truncating of bokeh table output
- [x] Vectorized Image.sample using sheet2matrixidx (fixing #1450)
",9,20,"['type: feature', 'tag: component: data']"
1721,120088031,1431,19542768,2017-05-11 11:54:39,2017-05-11 14:10:15,closed,Pinned pandas version on travis to 0.19.2,Tests are failing because pandas 0.20.1 is incompatible with dask 0.13. Might also consider pinning pandas to 0.19.2 instead.,2,1,[]
1722,120007953,1430,19542768,2017-05-11 00:58:45,2017-05-12 13:00:40,closed,Optimized datashader aggregation of NdOverlays,"This PR provides major optimizations when using the datashader operations to aggregate multiple objects in an NdOverlay using the ``count``, ``sum``, and ``mean`` operations. Each Element is aggregated separately and the individual aggregates are summed. A small complication is that ``NaNs`` have to be replaced by zeros and masked at the end. ``mean`` is supported by dividing ``sum`` and ``count`` aggregates. This avoids the large memory and performance overhead of concatenating multiple dataframes together. I'm still working on adding an optimization for ``count_cat`` but it should also be fairly straightforward.",9,5,[]
1723,119878006,1429,19542768,2017-05-10 13:05:17,2017-05-16 01:57:34,closed,Non-blocking periodic_events method on DynamicMap,"This PR aims to address #1428 and replaces the Periodic stream prototype we were testing. It should be possible for the bokeh renderer to install a bokeh appropriate utility when running as a bokeh app.


## Action items

- [x] Add general periodic utility to core (simple threaded approach)
- [x] Add periodic_events method to DynamicMap.  
- [x] All count of None to run indefinitely
- [x] Bokeh server support (i.e when running as a bokeh app)
- [x] Update tutorials to mention this and use it
- [x] Unit tests

",8,18,[]
1724,119496947,1424,19542768,2017-05-08 17:36:53,2017-05-08 19:08:34,closed,Small fixes for non-categorical group/stack dimension in Bars,"Of course following #1416 I found a few small issues in the implementation, which are addressed here.",3,1,"['type: bug', 'tag: backend: bokeh']"
1725,119364587,1421,19542768,2017-05-08 01:42:51,2017-05-08 13:49:04,closed,Operation refactor in core,"This PR implements part of the suggestion in #1419, removing ``MapOperation`` and merging ``Operation`` and ``ElementOperation``.

It doesn't do anything to ``TreeOperation`` just yet which results in the duplication of classmethods. I would like to see this PR merged before I continue reviewing the new operations tutorial.",3,3,[]
1726,119360309,1418,19542768,2017-05-08 00:05:04,2017-05-08 16:30:53,closed,Drop HLine/VLine zorder to annotation level,HLine/VLine now no longer go outside the space inside the axes.,2,1,"['type: bug', 'tag: backend: bokeh']"
1727,119336314,1416,19542768,2017-05-07 12:04:46,2017-05-08 16:29:54,closed,Bokeh bar plot,"In https://github.com/ioam/holoviews/issues/1407 I outlined the way forward for the Bar plot implementations. Since bokeh charts will be split out imminently and I'll be using Bars in at least one project I thought it would be worth replacing the bokeh charts based implementation immediately. This new implementation retains all the functionality of the charts based implementation, while adding more features and improvements:

* Better control over legends
* Better support for updating barplots as part of HoloMaps/DynamicMaps
* **Much** better performance (at least 10x faster for more complex charts) because this implementation uses one vectorized glyph rather than a bunch of individual glyphs like the chart based implementation did.
* Support for colormapping bars
* Better support for overlaying bars
* Support for horizontal bars via the ``invert_axes`` plot option
* Support for log mapping bar heights

[Here](https://anaconda.org/philippjfr/bars/notebook) is the notebook I used to develop the plotting class with an extensive list of examples.",4,10,['tag: backend: bokeh']
1728,119297684,1415,19542768,2017-05-06 11:59:02,2017-05-16 00:03:11,closed,Fix for change in bokeh marker orientation API,"Fix for #1403, the API to change the bokeh marker orientation changed a while back and the aliases defining certain marker types was never updated.",4,1,"['type: bug', 'tag: backend: bokeh']"
1729,119297445,1414,19542768,2017-05-06 11:51:55,2017-05-07 23:44:08,closed,Fixed bug dropping duplicate HoverTools,"HoverTools with the same tooltips should be merged and duplicates dropped, unfortunately I forgot to drop them after they are merged originally. Fixes https://github.com/ioam/holoviews/issues/1404",3,2,"['type: bug', 'tag: backend: bokeh']"
1730,119297061,1413,19542768,2017-05-06 11:40:17,2017-05-28 22:30:57,closed,Various fixes for bokeh static_source optimization,In https://github.com/ioam/holoviews/issues/1396 it was suggested that the ``static_source`` optimization in bokeh should only kick in if both the element and its data are static.,5,5,"['tag: backend: bokeh', 'status: WIP']"
1731,119296591,1412,19542768,2017-05-06 11:20:59,2017-05-06 13:27:10,closed,Fixes for pandas 0.20(.1) compatibility,Addresses #1410 avoiding imports from ``pandas.tslib`` and replacing a usage of ``df.ix`` which have both been deprecated.,4,1,[]
1732,119230799,1408,19542768,2017-05-05 18:19:00,2017-05-05 19:35:04,closed,Ignore Vega cmaps when defining palettes,"As described in https://github.com/ioam/holoviews/issues/1402 importing the matplotlib backend with matplotlib 2.0.1b1 raises deprecation warnings about vega colormaps, which will now be ignored.",2,1,[]
1733,118887722,1405,19542768,2017-05-04 01:49:29,2017-05-05 18:57:55,closed,Fixed bokeh BarPlot implementation,"We've been discussing the Bars element quite a lot recently and that its behavior was confusing. Having had to use Bars extensively I now realize the reason for that is that the current implementation doesn't really make any sense and is completely inconsistent with what the matplotlib version does.

While we will deprecate this bokeh charts plot implementation in favor of our own very soon, I still think this is worth fixing for the time being. In future we have plans to allow grouping and stacking of Bars by overlaying them. However as we move away from a bokeh charts based interface the behavior it has now is probably reasonable for a transitional period while we solve issues surrounding categorical axes in the matplotlib backend and issues surrounding nested coordinate systems in bokeh. The matplotlib plot should still be simplified to disallow simultaneous grouping and stacking, resulting in a horrendously complicated plotting class.",6,2,"['type: bug', 'tag: backend: bokeh']"
1734,118765729,1401,19542768,2017-05-03 13:49:25,2017-06-15 16:44:44,closed,Fixed bug in HeatMap aggregation when no global ordering found,When generating a HeatMap the aggregation code attempts to figure out a global ordering for the x-axis and y-axis categorical factors by considering the partial orderings of the y-coordinates for each x-coordinate using topological sort. Finding a global ordering in this way can fail in which case the entire HeatMap fails to display. If no global ordering can be found this now simply sorts the y-coordinates ensuring something is displayed.,4,1,['type: bug']
1735,118763908,1400,19542768,2017-05-03 13:40:57,2017-05-03 17:21:20,closed,Fixed py3 bug mapping bokeh Table values,Table values get mapped to strings using the d.pprint_value function but in py3 ``map`` returns a ``map`` object which has to be expanded to a list before it can be passed as a column to the table.,2,1,"['type: bug', 'tag: backend: bokeh']"
1736,118756327,1399,19542768,2017-05-03 13:04:07,2017-05-03 17:21:08,closed,Fixed bug in sorting on array interface,"It appears that sorting on the ArrayInterface was broken in certain cases, this creates a recarray view to perform the sorting on, which should work more robustly. I'll add a couple of tests before this is ready to merge.",5,2,"['type: bug', 'tag: component: data']"
1737,118430336,1391,19542768,2017-05-01 19:59:40,2017-05-05 18:57:40,closed,Added Operations tutorial,"Adds an Operations tutorial which provides background for the Dynamic Operations tutorial I will add soon.

The notebook including outputs can be seen [here](https://anaconda.org/philippjfr/operations/notebook)",2,4,['tag: docs']
1738,118276697,1387,19542768,2017-04-29 14:25:28,2017-05-02 12:52:00,closed,Reverse map renamed stream parameters in dynamic operations,Streams can inherit parameters from dynamic operations when their values are None. However this currently breaks for renamed parameters because the operation and stream parameters do not match in those cases. This PR ensures that renamed stream parameters are reverse mapped fixing the bug.,3,2,['type: bug']
1739,118176722,1385,19542768,2017-04-28 15:25:15,2017-06-12 19:32:08,closed,Added various linked Stream examples,A number of relatively simple linked stream examples with synthetic data. It might be nice to also have more complex examples which use real data. Feedback on structure of the examples welcome. Also worth considering whether I should add gifs to these notebooks so you can see what they're meant to do when viewed statically.,7,3,['tag: docs']
1740,118137514,1384,19542768,2017-04-28 11:59:45,2017-05-08 21:48:48,closed,Polishing and improving the tutorials added in 1.7,"
This PR aims to improve our new tutorials before 1.7.1 is released, hopefully getting the improved versions of the tutorials live before then. The tutorials to improve are: ``DynamicMap, Streams`` and ``Linked_Streams`` and they are expected to be read in that order.

I think any of us can use this PR to make the improvements we feel are necessary. Obviously anything that might be controversial should be discussed first!

My first commit improves the listing of available linked stream classes.",14,25,['tag: docs']
1741,117961803,1382,19542768,2017-04-27 15:08:45,2017-04-27 16:35:54,closed,Opts line magic now issues keyword warnings in same style as cell magic,Small PR building off #1375 - the opts line magic and cell magic now issue invalid keyword warnings in the same style.,2,1,[]
1742,117755784,1377,19542768,2017-04-26 16:23:08,2017-04-26 17:08:49,closed,Fixed issue with option test teardown,"Fixes this bad interaction in the tests and it might fix part/all of the issue in #1369:

![image](https://cloud.githubusercontent.com/assets/890576/25444994/e52cd308-2aa4-11e7-94a4-1748686ee0eb.png)

@philippjfr I only cleared the custom option trees where I needed to in order to fix the tests. Should I do it in all the option testing classes to be safe?
",3,3,[]
1743,117728004,1375,19542768,2017-04-26 14:26:28,2017-04-26 23:38:28,closed,Added strict class attribute to OptsMagic,"This PR addresses the issue raised in #1373 

With ``strict=True``:

![image](https://cloud.githubusercontent.com/assets/890576/25439447/600d969a-2a94-11e7-9857-da61bd09e0cb.png)

And ``strict=False`` (default):

![image](https://cloud.githubusercontent.com/assets/890576/25439491/7913116a-2a94-11e7-8e0d-ca74a2a20fc9.png)

I used ``sys.stderr`` because the magic classes are not parameterized and the root param logger adds very little of value and would make this type of warning a lot uglier than necessary.",20,7,[]
1744,117703164,1374,19542768,2017-04-26 12:35:18,2017-04-26 13:48:19,closed,Adding Topology in Condensed Matter MOOC as example,,6,1,[]
1745,117548552,1371,19542768,2017-04-25 18:17:19,2017-04-25 19:30:31,closed,"Updates CHANGELOG, README and latest_news item for 1.7.0 release",,1,3,[]
1746,117544033,1370,19542768,2017-04-25 17:54:23,2017-04-25 19:38:14,closed,Updates to setup.py and meta.yaml,"
This PR updates setup.py and meta.yaml for the 1.7 release. After release, setup.py will be updated to use #1368.",6,4,[]
1747,117490190,1368,19542768,2017-04-25 13:53:30,2017-06-29 00:33:29,closed,Added hv.examples to copy notebooks locally,"There may be a better approach but this stuff is very tricky. I'm fairly sure this approach will work:

1 - Set ``pypi_version(True) `` only when building for PyPI.
2 - Get conda to copy the notebooks to a path in the same way [datashader does it](https://github.com/bokeh/datashader/blob/master/conda.recipe/build.sh).

",5,11,[]
1748,117459481,1367,19542768,2017-04-25 11:15:50,2017-04-25 13:01:29,closed,Minor fix to seaborn plots,Tiny fix for bug mentioned in https://github.com/ioam/holoviews/issues/1336,1,1,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
1749,117388416,1366,19542768,2017-04-25 01:27:20,2017-04-25 02:02:58,closed,Updated submodule reference to fix Comms error in docbuilding,,1,1,['tag: docs']
1750,117385478,1365,19542768,2017-04-25 00:50:41,2017-04-25 00:54:01,closed,Added initial draft of Linked_Streams tutorial,"Can be revised later, main addition I want to make is adding links to multiple examples for each stream type.",1,1,"['tag: docs', 'tag: backend: bokeh']"
1751,117379843,1363,19542768,2017-04-24 23:47:47,2017-04-25 01:43:54,closed,Misc bokeh fixes,"* Fixes a bug updating ChartPlots
* Fixes bug merging the renderers of hovertools
* Fixed bug where drop_streams was not failing on non-tuple keys.",1,5,['type: bug']
1752,117379469,1362,19542768,2017-04-24 23:44:00,2017-04-25 01:10:05,closed,Fixed flakes in mpl and plotly backend,"This PR fixes the remaining flakes issues raised with:

```
flake8 --ignore=E,W,F999  .
```",5,4,[]
1753,117360346,1361,19542768,2017-04-24 21:21:04,2017-04-24 23:24:23,closed,Flake fixes,"Fixes the flakes found using:

```
flake8 --ignore=E,W,F999  .
```

We'll need to decided what to do about this one:

```
./util.py:7:1: F401 '.core.util.Aliases' imported but unused
```
",3,12,[]
1754,117345521,1360,19542768,2017-04-24 20:03:37,2017-04-24 21:23:14,closed,Disabled single item legend on bokeh Points,"Tiny PR disabling this from happening when you set a label on a single set of Points:

<img width=""306"" alt=""screen shot 2017-04-24 at 9 03 07 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/25356267/7794281a-2931-11e7-8633-5cd23442f45f.png"">

",2,1,"['type: bug', 'tag: backend: bokeh']"
1755,117331036,1359,19542768,2017-04-24 18:43:36,2017-04-24 19:38:45,closed,Plotting errors,"Both matplotlib and bokeh OverlayPlot and ElementPlot ``update_frame`` methods would previously choke up when a DynamicMap lookup failed and returned a None. This PR ensures that in these cases the Nones are handled correctly and also ensures that lookup errors for any exception except for KeyErrors are printed, and make sure that they will show up in the console. Resolves https://github.com/ioam/holoviews/issues/1102",2,2,"['type: bug', 'tag: component: plotting']"
1756,117176797,1356,19542768,2017-04-24 01:52:16,2017-04-24 18:27:49,closed,Added Streams.define to easily define custom streams,"I'm very excited about this PR as I think it is a huge improvement in ease-of-use for users as I suspect custom streams will be very common.

Users will no longer need to start defining class in notebooks (which is ugly!) when they require a custom stream. Compare this:

![image](https://cloud.githubusercontent.com/assets/890576/25319640/eaff8d66-2897-11e7-8c75-55c76dea1d9a.png)

to this:

![image](https://cloud.githubusercontent.com/assets/890576/25319651/08e69342-2898-11e7-99cb-bec4fa2a4edf.png)

This uses ``type`` to dynamically create a streams class and figures out an appropriate parameter type and sets the value as the default. For a more complete parameter definition, you can do:

![image](https://cloud.githubusercontent.com/assets/890576/25319701/75e31268-2898-11e7-8e0b-448bdb5d4968.png)

Some programmers might object to this dynamic class creation as being too magical (though really, the implementation of ``define`` is trivial) and I personally wouldn't recommend people use this in library code - they should define a normal ``Stream`` subclass in the usual way.

For notebook use where you want to be concise and avoid code and for anyone not familiar with Python OOP, I think this will be highly appreciated. 
",4,7,[]
1757,117156647,1355,19542768,2017-04-23 16:46:14,2017-04-23 17:22:18,closed,Added support for constructing empty Dataset types,"All Dataset interfaces except the deprecated NdElement interface now support constructing an empty dataset of the right shape when given an empty list. If you can think of another specification that should also mean empty that would be trivial to add. I think this capability is important when working with streams because often your selection, streamed data or whatever else is empty to begin with and constructing an empty Element can often be a pain.",4,1,"['type: feature', 'tag: API', 'tag: component: data']"
1758,117145171,1353,19542768,2017-04-23 11:10:05,2017-04-23 15:25:55,closed,Stream clear method now supports policies by precedence,This PR improves the clear method to make it easier for users to use their own subscribers and clear them without clobbering the subscribers installed by HoloViews. Currently the default policy is 'all' but I might consider making it 'user' instead.,2,4,['status: ready']
1759,117132110,1352,19542768,2017-04-23 01:25:31,2017-04-23 11:21:34,closed,Fixes for the PlotSize stream,"I accidentally left the PlotSize stream in my previous PR disabled, I also set the default width/height to None so the user specified datashade operation width/height end up overriding it on initialization.",2,1,['type: bug']
1760,117121204,1351,19542768,2017-04-22 18:58:48,2017-04-23 01:16:08,closed,Miscellaneous fixes,"This PR contains an assortment of fixes for issues I encountered while updating the documentation. I will update the descriptions of what I've fixed as I go:

* Added some unit tests for swapping positional kdim arguments when listed by name.
* Unbounded DynamicMaps no longer display regardless of cache size. This is more consistent with the old behavior and less confusing.
* Applying redim on values now filters the DynamicMap cache accordingly. Some nasty errors occurred without this.
* Validated HLines and VLine constructors by declaring appropriate parameters.
* Fixed clone on annotations accordingly.
* Generalized the x,y parameters of annotations to support time types.
* Improved Callable names and improved exception handling in Callables.
* Enforced that OperationCallables have a supplied operation.
",4,18,[]
1761,117120502,1350,19542768,2017-04-22 18:39:29,2017-04-22 19:26:40,closed,Fix Callback comm caching and empty events,"This PR fixes two nasty bugs, the first is in caching comms which previously did not work and a new comm was created for each and every event. The second is PlotSize events sending zero sizes which in some cases could cause kernel crashes either due to datashader or somewhere in the plotting code choking on the zero sized array.",2,2,['type: bug']
1762,117113513,1349,19542768,2017-04-22 15:23:32,2017-04-22 16:51:24,closed,Small fixes for dynamic select,"There were two small issues with select, dynamic overlaying was not specifying which objects it wants to be selecting on and secondly Datasets weren't validating selections applied to them.",2,1,['type: bug']
1763,117107948,1348,19542768,2017-04-22 12:33:14,2017-04-22 17:27:32,closed,Fixed JS logic to check for comm_manager,"Currently when you reload a notebook with a comm in it, displaying the plot will fail because at time of execution a kernel might not yet exist and the logic to check for it is not quite correct.",1,1,['type: bug']
1764,117091459,1347,19542768,2017-04-22 01:55:35,2017-04-22 12:03:30,closed,Fixed HSV.rgb property y-axis inversion,Fix for https://github.com/ioam/holoviews/issues/1346 with some unit tests for different interfaces.,2,1,"['type: bug', 'tag: component: data']"
1765,116989264,1344,19542768,2017-04-21 13:48:46,2017-04-21 15:29:07,closed,Added RollingBase for consistency between rolling and rolling_outlier_std,"With a shared base class, it's simpler to set parameters that apply to both these operations.  This change also makes rolling_outlier_std slightly more powerful, because users can now control more of the options involved. 

Also made docstring fixes and fixed a bug where rolling was meant to have special behavior depending on the window_type but was checking the window length instead.",1,2,[]
1766,116985316,1343,19542768,2017-04-21 13:28:53,2017-04-21 22:22:34,closed,Handle empty subplots and overlay layers,"This PR adds some additional validation to the plotting code to check for empty objects, which are then skipped rather than causing errors somewhere downstream in the code.",12,9,['tag: component: plotting']
1767,116961470,1342,19542768,2017-04-21 11:01:45,2017-04-21 11:36:41,closed,Expose edgecolors for 3D surface plots,Because the default style in mpl 2.0 was changed from 'k' to 'w' I exposed the `edgecolors` style option to change it back if wanted.,1,1,"['tag: backend: mpl', 'tag: component: options']"
1768,116898095,1341,19542768,2017-04-21 01:58:52,2017-04-25 00:42:37,closed,Updated Dynamicmap tutorial and new Stream tutorial,This PR updates the DynamicMap tutorial. Note I'm making very granular commits so I would recommend a squash type merge for this PR.,11,5,['status: WIP']
1769,116869832,1337,19542768,2017-04-20 21:37:20,2017-04-21 00:54:07,closed,Fix for static_source optimization,Since glyph styles depend on the data especially on batched plots the static_source optimization on bokeh plots can result in the wrong colors being applied. This fix means the data will be processed but not sent.,2,1,"['type: bug', 'tag: backend: bokeh']"
1770,116843728,1335,19542768,2017-04-20 19:11:47,2017-04-20 19:40:03,closed,Flip dynspread output correctly,The output is currently flipped along the y-axis.,2,1,['type: bug']
1771,116842680,1334,19542768,2017-04-20 19:05:57,2017-04-20 20:45:23,closed,Disabled batched plot optimization,This optimization was a nice idea as it would avoid sending ColumnDataSource columns which all contain the same value and it might be possible to get it to work but it doesn't deal with empty elements well currently and I don't want to fiddle more before release.,2,1,"['type: bug', 'tag: backend: bokeh']"
1772,116807017,1333,19542768,2017-04-20 15:59:52,2017-04-20 18:49:16,closed,Added support for batching plot updates,"Adds precedences to Stream subscribers, which allow updates to individual subplots to be batched. Each subplot now adds itself as a subscriber along with the top-level plot. When a subplot is updated it marks itself with an ``_update`` flag so that the top-level plot can then dispatch the necessary updates once the subplot updates have completed.

* [x] Ensure GridPlot/LayoutPlot titles are updated
* [x] Ensure that batched OverlayPlots aren't getting updated multiple times.",3,1,[]
1773,116800769,1332,19542768,2017-04-20 15:33:32,2017-04-20 17:13:26,closed,Made aggregate() and datashade() compute plot size automatically,"Seems like nearly everyone will want this, and it's easy enough to override if you don't.",3,2,[]
1774,116777417,1331,19542768,2017-04-20 13:57:37,2017-04-21 01:46:39,closed,Wait for DOM to be ready to initialize widgets,"Potentially fixes issues when embedding HoloMaps into a website.

Seems to be fixing previous issues, this example wasn't working before and you can now clearly tell how it waits until the document is loaded until creating the widgets: http://assets.holoviews.org/topocm/w4_haldane/haldane_model.html",4,1,['type: bug']
1775,116777314,1330,19542768,2017-04-20 13:57:16,2017-04-20 15:07:00,closed,Silenced expected warning from the rolling_outlier_std operation,"The `rolling_outlier_std` operation first computes a rolling window, using a calculation that leaves NaN values at the beginning and end of the series (depending on the size of the window).  `np.abs()` was raising a warning ``invalid value encountered in absolute``, but this warning is just distracting because invalid values are expected in this case, so this PR ensures that the warning is silenced.",2,1,[]
1776,116765645,1329,19542768,2017-04-20 13:02:16,2017-04-20 15:01:15,closed,Avoid overriding %matplotlib inline in notebook,We were previously overriding the default backend because the all defaults were loaded from the rc file. The notebook_extension now also doesn't override the currently set backend if it is already valid for the notebook.,2,1,[]
1777,116665979,1328,19542768,2017-04-20 00:00:24,2017-04-20 12:33:07,closed,Ensure Plots correctly cache lookups in DynamicMaps,"Ensures the plots respect the _force option telling them not to request a new frame on the DynamicMap, both during initialization and for subsequent updates. Relies on the fact that the initialization pass of creating Plots does not care which exact Element is being plotted, since it is subsequently updated again anyway.",4,4,[]
1778,116658108,1327,19542768,2017-04-19 22:49:24,2017-04-19 23:48:10,closed,Miscellaneous fixes,"This PR fixes two problems without associated issues related to recent changes: a problem where the opts line magic was showing unnecessary warnings and a regression where empty HoloMaps weren't being displayed as a repr.

I'm happy to add more miscellaneous fixes if I hear any suggestions. Otherwise this PR is ready for review once the tests pass.",2,7,['status: ready']
1779,116633217,1326,19542768,2017-04-19 20:20:02,2017-04-19 22:01:36,closed,Link inputs fixes,"The main issue fixed here is that linked_inputs was being inherited when making a clone, when a clone should always link_inputs. I've also ensured that the decimate operation links inputs and fixed a small bug while hooking up the stream sources.

Fixes: https://github.com/ioam/holoviews/issues/1325",2,4,['type: bug']
1780,116573419,1324,19542768,2017-04-19 15:16:48,2017-04-19 22:30:21,closed,Send numeric bokeh Table data unformatted,"Currently we are formatting all the ``Table`` cells with the ``Dimension.pprint_value`` method before they are sent to display in bokeh. As pointed out in https://github.com/ioam/holoviews/issues/1317, this means that floats and integers are treated as strings, which means they do not sort correctly. Additionally sending floats and integers is more efficient because they can make use of base64 serialization.",3,1,"['type: bug', 'tag: backend: bokeh']"
1781,116562749,1323,19542768,2017-04-19 14:33:08,2017-04-19 16:05:51,closed,Do not change mpl interactive mode in notebook,"When I implemented support for using the matplotlib backend outside a notebook context I added some code which fiddles with the interactive mode of pyplot, which interacts badly with the inline mode in the notebook. This PR ensures that when the notebook_extension loads the matplotlib backend a flag is set that ensures interactive mode is not disabled.

Fixes #1314 ",3,3,"['type: bug', 'tag: backend: mpl']"
1782,116549229,1322,19542768,2017-04-19 13:34:43,2017-04-19 16:38:39,closed,Added example of using aliases to Columnar_Data tutorial,"Addresses https://github.com/ioam/holoviews/issues/1001, providing an example and explanation of using dimension aliases with a real dataset.",5,2,['tag: docs']
1783,116543586,1321,19542768,2017-04-19 13:07:22,2017-04-19 15:37:24,closed,Fixed bugs in applying datashader operations,Fixes the dynspread operation which did nothing before and fixes a bug applying streams in the Dynamic utility when applying an dynamic operation to a static element.,6,3,['type: bug']
1784,116537168,1320,19542768,2017-04-19 12:34:53,2017-04-19 14:49:12,closed,Consistent event method on DynamicMap and Stream,"
This PR just makes triggering events consistent between ``DynamicMap`` and ``Stream``: use the ``event`` method which always triggers.

Ideally the default of ``Stream.update`` would be ``trigger=False`` but that might have some backwards compatibility implications. Namely, anyone using ``stream.update`` as a callback would have to change it to ``stream.event`` to get the same behavior.",3,5,"['tag: API', 'status: ready']"
1785,116528609,1319,19542768,2017-04-19 11:45:17,2017-04-20 17:11:51,closed,Restore generator and argument-free callable support,"This PR is clearly docs related: instead of apologizing for dropping support for generators, I thought we might as well support them again. ;-p

Essentially, I realized that you could have stream objects without stream parameters, allowing support for callbacks accepting no arguments:

![image](https://cloud.githubusercontent.com/assets/890576/25178756/1b3a4788-24ff-11e7-96cb-90e538542d23.png)

And generators:

![image](https://cloud.githubusercontent.com/assets/890576/25178728/f08609be-24fe-11e7-8674-673b552cd97c.png)

Very little code needed to be changed so I think this is a decent prototype of how generators can be supported with our new simplified DynamicMaps.",15,11,[]
1786,116408892,1316,19542768,2017-04-18 20:03:26,2017-04-18 20:57:43,closed,Removed sanitize_HTML from display hooks,"
Simple PR to address #1311. The changes are trivial but the notebook display tests may need updating.",2,1,['status: ready']
1787,116403310,1315,19542768,2017-04-18 19:33:21,2017-04-18 22:14:29,closed,Ensure streams are transferred when applying Dynamic,"Currently the Dynamic utility does not inherit the streams of the DynamicMap it is wrapping. Since it is used for internal operations like redim, map, select, etc. this is confusing because streams you specified just disappear. This PR ensures that internal operations always inherit **ALL** the streams, while Dynamic also ensures that dimensioned streams (i.e. streams that have contents which correspond to a Dynamic key dimension) are always inherited. This will also have the added bonus that validation will ensure that you you don't accidentally override a dimensioned stream.

* [x] Ensure internal operations/methods transfer all streams
* [x] Ensure that Dynamic always transfers dimensioned streams
* [x] Improve exception message when overriding dimensioned stream.",2,4,[]
1788,116363518,1313,19542768,2017-04-18 16:04:56,2017-04-18 18:28:20,closed,Ensure batched plots respect parameters set on (Nd)Overlay,"In batched mode the OverlayPlot exists only as an intermediate layer and is not responsible for creating the axes or the actual plot object. This means this is all delegated to the batched ElementPlot, but this also means that any options set on the OverlayPlot are ignored, which is inconsistent and confusing. Since the options this applies to already propagate upwards from ElementPlots to the OverlayPlot we can use the same mechanism to pass those options back down to the batched ElementPlot, ensuring that they are respected.

This is particularly import for things like grids where options should propagate downwards from the gridplot to all the subplots, e.g. here's an example from a GridMatrix plot with batched subplots

**Before:**

![screen shot 2017-04-18 at 5 03 48 pm](https://cloud.githubusercontent.com/assets/1550771/25140700/1a36c7a4-2459-11e7-8696-c61da16936b1.png)

**After**:

![screen shot 2017-04-18 at 5 02 59 pm](https://cloud.githubusercontent.com/assets/1550771/25140713/21126132-2459-11e7-943e-bdafc230fbf4.png)
",1,2,"['type: bug', 'tag: component: plotting']"
1789,116320549,1310,19542768,2017-04-18 12:54:28,2017-04-18 18:46:26,closed,Small fix for Polygons/Contours colormapping,Small bug when colormapping a Polygons/Contours object. The unit test already checked the colormapper was created but didn't check it was actually used.,1,1,"['type: bug', 'tag: backend: bokeh']"
1790,116305291,1309,19542768,2017-04-18 11:21:50,2017-05-29 19:06:52,closed,Added pivot option to bokeh VectorField plot,"I was just going through my example and came across [this demo](http://matplotlib.org/examples/pylab_examples/quiver_demo.html) for quivers I had already adapted for the matplotlib backend. The third plot shows how to change the pivot point of the quivers, and since this is a trivial option to support I thought it would be a shame if bokeh didn't. Here is an example:

<img width=""508"" alt=""screen shot 2017-04-18 at 12 21 26 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/25128412/942c2428-2431-11e7-945f-0ff61a246751.png"">

Compared to the matplotlib version:

![image](https://cloud.githubusercontent.com/assets/1550771/25128461/c2c146a6-2431-11e7-958b-a199de57ca31.png)

",10,2,"['type: feature', 'tag: backend: bokeh']"
1791,116299229,1308,19542768,2017-04-18 10:43:09,2017-04-18 11:23:11,closed,Fixed unreferenced variable in decimate operation,Tiny one line fix.,1,1,['type: bug']
1792,116220558,1306,19542768,2017-04-17 23:06:08,2017-04-17 23:58:46,closed,Avoid side-effects in datashader operation,The kdims and vdims declared here are modified later messing up modifying the kdims and vdims on the original object.,2,1,['type: bug']
1793,116192735,1305,19542768,2017-04-17 20:04:16,2017-04-19 00:58:27,closed,Improve DynamicMap usability and deprecate sampled mode,"After PRs #1238, #1260 and #1302, DynamicMaps are much more user friendly. After #1302 we realized we could also deprecate sampled mode, finishing off the job of #1238.

In particular you can now create a DynamicMap using this syntax:

```python
hv.DynamicMap(lambda x: hv.Curve([x*1,x*2,x*3]), kdims=['x']).redim.range(x=(0,1))
```

But if you forget to set the ranges, an exception is currently raised. Instead, what should happen is that the repr of the ``DynamicMap`` should be shown with a warning, suggesting the use of ``redim.range``. 

This would make a basic, valid DynamicMap declaration completely analogous to that needed to declare a HoloMap: instead of ``HoloMap(data, kdims=['x'])`` you'll be able to do ``DynamicMap(callable, kdims=['x'])``. This object won't display itself (unless you follow the ``redim.range`` advice in the warning but you can visualize it by indexing (i.e sampling) it.

In addition to being more user friendly, this should make sample mode unnecessary and actually simplify the implementation. I would also like to add all extra validation to DynamicMap declarations that I can think of to make our exceptions more user friendly.

## Tasks

- [x] Fix bug in ``_initial_key``
- [x] Improve exception message when an ``_initial_key`` cannot be generated  (dimension ranges lacking)
- [x] Raise a SkipRendering exception to show the DynamicMap repr and a suitable warning.
- [x] Remove sample mode
- [x] Add extra validation, perhaps in ``redim``.
- [x] Add unit tests
",9,39,['status: ready']
1794,116191361,1304,19542768,2017-04-17 19:56:21,2017-04-17 23:06:34,closed,Reverted change to Dynamic utility,"In #1297 I seem to have introduced a bug to the Dynamic utility, reverting here.",2,1,['type: bug']
1795,116166019,1303,19542768,2017-04-17 17:23:51,2017-04-17 17:52:17,closed,Handle additional linked stream condition,Followup for #1297 to handle one more condition where a DynamicMap which returns an (Nd)Overlay itself has linked streams.,1,1,['type: bug']
1796,116159651,1302,19542768,2017-04-17 16:39:41,2017-04-17 18:39:54,closed,Unified redim implementation with convenience methods,"This PR unifies redim and makes it much more convenient to use, which is especially helpful for DynamicMap declarations. You can now do:

![image](https://cloud.githubusercontent.com/assets/890576/25095982/065d1e5e-2396-11e7-96e0-ba943a57533b.png)

Instead of the more verbose equivalent we have been using till now:

![image](https://cloud.githubusercontent.com/assets/890576/25095661/8dbf30f0-2394-11e7-9dd7-d95b48d5f05e.png)

Even for this simplest possible example with only a single kdim, the new style is shorter.

All existing use of redim should act in exactly the same way. What is new are all the redim auxiliary methods that make it easier to pick a particular Dimension parameter to change.

## Tasks

- [x] Unify redim, removing existing redim methods
- [x] Implement auxiliary redim methods
- [x] Write more redim unit test",4,7,['status: ready']
1797,116155535,1301,19542768,2017-04-17 16:08:30,2017-04-17 18:40:19,closed,Do not attach stream subscribers to batched ElementPlot,"Batched plots create both an OverlayPlot and an ElementPlot instance which currently both attach themselves as stream subscribers, however the correct thing to do is for only the OverlayPlot to attach itself so that the batched plot is updated correctly.",4,2,"['type: bug', 'tag: component: plotting']"
1798,116121095,1300,19542768,2017-04-17 10:53:22,2017-04-17 15:33:05,closed,Added custom rcParam context manager,"For some reason the context manager to set rcParams provided by matplotlib is not working correctly, I've implemented a tiny one of our own here which fixes the bug mentioned in https://github.com/ioam/holoviews/issues/1299.",3,2,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
1799,116059907,1297,19542768,2017-04-16 14:10:29,2017-04-17 16:03:32,closed,Fixed dynamic stream sources assignment in plotting code,"Previously the ``get_sources`` function was very wrong in the way it reconstructed the individual layers of an Overlay from a DynamicMap. This resulted in issues in correctly detecting stream sources while plotting. This PR readds the OverlayCallable class which lets an improved ``get_sources`` function correctly infer stream sources.

Will add a lot of unit tests for the ``get_sources`` function before merging.",7,18,['type: bug']
1800,115947729,1296,19542768,2017-04-14 15:36:44,2017-04-24 20:23:43,closed,Explanation of rich display approach in HoloViews,"Notebook starting from scratch explaining how HoloViews provides rich display for complex data, just as Python already does for simple data.",4,3,[]
1801,115946327,1295,19542768,2017-04-14 15:26:40,2017-04-14 16:21:48,closed,Raise KeyError when attempting to slice Layout ,Also snuck a unit test for annotations in here.,2,3,[]
1802,115923479,1293,19542768,2017-04-14 12:14:02,2017-04-14 13:29:14,closed,Deprecated max_branches output magic option,"
This PR addresses #1026 by deprecating the ``display`` method on Layout and the ``max_branches`` option of the output magic. All Layouts should now be displayed consistently.

The only potential improvement might be to use param.warning instead of a print statement. I'm not sure this is necessary though as the output magic isn't normal user API and isn't parameterized. In this case a simple print statement seems fine instead of using the global param logger which isn't ideal in any case.

",1,6,[]
1803,115869568,1292,19542768,2017-04-14 01:02:12,2017-04-14 03:22:46,closed,Added support for GridImage deprecation in OptsSpec parser,"
This PR addresses issue #1252 by converting 'GridImage' to 'Image' in the opts parser. Here is an example of what it does:

![image](https://cloud.githubusercontent.com/assets/890576/25029540/50220f8c-20b6-11e7-86b6-2f64ae12cfde.png)

",5,2,['status: ready']
1804,115868343,1291,19542768,2017-04-14 00:44:53,2017-04-14 01:03:23,closed,Restored logo parameter and removed banner text,"This PR reverts the changes of PR #1231 after the discussion in issue #1186.

The logo switch has now been restored and the banner message disabled In HoloViews 2.0 we would like a logo per backend (or better, combine logos somehow?)

Here is the new behavior:

![image](https://cloud.githubusercontent.com/assets/890576/25029304/ef8af53c-20b3-11e7-86cc-9876e7c54df3.png)
",2,1,['status: ready']
1805,115857209,1290,19542768,2017-04-13 22:42:29,2017-04-13 23:38:37,closed,Improved handling of errors in notebook_extension,Better exception handling when loading backends using the notebook_extension.,5,1,[]
1806,115849532,1289,19542768,2017-04-13 21:46:15,2017-04-13 23:20:36,closed,Fixed py3 bug on Renderer.export_widgets,"Renderer.export_widgets wasn't correctly declaring it was writing bytes.

Fixes https://github.com/ioam/holoviews/issues/1234",4,1,['type: bug']
1807,115810871,1288,19542768,2017-04-13 18:01:10,2017-04-13 23:29:02,closed,Ensure max_cycles persists on style for non-batched plots,Fixes a bug where in non-batched mode the max_cycles on styles would be reset causing Palettes to work incorrectly. Going to try adding some tests for this.,2,2,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1808,115635971,1287,19542768,2017-04-12 21:06:15,2017-04-12 21:06:56,closed,Add teardown to RGBInterfaceTest,The RGBInterfaceTest wasn't defining a teardown causing potential bad interactions with other tests.,1,1,"['type: bug', 'tag: component: testing']"
1809,115627217,1286,19542768,2017-04-12 20:19:55,2017-04-13 01:42:31,closed,Allowed styling bokeh hover glyphs,"I introduced all the machinery for this in https://github.com/ioam/holoviews/pull/1220 but forgot to enable it for hover glyphs. Here's an example of applying styling to the glyph for a QuadMesh Element:

![hover](https://cloud.githubusercontent.com/assets/1550771/24977658/add949a2-1fc5-11e7-8c25-496750e7f8ac.gif)
",1,1,"['type: feature', 'tag: backend: bokeh']"
1810,115607425,1285,19542768,2017-04-12 18:35:10,2017-04-13 18:06:47,closed,Disable caching of renderer parameters on OutputMagic ,Additionally ensures that the order of backends supplied to the notebook_extension is respected. Fixes https://github.com/ioam/holoviews/issues/947.,2,12,['tag: notebook']
1811,115539194,1283,19542768,2017-04-12 13:13:51,2017-04-12 17:16:52,closed,Added BokehRenderer.app method to create bokeh apps in scripts and notebooks,Adds convenience method to create bokeh Apps from any holoviews object. In a script it simply returns the ``doc`` but when used with notebook option creates an ``Application`` instance which is displayed and returned.,7,4,"['tag: API', 'tag: backend: bokeh']"
1812,115537439,1282,19542768,2017-04-12 13:05:11,2017-04-12 14:16:55,closed,Allow casting Image to QuadMesh,This reapplies https://github.com/ioam/holoviews/pull/1223 as it seems to have gotten lost when rebasing the image interface.,2,1,['tag: API']
1813,115535072,1281,19542768,2017-04-12 12:53:26,2017-04-12 15:22:57,closed,Handle empty aggregation in datashader operations,"As the title says, this handles empty aggregates gracefully in the datashader operations and ensures the both the interfaces and plotting backends display handle the resulting aggregates correctly.",8,5,[]
1814,115521888,1280,19542768,2017-04-12 11:37:12,2017-04-12 12:58:23,closed,Remove links to transforming data page,"
This PR addresses #1077. We opted to remove links to the transforming data page as it was incomplete and not in the notebook format. In addition the links to it were mostly mentioning slicing so the Sampling Data tutorial seems more appropriate anyway.

I don't think there is much to discuss and unless I get some feedback, I'll just trigger a docs build and merge.",2,5,['status: ready']
1815,115519635,1279,19542768,2017-04-12 11:22:57,2017-04-12 11:42:52,closed,Handle empty arrays and datashader aggregates,"As the title says, this avoids errors when trying to aggregate empty objects and lets the plotting interfaces handle empty arrays.",0,1,[]
1816,115513883,1278,19542768,2017-04-12 10:48:24,2017-04-12 17:17:45,closed,Fixes for grid interface aggregation support with spreadfn,Fixes small bug and adds test for aggregation with spreadfn.,1,1,"['type: bug', 'tag: component: data']"
1817,115441482,1277,19542768,2017-04-12 00:19:39,2017-04-13 21:26:27,closed,Re-enable option system keyword validation,"This PR attempts to re-enable option system keyword validation, addressing issue #1101.

Before HoloViews supported multiple backends, we put a lot of effort into keyword validation. However, once we had multiple backends, it became problematic to have keywords in the opts magic applicable to some other backend other than the current one. As a result, validation was disabled entirely.

One issue is that the new form of validation needs to work across backends. I think the sensible thing is to validate against the *loaded* backends as you don't want to import all possible backends to see what keywords might make sense.

The next issue is more fundamental - our original validation system was based around a custom ``OptionError`` exception that knew about appropriate keywords. The idea was if something was invalid, raise an exception and present it to the user appropriately.

The issue now is that exceptions disrupt the code and each ``OptionError`` was specified per backend. What we want now is to figure out keywords that make sense for *none* of the loaded backends. In other words you need to take a union, and normally if you raise an exception you will only get one exception at a time.

The solution shown here is to allow ``StoreOptions`` to *record* the exception objects that are currently being silently ignored. This lets me collect all the invalid option reports together - if a particular key is reported as invalid for *all* loaded backends, I assume it really is invalid and reraise an ``OptionError`` with it, using the union of all the ``allowed_keywords`` across backends. I hope that makes sense!

One positive thing about this approach is that practically everything is implemented as classmethods on ``StoreOptions`` with almost zero changes to the ``Options``  and ``OptionTrees`` which are pretty hard to understand as it is.

That said, I'm not entirely sure this approach is 100% correct as it doesn't look at which element complained or what type of option complained (i.e plot or style). This is probably fixable by declaring the ``Options`` with a bit more (optional!) information such as the element name and backend. This shouldn't be too bad as the plotting code doesn't actually raise ``OptionError``, instead they declare their allowable plot and style keywords which are used to build ``Option`` instances in the ``Store.register`` classmethod. As everything is declared consistently in one place, we should be able to supply ``Options`` and ``OptionErrors`` with the appropriate metadata to do the correct union operation.

Hope that makes sense!",16,18,"['status: ready', 'tag: component: options']"
1818,115412067,1276,19542768,2017-04-11 20:52:21,2017-04-12 00:46:25,closed,Updated doc/builder and doc/nbpublisher submodules,Various fixes for doc building in the submodules.,2,1,[]
1819,115379762,1275,19542768,2017-04-11 18:02:03,2017-04-11 23:51:09,closed,Option system improvements,"This PR aims to tackle several outstanding issues regarding the option system. To start with, issue #1105 has been resolved. This PR is currently WIP and I'll mention the other issues that have been addressed here as I get to them.

**Edit:** This PR now addresses issue #625 as well.",2,6,['status: ready']
1820,115375405,1274,19542768,2017-04-11 17:39:28,2017-04-11 18:44:00,closed,Fixed comm creation and stream subscriber attachment,"Previously the top_level plot attached itself as a subscriber to all the streams found on the plot. Apart from being inefficient because any change to a stream would trigger replotting of the whole Layout, this could cause issues with one plot triggering range updates on another even though the second plot hadn't changed at all. 

In this PR each subplot is given access to the comm which means each subplot can be responsible for updating themselves.",3,1,[]
1821,115331772,1273,19542768,2017-04-11 14:18:45,2017-04-12 11:14:31,closed,Fix broken links in documentation,"
This PR addresses issues  #198 and #1251 regarding broken links.",5,10,[]
1822,115317893,1271,19542768,2017-04-11 13:17:41,2017-04-11 16:32:13,closed,Ensure old paths aren't dropped when combining Layouts,Fixes bug encountered when adding another plot to a collated Layout. The main issue seems to be that it ignored custom paths which do not match the auto-computed paths generated by computing a path from the group and label.,2,3,[]
1823,115306662,1270,19542768,2017-04-11 12:19:12,2017-04-11 13:43:06,closed,DynamicMap tutorial fixes,"
DynamicMap has just gone through a refactor and a lot of functionality has been added to ``Callable``. This PR is to make sure the DynamicMap tutorial works properly, addressing issue #1053.",2,2,[]
1824,115302409,1269,19542768,2017-04-11 11:53:15,2017-04-11 12:42:03,closed,Passed Element to mpl ElementPlot._finalize_axis,In debugging another issue I found that matplotlib plots are not correctly handling DynamicMaps of overlays as ElementPlots are not passing the currently displayed Element to the ``_finalize_axis`` method. This means that the method does an additional lookup which fails when the data comes from a DynamicMap returning Overlays.,3,1,"['type: bug', 'tag: backend: mpl']"
1825,115229013,1268,19542768,2017-04-11 02:27:57,2017-04-11 12:02:05,closed,Defined option_state context manager,"This PR defines an ``option_state`` context manager in ``display_hooks.py``. It fixes the tracebacks and I think this is a better approach than what we had before.

What I don't know is whether it fixes the exception about not inheriting from None or something other than object. I don't quite remember what the reported message was as I've never been able to reproduce that particular issue myself!",2,2,['type: bug']
1826,115220167,1267,19542768,2017-04-11 00:45:22,2017-04-11 11:08:06,closed,Simplified DynamicMap reindex as it is handled automatically,The new Callable inspection in _execute_callback now automatically remaps key dimensions onto the callback so wrapping the callable is no longer needed.,5,2,[]
1827,115210403,1266,19542768,2017-04-10 23:07:29,2017-04-11 12:48:05,closed,Filter spectral cmaps from palette to avoid warning,"Didn't catch this one because it was py3 only. Just need to filter these, afaik they are dropped from ``plt.cm.datad`` in matplotlib master.",1,1,[]
1828,115140294,1264,19542768,2017-04-10 16:27:22,2017-04-10 17:22:41,closed,Final matplotlib 2.0 compatibility fixes,Addresses the final issues mentioned in https://github.com/ioam/holoviews/issues/1006 for getting matplotlib 2.0 completed.,1,2,[]
1829,115130931,1263,19542768,2017-04-10 15:42:49,2017-04-10 17:21:48,closed,Applied formatting to bokeh datetime hover tool labels,"As requested in #1261 datetimes in the hover tool should be formatted correctly. This has annoyed me myself a fair bit. Currently the only approach to make this work is to send the formatted strings as a column in the ColumnDataSource as outlined here, in future we can hopefully use JS datetime formatting to support this. I do think this is an important feature (it's visible in a number of my demos like the StockExplorer) and should make it into 1.7.

See https://github.com/bokeh/bokeh/issues/1239 for status of a more convenient/efficient mechanism for this.",2,1,"['type: feature', 'tag: backend: bokeh']"
1830,115122613,1262,19542768,2017-04-10 15:05:48,2017-04-10 21:59:21,closed,Raised NotImplementedError for unsupported DynamicMap methods,"As outlined in #442 the reindex, add_dimension, and drop_dimension methods on DynamicMap are simply not valid because the callback expects specific arguments which cannot be changed. Since these are inherited from ``MultiDimensionalMapping`` which is really far removed from DynamicMap it'd be a nightmare to to generate sensible baseclasses to ensure these methods don't appear at all. Therefore I'm just raising NotImplementedErrors letting the user know that they'll have to cast their DynamicMap with a cache to a HoloMap before calling the one of those methods.

Edit: Reindex does make sense as long as you're only reordering dimensions, so I've now implemented it.",2,2,['tag: API']
1831,115118630,1260,19542768,2017-04-10 14:48:42,2017-04-10 21:58:59,closed,Automatically handle different signatures in Callable,"
This PR aims to address #1189. The goal is to make ``Callable`` very flexible in what it accepts when it dispatches args and kwargs to the callback. This should mean that DynamicMap can accept almost any sensible callback.

## Action items

- [x] Make Callable flexible in how it dispatches arguments
- [x] Validate argspec against kdims and streams in DynamicMap 
- [x] Add more unit tests",5,24,['status: ready']
1832,115099797,1259,19542768,2017-04-10 13:23:06,2017-04-10 14:10:31,closed,Added logging output support to unittests,"
This PR allows us to finally check param's logging output. We have often wanted to check the output of ``param.warning`` but haven't had the infrastructure to do so. This is important as we want to improve exceptions and warnings throughout HoloViews.

This PR includes an example of how the new ``LoggingComparisonTestCase`` is used, involving a recent unit test where I wanted to check the param.warning output. 

I'll be using this new system in a number of new unit tests I am planning but I don't intend to go back and update all the existing tests right now as it would take some thought to figure out where logging output should be checked. That could be work for a future PR and could be something to do before HoloViews 2.0.

",2,5,['status: ready']
1833,115006401,1257,19542768,2017-04-09 23:09:37,2017-04-10 00:15:45,closed,Defined Dimension.step and used it for dynamic widgets,Implements https://github.com/ioam/holoviews/issues/742,3,1,"['type: feature', 'tag: backend: bokeh']"
1834,114991174,1256,19542768,2017-04-09 15:59:49,2017-04-09 23:41:27,closed,Allow disabling stream memoization,"Addresses https://github.com/ioam/holoviews/issues/1215, allowing disabling memoization when a specific stream is active, which forces a callback to be triggered when a new event comes in.",4,4,"['type: feature', 'tag: API']"
1835,114960777,1255,19542768,2017-04-08 20:52:19,2017-04-10 11:38:52,closed,Implemented correct Raster.range,"Fix for https://github.com/ioam/holoviews/issues/1020, it wasn't accessing the masked array directly and hence was returning inconsistent results with Image, which does.

```python
%%opts Raster Image [colorbar=True]
tmp = np.random.rand(10,10)-0.5
tmp = np.ma.masked_where(tmp<=0, tmp)

hv.Image(tmp)+hv.Raster(tmp)
```

![image](https://cloud.githubusercontent.com/assets/1550771/24832332/88e3974c-1ca5-11e7-9908-fc27f74ba45b.png)

As we can see the masked values are no longer included in the range but are still indicated via the colorbar and the behavior is now consistent between Raster and Image.",3,1,['type: bug']
1836,114953076,1254,19542768,2017-04-08 17:09:32,2017-04-09 18:42:09,closed,Correctly sync shared datasources,"Adds a context manager which ensures that while updating a composite plot any datasources shared among multiple subplots are appropriately synced, avoiding warnings and bokehjs errors. Fixes https://github.com/ioam/holoviews/issues/1135.",3,1,"['type: bug', 'tag: backend: bokeh']"
1837,114873551,1250,19542768,2017-04-07 18:26:11,2017-04-07 20:43:29,closed,Fixed bokeh hover tool specification,Correctly escaping the column source name seems to be required when the visible label contains unicode characters. This fixes another small bug mentioned in https://github.com/ioam/holoviews/issues/1248.,1,1,['tag: backend: bokeh']
1838,114793646,1249,19542768,2017-04-07 11:07:38,2017-04-07 16:51:49,closed,Various fixes for handling coloring in plotting,Fixes some small bugs introduced in #1241 and reported as bugs in #1248.,4,4,"['type: bug', 'tag: backend: bokeh', 'tag: backend: mpl']"
1839,114733636,1247,19542768,2017-04-07 02:43:33,2017-04-07 16:39:31,closed,Bokeh widgets editable,"Adds an editable option, which is False by default to improve the look of the widgets, but because that disables support for enabling text input on sliders, can be set to True if needed.",3,1,"['type: feature', 'tag: backend: bokeh']"
1840,114682001,1246,19542768,2017-04-06 19:57:13,2017-04-06 21:28:59,closed,Bokeh travis update,Updated the bokeh version on travis to 0.12.5.,6,3,['tag: backend: bokeh']
1841,114648979,1245,19542768,2017-04-06 17:01:24,2017-04-08 00:19:09,closed,Tightened semantics of Dimension objects,"This PR aims to address issue #843 and clean-up the definition of Dimension objects generally.

It is still work in progress and I've started this PR at the first commit just so that I can see the results of the notebook tests as I progress.

**Edit**: I have copied over the action items from the issue:

- [x] Renaming the first argument from ``name`` to ``spec``.
- [x] Remove the deprecated 'initial' option from the values parameter.
- [x] Declaring ``label`` as a parameter
- [x] Allowing ``label`` to be passed as a kwarg and warning when ambiguous.
- [x] Fixing the ``__call__`` method, making it work with ``(name, label)`` tuples
- [x] Aliased ``__call__`` to ``clone``.
- [x] Implemented the ``spec`` property
- [x] Update class docstring  
- [x] Updated equality semantics
- [x] Updated comparison semantics
- [x] Add more unit tests.
",9,41,['status: WIP']
1842,114591127,1244,19542768,2017-04-06 12:39:25,2017-04-06 13:06:17,closed,Fixed minor bugs updating glyph without glyph_renderer,Fixes minor bugs introduced in #1241.,1,1,"['type: bug', 'tag: backend: bokeh']"
1843,114169840,1243,19542768,2017-04-04 14:59:37,2017-04-05 22:01:44,closed,Dynamic collation,"Implements dynamic collation as requested and described in #1188. The user can declare a stream on a ``DynamicMap`` returning a ``(Nd)Layout``, and then specify which item in the Layout should be used as the source for the stream in the collate call by either supplying a list of streams for each item or a dictionary where the key corresponds to the index of the item in the Layout. Here's a small example:

```python
%%opts Layout [shared_axes=False]

def test(x_range, y_range):
    return hv.Image(np.random.rand(10,10)) + hv.Bounds((x_range[0], y_range[0], x_range[1], y_range[1]))

stream = hv.streams.RangeXY(x_range=(0,-.5), y_range=(0,-0.5))
dmap = hv.DynamicMap(test, streams=[stream], kdims=[])

dmap.collate(streams={0: [stream]})
# OR dmap.collate(streams=[[stream]])

```

Here the RangeXY stream will be attached to the Image and the Bounds in the second subplot will reflect the zoom ranges of the first plot. Leaving out the ``streams`` declaration on the collate call will mean that the ``Stream`` gets ranges from both subplots.",11,13,"['type: feature', 'tag: API']"
1844,114139576,1242,19542768,2017-04-04 12:46:49,2017-04-04 21:35:21,closed,Added small section on Options inheritance to tutorial,Adds a small bit of documentation explaining option inheritance to the Options Tutorial as requested in https://github.com/ioam/holoviews/issues/638.,4,1,['tag: docs']
1845,113962011,1241,19542768,2017-04-03 15:47:13,2017-04-04 19:43:25,closed,Handle batched styles consistently,The handling of batched style options was handled differently on all the different plots. As I outlined in https://github.com/ioam/holoviews/issues/795 this should be handled consistently and this PR makes that happen.,6,10,"['tag: backend: bokeh', 'tag: component: plotting', 'tag: component: options']"
1846,113927363,1240,19542768,2017-04-03 13:14:49,2017-04-10 14:49:13,closed,Implemented DynamicMap.map method,Implements the final ``DynamicMap`` method which was not yet lazy as outlined in https://github.com/ioam/holoviews/issues/422.,4,1,['tag: API']
1847,113910579,1239,19542768,2017-04-03 11:36:38,2017-04-04 19:47:20,closed,Remove bokeh matplotlib compatibility,"As suggested in https://github.com/ioam/holoviews/issues/1218 this removes the BokehMPLWrapper plot class and support for Distribution, Bivariate, and TimeSeries Elements. I was initially hesitant to remove this entirely in 1.7 but with the amount of warnings these currently generate and other restrictions on these plot types, I think just removing them is the correct thing to do. Hopefully we can readd Distribution and Bivariate support in 2.0 as part of the statistical elements module (https://github.com/ioam/holoviews/issues/1200).",1,1,"['tag: backend: bokeh', 'tag: component: plotting']"
1848,113548726,1238,19542768,2017-03-30 23:52:38,2017-03-31 13:26:54,closed,Simplified operation modes supported by Dynamicmap ,"This PR greatly simplified DynamicMap, removing all concept of 'modes' except for 'sampled' mode: 'open', 'bounded', 'generator' and 'counter' mode are all gone (implicitly DynamicMaps are now always 'bounded').

In addition, keys cannot be returned by the callback.

Action items:

- [x] Slash all the code relating to the DynamicMap modes

**Edit**:

The following items will be assigned to a follow up PR after this one is merged.

- [x] Reintroduce validation which will now relate to streams (especially dimensioned streams)
- [x] Add some new tests
- [x] Update the Tutorials

I might recommend leaving the last point (updating the tutorials) for another PR - the earlier this is merged, the better tested it will be before release and the bigger chance we can hear any objections from our users. We don't *think* anyone has ever really other used anything other than 'bounded' mode with callables (possibly with streams) but we can't be certain.",5,14,"['tag: API', 'status: WIP']"
1849,113266134,1235,19542768,2017-03-29 18:40:08,2017-03-30 13:02:42,closed,Simplified how Event subscribers are handled,"This PR offers ``clear`` and ``add_subscriber`` methods to ``Event`` and does away with ``_hidden_subscribers``. The ``subscribers`` attribute is now in fact a read-only property which means the correct way to add subscribers is with the ``add_subscribers`` method.

Outstanding items to address:

- [x] Clarify whether ``DynamicMap.event`` and ``Stream.update`` methods support names before or after renaming.
- [x] Add more unit tests
- [x] Add docstrings",5,17,['tag: API']
1850,113099684,1232,19542768,2017-03-29 01:15:49,2017-03-29 16:01:15,closed,Preprocessor refactor,"This PR addressed #1224 by greatly simplifying how stream parameters can be renamed and how stream preprocessing is implemented (when necessary).

The ``rename`` suggestion from that issue has been implemented exactly as suggested but after discussion with @philippjfr and @jbednar, it was decided that we don't really need explicit preprocessor hooks. Instead, the streams that require it can implement the ``preprocess`` method (which occurs before stream renaming) so transform the stream values as necessary.

I would still like a better name than ``rename`` and although I personally like ``remap`` more, I know this isn't the majority opinion. Consider

```python
PositionXY(rename={'x':'x1', 'y':'y1'}, x=2)
```

and 

```python
PositionXY(remap={'x':'x1', 'y':'y1'}, x=2)
```

I feel the latter conveys the idea that ``x`` will be called ``x1`` on the output better. Any other suggestions?

Action items:

- [x] Remove old preprocessor system
- [x] Offer new simplified means of preprocessing streams
- [x]  Implement ``rename`` constructor argument and method
- [x] Update ``PlotSize`` stream with a ``preprocess`` method
- [x] Add unit tests
- [x] Update tutorials **Edit: postponed till a later PR**",6,15,['tag: API']
1851,113067373,1231,19542768,2017-03-28 21:06:50,2017-03-29 16:07:08,closed,Replaced extension logo parameter with banner toggle,"This simple PR replaces the ``logo`` option of the notebook extension (which only toggled the logo) with a ``banner`` switch with can suppress both the logo and the loading message. Addresses #1186.

We'll need to mention the replacement of the ``logo`` parameter in the CHANGELOG but I don't think it is a big deal - the new behavior simply extends the old behavior and I don't think the ``logo`` parameter was used much anyway.",7,1,[]
1852,112481465,1228,19542768,2017-03-24 15:29:42,2017-03-24 17:35:42,closed,Allow ElementOperation to process NdLayout types,"Partial fix for https://github.com/ioam/holoviews/issues/1107, while we haven't addressed the issue about (Nd)Overlays, this is a straightforward addition that let's ElementOperations process NdLayouts just as it already handles GridSpaces.",2,2,['type: feature']
1853,112475809,1227,19542768,2017-03-24 15:04:49,2017-03-24 16:28:41,closed,Implemented a dynamic hist method,One of the last methods to implement to make the DynamicMap fully lazy as outlined in https://github.com/ioam/holoviews/issues/422.,1,1,['type: feature']
1854,112262997,1225,19542768,2017-03-23 15:16:28,2017-03-24 15:18:58,closed,Apply matplotlib rc parameters correctly throughout,"I've long struggled with the correct way to apply rcparams in matplotlib, I now think a decorator which is applied during axis/figure creation, for all ``initialize_plot`` and ``update_frame`` calls and during rendering is the best approach.

Fixes https://github.com/ioam/holoviews/issues/1222",5,2,"['type: bug', 'tag: backend: mpl']"
1855,112252281,1223,19542768,2017-03-23 14:34:14,2017-03-23 20:55:51,closed,Allow casting from GridImage to QuadMesh,"Useful now and will continue working just fine in the future when the image interface has been added. Lets you do something like this to get hover information from a datashaded plot:

```python
%%opts QuadMesh (fill_alpha=0) [tools=['hover']]
points = hv.Points(np.random.multivariate_normal((0,0), [[0.1, 0.1], [0.1, 1.0]], (1000000,)))
datashade(points, width=400, height=400) * hv.util.Dynamic(aggregate(points, width=100, height=100),
                                                           operation=lambda x: hv.QuadMesh(x))
```

![hover](https://cloud.githubusercontent.com/assets/1550771/24252582/bccd675e-0fd5-11e7-8224-6e1ebf4421eb.gif)
",4,1,"['type: feature', 'tag: API']"
1856,111898094,1220,19542768,2017-03-21 22:55:36,2017-03-23 16:06:18,closed,Bokeh selection colors,"As requested in https://github.com/ioam/holoviews/issues/1139 this adds full control over selection and unselection glyph styles letting you apply custom colors and alphas. Additionally this also adds control of a new feature in bokeh 0.12.5, which is muting glyphs with an interactive legend, this styling can also be controlled via style option but default to a ``alpha=0.2``. This means all our bokeh legends are now clickable.

- [x] Update Bokeh_Backend Tutorial unselection glyph styling examples.
- [x] Tests to check updating all the different glyphs is working correctly. ",7,13,"['type: feature', 'tag: backend: bokeh', 'status: ready']"
1857,111598191,1219,19542768,2017-03-20 16:48:26,2017-03-21 13:07:50,closed,Handle bug in gridded groupby when dropping dimensions,In certain scenarios dropping dimensions in a gridded groupby would not behave correctly. This fixes the bug and adds some tests.,2,1,"['type: bug', 'tag: component: data']"
1858,111343354,1217,19542768,2017-03-17 18:48:22,2017-03-24 16:30:29,closed,Made sorting on NdMapping optional,"Let's users provide an explicitly sorted NdMapping. Still need to add a warning when a regular dict and sort=False are supplied since sort order is nondeterministic in that case.

~~Edit: Widgets are currently assuming sorted keys and NdElement seems to have been sorting in some cases.~~

Addresses: https://github.com/ioam/holoviews/issues/1216

Fixes: https://github.com/ioam/holoviews/issues/1042",3,6,['type: feature']
1859,111175566,1214,19542768,2017-03-16 22:05:13,2017-04-08 21:33:41,closed,Allow working with Renderers interactively outside the notebook,"Adds ``show`` methods for the bokeh and matplotlib renderers and an interactive option for the matplotlib renderer. Addresses https://github.com/ioam/holoviews/issues/1126. @thoth291 would you mind testing if this works for you?

Here's a small example:

```python
import holoviews as hv
import holoviews.plotting.mpl

r = hv.Store.renderers['matplotlib'].instance(interactive=True)

curve = hv.Curve(range(10)))
r.show(curve)
```",36,6,"['tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting', 'status: WIP']"
1860,111062435,1213,19542768,2017-03-16 13:02:12,2017-03-16 20:03:20,closed,Adjoint overlay,"Implement overlaying of AdjointLayouts as originally outlined in https://github.com/ioam/holoviews/issues/987.

",8,4,"['type: feature', 'tag: API']"
1861,110984617,1211,19542768,2017-03-16 03:03:06,2017-03-16 12:50:36,closed,Fixed bugs in mpl colorbar arrows and Image.range,"In fixing a bug in the colorbars (https://github.com/ioam/holoviews/issues/1109) I found a bug in handling partially bounded Dimension.range settings, e.g.:

```
hv.Image(np.array([[0, 1], [2, 3]]).redim(z=dict(range=(None, 2))).range('z')
```

Would report ``(0, 3)`` when all our other Elements respect explicitly set ranges. I'll probably open another PR to add an argument to the range method to ignore the ``soft_range`` and ``range`` on the Dimension. Knowing the actual data range is perhaps more useful and we should consider returning that by default and only returning ``Dimension.range`` when requested, which all the plotting code could do.",2,3,[]
1862,110960836,1210,19542768,2017-03-15 23:01:44,2017-03-16 12:49:00,closed,Cleaned up unicode handling,Includes renaming of ``safe_unicode`` (addressing https://github.com/ioam/holoviews/issues/632) and more consistent usage of ``Dimension.pprint_label`` and ``Dimension.pprint_value``.,1,1,[]
1863,110960091,1209,19542768,2017-03-15 22:56:00,2017-03-16 21:00:26,closed,Matplotlib aspect fixes,"Fixes https://github.com/ioam/holoviews/issues/199, https://github.com/ioam/holoviews/issues/996 and https://github.com/ioam/holoviews/issues/1144. Plots in Layouts are no longer forced to square, semilog/loglog plots correctly apply aspects, and axis ranges are set after ticks.",12,5,['tag: backend: mpl']
1864,110505363,1207,19542768,2017-03-13 21:48:51,2017-03-13 22:14:27,closed,Pin scipy=0.18.1 due to pandas issue,"Here's the issue, various pandas interpolation tests failing on 0.19.0:

https://github.com/pandas-dev/pandas/issues/15662",1,1,[]
1865,110500363,1206,19542768,2017-03-13 21:19:48,2017-03-14 11:22:47,closed,Fixed batched plot style cycles/palettes,Color cycles on batched plots were computed incorrectly resulting in colors to be repeated and not matching with other plots.,3,1,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1866,110448370,1205,19542768,2017-03-13 16:50:22,2017-03-13 17:56:11,closed,Dimension label fixes,"A small unicode fix for ``Dimension.pprint_value_string`` and ensured widgets display correct label, fixing https://github.com/ioam/holoviews/issues/1160.",2,2,['type: bug']
1867,110433794,1203,19542768,2017-03-13 15:45:11,2017-03-13 17:17:29,closed,Dropped 'ls' as matplotlib 'linestyle' alias,It is not consistently supported as shown in: https://github.com/ioam/holoviews/issues/551,2,1,"['type: bug', 'tag: backend: mpl']"
1868,110432493,1202,19542768,2017-03-13 15:39:52,2017-03-13 17:48:47,closed,Guard against pdf output in IPython display hooks,"Stops the display hooks from rendering to pdf when plotting in the notebook, however exported plots will still be pdf, when ``fig='pdf'`` declared. Fixes https://github.com/ioam/holoviews/issues/519.",3,1,[]
1869,110298127,1198,19542768,2017-03-12 13:09:31,2017-05-29 17:08:22,closed,Building docs using nbsphinx,Switched to using nbsphinx to build our docs.,1,3,['status: WIP']
1870,110298112,1197,19542768,2017-03-12 13:08:49,2017-03-12 13:41:59,closed,Handle document creation directly,"In the latest bokeh dev builds the ``_ModelInDocument`` context manager was moved and changed. Rather than relying on it, we simply create a new Document per plot and detach the Document from all existing models.",2,1,[]
1871,110281709,1196,19542768,2017-03-12 01:24:32,2017-03-13 17:55:12,closed,Added bokeh VectorField plot,"This completes compatibility for all chart plots, that only leaves the ``Arrow`` annotation and 3D Elements.",20,4,"['type: feature', 'tag: backend: bokeh']"
1872,110274785,1195,19542768,2017-03-11 21:18:02,2017-03-12 13:18:02,closed,Fixed bug handling rgba tuples in bokeh,Bokeh accepts an rgba tuple not a list.,1,1,"['type: bug', 'tag: backend: bokeh']"
1873,110274745,1194,19542768,2017-03-11 21:17:01,2017-03-14 11:23:49,closed,Gridmatrix diagonal types,"Allowed different types along the diagonal of a gridmatrix. Also lifted the restriction on duplicate dimensions on a Dimensioned object.  While I can sort of see why we did that, plotting a variable against itself can be a valid thing to do, e.g. to see the distribution of a variable as shown along the diagonal here (which is now also a holoviews-contrib gallery example):

http://bokeh.pydata.org/en/latest/docs/gallery/iris_splom.html
",3,3,[]
1874,110274250,1193,19542768,2017-03-11 21:03:27,2017-04-14 12:21:44,closed,Stacked area operation,Added a very simple operation that lets you produce a stacked area chart from an overlay of areas. Example included in the holoviews-contrib gallery PR.,25,5,['type: feature']
1875,110274007,1192,19542768,2017-03-11 20:55:00,2017-03-12 13:10:39,closed,Implemented general xarray aggregate/reduce,Turns out xarray has a reduce method making single- or multi-dimensional aggregate and reduce trivial. Thanks @schlady.,2,1,['tag: component: data']
1876,110245095,1191,19542768,2017-03-11 03:38:59,2017-03-18 13:03:38,closed,Avoid dependence on NdElement and add deprecation warning,"Seemingly straightforward, needs further testing though.

Ended up reviving the NdElement deprecation PR here.",8,4,[]
1877,110135503,1187,19542768,2017-03-10 14:13:41,2017-03-10 17:56:44,closed,Fixed handling of shared_axes,"The bokeh backend supports a shared axes option which allows axes with the same axis labels to be linked. The current approach taken here is not quite correct because the plot doesn't remember that an axis is shared so it will simply override extents set by a different plot. Secondly setting ``x/yaxis='bare'`` will currently disable ``shared_axes`` because it removes the axis label.

While this behavior is a lot more consistent, we might want to consider disabling it by default in some cases (e.g. on a simply ``Layout``) because it can interfere with axiswise normalization.",1,2,"['type: bug', 'tag: backend: bokeh']"
1878,109487804,1180,19542768,2017-03-07 14:15:37,2017-03-09 21:55:13,closed,Fixed top-level util import issue,"As pointed out in https://github.com/ioam/holoviews/issues/1134#event-979913858 it turns out my previous fix wasn't quite sufficient, the wildcard import from ``hv.core.spaces`` was overriding ``hv.util`` with ``hv.core.util``. Ideally we should get rid of all wildcard imports to avoid issues like this.",4,1,[]
1879,109335802,1178,19542768,2017-03-06 19:56:55,2017-03-06 22:39:10,closed,Small fixes for hover tools,"Fixes a bug in the hover tool specification in a batched OverlayPlot of Points.

Before:

<img width=""152"" alt=""screen shot 2017-03-06 at 7 54 55 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/23627000/d6a81ac0-02a6-11e7-887d-2b98b6dc1e59.png"">

After:

<img width=""103"" alt=""screen shot 2017-03-06 at 7 55 45 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/23627025/edffd2c6-02a6-11e7-937c-a06f98d886e9.png"">",2,2,[]
1880,109171940,1177,19542768,2017-03-05 23:45:23,2017-04-18 00:57:42,closed,fix datashade import from .operation,This is a one-line fix to allow `from holoviews.operations import datashade` .  See also issue #1176 that mentioned the import error.,6,1,[]
1881,109155853,1175,19542768,2017-03-05 17:00:22,2017-03-05 18:45:47,closed,Small fix for max_extents,Fixed bug handling mixed NaNs and dates in ``max_extents`` utility.,1,1,[]
1882,109145352,1174,19542768,2017-03-05 11:47:18,2017-03-05 22:26:44,closed,Optimization for heatmap aggregation with pandas,"A 5-10x speedup for HeatMap aggregation when using a pandas/dask interface.

```python
data = [(i, j, np.random.rand()) for i in range(500) for j in range(500)]

%%timeit
hv.HeatMap(data)
```

Before:

1 loop, best of 3: 8.61 s per loop

After:

1 loop, best of 3: 800 ms per loop
",14,3,[]
1883,108903119,1172,19542768,2017-03-03 03:58:05,2017-03-06 01:48:02,closed,Timeseries operations,"Some basic operations to work with timeseries, the outlier detection is very useful in combination with datashader because it lets you get hover information about the outliers. Needs tests and support for datetime types.

Until we sort out input/output specifications on operations, I'm handling unpacking of (Nd)Overlays with a .map call in the ``_process`` method. 

I've also added a ``streams`` parameter to ``ElementOperation`` by default. It was already supported API and I've found myself wanting to attach custom streams (based on paramnb) to existing ElementOperations and not being able to. Here's the pattern I'm talking about, in the following code there are two streams one for the ranges shared amongst the data loading, datashading and decimate operations, and ``self`` which is a class defined for paramnb which controls the rolling window and sigma parameters of the smoothing and outlier detection operations:

```python
stream = RangeXY()

# Define DynamicMap to load dataset based on stream parameters
dmap = hv.DynamicMap(self.load_data, kdims=[], streams=[self])

# Apply rolling mean with the window controlled by stream 
smoothed = rolling(dmap, streams=[self])

# Apply steps interpolation
smoothed = interpolate_curve(dmap)

# Datashade based on ranges
smoothed = datashade(smoothed, cmap=get_cmap('Set1'),
                     aggregator=ds.count_cat('Conf'),
                     width=675, height=300, streams=[stream])

# Compute outliers with window and sigma controlled by stream
outliers = rolling_outlier_std(dmap, streams=[self])

# Decimate outliers only based on current range
outliers = decimate(outliers, streams=[stream])

# Overlay dynamically smoothed, interpolated, datashaded timeseries
# with dynamically decimated outliers
smoothed * outliers
```",11,10,['type: feature']
1884,108829291,1171,19542768,2017-03-02 19:10:36,2017-03-02 19:34:10,closed,Temporarily pin dask on travis,"Currently tests are failing because dask 0.14 no longer supports the ``sort`` argument to groupby. I've pinged the person responsible on the dask team, so we can clarify whether sort can be supported as it seemingly was in dask 0.13.0 or whether the removal of it was deliberate and it can't be supported. In the meantime pinning it will ensure our tests pass.",0,1,[]
1885,108758609,1170,19542768,2017-03-02 13:27:07,2017-03-03 10:19:49,closed,Fix Dynamic utility operation parameter updates,"The ``Dynamic`` utility allows applying an operation dynamically. When applying an operation with a stream in this way currently the stream is updated with all the operations parameters. This is problematic for two reasons, it overrides defaults you've set on your stream and it currently triggers the stream to update which can cause bad loops.

This PR ensures that the stream only inherits parameter values which are not already defined on the stream and ensures that simply applying the dynamic operation does not trigger stream subscribers to be notified.",4,1,[]
1886,108758045,1169,19542768,2017-03-02 13:23:38,2017-03-02 20:26:28,closed,Fixed filtering of bokeh LineAnnotationPlot properties,Minor self-explanatory fix.,7,1,[]
1887,108224194,1164,19542768,2017-02-27 23:20:57,2017-02-28 10:35:14,closed,Correctly import top-level util module,Fixes https://github.com/ioam/holoviews/issues/1134,3,1,[]
1888,108219067,1163,19542768,2017-02-27 22:47:35,2017-02-28 10:33:53,closed,Matplotlib boxplot bug,"BoxPlot raises an error when put in a Layout currently, small fix to ensure it doesn't. Also snuck in a style parameter for HistogramPlot.",1,3,"['type: bug', 'tag: backend: mpl']"
1889,108187155,1162,19542768,2017-02-27 19:46:34,2017-02-27 22:48:39,closed,Consistent handing of axis label and tick fontsize,Also adds support for setting xticks and yticks size independently the same way xlabel and ylabel can be set independently. The bokeh backend wasn't respecting the axis label and tick font sizes previously.,1,3,"['tag: backend: bokeh', 'tag: backend: mpl']"
1890,108039898,1158,19542768,2017-02-27 03:09:24,2017-02-27 22:43:45,closed,Fixed reraising of plotting exceptions,"This has been plaguing me for a long time. In python2 I **always** get these exceptions when there's an issue with the options. I think this is due to the nested try/excepts. Reraising an exception in this way differs slightly between py2 and py3 hence extra conditional. 

```
TypeError: exceptions must be old-style classes or derived from BaseException, not NoneType
```",7,1,[]
1891,108039534,1157,19542768,2017-02-27 03:04:09,2017-02-27 22:49:11,closed,Bokeh TextPlot uses Text parameter settings,Previously bokeh ignored the alignment parameters on the Text Element.,4,1,"['type: bug', 'tag: backend: bokeh']"
1892,108006367,1156,19542768,2017-02-26 14:18:31,2017-02-27 13:52:32,closed,Fix seaborn Regression plot,Fixes bug I introduced for some inexplicable reason.,1,2,"['type: bug', 'tag: backend: mpl']"
1893,108006059,1155,19542768,2017-02-26 14:09:16,2017-02-27 13:00:07,closed,Drop usages of len(Element),We've decided to avoid using len(Element) wherever possible.,3,1,[]
1894,108005673,1154,19542768,2017-02-26 13:57:20,2017-02-27 13:51:45,closed,Implement dropping dimensions in gridded groupby,"When using the ``.to`` method to convert a gridded dataset into lower dimensional views it is possible to drop dimensions, e.g. to visualize the distribution of values in some space. Think for example of a 3D cube of temperatures (lat * lon * altitude) . I want to view the distribution of values for each altitude, dropping the lat and lon dimensions. Previously we supported this in some limited cases but there's a simple solution to the problem, when applying a groupby on a gridded dataset which drops certain dimensions we simply convert to a columnar format. This will only affect the ``.to`` method which is meant specifically to convert high-dimensional data into a lower dimensional view so I think it's consistent with the overall semantics.",7,6,['type: feature']
1895,107983796,1153,19542768,2017-02-26 00:31:32,2017-02-27 22:54:20,closed,Various unit tests,,2,2,['tag: component: testing']
1896,107979672,1152,19542768,2017-02-25 22:21:07,2017-02-28 10:34:22,closed,Fixed issue with no colorbar dimension and unicode label,Tiny little fix that allows a colorbar to be drawn for data with no corresponding dimension (e.g. aggregated counts) and fixes a usage of ``str(dimension)`` which is not unicode safe.,2,1,[]
1897,107979375,1151,19542768,2017-02-25 22:13:14,2017-02-27 12:45:32,closed,Fixed unicode widget templating bug,The mode parameter wasn't being templated correctly resulting in ``u'somestring'`` showing up in the template.,2,1,['type: bug']
1898,107962481,1150,19542768,2017-02-25 14:22:49,2017-03-06 14:38:19,closed,Add support for GridSpace axes in bokeh,"Creates outer dimension axes for GridSpaces, like we support in matplotlib:

<img width=""505"" alt=""screen shot 2017-02-25 at 2 21 52 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/23331834/d40b6b34-fb65-11e6-9866-0cd0c1459c27.png"">
",10,9,"['type: feature', 'tag: backend: bokeh']"
1899,107765311,1148,19542768,2017-02-24 04:20:43,2017-03-23 20:54:31,closed,Add support for bokeh event callbacks,"Adds support for the upcoming event callbacks in bokeh, currently being developed [here](https://github.com/jlstevens/bokeh/pull/4).

Summary of how it works
===================

1. Check if any of the ``skip_conditions`` apply, if so, skip

2. Grab all the requested ``attributes`` from the models and accumulate them in data

3. Check if there is a ``Comm`` instantiated otherwise open it and store it in a global registry

4. Check if there is a ``comm_state`` for the ``Comm`` otherwise make one defining a ``event_buffer``, a ``blocked`` flag and a ``time``

5. Check whether the comm_state is blocked or has timed out (i.e. ``Date.now()>comm_state.time+timeout``):

   a) if it's blocked put data along with ``cb_obj.event.event_name`` on top of the ``event_buffer``

   b) if it's not blocked also prepend to ``event_buffer`` but also call ``process_event`` with small timeout. The small timeout acts as a debouncing mechanism as new events can be pushed ahead of the original event in the event queue. After process_events is called set the ``comm_state`` to blocked

6. ``process_events`` will iterate over the ``event_buffer`` and filter out older duplicated events. This ensures only the latest event of each type is processed (e.g. to ensure ``panstart``, ``pan`` and ``panend`` are all processed). (Can probably be simplified)

7. In python everything does its thing and sends back a message either acknowledging execution or failure. This message also contains the ``comm_id``, with which the ``comm_state`` is looked up. If there is something on the ``event_buffer`` process it and keep the ``Comm`` blocked, otherwise unblock.

ToDo:

- [x] Update docstring
- [x] Finalize naming for Callback attributes
- [ ] Add tests to ensure callbacks reference correct handles/models
- [ ] Add documentation about defining custom Stream/Callbacks",4,18,"['type: feature', 'tag: backend: bokeh']"
1900,107735084,1147,19542768,2017-02-23 23:18:08,2017-03-11 05:05:57,closed,Deprecate NdElement,"This is an experiment.

Edit: A failed experiment by the looks of it, scarily quite a few of the objects in our tutorials end up as NdElements by default.",5,1,[]
1901,107245814,1143,19542768,2017-02-21 18:05:37,2017-02-21 22:49:04,closed,Use correct dpi in MPLRenderer.get_size,Following on from #1140 it turns out the matplotlib equivalent to get the plot size in pixels is also incorrect using the wrong dpi.,4,1,"['type: bug', 'tag: backend: mpl']"
1902,107005833,1140,19542768,2017-02-20 13:28:57,2017-02-21 17:31:29,closed,Added better support for computing bokeh plot size,"The current ``BokehRenderer.get_size`` method only supports very simple plots that are not part of a layout grid, or contain toolbars and tables. This PR computes the size of a bokeh plot more accurately for all these cases, which can be very useful when wanting to embed the plot in HTML and know the size ahead of time.",4,1,['tag: backend: bokeh']
1903,106221208,1137,19542768,2017-02-15 00:26:32,2017-02-23 21:23:17,closed,Added support for categorical colormapping in bokeh backend,"Adds support for categorical colormapping on bokeh ``ColorbarPlot`` and implements it specifically for Points. We already have this support in matplotlib and bokeh now makes it easy with a CategoricalColorMapper. This is also already achievable with an NdOverlay of Points but this allows selections to work on a single datastructure which is a lot easier to deal with for streams.

```python
%%opts Scatter [color_index=2 toolbar='above' legend_position='right' width=600] (cmap='Set1' size=10)
hv.Scatter([('Week %d' % (i%10), np.random.rand(), chr(65+np.random.randint(5)))
           for i in range(100)], kdims=['Date'], vdims=['r2', 'Group'])
```

<img width=""617"" alt=""screen shot 2017-02-15 at 12 33 09 am"" src=""https://cloud.githubusercontent.com/assets/1550771/22955840/634ff664-f316-11e6-8364-9167a21f03de.png"">

",5,4,"['type: feature', 'tag: backend: bokeh']"
1904,105817096,1133,19542768,2017-02-13 01:36:03,2017-04-14 15:10:47,closed,Define length on Annotation Elements,"Defining a length is part of the core API and I have run into failures which I cannot reproduce right now because the annotations do not support it. Setting length 1 is consistent with how their ``dimension_values`` methods work, which return length 1 arrays.

Edit: I threw a bug fix for a small bug on the Arrow Annotation",10,7,"['type: bug', 'tag: API']"
1905,105816883,1132,19542768,2017-02-13 01:31:31,2017-02-13 13:17:06,closed,Update matplotlib titles rather than redrawing,"Fixes https://github.com/ioam/holoviews/issues/1080, but may also cause display test failures because titles aren't drawn multiple times.",3,1,"['type: bug', 'tag: backend: mpl']"
1906,105815047,1131,19542768,2017-02-13 00:52:22,2017-02-23 20:33:42,closed,Fixed ErrorBarPlot mpl2.0 compat and made it more general,"ErrorBars were one of the only failures in our compatibility with mpl 2.0, the difference is that errorbar caps are disabled by default and that the return signature differs. This adds that compatibility and also made the plot correctly animate ErrorBar plots with varying numbers of error bars and adds support for inverting axes on the plot allowing it to be adjoined correctly.",5,1,['tag: backend: mpl']
1907,105799552,1130,19542768,2017-02-12 17:51:04,2017-02-13 13:21:50,closed,Fix GridInterface multi-dimensional groupby,As @basnijholt originally reported there was an issue for multi-dimensional groupbys in the GridInterface. This PR fixes the bug and adds a unit test.,2,3,"['type: bug', 'tag: component: data']"
1908,105790177,1128,19542768,2017-02-12 12:52:34,2017-02-12 17:14:06,closed,Correctly set mpl rcparams on Layouts and Grids,Fixes https://github.com/ioam/holoviews/issues/192,2,1,"['type: bug', 'tag: backend: mpl']"
1909,105753194,1125,19542768,2017-02-11 13:13:32,2017-02-14 14:34:36,closed,Added datashader dynspread operation,"As the title says this adds a dynspread operation which implements dynamic pixel spreading on RGB types. It works on all Image, RGB and GridImage types.",1,2,['type: feature']
1910,105751634,1124,19542768,2017-02-11 12:01:27,2017-11-01 12:46:53,closed,Added tutorial about working with renderers and plots,Initial draft of a Tutorial about working with renderers and plots. Needs review. Here's a rendered version: https://anaconda.org/philippjfr/plots_and_renderers/notebook,4,1,"['tag: docs', 'tag: component: plotting', 'status: WIP']"
1911,105670284,1121,19542768,2017-02-10 17:24:01,2017-02-10 18:09:00,closed,Replaced encrypted with obfuscated environment variables,,1,2,[]
1912,105628435,1120,19542768,2017-02-10 13:31:49,2017-02-10 14:43:33,closed,Fixed ElementOperation group/label handling (build test data),"Do not merge, just used to build test data for #1119 ",0,1,[]
1913,105623647,1119,19542768,2017-02-10 12:58:49,2017-02-10 14:55:44,closed,Fixed group and label assignment bug in Element_Operation.__call__,"Reopen of PR #1110, to address issue #1106. @philippjfr Perhaps it will work this time, if not just go ahead and make your own PR - I really need more practice with git...",4,1,[]
1914,105523176,1118,19542768,2017-02-09 22:03:08,2017-02-10 12:40:17,closed,Fixed ElementOperation group/label handling,,0,1,[]
1915,105516494,1117,19542768,2017-02-09 21:24:50,2017-02-09 21:59:38,closed,Added encrypted AWS credentials to .travis.yml,,0,1,[]
1916,105494401,1116,19542768,2017-02-09 19:16:43,2017-02-10 19:25:04,closed,Wrap deprecated bokeh GridPlot in try/except,Required for bokeh 0.12.5 compatibility,2,1,"['type: bug', 'tag: backend: bokeh']"
1917,105494166,1115,19542768,2017-02-09 19:15:03,2017-02-09 20:36:41,closed,Fixed python3 'lod' bug,Fix for https://github.com/ioam/holoviews/issues/1005. Still don't know what actually caught the bug as 'lod' should always be available in the defaults but this will fix the immediate issue.,6,1,"['type: bug', 'tag: backend: bokeh']"
1918,105331984,1112,19542768,2017-02-08 23:49:46,2017-02-09 21:40:07,closed,Set up AWS CLI configuration file,Testing whether external branch PR can upload test data.,2,1,[]
1919,105277349,1110,19542768,2017-02-08 18:35:44,2017-02-10 12:38:20,closed,Fixed a bug where the group and label of a Holomap would get messed u…,…p by ElementOperation.__call__ - #1106 ,12,4,[]
1920,104721633,1104,19542768,2017-02-05 23:54:27,2017-02-06 20:55:20,closed,Allows plotting GridSpaces inside Layouts in bokeh,"This PR makes the bokeh ``GridPlot`` and ``LayoutPlot`` fully composable so you can now plot multiple grids together. Here's two grids and a regular element in a layout:

```python
%%opts Image [height=260]
(hv.GridSpace({(i, j): hv.Curve(range(i+j)) for i in range(1, 3) for j in range(2,4)}) +\
 hv.GridSpace({(i, j): hv.Curve(range(i+j)) for i in range(1, 3) for j in range(2,4)}) +
 hv.Image(np.random.rand(10,10)))
```

<img width=""827"" alt=""screen shot 2017-02-05 at 11 53 08 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/22631124/49e753a8-ebfe-11e6-8215-e410dab04719.png"">

The ``Composing_Data`` tutorial now also works for both matplotlib and bokeh:

<img width=""955"" alt=""screen shot 2017-02-06 at 2 48 12 am"" src=""https://cloud.githubusercontent.com/assets/1550771/22633127/c19c6740-ec16-11e6-9088-46b747ac2bd1.png"">

Related: https://github.com/ioam/holoviews/issues/381",5,3,"['type: feature', 'tag: backend: bokeh']"
1921,104720656,1103,19542768,2017-02-05 23:21:00,2017-02-06 19:12:37,closed,Merge dynamic dimension values,Merges the values from multiple composed DynamicMaps addressing https://github.com/ioam/holoviews/issues/920.,6,2,[]
1922,104711494,1100,19542768,2017-02-05 19:28:29,2017-02-06 19:12:57,closed,Add plot option to transpose layouts,As requested in #909 this adds a plot option to transpose layouts. It was trivial to implement and provides useful functionality.,18,3,"['type: feature', 'tag: component: plotting', 'tag: component: options']"
1923,104710507,1099,19542768,2017-02-05 19:03:49,2017-02-05 20:06:30,closed,Fixed Trisurface plot in latest versions of plotly,Addresses https://github.com/ioam/holoviews/issues/1022 for latest plotly versions.,2,1,[]
1924,104255351,1098,19542768,2017-02-02 00:51:24,2017-02-02 15:22:21,closed,Made datetime handling in plotting code more general,Improves datetime handling for ``datetime.datetime`` and ``pd.tslib.Timestamp`` types. Needs a bunch of unit tests.,9,3,['tag: backend: bokeh']
1925,104222778,1097,19542768,2017-02-01 21:12:21,2017-02-13 13:21:21,closed,Add interpolate_curve operation and Curve interpolation plot option,"Recently I prototyped a ``Steps`` Element which would plot changes in the y-values of a Curve as discrete steps. It was pointed out this really just represents different interpolation behavior for ``Curve`` plots. I think this is a good suggestion, and I'd like to start using it for a project I'm working on. I've added ``step_curve`` as a separate operation so you can also plot steps when datashading simply by applying it to the Curve before datashading is applied. Here's what it looks like:

```python
%%opts Overlay [legend_position='right' width=600 toolbar='above']
arr = np.random.rand(10)
hv.Overlay([hv.Curve(arr, label=intp)(plot=dict(interpolation=intp))
            for intp in ['linear', 'steps-pre', 'steps-mid', 'steps-post']])
```

<img width=""622"" alt=""screen shot 2017-02-01 at 9 11 19 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/22526410/0f931c16-e8c3-11e6-9e56-e7eeed8cf024.png"">
",6,1,[]
1926,104041600,1094,19542768,2017-01-31 22:56:45,2017-01-31 23:41:22,closed,Allow PositionX/Y/XY streams to work with categorical axes,"Changes the parameter types of these stream types to allow strings from categorical axes, allowing them to work with HeatMap and other categorical plots.",2,1,[]
1927,103992877,1093,19542768,2017-01-31 18:18:19,2017-02-01 12:17:55,closed,Operation fixes,"A number of small fixes for existing operations:

1) Disable the ``group`` being inherited from composite types as would sometimes occur when applying operations to an NdOverlay resulting in Element being labeled ""NdOverlay"".

2) Hide warning in ``datashade`` operation when shading a categorical aggregate.

3) Removed the adjoin parameter to ``histogram`` operation, it continually annoys me because the ``hist`` method has to handle the adjoining itself anyway and having the operation return an adjoined object is a) weird and b) actually breaks if you're trying to apply the operation to a HoloMap or other kind of composite object.",5,7,[]
1928,103865132,1092,19542768,2017-01-31 03:09:02,2017-01-31 23:14:03,closed,Improve hover tool behavior on Curve types,"Fixes https://github.com/ioam/holoviews/issues/986. Unfortunately in batched mode the hover tool will show all the values in the curve array rather than the specific coordinate you are hovering over so I've disabled displaying curve dimensions when in batched mode.

```python
hv.NdOverlay({i: hv.Curve((range(4), (4-i,i*2, i+3, i))) for i in range(10)}, kdims=['z'])
```

Batched:


<img width=""308"" alt=""screen shot 2017-01-31 at 3 20 38 am"" src=""https://cloud.githubusercontent.com/assets/1550771/22451197/47f5c4e2-e764-11e6-8209-b84345f23eb9.png"">


Non-batched:

<img width=""319"" alt=""screen shot 2017-01-31 at 3 19 21 am"" src=""https://cloud.githubusercontent.com/assets/1550771/22451186/2a6b1558-e764-11e6-9c12-5d61719d1a6d.png"">



",12,8,['tag: backend: bokeh']
1929,103625979,1089,19542768,2017-01-28 21:52:10,2017-01-30 15:18:59,closed,Add consistent support for categorical axes in bokeh,"Previously categorical axes weren't really handled in bokeh causing issues when trying to Overlay HeatMaps or other categorical Elements. We can now update categorical axes with new factors which makes it possible to animate HeatMaps with varying density:

![heatmap_animated](https://cloud.githubusercontent.com/assets/1550771/22400089/f1648c24-e5a3-11e6-9ab1-736d6fd75f4b.gif)

We can also specify and overlay categorical curves and points:

```python
hv.Curve((['A', 'B', 'C'], (1,2, 3))) *\
hv.Curve((['A', 'B', 'C'], (3,2, 1))) *\
hv.Points((['B', 'C', 'D'], (2.5, 2, 3)))
```

<img width=""220"" alt=""screen shot 2017-01-29 at 2 05 05 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/22404599/f9da23ea-e62b-11e6-801f-e40df88f70d3.png"">


And we can also overlay on top of a HeatMap:

```python
hv.HeatMap([('A',1, 1), ('B', 2, 2)]) * hv.Points([('A', 2), ('B', 1),  ('C', 3)])
```

<img width=""226"" alt=""screen shot 2017-01-29 at 2 12 05 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/22404634/f0e5c680-e62c-11e6-8e03-d5c02282f788.png"">

And:

<img width=""247"" alt=""screen shot 2017-01-29 at 2 04 30 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/22404597/e84e6aa0-e62b-11e6-9e7f-bbecfac85922.png"">

Note that ``webgl`` does not play well with this. There are now so many issues I've encountered with webgl that I would suggest disabling it by default.

Elements that can use categorical axes:

- [x] Bars
- [x] BoxWhisker
- [x] Points/Scatter
- [x] Curve
- [x] Text
- [x] ErrorBars",18,24,"['type: feature', 'tag: backend: bokeh']"
1930,103609775,1088,19542768,2017-01-28 12:02:28,2017-02-23 15:17:19,closed,Fixed bug unpacking Overlay and Layout objects in Layout.from_values,"Fix for #1081, passing Layouts and Overlays to their respective constructors correctly unpacks them again after regression caused them to be nested.

```python
elements = [hv.Curve(np.random.rand(10)) * hv.HLine(0) for i in range(4)]
overlay = hv.Overlay(elements)
print(repr(overlay))
```

This now correctly produces an object with this repr:

```
:Overlay
   .Curve.I   :Curve   [x]   (y)
   .HLine.I   :HLine   [x,y]
   .Curve.II  :Curve   [x]   (y)
   .HLine.III :HLine   [x,y]
   .Curve.III :Curve   [x]   (y)
   .HLine.IV  :HLine   [x,y]
   .Curve.IV  :Curve   [x]   (y)
   .HLine.V   :HLine   [x,y]
```",16,14,['type: bug']
1931,103608657,1087,19542768,2017-01-28 11:06:43,2017-01-29 18:10:47,closed,SideHistogram supports coloring weighted average,"The adjoined histograms support coloring by a dimension on the main plot, but they also used to support coloring weighted histograms, which take the average in bins along the x- and y-axis. Coloring by the mean weighted value produces plots like this (matplotlib already handles this):

```python
x,y = np.mgrid[-50:51, -50:51] * 0.1

img = hv.Image(np.sin(x**2+y**2), bounds=(-1,-1,1,1))

hmap = hv.HoloMap({phase: img.clone(np.sin(0.1*x**2+0.1*y**2+phase))
                   for phase in np.linspace(0, np.pi*2, 6)}, kdims=['Phase'])
hmap.hist(num_bins=100, dimension=['x', 'y'], weight_dimension='z', mean_weighted=True)
```

![weighted_avg_hist](https://cloud.githubusercontent.com/assets/1550771/22396128/94f73b12-e549-11e6-8530-770bfa62076d.gif)
",4,4,['tag: backend: bokeh']
1932,103583151,1086,19542768,2017-01-27 23:05:15,2017-01-30 13:41:38,closed,Fix for datetime support on bokeh BoxPlot,"Bokeh does not currently handle datetimes on their boxwhisker chart implementation, in the meantime this PR simply casts the datetimes to strings, replacing any colons with semi-colons because those are also not supported. I'll file an issue about it on the bokeh repo, but since the charts API may get deprecated it may not get addressed.",3,3,"['type: bug', 'tag: backend: bokeh']"
1933,103534428,1085,19542768,2017-01-27 17:37:07,2017-01-30 10:22:08,closed,Improved bokeh tabs padding,As can be seen when visiting http://holoviews.org/Tutorials/Bokeh_Backend.html#Tabs the bokeh tabs are currently overlapping due to changes in bokeh layouts. A small adjustment now produces much better results. I've also improved the titles for each tab and updated the example in the notebook.,2,4,['tag: backend: bokeh']
1934,103459787,1084,19542768,2017-01-27 09:27:56,2017-01-27 12:41:43,closed,Properly close js and css files after opening,"I often get warnings like:
```
/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/renderer.py:412: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/widgets/widgets.js' mode='r' encoding='UTF-8'>
  if f is not None )
/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/renderer.py:412: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/mpl/mplwidgets.js' mode='r' encoding='UTF-8'>
  if f is not None )
/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/renderer.py:414: ResourceWarning: unclosed file <_io.TextIOWrapper name='/home/tinkerer/Dropbox/Work/holoviews/holoviews/plotting/widgets/jsslider.css' mode='r' encoding='UTF-8'>
  for f in css if f is not None)
```

This PR should fix this.",1,1,[]
1935,103306455,1083,19542768,2017-01-26 13:26:59,2017-01-30 16:26:39,closed,Add Dimension.label replacing global alias state,Addresses #1001 and supersedes #1075.,6,18,"['type: feature', 'tag: API', 'tag: component: data']"
1936,103241465,1082,19542768,2017-01-26 01:54:50,2017-01-26 15:44:11,closed,Fixed HLine dimension_values,Fixes https://github.com/ioam/holoviews/issues/1079,2,1,['type: bug']
1937,102396689,1075,19542768,2017-01-20 03:53:18,2017-01-27 01:16:18,closed,Dataset aliases,Addresses #1001. Needs more checking and **a lot** of unit tests.,16,14,['status: WIP']
1938,102116485,1074,19542768,2017-01-18 17:51:55,2017-01-18 22:45:20,closed,Generalized hashing of keys for memoization,"Addresses #1067. 

This approach isn't perfect but it will allow a lot more keys to be memoized than before (sets, lists, dictionaries). The main limitation is that composite values as dictionary keys are not allowed by the JSON spec.

Currently pandas Dataframes/Series and numpy arrays are allowed as mutables. In general you will want to support mutable types explicitly as using the ``id`` does not reflect the contents of the object.

This PR isn't ready yet - I want to add a bunch of unit tests.",7,14,[]
1939,101982571,1072,19542768,2017-01-18 01:32:04,2017-01-18 13:44:32,closed,Various bokeh fixes,"A number bug fixes for bokeh project including:

* fixes for BoxWhisker
* improved legends for BoxWhisker and Bars
* Disabled show_grid on bokeh Raster types by default
* Ignore CategoricalTickFormatter in serialization",1,4,['tag: backend: bokeh']
1940,101918518,1070,19542768,2017-01-17 18:19:30,2017-01-18 11:24:36,closed,Updated doc/nbpublisher submodule reference,,1,3,[]
1941,101893122,1069,19542768,2017-01-17 16:05:24,2017-01-18 13:45:16,closed,Fixes for axis options handling in bokeh,"Two small bugs here, the ``top-bare`` and ``right-bare`` options for xaxis and yaxis respectively were being ignored and secondly elements with only one dimension like Spikes do not correctly processed their axis settings.",1,5,"['type: bug', 'tag: backend: bokeh']"
1942,101892556,1068,19542768,2017-01-17 16:02:25,2017-01-17 17:12:03,closed,Fixed setting of matplotlib axis labels,As part of changing the options inheritance I made a small change to matplotlib axes settings which caused a number of issues. This reverts that change.,3,1,"['type: bug', 'tag: backend: mpl']"
1943,101752157,1066,19542768,2017-01-16 20:16:59,2017-01-17 14:06:43,closed,Renamed conversion interface mdims argument to groupby,As suggested in https://github.com/ioam/holoviews/issues/1061 renaming mdims to groupby in the conversion interface ``.to`` method is a lot clearer. This PR renames the kwarg while retaining support for the mdims argument along with a deprecation warning.,6,3,[]
1944,101730483,1065,19542768,2017-01-16 17:25:37,2017-01-16 19:02:46,closed,Deprecate DFrame conversion methods,"While I'm not ready to drop these interfaces entirely (I use some of the types like ``Distribution`` and ``Regression`` frequently),  the conversion methods on the pandas/seaborn interface types have long been marked with a deprecation warning so I think we can safely remove them for v1.7.",3,2,[]
1945,101610288,1063,19542768,2017-01-15 21:19:20,2017-01-16 16:37:01,closed,Add memoization to dynamic Callable class,"In order to address #1049 the Callable class now memoizes the last returned value from a DynamicMap, based on the args, kwargs and nested stream values.

Needs docstrings and tests. @jordansamuels this seems to address your issue. Small example for testing:

```python
import holoviews as hv
import numpy as np
import pandas as pd
from holoviews.operation.datashader import datashade
from holoviews.streams import PositionXY

hv.notebook_extension('bokeh')

%opts RGB [width=800, height=450] VLine HLine (line_color='black' line_width=0.5)

n=100000
def f(n):
    return np.cumsum(np.random.randn(n))
df = pd.DataFrame({'t': range(n), 'y1': f(n), 'y2': f(n), 'y3' : .10 * f(n)} )

def p(y):
    return hv.Curve(df, kdims=['t'], vdims=[y])

ts = datashade(p('y1'))
ch = hv.DynamicMap(lambda x, y: hv.HLine(y) * hv.VLine(x) * hv.Text(x+0.15, y, '%.3f' % x + "", %.3f"" % y),
              kdims=[], streams=[PositionXY()])
(ts * datashade(p('y2')) * ch + ts).cols(1)
```",5,4,[]
1946,101570444,1062,19542768,2017-01-14 18:48:10,2017-01-14 19:36:30,closed,Fixed HeatMap shape setting,"The HeatMap shape is set incorrectly atm in matplotlib, causing non-square HeatMaps to be rendered incorrectly.",1,1,"['type: bug', 'tag: backend: mpl']"
1947,101538193,1060,19542768,2017-01-14 00:01:12,2017-01-14 14:51:20,closed,Add options inheritance on OverlayPlot,"Initial attempt at addressing https://github.com/ioam/holoviews/issues/638, total WIP to see how tests are affected, but it may really be this simple.",6,6,"['tag: component: plotting', 'tag: component: options']"
1948,101177280,1054,19542768,2017-01-12 00:49:06,2017-01-16 18:54:50,closed,Fixed python widget key precision to match JS,"So this is pretty strange, as revealed in https://github.com/ioam/holoviews/issues/1052, it turns out the precision the widget keys are set to in Python does not match the precision specified by the widgets. It seems I changed the value as part of a fix for DynamicMap. Will have to investigate what that was about before merging this.",4,1,[]
1949,101079261,1051,19542768,2017-01-11 14:45:05,2017-01-16 17:53:10,closed,Fixed broken URL in help output,This PR addresses #978. The code change is trivial but it is likely that the test data will need updating.,9,5,[]
1950,101067822,1050,19542768,2017-01-11 13:39:53,2017-02-23 18:35:55,closed,Accept lists in Path,"The following code now works:

```
import holoviews as hv
hv.notebook_extension()

x = range(10)
y = range(10)
hv.Curve((x, y)) + hv.Path((x, y)) + hv.Contours((x, y))
```",4,1,[]
1951,100945474,1048,19542768,2017-01-10 20:14:40,2017-01-11 14:44:52,closed,Aliased __str__ to __repr__,"PR implementing the suggestion in #966. The code change is tiny (aliasing ``__str__`` to ``__repr__``) and most of this PR will be about updating the docs.

Here is the behavior before:

![image](https://cloud.githubusercontent.com/assets/890576/21822988/54019f3e-d771-11e6-9c61-72735ab0d543.png)

And after:

![image](https://cloud.githubusercontent.com/assets/890576/21822970/40cb8164-d771-11e6-8166-89b45715ed27.png)

Of course I'll make sure to put the parens around print in the notebooks for Python 3 support!",3,6,[]
1952,100925664,1046,19542768,2017-01-10 18:13:03,2017-01-17 12:57:39,closed,Improved archive escaping of group and label in file/path names,"The PR aims to address issue #1021. I now know where to implement the escaping fix as illustrated in the first commit. We should discuss how to make this prettier/more robust (I don't like the look of the escaped output yet):

![image](https://cloud.githubusercontent.com/assets/890576/21818563/3b62b690-d760-11e6-940c-082d6acc4b02.png)

I suppose that instead of using ``'-sep-'`` I should see if Python offers proper escaping of filenames/paths on Unix/Windows. As I said, this PR is still WIP!",13,4,[]
1953,100917944,1045,19542768,2017-01-10 17:27:04,2017-01-10 20:33:54,closed,Fixed output magic message when backend unavailable,"This PR addresses #999 regarding the inappropriate error message when trying to load an unavailable backend. Here is the old behavior:

![image](https://cloud.githubusercontent.com/assets/890576/21822342/bc439884-d76e-11e6-953c-3e4f0a4cade4.png)

And the new behavior:

![image](https://cloud.githubusercontent.com/assets/890576/21816896/b9db448a-d759-11e6-9575-b4b5abc8850f.png)

I've tried to make a minimal fix. That said, the output message might suggest how to load the backend with ``notebook_extension``...",5,4,[]
1954,100737017,1043,19542768,2017-01-09 18:37:16,2017-01-09 19:22:56,closed,Followup fixes for HeatMap generalization,"Realized I hadn't pushed some final fixes in #849, ready to merge once tests pass.",5,2,[]
1955,100715909,1040,19542768,2017-01-09 16:30:58,2017-01-09 20:11:03,closed,Add support for finalize_hooks to bokeh backend,"We've had ``finalize_hooks`` to apply customizations of plots that are currently not directly supported by holoviews in the matplotlib backend for a long time now. This PR adds support for ``finalize_hooks`` to bokeh as well.

Here is a simple example that can be used as a workaround for #1039:

```python
def apply_dt_formatter(plot, element):
    plot.handles['xaxis'].formatter = bokeh.models.DatetimeTickFormatter()

drange = pd.date_range(start=""2014-01-01"", end=""2016-01-01"")
vals = drange.values.astype('int64')/10**6
hv.Curve((vals, np.arange(len(vals))))(plot=dict(finalize_hooks=[apply_dt_formatter]))
```

![bokeh_plot 28](https://cloud.githubusercontent.com/assets/1550771/21774067/29a9350a-d689-11e6-9505-99eb741d645a.png)
",7,1,"['type: feature', 'tag: backend: bokeh']"
1956,100554605,1037,19542768,2017-01-07 02:19:36,2017-01-17 12:07:48,closed,Enabled matplotlib layout fix by default,"It's time to enable the matplotlib layout fix by default. There will be changes to the display data, so that will have to be updated, after careful review.",8,2,[]
1957,100554175,1036,19542768,2017-01-07 02:07:59,2017-01-07 02:51:11,closed,Switched from deprecated bokeh Model.set to Model.update,"Simple API change, bokeh's ``Model.set`` method was a duplicate of the ``Model.update`` method and is now deprecated in >=0.12.4.",2,1,['tag: backend: bokeh']
1958,100184413,1034,19542768,2017-01-04 20:38:38,2017-01-07 14:59:15,closed,Ensure multiple callbacks do not bleed wrong plot state,"Currently there is a bug in the code that handles multiple callbacks being attached to one bokeh plot object. The issue arises when two streams are attached to one plot object, this can happen when one axis is linked between two plots. In these cases the ``RangeXY`` stream of one plot can end up with the y-range of another plot, which has a linked and therefore shared x-axis. The solution is to keep track of the IDs of the handles each stream is attached to, the frontend can send the matching ids along with the updated values and we can then check that only the appropriate data is actually forwarded to the stream.",14,18,"['type: bug', 'tag: backend: bokeh']"
1959,99536817,1030,19542768,2016-12-28 11:09:06,2016-12-29 11:52:43,closed,Update bokeh ColumnDataSource in one update,In bokeh 0.12.4 a warning is raised when column lengths do not match therefore all columns on a data source should be updated at once. ,2,1,['tag: backend: bokeh']
1960,99481822,1029,19542768,2016-12-27 20:44:29,2017-01-07 23:43:48,closed,"Implement dynamic relabel, redim and select methods","As outlined in https://github.com/ioam/holoviews/issues/422 this PR implements some further methods on DynamicMap, ensuring that the ``relabel`` and ``redim`` methods can be used correctly on a DynamicMap. Dynamic methods like this are easily implemented using the ``Dynamic`` utility, which currently lives in ``hv.util``. Since this forces me to use inline imports I'm now considering moving ``Dynamic`` into core.",10,14,"['type: feature', 'tag: API']"
1961,98945144,1027,19542768,2016-12-21 14:47:45,2017-02-24 21:15:44,closed,New diagonal_operation-Parameter for the gridmatrix operation,"Instead of being restricted to a plot type along the diagonal of a gridmatrix-operation, this pull request also allows the specification of an operation. The main reasoning for this is that it is now possible to change parameters like the number of bins in a diagonal histogram:
```python
data = pd.DataFrame(np.random.normal(size=(250, 3)), columns=['a', 'b', 'c'])
hvset = hv.Dataset(data.reset_index(), kdims=['index'])

hv.operation.gridmatrix(
    hvset,
    diagonal_operation=hv.operation.histogram.instance(num_bins=30, adjoin=False)
)
```

I think in its current state, this PR is not ready however, since there are a few open questions:
- Should `diagonal_type` remain?
- Should there be a `chart_operation` parameter?
- How to formulate the docstrings to be easy to understand?
- Is the normalization relevant for the ""operation-histograms""?

When the semantics are decided, I can also add a few tests. I will probably need a few hints however on how to test this.",11,1,[]
1962,98484722,1023,19542768,2016-12-18 19:38:39,2017-01-17 12:12:32,closed,find_file utility handles absolute path,"Ensure the ``find_file`` utility can handle an absolute filename path passed to it. The function ensures that the default widget assets get resolved correctly but the user should be able to override these with an absolute path.  

Concretely you can now supply custom CSS to the widgets to change the layout a bit. Setting:

```
hv.plotting.widgets.SelectionWidget.css = '/Users/philippjfr/Downloads/test.css'
```

can give you something like this:

<img width=""541"" alt=""screen shot 2016-12-18 at 7 41 20 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/21296048/297d9480-c55a-11e6-81ea-86cf5a6054ee.png"">
",3,1,[]
1963,97475648,1017,19542768,2016-12-11 22:23:33,2016-12-18 22:25:02,closed,Add support for Layout/Grid titles in bokeh,"As I had suggested in #989 it is possible to add a Div as a title to a composite plot. This finally adds consistency in titles between matplotlib and bokeh backends for Layout and Grid plots.

Still needs tests.

## Examples

### Layout

<img width=""1023"" alt=""screen shot 2016-12-11 at 10 24 55 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/21083830/af23dd34-bff0-11e6-8d5c-5aa673b7f02d.png"">

### Grid

<img width=""1022"" alt=""screen shot 2016-12-11 at 10 27 19 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/21083850/024715b2-bff1-11e6-8769-c2df5fa3b448.png"">
",3,5,"['type: feature', 'tag: backend: bokeh']"
1964,97473041,1016,19542768,2016-12-11 21:15:43,2016-12-18 22:17:31,closed,Fixed saving to html and json in Python 3,"Fixes https://github.com/ioam/holoviews/issues/979 which ended up throwing bugs in ``Renderer.save`` in python3 when a string type was written to file. By defining the MIME type the encoding is applied correctly.

Needs some tests before merging.",4,4,['type: bug']
1965,97442026,1014,19542768,2016-12-10 23:28:36,2016-12-11 16:12:24,closed,Added support for boolean arrays in bokeh ImagePlot,"As described in #727, the bokeh image plots do not currently support boolean arrays. This is because the color mapper does not like boolean ``low`` and ``high`` values. However since booleans cannot be serialized easily it will be more efficient to send them as ``int8`` arrays, which will be base64 encoded in an upcoming bokeh PR.",2,1,['tag: backend: bokeh']
1966,97439157,1013,19542768,2016-12-10 21:45:49,2016-12-11 14:35:58,closed,Add show_frame option for bokeh plots,"Currently the ``show_frame`` option that's available in matplotlib is not implemented in bokeh. This suppresses the outline by setting it to zero alpha.

``show_frame=True``

![bokeh_plot 23](https://cloud.githubusercontent.com/assets/1550771/21076392/f6743f28-bf21-11e6-973f-9b6ffab755f1.png)

``show_frame=False``

![bokeh_plot 22](https://cloud.githubusercontent.com/assets/1550771/21076393/fb4fee7a-bf21-11e6-931f-d6aec66bc703.png)
",1,1,['tag: backend: bokeh']
1967,97436774,1012,19542768,2016-12-10 20:25:10,2016-12-11 19:43:33,closed,Temporary fix for RasterGridPlot,"As described in https://github.com/ioam/holoviews/issues/976 RasterGridPlot currently fails because it has no streams attribute. This is because it's a very atypical plot type that does not currently support streams, making streams and comms work with it will be some effort. Once this has been merged we should open an issue to add that support.",3,1,"['type: bug', 'tag: backend: mpl']"
1968,97436016,1011,19542768,2016-12-10 19:59:41,2016-12-11 19:41:36,closed,Raise warning when size_index set to non-numeric dimension,As suggested in https://github.com/ioam/holoviews/issues/982 currently you get an uninformative exception when setting the size_index option to a non-numeric dimension. This raises a warning and adds unit tests to ensure the warning is raised.,5,3,['tag: backend: bokeh']
1969,97434051,1010,19542768,2016-12-10 18:50:18,2016-12-11 14:44:50,closed,Fixed bokeh FuncTickFormater,As described in https://github.com/ioam/holoviews/issues/885 in bokeh 0.12.3 the signature of python FuncTickFormatters was changed in a way that is inconsistent with formatters in holoviews. This PR adds a utility that compiles the python formatter with pyscript directly and then patches the generated JS code so the arg are made available in the namespace rather than being passed to the function. It's not exactly pretty but I don't see a way around it. I've also added some unit tests.,2,3,['tag: backend: bokeh']
1970,97423948,1009,19542768,2016-12-10 12:51:31,2017-01-18 15:02:45,closed,Define Dimension formatters for numpy integer types,"As described in https://github.com/ioam/holoviews/issues/975, widgets do not correctly format integers at the moment. This is easily fixed by defining ``Dimension.type_formatters`` for the numpy integer types.",7,1,[]
1971,97423535,1008,19542768,2016-12-10 12:33:49,2016-12-10 17:35:46,closed,Define Histogram color cycle,"As suggested in #918, bokeh Histograms should have the same color cycle as the matplotlib version defined.

Before the PR:

![bokeh_plot 20](https://cloud.githubusercontent.com/assets/1550771/21073401/dced1afe-bed4-11e6-99e9-b5d673f7e45f.png)

With the PR:

![bokeh_plot 19](https://cloud.githubusercontent.com/assets/1550771/21073402/e2278e0a-bed4-11e6-9fb5-7bad0dc1f44e.png)
",3,1,"['tag: backend: bokeh', 'tag: component: plotting']"
1972,97423407,1007,19542768,2016-12-10 12:27:43,2016-12-10 15:33:47,closed,Correctly suppress Bars legend in bokeh>0.12.2,"Simple fix addressing #958, along with unit test.",1,1,"['type: bug', 'tag: backend: bokeh']"
1973,97021087,1004,19542768,2016-12-07 22:29:35,2016-12-08 03:48:38,closed,Fixed hover tooltips for Curve and Path types,Currently dimensions that shouldn't be are appearing in the hover tooltips. Additionally on ``CurvePlot`` the NdOverlay dimension information isn't supplied at all. I've also made various fixes to make color and alpha option work correctly in batched mode.,4,2,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
1974,95924190,998,19542768,2016-11-30 16:24:10,2016-11-30 19:10:09,closed,Make sure legends are always part of the bbox calculations (fixes #993),,2,1,[]
1975,95908216,997,19542768,2016-11-30 15:06:22,2016-12-01 14:08:39,closed,Options for multiple paths,"This implements issue #995. I have not yet tested the PR with python 2.
I'm very interested in your thoughts concerning coding style, since I have tried to follow your lead.",4,7,[]
1976,95802143,994,19542768,2016-11-30 00:05:08,2017-04-08 15:24:17,closed,Implement Image interface,"This PR is a WIP in implementing an interface to allow ``Image`` Elements to subclass ``Dataset`` and use the other interfaces, replacing ``GridImage``. There are a few things to be settled so I'm hoping to discuss these in this PR.

1. Our Image types need bounds. When you pass in an array the bounds are required, but when using the xarray and grid interfaces, the bounds should be computed from the data. Currently I deduce the bounds by asserting that all samples must be evenly spaced with a small tolerance (10e-9). Eventually we'll have QuadMesh for non-equal spacing, but that will require some more work. Does this sound reasonable?

2. Dataset does not have an interface to access multiple value arrays at once. This makes it difficult to access RGB and HSV data. We can either accept the overhead of stacking and unstacking these arrays and provide a convenient property on RGB/HSV elements to do this for us, or come up with a general API on the interfaces to get the stacked arrays. There was also the suggestion that other interfaces could support holding stacked value dimension arrays instead of holding them as unstacked arrays per value dimension but that could happen in a later PR.",19,70,"['tag: API', 'tag: component: data']"
1977,95734980,992,19542768,2016-11-29 17:10:38,2016-11-29 18:48:43,closed,Dataset types use __nonzero/bool__ method for truthiness,"As discussed in #988 this PR implements the ``__nonzero__`` (Py2) and ``__bool__`` (Py3) methods on Dataset ensuring, which is used instead of ``__len__``. This ensures that the dask interface can implement the ``__len__`` method correctly, without forcing code throughout holoviews to compute the length on a large out-of-core dask dataframe all the time.",2,1,['tag: component: data']
1978,95720922,991,19542768,2016-11-29 16:01:40,2016-11-29 18:50:13,closed,Optimized dask interface groupby implementation,The ``groupby`` implementation now no longer loads all the columns that are being grouped over. Instead it now uses the categories or unique values in a column for the 1D case and uses the ``itertuple`` method otherwise to accumulate the unique indices without loading the whole column at once.,2,1,['tag: component: data']
1979,92861345,981,19542768,2016-11-08 21:22:16,2016-11-08 22:40:30,closed,Empty layout now display as text repr,"
This PR addresses #980 by raising ``SkipRendering`` for empty layouts. In addition, it adds a ``warn`` option to ``SkipRendering`` making it possible to suppress the usual warning.",2,4,[]
1980,92460686,974,19542768,2016-11-05 17:34:52,2016-11-16 11:20:25,closed,Added dask data interface,"This PR adds an interface for Dask Dataframes making it possible to work with very large out-of-core dataframes. The interface is almost complete with some notable exceptions:

1. Dask dataframes do not support sorting which means that the ``sort`` method simply warns and continues.
2. Not all functions can be easily applied to a dask dataframe so some functions applied with ``aggregate`` and ``reduce`` will fail.
3. Dask does not support setting ``sort=False`` on aggregations, meaning that the aggregation groups are sorted and do not preserve the same order as other interfaces.
4. Dask does not easily support adding a new column to an existing dataframe unless it is a scalar, therefore ``add_dimension`` will error when supplied a non-scalar value.

Otherwise the full dataset test suite is being run against the interface so it all seems to be working.

Here is an example loading a 1.1GB CSV file and generating a DynamicMap of datashaded images grouped by the origin of the flights. In this example only the flight origins have to be loaded to apply the groupby. The aggregated data is not loaded until the first datashaded plot is displayed:

```python
%%timeit -r 1 -n 1
df = pd.read_csv('../apps/opensky.csv')
dataset = hv.Dataset(df, vdims=['velocity'])
groups = dataset.to(hv.Points, ['longitude', 'latitude'], [], ['origin'], dynamic=True)
shaded_origins=datashade(groups)
```
>1 loop, best of 1: 22 s per loop

```python
%%timeit -r 1 -n 1
df = dd.read_csv('../apps/opensky.csv', blocksize=50000000)
dataset = hv.Dataset(df, vdims=['velocity'])
groups = dataset.to(hv.Points, ['longitude', 'latitude'], [], ['origin'], dynamic=True)
shaded_origins=datashade(groups)
```
>1 loop, best of 1: 8.19 s per loop

And here is an example execution graph from a fairly complex expression, computing the mean velocity for every flight callsign originating in Algeria.

```python
hv.Dataset(dd.read_csv('../apps/opensky.csv', blocksize=50000000), vdims=['velocity'])\
.select(origin='Algeria').aggregate(['icao24'], np.mean).data.visualize()
```

![image](https://cloud.githubusercontent.com/assets/1550771/20032566/8c0389b8-a384-11e6-8840-6d52fcbebfbe.png)

And here's a task execution plot from a datashader aggregation executed on two remote workers:

<img width=""1296"" alt=""screen shot 2016-11-06 at 1 29 43 am"" src=""https://cloud.githubusercontent.com/assets/1550771/20034742/0e88fc2e-a3c1-11e6-93db-a7288db0ccfb.png"">

Overall this will do for us what xarray/iris have done for gridded data, letting us lazily load columnar data, extending our reach to datasets that are more than a few gigabytes.",7,8,"['type: feature', 'tag: component: data']"
1981,92431721,973,19542768,2016-11-04 23:35:55,2016-11-05 00:17:46,closed,Ensure hierarchical sliders are displayed,,1,1,[]
1982,92428077,972,19542768,2016-11-04 22:52:39,2016-11-04 23:28:25,closed,Ensure tuple keys are used throughout in plotting,,1,2,[]
1983,92424793,970,19542768,2016-11-04 22:18:44,2016-11-04 22:54:21,closed,"Ensure OverlayPlot ranges are computed correctly when +axiswise, +framewise",Previously the ``compute_ranges`` method would skip computing the ranges for Elements in an OverlayPlot when both +axiswise and +framewise were active.,1,1,[]
1984,92395424,969,19542768,2016-11-04 18:46:38,2017-04-04 12:25:18,closed,Counter mode deprecation,"This PR is work-in-progress and aims to remove the ``DynamicMap`` counter mode now that streams offer a much more principled way of achieving the same thing.

**TODO**:

- [ ]  Update the DynamicMap tutorial.
- [ ] Test this works properly with other notebooks using DynamicMap.
- [ ] Make sure we are clear about ``get_dynamic_item`` and associated semantics.
- [ ] We probably no longer need both ``mode`` and ``call_mode``.
- [ ] Before the assumption was that is ``call_mode='key'`` then the mode was ``'bounded'``. With streams, this is not quite right: bounded should apply if any of the kdims are bounded.
",4,6,[]
1985,91957765,968,19542768,2016-11-02 12:08:44,2016-11-04 12:07:26,closed,Optimized dynamic bokeh plots,"Previously we added some optimization that avoids sending updated plot data if the data source is unchanged between frames. However the plotting class still went through the effort of updating the datasource even though it is unchanged, which can in some cases be fairly expensive in itself. This generalizes the previous optimization such that the data is only updated in dynamic mode if it has changed.",1,1,[]
1986,91956966,967,19542768,2016-11-02 12:03:03,2016-11-04 12:01:19,closed,Ensure batched plots in Overlays are recognized as overlaid,"Previous batched plots (i.e. NdOverlays of batchable Elements) that were themselves overlaid were not correctly registered as such causing them to override axis ranges, widths, heights etc. This fixes this behavior.",2,2,[]
1987,91716482,964,19542768,2016-11-01 00:39:15,2016-11-01 01:14:33,closed,Fixed bug with duplicate streams,Ensure that plotting code is not given any duplicate streams.,1,1,[]
1988,91709506,963,19542768,2016-10-31 23:24:11,2016-11-01 00:16:59,closed,Small fixes and optimizations for datashader operations,"Includes various improvements/optimizations for the datashader operations avoiding making copies of the data, allowing different Element types to be used and providing an explicit color key dictionary.",0,2,[]
1989,91708549,962,19542768,2016-10-31 23:14:42,2016-10-31 23:34:22,closed,Add short timeout to bokeh stream callbacks,"The short timeout handles events which are meant to be processed together but execute in rapid succession, e.g. x_range and y_range events.",1,2,[]
1990,91546176,959,19542768,2016-10-31 01:36:24,2017-04-07 00:35:07,closed,Bokeh server support,"Adds support for deploying any holoviews object as a bokeh server app.
- [x] BokehRenderer initializes server document
- [x] Initial support for handling stream events

To do:
- [x] Bokeh widget implementation to support DynamicMaps and HoloMaps with standard streams
- [x] Ensure that bokeh stream callbacks relying on `cb_data` and `cb_obj` work correctly.
- [x] Add example apps.

Optional/Future:
- Provide easy way to tie a stream to any bokeh widget.
- Support bokeh widgets in a notebook context.

Example app:

```python
import numpy as np
import holoviews as hv
import holoviews.plotting.bokeh
from holoviews.operation.datashader import datashade

hv.Store.current_backend = 'bokeh'
renderer = hv.Store.renderers['bokeh'].instance(mode='server', holomap='server')
points = hv.HoloMap({i: hv.Points(np.random.multivariate_normal((0,0), [[0.1, 0.1], [0.1, 1.0]], (1000000,))) for i in range(10)})
datashaded = datashade(points, x_sampling=0.01, y_sampling=0.01)
doc, _ = renderer(datashaded)
doc.title = 'HoloViews Datashade'
```

![hv_datashade_server](https://cloud.githubusercontent.com/assets/1550771/19860738/cc98cc10-9f81-11e6-9b74-cbef54700b27.gif)

",13,30,"['type: feature', 'tag: backend: bokeh', 'status: ready']"
1991,91183590,957,19542768,2016-10-27 11:41:57,2016-10-27 13:38:06,closed,Added norm style option to all ColorbarPlot classes,"The `norm` plot option was not consistently exposed on all `ElementPlot`s that support the argument. Addresses issue #808.
",1,1,[]
1992,91161052,956,19542768,2016-10-27 09:13:43,2016-10-27 11:11:57,closed,Fixed confusing aliasing,"The attribute ""colors"" was being used in the same function both to refer to the matplotlib colors module and to a local dictionary.  In some cases (not easily reproducible) this led to complaints about variables being referenced before they were assigned. In any case this change makes it much clearer what is meant by ""colors"" each time.
",2,1,[]
1993,91039827,955,19542768,2016-10-26 16:23:47,2016-10-26 22:10:52,closed,Corrected QuadMesh clim style option to clims,"Fixes issue #942, the `clims` style option was misnamed as `clim`, which caused it not to be respected in some cases.
",0,1,[]
1994,91037589,954,19542768,2016-10-26 16:12:05,2016-10-27 23:09:24,closed,Correctly set matplotlib colorbar tick locators,"Fixes issue #565, the locators were being set using a non-existent method.
",1,1,[]
1995,90910411,953,19542768,2016-10-25 23:22:22,2017-02-23 17:06:38,closed,Correctly deduplicate tools in bokeh OverlayPlots,"Currently when the user or a stream callback passes a bokeh tool instance to plots in an overlay duplicates can occur issuing bokeh warnings. This PR ensures callbacks on the tools are appropriately merged.
",3,1,[]
1996,90909746,952,19542768,2016-10-25 23:15:53,2016-10-28 11:06:42,closed,Overlay collate,"This PR addresses issue #530, which suggested that creating an Overlay of HoloMaps to make it easy to declare certain datastructures. This PR reimplements the `Layout.from_values` method to be more efficient by not creating a bunch of intermediate objects, which also makes it possible to create an Overlay of HoloMaps and GridSpaces. Additionally it adds a trivial `collate` implementation which simply mirrors the old `from_values` implementation by reducing all the objects with the `__mul__` operator. Finally it sets up Overlays of HoloMaps and GridSpaces to be automatically collated and issue a warning like we already do for other invalid nesting structures.
",1,3,[]
1997,90690712,951,19542768,2016-10-24 20:54:10,2016-10-31 01:01:06,closed,Dynamic Callable API,"As described in #895, we needed a way to access streams on DynamicMaps wrapping other DynamicMaps or overlays containing one or more DynamicMaps. This PR implements a `Callable` object, which is used to wrap the DynamicMap callbacks generated by all internal operations. This makes it possible to access streams and stream sources on nested DynamicMaps and hook them up appropriately in the plotting code. 

Currently the Callable object is very straightforward, exposing a `callable_function` and `objects` parameter, which correspond to the callback and the list of objects the callback wraps around, e.g. in an overlaying operation between a `DynamicMap` and a `Points` Elements, the `callable_function` would be a function which overlays the two objects and the `objects` a list containing both objects.

Using two helper functions `get_streams` and `get_sources` we can then look up all the streams and sources that are associated with a particular plot and more specifically a specific layer in an Overlay.

The PR is still lacking docstrings and tests but it already works.

The best example to confirm it is working is this example of two separate selection callbacks attached to two separate data sources:

``` python
%%opts Points [tools=['box_select', 'lasso_select', 'tap']]
points = hv.Points(np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (1000,)))
points2 = hv.Points(np.random.multivariate_normal((0, 0), [[1, 0.1], [0.1, 1]], (1000,)))

sel1 = Selection1D()
sel2 = Selection1D()
hv.DynamicMap(lambda index: points, kdims=[], streams=[sel1]) *\
hv.DynamicMap(lambda index: hv.HLine(points['y'][index].mean() if index else -10), kdims=[], streams=[sel1]) *\
hv.DynamicMap(lambda index: points2, kdims=[], streams=[sel2]) *\
hv.DynamicMap(lambda index: hv.HLine(points2['y'][index].mean() if index else -10), kdims=[], streams=[sel2])
```

![dual_selection](https://cloud.githubusercontent.com/assets/1550771/19665257/0b4dc848-9a3c-11e6-8fb0-9e98abd07dca.gif)
",4,10,[]
1998,90611040,950,19542768,2016-10-24 13:24:34,2016-10-24 18:53:53,closed,Mapping types complain when supplied with vdims,"As suggested in https://github.com/ioam/holoviews/issues/811, `NdMapping` types will now error when you supply any value dimensions (vdims).
",1,1,[]
1999,90609458,949,19542768,2016-10-24 13:15:27,2016-10-24 16:25:43,closed,Ignore empty slice warning when plotting Layout containing Empty,"Ensures no warning is raised when plotting Layout containing Empty element as described in #888.
",0,1,[]
2000,90603772,948,19542768,2016-10-24 12:38:56,2016-10-27 22:08:10,closed,Parser fixes,"Two small fixes for the parser, the first fixes passing dictionary literals by eliminating duplicate commas generated by the parser, fixing part of the issue described in #270, e.g. this is now allowed:

``` python
%%opts Scatter [fontsize={'title': '20pt'}]
hv.Scatter(np.random.rand(100,2), group='A')
```

Secondly it fixes a bug when a opts definition includes nested bracketing as described in #930, which described an issue where:

```
%%opts Curve (color=hv.Cycle(values=sns.color_palette('Set1')))
hv.Overlay([hv.Curve(np.arange(10)*i) for i in range(3)])
```

Was not evaluated correctly. This is now also correctly processed.

Note that this does not fix all issues mentioned in #270, e.g. `aspect=dict(x=1, x=2, z=3)` still fails to evaluate, but it provides a significant improvement in some cases.
",4,4,[]
2001,90309971,944,19542768,2016-10-21 01:37:30,2016-10-21 11:06:00,closed,Fix rounding issues in DynamicMap,"Fixes issue #601 involving a bug where dimension values were rounded up outside a Dimension range before being sent to JS, causing the DynamicMap to throw out of range errors. I now round to 11 decimal places and then throw away the last digit.
",3,2,[]
2002,90272668,943,19542768,2016-10-20 20:14:08,2016-10-21 01:54:48,closed,Added perceptually uniform fire colormap,"The ""hot"" colormap that is the default for Image and other Raster types in Holoviews is highly perceptually nonuniform, which makes strange artifacts and makes it difficult to interpret data:

![image](https://cloud.githubusercontent.com/assets/1695496/19576137/7c7a2178-96d7-11e6-8fdb-284737111ac0.png)

On my request, Peter Kovesi created a much better version he called linear_kryw_0_100_c71 (see http://peterkovesi.com/projects/colourmaps):

![image](https://cloud.githubusercontent.com/assets/1695496/19576153/8ba4903e-96d7-11e6-9edc-f62207fe6ff4.png)

The new colormap (left) gives much smoother images that more faithfully represent the data:

![image](https://cloud.githubusercontent.com/assets/1695496/19576576/1984637e-96d9-11e6-9e25-a78b756f9c2c.png)

This PR adds the new colormap, renamed ""fire"" for simplicity and to indicate the similarity to ""hot"".  A subsequent PR should change the default colormap to ""fire"".
",3,4,[]
2003,89925479,941,19542768,2016-10-19 01:00:15,2016-10-20 14:09:08,closed,Bokeh notebook tests,"Ready to merge now. Bokeh_Elements is now tested in Python2 at least.
",4,2,[]
2004,89811785,940,19542768,2016-10-18 13:10:42,2016-10-18 13:32:03,closed,Ensured Dimensioned.range respects one-sided Dimension.range,"After just fixing one-sided `Dimension.range` specifications on `Dataset` types I just noticed that `Dimensioned` itself does not handle this condition correctly either. This ensures handling for ranges which are None on either side are handled correctly.
",1,1,[]
2005,89801614,939,19542768,2016-10-18 12:06:59,2016-10-18 13:31:11,closed,Suppress resources warning for failed backend imports,"When a backend can't be imported the resources warning will be suppressed ensuring that only one warning is raised.
",1,1,[]
2006,89800881,938,19542768,2016-10-18 12:02:02,2016-10-18 12:44:52,closed,Dataset range fix,"The `Dataset.range` method was not correctly processing one-sided fixed ranges, e.g. a Dimension with `range=(0, None)` would override the actual upper-bound with None, rather than letting it auto-compute the part of the range that is unspecified. This PR fixes this issue and adds a small fix for computing the correct extents on SpikesPlots.
",0,4,[]
2007,89614779,936,19542768,2016-10-17 12:35:25,2016-10-28 14:41:16,closed,Website update,,7,11,[]
2008,89532666,935,19542768,2016-10-16 17:36:44,2016-10-17 12:36:28,closed,Added event method to DynamicMap,"When prototyping the streams system, one thing we were wondering about was how to easily access streams from a DynamicMap in order to call `update`. The problem is you either need to keep a handle on the stream object or would need to use some mechanism to access the stream via some (optional) assigned name or by index. This poses some difficult problems and this PR suggests an alternative approach that bypasses this issue completely.

The `event` method on a `DynamicMap` does not deal with stream objects, just stream parameters. The appropriate streams that require updating are computed behind the scenes which works well as the identity of the streams is often of less interest to the user than the set of stream parameters (these are the keyword arguments passed to the `DynamicMap` callback).

If nothing else, the `event` method is is useful for debugging it will always allow print statements to appear in the notebook. Note that this isn't true for direct Bokeh interaction streams which sends such print statements to the web console:

![image](https://cloud.githubusercontent.com/assets/890576/19419386/423b0d94-93ce-11e6-9957-3bc1d47fc772.png)

Earlier on, I proposed that the `update` method of streams could also be renamed to `event` for consistency - unfortunately `update` already exists on `DynamicMap` as it inherits the method from `HoloMap` otherwise I would have called this method `update` too.

I no longer feel this is particularly important. This PR will mean that users rarely use an `update` method in any context: it is rarely used by users on `HoloMaps` or `DynamicMaps` and this new `event` method means users won't have to use the `update` method on streams either. That said, I'm still open to renaming `update` on streams to `event` if we feel this is better for overall consistency.

Lastly, I will want to have a tutorial demonstrating the `event` method as a way of building visualizations with streams. In particular, I will want a notebook demonstrating it with a visualization using a mix of kdims and dimensioned streams.
",3,1,[]
2009,89419398,934,19542768,2016-10-14 17:01:54,2016-10-14 17:04:51,closed,Fixed setting of styles on batched bokeh plots,"Batched plots were not correctly respecting styles set on individual Elements. This fixes that.
",1,1,"['type: bug', 'tag: backend: bokeh']"
2010,89419270,933,19542768,2016-10-14 17:00:56,2016-10-14 19:20:06,closed,Added stream activate and deactivate methods,"Adds `Stream.activate` and `Stream.deactivate` methods to streams to be triggered just before updating parameters and just after triggering the stream respectively. This allows defining custom actions after an event, e.g. in order to reset the value after an event has been processed.
",2,2,[]
2011,89413115,932,19542768,2016-10-14 16:18:37,2016-10-18 13:47:43,closed,Removed extra copies of options in messages,"RIght now, if you try to set an option with an invalid name, you get a huge list of all options, with three copies of everything.  There's probably a way to avoid having three copies, and if anyone wants to track that down, feel free!  Otherwise, we could merge this PR and at least make the messages easier to understand.
",4,2,[]
2012,89015221,929,19542768,2016-10-12 13:25:27,2016-10-12 17:17:38,closed,Added log option to histogram operation,"This adds a log option to the histogram operation, which automatically generates logarithmic sampling for the histogram bins. Also includes a small fix to fix bokeh histograms with inverted axes.
",2,3,[]
2013,88936876,928,19542768,2016-10-12 00:58:15,2016-10-12 13:51:08,closed,Bokeh adjoined histogram adds support for live colormapping,"An adjoined histogram in bokeh now automatically shares the color mapper of whatever plot it is adjoined to it and adds a `box_select` tool with a `CustomJS` to update that colormapper based on the current selection. Since this callback is pure JS this will also work on static export.

![dynamic_colormap](https://cloud.githubusercontent.com/assets/1550771/19293839/a9fa9b0a-901f-11e6-893e-afb2b490f76a.gif)
",8,6,[]
2014,88914913,927,19542768,2016-10-11 21:29:41,2016-10-12 12:26:07,closed,Ensure get_dynamic_item does not modify object,"So this was a pretty nasty bug, turns out my usage of `.map` with `clone=False` was modifying the object causing various weird bugs. This PR is a bit of an ugly workaround updating the item in DynamicMaps using a `map` call that doesn't modify the object and updates it and a separate map call to actually get the item. Can't think of a better to solution to update composite objects (i.e. Layouts and AdjointLayout) containing dimensionless DynamicMaps since `select` won't work.
",3,1,[]
2015,88843731,926,19542768,2016-10-11 14:32:28,2017-08-11 16:18:31,closed,Switched AttrTree dir mode to 'user',"By design, `AttrTrees` are supposed to allow easy tab-completion with capitalized names coming first and lowercase attributes coming later. This is the reason we capitalize the path components of Layouts and Overlays.

In some recent version of IPython, this behavior has been broken:

![image](https://cloud.githubusercontent.com/assets/890576/19274291/8ce62d8e-8fc7-11e6-9c6f-28b7ac775521.png)

Infuriatingly, the tab-completer even ignores the order of the values output by `__dir__`.

As a result, I've switched the dir_mode to 'user' to make AttrTrees work as intended. It means you won't see tab completion of the methods (e.g select) but at least you will see the items of the AttrTree properly.
",2,1,[]
2016,88840791,925,19542768,2016-10-11 14:17:05,2016-10-11 15:05:39,closed,Added ipython_canary_method to disabled prefix list,"Fixes the annoying appearance of `_ipython_canary_method_should_not_exist` on AttrTrees such as Layouts and Overlays.
",1,1,[]
2017,88738058,923,19542768,2016-10-10 21:57:55,2016-10-10 22:35:13,closed,Ensured dynamic callback is only called once,"A bug in the `get_dynamic_item` function ended up making clones of DynamicMaps which resulted in the dynamic callback being called multiple times. This PR fixes this and adds unit tests for all three backends to ensure the plot is appropriately updated.
",4,2,['type: bug']
2018,88693420,922,19542768,2016-10-10 16:32:52,2016-10-10 17:26:17,closed,Dynamic operations only pass valid params,"When creating a Dynamic ElementOperation with streams sometimes you want to supply additional streams, which do not supply parameters to the operation. This ensures that Dynamic only passes along parameters that are accepted by the operation.
",3,1,[]
2019,88688859,921,19542768,2016-10-10 16:03:16,2016-10-10 16:23:19,closed,Avoid warning when suppressing bokeh legend,"The API for legends changed slightly resulting in warnings for the latest versions of bokeh. This ensures that all `0.12.x` versions are handled correctly.
",2,1,[]
2020,88666580,919,19542768,2016-10-10 13:53:16,2016-10-10 14:01:13,closed,Add Versioneer for pep480 compliance,"I keep having issues with installing holoviews and not getting the correct `__version__`.

This pull request implements the usage of [`versioneer`](https://github.com/warner/python-versioneer), a package that creates the version from git tags.

It is used in many packages, amongst them: [pandas](https://github.com/pydata/pandas/blob/master/versioneer.py), [numpy](https://github.com/ContinuumIO/gulinalg/blob/master/setup.py#L11), [matplotlib](https://github.com/matplotlib/matplotlib/blob/master/versioneer.py), and many more!

Now installing from a dirty commit will result in: 

```
import holoviews
holoviews.__version__
'v1.7dev1+102.gee129cc.dirty'
```

where the `v1.7dev1` is the version tag, `+102` means 102 commits after last tag, `gee129cc` the short hash of the commit you installed, and `dirty` means that I have changes I didn't commit.
",7,1,[]
2021,88658783,916,19542768,2016-10-10 13:03:35,2016-10-10 16:22:30,closed,Sort `values` in hv.Dimension,,4,2,[]
2022,88427499,913,19542768,2016-10-07 12:13:01,2016-10-07 12:30:48,closed,Default Bounds stream to None,"Any arbitrary default values are unlikely to really make sense and Bounds should also allow None in other cases.
",3,1,[]
2023,88367050,912,19542768,2016-10-07 01:04:48,2016-10-07 12:26:12,closed,Dashboard comms fixes,"A fix to get streams working on Jupyter dashboards and another fix to ensure events are processed when an error is received.
",4,3,[]
2024,88353063,911,19542768,2016-10-06 22:31:02,2016-10-07 01:30:28,closed,Fixes for dynamic plot updates,"This PR includes three fixes:
- Fixes range computation for composite plots of DynamicMaps
- Fixed bokeh HistogramPlot inheritance to update handles correctly.
- Fixed passing streams to the hv.util.Dynamic function. 
",0,5,[]
2025,88188609,907,19542768,2016-10-06 02:14:35,2016-10-06 11:17:54,closed,Lower cased and applied small fixes to datashader operations,,2,1,[]
2026,88170184,906,19542768,2016-10-05 22:37:25,2016-10-06 13:36:31,closed,Improved error reporting on comms,"Improves the traceback reported in the console on error by including filename, error type, line number and function.
",3,7,[]
2027,88168178,905,19542768,2016-10-05 22:21:21,2016-10-06 11:22:39,closed,Avoid traversing data when computing bokeh plot update,"Currently there are some cases where the code is traversing large arrays or lists when trying to compute the required plot update for a bokeh plot. This PR simply makes sure they are no longer traversed in the remaining cases where this was not yet handled.
",1,1,[]
2028,88161955,904,19542768,2016-10-05 21:36:09,2016-10-05 22:16:44,closed,Allow multiple streams attached to the same plot model,"Currently when multiple streams are attached to the same plot model they will override each other. This PR ensures that  either the python callback or the JS callback are merged depending on whether the callback is of the same type. This is mostly a problem if two separate plots attach distinct streams to a set of linked axes. It also includes a fix for Layouts with multiple streams of the same type across the subplots, which would previously complain about parameter overlap. Finally it allows supplying stream instances to operations instead of instantiating a Stream instance internally, which can be useful to get a handle on the stream.

Here's a demo:

```
points = hv.Points(np.random.multivariate_normal((0,0), [[0.1, 0.1], [0.1, 1.0]], (1000000,)))
Datashade(points) + decimate(points)
```

![linked_datadecimate](https://cloud.githubusercontent.com/assets/1550771/19133033/3d18f502-8b4e-11e6-9b6b-43ad0f3f3ab2.gif)
",2,3,[]
2029,88135529,903,19542768,2016-10-05 18:53:21,2016-10-05 20:59:56,closed,Added downsample_columns operation,,1,4,[]
2030,88112665,902,19542768,2016-10-05 16:31:27,2016-10-05 17:07:13,closed,Fixed empty NdOverlay on initialization in batched mode,"Previously some parts of the plotting code would receive empty NdOverlays on initialization causing it to break. Now the plot is initialized on the last non-empty frame. Since the plot is updated subsequently with the correct frame this should not cause any issues.
",1,2,[]
2031,88099312,900,19542768,2016-10-05 15:20:31,2016-10-05 15:26:23,closed,Fixed legends for bokeh >=0.12.3,"The legend API has changed so I unfortunately had to add a conditional to support both versions.
",1,1,[]
2032,88094137,899,19542768,2016-10-05 14:55:03,2016-10-05 15:03:47,closed,Avoid deprecation warnings in bokeh 0.12.3,"When setting font sizes you now have to wrap it in a value object otherwise you get a deprecation warning.
",2,1,[]
2033,88093517,898,19542768,2016-10-05 14:52:00,2016-10-05 14:59:07,closed,Callback fixes,"Small fixes for callback initialization in python3 and the Selection1DCallback to cast string indices to integers.
",1,2,[]
2034,88092627,897,19542768,2016-10-05 14:47:40,2016-10-05 15:01:26,closed,Small fixes for widgets,"Two small fixes for widgets to process 'Complete' acknowledgements in python3 and to handle DynamicMaps with zero-kdims.
",3,1,[]
2035,88089924,896,19542768,2016-10-05 14:34:08,2016-10-05 15:02:50,closed,Fixed extents on bokeh HistogramPlot,"The extents of the Histogram were not correctly computed previously showing just the region between the min and max bin value. Histograms bins should instead reach down (or up) to zero.
",1,1,[]
2036,87894745,894,19542768,2016-10-04 13:33:31,2016-10-05 11:55:56,closed,Add Datashader operations,"As suggested in #812 this adds datashader operations to HoloViews, making it trivial to aggregate any Element type into an Image or stack of images and then shade it. The PR currently adds two main operations:
- Aggregate: Takes any 2D dataset with or without values and generates a `GridImage` aggregate wrapping an xarray DataArray.
- Shade: Takes the output of an aggregate and applies color interpolation and a transfer function ('linear', 'log', 'eq_hist'), returning an RGB element.

I've not yet written docstrings or any tests yet, but I do have the initial skeleton of a tutorial: https://anaconda.org/philippjfr/holoviews_datashader/notebook
",1,23,['type: feature']
2037,87536413,893,19542768,2016-09-30 17:45:04,2016-09-30 18:21:45,closed,Fixed updating of colormappers,"The way color mappers were updated was a bit hacky and in fact didn't work in some cases. This ensures existing color mapper instances are simply updated.
",2,1,"['type: bug', 'tag: backend: bokeh']"
2038,87506126,892,19542768,2016-09-30 14:40:21,2016-09-30 14:54:22,closed,Added throttling for bokeh callback events,"This implements throttling for bokeh callback events by making the Comm send acknowledgement events back to JS whenever it has finished processing an event sent to it from JS. In future this code will move onto a general WidgetManager class.
",3,1,[]
2039,87218647,889,19542768,2016-09-28 23:08:15,2016-09-30 12:53:03,closed,Connect streams with bokeh callbacks,"This finally allows connecting Streams with interactions on a bokeh plot, which will allow for all kinds of interactive features becoming trivial to implement. The PR is currently a WIP and only works for a DynamicMap returning a single element.

The PR works by defining Callback classes which define the attributes that should be returned from the bokeh plot and the handles the callback will be attached to. The Callback then auto-generates the code to look up those attributes and sends them back via a JupyterCommJS.

The next part I will work on is how the source of a stream is looked up to make sure it also works with overlays and layouts.
### Example

Having laid out what still needs work I will outline a concrete example of what does work. The PR registers the following callback:

``` python
class PositionXYCallback(Callback):

    attributes = {'x': 'cb_data.geometry.x', 'y': 'cb_data.geometry.y'}

    handles = ['hover']


callbacks = Stream._callbacks['bokeh']
callbacks[PositionXY] = PositionXYCallback
```

When creating a PositionXY stream on a DynamicMap it will now create a hovertool on the source of the stream, which sends its x and y position back to the Stream.

``` python
dmap = hv.DynamicMap(lambda x, y: hv.Points([(x**i, y**i) for i in np.linspace(0, 3)],
                                            extents=(0, 0, 10, 10)),
                     kdims=[], streams=[PositionXY()])
dmap
```

![xy](https://cloud.githubusercontent.com/assets/1550771/18935543/b0121fbe-85d8-11e6-80aa-5e69b1c79e83.gif)
",7,21,"['tag: backend: bokeh', 'status: WIP']"
2040,86512461,883,19542768,2016-09-23 13:27:23,2016-09-23 19:25:07,closed,Ensured DynamicOperation uses the set of keys when converting HoloMap,"Fixes issue raised in #882 
",4,1,['type: bug']
2041,86448389,881,19542768,2016-09-23 03:17:36,2016-09-23 12:20:52,closed,Unpinned pyqt on travis,,0,2,[]
2042,86444357,880,19542768,2016-09-23 02:14:42,2016-09-23 13:02:41,closed,Fixed bokeh Callbacks,"Updates bokeh Callbacks to correctly use comms and added comms to all subplots. The latter change will also be necessary for making streams work correctly.
",2,1,[]
2043,85786450,873,19542768,2016-09-19 12:46:30,2016-09-21 18:18:13,closed,Fixed bug in mpl ErrorBars,"Fixes bug in matplotlib ErrorBarPlot for symmetric ErrorBars (see #872).
",1,1,"['type: bug', 'tag: backend: mpl']"
2044,85779371,871,19542768,2016-09-19 11:52:24,2016-09-19 12:20:11,closed,Pinned pyqt=4.11 on travis,"Fixes issues with PyQt errors on travis after anaconda updated to PyQt 5.6. For reference see: https://github.com/ContinuumIO/anaconda-issues/issues/1065
",1,1,[]
2045,85710713,868,19542768,2016-09-18 13:53:16,2016-09-19 11:57:22,closed,matplotlib2.0.0b4 compatibility fix (1/2),"#866
",4,1,[]
2046,85710583,867,19542768,2016-09-18 13:47:58,2016-09-19 11:56:10,closed,matplotlib2.0.0b4 compatibility fix (1/2),"https://github.com/ioam/holoviews/issues/866
",6,2,[]
2047,85635477,865,19542768,2016-09-16 20:32:30,2016-09-19 12:34:29,closed,Skipping archive.add in display_hooks for FileArchives,"Small PR designed to address #836.
",3,1,[]
2048,85596292,864,19542768,2016-09-16 15:47:11,2016-09-17 15:19:02,closed,Switched to python initiated JupyterComm for mpl,"Renamed JupyterPushComm to JupyterComm and used it for matplotlib. Avoids errors when Comm is not initialized in time when running through a notebook quickly.
",2,2,[]
2049,85560714,863,19542768,2016-09-16 11:55:29,2016-09-16 13:59:40,closed,Added labelled plot option for bokeh plots,"Added the labelled plot option to bokeh matching the semantics of the matplotlib plot option.
",2,1,[]
2050,85146457,861,19542768,2016-09-13 23:58:24,2016-09-14 23:02:30,closed,Bokeh colorbars,"Since version 0.12.2 bokeh finally support colorbars and client-side colormapping for all kinds of glyphs. This PR adds a ColorbarPlot mixin class which handles the creation of a Colorbar and a ColorMapper. Additionally it replaces the manual colormapping that was previously done in Python for various plot types. I have also moved the toolbar to the top so it does not overlap with a colorbar by default and because it is more consistent.

To Do:
- [x] Test each changed Element in more detail
- [x] Implement color_mapper range updating
- [x] Update HeatMapPlot in #849 once this has been merged.
- [x] Add some unit tests to ensure colorbars get instantiated correctly

Examples:

Different `colorbar_position`s:

<img width=""641"" alt=""screen shot 2016-09-14 at 12 54 54 am"" src=""https://cloud.githubusercontent.com/assets/1550771/18495445/e57457ae-7a15-11e6-8d5d-3585e897e38d.png"">

Log colormapping on points:

<img width=""266"" alt=""screen shot 2016-09-14 at 12 45 16 am"" src=""https://cloud.githubusercontent.com/assets/1550771/18495448/e9701aa0-7a15-11e6-9b15-00081fa4b6fc.png"">

QuadMesh:

<img width=""279"" alt=""screen shot 2016-09-14 at 12 45 48 am"" src=""https://cloud.githubusercontent.com/assets/1550771/18495449/ec7f2704-7a15-11e6-8d59-9dd9b3ef1f9b.png"">

Polygons (more sensible on a Choropleth):

<img width=""287"" alt=""screen shot 2016-09-14 at 12 43 54 am"" src=""https://cloud.githubusercontent.com/assets/1550771/18495456/f6d0dd6a-7a15-11e6-94a5-24d0efafd7f1.png"">
",10,21,"['type: feature', 'tag: backend: bokeh', 'tag: component: plotting']"
2051,84924693,860,19542768,2016-09-12 18:55:52,2016-09-12 20:53:04,closed,Widgets ignore dimension streams,"Widgets now ignore dimensions which are defined through a stream ensuring that only widgets for non-stream dimensions are displayed.
",1,5,[]
2052,84865255,859,19542768,2016-09-12 12:49:12,2016-09-12 14:29:40,closed,Extended dimension values support,"This PR implements a feature request by @basnijholt on gitter to support numpy arrays and pandas Series as direct specifications for `Dimension.values` coupled with automatic de-duplication of values.
",2,3,[]
2053,84850725,858,19542768,2016-09-12 10:49:37,2016-09-12 14:13:00,closed,DynamicMap with streams force callback on first lookup after refresh,"Currently the plotting code will request a particular key from a single DynamicMap multiple times during plotting which should be avoided due to potentially random state.
",2,11,[]
2054,84785942,856,19542768,2016-09-11 13:06:47,2016-09-11 14:47:23,closed,Fixed python3 bug in GenericOverlayPlot,"Simple python3 bug causing batched plotting to fail in python3. 
",1,2,[]
2055,84656357,855,19542768,2016-09-09 14:04:29,2016-09-09 17:10:39,closed,Fix inverted coords on iris interface,"The iris interface does not correctly canonicalize the array orientation in all cases, causing the plot to be inverted. Since the tests still seem to be passing there appears to be a hole in the tests that I'll patch before this is ready to merge.
",1,2,[]
2056,84505870,854,19542768,2016-09-08 15:59:50,2016-09-08 16:15:55,closed,Display hover info for all dimensions on Spikes,,2,2,[]
2057,84389289,852,19542768,2016-09-07 23:07:30,2016-09-07 23:23:18,closed,Applying dimension formatters to Bokeh Table values,"This PR fixes the value formatting in Bokeh Tables that were previously unformatted.
",2,1,[]
2058,84372389,851,19542768,2016-09-07 20:58:07,2016-09-07 21:28:29,closed,Fixed updating of bokeh tables,"Ensures the bokeh TablePlot returns the appropriate plot handles to update the table in HoloMaps/DynamicMaps.
",1,1,[]
2059,84288467,850,19542768,2016-09-07 12:11:42,2016-09-07 14:06:30,closed,Removed caching of Table values,"This PR allows Tables to be updated with streams by disabling the caching of cell values in TablePlot. I've tested that streams now work but I won't be confident that everything is working as it should until the tests pass.
",2,5,[]
2060,84022609,849,19542768,2016-09-05 16:14:19,2017-01-09 18:35:10,closed,Make HeatMap more general,"The HeatMap Element has gone through a lot of redesign, initially being defined as a Raster type and then allowing columnar data. This PR refactors HeatMap to improve the simplify aggregation step and allow any number of value dimensions which can appear as hover information in bokeh. Still a WIP and I need to ensure the code is backward compatible (it should be).
",10,22,"['tag: API', 'tag: component: data']"
2061,83928731,848,19542768,2016-09-04 17:25:02,2016-09-04 19:14:09,closed,Disable DynamicMap._deep_indexable in display hook exceptions,"I am not sure this is the _correct_ fix (setting DynamicMap as not being ``_deep_indexable) but it is a simple fix for the issue with style restoration on DynamicMaps in the display hooks.

The issue was that `StopIteration` was being raised in `traverse` on dynamic maps. There are two other possible approaches I can think of:
1. Give `DynamicMap` an alternative implementation of `traverse`. I don't like this much as we rely on `traverse` a lot and expect it to always behave in a consistent way.
2. Temporarily declare `DynamicMap` as not being `deep_indexable` during style restoration.

I might look into option 2. now as it would be a less dramatic change.
",7,2,[]
2062,83858521,846,19542768,2016-09-02 20:14:55,2016-09-09 19:33:18,closed,Dimensioned streams,"This PR implements dimensioned streams i.e support for streams with parameters listed in the key dimensions. This generalizes streams fully so that everything you can achieve with a regular DynamicMap can now be achieved using a stream (i.e our sliders could now use a streams based approach for dynamic maps).

I think this PR is mostly complete but it isn't quite ready yet. I would like to test it more, taking time to ensure that the counter and generator ('open') modes work correctly. In addition, I want to write some unit tests for the three new utility functions I've introduced as well as for dynamic maps with dimensioned streams.
",3,12,[]
2063,83820280,845,19542768,2016-09-02 15:26:05,2016-09-02 16:05:20,closed,Renamed Stream.value to 'contents' to avoid name clashes,"A parameter called `value` would be very natural to use in a stream making it likely to clash with the `value` property. Renaming this property to `contents` should help avoid potential name clashes and confusion.

Ready to merge.
",2,2,[]
2064,83712565,844,19542768,2016-09-01 21:44:59,2016-09-01 23:17:12,closed,Param values stream,"This PR introduced the `ParamValues` stream which allows a stream interface to be used to manipulate the parameters of an object that is not the stream itself.
",1,2,[]
2065,83531321,842,19542768,2016-08-31 21:18:05,2016-08-31 23:17:07,closed,Correctly initialize comms and connect streams,"This PR ensures that only the top-level plot instance creates a Comm instance and then attaches the plot.refresh method as a `_hidden_subscriber` to the stream. A simple test I used:

``` python
posx = hv.streams.PositionX()
dmap = hv.DynamicMap(lambda x: hv.Image(np.random.rand(x+1,10)), kdims=[], streams=[posx])
```

``` python
dmap + hv.Image(np.random.rand(10,10))
```

![image](https://cloud.githubusercontent.com/assets/1550771/18146862/da6862de-6fc9-11e6-988a-84325185d62a.png)

``` python
for i in range(10):
    posx.update(x=i)
```

The plot updates in response to the position updates.
",1,4,[]
2066,83523671,841,19542768,2016-08-31 20:31:24,2016-08-31 21:11:23,closed,Allowed NdMappings with no kdims,"This fixes indexing for 0D NdMappings and allows displaying them as a single frame.
",3,1,[]
2067,83510326,840,19542768,2016-08-31 19:04:13,2016-08-31 20:15:34,closed,Cleaned up CompositePlot instantiation,"So I was about to add some code to different plots classes to attach streams and I got fed up with all the duplication in the composite plot constructors. I've moved everything to the base class cutting down a lot of the mess. 
",1,6,[]
2068,83303117,838,19542768,2016-08-30 16:23:29,2016-08-31 15:11:28,closed,Add Comms to allow updating plots dynamically,"This PR introduces Comms classes which allow bidirectionally communicating between the python process and a frontend. Additionally it gives Plot instances access to the current renderer and instantiates a Comms class, allowing updates to plots to be pushed to the frontend using the new `refresh` and `push` methods. Supports updating regular matplotlib plots, nbagg plots, mpld3 plots and bokeh plots. 
",7,20,[]
2069,83301248,837,19542768,2016-08-30 16:11:49,2016-08-30 16:18:20,closed,Allowed hiding legends on bokeh BarPlot,,1,1,[]
2070,83191960,835,19542768,2016-08-30 00:48:44,2016-08-30 16:07:09,closed,Fix for bokeh plot updates when frame is empty,,1,1,[]
2071,83095686,834,19542768,2016-08-29 13:06:32,2016-08-29 13:36:22,closed,Fixed coverage reporting,"The coverage module introduced a backward compatibility breaking change in v4.2 (see https://coverage.readthedocs.io/en/coverage-4.2/changes.html#version-4-2-2016-07-26). This PR ensures coverage reports are combined correctly again.
",1,1,[]
2072,82747014,832,19542768,2016-08-25 15:59:06,2016-08-31 17:47:42,closed,Introduction of Streams API,"This is the first PR of many that will introduce an exciting new feature to HoloViews 1.7, namely interactive streams. Everything is very much work-in-progress at this stage.

Streams will make it easy to enable interactive visualizations with HoloViews by making it possible for HoloViews plots to react to events. These events may be generated on the server-side from Python or on the client-side via JavaScript. 

In this PR, the focus is on the former (no JavaScript) and future PRs will enable interaction in the browser (using the Bokeh backend). Note that the design of streams ensures they are backend agnostic as possible (like everything else in HoloViews!).

The key points about streams:
- Streams are simply Parameterized objects whose parameters change over time in response to events.
- These events involve specifying new parameter values using the `update` method.
- A list of stream instances can be passed to `DynamicMap` to enable interactivity. The stream parameters are passed as keyword arguments to the `DynamicMap` callable when update events occur.
- Streams have their own callbacks (e.g user defined Python functions) that are also invoked with the stream parameter values.

This PR is currently work-in-progress but here is a quick preview. Note that this example will work with the matplotlib backend after a future PR is merged to update the plotting system:

![image](https://cloud.githubusercontent.com/assets/890576/17976143/154aa8a2-6ae4-11e6-8839-944247082eeb.png)

Right now, a dummy kdim ('Ignored') is declared which won't be needed in future.

Next the following setup is currently needed. In future, this will happen automatically and will be hidden from the user:

![image](https://cloud.githubusercontent.com/assets/890576/17976224/755aed92-6ae4-11e6-8bf7-06b01950fa2c.png)

Now when you call update on the stream:

``` python
m1.update(dict(y=-0.5, x=-0.5))
```

The plot responds to this event:

![image](https://cloud.githubusercontent.com/assets/890576/17976258/9b5d33e2-6ae4-11e6-8508-6411c28ee06b.png)

We plan to include the following streams:
`AxisRangeX`, `AxisRangeY`, `AxisRangeXY`, `BoxSelection` as well as more specialized streams such as `ElementSelector` and `DataSelector`. We'll also make it as easy as possible for users to define their own custom stream implementations.

Currently some of our plans are outlined on the wiki [here](https://github.com/ioam/holoviews/wiki/Streams) and [here](https://github.com/ioam/holoviews/wiki/Streams-implementation). These pages are likely to go stale quickly as the implementation evolves.

Exciting stuff and obviously a lot more to come!
",4,35,[]
2073,82531550,830,19542768,2016-08-24 12:19:05,2017-03-06 12:51:23,closed,Allow None in keys for partial dimension overlap,"We allow dimensions with partial overlaps in their dimensions to be displayed together. The code will internally pad any dimension keys that need it with Nones so that the overall object has a consistent set of keys that it can be indexed by. However since NdMappings check that all dimension values must be in the list of Dimension.values the None padding will raise issues. This PR means that None is always allowed as a dimension value.
",4,2,[]
2074,82398002,828,19542768,2016-08-23 16:29:13,2016-08-23 17:53:22,closed,Avoid updating data source if element data is unchanged,"Instead of checking whether the Element has changed it now checks whether the element data attribute has changed, when deciding whether to send the data source data to bokeh plot.
",1,1,[]
2075,82362622,827,19542768,2016-08-23 13:17:29,2016-08-23 15:28:06,closed,Allowed partial dimension overlap in DynamicMaps,"The code on DimensionedPlot was not robust to partial overlap in dimensions when plotting DynamicMap types. This PR ensures that partial keys (i.e. keys that are not of the same dimensionality as the overall plot) are padded with Nones before being inserted into the list of keys, ensuring that all keys are of the right length.
",1,2,"['type: bug', 'tag: component: plotting']"
2076,82105043,826,19542768,2016-08-21 12:54:44,2016-08-22 12:58:19,closed,Fix for aspects of matplotlib LayoutPlot,"One of the major current issues with the way Layouts are handled is that the code does not take into account non-square aspects when they have not been explicitly declared (via the `aspect` plot option). This means that any plots that use 'equal' aspect can leave significant white space in a layout figure. 

The algorithm to resolve this problem goes as follows:
1. Recursively iterate over all axes in the figure until they have been resolved into individual rows and columns, by their vertical and horizontal overlap.
2. Iterate over the axes in each row and column and get their extents (including ticks and title).
3. Use the maximum row width and maximum column height to compute the aspect of the plot and then set figure inches to respect that.
4. If a layout title is defined, reposition it to the top of the figure.

This results in significantly improved default behavior for plots with non-square aspects because unnecessary white space is removed. For now I've exposed this via a `fix_aspect` plot option but this was mostly for testing, we can consider enabling it by default, but I'd have to do some further testing first.

It's worth noting that for very extreme aspects it might not get it completely right but rather than having to set a custom `fig_inches` the `vspace` and `hspace` will now give you much better control adjusting the spacing between plots.
",9,13,[]
2077,81969775,825,19542768,2016-08-19 11:58:40,2016-08-19 15:44:39,closed,Fixed small bug in GridInterface.coords,"Small bug when a dimension object rather than a string is passed to the GridInterface.coords method.
",1,1,[]
2078,81830978,822,19542768,2016-08-18 14:58:33,2016-08-22 11:38:44,closed,Optimization for bokeh comms messages in dynamic mode,"Very simple optimizations for dynamic mode, including caching of the previous frame to check whether it is unchanged. Happy to hear a cleaner approach to caching the previous frame, but it's probably not worth factoring out that logic into some other object, since it's so trivial.
",2,4,[]
2079,81800514,821,19542768,2016-08-18 11:34:50,2016-08-18 15:18:14,closed,Fixed bug computing extents of mpl SpreadPlot,"The extent of Spread Elements wasn't being correctly computed in matplotlib. This provides a safe (but not perfect) implementation, computing the absolute largest possible extent, because there is no direct way to compute it precisely across multiple frames at the moment, something that will only become possible when we make the normalization system more general.
",3,1,['tag: backend: mpl']
2080,81799962,820,19542768,2016-08-18 11:30:23,2016-08-18 17:18:52,closed,Fix for xarray interface add_dimension implementation,"Fixes bug in handling add_dimension on xarray based datasets. Also fixes small bug when slicing dataset with no upper bound.
",1,1,[]
2081,81655916,818,19542768,2016-08-17 14:44:45,2016-08-17 15:46:28,closed,Ensure that iris does not override supplied dimensions,"Previously the iris interface was simply overriding any dimensions supplied by the user, this ensures user supplied dimensions are handled correctly.
",1,1,"['type: bug', 'tag: component: data']"
2082,81655600,817,19542768,2016-08-17 14:42:58,2016-08-17 15:51:02,closed,Fixed handling of constant dimensions in xarray,"This PR fixes handling of constant dimensions in the xarray interface of HoloViews. By default a select operation does not reduce the dimensionality of a HoloViews object, i.e. the dimensionality stays unchanged. Until we have proper support for constant dimensions this is probably the right approach, however xarray does convert coordinates to constant coordinates, which changes the shape of the array. This PR ensures that the shape of the arrays stays unchanged.
",1,1,"['type: bug', 'tag: component: data']"
2083,81626926,816,19542768,2016-08-17 11:34:15,2016-08-18 17:18:08,closed,Datetime64 fixes,"Matplotlib does not currently support plotting numpy datetime64 types directly. This PR adds a compatibility layer ensuring these types are converted appropriately for plotting in matplotlib.
",5,13,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
2084,81461690,814,19542768,2016-08-16 12:20:01,2016-08-16 17:15:42,closed,Ensure that NdOverlay is propagated correctly in dynamic batched mode,"When an OverlayPlot is used in dynamic mode it is responsible for delegating the layers in the Overlay/NdOverlay to the appropriate subplots. This handling works fine when each layer in an NdOverlay is assigned its own plot (as is the case in regular non-batched mode), what was missing was handling for dynamic mode + batched mode in which case it just passes the whole NdOverlay to the subplot. This PR makes sure that happens.
",1,2,[]
2085,79911170,807,19542768,2016-08-03 14:01:17,2016-08-15 12:44:46,closed,Improved bokeh json patch computation,"Improved code that tidies up bokeh json patches to update plots. Should result in an overall reduction of 30-50% in the size of the json containing the plot updates.

Things to do:
- [x] Test on a wide range of plots to ensure nothing breaks

I've now tested this on every bokeh based notebook I could find and have not encountered any issues. Very happy I could condense the plot updates this much!
",4,2,[]
2086,79028251,802,19542768,2016-07-27 13:55:11,2016-07-27 16:38:38,closed,Filter style keywords according to backend,"I think this functionality is best expressed with a screenshot:

<img width=""1010"" alt=""screen shot 2016-07-27 at 2 54 03 pm"" src=""https://cloud.githubusercontent.com/assets/890576/17177587/0a463412-540a-11e6-86b5-2c87b6ec2993.png"">

Note that `linewidth` applies to matplotlib and `line_width` applies to Bokeh.
",8,6,[]
2087,79027095,801,19542768,2016-07-27 13:48:18,2016-07-27 14:06:53,closed,Added support for adding legends outside plot in bokeh,"As the title says, this allows placing legends outside the axis itself with options that mirror those also present in matplotlib. Positioning is still a bit fiddly and doesn't work perfectly for all plots but the behavior is pretty good overall. Here are some simple examples:

``` python
hv.Layout([(hv.Curve(np.random.rand(10,2), label='A') * hv.Curve(np.random.rand(10,2), label='B'))(plot=dict(legend_position=pos)).relabel(pos)
           for pos in ['left', 'right', 'top', 'bottom']]).cols(2)
```

![image](https://cloud.githubusercontent.com/assets/1550771/17177217/428ff8a0-5408-11e6-8b64-2a7e264ded33.png)

Additionally I also added the legend_columns plot options. In matplotlib this option is an integer to control the number of columns in a legend, bokeh only supports an orientation, which is equivalent to setting the number of columns higher than the number of entries in the legend. For consistency between the backends I'd still argue that naming them the same thing and treating any non-zero `legend_columns` value as a horizontal legend layout makes sense:

``` python
%%opts Overlay [legend_cols=True]
hv.Layout([(hv.Curve(np.random.rand(10,2), label='A') * hv.Curve(np.random.rand(10,2), label='B'))(plot=dict(legend_position=pos)).relabel(pos)
           for pos in ['left', 'right', 'top', 'bottom']]).cols(2)
```

<img width=""631"" alt=""screen shot 2016-07-27 at 2 45 27 pm"" src=""https://cloud.githubusercontent.com/assets/1550771/17177348/d238e458-5408-11e6-95b3-cd98d9c799c7.png"">

Overall this is an improvement, it's just a bit annoying that bokeh treats legends, axes and anything else that's placed outside the main plot as part of the plot area, which means it won't preserve aspects and squish plots as you see above, but I'm hoping that's something they'll address soon.
",2,1,"['type: feature', 'tag: backend: bokeh']"
2088,78918139,800,19542768,2016-07-26 20:18:42,2016-07-27 14:23:57,closed,Generalized FileArchive add method signature,"Simple PR to make FileArchive signature of add method compatible with `NotebookArchive`. This means that tests should be able to run if nbformat isn't available i.e when `FileArchive` is set because `NotebookArchive` is unavailable.
",5,1,[]
2089,78917561,799,19542768,2016-07-26 20:15:07,2016-07-26 22:15:08,closed,Made xarray and iris optional dependencies for dataset tests,"Simple PR to allow tests to be run without requiring iris or xarray to be installed.
",1,1,[]
2090,78696359,796,19542768,2016-07-25 14:58:26,2016-07-26 23:01:45,closed,Dynamic inheritance in OptionTrees,"This PR is primarily to find out whether disabling `merge_keywords` has an effect on the test. If the tests continue to pass, then I propose keeping it disabled.

**Edit**: This PR turned into a fix for dynamic inheritance.
",6,9,[]
2091,77871955,794,19542768,2016-07-18 20:18:18,2016-07-27 13:27:54,closed,Grid based interface fixes,"Ensure that the flat and non-flat arrays returned by the grid interfaces are consistent and of the correct orientation. Also ensures the constructors work correctly and all process tuples of the coordinates and arrays correctly. Also adds small fixes for the GridImage Element, updates test and fixes issues with dynamic groupby, which caused the grid interface to reject the data in some cases. Addresses https://github.com/ioam/holoviews/issues/789 and more.

Still want to add a number of tests to ensure consistency and stability of the interfaces.
- [x] Standardized interface to get canonical views of coordinates and data arrays
- [x] Fixed constructors ensuring they handle standard tuple and dict based gridded data correctly
- [x] Fixed GridImage density calculation
- [x] Fixes for dynamic groupby with gridded interfaces (and allowing passing of parameters to groups).
- [x] Added unit tests to check output of gridded data `dimension_values` is consistent.
",9,26,[]
2092,77834293,793,19542768,2016-07-18 16:06:16,2016-07-18 20:11:50,closed,Do not fail if .info is called on an empty holomap,,3,1,[]
2093,77822014,792,19542768,2016-07-18 14:55:02,2016-07-25 01:55:47,closed,Make dependency optional,"The DFrame -> TablePlot association should only be registered if there is a DFrame to be imported...
",2,1,[]
2094,77395696,788,19542768,2016-07-14 03:41:49,2016-07-14 05:25:36,closed,Add GridImage Element which will eventually replace Image,,1,2,[]
2095,77369704,787,19542768,2016-07-13 22:04:08,2016-07-14 05:25:08,closed,Datetime fixes,"Fixes for displaying datetimes in bokeh and widgets.
",1,2,[]
2096,77166372,786,19542768,2016-07-12 18:20:29,2016-07-12 18:25:31,closed,Ensure that empty overlay frame does not break,"As the title says, when there's an empty frame in bokeh's OverlayPlot, it should not try to compute and set extents.
",1,1,[]
2097,77160919,785,19542768,2016-07-12 17:47:06,2016-07-12 18:26:14,closed,Reenable layout constraint solver workaround in bokeh,"In bokeh 0.12 the bokeh layout constraint solver was finally updated to correctly handle empty parts of a plot. However apparently it does not correctly handle the size of the empty plots. This PR reenables the workaround that explicitly inserts an empty plot.
",1,1,[]
2098,77150682,784,19542768,2016-07-12 16:43:18,2016-07-12 16:59:19,closed,Ensure empty frames don't break plots in bokeh,"Fixes bug where empty frame breaks plot updating.
",1,1,[]
2099,77129296,783,19542768,2016-07-12 14:25:45,2016-07-12 16:04:14,closed,Fixed small python3 bug in bokeh PathPlot tool setup,,1,1,[]
2100,77025387,779,19542768,2016-07-11 21:21:08,2016-07-11 23:50:26,closed,Add support for inverting axes and adjoining all Element types,"This PR adds support for almost all Element types to be used as adjoints in bokeh by correctly implementing axis inversions on the plotting classes.
",3,3,[]
2101,77002023,778,19542768,2016-07-11 18:38:38,2016-07-11 18:40:35,closed,Fixed batched plotting for bokeh PathPlot,"This PR fixes batched plotting of Path, Spikes and ErrorBars (which all have plot classes which subclass from PathPlot). The previous approach a) did not consider that Spikes and ErrorBars also use PathPlot and b) removes an optimization where it would not send color data if only a single color was set, which caused issues when some frames had multiple colors and some had only a single color.
",1,1,[]
2102,76855940,777,19542768,2016-07-09 20:12:18,2016-07-11 17:20:57,closed,Handle renderer options size and webgl in bokeh,"Adds support for global scaling of bokeh plots via `size` output magic option and setting webgl option based on global renderer.
",1,1,[]
2103,76854031,776,19542768,2016-07-09 18:46:28,2016-07-11 17:24:05,closed,Avoid mutating bokeh data source mapping,"In some cases the mapping returned by the `get_data` method on bokeh plots is mutated, which can cause side-effects because it is originally a class attribute. This PR ensures that the class attribute is never mutated.
",1,2,[]
2104,76854013,775,19542768,2016-07-09 18:45:20,2016-07-11 17:02:29,closed,Ensure non-None values aren't ignored in bokeh json messages,"The code that deletes references which cannot easily be updated in bokeh has a small bug where values that evaluate as False were deleted, when it really should just have been deleting Nones. This caused events to set the visibility of glyphs to False to be deleted for example.
",1,1,[]
2105,76853957,774,19542768,2016-07-09 18:43:02,2016-07-11 16:55:58,closed,Fix for single row grid plots in bokeh,"The logic in bokeh GridPlots was wrong, which was causing single dimensional layouts to be the wrong shape and not appropriately hide the axes.
",1,1,[]
2106,76853942,773,19542768,2016-07-09 18:42:05,2016-07-11 16:51:21,closed,Fixed bokeh shared_datasource setting,"I recently disabled the `shared_datasource` option because it can potentially cause problems. However I meant to disable it by default on Layouts only. This sets the behavior I had originally meant to apply.
",1,1,[]
2107,76853922,772,19542768,2016-07-09 18:40:58,2016-07-11 17:15:21,closed,Small fixes for bokeh OverlayPlot updates,"Handles condition where an Overlay is missing for one or more frames.
",1,2,[]
2108,76815080,770,19542768,2016-07-08 21:11:36,2016-07-08 21:12:59,closed,Added 'LogTickFormatter' to the set of ignored Bokeh models,"Simple PR that fixes using `logy=True` with Bokeh plots (at least for `Curve` plots).
",1,1,[]
2109,76734246,769,19542768,2016-07-08 10:45:49,2016-07-08 11:51:07,closed,Fixed extent handling in batched mode,"While introducing batched mode I did not correctly handle computing the extents. This PR consists of two main fixes, a) the GenericOverlayPlot now correctly computes the extents for a batched plot, and b) the bokeh backend now correctly detects framewise normalization modes (via a property) and always makes sure no NaNs are set on the axis ranges (which can cause the plot to blow up).
",4,4,[]
2110,76583494,767,19542768,2016-07-07 12:03:52,2016-07-07 14:53:48,closed,Added support for batching bokeh TextPlot,"Straightforward addition to allow batching Text Elements in bokeh backend.
",2,1,[]
2111,76105831,764,19542768,2016-07-04 02:13:37,2016-07-07 12:03:22,closed,Improvement to bokeh callback mechanism,"Minor improvements to the callback mechanism including an initial delay before executing an event. Recently introduced the same in datashader and seems to work very well. Just tested it on the NYC taxi dataset with 11 million downsampled to 20k points and it's amazingly responsive and works well. Best I think we'll be able to do in terms of user experience.
",3,2,[]
2112,76105319,763,19542768,2016-07-04 02:00:12,2016-07-07 15:00:06,closed,Fixes for Bokeh path plots,"Fixes for hover tools on polygons and adding batching for Path plots. This PR is based off https://github.com/ioam/holoviews/pull/762 and should be merged after that one.
",2,3,[]
2113,76078856,762,19542768,2016-07-03 02:03:43,2016-07-06 20:19:38,closed,Correctly set batched plot options,"Correctly respect the plot options set on the batched elements. Previously inherited all plot options from the NdOverlay, which a) could cause unsupported parameters being set and b) ignored plot options set on the Element. This appropriately combines the plot options from set on the NdOverlay and Element plot.
",4,2,[]
2114,76018952,761,19542768,2016-07-01 18:24:41,2016-07-01 18:27:35,closed,Ignore all axis and ticker models when updating bokeh plots,"Expanded the list of models ignored when sending updates to bokeh plots. This is still because bokeh axes raise errors when their `computed_bounds` are updated. Therefore all axis models and now also their tickers and tick formatters have to be excluded. For now this is not an issue, because we don't allow changing anything about those types between frames, but I will still investigate whether this can be solved in bokeh.
",1,1,[]
2115,76005732,760,19542768,2016-07-01 16:33:13,2016-07-01 17:33:19,closed,Unicode fix for ItemTable,"This PR aims to address the unicode issues raised in #756.
",1,4,[]
2116,75994752,759,19542768,2016-07-01 15:11:28,2017-04-08 14:53:44,closed,"RGB: Allow also NdOverlay as input. When ranges are not set, assume normalized data","Retry for #454 where I messed up the git repository.
",3,4,[]
2117,75990110,758,19542768,2016-07-01 14:41:27,2016-07-01 15:42:33,closed,Added Cycle and Palette to top-level namespace,,2,1,[]
2118,75987687,757,19542768,2016-07-01 14:24:59,2016-07-01 15:07:31,closed,Fix links in notebook (supercedes #534),"Small fixes to ensure website links work in the notebook and the website.
",3,1,[]
2119,75976450,754,19542768,2016-07-01 13:01:36,2016-07-01 14:26:36,closed,Removed bokeh resize tool until v1.0 release,"The bokeh resize tool is broken since the layout work they did, hopefully it will be fixed in v1.0 but for now let's remove it.
",1,1,[]
2120,75976093,753,19542768,2016-07-01 12:58:33,2016-07-01 14:55:53,closed,Fix if bokeh plot has single or no axis,,1,1,[]
2121,75975461,751,19542768,2016-07-01 12:53:30,2016-07-01 15:00:05,closed,Corrected Contours value_dimension parameter to vdims,"Seems this was doubly wrong, the parameter was called value_dimension, so it didn't get caught when renaming value_dimensions -> vdims.
",2,1,[]
2122,75974598,750,19542768,2016-07-01 12:46:33,2016-07-01 13:45:56,closed,Disable shared datasources on Layouts by default,"Sharing of datasources can cause issues when it is updated in one plot but not the other. In Grids this will not occur but on a Layout it can, so sharing of datasources should only be enabled when specifically requested.
",3,1,[]
2123,75969066,749,19542768,2016-07-01 11:56:53,2016-07-01 12:44:55,closed,Ignore All-NaN warning,"As the title says, addresses #738.
",1,1,[]
2124,75968504,748,19542768,2016-07-01 11:51:36,2017-03-11 20:36:02,closed,Disable automatic coloring and sizing on Points,"This is a continuing source of confusion and I'm suggesting we disable the `color_index` and `size_index` on Points by default. Having it magically map your variables to colors or scaling the points is often weird and undesired until you have actually requested it. We should also define a default colormap for Points in both backends so that if you do set a color_index it is actually applied in both cases (matplotlib would just fall back to the default cmap before). I'd be open to enabling the `color_index` by default but sizing can have very unpredictable behavior and should not just happen automatically.

Discussion needed.
",32,5,"['tag: component: plotting', 'tag: component: options']"
2125,75967808,747,19542768,2016-07-01 11:45:14,2016-07-01 12:40:15,closed,Underscore fixes,"Removed unnecessary use of underscore and ensured callbacks are robust to missing underscore.
",2,2,[]
2126,75965118,746,19542768,2016-07-01 11:19:48,2016-07-01 13:33:45,closed,Added function to strip bokeh update events from specific models,"Fixes previous approach to stripping certain models from bokeh update events. Both LinearAxis and LogAxis complain when updated saying that `computed_bounds` cannot be changed. Previously I was crudely looking for these objects, as I found out this is not sufficient in some cases. I've now added a function that traverses the model data and makes sure all references to those models are deleted. I'll investigate this bug with bokeh, but in the meantime it doesn't seem to do any harm since we never update the axis name or switch out an axis anyway.
",1,2,[]
2127,75815462,745,19542768,2016-06-30 13:04:10,2016-06-30 15:26:44,closed,Fix bokeh event sorting in py3,"Fixes python 3 bug where events could not be sorted:

``` python
TypeError: unorderable types: dict() < dict().
```

Now sorting on just the priorities.
",2,1,[]
2128,75814533,744,19542768,2016-06-30 12:57:47,2016-07-01 12:04:46,closed,Improvements and fixes for bokeh PolygonPlot,"A number of improvements and fixes for the bokeh PolygonPlot. Apart from fixing a bug in batched plotting this adds support for having the NdOverlay dimensions show up in the hover tools. This can be seen in action [here](http://examples.holoviews.org/EU_Referendum.html).
",1,1,[]
2129,75726114,743,19542768,2016-06-29 21:37:23,2016-06-30 12:23:52,closed,Cast mpl data to string before updating live widget,"Currently a random quote appears in live matplotlib widgets because the data is unicode. Eventually we'll want to replace this with a websocket, so for now I'm just casting back to string. This is safe because all the data is base64 encoded (and it is what we used to do). This bug only affected Python2 because Python 3 does not have the `u'` prefix for string literals.
",3,1,[]
2130,75635235,741,19542768,2016-06-29 11:59:55,2016-06-29 12:25:01,closed,Ensure nan is not set on bokeh axis range,"Straightforward fix which avoids NaN errors when plotting annotations or other plots which do not provide an extent.
",1,1,[]
2131,75573390,740,19542768,2016-06-29 00:50:38,2016-06-29 10:51:52,closed,Allow updating multiple bokeh Documents in callback,"A single bokeh callback can be attached to multiple bokeh plots and update them independently.
",2,1,[]
2132,75546638,739,19542768,2016-06-28 20:41:48,2016-06-28 23:37:25,closed,Fixed bokeh axis formatters for Overlays,"Fixed bug where wrong dimension formatter was applied.
",4,1,[]
2133,75466186,737,19542768,2016-06-28 12:12:03,2016-06-28 12:26:49,closed,Added bokeh model priority order,"This is needed because some models trigger a rerender while others do not, which has the potential to cause a redraw before a certain property has been updated. 
",1,1,[]
2134,75406650,736,19542768,2016-06-28 01:45:41,2016-06-28 12:27:22,closed,Skip rendering of nested Layouts,"This ensures that a layout that is nested rather than combined raises SkipRendering exception causing the display of the object to be skipped and a warning to be emitted.
",2,2,[]
2135,75406220,735,19542768,2016-06-28 01:39:59,2016-06-28 12:23:57,closed,Correctly convert glyph properties before updating them,"Tiny fix to ensure that colors are processed correctly. Most of this processing should be moved out of the `mpl_to_bokeh` method into one that is independent of matplotlib soon, but that's a separate PR.
",1,1,[]
2136,75345284,733,19542768,2016-06-27 16:59:49,2016-06-27 18:04:21,closed,Catch and warn about interface exceptions,"This PR ensures errors importing the pandas or iris interfaces doesn't break importing holoviews raising a warning instead. As far as I can tell the numpy RuntimeErrors this is meant to catch bypass it somehow, but when I tried it those errors did not break the holoviews import anyway. So this should address the mentioned error in https://github.com/ioam/holoviews/issues/732 and guard against anything else that could go wrong in pandas or iris.

Edit: Thinking about it iris must already be catching that particular numpy error, which is why I couldn't catch it again.
",1,1,[]
2137,75306837,731,19542768,2016-06-27 12:59:47,2016-06-27 14:43:00,closed,Various bokeh improvements,"This PR includes various improvements and fixes for legends, titles and tools. Additionally it is now possible to have DataTables and Tabs in a grid plot in bokeh however to allow this properly I have added a utility that wraps these plot elements in a `WidgetBox` and added some padding around them.
",2,2,['tag: backend: bokeh']
2138,75294834,730,19542768,2016-06-27 11:22:28,2016-06-27 14:59:39,closed,Handle backend JS/CSS dependencies for static export better,"Automatically adds backend JS/CSS dependencies to `static_html` output and handles inlined bokeh dependencies if CDN is not available (e.g. for dev builds of bokeh).
",4,1,[]
2139,74854160,729,19542768,2016-06-22 20:45:28,2016-06-22 20:55:30,closed,Added support for LogColorMapper in bokeh Raster plots,"Adds support for the `LogColorMapper` via the `logz` option on `Raster` based plots.

```
arr = np.random.rand(10,10)*10000
zero_arr = arr.copy()
zero_arr[5,5] = 0.
hv.Image(arr) + hv.Image(arr)(plot=dict(logz=True))
```

![image](https://cloud.githubusercontent.com/assets/1550771/16282911/974a77fa-38c2-11e6-9429-d1bc26e6b466.png)
",2,1,[]
2140,74788242,728,19542768,2016-06-22 13:55:51,2016-06-27 13:58:07,closed,Added support for tick formatters in bokeh,"As the title says this adds support for supplying arbitrary Python functions as tick formatters for the axes. A simple example is a formatter that displays seconds as minutes.

``` python
def formatter(seconds):
    m, s = divmod(seconds, 60)
    s = ('%d' % s) if s > 9 else ('0%s' % s)
    return ""%d:%s"" % (m, s)

hv.Curve(np.random.rand(300)).redim(x=dict(value_format=formatter, unit='min'))
```

![image](https://cloud.githubusercontent.com/assets/1550771/16270500/682cf7a6-388e-11e6-801b-bb9812da0a39.png)

Note that this depends on `flexx` being installed because compiling the python function to JS requires pyscript. Currently it will warn if flexx can't be imported or the function cannot be compiled.
",6,4,"['type: feature', 'tag: backend: bokeh']"
2141,74510371,725,19542768,2016-06-20 20:47:21,2016-06-21 13:50:49,closed,Fixes for bokeh 0.12 compatibility,"As the title says this PR makes HoloViews compatible with the upcoming bokeh 0.12 release. Since bokeh is going through rapid development cycles and we do not want to accumulate endless compatibility layers we are also dropping compatibility with 0.10 in this PR. The major component of this PR is in changing the way JSON patches are computed when using the widgets and callbacks, which has now been unified to use the same approach everywhere, bypassing the relatively slow patch diffing that bokeh uses by default and also dropping various hacks previously added to make things work across 0.10 and 0.11. This PR also does not yet add support for any of the new features in bokeh 0.12.  Those should follow in future PRs; for now this PR just makes sure all existing functionality continues to work.
",2,7,[]
2142,74234364,724,19542768,2016-06-17 12:26:09,2016-06-22 22:41:09,closed,Improvements to bokeh callbacks,"This PR now includes various improvements to the bokeh callbacks system.
1. Instead of sending the data to the browser via the regular display machinery it now hooks into the WebSocket Comms that is also used by our widgets. This is cleaner and avoids having to handle the JSON string manually in the callback JS code. 
2. Instead of using some arbitrary throttling value it makes use of blocking callbacks until the previous callback has confirmed it has completed. Additionally it maintains a queue to ensure that the last scheduled event actually gets executed. As a final safeguard it also has a timeout to ensure that if anything goes wrong the callback does not stay in a permanently blocked state.
3. Small changes to make DownsampleColumns a bit faster and avoid having to convert a pandas dataframe to a numpy array for downsampling.
",3,5,[]
2143,73654530,722,19542768,2016-06-13 22:37:22,2016-06-14 18:43:34,closed,Interrupting a Collector now returns all available data,"Title says it all: `KeyboardInterrupt` no longer loses the available data. Shame I didn't implement this before I actually needed it!

Addresses #658
",6,2,[]
2144,73654050,721,19542768,2016-06-13 22:32:46,2017-11-01 20:53:11,closed,Added start of a new Collector tutorial,"Title says it all! Note this is only a start to a proper tutorial...

I quite like the example I came up with... it shows a real time example by tracking the International Space Station :-)

I needed this tutorial to test my other PR, showing that you can interrupt the collector without losing data (#722)
",7,1,['tag: docs']
2145,73633659,719,19542768,2016-06-13 19:59:01,2017-04-18 00:59:31,closed,Made last set of positional arguments available in DynamicMap,"This PR is intended to address issue #705 

@philippjfr It is a simple change but it would be good if you could review it anyways.
",11,1,[]
2146,73146371,717,19542768,2016-06-09 01:31:39,2016-06-16 13:58:12,closed,Add support for batching NdOverlay plots ,"Following the proposal in #716 I've prototyped an initial implementation of batched plots for NdOverlays. The idea behind this is that creating a lot of individual plot instances for very similar plot elements is expensive and results in the creation of a huge number of artists and glyphs. Hooking into HoloViews to create plot classes, which plot a bunch of Elements at once is pretty straightforward and can provide considerable speed benefits. To test this I've prototyped a BatchedCurvePlot class, which can plot large NdOverlays of Curves very quickly in the bokeh backend.

I've tested this with this simple example:

``` python
hv.HoloMap({j: hv.NdOverlay({i: hv.Curve(np.random.rand(10,2)) for i in range(50)}) for j in range(10)})
```

After quick testing the batched plot renders this in 0.25 seconds vs the regular implementation which takes about 1.25 seconds to generate. More importantly however the generated bokeh output no longer freezes the browser temporarily, because it renders all the curves at once rather than as separate glyphs. Visually the two plots are identical except in bokeh the batched plot is coming out a lot crisper for me for some reason (I think this has been fixed in bokeh master).

There's still a few fixes to make and we need to decide on a general place for specialized plot registries such as for the batched plots here and for adjoined plots in other cases.
",40,10,[]
2147,72973130,715,19542768,2016-06-08 01:10:20,2016-06-09 18:58:37,closed,Implemented redim method on Dimensioned objects,"This PR adds the `redim` method to easily replace dimensions or certain attributes on dimensions in a nested object (following the proposal in #714). The dimension overrides are supplied as keyword arguments to the method with the keyword matching the existing dimension by name and the value supplying one of three overrides:
1. A simple string to rename the dimension, e.g. `curve.redim(x='Time')`.
2. A dictionary of parameter settings, e.g. `curve.redim(x={'range': (0, 10), 'name': 'Time'})`
3. A new Dimension object, e.g. `curve.redim(x=hv.Dimension('Time'))`.

The objects the redim applies to can be narrowed down with a specification, which is already in use on the `traverse`, `map` and `select` method. This allows only applying the `redim` to certain objects in  three different ways:
1. The type of the object, e.g. `layout.redim(hv.Curve, x='Time')`
2. A string specification of the form type{{.group}.label}, e.g. `layout.redim('Curve.GDP', x='Time')`
3. A function, e.g. `layout.redim(lambda x: x.vdims[0].name == 'GDP', x='Time')`

The implementation exists in two places, on `Dimensioned` and on `Dataset`. The implementation on Dataset is required because a change to the dimension names has to be reflected in the underlying datasource. The `rename` implementation on all the interfaces so far is pretty trivial and I think it's good functionality to have anyway. Overall I'm pretty happy with this and will be very useful to have, as now it'll be possible to quickly rename dimensions and adjust their ranges.

I still need to work on the docstrings, docs and add unit tests.
",10,3,[]
2148,72874401,713,19542768,2016-06-07 13:25:56,2016-07-14 03:38:54,closed,Adding a grid based xarray data interface ,"As the title suggests this PR adds an xarray interface, which will allow working with large gridded datasets. It is not quite complete, so should not be merged yet, but it's functional and there are just a few more issues to iron out before I can add unit tests and merge it.

What's still missing?
- [ ] Multi-dimensional aggregate/reduce
- [x] Add dimension support
- [ ] Reindex support for dropping constant dimensions
- [x] Unit tests
",7,11,[]
2149,72721539,712,19542768,2016-06-06 14:46:14,2016-06-08 23:13:01,closed,Skip rendering when no matching plotting class is found,"Rather than raising an error when a nested object containing objects which cannot be renderered is displayed (e.g. a HoloMap of `Datasets`) rather than raising a useless error message this will simply raise a `SkipRendering` error, which just raises a warning and then prints the repr, which is more useful.
",2,1,[]
2150,72612687,711,19542768,2016-06-04 20:48:33,2016-07-14 05:28:18,closed,Added support for dynamic groupby on all data interfaces,"A dynamic version of groupby proved exceptionally useful for large datasets we can now handle via the iris interface. However it can trivially be implemented in a general way using select, which is what I've done here. 

However there's also some cases where the behavior is not well defined. When you apply a dynamic groupby to columnar dataset, it can be sparse, which means that some portions of the cartesian grid the DynamicMap defines can be empty.  A simple example would be something like this:

``` python
import holoviews as hv
dataset = hv.Dataset((['UK', 'UK', 'USA'], [1995, 1996, 1995],  [0.1, 0.2, 0.3]),
                     kdims=['Country', 'Year', 'Index'], vdims=['Value'])
dmap = dataset.groupby(['Country', 'Year'], dynamic=True)
```

```
:DynamicMap   [Country,Year]
```

``` python
assert len(dmap['USA', 1996]) == 0
```

Here the value entry for USA and 1996 did not exist, so it returned an empty Element. Alternatively it could raise a KeyError. However the semantics of a DynamicMap mean that anything inside the space defined by theDimensions should be addressable, I think returning an empty Element might be more appropriate. However when you access a value that was not defined in the original Dataset it should definitely raise a KeyError:

``` python
dmap['Canada', 1955]
```

So I'll have to make sure that `DynamicMap.__getitem__` (and select) ensure that when in bounded mode it checks the requested key is in the defined values, not just the bounds. 
",8,4,"['type: feature', 'tag: component: data']"
2151,72612170,710,19542768,2016-06-04 20:27:22,2016-06-06 14:14:48,closed,Upgraded Travis versions to latest available,"Travis tests are failing atm, presumably because the version of libgfortran has changed.
",8,1,[]
2152,72607630,709,19542768,2016-06-04 17:15:11,2016-06-09 10:28:53,closed,Iris interface handles standard constructors enabling unit tests,"This PR allows the iris interface to handle the standard tuple and dict based constructors making it equivalent to the grid interface. This means all the unit tests, except for aggregation and sampling (which are not yet implemented), can be shared across the two interfaces.
",7,4,"['type: feature', 'tag: component: data']"
2153,72240461,701,19542768,2016-06-01 19:46:20,2016-06-14 17:36:47,closed,Generalize VectorFieldPlot,"This PR makes the VectorField element and plot mirror other elements more closely in that color and size can be mapped to any arbitrary dimension. It is a backwards compatibility breaking change but makes it more consistent and more powerful. I've used it extensively in my thesis for plots where the angle, magnitude and color are three separate dimensions:

![image](https://cloud.githubusercontent.com/assets/1550771/15723338/e0b0d464-2839-11e6-9671-240febb2d5e0.png)
",8,2,[]
2154,72015033,700,19542768,2016-05-31 13:26:45,2016-05-31 16:00:55,closed,Add missing import to Element init,"The import is needed in line 44 of the same file.
",1,1,[]
2155,71899196,698,19542768,2016-05-30 13:06:25,2016-05-31 21:33:45,closed,Typo in link in documentation,,5,1,[]
2156,71381813,691,19542768,2016-05-25 12:26:23,2017-08-11 11:20:13,closed,note on the y coordinate in numpy.meshgrid,"Adding small explanation why images in continuous coordinates tutorial are upside down.  
",9,2,[]
2157,70691151,688,19542768,2016-05-19 13:11:32,2016-05-19 14:14:12,closed,Added style options for the width of vectors in a vectorplot,,1,1,[]
2158,69895497,686,19542768,2016-05-12 19:46:53,2016-10-12 20:37:17,closed,Indicate color clipping and control clipping colors,"As the title says, adds a plot option to extend the colorbar in a particular. Here's an example:

``` python
%%opts Image [colorbar=True]
hv.Layout([hv.Image(np.random.rand(10,10))(plot=dict(cbar_extend=opt))
           for opt in ['min', 'max', 'both']])
```

![image](https://cloud.githubusercontent.com/assets/1550771/15228141/9c7ab380-1882-11e6-8e0c-919e49906937.png)

Can also consider automatically enabling this if your data falls outside the specified range but that's another discussion.
",28,6,[]
2159,69869289,685,19542768,2016-05-12 16:42:38,2016-06-06 16:25:16,closed,Clarified homepage examples,"This is a bit speculative, but I've noticed that people have a hard time parsing the second example on the homepage -- the result looks good, but it's hard to see how the bits add up to it.  I've reorganized the code slightly and changed the explanation to match; what do you think? 
",6,1,[]
2160,69757476,684,19542768,2016-05-11 23:13:59,2016-05-11 23:36:55,closed,Fixes for dependent widget values,"When adding some of the improvements for dynamic dropdowns and widget labels I didn't correctly update code to handle the dependent widget values where the state of one widget determines the state of next widget. These are some small fixes to make sure that works again.
",1,1,[]
2161,69749690,683,19542768,2016-05-11 22:00:48,2016-05-12 00:05:18,closed,Fixed initial frame Renderer bounding box calculation,"Very annoying the bounding box calculation has been broken for the initial frame for a while. I assume this will change some test data as well. The regression occurred in this commit: https://github.com/ioam/holoviews/commit/637fe63a475943e03be57a41db6fc62d6de394e1 
",1,1,[]
2162,69747734,682,19542768,2016-05-11 21:45:33,2016-05-11 22:09:54,closed,Removed redundant code from Dynamic Map tutorial,"Minor fix; shouldn't change results.
",1,1,[]
2163,69727279,680,19542768,2016-05-11 19:22:10,2016-05-11 19:29:35,closed,Removed BackendError and replaced single usage with SkipRendering,,2,1,[]
2164,69716499,679,19542768,2016-05-11 18:07:36,2016-05-11 18:30:44,closed,Fixed all flake8 warnings,"Title says it all. Let's try not to introduce any flakes before the release!
",1,1,[]
2165,69714238,678,19542768,2016-05-11 17:51:52,2016-05-11 18:38:09,closed,Fix Bokeh QuadMesh example,"I've updated the index of the Bokeh Elements tutorial to indicate it's supported. Additionally I'm now raising an SkipRendering error for non-rectangular QuadMeshes which are not yet supported.
",1,2,[]
2166,69708297,677,19542768,2016-05-11 17:09:23,2016-05-11 19:23:39,closed,Dynamic Map tutorial updates,"Did a full pass on this tutorial to fold in recent updates and clarify.  Would be worth someone looking at the changes and checking that the clarifications were in fact correct, and not misunderstandings!

One issue: I find the name of ""sampled mode"" confusing, as in its purest form it's not actually sampled (yet).  Would it be fair to call it ""unbounded mode"", in comparison to ""bounded mode""?
",23,3,[]
2167,69693233,675,19542768,2016-05-11 15:33:23,2016-05-11 16:01:47,closed,Cleanup of unused and undefined variables,"As the title says this includes all the unused and undefined variables highlighted by pylint.
",3,1,[]
2168,69692426,674,19542768,2016-05-11 15:28:48,2016-05-11 17:50:08,closed,Improved abbreviated exception and traceback processing,"PR to address #507 which eliminates the hackish code that didn't work particularly well and replaces it with a more targeted solution. We now need to use the `abbreviated_exception` context manager in the plotting code as appropriate. All other exceptions and tracebacks now remain unaffected.
",8,10,[]
2169,69668851,672,19542768,2016-05-11 13:09:37,2016-05-11 14:04:36,closed,Fixed Raster.reduce for non Image types,"Fix for #595, handles the reduction of the x-axis for the Raster class itself correctly. The reduce method is currently shared between all Raster and Image classes and it only handled the Image case correctly. In future when we have integrated Raster types with the grid interfaces this should be refactored but it works fine for now.
",3,1,[]
2170,69666514,671,19542768,2016-05-11 12:53:27,2016-05-11 14:37:59,closed,Improvements to installation and setup.py,"This PR aims to fix #527 and implement any other small improvements we can to setup.py and the installation process.
",5,3,[]
2171,69646944,670,19542768,2016-05-11 10:14:23,2016-05-11 12:33:25,closed,Transposed grid interface data format,"Addresses #637 to ensure that the new Grid interface is more consistent with the usual conventions of matrix shapes.
",3,1,[]
2172,69641017,669,19542768,2016-05-11 09:31:35,2016-05-11 10:55:13,closed,Added support for slicing/indexing with predicate functions,"Implements the suggestion in #619 supporting predicate functions which return Booleans for slicing on both NdMapping types and the data interfaces.
",2,1,[]
2173,69638640,668,19542768,2016-05-11 09:14:12,2016-05-11 13:40:28,closed,Avoid hard dependencies on plotting backends,"Addresses #528 in two ways. The main holoviews `__init__.py` no longer imports the ipython module automatically, which avoids initializing everything immediately. This means HoloViews can now be imported without all the plotting side-effects that causes, which was an issue raised by some users, e.g. see https://github.com/ioam/imagen/issues/48. Instead everything gets initialized when the notebook extension is loaded or the ipython and plotting modules are imported manually. Additionally I've made sure that the IPython extension and the magics correctly handle the case where no plotting library is available.

The only issue I see with this approach is that the notebook extension is now a simple wrapper, which does not define the parameters or a docstring. A better solution would be very welcome.
",4,4,[]
2174,69634921,667,19542768,2016-05-11 08:44:39,2016-05-11 10:57:53,closed,Added Tutorial section to explain DynamicMap groupby methods,,2,1,[]
2175,69268127,664,19542768,2016-05-08 12:46:34,2016-05-09 19:00:26,closed,Implemented DynamicMap groupby methods,"Also prototyped this a while back and it would be nice to get it into this release. This allows applying groupby operations to DynamicMaps as long as the Dimensions that will become part of a non-dynamic type define a fixed sampling:

``` python
%%opts GridSpace [show_legend=True]
xs = np.linspace(0, 2*np.pi)
def sin(ph, f, amp):
    return hv.Curve((xs, np.sin(xs*f+ph)*amp))

hv.DynamicMap(sin, kdims=[hv.Dimension('ph', range=(0, np.pi)),
                          hv.Dimension('f', values=[0.1, 1, 2]),
                          hv.Dimension('amp', values=[0.5, 1])]).overlay('f').grid('amp')
```

![image](https://cloud.githubusercontent.com/assets/1550771/15097968/237d42cc-1526-11e6-8b5e-9291111c078f.png)

Here we define the frequency and amplitude dimensions with a fixed sampling and then set them to be overlaid and gridded respectively. Since the phase dimension stays in a DynamicMap it can define a continuous range. The displayed object is a GridSpace of DynamicMaps, which return NdOverlays. This will be very useful to explore very large but non-continuous spaces, as we do in some of our projects.
",6,1,[]
2176,69255102,663,19542768,2016-05-07 22:40:29,2016-05-07 23:10:01,closed,Fix for HoloMap.sample without pandas,"Fix for #662, unique_array is meant to handle arrays and the closest call returns a list. Switched to `unique_iterator` to keep samples sorted. 
",2,1,[]
2177,69241496,661,19542768,2016-05-07 12:36:28,2016-05-07 13:39:52,closed,Added bokeh QuadMeshPlot,"Had this lying around for a while and took only a few minutes to polish. Works just like the matplotlib version:

For comparison:

Bokeh:

![image](https://cloud.githubusercontent.com/assets/1550771/15092143/5e8b9396-1459-11e6-999d-37627f8e7fde.png)

Matplotlib:

![image](https://cloud.githubusercontent.com/assets/1550771/15092149/710e3a50-1459-11e6-9598-36f04ef31243.png)
",2,2,[]
2178,69240785,660,19542768,2016-05-07 11:57:16,2016-05-07 13:39:08,closed,Scope widget resize handle CSS not to interfere with nbagg,,3,1,[]
2179,69240780,659,19542768,2016-05-07 11:57:09,2016-05-07 13:38:47,closed,Fixed bug in bokeh HeatMap,"Small bugfix for bokeh histograms. It was not passing **unique** values to the axes causing weird issues.
",2,1,[]
2180,68895261,657,19542768,2016-05-04 16:51:37,2016-05-10 14:34:08,closed,Support for rotated ellipses,"```
hv.NdOverlay({angle: hv.Ellipse(0,0,5,aspect=2, angle=angle) for angle in np.linspace(0,np.pi/2, 6)}, kdims=['Angle'])
```

![download](https://cloud.githubusercontent.com/assets/3776190/15021833/351568d4-1229-11e6-8241-cf5187d003c5.png)
",3,2,[]
2181,68397414,655,19542768,2016-04-29 16:23:02,2016-05-11 12:56:45,closed,Add GridMatrix example to documentation,"As suggested in https://github.com/ioam/holoviews/issues/513, adds examples for the GridMatrix container to the Containers Tutorial. Shows two ways of using a GridMatrix, the first example looks like this, comparing a number of 1D distributions against each other:

![image](https://cloud.githubusercontent.com/assets/1550771/14922322/de921898-0e2e-11e6-9883-3a6c6aff676c.png)

and a GridMatrix of HoloMaps example showing 2D distributions individually and overlaid:

![image](https://cloud.githubusercontent.com/assets/1550771/14922354/05fcf574-0e2f-11e6-98e5-79daacebb271.png)
",6,3,[]
2182,68391151,654,19542768,2016-04-29 15:39:38,2016-04-29 15:56:47,closed,Renderer passes instance of itself to the widgets,"Fixes https://github.com/ioam/holoviews/issues/586
",2,1,['type: bug']
2183,68387199,653,19542768,2016-04-29 15:13:13,2016-04-29 16:00:32,closed,HoloMap grid/layout/overlay methods now transpose dimensions correctly,"Fixes https://github.com/ioam/holoviews/issues/592
",2,1,['type: bug']
2184,68311209,652,19542768,2016-04-29 00:29:06,2016-04-29 08:09:29,closed,Fixed bugs in widget value processing,"In the recent PR to fix sampled dynamic widgets I caused some bugs for non-dynamic widgets. This is a bug fix. I'll make another PR to finally sort out the indentation in this file.
",1,1,[]
2185,68104169,649,19542768,2016-04-27 18:46:24,2016-04-27 21:59:23,closed,"Sampled dynamic widgets now work by index, avoiding precision issues","Currently when working in sampled dynamic mode the values will loose precision and potentially break various lookups (see #647). This PR avoids sending the float values to Javascript working by index in the dimension values instead. The way the dynamic values are sent to JS now is now redundant (a mapping from index to index) but refactoring it would take a while so I suggest postponing that for now.
",6,1,[]
2186,68093333,648,19542768,2016-04-27 17:34:22,2016-04-27 18:46:31,closed,Iris interface groupby now uses fuzzy matching for floats,"As we found out in #647 the dynamic groupby operation in the iris interface has issues with float precision. This is because float precision does not match between Python and JS so we truncate the precision to 10 decimal places. Unfortunately JS then seems to further degrade the precision so I could only get it to reliably match was at 5 decimal places, which is a bit poor. 

I'll try and see if I can come up with a workaround which works on indices, bypassing this issue entirely. So don't merge this yet, it's just a place for discussion for now.
",0,1,[]
2187,68029337,645,19542768,2016-04-27 10:20:33,2016-04-27 15:08:27,closed,cast to string for dict lookups,,2,1,[]
2188,67968538,644,19542768,2016-04-26 22:27:07,2016-04-28 12:16:09,closed,Initial prototype for Dimension preset system,"This approach is very simple and I rather like it:
- Entirely optional.
- 6 lines of code and could have been only 4 lines of code if I only wanted to support `(name, unit)` lookups
- Works completely transparently with no changes to the code required anywhere else. Create a dimension and if there is a matching preset defined, the other dimension parameters are filled in.
- Works from specific to general. If a preset with a `(name, unit)` match is found, that is used first. If a preset with only `name` defined is found, that is then used, allowing the unit to be filled in from the dimension name (useful if only one possible unit makes sense).
- `hv.Dimension.presets` is nice an convenient for access/definition (and now has a nice repr!)

It doesn't allow sharing but I don't see an issue. If you aren't happy with a preset, make sure you define it the way you want it (e.g at the top of the notebook) before building your elements. You are free to change the preset definitions at any time.
",7,6,[]
2189,67954267,643,19542768,2016-04-26 20:39:30,2016-04-26 21:59:45,closed,Interface initialization improvements,"This PR generalizes what interfaces can return to initialize elements.
",2,6,[]
2190,67936141,642,19542768,2016-04-26 18:35:52,2016-04-26 18:53:37,closed,Instances of sanitize functions were incorrectly sharing a cache,"A subtle bug that was annoying and very hard to pin down!
",2,1,['type: bug']
2191,67922255,641,19542768,2016-04-26 17:04:07,2016-04-26 18:36:44,closed,Allows closest to automatically capitalize group and label lookup,"As OptionTree already capitalizes by default this will help elements with lowercase group and label strings to lookup their options correctly.
",1,1,[]
2192,67859155,640,19542768,2016-04-26 10:09:46,2018-11-06 12:52:46,closed,Render matplotlib output to canvas avoiding flicker,"Initial prototype to render matplotlib output to canvas to completely avoid flicker. Before merge should decide whether rendering SVG to canvas always makes sense since it will no longer be vectorized. Possibly support switching between canvas and regular rendering? Also consider whether to override save-as menu to allow saving the original image not the rasterized canvas version. Finally also need to set canvas size once, rather than on each update, perhaps with some margin.
",2,1,[]
2193,67701575,639,19542768,2016-04-25 11:07:37,2016-04-29 15:20:06,closed,Keep track of last displayed frame to hide,"May or may not improve flickering issues
",0,1,[]
2194,67498314,636,19542768,2016-04-22 11:39:13,2016-05-11 13:37:53,closed,Added plot option to control which axis labels to display,"This PR adds a plot option to control which axis labels to display. Currently we provide no control over whether to display specific axis labels. While you usually want axis labels there are cases where you have complex plot arrangements with shared axes when you do want control over it. I didn't want to add separate parameters for each so I have implemented it as a list of `['x', 'y', ('z')]`. I'm very open to other suggestions but I do think we should offer some control over this.

Also includes a small addition to GridSpace plots to ensure that only one axis label is shown for the shared axes of those plots, which uses this mechanism.

Edit: Another option would be to contract it to a single string so you just say set 'xy', 'x' or 'y'.
",7,1,[]
2195,67340106,634,19542768,2016-04-21 11:44:51,2016-04-21 13:11:41,closed,Fixed for matplotlib ColorbarPlot with no solids,"Some plot types have only discrete colors, which means the colorbar has no solids. This ensures that the solid edgecolor is only set if there is actually a `cbar.solids` object to set it on.
",2,1,[]
2196,67315401,633,19542768,2016-04-21 08:33:17,2016-04-21 17:03:46,closed,Temporarily disabled certificate validation in travis.yml,,2,1,[]
2197,67265606,631,19542768,2016-04-20 21:59:19,2016-04-20 23:04:09,closed,Fixed bug in determining axis labels,"In the recent refactor I changed how axis labels are determined, in particular Overlays set the axis labels by getting the first Element that is found via a traverse. However some Elements don't have a simple mapping between the dimensions and the axes. Since the bottom layer of an Overlay already sets the axis label only to be overridden by the Element this simply stops OverlayPlot from setting axis labels. The behavior should be identical in all cases except when the axis labels were previously wrong.
",2,1,[]
2198,67265109,630,19542768,2016-04-20 21:55:19,2016-04-20 23:08:21,closed,"Various fixes for seaborn Distribution plotting, dimensions and conversions","During various refactors I broke the Distribution Element in a number of ways. This PR fixes issues with the dimensionality and plotting of this Element type.
",2,3,"['tag: backend: mpl', 'tag: component: plotting']"
2199,67260171,629,19542768,2016-04-20 21:18:47,2016-04-20 23:06:52,closed,Small fix for updating HeatMap labels,"The HeatMap value labels weren't correctly added to the handles which resulted in them never being cleared, resulting in drawing more and more overlapping text labels.
",2,1,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
2200,67205620,628,19542768,2016-04-20 15:16:45,2016-04-20 17:03:08,closed,Fixed hard dependencies on pandas,"There were two hard dependencies on pandas, which are resolved by this PR. The first involved import the PandasInterface, which is not available unless pandas was installed. The other was an issue in the bokeh backend outlined in #589.
",1,2,[]
2201,67192169,627,19542768,2016-04-20 14:03:06,2016-04-26 18:40:37,closed,Added _dir_mode option to AttrTrees,"If you set `t._dir_mode = 'user'` on an `AttrTree` called `t` then only the keys added by the user are returned by __dir__ and tab-completed.
",6,4,[]
2202,67173605,626,19542768,2016-04-20 11:55:16,2016-04-20 13:31:45,closed,Allow specific underscore attributes to be ignored in AttrTree,"The underscore was checked after santizing the identifier, allowed `A_repr_html` to make an unwelcome reappearance.
",4,1,[]
2203,67152921,624,19542768,2016-04-20 09:16:50,2016-04-20 13:16:27,closed,Added interface class for iris Cube datasets,"This PR adds an interface for iris Cube datasets to work with large out-of-memory datasets. The interface isn't entirely complete but supports all the basic functionality to work with such a dataset.

In future we can think about also implementing the `sample` and `aggregate` methods but it should not hold up this PR.
",3,4,"['type: feature', 'tag: component: data']"
2204,67145132,623,19542768,2016-04-20 08:15:51,2016-04-20 08:42:38,closed,Remove unused variables.,,1,1,[]
2205,67101119,622,19542768,2016-04-19 22:31:46,2016-04-20 07:39:44,closed,Conversion refactor,"Depends on #620 and #621 and moves the conversion interface from Table Element to `Dataset` class. This exposes this API on a lower level, allows overriding the conversion interface and splits it into a baseclass for general conversion and a separate class to implement methods for specific Elements.
",1,9,[]
2206,67072389,621,19542768,2016-04-19 19:07:32,2016-04-20 07:23:23,closed,Splitting core/data module into smaller files,"Depends on #620 and simply does as the title says as the core/data.py module was soon going to exceed 2000 lines.
",2,8,[]
2207,67045002,620,19542768,2016-04-19 16:01:04,2016-04-20 07:23:25,closed,Renamed Columns Element to Dataset,"As the title says this is a simple renaming from Columns to Dataset. This is because data interfaces are no longer required to be columnar, also supporting gridded data for instance. A general baseclass called `Dataset` will be very useful to wrap very high-dimensional datasets, which do not have a clear visual representation.
",3,7,['tag: API']
2208,66860380,617,19542768,2016-04-18 14:14:58,2016-04-18 14:38:09,closed,fix to signature for hv.Element,"Updated line to correct signature in the description of hv.Element
",1,1,[]
2209,66785355,616,19542768,2016-04-17 23:27:29,2016-04-18 00:05:07,closed,Switched from bootstrap slider sizing to explicit width values,"Fixes bugs when widgets on websites.
",1,1,[]
2210,66784161,615,19542768,2016-04-17 22:41:55,2016-04-18 00:14:34,closed,Always apply tick rotation even if no explicit ticks are supplied,"As the title says, in a recent refactor I only applied tick rotations if the ticks have been supplied explicitly, this always applies the rotation.
",1,1,[]
2211,66781111,614,19542768,2016-04-17 20:57:02,2016-04-17 22:20:19,closed,Avoid passing default group in clone if new_type is supplied,"Avoids inheriting of default groups in clone when new_type is supplied avoiding inappropriate group labels.
",2,1,[]
2212,66768597,613,19542768,2016-04-17 13:43:27,2016-04-18 00:25:08,closed,Use requirejs.config not require.config,"In some cases require.config does not seem to be available, this uses requirejs.config instead, which should always be available.
",0,1,[]
2213,66766608,612,19542768,2016-04-17 12:16:28,2016-04-17 13:56:55,closed,Added strict checking of dimensions on Columns.groupby,"As the title says this makes Columns.groupby use strict checking when looking up dimensions, ensuring that proper exception messages are raised.
",1,1,[]
2214,66765462,611,19542768,2016-04-17 11:23:48,2016-04-17 12:25:31,closed,Take into account colorbars when computing Layout,"The Layout code currently computes the expected aspects of the plots to allocate space for them in the Layout. There are a number of holes in this code but it at least correctly accounts for adjoined plots. This has not been the case for colorbars, but this PR assigns some additional width to plots which have colorbars enabled.
",0,1,[]
2215,66765418,610,19542768,2016-04-17 11:21:50,2016-06-08 13:41:26,closed,Correctly compute RasterGridPlot widths and heights,"Previously RasterGridPlot only considered one column when computing the row and column heights, which caused issues if the space is sparsely populated. This correctly computes the row heights and column widths by considering all Elements.
",3,1,"['type: bug', 'tag: component: plotting']"
2216,66765380,609,19542768,2016-04-17 11:20:18,2016-04-22 11:16:15,closed,Correctly cast axis labels to unicode on BoxPlot,"Small fix casting axis labels on BoxPlots to unicode correctly.
",3,1,[]
2217,66700293,607,19542768,2016-04-15 20:29:50,2016-04-16 17:49:26,closed,Fixed fontsize option when supplying a single numeric value,"This PR addresses issue #590 by re-enabling numeric values for the fontsize option. It seems to be working again although I do seem to have some trouble changing the tick label fontsizes. I'll have to investigate and make sure it is hooked up properly...
",5,1,[]
2218,66652721,606,19542768,2016-04-15 14:36:19,2016-04-17 12:56:51,closed,Added bbox_extra_artists to improve bounding box calculation,"This PR adds a default entry to the `MPLPlot` handles to register any additional artists, which are not automatically tracked by the matplotlib figure. These are then taken into account when computing a tight bounding box on the renderer. This fixes various cases where colorbars, axis labels and legends were ignored and therefore completely or partially cut-off.
",4,1,[]
2219,66413155,603,19542768,2016-04-14 00:30:52,2016-04-14 12:45:43,closed,BUG: Resolve issue #602 - import get_ipython.,,2,1,[]
2220,65801265,596,19542768,2016-04-08 15:13:00,2016-04-11 15:01:40,closed,Added dynamic throttling of events to live/dynamic widgets,"This PR adds dynamic throttling of events to the widgets. The first time a widget dynamically requests a frame from the Python kernel it will instantiate `this.time`, which will then be used to calculate the time taken to generate that frame. Each subsequent time a new frame is requested the dynamic_update method will first check whether sufficient time has passed since the last frame was requested, if not it will queue the event. Whenever a callback completes it will execute the last queued event if there is any. This approach ensures that events generated faster than they can be processed are thrown away, while still ensuring that the last event that the user generated is processed, which means that the slider and the plot stay in sync.

Here's what I used for testing:

``` python
def a(i):
    time.sleep(1)
    return hv.Image(np.random.rand(10,10))

hv.DynamicMap(a, kdims=[hv.Dimension('x', range=(0, 1.))])
```

This also let me measure the speed of plotting of updates for the first time. For this example, if you disable the sleep, I'm getting ~30 ms per frame in matplotlib and ~35ms per frame using bokeh.
",7,6,[]
2221,64951809,588,19542768,2016-04-01 14:21:40,2016-04-11 15:29:42,closed,Added support for dynamic operations and overlaying,"As the title says, this adds a `dynamic` parameter to the `ElementOperation` class, which let's the user apply lazy analyses to a HoloMap (or GridSpace of HoloMaps), which will only be evaluated when the user requests a specific key. This makes it trivial to apply complex analyses to large datasets without having to apply the analysis everywhere at once and avoids having to manually wrap the analysis in a dynamic callback.
",8,9,['type: feature']
2222,64818123,587,19542768,2016-03-31 16:20:04,2016-04-11 13:26:57,closed,Fixed Store.add_style_opts,"Small fix for `Store.add_style_opts` which was not correctly getting the class name you were adding the style option for because `type(component).__name__ == 'ParameterizedMetaclass'`.
",2,1,[]
2223,64618087,585,19542768,2016-03-30 12:24:00,2016-03-30 13:17:28,closed,Fixed bugs in seaborn and pandas plotting interfaces,"While refactoring the plotting code I made some mistakes in adapting the pandas/seaborn plotting interfaces, this PR fixes some bugs passing the styles around.
",2,1,['type: bug']
2224,64617975,584,19542768,2016-03-30 12:23:04,2016-03-30 13:16:25,closed,Fixed bug for single index on Raster types,"Fixes a minor bug when indexing Raster types with a single slice or index. The PR simply adds an additional empty slice to make it work correctly.
",2,1,['type: bug']
2225,64545953,583,19542768,2016-03-29 22:40:36,2016-03-30 00:25:02,closed,Correctly sort heterogeneous types in DictColumns,"As suggested in #580 this replaces the lexicographical sorting implemented on ArrayColumns and DictColumns with more useful general sorting as is already in place on the DFColumns and NdColumns interfaces. In the case of ArrayColumns we can simply create a record array view into the actual array, which we can apply the sorting to. For DictColumns we need to actually construct a record array but this shouldn't be any more expensive than the existing implementation, which already creates an intermediate array to compute the sort order on.

This should be ready to merge once the tests pass.
",4,1,[]
2226,64452894,579,19542768,2016-03-29 11:49:41,2016-03-29 14:13:09,closed,Disabled sorting optimization in Column interface groupby methods,"The sorting optimization in the Columns interface groupby methods cause issues because NdMapping types are always expected to be sorted. This disables the optimization so the resulting NdMapping types are always sorted appropriately.
",6,2,[]
2227,64445767,578,19542768,2016-03-29 10:44:23,2016-03-30 13:15:28,closed,If plot ranges cannot be determined use mpl autoscale view,"This ensures that the xlim and ylim on a plot correspond to the actual data limits at all times, allowing calculations based on these values to be performed.
",4,2,[]
2228,64317371,577,19542768,2016-03-28 12:34:54,2016-03-28 13:46:27,closed,Fix to nbagg widgets ensuring that tight fig_inches are applied,"While the nbagg backend works fairly well it does not seem to take into account the `tight` bbox_inches property, which means that a lot of whitespace is left over when plotting anything that is non-square. Since we already have a function to determine the tight bounding box we can simply apply that manually to avoid large white margins.

Ready to merge as soon as tests pass.
",1,1,[]
2229,64078575,576,19542768,2016-03-24 18:31:37,2016-03-24 18:45:53,closed,Updated DynamicMap tutorial for python 3,"As @philippjfr guessed, testing the tutorial revealed #572 wasn't perfect – but it also revealed another problem (in my humble opinion).
",3,1,[]
2230,64068791,575,19542768,2016-03-24 17:23:33,2016-03-24 18:03:13,closed,Fixed dimension escaping and bug setting dynamic widget labels,"When implementing improved widget value formatting in #562 I didn't handle the dynamic widget case causing some issues as described in #571 and partially fixed in #572. I've also included another fix for escaping dimension names that was overlooked previously and partially fixed in #574.
",2,2,['type: bug']
2231,64061860,574,19542768,2016-03-24 16:36:46,2016-03-24 17:25:04,closed,Ad hoc fix of the \xi bug,"By escaping backslashes in the Jinja template this fixes #573, but it would be more elegant to have a specific filter for making things JavaScript-safe.
",1,2,[]
2232,64059409,572,19542768,2016-03-24 16:20:59,2016-03-24 18:21:53,closed,Fixed DynamicMap error introduced by e3a0658e,"Closes ioam/holoviews#571
",3,1,[]
2233,63941063,570,19542768,2016-03-23 19:41:38,2016-03-23 21:44:49,closed,Collector catches Task failures and warns,"When executing tasks using `Collector` a single exception will cause the entire run to fail. When executing a bunch of long-running tasks in sequence it's usually preferable to simply warn when an individual task fails. Alternatively we could add a parameter to control whether it is strict or not.
",3,1,[]
2234,63918477,568,19542768,2016-03-23 17:10:44,2016-03-24 10:26:43,closed,Add binder,,1,4,[]
2235,63746311,563,19542768,2016-03-22 16:06:54,2016-06-16 14:24:54,closed,Let GridColumns.reindex expand format as required,"Currently the newly added `GridColumns` interface restricts how the data can be reindexed, ensuring that you're not dropping non-redundant dimensions. This is because gridded data requires unique indices for each position in the grid. This is not an issue when working with the expanded format because individual samples do not have to be unique. For full generality reindex on GridColumns and other grid based interfaces should allow any requested reindexing even if it requires falling back to the expanded format (which is now very cheap because the expansion uses striding tricks).
",7,1,[]
2236,63710392,562,19542768,2016-03-22 12:15:49,2016-03-23 20:08:05,closed,Widget values now use value formatter,"Currently the values displayed in the slider widget text box and dropdown menu are derived from the raw value (with some rounding applied). However as suggested in #548 the widgets should also use the dimensions value formatter if specified. This allows timestamps to be formatted correctly, for example, ensuring that you don't get mismatching labels between the title and the widget. The only issue with this approach is that the formatted version can often be longer and therefore become unreadable. Before merging I'd like to brainstorm a little bit about what we can do for very long labels. Here is an example:

<img width=""1015"" alt=""screen shot 2016-03-22 at 11 45 52 am"" src=""https://cloud.githubusercontent.com/assets/1550771/13951271/aeed4dbc-f027-11e5-8c57-469d19ca6672.png"">

Note I also reindented the jinja template because it was a mess.
",14,12,[]
2237,63468611,560,19542768,2016-03-19 14:04:49,2016-03-19 14:27:49,closed,Removed cyclic options on Curve plots,"Curve plots have various options to apply very specific operations to cyclic Curve data including centering it on the highest value, applying relative labels and formatting radian values as degrees. These options were inherited from old topographica plotting code and made sense in that context, however within the general framework of holoviews they don't make much sense and are better implement as operations on the data and by setting the formatter or ticks directly. The other issue is that these options were broken when applied to Curves in Overlays. This PR removes these options.
",4,1,"['tag: API', 'tag: backend: mpl', 'tag: component: plotting']"
2238,63375688,559,19542768,2016-03-18 13:43:21,2016-03-19 12:11:11,closed,Various small fixes for GridColumns,"Some small bugs snuck in when I was cleaning up GridColumns before it was merged in #542. I've addressed those bugs, improved error handling and added a unit test for groupby operations. I've also made sure that the GridColumns interface handles 0D or scalar data to ensure that groupby operations work even one a 1D GridColumns object.
",2,4,['type: bug']
2239,62832460,557,19542768,2016-03-14 23:14:08,2016-03-15 01:08:06,closed,Simplified cartesian_product utility,"As the title says this greatly simplifies the `cartesian_product` utility now returning arrays for each dimension in the shape defined by the dimension values.
",1,1,[]
2240,62820210,556,19542768,2016-03-14 21:27:06,2016-03-14 22:19:06,closed,Fixed generator check on DataColumns,"The check to expand `zip`, `range` and generator expressions on Columns relied on excluding other types rather than checking explicitly for those types. This explicitly checks for (i)zip, (x)range and generator types across python versions.
",1,1,[]
2241,62804964,555,19542768,2016-03-14 19:37:52,2016-07-01 14:27:53,closed,Fixed setting of aspect on log axes,"Previously setting of aspects on plots with log axes was not working so I just disabled it. However I just found out through an issue brought up by @basnijholt that this is merely because aspects have to be set before the axes have had log scaling applied. This PR simply changes the order in which these settings are applied.
",1,1,['tag: backend: mpl']
2242,62790394,554,19542768,2016-03-14 17:56:41,2016-03-14 18:39:56,closed,Enable both logx and logy,,2,1,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
2243,62784140,552,19542768,2016-03-14 17:16:39,2016-03-14 17:52:09,closed,Fix for RasterGridPlot with normalization disabled,"Small fix for RasterGridPlot when normalization across the grid and HoloMap is disabled.
",2,1,[]
2244,62669765,549,19542768,2016-03-13 12:29:47,2016-03-14 16:43:12,closed,Open Dynamic and Scrubber fixes,"This issue fixes various bugs when in DynamicMap `open` mode, ensuring that events stop when the cell is deleted and ensuring that the correct frame is accessed when individual callbacks fail and when frames are dropped out of the cache. Also allows non-integer `fps` values for widgets for infrequent polling.
",2,5,['type: bug']
2245,62100195,544,19542768,2016-03-08 16:53:05,2016-03-08 17:45:21,closed,Fixing Travis issue with libgfortran,"After a couple unsuccessful attempts to fix this mysterious issue on master, this PR will allow me to try as many different things as necessary till the tests are working again.
",1,1,[]
2246,62096615,543,19542768,2016-03-08 16:30:30,2016-03-11 01:12:36,closed,Small plotting fixes since recent refactor,"This PR collects some plotting bugfixes for problems introduced in recent plotting refactors. It is not yet ready to merge.
",3,1,[]
2247,61988430,542,19542768,2016-03-07 22:01:29,2016-03-14 19:01:39,closed,Adding a general interface for N-dimensional gridded data,"In HoloViews we now have an interface to hold data in a columnar format. This is provides a very powerful interface for some kinds of data, however when exploring dense high-dimensional arrays it is wasteful because it expands the coordinates of the key dimensions. An alternative format used by xarray, iris and in some limited ways pandas, stores the index values or coordinates (as they are sometimes called) separately from the value dimension data, which is stored as an n-dimensional array.

Instead of storing the cartesian product of all key dimension values we store only the outer indices. Often working in a Columnar format is a lot easier because merging or adding new or derived dimensions is considerably easier, however it is not only inefficient in terms of space but is also considerably slower for various operations, particularly for groupby, aggregation and reduce operations.
### The proposal

The HoloViews Columns interface actually provides a very general interface to work with structured data and in theory it does not actually restrict the format of the data. In this notebook I will outline a suggestion to add additional interfaces for the Columns type, which works with N-D gridded from hereon referred to as dense data. I will set out to show that not only is this format more efficient for various operations but the implementation is actually fairly simple and fits into our current system.
##### The datastructure

The current Columns interfaces already have different datastructures, which all fundamentally represent an array of the shape`Row x Column`, where the rows represent the total number of samples and the columns the combined key and value dimensions, this is fundamentally no different to the COO (Coordinate) sparse matrix format (except the r, c indices are actually values). The new format would provide a dense equivalent and would differ from these existing implementations in the following ways:

1) The data would clearly distinguish between key dimensions, which provide the indices/coordinates to index into the value dimensions, and how the actual value dimensions are stored, some example data would look like this:

``` python
hv.Table({'x': range(10), 'y': range(100), 'z': np.random.rand(10, 100)},
         kdims=['x', 'y'], vdims=['z'])
```

Here the x and y arrays provide the indexes along the first and second axis of the z-array. Using the current formats this would have to be specified as:

``` python
xs, ys = np.meshgrid(range(10), range(100))
hv.Table({'x': xs, 'y': ys, 'z': np.random.rand(10, 100)}, kdims=['x', 'y'], vdims=['z'])
```

Instead of storing the cartesian product as computed by meshgrid, the internal representation stores just the outer indices. The interface then expands these indices if required (which would generally be pretty rare).

2) There are two possible ways to represent value dimensions, either we can have one array for all value dimensions which simply stacks the arrays or we can expand the value dimensions out into the separate arrays, i.e. multiple value dimensions could be specified like this:

``` python
hv.Table({'x': range(10), 'y': range(100), 'array': np.random.rand(10, 100, 2)}, kdims=['x', 'y'], vdims=['a', 'b'])
```

or like this:

``` python
hv.Table({'x': range(10), 'y': range(100), 'a': np.random.rand(10, 100), 'b': np.random.rand(10, 100)},
         kdims=['x', 'y'], vdims=['a', 'b'])
```

This comes down to whether the interface should support heterogeneous value dimension types. The current proposal works on the first suggestion but it would be trivial to automatically expand the first format into the second format and store the value dimensions separately internally.
## Pros vs Cons

Pros:
- More memory efficient
- Considerably faster for gridded data
- Columns and Raster types would share the same interface, the only other data structures required would be for Annotations and Paths.
- Avoids having two completely separate implementations for gridded data and columnar data, which is important because even our current Chart types could sometimes benefit from a denser representation.
- Provides a template for further interfaces based on xarray and iris Cubes.

Cons:
- Requires some changes to existing interfaces to access both the expanded and compressed formats easily.
- Columns becomes a misnomer (not a major obstacle since renaming baseclasses is easy).
- Gridded data is more restricted than columnar data, so value dimension indexing and swapping key and value dimensions is not directly supported.
## Obstacles/Problems
- Need to establish clear interfaces to access the dimension values both in the expanded cartesian product format and in the dense format. I would propose that `dimension_values` accepts a `product` argument (or similar) that defaults to `False` returning the full cartesian product by default. Additionally it would also support a `flat` argument defaulting to `True` to retain a consistent backward compatible interface. 
- Consider how to deal with Raster and Image types where the key dimension values are implicit. My current suggestion would be either to generate the coordinates in the constructor or to introduce proxy objects, which lazily compute the indexes, e.g. to describe an Image you could do something like:

``` python
hv.Image({'x': BoundCoords(-0.5, 0.5, 100), 'y': BoundCoords(-0.5, 0.5, 100), 'z': np.random.rand(100, 100)})
```
- Gridded data would be more restricted than Columnar data, e.g. before slicing value dimensions or reindexing the Element it would first have to be converted to the expanded format.
- Since the sparse and dense representation have potentially overlapping signatures I believe it should be a parameter on the Columns object, you should explicitly declare that the data you are passing in is dense and the dense backends will try to parse that data.
- We can have `as_dense` and `as_sparse` methods that convert between dense and sparse representations. The as_sparse representation is obviously very straightforward as it's just the cartesian product of the dense representation. The `as_dense` implementation requires that the data has been aggregated already. After that it's most easily implemented by combining the sparse columns with a cartesian product of the key dimensions inserting NaNs for all values, aggregating, sorting and reshaping.
- Certain methods when applied to a dense Element return a sparse representation (currently only sample would do so).

To-do list:
- [x] Establish API for accessing data in column based and array based formats using `dimension_values` (interface proposed in #541 postponed).
- [x] Complete the interface by deciding whether to support sorting or whether dense sorting should be fixed. (Require sorted key data in constructor for now)
- [x] Adapt HeatMap to support both formats (postponed)
- [x] Decide what to do about Raster and Image key dimensions values (postponed).
- [x] Decide whether to implement Histogram and QuadMesh using the interface (postponed).
- [x] Add unit tests
- [x] Update docstrings

[Notebook with examples and profiling](https://github.com/ioam/holoviews/issues/541)
",9,36,"['type: feature', 'tag: API']"
2248,61843074,539,19542768,2016-03-06 13:45:20,2016-03-11 12:42:17,closed,Avoided deep lookup on get_dimension_index,"Provides a considerable speedup for the get_dimension_index method
on deeply nested objects by avoiding looking up deep dimensions
unless necessary.

On a moderately sized GridSpace of HoloMaps plotting was sped up to 4 seconds from 21 seconds.
",3,1,[]
2249,61842189,538,19542768,2016-03-06 13:05:46,2016-03-11 12:50:15,closed,Renderer instances keep track of last plot,"This PR adds a `last_plot` attribute to `Renderer` instances, which let's the user easily get a handle on the last thing they plotted, which is very helpful for debugging, understanding how plots are structured, and in order to directly customize a plot, e.g. to prototype an `initial_hook` or `final_hook`.
",3,1,[]
2250,61842067,537,19542768,2016-03-06 12:59:04,2016-09-23 12:40:41,closed,Switched Bokeh LineAnnotationPlot to use Span annotation,"Previously we had to use the bokeh BoxAnnotation to render VLine and HLine Elements but since 0.11 bokeh ships with a Span annotation which is more appropriate. This can be merged once https://github.com/bokeh/bokeh/issues/3993 in bokeh is fixed and 0.12 is released.
",1,1,[]
2251,61794920,534,19542768,2016-03-05 01:25:04,2016-07-01 14:25:21,closed,Fixing urls,"Links missed `.html`
",2,1,[]
2252,61720510,533,19542768,2016-03-04 14:42:42,2016-03-14 19:01:40,closed,DictColumns validation and fixes,"Currently the DictColumns interfaces is lacking any validation which means it's easy to construct invalid Columns types, which won't be detected until the object is accessed or plotted. This adds a validation method to the interface and ensures that scalar columns are supported.

Will add unit tests before merging.
",0,2,['type: bug']
2253,61710630,532,19542768,2016-03-04 13:18:36,2016-03-04 14:37:09,closed,Various plotting fixes,"A number of fixes to plotting in particular for the bokeh backend. 

The fixes include:
- Empty datasources cause issues in 0.11.1, now setting the glyph invisible instead
- Datetime axes limits were being inferred incorrectly on OverlayPlots
- Fixed some outdated method signatures and unreferenced variables
- Fixed a bug with selection_specs in Columns.select that caused issues in plotting
- Fixed a bug in widget templating resulting in a unicode string with the `u` prefix being templated (causing JS syntax errors)
",3,9,"['type: bug', 'tag: backend: bokeh', 'tag: component: plotting']"
2254,61392419,529,19542768,2016-03-02 12:23:59,2016-03-23 20:09:42,closed,"Removed dependency on matplotlib, nbformat and pyparsing in ipython","Addresses issues mentioned in #528 partially by removing all hard dependencies on notebook and matplotlib in the ipython module. This ensures holoviews can be imported in IPython even without matplotlib and the notebook.
",7,3,[]
2255,60958661,524,19542768,2016-02-27 17:56:36,2016-02-28 18:16:54,closed,Fixed bug in bokeh hover tool for unsanitized dimensions,"The bokeh hover tool currently breaks if a dimension contains a space or other special character, the PR adds a small method to generate the hover data correctly.
",3,1,"['type: bug', 'tag: backend: bokeh']"
2256,60931707,523,19542768,2016-02-27 02:15:32,2017-01-04 16:46:09,closed,Developer Manual section documenting plotting API,"It is time for us to slow down the changes to the internal plotting API so we can document the plotting system. The purpose of this proposed documentation is to help explain how a plotting class is structured to allow new developers to extend HoloViews themselves.

Although documenting the plotting system is the biggest job and highest priority, we will probably need a section on adding new elements as well in order for this to be useful. I imagine this documentation will serve as a guide to the core API which is already documented in the reference manual.

There is a fair bit of work to do here but I don't think we can postpone it any longer!
",5,1,['tag: docs']
2257,60747161,520,19542768,2016-02-25 21:07:59,2016-02-26 12:19:51,closed,Bug fixes for single column GridPlots and titles,"As title says provides bug fixes to allow single column GridPlots and to fix an unreferenced variable bug when updating GridPlot titles.
",6,1,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
2258,60090125,518,19542768,2016-02-21 14:44:36,2016-02-29 20:00:49,closed,Refactored matplotlib axis setting for easier reusage,"Not ready yet but this PR begins to refactor some of the code in setting up the axes limits, labels, ticks, aspect etc. to make reusing this code easier in custom extensions with different types of axes.
",9,13,"['tag: backend: mpl', 'tag: component: plotting']"
2259,60044797,517,19542768,2016-02-20 10:43:20,2016-02-24 20:29:56,closed,Element Tutorial fixes,"This PR addresses the issues raised in #516 regarding the Element tutorial, namely:
- Confusing bounds for `Image`.
- Incorrect names for `x` and `y` generated with `np.mgrid`

I've made the changes in such a way that I believe that most of the tests will continue to pass though `Image` will probably fail given the change of bounds.
",37,5,[]
2260,59805405,515,19542768,2016-02-18 14:25:13,2016-02-18 18:36:58,closed,Made color handling for all matplotlib plots consistent,"Small fix for ColorbarPlots, moving `symmetric` plot option to the base class where it is used.
",4,2,"['type: bug', 'tag: backend: mpl']"
2261,59798392,514,19542768,2016-02-18 13:30:34,2016-02-18 14:45:51,closed,Correctly handle empty plots in mpl GridPlot,"Fixes issues with empty plots not being handled correctly in the matplotlib backend's GridPlot. This example demonstrates the fixed behavior:

``` python
def data():
    return hv.Curve(np.cumsum(np.random.normal(size=(20,))))

hmap = hv.HoloMap({
        ('dog', 'yes'): data()(style=dict(color='red')),
        ('cat', 'yes'): data()(style=dict(color='blue')),
        ('rabbit', 'yes'): data(),
        ('rabbit', 'no'): data(),
    },
    kdims=['Animal', 'Hungry']
)
hv.GridSpace(hmap)
```

![image](https://cloud.githubusercontent.com/assets/1550771/13144622/9a8da3d8-d643-11e5-8f35-66b68d69e0de.png)

On currrent master the rabbit column is empty since it simply fills plots in scanline order.
",2,1,"['tag: backend: mpl', 'tag: component: plotting']"
2262,59531940,511,19542768,2016-02-16 18:22:21,2016-02-16 19:59:16,closed,Matplotlib version compatibility fix for Scatter3D facecolors,"Matplotlib handling of colors continues to be the bane of my life, it seems that facecolor handling for 3d scatter plots has changed between 1.4.3. and 1.5.0 and that was the source of various transients. Hoping this will finally put that issue to rest and we can remove the handling once we upgrade to 1.5 or whenever we decide to stop supporting earlier versions.
",2,1,[]
2263,59514227,510,19542768,2016-02-16 16:19:13,2016-02-19 02:23:56,closed,Matplotlib now supports custom projections as plot option,"This PR allows custom projections to be specified on an Element. Also includes a number of fixes to ensure that extents are computed correctly in those cases.
",7,16,[]
2264,59309918,509,19542768,2016-02-14 23:34:39,2016-02-15 00:20:12,closed,Fix urls in tutorials,"Pretty much every URL in the Introduction Tutorial was broken due to missing a .html suffix on http://holoviews.org/Tutorials/Introduction.html, which I believe corresponds to missing .ipynb in the notebook.

I also fixed some URLs in Showcase and Exploring_Data, where most URLs were correct.

Other Tutorial pages may still have problems.
",3,2,[]
2265,59200947,506,19542768,2016-02-12 17:03:18,2016-02-12 21:11:45,closed,Layout.clone copies id and cols settings,,4,1,[]
2266,59191735,505,19542768,2016-02-12 15:58:46,2016-02-12 21:17:12,closed,Fixes and improvements for 3d plots,"This PR implements various fixes for 3d plots fixing various bugs when updating them. Rather than clearing the axis on each frame the specific artist is now removed and replaced. Scatter3D plots are now implemented by actually updating the data on an existing plot. Also makes some other fixes.

Bugs fixed by this PR:
- 3d plots zticks can now be set
- Overlays of 3d Elements now animate correctly
- Extents of 3d plots are now correctly computed

Addresses issues #503 and #504.
",2,8,"['tag: backend: mpl', 'tag: component: plotting']"
2267,59114150,502,19542768,2016-02-11 23:55:46,2016-02-12 21:39:20,closed,Bokeh Elements only send data once if completely static,"Often times when exploring some dataset using the widgets some Elements are completely static, while others change when dragging the slider such as in the homepage example where there is a large image that is completely static. Currently that data gets sent multiple times, this PR detects if a frame is completely static and ensures that the data is only sent when first initializing the plot. This speeds up and reduces the memory footprint of the homepage example by a factor of ~40.
",5,1,[]
2268,58992521,501,19542768,2016-02-11 05:13:33,2016-02-12 17:16:26,closed,Change homepage static plot to use bokeh,"This PR changes the static example on the homepage to use bokeh. I think this makes the homepage a lot more compelling overall. I've changed the static example because it's easier to enable bokeh with notebook_extension and then switch with output magic. Secondly the image is rather large and matplotlib handles that better than bokeh for now. But the static example in itself makes a great showcase because it shows automatic linking of the x-axis across plots and this gets the point across how easy it is to switch. It's literally 1 extra line in the notebook.
",9,3,['tag: docs']
2269,58982111,499,19542768,2016-02-11 01:33:00,2016-02-11 02:26:20,closed,Options Tutorial example of customizing composite object via __call__,"As suggested in https://github.com/ioam/holoviews/issues/495, this adds an example of specifying options on a composite object to the Options Tutorial.
",4,1,['tag: docs']
2270,58971879,497,19542768,2016-02-10 23:31:59,2016-02-11 01:10:19,closed,Refactored json loading into JS baseclass,"Avoids code duplication and no longer fetches json multiple times for matplotlib.
",1,5,[]
2271,58963140,496,19542768,2016-02-10 22:18:21,2016-02-10 22:38:40,closed,Fixed hiding of sliders with 1-to-1 relationship,"Seems I broke this again after fixing it in https://github.com/ioam/holoviews/pull/471. Ready to merge after the tests pass.
",1,1,['type: bug']
2272,58899185,492,19542768,2016-02-10 14:42:33,2016-02-10 15:06:40,closed,Fixes for initialization of overlays returned from DynamicMaps,"As the title says, makes sure that initialization of DynamicMaps returning Overlays doesn't get confused.
",2,1,[]
2273,58888278,491,19542768,2016-02-10 13:11:32,2016-02-10 13:58:35,closed,Re-raising exception in display hooks,"Previously the display hook would simply printing the exception traceback which allowed the notebook to continue executing instead of stopping at that cell.
",2,1,[]
2274,58843979,490,19542768,2016-02-10 03:33:25,2016-02-10 18:03:10,closed,Website building saves widget data to json,"This PR updates the website building submodules which include changes to save widget data to json. This means the main JS thread doesn't have to parse all the data at once when loading the website, instead setting up independent async calls to load the data for each widget, which should speed up the download of larger tutorials.
",6,2,[]
2275,58840522,488,19542768,2016-02-10 02:28:22,2016-02-10 03:20:51,closed,Implemented slicing semantics for bounded DynamicMaps,"If you start using slices in bounded mode, you have to use slices throughout.

Slicing sets/unsets the dimension soft_ranges which can be used to restrict the explorable region. I'll be documenting this in the new Dynamic Map tutorial.
",3,2,[]
2276,58839041,487,19542768,2016-02-10 02:02:46,2016-02-10 02:21:47,closed,Avoid encoding matplotlib data multiple times,"Fixes minor bug causing matplotlib plots to be unnecessarily encoded multiple times.
",1,1,[]
2277,58830643,486,19542768,2016-02-10 00:16:23,2016-02-10 00:35:16,closed,MPLWidgets now always display first frame from cache,"As the title says the matplotlib widgets now display the first frame from the cache even in dynamic/live mode. This allows exported examples of DynamicMaps to at least display the initial image.
",2,1,[]
2278,58828049,485,19542768,2016-02-09 23:48:36,2016-02-10 01:21:40,closed,Renamed DynamicMap 'closed' mode to 'bounded',"PR title says it all. 

As far as I know, we are aware of (and can update) all code that may have used `DynamicMap` up until this point...
",4,1,[]
2279,58795677,483,19542768,2016-02-09 19:24:36,2016-02-09 20:25:16,closed,Validating dimension ranges in dynamic sampled mode,"As the title says this makes sure that when plotting a DynamicMap in sampled mode, i.e. next to a HoloMap that provides the sampling, that all the keys are actually within the ranges specified on the DynamicMap dimensions.
",1,2,[]
2280,58785168,481,19542768,2016-02-09 18:01:58,2016-02-09 19:52:43,closed,Introduced the SkipRendering exception,"This PR introduces a new type of Exception called `SkipRendering`.

Currently it is used to skip the rendering of an open `DynamicMap` that is defined by an exhausted generator.
",2,1,[]
2281,58775728,480,19542768,2016-02-09 16:53:55,2016-02-09 17:21:15,closed,Allowed DynamicMaps to work with dimension subsets,"Allows DynamicMaps to be used as long as their dimensions are overlapping. In sampled mode now raises exception if the DynamicMap dimensions aren't a subset of the HoloMap dimensions, which define the sampling.
",4,2,[]
2282,58744075,479,19542768,2016-02-09 13:01:04,2016-02-09 13:24:56,closed,Fixes and cleanup of widget serialization code,"As the title indicates this PR applies a minor cleanup of the widget serialization code fixing bugs hiding widgets when they should be visible.
",2,1,['type: bug']
2283,58700196,478,19542768,2016-02-09 03:08:56,2016-02-09 03:43:53,closed,Ensured initial dynamicmap values are escaped correctly in widgets,"The widgets require slightly different escaping when using DynamicMap, this PR ensures they are escaped correctly to avoid a bug where all sliders would have to be moved from their default position for DynamicMap to work.
",3,1,[]
2284,58647081,477,19542768,2016-02-08 18:21:58,2016-02-08 23:07:13,closed,Small Bokeh tutorial/code improvements,"Minor fixes for the Bokeh tutorials removing additional Element examples, which do not yet work, i.e. sidebar of ErrorBars and overlay of VectorFields. Also added bootstrap based warning messages to warn that Tutorials can take a minute to render because there's so many plots on the page.
",3,9,[]
2285,58637536,476,19542768,2016-02-08 17:05:20,2016-02-08 18:45:02,closed,Improved exception for control codes,"This PR aims to address issue #473 by raising an exception early if any of the '\a','\b','\v','\f' or '\v' control codes are detected. These control codes are almost never used and cause errors in matplotlib/holoviews when users try using something simple like `'$\alpha$'` or `'$\beta$'`.
",3,4,[]
2286,58626134,475,19542768,2016-02-08 15:46:10,2016-02-08 16:38:22,closed,Minor fixes to slider widget CSS,"As title says, pretty uncontroversial changes making sure you can style different components separately.
",1,1,[]
2287,58623386,474,19542768,2016-02-08 15:26:37,2016-02-08 16:46:13,closed,"Minor fixes to Exporting tutorial, including example of PNG output","There were still some confusing and outdated bits.  The number of cells might have changed, which could change the output, but the rendered images should _not_ have changed.

Provides further fixes for issue #468.
",7,1,[]
2288,58611518,472,19542768,2016-02-08 13:52:54,2016-02-08 16:48:58,closed,Fixed matplotlib Point clims and sizes,"Title says it all. Simple fix, turns out plt.scatter accepts clim but really expects the ranges to be set via vmin and vmax.
",1,3,[]
2289,58609108,471,19542768,2016-02-08 13:30:18,2016-02-08 14:18:21,closed,Improvements for slider widget,"Slider widget now hides dependent dimensions which have a 1-to-1 mapping to previous dimension, like in the Exploring Data example where each frame maps onto a single date.
",3,1,[]
2290,58609021,470,19542768,2016-02-08 13:29:29,2016-02-10 23:45:32,closed,Dynamic map tutorial,"In addition to adding an important new tutorial, I would like to use this PR to achieve a number of things:
- Try out a new, incremental approach to building new tutorials.
- Offer a clear example of how we want notebook tutorials to be created in future.
- Exercise the new documentation building infrastructure.

Until now, writing a new tutorial has been a daunting task. What has happened is that a tutorial begins life  on someone's hard drive where it slowly grows until it suddenly appears for everyone to see in a nearly complete form. Often I've found such tutorials languish till they get forgotten or deleted.

I think we should work in a more incremental fashion using pull requests:
- We can get input from users and other devs as the tutorial develops. Typo fixes, clarification, grammatical fixes etc are always welcome.
- Even if it is unfinished, the tutorial is visible to everyone so anyone else can help finish it off.
- We don't need to dedicate a huge amount of time when introducing a new tutorial. As soon as we feel a new tutorial is necessary, we can create the pull request and take it from there.

There is one downside of this approach: I don't want to swamp the main repository with small documentation updates/fixes as the tutorial grows. For this reason, I suggest the following:
- There is no shame in push forcing to squash commits together as long as only one person is working on the tutorial.
- If someone else wants to contribute, they just need to say that they want to make a change, at which point push forcing is not allowed. However, before the tutorial is merged, it should be squashed down to a single commit.

I hope this approach will make it less of a hurdle to add new notebooks and docs. To start this tutorial, I've added a simple dynamic map example based on the sine rings we introduce in the existing tutorials.

**Edit:** After a website build is triggered, this PR can be previewed on [build.holoviews.org](http://build.holoviews.org/) .
",28,19,['tag: docs']
2291,58597285,469,19542768,2016-02-08 11:26:33,2016-02-08 14:05:17,closed,Fixed outdated instructions on disabling pickle export,"Fixed outdated instructions in order to address #468.
",1,1,[]
2292,58533116,464,19542768,2016-02-06 23:10:39,2016-02-06 23:49:16,closed,Fixed all flake warnings,"Title of the PR says it all. 

The tests should be unaffected but it is still worth waiting to make sure...
",2,2,[]
2293,58523814,463,19542768,2016-02-06 16:32:40,2016-02-06 18:19:10,closed,Better exceptions in dimension_values,"This PR aims to address #389. I'm starting off by changing `get_dimension` as that would be a much smaller change than updating all the `dimension_values` methods. Note, this PR is the same as #450 which was automatically closed by GitHub when I tried to do a clean update with master.
",1,2,[]
2294,58523697,462,19542768,2016-02-06 16:27:29,2016-02-07 12:01:45,closed,Tutorial and website fixes,"Minor fixes to the Tutorials before 1.4.2 release:
- Addresses issue #407 by removing Paths slicing examples.
",7,5,[]
2295,58520208,461,19542768,2016-02-06 13:28:24,2016-02-06 22:06:16,closed,Plotting fixes and improvements,"This PR includes a few fixes and improvements to the plotting code including:
- Disabling legends on PathPlot by default (Issue #460)
- ~~PointPlot and Scatter3DPlot now set facecolors rather than 'c' allowing control over edgecolor (Issue https://github.com/ioam/holoviews/issues/459)~~ (Postponed to 1.5)
- Plots now support supplying color_index and size_index as dimension name (Issue #391). 
",2,12,['tag: component: plotting']
2296,58471560,457,19542768,2016-02-05 19:15:47,2016-02-06 17:18:15,closed,Reimplemented Layout aspects handling,"The previous PR improved aspect handling in Layouts but did not really fix it. This new implementation actually does what it's supposed to. I'd appreciate it if you could try some complex layout arrangements and then fiddling with the aspects of the individual components.

Here's some that I've tried:

``` python
%%opts Layout [aspect_weight=1.0 absolute_scaling=True] Image.A [aspect=1.5] Image.C [aspect=0.5]
np.random.seed(42)
(hv.Image(np.random.rand(25, 25), group='A') +
 hv.Image(np.random.rand(25, 25), group='B') +
 hv.Image(np.random.rand(25, 25), group='C'))
```

![image](https://cloud.githubusercontent.com/assets/1550771/12853544/908d75dc-cc2c-11e5-9c42-147f906d9914.png)

Here absolute scaling controls whether the plots are scaled in absolute or relative terms, i.e. in the example relative scaling means that plot A (aspect=1.5) is the width of a usual plot and everything else is scaled down relative to that and absolute scaling means plot A is actually 1.5 times wider than it would usually be.

A more complex example is this:

``` python
%%opts Layout [aspect_weight=1 sublabel_format='']
%%opts Image [aspect=1] Area.A [invert_axes=True aspect=0.4] Area.B [aspect=3]
img_a = hv.Image(np.random.rand(25, 25), group='A')
img_b = hv.Image(np.random.rand(25, 25), group='B')
img_a.hist() + hv.Area(img_b.reduce(x=np.mean), group='A') + img_b + hv.Area(img_a.reduce(x=np.mean), group='A') +\
hv.Area(img_b.reduce(y=np.mean), group='B').hist() + hv.Empty() + hv.Area(img_b.reduce(y=np.mean), group='B') + hv.Empty()
```

![image](https://cloud.githubusercontent.com/assets/1550771/12856406/b8c86dc6-cc3c-11e5-8154-50bd726d704d.png)
",2,4,"['tag: backend: mpl', 'tag: component: plotting']"
2297,58468673,456,19542768,2016-02-05 18:51:41,2016-02-05 19:56:35,closed,Improved the HoloMap collapse method,"Says everything in the title. This small PR will make sure the tests pass correctly after the fix.
",2,1,[]
2298,58430378,455,19542768,2016-02-05 13:48:06,2016-02-05 18:07:30,closed,Unicode issues,"This PR aims to address issue #421 as well as a few other unicode issues.
",2,6,[]
2299,58421412,454,19542768,2016-02-05 12:13:08,2016-07-01 16:01:35,closed,RGB: more flexibility,"RGB: Allow also NdOverlay as input. When ranges are not set, assume normalized data.
",6,624,[]
2300,58383599,451,19542768,2016-02-05 03:15:13,2016-02-05 12:29:46,closed,Fixed matplotlib figure closing bug,"Fixes a small bug I introduced recently causing figures not to be closed correctly. Should cause no failures.
",1,1,['type: bug']
2301,58383099,450,19542768,2016-02-05 03:06:28,2016-02-06 16:25:33,closed,Better exceptions in dimension_values,"This PR aims to address #389. I'm starting off by changing `get_dimension` as that would be a much smaller change than updating all the `dimension_values` methods.
",0,0,[]
2302,58375302,448,19542768,2016-02-05 01:08:26,2016-02-05 02:23:22,closed,Renderer and NotebookArchive fixes,"This PR aims to address #417 but I will also include some related fixes and improvements.
",2,4,[]
2303,58373991,447,19542768,2016-02-05 00:52:19,2016-02-05 03:02:59,closed,Fixed points scaling in matplotlib and bokeh,"This PR supercedes @maxalbert's PR #390, by switching the function to return the area of points and for bokeh to convert those areas into widths. Changes a few tests but should be ready for merge once the data is updated.
",2,8,"['tag: backend: bokeh', 'tag: backend: mpl', 'tag: component: plotting']"
2304,58327740,446,19542768,2016-02-04 18:26:45,2016-02-04 19:53:06,closed,Improved validation of fontsize keys,"This PR addresses an issue raised in #291.

There it was pointed out that there is no warning when an invalid fontsize key is supplied and such a warning could help users discover which keys are valid.
",1,1,[]
2305,58311008,444,19542768,2016-02-04 16:25:40,2016-06-16 15:21:30,closed,Layout templates,"This PR is designed to address the difficulties we have with customizing Layouts, e.g setting non-square aspects, positioning subfigures and insets. What is proposed here was first suggested on Gitter.

The basic idea is that HoloViews makes visualizing things easy. So why not use our existing elements and operators to define a 'layout template'? We already have a `Bounds` element that is pretty ideal for this:

``` python
hv.Bounds((0.05, 0.3, 0.9, 0.95), extents=(0, 0, 2, 1)) *\
hv.Bounds((0.05, 0.05, 0.9, 0.25)) *\
hv.Bounds((1.05, 0.3, 1.9, 0.95)) *\
hv.Bounds((1.05, 0.05, 1.9, .25))
```

![image](https://cloud.githubusercontent.com/assets/890576/12821530/b1db3f34-cb5b-11e5-9191-7ae82290e479.png)

The idea is that the overlay order defines the subfigure ordering. This would let us do insets as well as you could position these anywhere you like. We might want a special layout template element/object that could do something like this but number the subfigures.

There isn't much here yet as we will need to discuss this proposal carefully before much code is written. Discussing this with Philipp, it sounds like this would be feasible to support in the plotting code.
",9,1,[]
2306,58302891,443,19542768,2016-02-04 15:33:24,2016-02-04 22:02:28,closed,Normalizing aspects when computing Layout fig_inches,"This fixes a bug when adjusting aspects in a Layout and setting the aspect_weight to a non-zero value. The previous bug made it incredibly fiddly to get the plot spacing in a gridded layout with non-square aspects right. Now when setting aspect_weight=1 you should always get a plot without excessive whitespace.
",11,2,"['type: bug', 'tag: backend: mpl', 'tag: component: plotting']"
2307,58291211,442,19542768,2016-02-04 14:12:24,2016-02-04 19:03:24,closed,Set default mpl BoxWhisker linewidths,"As straightforward as the title says, will change a few display tests though.
",3,1,"['tag: backend: mpl', 'tag: component: plotting']"
2308,58173684,439,19542768,2016-02-03 17:44:14,2016-02-03 19:58:49,closed,Dimensioned.clone always transfers id to new object,"This PR will make sure styles are transferred when applying various operations to an object including slices. This will probably affect some existing tests but it is better behavior.
",1,2,[]
2309,58074049,438,19542768,2016-02-03 00:34:02,2016-02-16 13:40:53,closed,Refactored matplotlib ElementPlots by adding higher-level API,"This refactor avoids a lot of the duplication that has spread across all existing matplotlib plots. It should also make it simpler for a user to create a new plot. I'll summarize the overall API once I've worked on it a little bit more.
",8,34,"['tag: API', 'tag: backend: mpl', 'tag: component: plotting']"
2310,57997276,437,19542768,2016-02-02 14:54:48,2016-02-02 15:29:59,closed,Changed argument of dump function to file instead of filename,"Fixing #435
",1,1,[]
2311,57993019,436,19542768,2016-02-02 14:24:04,2016-02-03 22:56:58,closed,title_format plot option now includes dimensions,"As the title says this allows more customizing the plot title_format as suggested in #425.
",3,9,['tag: component: plotting']
2312,57981706,434,19542768,2016-02-02 12:45:13,2016-02-03 13:10:55,closed,Cleaned up and improved legend handling for all backends,"As the title suggests this is a refactor of the legend code so that a) it behaves more similarly across backends and b) to clean up the code a little bit.

Concretely this PR addresses the following issues:
- Legends not updating per frame in mpl
- Legend zorder being too low in mpl
- Allow toggling legends consistently at the Element and Overlay level, providing finer control. Previously some Element types could be toggled others could not.
",2,9,['tag: component: plotting']
2313,57969571,433,19542768,2016-02-02 10:49:55,2016-02-04 20:51:12,closed,Add extra hook before_display_hook to alter plotted data before display.,"See #432 

Example to add a second SVG file to the plot:

``` python
%output fig='svg'
import xml.etree.ElementTree as et
from svg_merge import remove_meta, combine

def combiner(self, obj, data, fmt):
    if fmt == 'svg':
        data = combine([et.fromstring(data), remove_meta('/tmp/b.svg')])
    return data

hv.Store.renderers['matplotlib'].before_display_hooks=[combiner]

hv.Curve(zip([0,1,2], [0,1,.5]))
```

![c](https://cloud.githubusercontent.com/assets/3776190/12747209/fb44dbb8-c9a2-11e5-92a0-db94f90ccdf1.png)
",3,1,[]
2314,57700786,430,19542768,2016-01-29 20:49:34,2016-02-04 01:50:51,closed,Various Bokeh backend improvements,"This PR includes various improvements for the bokeh backend:
- Fix for document handling on Bokeh Chart based plotting classes (Bars, BoxWhisker)
- Added HSVPlot
- Updated Bokeh_Element Tutorial

There's a few more tweaks to come, so not quite ready to merge.
",3,12,[]
2315,57674143,429,19542768,2016-01-29 17:04:40,2016-02-02 17:44:31,closed,Improved infrastructure for notebook testing,"I think it is safe to say that none of us are too fond of the `reference_data` submodule. 

In fact, I've found it a real hinderance personally:
- It bloats up any repository fast and can be a pain to simply download.
- We have far too many 'Updated reference submodule reference' commits.
- You have to download the reference data repository to do this update (non-trivial as history keeps changing to keep it squashed!).
- Anyone submitting a PR is subjected to this painful process.

However, there are a few advantages using GitHub:
- Hosting is free, unlike S3 where we would need to pay per GB downloaded.
- Integrates with Travis and PRs because you point to a particular commit SHA.

Here is the overall outline of how it will work if this PR goes to plan:
1. Submit a PR normally. Once it is done, check Travis to find the latest build number (tests will have failed due to the PR changes).
2. Go to [travis.holoviews.org](http://travis.holoviews.org/) and find the build number, check that the display data is all correct. Travis will have pushed the test data to S3 so it is available to buildbot (given a recent build number). 
3. Go to [buildbot.holoviews.org](http://buildbot.holoviews.org/) (in development), log in and supply a small amount of information (e.g the build number) and trigger the build.

This would make things a _lot_ easier but the submodule reference in the current system would remain a major problem. Although we _could_ automatically update the reference on _our_ repository we can't help people submitting PRs to us. We don't have the credentials to push to other people's repositories. Other people would still be left with some of the nastiest steps to carry out themselves.

The proposed system is based on these ideas:
- The `holoviews-data` repository stays. It is no longer used as a submodule though, it is simply cloned into `doc/reference_data` and switched to the correct branch.
- To work with PRs, each PR will have its own branch based on the PR number. There is also a master branch.
- Commits to update reference data use `--amend` to keep the repository small. We can snapshot master at any time by creating a copy on a branch (e.g on release).

How will this work concretely?

1.When running notebook tests, Travis uses the `$TRAVIS_PULL_REQUEST` environment variable to clone the `holoviews-data` repository and checkout the branch called `PR$TRAVIS_PULL_REQUEST`. If this branch doesn't exist, it backs off to the `master branch` to use the test data there.
2.  Once the test is finished, Travis uses the `$TRAVIS_BUILD_NUMBER` environment variables to create a directory in an S3 bucket to push `test_data`. It will also write the `$TRAVIS_PULL_REQUEST`  variable to a file called `SOURCE`. Note, if the build is not for a PR, it dumps `$TRAVIS_BRANCH` into SOURCE instead. Travis is already pushing the display data to a bucket to allow review on `travis.holoviews.org`.
2. Buildbot then needs two bits of information to operate: the PR number and the Travis build number. It can then checkout the PR by number (using a `hub` utility to make this easier). Buildbot can pull the test data from S3 and do a sanity check: make sure the SOURCE file matches the specified PR. Note, I could pull from S3 first, check SOURCE and automatically get the right PR, but I think I feel validation is necessary. You don't want a screw up in the build number to affect a different PRs test data.
3. Buildbot has now downloaded the test data from S3 so it can now commit it back to the `holoviews-data` repository on a branch based on the specified PR number (commit with `--amend`). This means the next time Travis runs a build for the PR it will fetch the correct test data.

Advantages:
1. No more submodule or submodule reference updating commits.
2. Users never need to touch the `holoviews-data` repository themselves.
3. Much easier - everything is automated as much as possible. Note that you cannot skip the review process as you have to explicitly make sure the new test data is good. Then you decide to run a buildbot build (or not) to make that test data as new reference data.
4. Still works with PRs but uses GitHub to hold the reference data.

I bet it sounds complicated but if it works, it will make developing new notebooks much easier.
",17,6,[]
2316,57591261,428,19542768,2016-01-29 00:52:23,2016-02-04 01:17:37,closed,Fixed ticks in 'bare' x/yaxis plot option in matplotlib,"Relatively minor fix to tick labels that changes a few display tests.
",4,2,[]
2317,57589524,427,19542768,2016-01-29 00:31:35,2016-01-29 03:28:20,closed,Area element,"Adds the new Area Element, which allows drawing the area under a curve:

``` python
xs = np.linspace(0, np.pi*4, 40)
hv.Area((xs, np.sin(xs)))
```

![image](https://cloud.githubusercontent.com/assets/1550771/12663368/98e83f86-c61f-11e5-8782-6c6fd23f26a0.png)

and between curves:

``` python
X  = np.linspace(0,3,200)
Y = X**2 + 3
Y2 = np.exp(X) + 2
Y3 = np.cos(X)
hv.Area((X, Y, Y2), vdims=['y', 'y2']) * hv.Area((X, Y, Y3), vdims=['y', 'y3'])
```

![image](https://cloud.githubusercontent.com/assets/1550771/12663377/a53dd994-c61f-11e5-803f-76da4fbc0af5.png)
",2,7,[]
2318,57534034,426,19542768,2016-01-28 17:15:07,2016-02-01 19:07:00,closed,Improved handling of JS and CSS dependencies,"This PR is an attempt at making the handling of JS and CSS dependencies a bit more sane to allow exporting of notebooks and individual widgets more easily and ensure sufficient control over which libraries are included.
",2,11,[]
2319,57190874,419,19542768,2016-01-26 10:10:19,2016-02-04 01:24:02,closed,Added option to avoid flushing the archive after export,"Feature request in #418
",2,2,[]
2320,56884670,415,19542768,2016-01-22 13:00:55,2016-01-24 18:06:25,closed,Heatmap sort,"Various fixes to ensure HeatMaps aren't sorted by default. May affect some tests.
",2,7,[]
2321,56513904,411,19542768,2016-01-19 19:34:16,2016-01-28 19:42:08,closed,Doc cleanup 2,"Ok, there are more doc cleanups ready to merge, after review.  These are more extensive than the previous ones, and affect the test data, because cells have been reorganized, changed, deleted, and moved between tutorials.  So the best way to review these changes is probably just to look at the affected notebooks (mainly Sampling Data and Columnar Data), see if they need changes locally, then roughly compare to the previous versions of those notebooks.  Note that I moved the .table and .dframe section from Sampling Data into Columnar Data, where it seems to fit naturally, so that bit has to be compared between different tutorials.  Or you can just look at the final result, and not worry about the previous version; up to you!
",35,42,[]
2322,56462389,408,19542768,2016-01-19 12:57:53,2016-01-19 13:58:11,closed,Minor typos,,1,1,[]
2323,55557301,404,19542768,2016-01-10 03:57:31,2016-01-12 02:51:48,closed,Columns fixes and improvements,"Various fixes that were overlooked previously. Also sets 'dataframe' interface to be preferred over 'dictionary' if pandas is available.

Also adds an initial draft of the [Columnar Data](http://philippjfr.com/work/work-in-progress/columnar-data/) Tutorial, which will replace the Pandas Conversion Tutorial.
",3,7,[]
2324,55528037,402,19542768,2016-01-09 00:29:19,2016-01-09 14:30:51,closed,Fixes for Image.table and regular sampling,"There's a bug in Image dimension_values, which processes the meshgrid incorrectly and which means that the .table output is broken. Additionally regular sampling on Images now sorts the data correctly. I've also included some fixes/improvements for the Sampling Data Tutorial since this PR changes almost all the output there.
",2,4,['type: bug']
2325,55518227,401,19542768,2016-01-08 22:19:59,2016-01-16 14:22:24,closed,Doc cleanup,"Partial cleanup, ready for comments (and merging if appropriate) but not yet including edits to the main tutorials.  It would be very good if Philipp or Jean-Luc could inspect my changes carefully, looking especially at:
1. I changed the tagline in the main site to match the one on Github.
2. Is the tone and level of detail right on Homepage.ipynb?  I tried to make it more explicit about the difference in philosophy between HoloViews and other libraries, but it's always hard to explain that.
3. I added links to the new Bokeh tutorials from the Tutorials index, and references to Bokeh throughout, but there are probably other places to mention it and guide people towards which backend is appropriate for their purposes.
4. Is the Pandas tutorial out of date?  It talks about converting Pandas dataframes, but I thought we were now supporting using them as-is, not copying or converting. Does this need to be clarified somewhere?
5. Can we simplify the GitHub README.rst?  Right now it has a redundant copy of features.rst, which I vote should just be replaced with a link, but in any case at least needs to be updated from features.rst.
6. There were a few locations, e.g. in the FAQ, where I wanted to document something (e.g. the aliases system), but the only documentation I could find was in a pull request, so I put in a link to the pull request.  We can either leave in such links as a pragmatic measure, or pull the information out of the pull request into something we can maintain over time.
7. I added ""bokeh"" to the conda install command, so that the result would be more like what happens for matplotlib (things just work).  But the right approach is presumably to make the conda package be completely independent of matplotlib (with the default backend falling back to bokeh when mpl is not installed), and then tell people to choose whichever command they wish:
   - conda install holoviews                            # no plotting backend 
   - conda install holoviews matplotlib            # default backend is mpl
   - conda install holoviews bokeh                 # default backend is bokeh
   - conda install holoviews matplotlib bokeh # default backend is mpl
8. I've run the tutorials, but don't know how to build the web site locally (which is a big pain and really discourages updating the web site!), so I can't tell if everything's still formatted properly.
9. It needs links to the SciPy paper in appropriate locations, because that has more philosophical discussion that makes good background reading.
10.  I still need to go through the other tutorials, but won't be able to do that today or tomorrow.
",54,11,[]
2326,55495862,400,19542768,2016-01-08 18:48:51,2016-01-08 20:18:08,closed,Added initial_hook and renamed finalize_hook to final_hook,"This PR implements the suggestion made in #396 to add an `initial_hook` and rename `finalize_hook` to `final_hook`.
",7,4,[]
2327,55459563,398,19542768,2016-01-08 13:07:43,2016-09-23 13:25:53,closed,Plotly,"While nowhere near ready for merge I wanted to open this PR to document the progress on the backend and to discuss at what point we'll consider it ""ready"".

As of right now this PR lays most of the groundwork for this backend, i.e. it already supports displaying Elements, Overlays, Layouts and HoloMaps. It also already supports a wide range of Elements.

Major missing features:
- [x] Support for AdjointLayouts
- [x] Support for GridSpace
- [x] Add style options to Element plots
- [x] Issues in updating 3D plots in a HoloMap
- [x] Add experimental warning
- [x] Add unit tests

Here is my [WIP notebook](http://philippjfr.com/work/work-in-progress/plotly/)

Future work:
- Missing Elements: Spread, Spikes, Path, Polygons, Box, Arrow, RGB, HSV, Bounds, VLine, HLine, Contours, Ellipse, Table
- Add support for `*rotation`, `*ticks`, `show_legend`, `show_grid` plot options
",9,58,"['type: feature', 'tag: component: plotting']"
2328,55124463,393,19542768,2016-01-05 18:21:16,2016-01-07 20:28:30,closed,Bokeh 0.11 Compatibility,"This PR adds various fixes to ensure HoloViews is compatible with the new 0.11 bokeh release.

It is now ready for merge.
",3,14,[]
2329,54930436,392,19542768,2016-01-03 19:18:25,2016-04-29 15:18:55,closed,New GeoMap Element for plotting geographical maps,"This PR is only intended as a basis for discussion and certainly not ready to be merged.

I'm interested in plotting geographical maps using Holoviews. This PR is a quick-and-dirty implementation to get some basic functionality working quickly. It introduces a new element called `GeoMap` which can be used as follows.

``` python
import holoviews as hv
from geopandas import GeoDataFrame
hv.notebook_extension()
```

``` python
!wget https://raw.githubusercontent.com/MinnPost/simple-map-d3/master/example-data/world-population.geo.json
```

``` python
df = GeoDataFrame.from_file('./world-population.geo.json')
```

``` python
%%opts GeoMap [fig_inches=(14, None)] (linewidth=0.5)
hv.GeoMap(df)
```

![map_of_world](https://cloud.githubusercontent.com/assets/2692805/12080285/4f5c3f3e-b256-11e5-9268-0790f7a0f63c.png)

The implementation is rather crude and I'm sure I'm doing a lot of things wrong or inefficiently. Also, there are certainly missing features. One of the key things I'd like to see is the ability to colour the regions according to the values in some column of the given GeoDataFrame (e.g. `POP2005` in this case to show population sizes), which I haven't figured out how to do yet although I'd imagine that if I subclassed the correct Holoviews element then it should just work (perhaps with minor tweaks). In the future I could also imagine support for different projection systems, adding layers from Google Maps/OpenStreetMap, etc.

I gather that @philippjfr has already done some work regarding geographical maps, so I didn't want to take this much further without feedback and opinions whether this is going in the right direction. Any comments, suggestions and criticism would be greatly appreciated. Thanks!
",4,5,[]
2330,54923496,390,19542768,2016-01-03 11:54:34,2016-02-05 02:52:37,closed,Decouple scaling method from scaling factor (as per issue #363).,"This PR implements a fix for #363. It introduces a new option `scaling_method` which determines whether `scaling_factor` should scale the point width or area (no other scaling methods are currently allowed, although they could certainly be added if there are other sensible alternatives).

If this PR is accepted then some of the notebooks will need updating as well (and the new option should be documented somewhere (possibly in the `Elements` notebook?). I haven't done this yet because I don't fully understand the notebook testing process and was worried that I'd break something.

Also, I couldn't find a unit test for the helper function `utils.compute_sizes()`. I'm not sure how fine-grained the unit testing process in holoviews is supposed to be so haven't added one, but let me know if you'd like me to do this.
",9,5,[]
2331,54601118,383,19542768,2015-12-26 11:50:56,2015-12-26 14:32:47,closed,python 3 compatibility fix,"zip returns an iterable under python 3, and so 'Showcase.ipynb' doesn't work
",7,2,[]
2332,54214909,379,19542768,2015-12-21 02:11:36,2015-12-21 10:41:34,closed,Switching to flake8 for passive code checks,"Addresses issue #340.

As making pyflakes happy is a bigger priority for us than full PEP8 compliance, the basic test we want to pass without any warnings is this:

``` python
flake8 --ignore=E,W   .
```

Running this in the main holoviews directory will run the checks. If we want to look at PEP8 errors and warnings, we only need to remove `E` or `W` from the `--ignore` option.

It will be nice to be able to use a standard tool for this. Ideally we would run `flake8` on Travis without making having flakes errors cause test failures.
",6,15,[]
2333,54211334,378,19542768,2015-12-20 23:50:10,2015-12-21 02:18:04,closed,Fix to substitution system in NotebookArchive,"This PR restores the functionality of HTML substitutions when using `NotebookArchive`, addressing issue #333.

In addition, this PR fixes an issue where the same data was added multiple times to the archive due to the new support for multiple types of active display hook.

I've tested that it now works several times and if the Travis tests also pass, I think this can be merged.
",1,3,[]
2334,54204540,376,19542768,2015-12-20 18:08:32,2015-12-20 18:25:31,closed,Unicode fixes for SelectionWidget,"This PR fixes various issues with unicode dimension labels and values in the SelectionWidget as seen in #350. It is a quick fix to deal with unicode specifically for the widgets, but in the long term we should switch to unicode everywhere as I started to do in #352.
",2,1,[]
2335,54201818,375,19542768,2015-12-20 15:42:28,2015-12-20 17:00:18,closed,Disabled caching for live and dynamic modes,"This PR disable the JS cache for 'live' and dynamic modes, making the behavior more predictable.
",2,1,[]
2336,54201800,374,19542768,2015-12-20 15:41:45,2015-12-20 16:56:37,closed,Notebook extension now switches backend automatically,"This PR addresses some of our later discussion in #334. Now when you use `notebook_extension` the backend associated with the last block of Javascript that gets loaded is activated.

The resource order is determined by the `*args` e.g `hv.notebook_extension('bokeh', 'matplotlib')` but if keywords are used, the order of the renderers registered in `Store` (i.e the order in which backends are registered) determines what will be activated.
",1,2,[]
2337,54193416,371,19542768,2015-12-20 05:34:33,2015-12-20 13:18:31,closed,Bokeh Comms,"This PR fixes bokeh comms to retain the order of objects to update fixing issues with colormaps not updating correctly. Additionally the callbacks are also updated and now work with the dev release of bokeh and should be compatible with the upcoming v0.11 release.
",2,4,"['tag: backend: bokeh', 'tag: component: plotting']"
2338,54185200,370,19542768,2015-12-19 19:47:12,2015-12-20 12:10:04,closed,Improvements to the help system,"This PR implements some improvements to the help system, suggested in #331.

Supports filtering of parameters using regular expressions as well as highlight. For instance:

``` python
hv.help(hv.Image, pattern='bounds')
```

![image](https://cloud.githubusercontent.com/assets/890576/11914952/f6ab9692-a688-11e5-8986-deffd7bde3e3.png)

``` python
hv.help(hv.Image, visualization=False, pattern='bounds')
```

![image](https://cloud.githubusercontent.com/assets/890576/11914958/2261c496-a689-11e5-8538-68d00f6ff6d0.png)

It seems to work well even though I needed to employ some clever tricks to filter parameters. Now I'll look into addressing issue #330 in this PR as well..
",8,11,[]
2339,54165182,368,19542768,2015-12-19 00:31:45,2015-12-19 15:25:54,closed,Full support of the style system using DynamicMaps ,"This PR fixes a major issue with `DynamicMaps`, namely that they did not properly support styling. This is because when a `DynamicMap` is created it may contain _no_ elements meaning that  there is nothing to propagate an `id` to when `%%opts` or `__call__` is used. In other words, every time a value is returned by the callback, it was too late as styling had already been applied.

The approach used here seems to work well but there are things I am not entirely happy with:
- Using `__class__.__name__` to check for DynamicMap. I am fairly sure I'll encounter cyclic import issues if I try to import `DynamicMap` into `options.py`.
- It is a little inefficient as I'm converting from an `OptionTree` to dictionary format and back to an `OptionTree` per frame.
- This is going to generate a ludicrous number of custom ids and option trees if you use the DynamicMap much (one per frame!). Many of these will be identical as well (until the style is changed, if ever).

Hopefully, I can address these issue but I think this PR is very important for the 1.4.1 release. Styling `DynamicMap` as easily as `HoloMap` is crucial!
",4,3,[]
2340,54147509,367,19542768,2015-12-18 20:39:47,2015-12-20 14:05:48,closed,Dynamic overlay,"This PR makes it possible to use return Overlays with changing keys in a DynamicMap callback. It's a sensitive change, which will require some more testing.

Note that while it now displays everything certain things do not yet work:
- Legends do not yet change to reflect the new NdOverlay key or Overlay label
- In matplotlib styles will not consistently update.

And certain things cannot work:
- Cyclic styles cannot work with a DynamicMap as the total ordering is required during instantiation. Could consider raising a warning when an Element returned from a DynamicMap is given a cyclic style.
- You cannot return more Elements or different types of Elements than are supplied during instantiation.
",1,6,[]
2341,54057288,366,19542768,2015-12-18 02:08:30,2015-12-19 00:11:39,closed,Improved tracebacks,"This pull request implements much nicer abbreviated traceback behavior. Abbreviated tracebacks only occur when the exception originates in a backend module (e.g matplotlib or bokeh) and not from HoloViews itself (unless a `BackendError` has been explicitly raised).

In addition, there is no need to worry about `ABBREVIATE_TRACEBACKS` anymore as you can just call `ipython.show_traceback()` after an abbreviated traceback has occurred in order to view the error in full (with syntax highlighting!). 

If the tests pass I'm happy to see this merged although maybe I should remove `ABBREVIATE_TRACEBACKS` entirely? Do we care about backward compatibility in this case?

Lastly, any feedback from anyone willing to try out this branch would be much appreciated.
",1,4,[]
2342,53855782,364,19542768,2015-12-16 15:30:01,2015-12-16 19:28:59,closed,Fixing constant dimensions,"This PR fixes various issues with constant dimensions, in particular it ensures the the default call to .dimensions no longer returns the constant dimensions, which caused a wide range of issues.
",4,4,[]
2343,53833876,362,19542768,2015-12-16 12:17:03,2015-12-16 17:45:19,closed,Bokeh improvements,"This PR will include various improvements for the bokeh backend. First of all it now has proper support for blanking out frames with the empty option, which also allows downsampling to be applied without having to process all the data first. I still want to switch the VLine and HLine implementation to use BoxAnnotations to address zorder and other issues, so the PR isn't quite ready yet.

Note that while all the changes related to changing the BokehPlot get_data method to support an empty option might seem like overkill simply to get callbacks working it's also the first step to being able to reuse plots in an Overlay, which will eventually provide a major optimization.
",2,6,[]
2344,53762351,360,19542768,2015-12-15 21:08:49,2015-12-15 21:47:59,closed,Fix to how AttrTree handles name mangled attributes,"This PR is tiny but it constitutes a bug fix in an important part of the code that can potentially affect a lot of things. I want to make sure the tests pass here before touching master.
",1,2,[]
2345,53654464,359,19542768,2015-12-15 03:03:51,2015-12-16 17:45:52,closed,Various Optimizations,"This is a PR for various optimizations on some of the core components of HoloViews.
",5,6,[]
2346,53570814,357,19542768,2015-12-14 14:26:58,2016-09-21 18:20:06,closed,Streams API,"This PR adds an API to link dynamic state such as the Bokeh zoom level to the callbacks on DynamicMap. This allows the user to update plots based on the state of other plot objects, making complex interactive behaviors with bokeh widgets (as well as any other dynamic way to alter plots) very simple.

Edit: This is a prototype to see if I could get this working quickly, not ready review or merge.
",1,4,[]
2347,53509027,356,19542768,2015-12-13 20:41:10,2015-12-14 00:17:45,closed,Allowed specifying resources via *args in notebook_extension,"This is a small PR for something I felt might be useful. As `notebook_extension` is quite new, I found myself trying this syntax:

``` python
hv.notebook_extension('bokeh')
```

When I should have done this:

``` python
hv.notebook_extension(bokeh=True)
```

Given that I made this mistake in `notebook_extension` (I'm the one who implemented the keyword syntax!) this proposed syntax is definitely an obvious one. I saw no reason why both styles can't be supported (the keyword approach allows tab-completion and disabling HoloViewsJS) which is why I've submitted this PR.
",1,1,[]
2348,53490733,355,19542768,2015-12-13 01:57:25,2015-12-13 02:49:02,closed,Support for multiple display output formats in the notebook,"This PR address issue #351 and makes our display system even more flexible.

You can now enable multiple display formats simultaneously (default is HTML only as before). For instance, you can now set:

``` python
hv.notebook_extension(display_formats=['html','png'])
```

This will display everything as normal, but also render and save PNG data (for elements) into the notebook so that it can be used by nbconvert. As extra rendering is done, running the notebook is slower and of course HoloMaps cannot be exported as PNG unless you select a single frame to display.

You can also do:

``` python
hv.notebook_extension(display_formats=['png'])
```

Which will force you to address HoloMaps for nbconvert and will also be faster to render. That said, your output will no longer be nicely centered due to how IPython displays images (out of our control).

The 'html' format is supported by everything but any other format is backend dependent. For instance, if you switch to Bokeh and ask for PNGs, you'll get text reprs instead (Bokeh currently doesn't export to PNG).
",9,3,[]
2349,53479877,354,19542768,2015-12-12 16:38:47,2015-12-13 19:23:46,closed,Added support for setting the legend font size,"This PR adds support for setting the fontsize in legends, addressing issue #353.

It uses the same system as everything else, i.e:

``` python
%%opts NdOverlay [fontsize={'legend':14}]
hv.NdOverlay({i:hv.Curve(np.random.rand(10,2)) for i in range(3)})
```

![image](https://cloud.githubusercontent.com/assets/890576/11762927/c524d1fa-a0ee-11e5-9595-40d3c040bc42.png)
",9,5,[]
2350,53411528,352,19542768,2015-12-11 16:13:54,2015-12-26 12:06:02,closed,"Various unicode fixes for dimensions, Tables and widgets","This PR addresses various unicode issues in Dimensions, Tables and Widgets. Opened to address #350 but fixes more wide-ranging issues.

Not yet ready for merge.
",1,3,[]
2351,53352535,349,19542768,2015-12-11 04:24:38,2015-12-12 15:07:46,closed,Speed up NdMapping.groupby,"This PR refactors the NdMapping.groupby operation into a separate function and provides an alternative implementation based on Pandas, which is significantly faster for large datasets. You can see the linear performance scaling by the old implementation and might just make out the sublinear performance of pandas, which becomes very significant for large datasets >10000 items. This is a temporary workaround until we come up with a general solution data API for NdMapping types that's being discussed in #347.

![image](https://cloud.githubusercontent.com/assets/1550771/11735982/d2604474-9fbf-11e5-833d-4299f5daebd7.png)
",7,8,[]
2352,53294418,346,19542768,2015-12-10 18:03:56,2015-12-11 16:18:12,closed,Added Spikes Element,"This PR adds the new Spikes Element. The Spikes Element is a Columns type and draws vertical or horizontal lines at the specified locations, with fixed or variable height/width. I've also added some examples to the Element tutorial.

I've reproduced these examples [here](http://philippjfr.com/work/work-in-progress/spikes/). Still have to update the Element reference_data and add some docstrings for the plot options but I'll wait on some feedback before doing that.
",28,16,[]
2353,52839937,339,19542768,2015-12-07 12:43:13,2015-12-20 12:38:41,closed,Bokeh charts,"This PR adds plotting classes for two Bokeh chart types, Bars, which already exist in matplotlib and box plots, which has also been added for matplotlib. Currently the Element name is BoxWhisker but I'd appreciate something better that's not BoxPlot (since that kind of breaks our naming convention).  The PR is not quite ready but it already mostly works.

Here are some demos of the new supported plots: [Bokeh Charts Notebook](http://philippjfr.com/work/work-in-progress/bokeh-charts/)
",4,24,"['type: feature', 'tag: API', 'tag: backend: bokeh']"
2354,52834310,337,19542768,2015-12-07 11:38:37,2015-12-07 18:36:50,closed,Minor fixes,,4,2,[]
2355,52672625,329,19542768,2015-12-04 14:05:48,2015-12-04 19:34:29,closed,Implemented DynamicMap sampled mode,"DynamicMaps now have a sampled mode allowing defining them in closed mode without a fixed sampling. The user may sample from them explicitly or they may be displayed in a composite object containing HoloMaps that define a fixed number of samples.
",2,6,[]
2356,52604412,325,19542768,2015-12-03 22:43:55,2015-12-04 00:18:48,closed,Initialization of DynamicMaps,"This PR aims to address issue #321.

It seems to be working but there is a bug whereby the appropriate widget is not being selected automatically, preventing display. 
",1,3,[]
2357,52491972,324,19542768,2015-12-03 04:55:07,2015-12-04 03:06:51,closed,Allow exporting static widgets with the Renderer,"This turned out to be pretty straightforward and addresses the suggestion in #267. The widgets now have an option to export the data to a json file. This allows it to be displayed in the notebook without being embedded in the actual html and will also work when serving the notebook on a website. So you could enable this option, set the json files to be exported to a specific folder, run through the notebook and the convert it and ship the folder of json files along with the notebook. Cross-origin policies will prevent you from viewing the resulting HTML directly in chrome but it's a nice solution for hosting plots.

Here's an example using each of our exportable backends:

``` python
import numpy as np
test = hv.HoloMap({i: hv.Image(np.random.rand(5,5)) for i in range(3)})

from holoviews.plotting.bokeh.widgets import BokehSelectionWidget
from holoviews.plotting.mpl.widgets import MPLSelectionWidget

BokehSelectionWidget.export_json = True
MPLSelectionWidget.export_json = True

%output backend='bokeh'
renderer = hv.Store.renderers['bokeh']
with open('Static_JSON_bokeh.html', 'w') as f:
    f.write(renderer.static_html(test))
```

[Output](http://philippjfr.com/ipynbs/Static_JSON.html)

``` python
%output backend='matplotlib'
renderer = hv.Store.renderers['matplotlib']
with open('Static_JSON_mpl.html', 'w') as f:
    f.write(renderer.static_html(test))
```

[Output](http://philippjfr.com/ipynbs/Static_JSON_mpl.html)

``` python
%output backend='matplotlib:mpld3'
renderer = hv.Store.renderers['matplotlib']
with open('Static_JSON_mpld3.html', 'w') as f:
    f.write(renderer.static_html(test))
```

[Output](http://philippjfr.com/ipynbs/Static_JSON_mpld3.html)

Still need to update the widget test SHAs but otherwise working.
",7,20,[]
2358,52472908,323,19542768,2015-12-02 23:53:45,2015-12-03 00:17:31,closed,Fixes to Columns indexing,"There were two bugs in the `__getitem__` method:

1) Indexing a value dimension by name would return that column as an array.

2) Boolean slicing was not working across backends.

I've fixed these issues and added some unit tests.
",2,3,[]
2359,52434733,319,19542768,2015-12-02 18:27:30,2015-12-03 18:19:55,closed,Bokeh compatibility,"This PR addresses compatibility issues with the latest development version of Bokeh.
",2,7,[]
2360,52428520,318,19542768,2015-12-02 17:37:09,2017-10-22 14:52:12,closed,"Add ArchiveComparison, allowing two archives to be compared.","I'm opening this PR to ask for general feedback (mainly from @jlstevens) on archive comparisons: does the approach make sense?

You will see some CEBALERTs in the PR, just to note minor things I haven't gotten around to sorting out yet. If possible, please ignore those for the general feedback.
## ArchiveReader
- I've abstracted some operations on zip, tar, directory with 'ArchiveReaders'. How do you feel about that? I suppose there could be ArchiveWriters as well, but it depends what you feel about the idea of the Readers.
- ArchiveReaders are not explicitly tested (although they get tested by testarchivecomparison.py)
## ArchiveComparison
- I don't really like the `load_fns`
- I don't really like `ComparisonResult`. If it's staying, probably needs to be a class and have a repr etc. (They are handy for testing notebooks cell by cell.)
- As you know, a generator being returned by comparisons() seemed like a good idea immediately when I started. Not sure how I feel about that now, though.
## Also
- I feel some general unease about what will happen with large archives, what will happen with archives that aren't on the local file system, etc.

Anyway, just so you can see what's coming, and avert a disaster before it's too late (well, it's already too late, because I re-wrote the notebook testing with it ;) )
",7,1,[]
2361,52403225,317,19542768,2015-12-02 14:38:30,2015-12-03 18:15:22,closed,Ellipsis and __getitem__ consistency,"This PR aims to address issue #208 which in turn requires our `Element` class (mostly `Raster` elements need fixing) to support consistent `__getitem__` semantics as `Column`.
",4,23,[]
2362,52342751,315,19542768,2015-12-02 01:40:46,2015-12-02 21:50:10,closed,Added load_notebook_fn to replace %load_ext,"Added a ParameterizedFunction to load the notebook resources and initialize the magics. Unlike %load_ext this version accepts arguments to include bokeh, suppress the logo and change the CSS settings such as the notebook width.
",10,6,[]
2363,52336697,314,19542768,2015-12-02 00:18:48,2015-12-02 02:46:30,closed,NdMapping.__setitem__ now replaces rather than updates,"As the title says this commit makes sure that when assigning to an NdMapping using `__setitem__` it should replace rather than update the existing entry. It may be he case that some machinery relies on the old behavior so this isn't ready for merge until some testing has been done.
",1,3,[]
2364,52287407,312,19542768,2015-12-01 17:18:11,2015-12-02 00:56:39,closed,Easy definition of sanitized substitutions,"This PR aims to address issue #264.
",4,15,[]
2365,52212890,311,19542768,2015-12-01 03:47:36,2015-12-01 15:57:16,closed,Static HTML Exporting,"This implements the suggestion for static HTML export in #282. It accepts an optional template argument with three optional fields js, css and html. It's not quite ready for merge but already works.
",2,7,['type: feature']
2366,52077845,308,19542768,2015-11-30 01:40:40,2015-12-01 02:39:03,closed,Refactor of IPython extension and rendering,"This PR will refactor the OutputMagic and display hooks such that they are backend independent and move some of the display machinery onto the Renderers. This will make the IPython extension cleaner and make it much easier to add new output formats and renders, and allow for static HTML exporting.

The PR is far from ready for merging.
",4,33,[]
2367,52071029,307,19542768,2015-11-29 21:07:33,2015-11-29 23:46:22,closed,Cross backend style fixes,"This PR aims to address the problems with style pickling ahead of the 1.4 release and to allow a single object to retain styling across backends.

_Edit:_ Really pickling is only part of the issue so I've changed to the title to reflect that the fix is for styling across backends in general.
",4,6,[]
2368,51211524,296,19542768,2015-11-19 11:40:12,2015-11-19 16:52:07,closed,fix variable name apearing with dollar signs around it,,2,1,[]
2369,51208476,295,19542768,2015-11-19 11:08:35,2015-11-19 18:52:45,closed,Update doc index: was -> is,,0,1,[]
2370,50541880,292,19542768,2015-11-12 17:33:35,2015-11-12 18:42:31,closed,Minor fixes,,8,2,[]
2371,49732549,286,19542768,2015-11-04 19:20:38,2015-11-11 16:28:41,closed,put the right sticker to this Milestone,,5,1,[]
2372,49485593,285,19542768,2015-11-02 21:07:26,2015-11-02 23:15:31,closed,Minor fixes,,2,2,[]
2373,48009222,284,19542768,2015-10-18 14:13:58,2015-11-09 20:12:30,closed,Data API,"While not yet ready to be merged this PR will implement the proposals laid out in #269. I'll reproduce the main points of discussion here and outline a to-do list.

The core of the proposal is to add a core `Columns` Element class, which subsumes the functionality of the `Chart`, `DFrame` and `NdElement` classes. This will allow a wide range of Element classes to interchangeably use one of three data formats:
- An array based format of NxD numpy array, where N is the number of samples and D the number of dimensions/columns.
- A dataframe based format with N samples and D columns, which should work with pandas, dask and blaze dataframes.
- A pure-Python NdElement based data format storing the data as keys and values of an OrderedDict.

This would mean the Curve, Points, VectorField, Bars, Table, ErrorBars, Spread, Scatter, Scatter3D, Trisurface, Distribution, TimeSeries and Regression Elements would immediately support all three data formats.

The data format specific implementations of the API are implemented on utility classes, this will include:
- dimension_values: Returns an array, list or pandas series of one column
- range: Returns the minimum and maximum values along a dimension excluding NaNs.
- select: Same as `__getitem__` but works for one or multiple dimensions.
- groupby: Groups by the values along one or multiple dimensions returning an NdMapping type indexed by the grouped dimensions with Elements of the same type as values. (not implemented for Charts)
- dframe: Converts data to a dataframe
- collapse_data: Applies a function across a list of Element.data attributes
- reduce: Applies a reduce function across one or multiple axes
- sample: Returns a Table with of the samples specified as lists
- reindex: Reorder specified dimensions dropping unspecified dimensions. (not implemented for Charts)
- drop_dimension: Drops specified dimension(s)/column(s)
- add_dimension: Adds named column at specified position with supplied value(s)
- closest: Returns the closest samples given a list of coordinates.
- shape: NxD shape of data

and conversion methods, which can take an optional flag to return a clone of the Element with converted data:
- array: Returns data as an array.
- dframe: Returns data as a DataFrame.
- mapping: Returns data as NdElement.

Backwards incompatible changes:
- Various operations no longer return `ItemTables`, the variable return type is confusing and makes the implementation very messy. All operations (select, reduce, sample) return one of two types of data either a modified Columns object or a single scalar.

Other features:
- Currently Elements only support slicing of key dimensions, this is a common annoyance mentioned by several people. I propose we extend the slicing behavior of our types to the following with the following proposal. The `__getitem__` method will now check whether the first or n-th index (where n is the number of key dimensions) matches an existing dimension by name, allowing the user to select particular columns. Passing a dimension as a first index will return the values along that dimension, this matches the behavior of DataFrames and will allow us to provide an easy interface for more complex Boolean slicing, e.g.: `columns[np.logical_or(columns['x'] > 5, columns['y'] > 10)]`. Passing a dimension as the n-th index preserves the current behavior when slicing tables, allowing you to select a particular value dimension. If the non-key indexes don't match any existing dimension they are used to slice along the vdims.
- Collapse/reduce work via the same mechanism, they are basically a groupby operation over one or more key dimensions of an Element or list of Elements, then applying an aggregation function.

One of the major sticking points is how the constructor should behave for different data formats, currently this is the implemented behavior showing the mapping between an input type and the storage format that's used (some come with fallbacks if a certain condition isn't met):
- ndarray -> ndarray
- DataFrame -> DataFrame
- NdElement -> NdElement
- dict -> NdElement
- list of scalar values -> ndarray
- list of tuples for each row -> ndarray (if numeric) -> DataFrame (if available) -> NdElement
- tuple of arrays/lists -> ndarray (if numeric) -> DataFrame (if available) -> NdElement 
- list of key value tuples (i.e. tuple of tuples) -> NdElement

The current to-do list is as follows:
- [x] Get nosetests passing
- [x] Test whether all affected Element types can be constructed with all data types.
- [x] Test whether all affected Element types display using both plotting backends.
- [x] Unify TableConversion interface with DFrame conversions
- [x] Implement data-type agnostic comparisons for Columns.
- [x] Refactor utility classes using classmethods rather than using instances (easier for now)
- [x] Write comprehensive set of unit tests providing 100% coverage of Columns module (Okay maybe not 100%, let's settle for 99%)
- [x] Achieve feature-parity between backends:
  - [x] Constructors
  - [x] getitem/select
  - [x] dimension_values
  - [x] range
  - [x] shape
  - [x] sample
  - [x] reindex
  - [x] add_dimension
  - [x] closest
  - [x] dframe
  - [x] collapse
  - [x] reduce
  - [x] array
  - [x] aggregate
  - [x] sort
  - [x] Add index dimension to NdElement storage format to allow duplicate entries (numpy and pandas support this by behavior already).
  - [x] mapping
  - [x] concatenate
- [x] Get notebook tests passing:
  - [x] Composing Data
  - [x] Containers
  - [x] Continuous Coordinates
  - [x] Elements (8 sorting related failures)
  - [x] Exploring Data (2 NdMapping.info output changes)
  - [x] Exporting
  - [x] Introduction
  - [x] Options
  - [x] Pandas Conversion (16 sorting related failures)
  - [x] Sampling Data (18 sorting related failures)
  - [x] Showcase
- [x] Decide on good naming for the new module and classes
- [x] Document main Columns class and utility classes.

Improvements to plotting:
- [x] Support for datetime axes
- [x] Support for linked brushing when same DataFrame/NdElement is used across Layout.

That covers it for now. I won't have any time to work on this in a concentrated way so I'll be slowly ticking off the to-do list as I find time. In the mean-time we can think about the naming.

Documentation and notebooks:
- [Profiling notebook](http://philippjfr.com/work/work-in-progress/columns-profiling/)
",35,230,[]
2374,46522327,278,19542768,2015-10-01 13:22:44,2015-11-19 21:40:58,closed,DynamicMap,"This PR adds the new `DynamicMap` class, which allows generating frames on the fly when working with widgets. The `DynamicMap` has two operating modes or intervals:
- 'open': In open mode the ScrubberWidget allows the user to request a new frame via the play and next frame buttons. When creating the DynamicMap in open mode the user should supply an iterator that returns a new key and Element when `next` is called. This mode allows for streaming data for example from a simulator.
- 'closed': In closed mode the user should define the valid Dimension ranges or values. Using the `SelectionWidget` the user may then select any value in the space defined by the Dimensions, allowing much larger parameter spaces with near continuous sampling to be explored.

Both modes already work but there are a few to-do items left:
1. Currently the cache is infinite which means that all frames are buffered both server-side and client-side, there should be options to limit the buffer size and only buffering every n-th frame.
2. ~~Currently nothing communicates a StopIteration to javascript so the scrubber will continue running and expand the slider even when the DynamicMap has run out of new frames.~~
",6,74,['type: feature']
2375,46173503,276,19542768,2015-09-28 15:49:06,2015-09-28 17:27:59,closed,Fixed Timer reporting for long durations,"The %timer magic output is mixed up for long durations (anything over an hour).  E.g. for a 9-hour computation:

```
In [1]: %timer
Out [1]:
Timer elapsed: 08:533:41
```

Someone should check the logic in my fix, but I think it will now say `08:53:41` (which is how long I _think_ the computation took in this case).
",4,1,[]
2376,46099763,275,19542768,2015-09-27 11:36:34,2015-12-01 02:58:12,closed,Bokeh Callbacks,"This PR adds support for Bokeh callbacks to HoloViews, allowing both pure javascript callbacks and callbacks to the IPython kernel. The design allows defining various attributes on the plot, data source and callback object to listen to, which are sent to Python allowing the user to modify any the plot object or data source. It also automatically chains multiple callbacks defined on one plot object. This means the design should easily extend to support what we call `Streams`, allowing the user to link any callback to a DynamicMap, even across plots.

The two baseclasses that are added are:
- `Callback`: A `ParameterizedFunction` which defines the attributes to subscribe to, any custom js code and `__call__` method, which defines what operation to apply to the data, returning the bokeh plot objects that are to be updated.
- `Callbacks`: A Parameterized object allowing the user to define callbacks for various plot attributes as parameters. It initializes the Callback functions, setting up any javascript code required to listen to the requested bokehjs attributes, sets the callback on the corresponding plot object and chains callbacks if multiple are defined on one plot object.

Currently only callbacks on ranges are implemented and two examples are provided. One downsamples any Image depending on the current zoom level, the other applies downsampling to any Points or Scatter object. I've put together a little video demo of the callback to demonstrate what the downsampling looks like in action, you can view it [here](https://sendvid.com/4l7u6ipi). As you can see the downsampling callbacks allow me to display and interactively explore a 21600x10800 pixel image and 1M scatter points with great responsiveness. It even works for axes shared across plots and multiple objects being downsampled at once.

[![HoloViews Callback Demo](http://i.imgur.com/VmJCeYi.png)](https://sendvid.com/4l7u6ipi)
",2,23,['type: feature']
2377,44283423,261,19542768,2015-09-05 14:02:36,2015-09-16 12:44:50,closed,Fix fontsize for hv.Text,,3,1,[]
2378,43622565,255,19542768,2015-08-28 12:27:37,2015-09-11 11:06:47,closed,"Layout, overlay and grid of a HoloMap now reduces all key dimensions by default.","This makes it possible to easily get an overview of the contents of a holomap, as discussed in #254 
",5,2,[]
2379,43355114,250,19542768,2015-08-26 01:18:09,2015-08-28 15:41:22,closed,Bokeh backend,"This pull request introduces a new plotting backend for HoloViews based on the bokeh library. Bokeh provides support for a lot more interactivity, allows for faster rendering and should help us develop our goals towards dynamic rendering of large amounts of data.

The actual backend implementation shares largely the same API as matplotlib in terms of plot options and some effort has been made to convert between matplotlib and bokeh options. A number of things are not yet implemented (in holoviews) or are unsupported (by bokeh):
- Various Annotation types are either not yet implemented (`Arrow`) or don't behave correctly (`HLine`/`VLine`).
- Unsupported types: `QuadMesh`, all 3D types and `Table`.
- Unimplemented types: Bars, and HeatMap (categorical types)
- Unimplemented containers: AdjointLayout (adjoined plots are ignored)
- Unsupported nesting: Subnesting of Grids in Layouts or Grids in Grids is not supported

However I believe it is ready to be merged and can be improved and extended over time. This will allow users to try it out and report bugs before a next release.
",2,146,[]
2380,43048776,239,19542768,2015-08-21 15:17:06,2015-09-24 16:20:05,closed,Fixing the gradient for cyclic ranges,"The gradient operation wraps the gradient when the input has a cyclic range see #238 
",7,5,[]
2381,43024301,235,19542768,2015-08-21 10:31:58,2015-08-21 11:28:40,closed,Replaced mailinglist with gitter channel in README,"The mailinglist is not in use anymore, while the gitter channel is.
",2,1,[]
2382,42916922,233,19542768,2015-08-20 11:04:59,2015-08-20 22:25:25,closed,Selecting dimensions,"To select a dimension, it is now possible to supply a Dimension instead of a name. Furthermore it is allowed to create empty units (which is the default)

This fixes issue #232 
",5,1,[]
2383,38480560,184,19542768,2015-06-24 19:53:58,2015-06-24 20:38:43,closed,Support for `setup.py develop` via setuptools.,,2,1,[]
2384,36843827,134,19542768,2015-06-03 15:17:37,2015-06-03 15:44:56,closed,Add a Gitter chat badge to README.rst,"### ioam/holoviews now has a Chat Room on Gitter

@jlstevens has just created a chat room. You can visit it here: [https://gitter.im/ioam/holoviews](https://gitter.im/ioam/holoviews?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&content=body_link).

This pull-request adds this badge to your README.rst:

[![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/ioam/holoviews?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=body_badge)

If my aim is a little off, please [let me know](https://github.com/gitterHQ/readme-badger/issues).

Happy chatting.

PS: [Click here](https://gitter.im/settings/badger/opt-out) if you would prefer not to receive automatic pull-requests from Gitter in future.
",1,1,[]
2385,36107933,108,19542768,2015-05-24 20:26:45,2015-05-24 21:21:21,closed,Typo's,"Sorry for the 4 separate pull request, didn't realise that I would do everything in one go.
",1,3,[]
2386,36105918,107,19542768,2015-05-24 17:52:37,2015-05-24 18:45:23,closed,Remaining typo's,"Will fix the inconsequent use of Holoviews vs HoloViews later.
",1,3,[]
2387,36105352,106,19542768,2015-05-24 17:08:19,2015-05-24 17:18:41,closed,Fixing some more typo's in tutorials.,,2,6,[]
2388,36105136,105,19542768,2015-05-24 16:53:04,2015-05-24 16:58:13,closed,Fixing typo's in tutorials.,,1,5,[]
2389,36100772,104,19542768,2015-05-24 10:16:59,2015-05-24 12:55:33,closed,Changed Options Tutorial url into correct one.,,2,1,[]
2390,35201197,64,19542768,2015-05-12 07:54:28,2015-05-13 07:31:46,closed,"Removed np.array(list(...)), not needed.","Could be confusing, the important thing is that a list is used in `Contours`.
",1,2,[]
2391,35090141,60,19542768,2015-05-10 22:43:55,2015-05-11 11:35:15,closed,Update Elements.ipynb typo,,0,1,[]
2392,32626421,27,19542768,2015-04-04 01:12:09,2015-04-04 19:08:16,closed,Unifying live widgets and adding nbagg support,"This pull request introduces three major changes to widgets:
- IPySelectionWidget is deprecated for a number of reasons:
  - It is based on the IPython widget system, which is still subject to change.
  - It made selection of the appropriate widget confusing.
  - It always requires a live notebook.
  - Its layout didn't look any good.
- The SelectionWidget can now render plots dynamically
  - This can be activated via %output widgets='live'
  - It supports live rendering of all current figure backends (i.e. png, svg, mpld3 and nbagg)
  - It supports dynamic caching, the size of the cache can be controlled via the SelectionWidget.cache_size parameter
- Support for nbagg
  - Can be used for static frames and widgets
  - The nbagg matplotlib backend provides widgets for zooming, panning and most interestingly resizing.
  - To use widgets with nbagg, widgets='live' must be selected.
",3,11,[]
2393,31546280,23,19542768,2015-03-19 17:29:15,2015-03-19 19:36:24,closed,Fix link on features page,"I'm not quite sure if this link is pointing to what you want, but this makes it point there correctly.
",1,1,[]
2394,29985892,14,19542768,2015-02-25 13:19:36,2015-02-25 17:06:17,closed, small fix to doc,,3,1,[]
2395,28519009,13,19542768,2015-02-03 01:24:01,2015-02-03 02:22:29,closed,Merge of viewtree with master,"This is a major refactor of holoviews in preparation for release; every aspect of holoviews has been greatly improved.  There are currently 533 commits in this PR which is over half the total committed to the master branch!

Here are a few of the highlights:
- Completely generalized handling of dimensions and dimensioned objects with generalized operations for computing dimension ranges, traversing nested data structures etc.
- Complete re-organization, re-ordering and re-naming of the class hierarchy.
- Far more flexible tree datastructures constructed with the `*` and `+` operators.
- A new `OptionsTree` system that allows inheritance of styles (like CSS) while greatly simplifying the old system.
- Completely redesigned internals and syntax for the `%view`, `%opts` and `%channels` line/cell magics.
- Support for generalized channel definition that can take any overlay as input that may then be transformed to any arbitrary Element type.
- And finally, we have a very general and flexible system for both display and data normalization!
- 3D plots, plotting hooks and much, much more!
",1,539,[]
2396,27559516,12,19542768,2015-01-17 17:39:10,2015-01-18 20:26:42,closed,Refactoring Dimensioned objects for uniform API,"This is a major refactor of HoloViews to provide a common interface for multi-dimensional objects in HoloViews. For that reason it touches almost every aspect of HoloViews. While all the notebooks now work and the unit tests have been updated a number of features have not been fully tested or still need to be updated, this includes:
- Titles
- Legends
- Reduce, sample, collate
- Support for value dimensions in the Pandas interface 
",1,32,[]
2397,23341019,10,19542768,2014-10-25 16:43:38,2014-10-30 02:24:09,closed,holoviews refactor,"This branch represents a major refactoring of DataViews as we prepare to release it under its new name holoviews. This refactoring unifies all current Views under the Layer class, eliminating DataLayer and SheetLayer. It unifies all Overlays into the baseclass Overlay, eliminating duplicate View and plotting classes. Finally it unifies Stacks into HoloMap and LayerMap (this may still be renamed), including all the sample, reduce, normalize, collate and histogram methods, which should now if possible be implemented on all Layer types.

A number of things still remain to be done, here is my non exhaustive list:
- Grid normalization
- Display constant dimensions in title when in GridLayout
- Implement meshgrid or similar method on SheetCoordinateSystem to perform grid_sampling
- Implement normalize, histogram methods for all View types (at minimum NotImplementedErrors)
- Implement .layout method on Grid to turn a Grid into a GridLayout and insert constant dimensions into each element.
- Implement type checking for collation
- Fix docstrings
- ~~Unify legends using format strings and constant dimensions~~
- ~~Add titles to MatrixGridPlot~~
- ~~Update all the tests~~.
- ~~Fix tests~~
- ~~Implement Overlay type checking (e.g. Table only with Tables, 1D and 2D don't mix etc.)~~
- ~~Generalize rescale individually for sheetviews~~.
- ~~Hook up MatrixGridPlot~~
- ~~Fix Grid combined index and slice~~.
- ~~Unify CoordinateGrid and DataGrid into Grid~~.
- ~~Implement Grid nearest item indexing~~.
- ~~Simplify ViewOperation once Stack and Grid Types are unified~~.
- ~~Perform final renaming and decide on structuring the modules~~. 
- ~~Change other packages to reflect changes here~~.
- ~~Renaming~~:
  - ~~SheetView -> SheetMatrix~~
  - ~~LayerMap -> ViewMap~~
- ~~Package restructuring~~:

```
__init__.py
collector.py
ndmapping.py
operation.py
options.py
testing.py
interface/ (Unchanged)
ipython/ (Unchanged)
plotting/
  |_ __init__.py
  |_ dataviewplots.py
  |_ pandasplots.py
  |_ seabornplots.py
  |_ sheetviews.py
  |_ tabularplots.py
  |_ viewplots.py
styles/ (Unchanged)
views/
  |_ __init__.py
  |_ dataviews.py
  |_ holoviews.py
  |_ tabular.py
  |_ sheetmatrix/
        |_ __init__.py
        |_ boundingregion.py
        |_ sheetcoords.py
```

What works:
- All the old Tutorials have been updated and are working fully.
- Sampling, reducing, collating all work (although no grid_sample).
",4,57,[]
2398,22643424,9,19542768,2014-10-13 13:06:10,2014-10-13 19:30:55,closed,Replaced nose.plugins.skip.SkipTest with unittest.SkipTest to avoid dependency on nose.,"As discussed as part of ioam/topographica#597, this replaces the import of SkipTest from nose with the standard library version from unittest. 
",0,1,[]
2399,20827770,8,19542768,2014-09-05 19:03:55,2014-09-08 23:40:48,closed,Improved Point plots and VectorFields,"This PR aims to add improved point plots and vector field plots to DataViews.

Work is ongoing on `VectorField` and `VectorFieldPlot`. Right now, the PR shows only the changes to how `Points` are handled.

The aim is to support points displayed in sheet coordinates with either:
- No data (0D additional data) - only positions are marked.
- Scalar data in a a scalar field (1D additional data, point magnitude visualized via colour map).
- A vector field (2D additional data, visualized as a quiver plot.).

The `Points` class now supports the 0D and 1D cases and `VectorField` will support the 2D case (i.e. quiver plots).
",9,25,[]
2400,20647195,7,19542768,2014-09-02 23:21:49,2014-09-03 17:52:21,closed,Adding a Seaborn interface,"This pull request adds support for wrapping around a number of Seaborn plot types. It is a soft dependency providing convenient access to a number of powerful new View types:
- TimeSeries - Contains a number curves indexed by the same x-dimension. Plots error bars and confidence intervals among many customizable options.
- Bivariate - Plots a two-dimensional kernel density plot stored as an array of 2D coordinates (inherits from Scatter).
- Regression - Computes a regression using sns.regplot, providing numerous options to control the fit and style.
- Distribution - Visualizes the distribution of a 1D array via sns.distplot, with options to plot kernel density estimates, histograms and rug plots.
- SNSFrame - Inherits from DFrame therefore already implementing a number conversion methods, which
  can be extended to the basic (non-Pandas based) Seaborn View types. Additionally it can be visualized in the form of high dimensional plots like correlation and interact plots or as regressions and linear models along some dimensions along the dframe data, which can be specified via optional x, x2, and y parameters.

A non-exhaustive list of all the plot types and styling options can be seen here [DataViews Seaborn Interface](http://philippjfr.com/work/notebooks/dataviews-seaborn-interface/)
",3,5,[]
2401,20545625,6,19542768,2014-08-31 13:54:48,2014-08-31 14:17:40,closed,Fix for travis,,0,0,[]
2402,19714939,5,19542768,2014-08-13 10:07:32,2014-08-16 23:04:22,closed,Splitting plots module into plotting subpackage,"As title indicates, splits the huge plots.py file into the plotting subpackage with the following structure:

plotting/
    `__init__.py` - 79 lines
    `dataplots.py` - 826 lines
    `pandas.py` - 188 lines
    `sheetplots.py` - 284 lines
    `viewplots.py` - 945 lines

Now ready to be merged.
",1,1,[]
2403,19257752,4,19542768,2014-08-03 18:02:42,2014-08-11 16:05:45,closed,Adding a Pandas compatibility interface and speed optimizations,"This pull request is not to be merged immediately, but provides the basis for a compatibility layer between Pandas and DataViews.

This provides the following functionality:

```
    * Conversion of Stacks and Views to Pandas dframes. This 
      was already partially implemented but from now on all View 
      types can provide a dframe conversion method, which a 
      Stack can then add its own dimensions to and concatenate.
      Currently only Tables can be exported, but the system is
      easily extensible.

    * Allows integrating several Pandas plot types with the
      DataViews plotting system (includes plot, boxplot, histogram
      and scatter_matrix). This means they can be composed into
      grids and animated over.

    * Allows conversion of the Pandas DataFrames to different View
      types, including Tables and HeatMaps.

    * Provides several convenient wrapper methods to apply
      DataFrame methods and slice data. This includes:

          1) The apply method, which takes the DataFrame method to
             be applied as the first argument and passes any
             supplied args or kwargs along.

          2) The select and __getitem__ method which allow for
             selecting and slicing the dframe using NdMapping syntax.
```
",1,32,[]
2404,16350848,2,19542768,2014-05-27 00:49:59,2014-05-31 14:03:44,closed,"Dimensional Objects, sampling, splitting and collapsing","This pull request is not to be merged immediately but the core of everything already works, i.e. sampling is implemented within this new modular framework. This framework will eventually make Views easily sampleable, collapseable and convertible in addition to being sliceable and deepindexable.
# The Concept
- The core of this pull request is factoring all convenience methods for dealing with Dimensions on an NdMapping into a mix-in class called Dimensional. This mix-in class is then used not only by NdMapping as before but also by Views eliminating the xlabel, ylabel and cyclic_range parameters and adding string unit support to the dimensions.
- Additionally most Views now allow a dimension to be set as .label, if a string is supplied it turned into a dimension and accessible via ._label_dim, this attribute should be made public and renamed (suggestions welcome).

More importantly this puts us on a path of massively extending the power of DataViews by going beyond the two operations we already know about:
- sliceable: We are already familiar with this feature of NdMappings, it means that any dimension your atomic View elements are indexed by, reducing the amount of data you want to look at in any one chunk.
- deepindexable: This has proven to be useful if you want to focus on a particular part of your data. However, so far it was sort mysterious because it was hard to tell what you were actually slicing into. I've added a .deep_dimensions property which descends to the atomic View and reports all dimensions that are sliceable.

To a number of even more useful properties of DataViews:
- sampleable: My crazy sampling ViewOperation was the first step towards this but it was impenetrable because it was all happening in one place. I have now implemented methods to break this into simpler and more easily understood chunks. The Stack is first .split by the supplied sample dimension, resulting in nested stacks. Once the stack is split, .sample is then called on each of the split out Stacks, and the sample coordinates are passed to the Views, which return ScatterPoints, which are then combined by passing them to the Curve constructor. Overlaying is handled by a separate method called .overlay_dimensions. This also allows any number of dimensions to be sampled, i.e. you can sample at a particular X coordinate on a SheetView to get a Curve of orientation preference varying by x.
- collapseable: Very similar concept to sampling but instead of sampling along a particular dimension/axis you collapse it using a supplied function like np.mean, np.std.
- convertible: Views of equal dimensionality should be convertible, it's perfectly valid to go from ScatterPoints to a Curve or from a curve to a bar chart same goes for SheetViews -> SurfaceView. I suggest and have started implementing accepting different View and Stacks in the constructor, in most cases it is a simple matter of copying .data and .get_param_values(), while np.concatenate will deal with assembling ScatterPoints into a Curve or in fact dense Curves into a sheet (although not necessarily a SheetView) .
# The Implementation

Note: * indicates what is not yet implemented

View/Stack Types of different dimensions [indicates shape or type of data]

---
- Categorical: TableView, MapView [{k: v}]
- 1D: DataLayer/Stack: Curve, ScatterPoints, Histogram [np.zeros(x, 2)_], Bars\_ [edges, values]
- 2D: PhaseStack, SheetLayer/Stack: SheetView, SurfaceView* [np.zeros(x,y)], 
- 2D (Sparse): PhaseSpace* [np.zeros(x, y, 3)]
- 3D: VolumetricLayer/Stack: VolumetricView* [np.zeros(x, y, z)]

Stack Methods

---
- .split_dimensions([dim_list]) - Basic operation underlying almost every operation, splits a Stack of multiple dimensions into a nested NdMapping containing the original Stack types
- .sample(dimsample_map, [, sample_dim]) - Reduces View by sampling the specified dimensions and then combines them if sample_dim is supplied (passing the new dimension and value to the View, looking up the correct type in a dimensional conversion map and passing the split stack to the new View type)
- .collapse(dimfn_map, [, sample_dim])* - Same as .sample but reduces View dimension using a supplied function
- overlay_dimensions(dim_list) - As the name suggests it will split out the supplied dimensions and then iterate over them overlaying them using the * operator.
- .split_overlays() - Splits the overlays in the stack into separate Stacks
- .flatten()* - Flattens an NdMapping containing Stacks into higher-dimensionality Stacks.

Data/Sheet/TableStack Methods

---
- .collapse_stack(dimfn_map, )* - Collapses dimensions in the Stack using the supplied {Dimension: Function} pairs, has to be implemented for a Stack of every dimensionality as only they know how to combine .data on the Views. May be better to implement these as StackOperations.

View Methods (implemented on the dimensionality subclass, i.e. currently on DataLayer and SheetView)

---
- .sample(dimsample_map, [,add_dimension]) - Reduces dimensionality of the View using the supplied sample. By supplying optional new {Dimension: value} pairs reducing View dimensionality can be avoided (useful for Stack sampling)
- .collapse(dimfn_map,  [,add_dimension]) - Reduces dimensionality using the supplied collapse fn, which is applied along the right axis. add_dimension behaves the same as for .sample
- .__getitem__(slices) - Maintains the dimensionality of the data, i.e. SheetViews can be sliced but stay SheetViews, DataLayers may change type but stay the same dimensionality, i.e. a Curve indexed by an xvalue becomes a ScatterPoints object, which internally still has shape (x, 2)
- .__init__(data) - Data can be data of the right dimensionality, a View of the right dimensionality or a list or stack of Views, which can simply be concatenated

Further notes:

---
- .dense property to check whether View can safely be converted to other types of Views
- A ViewOp to resample sparsely sampled points or phase space into a Surface/SheetView and Curve respectively, would use scipy.interpolate.griddata
- >=3D Views may want to implement split methods to split the data into Stacks of lower dimensional data
# The timeline

Basically this pull request will get us to a stage where we can leave it and not worry about having to massively change the API or the datastructures later. The real issue is that right now, we won't be able to work on this any more. However, we don't want to do all of our science based on a system that will completely change in a few months time. Changing over to the Dimensional object means that everything is in place to get all of the above working in time. The system is modular such that we can implement the missing methods as we need them until eventually every single dimension is truly sampleable, collapseable, and convertible.
",0,43,[]
2405,15764741,1,19542768,2014-05-12 12:45:25,2014-05-12 12:47:39,closed,Python 3 support,"DataViews now supports Python 2.6, 2.7, 3.3 and 3.4, given the appropriate version of IPython.

Matplotlib on Python 3 (currently 1.3.1) currently does not support animations (https://github.com/matplotlib/matplotlib/issues/1891).
",0,13,[]
0,671543344,1050,1288547,2021-06-16 14:35:34,,open,MAINT: Update for latest VTK,"Closes #1049

@opoplawski can you see if this fixes your build hang on Fedora 34? It at least ""fixes"" the hang for me on Windows. Plotting still doesn't work there (`mlab.test_plot3d()`) despite pyvistaqt.BackgroundPlotter working okay, so there is more to fix. But this might already be good enough progress in that it will prevent total `pip install` hangs for people using the VTK pre wheels. (They'll have a problem later when they try to actually plot, but that's at least easier to diagnose than an [empty build log that took an hour of CI time](https://dev.azure.com/mne-tools/mne-python/_build/results?buildId=13871&view=logs&j=a017e066-62ca-5289-ad0b-8f57c84a089f&t=13529fc1-567a-5a12-e0e9-1de701345c43)).",5,3,[]
1,646721974,1045,1288547,2021-05-18 12:49:19,2021-05-18 13:16:22,closed,Remove sys.version_info checks,"part of #987 

This PR removes conditional blocks specific to older, no longer supported, versions of python",0,1,[]
2,646213133,1044,1288547,2021-05-17 21:55:49,2021-05-18 11:36:28,closed,Remove all __future__ imports,"part of #987 

This PR simply removes all `__future__` imports which are no longer needed in the code base",1,1,[]
3,646203368,1043,1288547,2021-05-17 21:38:07,2021-05-18 11:36:58,closed,Remove use of six,"part of #987 

This PR simply removes the couple uses of `six` in the codebase.

Note that `importlib.reload` is available for python 3.4+.  Thus this change assumes we are going to go ahead and drop support for python < 3.6 as we have done across the rest of ETS as python 3.5 is EOL.",2,1,[]
4,637983375,1040,1288547,2021-05-10 16:41:45,2021-05-12 12:34:10,closed,Use mock through unittest,"`mock` is now in the standard library since python 3.3.  This PR updates the codebase to use mock via unittest.

Python 2 is end of life and we plan to drop support at some point.

This PR may be jumping the gun a bit in which case we can hold off on merging or close and re open later.",0,3,[]
5,637829260,1039,1288547,2021-05-10 15:16:35,2021-05-10 15:54:24,closed,Update docs for 4.7.3 bugfix release,"This PR simply follows the steps described here:
https://github.com/enthought/mayavi/blob/master/DEVELOPING.rst

Note I did this for the 4.7.3 tag though not from master
ie. `git clean -ffxd`, `git checkout 4.7.3` 
setup environment `pip install -r requirements.txt`, `pip install pyqt5`, `python setup.py develop` and then I ran the commands listed in the file linked above.",0,1,[]
6,637818455,1038,1288547,2021-05-10 15:10:46,2021-05-10 15:54:17,closed,update autogenerated docs for changelog,"This was missed in #1037 

It corresponds to what was the second commit on #960 (note in either case, this was done after the commit to be tagged as the release)",0,1,[]
7,632842495,1037,1288547,2021-05-07 14:20:31,2021-05-10 13:23:01,closed,Bug Fix Release 4.7.3,"This PR follows the lead of #960 

I suspect there is a way to auto-update change log given the formatting?  I was lazy and did not figure out if this was the case and just did it manually for the few PRs going into this release.  I also have not updated the auto generated docs :/ see second commit on linked PR.
It looks like we also don't keep `maint/<release number>` branches in mayavi as we do in other ets projects (ref: latest traitsui bugfix issue: https://github.com/enthought/traitsui/issues/1419)

In any case, this is a very quick/minor bug fix release, and I tried to follow the previous PR made in mayavi.  

I will be sure to not squash merge, and then will tag the first commit of this PR as the release.  Perhaps we need a follow up gh-pages PR? No documentation has been changed, but so that published docs have updated changelog?

",5,2,[]
8,631690915,1035,1288547,2021-05-06 17:49:13,2021-05-07 00:49:15,closed,Pass a value in appropriate range to avoid failure,"closes #1004 
Based off the tracebacks:
```
traits.trait_errors.TraitError: Each element of the 'contours' trait of a Contour instance must be 0.9999999999999999 <= a number <= 11.180339887498949, but a value of 200 <class 'int'> was specified.
```

In the test I swapped out 200 for 10 to be in the range",0,1,[]
9,622151624,1030,1288547,2021-04-23 15:24:05,2021-05-06 08:53:25,closed,import from pyface.image not traitsui.image,"closes #971 

This PR simply changes an import from `traitsui.image.image` to be from `pyface.image.image` as I am about to open a PR to remove the `traitsui.image` submodule in traitsui.",1,1,[]
10,607818626,1022,1288547,2021-04-02 05:19:59,2021-05-10 05:00:47,closed,"Update deprecated import ""collections.Callable""",Use of `collections.Callable` was deprecated in Python 3.3 and is finally removed in the upcoming Python 3.10. It needs to be imported from `collections.abc`.,1,2,[]
11,599620863,1020,1288547,2021-03-24 11:46:25,,open,Fix volume pipeline range check to work with cell_data,"Previously trying to render volume views of UnstructuredGrids with
cell_data as the rendered scalar field caused constant error
messages although there are no real issues with them.

Signed-off-by: Topi Kuutela <topi.kuutela@aalto.fi>",3,1,[]
12,547018872,999,1288547,2020-12-30 17:01:44,2021-01-28 18:39:35,closed,[WIP] Mayavi application workbench to tasks,,9,32,[]
13,541750975,989,1288547,2020-12-17 10:08:11,2020-12-17 11:05:57,closed,[Do-not-merge] Attempt to verify cron job failure on Travis,"Being unable to reproduce #988 locally, this PR intends to verify the failure on Travis. Will be closed after CI has run.",2,1,[]
14,535920219,983,1288547,2020-12-10 13:01:26,2020-12-10 15:34:21,closed,MAINT: Support Python 3.9,`base64.decodestring` does not exist in Python 3.9 so current `master` causes an error on import. `decodestring` has been deprecated since 3.1 so should be safe just to use `decodebytes` directly (and same with `encodebytes`).,3,1,[]
15,529498702,982,1288547,2020-11-30 11:56:40,2020-11-30 12:36:24,closed,Disable macOS builds on Travis CI,macOS minutes are expensive; remove macOS builds from the Travis CI configuration.,0,1,[]
16,514486403,974,1288547,2020-11-03 05:14:47,,open,prepared a more meaningful example of tvtk usage in Mayavi,"Hi all!

I have been struggling with `tvtk` usage in Mayavi, detail on why are provided in [this question](https://stackoverflow.com/questions/64639371/how-to-rotate-actor-on-tvtk-rendered-scene-with-mayavi-in-python/64656357#64656357) (which is answered now).

I figured a more meaningful [example](https://docs.enthought.com/mayavi/mayavi/auto/example_tvtk_in_mayavi.html#example-tvtk-in-mayavi) could be useful. The previous scene was:

![snapshot0](https://user-images.githubusercontent.com/8202674/97951701-0c35ee80-1dd6-11eb-8c75-11b0bbd122a4.png)

And now it is:

![snapshot1](https://user-images.githubusercontent.com/8202674/97951710-1526c000-1dd6-11eb-99dd-9db7157d60f8.png)

I believe it is better because:

1. This example teaches how to place glyphs in different orientation.
2. Teaches how to render a cylinder and adjust its resolution.
3. Cylinder is more visually meaningful than a sphere because of lack of spherical symmetry - orientation matters.
4. It is more visually meaningful if glyphs have different colours, it makes it provides a one more criterion helping to associate them with objects in the code.

If you need some more adjustments let me know and if you are not interested in it just close the PR. Thanks!
",2,2,[]
17,489890378,964,1288547,2020-09-20 11:15:14,,open,"✏️ Add ""Getting Started as a Translator""",Same with https://github.com/sphinx-doc/sphinx/pull/8223 .,1,1,[]
18,489742441,963,1288547,2020-09-19 15:38:15,,open,✏️ fix of grammer,Small fix of grammer,1,1,[]
19,476373429,960,1288547,2020-08-31 15:33:46,2020-08-31 16:12:04,closed,Update version and changes for 4.7.2 release.,"- Updates the change log.
- Update the version to 4.7.2, and also update the version requirements
  for traits and traitsui to use a more recent version.",1,3,[]
20,462181140,954,1288547,2020-08-03 13:34:33,2020-08-03 14:06:04,closed,BUG: incorrect default value for pick_type.,,1,1,[]
21,456568676,948,1288547,2020-07-25 05:28:11,2020-07-27 17:45:05,closed,:wastebasket: Remove unused code,Hi all. I remove the code which is not neeed. Thank you.,1,1,[]
22,448196255,943,1288547,2020-07-13 11:32:20,2021-08-03 22:51:09,closed,GitHub Action to ensure we can pip install mayavi,"A basic test to ensure that we can `pip install mayavi` from [PyPI](https://pypi.org/project/mayavi).

Output: https://github.com/cclauss/mayavi/actions

`pip install numpy 'vtk<9.0.0'`  # Must happen first #939 and Python 3.8 is not supported.",10,9,[]
23,438596937,931,1288547,2020-06-23 14:08:46,2020-07-27 16:42:03,closed,MAINT: Deal with traitsui deprecation,Necessary to avoid a warning about `TraitPrefixMap` being renamed to `PrefixMap`.,9,11,[]
24,433416938,928,1288547,2020-06-12 01:39:08,2020-07-27 17:44:23,closed,Add formats to savefig docstring,"I discovered by accident that more formats are available, so they might as well also be listed in the docstring.",2,1,[]
25,425591084,923,1288547,2020-05-31 10:24:02,2020-07-27 17:44:14,closed,:wrench: basedir in tvtk #768,"When translating the docs to another language, this variable is set
elsewhere, so if it is not set, set it to a suitable default.
This fix is same with #777 in mayavi.",1,1,[]
26,420585339,921,1288547,2020-05-20 08:15:45,2020-07-27 17:29:38,closed,"Fix older deprecations, set -> trait_set.","Also explicitly specify a valid default `'point_picker'` instead of just
`'point'`.",1,2,[]
27,419636159,919,1288547,2020-05-18 17:21:28,2020-05-18 17:28:23,closed,Avoid a few deprecation warnings from traits.,,1,2,[]
28,411751273,913,1288547,2020-04-30 18:05:29,2020-04-30 18:39:27,closed,Add tests to test if hand-crafted views work.,"This should address the lack of tests in #893.  Also cleaned up the base
module a little in the process.",4,2,[]
29,411707820,912,1288547,2020-04-30 16:40:54,2020-04-30 17:08:04,closed,Fix CI and remove 2.7 tests.,,0,2,[]
30,402236700,909,1288547,2020-04-11 19:33:35,2020-04-25 10:09:34,closed,ENH: VTK 9 compat,"This is a bit nightmarish to figure out, but I'm about halfway through adding exceptions for the objects. There is probably an automated way to do it, might be worth figuring that out...

Closes #908.",18,5,[]
31,389605522,901,1288547,2020-03-17 03:41:05,2020-04-25 16:55:16,closed,:new: PyVirtualDisplay,:new: Hi all. I added the contents of PyVirtualDisplay after Xvfb. It is useful when you want to run Xvfb in python. It WFM. Thank you very much for reading.,3,2,[]
32,385646115,900,1288547,2020-03-09 15:12:30,2020-04-25 16:54:27,closed,FIX: Work around NumPy deprecation,"Fixes:
```
../mayavi/tvtk/array_handler.py:324: in array2vtk
    vtk_typecode = get_vtk_array_type(z.dtype)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

numeric_array_type = dtype('float64')

    def get_vtk_array_type(numeric_array_type):
        """"""Returns a VTK typecode given a numpy array.""""""
        # This is a Mapping from numpy array types to VTK array types.
        _arr_vtk = {
>           numpy.dtype(numpy.character): vtkConstants.VTK_UNSIGNED_CHAR,
            numpy.dtype(numpy.uint8): vtkConstants.VTK_UNSIGNED_CHAR,
            numpy.dtype(numpy.uint16): vtkConstants.VTK_UNSIGNED_SHORT,
            numpy.dtype(numpy.int8): vtkConstants.VTK_CHAR,
            numpy.dtype(numpy.int16): vtkConstants.VTK_SHORT,
            numpy.dtype(numpy.int32): vtkConstants.VTK_INT,
            numpy.dtype(numpy.uint32): vtkConstants.VTK_UNSIGNED_INT,
            numpy.dtype(numpy.uint64): vtkConstants.VTK_UNSIGNED_LONG,
            numpy.dtype(numpy.float32): vtkConstants.VTK_FLOAT,
            numpy.dtype(numpy.float64): vtkConstants.VTK_DOUBLE,
            numpy.dtype(numpy.complex64): vtkConstants.VTK_FLOAT,
            numpy.dtype(numpy.complex128): vtkConstants.VTK_DOUBLE,
        }
E       DeprecationWarning: Converting `np.character` to a dtype is deprecated. The current result is `np.dtype(np.str_)` which is not strictly correct. Note that `np.character` is generally deprecated and 'S1' should be used.
```",2,1,[]
33,375528589,896,1288547,2020-02-14 19:03:08,2020-04-25 16:53:52,closed,Replace TraitTuple by Tuple in modules.py,"This PR replaces `TraitTuple` by `Tuple` as suggested by the `DeprecationWarning` sent by `traits 6.0.0`.

Closes https://github.com/enthought/mayavi/issues/895",3,1,[]
34,373131284,894,1288547,2020-02-10 13:22:43,2020-02-13 10:36:31,closed,:wastebasket: Moving to require Python 3 #845,:wastebasket: Moving to require Python 3 #845 . It will also solve a problem of #893 .,1,1,[]
35,372964484,893,1288547,2020-02-10 06:37:34,2020-04-30 18:06:26,closed,:arrow_up: imp to importlib #892,:arrow_up: imp to importlib #892,10,4,[]
36,359273646,883,1288547,2020-01-05 05:41:18,,open,add height into cylinder_actor.,add optional parameter 'height' into cylinder_actor.,1,1,[]
37,358468469,880,1288547,2020-01-01 09:03:44,2020-04-25 16:47:59,closed,🎉 HAPPY NEW YEAR 2020 🎉,:tada: HAPPY NEW YEAR 2020 :tada: I updated the license date to 2020.,3,1,[]
38,358425257,879,1288547,2019-12-31 21:40:59,2019-12-31 21:56:40,closed,WIP: Add CI build for Python 3.7,,1,1,[]
39,358411295,877,1288547,2019-12-31 19:34:18,2020-04-30 17:10:53,closed,Fix support for wxPython 3.0,"Retains compatibility with 2.8 - there wx.InitAllImageHandlers() is a no-op,
wx.HIDE_READONLY is 0, and wx.PySimpleApp() issues a deprecation warning.

Patch originally by Olly Betts <olly@survex.com>",4,1,[]
40,358383100,876,1288547,2019-12-31 16:06:24,2020-04-25 16:41:53,closed,Remove spurious executable permissions from test data files,,2,1,[]
41,351971528,870,1288547,2019-12-11 15:25:28,2019-12-24 19:07:04,closed,DOC: fix syntax error in animation example,"Fix a syntax error in the mlab animation example, `def anim()` to `def anim():`.",2,1,[]
42,350448648,868,1288547,2019-12-08 20:01:16,2019-12-24 19:06:35,closed,Replace uses of traits.api.Long with traits.api.Int,"This PR replaces uses of `Long` with `Int`. `Int`should be an acceptable substitute anywhere that `Long` is used. (On Python 2, the `Int` trait type accepts `long` instances since enthought/traits#104.)",2,1,[]
43,349758784,867,1288547,2019-12-06 04:26:27,2019-12-24 19:16:51,closed,:pencil: License badge,"Subject: :pencil: License badge

### Feature or Bugfix
- Feature

### Purpose
- I couldn't understand what is the license of this project when I saw this repository.

### Detail
None

### Relates
- https://opensource.org/licenses/BSD-3-Clause

",2,1,[]
44,349509003,866,1288547,2019-12-05 15:46:49,2019-12-05 16:54:50,closed,Replace uses of the deprecated trait types 'false' and 'true',"The Trait types `false` and `true` in Traits are due to be deprecated. This PR replaces them with `Bool(False)` and `Bool(True)` respectively.

Fixes #865",1,1,[]
45,348210213,863,1288547,2019-12-03 09:13:50,2020-01-05 05:40:04,closed,add 'height' into cylinder_actor.,add optional parameter 'height' into cylinder_actor.,2,1,[]
46,347500377,860,1288547,2019-12-02 08:34:35,2019-12-24 19:06:14,closed,Use 'Mayavi' consistently; fix reST backticks,"This is a trivial PR that fixes a couple of nitpicks in the README.rst file, mostly to test the current state of the CI.

- Use ""Mayavi"" rather than ""mayavi"" consistently when referring to the package.
- Fix some reST markup: single backticks that should be double backticks.",1,1,[]
47,347306609,859,1288547,2019-12-01 08:55:14,2019-12-02 09:05:14,closed,Replace deprecated rich_compare kwarg when creating traits,"`rich_compare` has been deprecated since version 3.0.3 of traits and it's been replaced with the `comparison_mode` kwarg.

See PR https://github.com/enthought/traits/pull/598/ for more information.",5,1,[]
48,347292733,858,1288547,2019-12-01 05:39:19,2020-04-25 16:41:08,closed,:horse: avoid log file directory not exist,:horse: Hello I added line to avoid error from log file directory not exist. Thank you for reading.,4,1,[]
49,344828816,856,1288547,2019-11-23 17:45:23,2020-07-27 17:56:34,closed,FIX : updating position of Box,Small revision on Box class to apply a change of position instantly. I'm not familiar with tvtk so I referred some codes of Sphere class.,3,1,[]
50,342163491,853,1288547,2019-11-18 13:45:47,2019-11-18 15:51:13,closed,Update edm and install/config scripts,"This PR updates the CI to use the latest version of edm (version 2.0.0) - this will preempt some of the issues we were seeing on other ETS projects related to invalid metadata in eggs.

See similar PRs in other ETS packages here - https://github.com/enthought/traits/pull/560",1,3,[]
51,340288508,851,1288547,2019-11-13 07:44:20,2020-09-02 11:01:39,closed,:recycle: UPDATE code style to PEP8 by black,":recycle: Hello I updated mayavi's code style to [PEP8](https://www.python.org/dev/peps/pep-0008/) by using [black](https://github.com/psf/black). This is a change of refactoring.
I welcome comments on this change.",10,5,[]
52,336836521,849,1288547,2019-11-05 15:28:59,2020-09-02 09:02:50,closed,:construction_worker: FIX for building latex and pdf,":construction_worker: Hello mayavi project. I fixed conf.py, figure, typo for building latex and pdf. Could you review and merge?
 Thank you for reading.",2,2,[]
53,332179919,844,1288547,2019-10-24 18:21:46,,open,Button and Slider Widgets ,"This will allow the user to add a slider, button to the scene and associate callbacks with these widgets.",1,9,[]
54,331713747,843,1288547,2019-10-23 19:45:42,2020-04-25 16:20:34,closed,Avoid using eval,"Hi. This is the change of avoid using eval. I changed eval to safer ast.literal_eval.
https://docs.python.org/3.8/library/ast.html#ast.literal_eval
Thank you for reading.",2,5,[]
55,330026519,842,1288547,2019-10-19 14:45:13,2019-12-24 18:46:28,closed,FIX: typo,FIX: typo,4,39,[]
56,328567806,841,1288547,2019-10-16 04:50:31,2020-04-25 16:36:56,closed,Add: Translating the documentation,"I added section ""Translating the documentation"". Thank you for reading.",3,4,[]
57,328358712,840,1288547,2019-10-15 16:24:07,2019-12-24 18:37:34,closed,BUG: Fix literal comparison,"Fixes on Python3.8:
```
SyntaxError: ""is"" with a literal. Did you mean ""==""
```",2,1,[]
58,327703018,837,1288547,2019-10-14 09:00:43,2019-10-14 09:57:22,closed,FIX: url of sphinx,I fixed url of sphinx page.,3,1,[]
59,327611158,836,1288547,2019-10-14 00:55:58,2019-10-14 09:56:49,closed,FIX: Typo,Hi. I fixed typo of document.,2,2,[]
60,327187439,833,1288547,2019-10-11 12:56:03,2019-10-14 09:56:36,closed,Add PyPI badge,Hi. I added PyPI badge to README.rst. Could you merge it?,1,1,[]
61,313544207,822,1288547,2019-09-03 11:21:26,2019-10-05 04:46:08,closed,fixed issue #325,fixed issue #325,3,1,[]
62,311765755,820,1288547,2019-08-28 10:05:36,2020-04-30 17:09:54,closed,Modified picker ,"Made the following changes:
1) Shifted picker GUI to configure GUI
2) Picker data appears as a text widget on the scene
3) added a mlab.set_picker_props() to set properties of the picker ",1,18,[]
63,307550682,816,1288547,2019-08-15 01:20:29,2019-10-05 04:45:20,closed,FIX: Escape regex,Fix a few improperly escaped characters.,1,1,[]
64,306915608,815,1288547,2019-08-13 13:49:02,2019-10-05 04:44:49,closed,fixed issue #814,I changed the m2_about.jpg path to _static. It WFM. Thank you.,4,4,[]
65,299667014,808,1288547,2019-07-21 21:35:59,2019-07-21 21:52:40,closed,Release 4.7.1,,1,3,[]
66,299642321,807,1288547,2019-07-21 14:54:18,2019-07-21 21:02:44,closed,Fix old pipeline errors in image actor.,,1,1,[]
67,295674180,804,1288547,2019-07-09 09:49:08,2019-07-16 08:00:39,closed,Use the decorator for classmethod,Instead of explicitly calling it in the class definition,0,1,[]
68,294373434,800,1288547,2019-07-04 00:26:39,2019-07-04 04:40:31,closed,Misc bug fixes,"Fixes 3 issues that affect the new release due to changes in traits, pyface etc.
- Fix issue with CTF editor not showing.
- Fix issue with lut editor not launching.
- Fix issue with cut/pasting tree nodes and drag drop onto shell.",1,3,[]
69,293138678,796,1288547,2019-06-30 22:56:18,2019-07-01 07:28:39,closed,Bump version for 4.7.0 release.,Also update CHANGES.txt,1,3,[]
70,292779253,795,1288547,2019-06-28 10:36:08,2019-06-30 17:26:12,closed,Test against ETS packages from source using travis cron jobs.,Install ETS packages from source when the travis event type is a cron job.,2,6,[]
71,290814200,793,1288547,2019-06-22 10:09:15,2019-06-23 19:00:48,closed,Use xenial linux instead of trusty,"and use the travis xvfb service instead of manually starting xvfb on linux,
and remove sudo setting in the travis config, which isn't needed anymore

ref : https://docs.travis-ci.com/user/gui-and-headless-browsers/ for information about using xvfb and https://blog.travis-ci.com/2019-04-15-xenial-default-build-environment for information about the xenial rollout on travis.",4,5,[]
72,289421636,792,1288547,2019-06-18 19:31:41,2019-06-19 03:23:29,closed,add fix for str conversion from bad bytes array,This fixes issue #791.,1,1,[]
73,283197858,786,1288547,2019-05-29 10:37:30,2019-05-30 17:56:39,closed,reading a stl file and reversing it's normal,,1,3,[]
74,282407686,783,1288547,2019-05-27 08:01:36,2019-07-16 08:05:11,closed,Reading stl files and flipping it's normals,,1,11,[]
75,276618144,777,1288547,2019-05-07 14:14:26,2019-07-16 07:59:48,closed,Update for #768,"I made a translation repository for mayavi documentation.For this repository, a few update is need for conf.py in mayavi. Thank you.
https://github.com/getfem-doc/mayavi-doc-translations.git
",2,4,[]
76,274099393,773,1288547,2019-04-27 11:01:54,2019-04-27 11:02:07,closed, Update for #768,,0,2,[]
77,273915968,771,1288547,2019-04-26 14:18:15,2019-04-26 16:49:58,closed,Fix issue #770,"The issue arises in a few of the mlab sources where when we reset to a
polydata with a smaller number of points, we first set the points and
the original polys are still pointing to the old points which no longer
exist.  We now first set the polys to None before changing anything.",1,5,[]
78,253972809,759,1288547,2019-02-18 16:14:11,2019-02-20 19:01:29,closed,Use edm 1.10.1 in travis CI,the primary purpose of this PR is to trigger CI so that mayavi is tested against the latest released versions of it's dependencies.,1,1,[]
79,247039567,754,1288547,2019-01-23 16:46:17,2019-04-26 16:52:37,closed,FIX: Fix nose leftovers,"This allows `pytest mayavi` to work with fewer warnings, and no need for `nose` to be installed.

Also fixes a NumPy deprecation for `random_integers`, and a few for `get` vs `trait_get`.",3,1,[]
80,240228723,747,1288547,2018-12-20 16:27:20,2019-04-26 16:52:02,closed,FIX: Escape chars,"Fixes errors like:
```
SyntaxError: invalid escape sequence \i
```
by using `r` strings.",1,1,[]
81,233731020,740,1288547,2018-11-26 23:31:07,2018-11-27 02:18:46,closed,Also catch exceptions in generating documentation,,2,1,[]
82,233655980,739,1288547,2018-11-26 18:34:03,2018-11-26 20:07:15,closed,New Jupyter notebook ipy backend,"This backend is called 'ipy' and is now the default.  It requires
that VTK's offscreen support work correctly.  This backend requires
ipywidgets and ipyevents.  It allows complete interactivity and behaves
almost exactly like a normal UI backend but inside a notebook.  Note
that this will still require an xserver or windowing toolkit unless VTK
is compiled to be able to work without those.

Many thanks to Enthought for supporting this.",1,5,[]
83,231078965,736,1288547,2018-11-15 06:08:18,2018-11-15 06:16:25,closed,Some UI fixes for ivtk.,This fixes #734.,1,1,[]
84,230606838,735,1288547,2018-11-13 20:02:06,2018-11-16 19:55:10,closed,FIX: Fix set_range,"In my scripts I kept seeing things like:
```
ERROR: In /work/standalone-x64-build/VTK-source/Common/Core/vtkLookupTable.cxx, line 143                                                                                            
vtkLookupTable (0x5a21890): Bad table range: [6.42653e-11, 2.01495e-11]
```
Turns out it's because internally the code somewhere does essentially:
```
self.vmin = vmin
self.vmax = vmax
```
The problem is that the first set causes a trait notification, and can lead to the condition in `_vmin_changed` that `self.vmin is not None` but `self.vmax is None`; and if the max of the data is less than `self.vmin` you end up in `lut_manager` trying to set things incorrectly.

This puts some sort of fix in both places just to be safe.",2,2,[]
85,226123258,731,1288547,2018-10-26 14:42:41,2018-10-26 20:56:26,closed,FIX: Fix type check,"I just started hitting this error:
```
    def __call__(self, *args, **kwargs):
        """""" Calls the logics of the factory, but only after disabling
                rendering, if needed.
            """"""
        # First retrieve the scene, if any.
        if 'figure' in kwargs:
            figure = kwargs['figure']
>           assert isinstance(figure, (Scene, None))
E           TypeError: isinstance() arg 2 must be a type or tuple of types
```
And then after fixing the assertion I would get:
```
    def __call__(self, *args, **kwargs):
        """""" Calls the logics of the factory, but only after disabling
                rendering, if needed.
            """"""
        # First retrieve the scene, if any.
        if 'figure' in kwargs:
            figure = kwargs['figure']
            assert isinstance(figure, Scene) or figure is None
>           scene = figure.scene
E           AttributeError: 'NoneType' object has no attribute 'scene'
```
So this should fix both.",2,1,[]
86,225880272,729,1288547,2018-10-25 19:42:44,2018-11-15 03:53:28,closed,FIX: Fix for VTKNoneArray,"This fixes a bug I've hit because the check for `VTKNoneArray` is in the wrong spot, so you can get an error on line 83:
```
has_nan = np.isnan(x).any()
```
That looks like:
```
>>> np.isnan(None)
TypeError: ufunc 'isnan' not supported for the input types, and the inputs could not be safely coerced to any supported types according to the casting rule ''safe''
```",7,1,[]
87,221998359,724,1288547,2018-10-11 03:49:59,2018-10-11 04:00:31,closed,Try and fix #477.,"If OSMesa is available and user requests an offscreen window, use an
OSOpenGLRenderWindow, this will not require X and can be safely used on
a remote server.",1,1,[]
88,221538780,723,1288547,2018-10-09 18:24:08,2018-10-09 19:36:26,closed,Improve offscreen window creation.,"Creating a renderwindow in some configurations can actually make UI
calls.  So if EGL is available we try that.  Also, when we are using
offscreen rendering we only need a GenericRenderWindowInteractor. 
Also add a convenient set method so one can set a different interactor if needed.",1,1,[]
89,221477794,722,1288547,2018-10-09 15:08:38,2018-11-16 21:46:58,closed,Fix bug related to SurfaceSource.scalars,"This bug manifests when the SurfaceSource object in question does not have a scalars attribute and many of them do not have this.

This bug is related to #696  and the fix is similar to #699 ",2,2,[]
90,217527169,716,1288547,2018-09-23 19:43:30,2018-09-23 19:51:02,closed,Fix #713.,,1,1,[]
91,217489447,715,1288547,2018-09-23 02:47:04,2018-09-23 02:56:36,closed,Fix detection of color transfer function.,"The original code was written for very old VTK versions but ever since
5.x we have a get_node_value method that actually provides the values of
the nodes given an index.  We now use this instead of the earlier hack.
Also remove an unused old class.",1,1,[]
92,214075131,712,1288547,2018-09-08 03:33:06,2018-09-08 03:47:29,closed,ENH: Feature to disable automatic updates.,"This can be very handy at times when the automatic updates can trigger
several changes that are not desirable.  For example on certain VTK
calls, internal ModifiedEvents may be fired which will automatically
call the update_traits method which can be wired to other events
triggering problems.  In these cases one can use the
`global_disable_update` function to temporarily disable updates.

Also fix some PEP8 errors and a few places where the state of the object
could be incorrectly set due to exceptions being raised.",1,1,[]
93,212627519,709,1288547,2018-09-03 02:26:50,2018-09-03 02:57:13,closed,Updating for a 4.6.2 release.,Pushing a 4.6.2 with several fixes most important of which is that it now truly will be pip installable without a compiler on windows.,1,3,[]
94,212522922,708,1288547,2018-09-01 02:04:46,2018-09-03 13:14:34,closed,DOC: Reword docs for animator function,"The first line was too long and broken into a second line, which causes a bad rendering in sphinx:
```
:: A convenient decorator to animate a generator that performs an

    animation.
```
The rewording saves a few characters so that is all fits on one line and shows in sphinx correctly.

[skip ci]",1,1,[]
95,210112394,706,1288547,2018-08-22 12:09:53,2018-08-29 05:34:20,closed,Fixed typo in doc,,2,1,[]
96,209915263,705,1288547,2018-08-21 18:26:17,2018-08-21 19:04:41,closed,Handy utility function to suppress warnings.,"Use with care though as you don't want to ignore some valid messages.
This is handy when dynamically doing things with VTK.",1,1,[]
97,209524438,704,1288547,2018-08-20 13:39:36,2018-08-20 13:58:00,closed,Cache used volume mappers.,"Also add some PEP8 fixes.  Caching the mappers is convenient when the
user changes the mappers to experiment.  Earlier, any settings made on
the mapper would be lost as a new one was created each time.",1,1,[]
98,207712905,703,1288547,2018-08-10 20:20:05,2018-08-10 20:36:38,closed,BUG: Allow adding VTK objects to Mayavi.,,1,1,[]
99,207491377,701,1288547,2018-08-10 02:28:25,2018-08-10 02:37:26,closed,Support multi-block volume rendering.,,1,1,[]
100,206488666,700,1288547,2018-08-06 19:04:27,2018-08-06 19:43:26,closed,Allow adding any tvtk.Object to pipeline.,"This is convenient as a user can also create a full visualization and
then simply add the actor to the pipeline via
`mlab.pipeline.add_dataset(actor)`.  If the user simply appends this
actor to the resulting source's actor list it will also be rendered on
the scene.  This is handy when something is doable with VTK but not with
mayavi.",1,1,[]
101,206477964,699,1288547,2018-08-06 18:19:08,2018-08-06 18:32:47,closed,Fixes bug mentioned in #696.,"This bug manifests when the mlab source in question does not have a
vectors attribute and many of them do not have this.  Added a test to
make sure we don't mess up in the future.",0,1,[]
102,206263922,697,1288547,2018-08-05 23:32:32,2018-08-05 23:40:48,closed,Support composite datasets,"This important PR does the basic work needed to support composite datasets transparently (more-or-less).  This paves the way for multi-block and AMR support (and potentially parallel support).  The changes require that we use VTK >= 6.3 (which is about 3 years old now). There is one simple example for a multi-block dataset and also some tests.
",1,15,[]
103,205899488,695,1288547,2018-08-03 01:00:08,2018-08-03 01:12:36,closed,Wrap user defined algorithm,"- Ensure VTKPythonAlgorithmBase is wrapped
- `tvtk.to_tvtk` now wraps VTK subclasses by using a nearest base class. This allows us to add VTK objects easily to the mayavi pipeline.",1,2,[]
104,205578541,694,1288547,2018-08-01 23:12:29,2018-08-02 01:45:59,closed,Allow adding a vtkAlgorithm to the Mayavi pipeline,"- Allow `mlab.pipeline.add_dataset` to also accept raw VTK objects.
- Generalize the TVTK pipeline browser so it can be plugged into other HasTraits objects easily.
- Add tests for the pipeline browser.
- Add a `VTKObjectSource` to Mayavi:
   - allows us to add any VTK algorithm to the mayavi pipeline and then process that with the rest of Mayavi.
   - It provides a convenient UI to configure the raw TVTK objects.
   - these can be added to the pipeline with `mlab.pipeline.add_dataset`.
   - does not yet support user-defined algorithms via subclasses of
  VTKPythonAlgorithmBase.",1,8,[]
105,205279752,693,1288547,2018-08-01 00:43:23,2018-08-01 01:01:27,closed,Fix wrapping VTK's Get* methods,"- Fix array handler tests for newer numpy versions. These versions have a float16/float128 dtype which are not directly supported in VTK.
- BUG: wrap the `Get` methods correctly.  Many of the new pipeline methods were not wrapped correctly.  For example the `vtkAlgorithm.GetInputAlgorithm` has multiple signatures. TVTK was wrapping any getter which had one of its signatures with no args as a pure property and not exposing the method itself.  This means that users cannot call `obj.get_input_algorithm(0, 0)` which is broken. We now wrap the no arg call as a property but also wrap the generic method as a callable method.
- Fix the pipeline browser for the new pipeline. 
- Add a few reasonable tests for the browser",1,5,[]
106,204810146,691,1288547,2018-07-30 13:47:53,2018-07-30 14:23:46,closed,Fix issue #689.,The error was because the example uses the old pipeline.,1,2,[]
107,203723026,687,1288547,2018-07-25 05:12:35,2018-07-25 05:21:50,closed,Add smart volume mapper,"- This is a much nicer volume mapper.
- Also fix an issue with the tvtk_doc and the recent change to use desc instead of help for the trait metadata.",1,2,[]
108,203708665,686,1288547,2018-07-25 03:04:27,2018-07-25 03:15:45,closed,Update readme,,0,2,[]
109,203596865,685,1288547,2018-07-24 17:13:53,2018-07-24 17:29:11,closed,Update appveyor badge to use the raster image,,1,1,[]
110,203405976,684,1288547,2018-07-24 04:20:43,2018-07-24 04:37:00,closed,Use `desc` instead of `help` for traits.,"This is much more useful than `help` as it shows up nicely as a tooltip
for each trait on the UI.  There is an annoying ""Specifies"" added at the
top but that is not configrable currently.  However, this is way better
than having no help information at all.",1,2,[]
111,203396300,683,1288547,2018-07-24 02:56:51,2018-07-24 03:11:33,closed,Fix compiler check on windows.,"The check does not work when msvc is not installed and this should fix
it.",1,1,[]
112,200900950,680,1288547,2018-07-12 06:36:56,2018-07-24 03:11:11,closed,fix upper case extension,"pyface will throw a KeyError if a filename with an upper case extension like ""my_image.PNG"" it entered in the textbox as the extension is not in the `meth_map`.

",3,1,[]
113,200222461,678,1288547,2018-07-09 21:17:10,,open,Add a module to make streamlines from an array of seeds,"A long time ago, I needed to make streamlines from a specific set of points. This is my first attempt to graft it into mayavi. 

It would be nice if it could be integrated into the main `Streamline` class rather than having to make a new one, but I don't know how to make the `Streamline.seed` attribute be either a `SourceWidget` or `PolyData`. I guess it would be possible to make a variant on `SourceWidget` which is just a wrapper around `PolyData` but that seems a little overkill.",1,1,[]
114,199683723,677,1288547,2018-07-06 08:51:05,2018-07-24 03:10:51,closed,MAINT: replace numpy.* by np.*,"Closes #673
I made the edits in the doc and at few other places until I get bored :)",2,1,[]
115,199623296,676,1288547,2018-07-06 01:24:25,2018-07-06 02:00:27,closed,Changes for 4.6.1 release.,,1,3,[]
116,199590326,674,1288547,2018-07-05 21:20:21,2018-07-05 21:28:53,closed,Remove old and incorrect readme.,,1,1,[]
117,199325445,672,1288547,2018-07-04 21:28:10,2018-07-04 22:02:10,closed,Fix misc bugs,,1,4,[]
118,199109508,669,1288547,2018-07-03 23:56:18,2018-07-04 00:11:35,closed,ENH: Expose `process_ui_events` in mlab.,,1,1,[]
119,199011941,668,1288547,2018-07-03 16:00:56,2018-07-03 16:22:27,closed,Fix travis builds.,PyQt5-5.11.1 is broken.,0,1,[]
120,198878714,667,1288547,2018-07-03 07:56:27,2018-07-03 15:33:00,closed,In python3 the module webbrowser no longer have the attribute _iscommand,"In python3, the module `webbrowser` no longer have the attribute `_iscommand`.

",3,1,[]
121,198446577,666,1288547,2018-06-29 23:44:30,2018-06-30 00:00:10,closed,Add attributes to dataset,"This makes it very easy to add new scalar/vector/tensor attributes to
either a VTKDataSource or to an ArraySource.  This is very convenient
while scripting.  With this we can now do `add_attribute, remove_attribute`, and `rename_attribute`.",1,2,[]
122,198320596,665,1288547,2018-06-29 13:39:54,2018-06-29 13:50:44,closed,Fix annoying warning when running Mayavi tests.,,1,1,[]
123,198198603,664,1288547,2018-06-29 02:18:10,2018-06-29 07:49:15,closed,ENH: Use views in set_id_type_array_py,"Using this snippet (modified to properly set `empty(..., int)` so the C works properly):
```
from tvtk.array_handler import set_id_type_array_py
from tvtk.array_ext import set_id_type_array
import numpy as np

n = 100000
cs = 10
a = np.arange(cs*n)
a.shape = n, cs
b = np.empty(n*(cs+1), int)

%timeit set_id_type_array(a, b)
%timeit set_id_type_array_py(a, b)
```
on `master` I get roughly ~2x slower:
```
785 µs ± 6.39 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
1.4 ms ± 8.46 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
```
On this PR (which only uses views which do not copy the actual data / are for the most part free) I get only ~25% slower:
```
777 µs ± 1.34 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
961 µs ± 2.18 µs per loop (mean ± std. dev. of 7 runs, 1000 loops each)
```
So very close in speed. This makes me think compiling might not ever be worth the hassle.

FWIW in a previous version of this (@prabhuramachandran your original snippet) there was `b = np.empty(n*(cs+1))` without specifying the type as `int`. The Python code at least gave the correct/expected output (integers stored in the `float` array `b`) whereas the C code gave garbage. But I doubt this is really done / useful in practice. There should maybe also be an `assert` statement about the dtype of `out_array` at some point.",8,1,[]
124,198192440,663,1288547,2018-06-29 01:19:31,2018-06-29 01:25:24,closed,Support PySide2.,Works pretty well as pyface already supports pyside2.,1,1,[]
125,198181116,662,1288547,2018-06-28 23:41:29,2018-06-28 23:54:18,closed,Fix the broken help links.,"The toolbar icon to load the documentation and the TVTK class browser
were broken and are now fixed.  If the local documentation is not
available, load the online docs.",1,1,[]
126,198178221,661,1288547,2018-06-28 23:19:53,2018-06-28 23:27:02,closed,Make array_ext optional.,"On a Python environment where compilation is not possible, this
extension prevents installation via pip.  We now have a slower
alternative for such environments which allow us to continue to install
Mayavi without building the extension.  The extension is only added
conditionally, so those who can build the package correctly will get the
added performance.  This addresses #658 and should make Mayavi even
easier to install for the average user.",1,1,[]
127,197802754,660,1288547,2018-06-27 17:32:34,2018-06-27 17:57:07,closed,MRG: Fix window size for screenshot on HiDPI,"On macOS with HiDPI `mlab.screenshot` is broken, only rendering 1/4 of the window (as expected by the 2x logical to physical pixel ratio for the monitor):
```
>>> from mayavi import mlab
mlab.>>> mlab.test_plot3d()
<mayavi.modules.surface.Surface object at 0x128adb728>
>>> img = mlab.screenshot()
>>> import matplotlib.pyplot as plt
>>> plt.imshow(img)
<matplotlib.image.AxesImage object at 0x133546ef0>
>>> plt.show()
```
On `master`:
![figure_1](https://user-images.githubusercontent.com/2365790/41989402-32967eb0-7a0d-11e8-89ac-6fd06c4c8f70.png)

On this PR:

![figure_2](https://user-images.githubusercontent.com/2365790/41989758-5da81de2-7a0e-11e8-92bd-61a64de633e7.png)

Not 100% sure `figure.scene.render_window.size` is the right thing to use here, but it works.",4,1,[]
128,192638068,651,1288547,2018-06-05 09:09:21,2018-06-05 09:17:05,closed,Minor updates,"- Fix description/long description in `setup.py`.
- Cleanup `setup.py` so just pip install mayavi works correctly without needing numpy first.
- Update some changelogs per #649.",1,4,[]
129,190774661,647,1288547,2018-05-27 07:33:17,2018-05-27 10:15:09,closed,Prepare for 4.6.0 release.,"- Update changelog.
- Bump version for release.",1,2,[]
130,190755047,646,1288547,2018-05-26 18:59:48,2018-05-26 19:19:03,closed,Update docs,"- Update readme, add requirements.txt
- Update installation docs significantly.
- #Fixes 644.",1,5,[]
131,189743506,642,1288547,2018-05-22 17:51:27,2018-05-22 17:58:59,closed,Fix nbextension and missing bug with global.,Fixes #553 and #512.  Also make a few PEP8 changes.,1,1,[]
132,189459842,641,1288547,2018-05-21 18:56:50,2018-05-23 13:12:49,closed,Use new pyface toolkit,"Fixes #626.

@corranwebster -- could you please take a look at this PR, the pyface toolkit related bits especially to see if I haven't done anything wrong.  Thanks!  BTW, the changes for the pyface toolkit are all in the first commit.
",6,4,[]
133,183698177,630,1288547,2018-04-24 11:01:10,2018-05-20 10:23:49,closed,Test improvements,"- Use released versions of ETS packages.
- Fix integrationtest errors on Windows.
- Try running integration tests on appveyor.",1,11,[]
134,173974505,617,1288547,2018-03-09 10:49:45,2018-03-10 10:34:36,closed,Simple CI testing with VTK-8.1.0.,Testing if this works on appveyor.,1,22,[]
135,173058325,616,1288547,2018-03-06 04:58:26,2018-03-06 05:26:25,closed,Misc fixes,Fixes #612.  I think this ought to fix the issue faced there with PyQt4 and Python 3.6.,0,2,[]
136,169637584,609,1288547,2018-02-16 14:29:35,2018-02-16 16:16:05,closed,Fix bug with mlab.screenshot and VTK 8.1.0.,Fixes #602.  Also adds a testcase for this.,1,1,[]
137,169630496,608,1288547,2018-02-16 13:58:58,2018-02-16 14:27:32,closed,Fix travis builds,"This should fix the errors on travis, it also passes all the basic tests on VTK-7.x.",0,3,[]
138,169415592,607,1288547,2018-02-15 16:13:45,2018-02-15 16:30:53,closed,Fix #605: Interactors now work correctly with Qt5.,"This was again a problem with the pixel ratio on HDPI displays.  The
problem exists upstream in VTK's QVTKRenderWindowInteractor too and will
need to be fixed there, however, Mayavi should work fine with this fix.",1,1,[]
139,167609848,599,1288547,2018-02-07 06:39:48,2018-02-07 07:56:39,closed,Fix some wxPython issues.,"The scene now shows up correctly but pyface and traitsui need a lot of
work.",0,1,[]
140,167351013,597,1288547,2018-02-06 08:45:58,2018-02-06 09:30:22,closed,Fix 8.1 issues phase 2,"This is tested with VTK-8.1.0 on Python 3.6, with pyqt5 on MacOS.

- Fixes all TVTK test failures.
- Fixes some wrapping bugs specific to 8.1.x.
- Fixes all Mayavi test failures.
- All integration tests now pass (this required fixing several issues).

Am likely to merge this and disregard build failures on travis so that master at least works properly with the latest VTK.  This is for the benefit of folks who want to play with the new VTK wheels and use Mayavi with it.  I will address the long failing builds in a later PR this week and get those all cleaned up as well.",0,9,[]
141,167189778,596,1288547,2018-02-05 16:24:01,2018-02-05 16:54:06,closed,Fix 8.1 issues,Phase 1 of some fixes to work better with the new VTK 8.1.0 wheels on pypi.,1,3,[]
142,162140282,588,1288547,2018-01-10 14:43:16,2018-01-23 14:14:30,closed,MRG: Avoid NumPy deprecation,"Gets rid of these warnings:
```
  mayavi/tvtk/array_handler.py:268: FutureWarning: Conversion of the second argument of issubdtype from `complex` to `np.complexfloating` is deprecated. In future, it will be treated as `np.complex128 == np.dtype(complex).type`.
```",1,1,[]
143,160414325,584,1288547,2017-12-28 16:44:42,2018-01-23 14:14:09,closed,"Fix bug with ""p"" keypress",Pull request for fix proposed in #573,1,1,[]
144,160354329,583,1288547,2017-12-28 08:51:09,2018-01-23 14:16:11,closed,VTK 8.x compatibility fixes,"Removed calls to get/set_update_extent which are no longer available in VTK 8.x (reported in #568)
I am not sure this is the best way to go about it, but it works for me.",1,2,[]
145,157905760,578,1288547,2017-12-12 18:35:15,2017-12-14 01:03:49,closed,FIX: Remove debug print,This appears to be a leftover debugging statement -- no other camera actions are `print`ed so this seems unnecessary. (I also get a flood of `setting roll` calls when automating view changes.),1,1,[]
146,156573955,572,1288547,2017-12-05 21:05:42,2017-12-06 00:07:32,closed,BUG: Undo a couple of accidental trait_set changes.,These are not traits so should not have been changed.,0,1,[]
147,155556623,571,1288547,2017-11-30 09:29:44,2017-11-30 09:30:04,closed,DOC improve the mlab introduction,"The sentence was very long, so I tried to rephrase it using a list.

Amazing software by the way !",0,1,[]
148,154636497,566,1288547,2017-11-25 12:36:35,2017-12-14 13:06:21,closed,Bug fix: solve the unicode encode error in windows,"The error `UnicodeEncodeError: 'cp932' codec can't encode character '\xe9' in position` appears when building the documentation in windows from master source, and it can be simply solved by telling the the write wrapper to encode the text as UTF-8.",2,3,[]
149,154128101,564,1288547,2017-11-22 11:27:25,2017-11-23 16:36:31,closed,Prevent get_tvtk_class_names from hijacking stderr,This is something I missed during #559. `sys.stderr` is also hijacked.,1,1,[]
150,152774456,559,1288547,2017-11-15 13:30:00,2017-11-15 18:55:53,closed,Prevent get_tvtk_class_names from hijacking stdout,"The function `tvtk.tools.tvtk_doc.get_tvtk_class_names` iterates over all
VTK classes and briefly instantiates them to check whether that works.
One of those classes is `vtk.vtkPythonInteractiveInterpreter`, which upon
instantiation wil hijack `sys.stdout` to redirect all output somewhere
else. This breaks for example Jupyter notebooks, who want to hijack `sys.stdout` for themselves.

This PR restores `sys.stdout` after instantiating
`vtkPythonInteractiveInterpreter`.

fixes #558, #503",4,1,[]
151,147597615,556,1288547,2017-10-19 15:59:59,2017-12-05 20:56:12,closed,FIX: Tiny spelling fix,A tiny spelling fix to see if Travis is broken on `master` (I suspect it is from #555 but need to check).,0,1,[]
152,147437963,555,1288547,2017-10-18 23:51:07,2017-12-05 20:54:53,closed,FIX: Fix deprecated .set / .get use,"Closes #554.

I started replacing all of the `.set(...)` calls with `.trait_set(...)`, until I realized that (at least) the `MlabSource` class, which is the base class for a number of things, has a special / different `.set(...)` method that does some stuff before calling `self.trait_set(...)`. I suspect some of the changes here, then, are not so good because they might lead to calling `MlabSource.trait_set(...)` directly instead of `MlabSource.set(...)`.

Perhaps the correct fix is to add a `MlabSource.trait_set(...)` that just wraps to the `MlabSource.set(...)` -- then I could change all of the `.set(...)` calls to `.trait_set(...)`, but I don't know enough about the hierarchy / ramifications to know.

In the meantime, this at least gets rid of the warnings ",11,5,[]
153,135332990,544,1288547,2017-08-11 13:14:12,2017-08-11 15:30:10,closed,Fix numpy issues in lut_manager,Recent numpy versions will not accept floating values for slice indices: cast to int the result of round(),2,1,[]
154,135277406,543,1288547,2017-08-11 07:05:47,2017-08-11 07:27:34,closed,Fix long standing test failure with ply reader.,"The issue was that the test file was broken with a wrong 1-based index.
This was downloaded from a known repo so it is possible that the file
was buggy. The new version works fine and the tests should now run
reliably without the earlier random failures.",1,1,[]
155,134333692,542,1288547,2017-08-06 17:21:37,2017-08-06 17:40:38,closed,Fixing example.,Thanks to @grlee77 for the initial patch and for #343.  This supersedes #343.,1,1,[]
156,134333175,541,1288547,2017-08-06 17:05:05,2017-08-06 17:22:59,closed,Fix numpy warnings.,"This will show up with numpy version >= 1.12 when the mlab.view function
is called with distance and focal point set to arrays.  Thanks to
@FedeMiorelli for finding this issue and suggesting a fix.  Supersedes #509.",1,1,[]
157,134305491,540,1288547,2017-08-05 21:15:29,2017-08-05 21:23:02,closed,Try fix appveyor test failures.,,1,1,[]
158,134305132,539,1288547,2017-08-05 21:01:57,2017-08-05 21:22:50,closed,Add test for the fix provided in #514.,Thanks to @christianbrodbeck for the fix and test case.,0,1,[]
159,134304392,538,1288547,2017-08-05 20:37:44,2017-08-05 20:49:29,closed,Fix bug with reset method of mlab sources.,"Many of the mlab sources did not behave correctly when reset was called.
The tests were passing because the dataset was updated correctly but the
changes were not fired downstream so the modules and filters did not
pick up the changes.  This is now tested and fixed.",0,1,[]
160,134299575,537,1288547,2017-08-05 17:55:43,2017-08-05 17:56:08,closed,Fix tests,Fixes the tests on travis-ci.  The PLY reader still fails intermittently and this looks like a VTK problem that needs to be reported upstream.,1,2,[]
161,134296044,536,1288547,2017-08-05 15:59:02,2017-08-05 15:59:10,closed,Update readme and add link to mailing lists.,,0,1,[]
162,133127138,534,1288547,2017-07-30 12:39:48,2017-08-05 21:03:03,closed,Added 'getting the latest development version',,1,1,[]
163,133127042,533,1288547,2017-07-30 12:35:46,2017-08-05 21:04:02,closed,Installation using conda,I have added installation using conda.,3,1,[]
164,132333243,531,1288547,2017-07-25 17:09:02,2017-08-08 12:48:27,closed,Added installation using edm,"I have added instructions for installation via edm. If this is fine, then I will further update the installation part.",5,6,[]
165,131891423,530,1288547,2017-07-22 08:05:59,2017-07-23 15:11:04,closed,Addition to the code snippet, It was kind of confusing. This code snippet used different import statements than the code snippet before it. ,2,2,[]
166,130751010,528,1288547,2017-07-16 13:15:03,2017-07-19 13:33:00,closed,Qt5 support,"- Basic support for Qt5.  This makes Mayavi compatible with PyQt5.
- This requires the latest traits, traitsui, and pyface from master.  A new release may be forthcoming for these packages soon.
- This works well with VTK-8.x which is typically not available on most Python packages but is easy to do by hand.  On older versions, on MacOS, the embedded VTK window is half the size.  
- There are some warnings about ""Attempt to set a screen on a child window."" which seem related to the toolbar used on the decorated scene.  This seems like a pyface issue with the toolbar.
- Mlab and traits based dialogs work fine.
- Mayavi2 works but reparenting windows seems to not work very well suggesting that there are more migration issues in the other libraries.
- This PR also sneaks in a couple of Python3 migration bugs in Mayavi.",4,6,[]
167,129860413,523,1288547,2017-07-11 09:21:46,2017-07-11 13:21:42,closed,doc: Typo fix,Just a typo fix.,1,1,[]
168,128302579,515,1288547,2017-06-30 06:20:32,2017-07-11 13:21:59,closed,Fix a bug with array source and vectors.,"This bug manifests when one runs `mlab.test_flow()` with Python 3.x and
is using a recent version of NumPy where shape elements cannot be
floats.",0,1,[]
169,127333397,514,1288547,2017-06-24 15:26:00,2017-08-05 20:55:44,closed,FIX?  shared data in testing backend,"When modifying PySurfer to share data between pipelines based on instructions from [here](http://docs.enthought.com/mayavi/mayavi/tips.html#sharing-the-same-data-between-scenes) 
we ran into a problem that exists only with the `test` mlab backend: a message is displayed 

<img width=""504"" alt=""screen shot 2017-06-24 at 11 23 04 am"" src=""https://user-images.githubusercontent.com/145771/27509640-8437a4b6-58cf-11e7-8929-f5a9a390400b.png"">

followed by this traceback:

```
Exception occurred in traits notification handler for object: <mayavi.tools.filters.SetActiveAttributeFactory object at 0x12638b650>, trait: point_scalars, old value: , new value: color
Traceback (most recent call last):
  File ""/Users/christian/anaconda/envs/mayavi-dev/lib/python2.7/site-packages/traits/trait_notifiers.py"", line 340, in __call__
    self.handler( *args )
  File ""/Users/christian/Code/mayavi/mayavi/tools/pipe_base.py"", line 198, in _anytrait_changed
    setattr(obj, components[-1], value)
  File ""/Users/christian/Code/mayavi/mayavi/core/trait_defs.py"", line 97, in set_value
    raise TraitError(object, name,""one of %s""%values, value)
TraitError: The 'point_scalars_name' trait of a SetActiveAttribute instance must be one of [], but a value of 'color' <type 'str'> was specified.
Traceback (most recent call last):
  File ""share_data.py"", line 25, in <module>
    pipe = mlab.pipeline.set_active_attribute(dataset, point_scalars='color')
  File ""/Users/christian/Code/mayavi/mayavi/tools/pipe_base.py"", line 38, in the_function
    factory = factory_class(*args, **kwargs)
  File ""/Users/christian/Code/mayavi/mayavi/tools/pipe_base.py"", line 163, in __init__
    self.set(**traits)
  File ""/Users/christian/Code/mayavi/mayavi/tools/pipe_base.py"", line 180, in set
    self._anytrait_changed(trait, value)
  File ""/Users/christian/Code/mayavi/mayavi/tools/pipe_base.py"", line 198, in _anytrait_changed
    setattr(obj, components[-1], value)
  File ""/Users/christian/Code/mayavi/mayavi/core/trait_defs.py"", line 97, in set_value
    raise TraitError(object, name,""one of %s""%values, value)
traits.trait_errors.TraitError: The 'point_vectors_name' trait of a SetActiveAttribute instance must be one of [], but a value of '' <type 'str'> was specified.
```

 (https://github.com/nipy/PySurfer/pull/191). Looking through the Mayavi source code (which I am not familiar with otherwise) I noticed the line modified in this PR which looks like it might be a bug (where `scene` is compared to `None` when it is not `scene` but `self._scene` that is used in the conditional). Modifying the line as in this PR fixes the issue with the testing backend for me. I was trying to look for a test to modify but could not find a test for the `mlab.pipeline.set_active_attribute` pipeline; below is a small script (based on [this](http://gael-varoquaux.info/programming/mayavi-representing-an-additional-scalar-on-surfaces.html)) that produces the error and is fixed with the change in this PR.

```
###############################################################
# Create some data
import numpy as np
x, y = np.mgrid[0:10:100j, 0:10:100j]
z = x**2 + y**2
w = np.arctan(x/y)

###############################################################
# Visualize the data
from mayavi import mlab


mlab.options.backend = 'test'

# Create the data source
src = mlab.pipeline.array2d_source(z)

# add second array
dataset = src.mlab_source.dataset
array_id = dataset.point_data.add_array(w.T.ravel())
dataset.point_data.get_array(array_id).name = 'color'
dataset.point_data.update()

# select the array from a copy
pipe = mlab.pipeline.set_active_attribute(dataset, point_scalars='color')
```",4,1,[]
170,122578156,510,1288547,2017-05-26 06:08:31,2017-06-09 06:02:13,closed,Update extract_grid.py,VOI was being allocated a huge memory by default and the update extent went outside the whole extent. Tweaked the code a little bit to bring the update extent within whole extent.,3,3,[]
171,120098149,509,1288547,2017-05-11 12:49:59,2017-08-06 17:05:43,closed,Fix FutureWarning in numpy 1.12,"Fixed FutureWarning about elementwise comparison. This could actually break when numpy 1.13 is released.

C:\WinPython-64bit-2.7.13.1\python-2.7.13.amd64\lib\site-packages\mayavi\tools\camera.py:288: FutureWarning: elementwise comparison failed; returning scalar instead, but in the future will perform elementwise comparison
  if focalpoint is not None and not focalpoint == 'auto':",4,2,[]
172,120060257,508,1288547,2017-05-11 09:19:27,2017-05-11 13:38:09,closed,Fix pick_world bug with VTK >= 6,"The pick_world function is still using the old VTK pipeline functions, added a check to that effect.",3,2,[]
173,120055505,507,1288547,2017-05-11 08:54:14,2017-07-19 17:20:41,closed,Fix bug in mouse_pick_dispatcher,Wrong indentation level causes only first registered picker to be checked,1,1,[]
174,119594334,506,1288547,2017-05-09 06:52:59,2017-05-09 17:12:30,closed,Remove focus-stealing code,"The enterEvent and leaveEvent callbacks in QVTKRenderWindowInteractor lead to focus stealing, causing problems in applications that embed a Mayavi scene,",4,2,[]
175,114351006,498,1288547,2017-04-05 11:10:05,2017-05-09 17:26:03,closed,avoid loading nbextension via absolute URL,"1. load x3dom CDN over HTTPS
2. never load nbextensions with an absolute path, which only works when there is no base url (won't work in JupyterHub)",5,3,[]
176,114181921,497,1288547,2017-04-04 15:49:13,2017-04-06 10:20:58,closed,Update notebook.py,Always download x3dom from the website - otherwise the extension is not working with Jupyterhub. In addition the link has to be updated to https://www.x3dom.org/download/1.7.2/ instead of https://www.x3dom.org/download/ .,1,1,[]
177,109277962,492,1288547,2017-03-06 15:09:05,2017-05-26 06:16:32,closed,Updated installation instructions for Linux,"Added a step by step installation guide for Linux.
Also added disclaimers stating:
1)Mayavi does not support PyQt5 .
2)PyQt4 is the preferred GUI backend (over wxPython) .",1,2,[]
178,105373602,486,1288547,2017-02-09 07:33:25,2017-05-09 17:27:17,closed,Remove known bug about Python 3 support,Python 3 is now supported in Mayavi 4.5.0.,2,1,[]
179,98759425,471,1288547,2016-12-20 14:35:20,2017-07-19 17:21:48,closed,Adding information/tip about figure width,"Because it took me way too long to figure this out (I was expecting a tuple :) )

As part of http://24pullrequests.com/",1,1,[]
180,87483817,444,1288547,2016-09-30 12:21:06,2016-10-05 14:27:47,closed,Fix for setuptools 28.0,"Fixes #443.

With setuptools 28.0, subpackages are not added if found within an exclusion prefix.
We have to manually indicate which packages are available in the tvtk setup.py

The code is neutral for setuptools <28.0
",2,2,[]
181,82086135,435,1288547,2016-08-20 18:39:52,2016-10-05 14:26:51,closed,[MRG] Added a volume_slice helper function in mlab.,"volume_slice plots an image plane sliced through volumetric data.

This PR addresses #430. I chose `volume_slice` instead of `image_slice` that was proposed in #430, since I thought it was clearer (a slice through volumetric data), but I'm open to changing the name of course.

In addition to the function itself, I tried to modify the documentation as well, but I'm not sure whether I did it well or not since I get an error when building the doc:

```
make -f MakefileMayavi html
make[1]: Entering directory '/home/emma/travail/projects/mayavi/docs'
sphinx-build -b html -d build/mayavi/doctrees   source/mayavi build/mayavi/html
Making output directory...
Running Sphinx v1.2.3
loading pickled environment... not yet created

Theme error:
no theme named 'classic' found (missing theme.conf?)
MakefileMayavi:34: recipe for target 'html' failed
make[1]: *** [html] Error 1
make[1]: Leaving directory '/home/emma/travail/projects/mayavi/docs'
Makefile:34: recipe for target 'html' failed
make: *** [html] Error 2
```
",7,3,[]
182,80903596,426,1288547,2016-08-11 04:45:40,2016-08-13 01:44:49,closed,Update readme.,"Remove references to Mayavi2 as it is confusing.
",1,1,[]
183,80850134,425,1288547,2016-08-10 19:10:42,2016-08-13 01:44:31,closed,Fix lurking old pipeline code,"Fix a bunch of issues where code was using the old pipeline.  This still needs to be properly done using the new pipeline but at least it should not break at this point.
",4,5,[]
184,79868029,422,1288547,2016-08-03 08:41:51,2016-08-03 11:33:37,closed,Update auto-generated html for changelog,"Changelog was automatically generated from a commit not including changes from #419
Only modified the gh-pages here.
",1,1,[]
185,79620811,421,1288547,2016-08-01 19:19:08,2016-08-01 20:02:33,closed,Update docs for 4.5.0.,"Also clean up some junk commits from years ago which seem to have crept
in.
",1,1,[]
186,79618380,420,1288547,2016-08-01 19:01:12,2016-08-02 10:56:24,closed,Release branch for version 4.5.0.,"Bumping release and updating changelog.
",2,2,[]
187,79534571,419,1288547,2016-08-01 08:54:58,2016-08-01 11:58:05,closed,Add acknowledgment to SimPhoNy,,1,1,[]
188,79456334,418,1288547,2016-07-30 12:32:07,2016-08-01 08:41:02,closed,Update changelog for 4.5.0 release.,,4,1,[]
189,79158216,417,1288547,2016-07-28 08:50:25,2016-07-29 06:59:10,closed,Notebook Python 3 fixes,"- Use `next()` rather than `.next()` which doesn't exist on Python 3.
- Use `base64` module for `png` backend.
",2,2,[]
190,78904839,416,1288547,2016-07-26 18:52:50,2016-08-01 08:36:14,closed,Fix bugs,"Fixes a silly error, issues #397, #387, add tests for visual, fix problem with picker ui not showing, and fix a hidden execfile.
",6,10,[]
191,78037586,415,1288547,2016-07-19 19:49:25,2016-07-21 11:45:32,closed,Notebook support,"Adds support for displaying Mayavi images or x3d scenes on the notebook.  The x3d scenes allow one to fully interact with the scene in the notebook.
",7,8,[]
192,76648166,413,1288547,2016-07-07 19:02:58,2016-07-08 01:45:33,closed,Fixes #388.,,1,1,[]
193,76363444,411,1288547,2016-07-06 00:31:31,2016-07-09 04:52:04,closed,Movie support,"Adds support for recording movies and animating timesteps.  Also added some documentation for this feature.  For a timeseries, one can simply select the ""play"" checkbox and see an animation.  For the timestep and `mlab.animate` one can very easily generate animations also.
",8,7,[]
194,76296736,410,1288547,2016-07-05 15:44:17,2016-07-07 14:24:28,closed,Updated LUTs to include new matplotlib colorschemes,"I had to modify the cm2lut.py script to get the cmaps which are not in
matplotlib.cm.datad. I don't understand why some of the cmaps are there
and others are in matplotlib._cm_listed.cmaps, but I figured out from
matplotlib.cm.get_cmap that they are.

Before this can really be committed, the gifs also need uploaded, but for me mlab.savefig() is just saving black png images. So I either need some direction on fixing that, or I need someone else to take my patch and upload the gifs.

All I've been able to find on the savefig bug is that I should use savefig before mlab.show() (which gen_lut_previews.py does not use) or that it's a vtk issue.
",5,2,[]
195,76083408,408,1288547,2016-07-03 07:57:30,2016-07-03 18:25:35,closed,Add additional save options,"Hi @prabhuramachandran, I've removed the whitespace changes and created a new pull request.

R
",4,3,[]
196,75218090,406,1288547,2016-06-26 00:32:17,2016-07-04 17:01:35,closed,Fixes #403: Image plane widget and volume broken,"These modules were using old-style tests which would fail with the new
pipeline related changes.
",4,1,[]
197,74993989,405,1288547,2016-06-23 17:25:04,2016-07-06 15:12:25,closed,Debug info on code gen,"Add basic debug support for the code_gen script

Details:
- Add a logger and log debug info while wrapping vtk classes
- Add `-v, --verbose` option on the code_gen script
- Minor cleanup
",1,4,[]
198,74838248,400,1288547,2016-06-22 18:59:30,2018-05-23 09:45:48,closed,add matrix build for vtk 6.3 and vtk 7.0 on appveyor,,10,12,[]
199,74805911,399,1288547,2016-06-22 15:32:31,2016-07-03 07:00:55,closed,Enhancement - Add more choice of file save types,"There are many ways of saving files in Mayavi, but only png was set
to show up by as an option to the user. This pull request makes a change
to the decorated_scene.py files and expands the choice the user has
when they click to save in the GUI.
",4,8,[]
200,74110564,394,1288547,2016-06-16 16:21:25,2016-06-16 17:51:44,closed,BUG: Fix slice unstructured grid module.,"This was still using the older pipeline.
",3,1,[]
201,72629443,391,1288547,2016-06-05 13:33:43,2016-06-17 16:16:44,closed,Typo,"Fix typo nosettests -> nosetests
",2,1,[]
202,72396695,390,1288547,2016-06-02 18:42:30,2016-06-03 08:38:49,closed,[WIP] Run integration tests on qt,"This PR updates the testing environment so that we can run the integration tests on qt4. 
",2,4,[]
203,69590950,386,1288547,2016-05-10 22:52:29,2016-05-13 18:22:21,closed,update codecov configuration,,1,1,[]
204,68978852,383,1288547,2016-05-05 08:26:04,2016-05-05 09:03:21,closed,Disable codecov changes.,"Problems still present in the codecov changes, probably temporary. We disable them.
",0,1,[]
205,68891360,382,1288547,2016-05-04 16:25:22,2016-05-05 09:16:53,closed,Fix/381 integration test texture,"Fixes #381 
",0,2,[]
206,68847110,379,1288547,2016-05-04 11:31:06,2016-05-04 13:15:46,closed,Added trivial codecov.yml to verify green codecov,"Fixes #378
",2,3,[]
207,68841193,377,1288547,2016-05-04 10:36:22,2016-05-05 12:11:37,closed,Adding OSX to travis - attempt 2,"Canceling previous PR due to codecov unexpected behavior.
",2,44,[]
208,68838278,376,1288547,2016-05-04 10:11:15,2016-05-04 13:48:34,closed,Documentation for QString API failure,"Fixes #129, fixes #338, fixes #367
",1,3,[]
209,68832815,375,1288547,2016-05-04 09:27:44,2016-05-04 14:00:10,closed,Fixes incorrect signature of EnvisageEngine.new_scene,"Fixes #161
",0,1,[]
210,68700277,374,1288547,2016-05-03 12:50:30,2016-05-03 16:05:49,closed,Fix for unexpected test code,"Fix for a few strange things. The dictionary is changed in place, so it must be copied.
Additionally, it's probably supposed to call tearDown, not setUp()
",7,6,[]
211,68675395,372,1288547,2016-05-03 08:54:42,2016-05-04 10:37:53,closed,Add OSX to travis CI,"Partially solves #366. Deploys the general infrastructure.
",4,42,[]
212,68356370,370,1288547,2016-04-29 11:13:38,2016-05-13 18:15:09,closed,"Fix ""_p_void"" values in TVTK with VTK 6.x","I have tested this with VTK 6.2 and 6.3 on Ubuntu 12, and VTK 6.3 on OSX 10.11

Things seem to work but since this is a fundamental change, I would prefer sitting on it for a bit longer.  Review and comments are very much appreciated.

Most of these changes are tested by the existing TVTK test for initialising all classes, but I think I could also add more tests to make it more robust.

To compare the bahaviour, try the following with the master branch and with this one:

```
from tvtk.api import tvtk
obj = tvtk.ViewTheme()
obj.configure_traits()
```
",19,25,[]
213,68355939,369,1288547,2016-04-29 11:09:04,2016-04-29 13:22:27,closed,Fix/368 integrationtests fail with exit 1,"Fix #368 so that failed tests are properly reported.

Fortunately, only one test from test_texture whose failure was not captured and I believe it was because I set the check criteria (a standard deviation of pixels) just a bit too high (200 versus ~180 for 28000 sample points).  However I could not reproduce the small difference in the standard deviation on my local machine (OSX or Ubuntu 12) and was not able to understand it.
",2,2,[]
214,68234004,365,1288547,2016-04-28 14:51:12,2016-04-29 08:07:23,closed,Skip test for interacting test with TVTKScene,"After investigation, the problem arises from an interaction between
test_mlab_scene_model_with_gui and this test in a nose run.
I decided to skip the test because it is probably intrinsic in the
way things interact during the test.

See issue #359 
",9,1,[]
215,68215981,364,1288547,2016-04-28 13:00:36,2016-04-29 13:55:14,closed,Fix failing test for custom import in some circumstances,"Depending on the test import order, this test may fail because
the cache was not cleared.

Fixes one test failure of #359
",1,1,[]
216,67915021,363,1288547,2016-04-26 16:16:49,2016-04-27 13:40:47,closed,[WIP] Fix for incorrect drawing text in the wrong figure,"Currently work in progress. Opening because I need feedback on the internals.

When done, solves #38 
",2,1,[]
217,67902727,362,1288547,2016-04-26 15:06:14,2016-04-28 15:53:23,closed,Fix tvtk attribute with undefined _void value,"Fix #357 

I also realise that for VTK 6.x and VTK 7, a number of VTK classes do not initialise `*Position` attributes properly.  This would fix for them too.

Will lead to conflict with #358 upon merge, unfortunately
",6,5,[]
218,67883220,361,1288547,2016-04-26 13:14:29,2016-04-27 14:27:47,closed,Refactor get_output to a common routine,"Refactored member _get_output to a simple subroutine. There's no need of having it as a member.
Solves issue #312 
",0,1,[]
219,67864217,358,1288547,2016-04-26 10:49:25,2016-04-27 14:23:20,closed,Removes array_ext.so/pyd on clean,"Removes the extension as from issue #336.
",1,4,[]
220,67753192,356,1288547,2016-04-25 16:57:28,2016-04-25 17:58:30,closed,Check if test successful with the appropriate filename,"Verifies, and if green, solves #219
",2,1,[]
221,67726800,355,1288547,2016-04-25 14:15:28,2016-04-27 14:21:53,closed,Unicode trait handling for those vtk methods returning unicode data,"The generator code did not handle unicode, but some vtk routines do return them. Although never able to reproduce it, issue #354 shows a situation where it does matter.

I am unsure about potential side effects of this change on client code, but I am surprised it worked until now, and I expect the method was simply not generated, or it was but it returned an empty string.
",2,8,[]
222,67531778,353,1288547,2016-04-22 15:41:40,2016-04-24 08:26:52,closed,Typo in filename for a test,"After this Travis CI tests with VTK 6.3.0 should be green (#345)

Update: except for a tvtk error.
",0,1,[]
223,67525492,352,1288547,2016-04-22 15:01:25,2016-04-24 08:26:14,closed,ENH: Nice load pylab_luts.pkl,"Supersede #342  as a new binary file is not required.

The original problem arises when git checkout the repository on Windows, *.pkl files are not thought as binary file and its line endings are converted.  Adding `.gitattributes` solves the problem.  On the other hand, I still think soft loading the pickle file is appropriate, for unforseen failures.
",1,3,[]
224,67499000,351,1288547,2016-04-22 11:45:56,2016-04-27 14:16:49,closed,Document object identity behavior matching VTK,"Fixes #176
",0,2,[]
225,67377029,350,1288547,2016-04-21 15:45:07,2016-10-05 14:43:05,closed,Reimplement fix savefig size and black image - step 2 (last),"#346, #347 and this complete the whole journey to #331

(I would leave #331 close and this one opens)

If this whole thing should be merged, this PR merges to the branch of #347, and then #347 will merge to the branch of #346.
",3,5,[]
226,67361052,349,1288547,2016-04-21 14:14:25,2016-04-21 16:14:49,closed,"Revert ""Fix savefig size and black image""","Reverts enthought/mayavi#331
This should not be merged yet.
",4,1,[]
227,67353628,348,1288547,2016-04-21 13:28:13,2016-04-27 14:25:17,closed,Added setup.py documentation for Qt requirements,"Fixes #308
",1,5,[]
228,67334010,347,1288547,2016-04-21 10:53:15,2016-10-05 14:42:49,closed,Reimplement fix savefig size and black image - step 1 [WIP],"This is the next step after fixing the size of the snapshot images revealing black images (#346). 
This branch was implemented as #317 but was then reverted and superseded by (#331) 
Effectively undoing #58
As offscreen tests cannot be run on Travis, these tests had to be run locally with a headed machine.

OSX: 10.11, PySide 1.2.2, wxPython 3.0.2.0
Linux: Ubuntu 12, PySide 1.2.2, wxPython 2.8.10.1

**Linux + qt4 + this branch** All passed!

**Linux + wx + this branch** (On Travis these offscreen tests are skipped)

```
======================================================================
FAIL: test_savefig_with_size_and_magnification_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, mag, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 183, in test_savefig_with_size_and_magnification_offscreen
    self.check_image_size(self.filename, size=(262, 434))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (180, 140) != (262, 434)

First differing element 0:
180
262

- (180, 140)
+ (262, 434)

======================================================================
FAIL: test_savefig_with_size_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 162, in test_savefig_with_size_offscreen
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (90, 70) != (131, 217)

First differing element 0:
90
131

- (90, 70)
+ (131, 217)

----------------------------------------------------------------------
Ran 7 tests in 5.161s

FAILED (failures=2)
```

**OSX + qt4 + this branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 109, in test_savefig_with_size
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 124, in test_savefig_with_size_and_magnification
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

----------------------------------------------------------------------
Ran 7 tests in 2.204s

FAILED (failures=2)
```

**OSX + wx + this branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 109, in test_savefig_with_size
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 124, in test_savefig_with_size_and_magnification
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, mag, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 183, in test_savefig_with_size_and_magnification_offscreen
    self.check_image_size(self.filename, size=(262, 434))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (180, 78) != (262, 434)

First differing element 0:
180
262

- (180, 78)
+ (262, 434)

======================================================================
FAIL: test_savefig_with_size_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 162, in test_savefig_with_size_offscreen
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (90, 39) != (131, 217)

First differing element 0:
90
131

- (90, 39)
+ (131, 217)

----------------------------------------------------------------------
Ran 7 tests in 2.764s

FAILED (failures=4)
```
",1,1,[]
229,67329257,346,1288547,2016-04-21 10:15:05,2016-10-05 14:42:25,closed,Reimplement fix savefig with size and magnification - step 0 [WIP],"Reimplement part of #331 
Tests fail as the fix is incomplete.  I aim at making a new branch from this one for fixing those new problems, so that we know what was attempted and what does not work.  This issue is complicated.

Running `integratedtests/mayavi/test_mlab_savefig.py` against **master** leads to the following errors on _both Ubuntu 12 and OSX 10.11_

OSX: 10.11, PySide 1.2.2, wxPython 3.0.2.0
Linux: Ubuntu 12, PySide 1.2.2, wxPython 2.8.10.1

**Linux/OSX + qt4 + master branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 108, in test_savefig_with_size
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (128, 216) != (131, 217)

First differing element 0:
128
131

- (128, 216)
+ (131, 217)

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 124, in test_savefig_with_size_and_magnification
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 156, in test_savefig_with_size_offscreen
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (128, 216) != (131, 217)

First differing element 0:
128
131

- (128, 216)
+ (131, 217)

----------------------------------------------------------------------
Ran 7 tests in 4.762s

FAILED (failures=3)
```

**Linux/OSX + wx + master branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 108, in test_savefig_with_size
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (540, 234) != (131, 217)

First differing element 0:
540
131

- (540, 234)
+ (131, 217)

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 123, in test_savefig_with_size_and_magnification
    self.check_image_size(self.filename, size=(262, 434))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (180, 78) != (262, 434)

First differing element 0:
180
262

- (180, 78)
+ (262, 434)

======================================================================
FAIL: test_savefig_with_size_and_magnification_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, mag, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 174, in test_savefig_with_size_and_magnification_offscreen
    self.check_image_size(self.filename, size=(262, 434))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (180, 78) != (262, 434)

First differing element 0:
180
262

- (180, 78)
+ (262, 434)

======================================================================
FAIL: test_savefig_with_size_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 156, in test_savefig_with_size_offscreen
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (540, 234) != (131, 217)

First differing element 0:
540
131

- (540, 234)
+ (131, 217)

----------------------------------------------------------------------
Ran 7 tests in 9.848s

FAILED (failures=4)
```

On Linux + wx, I get addition errors.  But they might just be because of the version of wxpython (2.8.10.1)

```
  File ""/home/kit/.jaguar/envs/test-mayavi-2/lib/python2.7/site-packages/vtk/wx/wxVTKRenderWindowInteractor.py"", line 381, in OnPaint
    self._Iren.GetRenderWindow().SetSize(self.GetSizeTuple())
AttributeError: 'NoneType' object has no attribute 'SetSize'
FTraceback (most recent call last):
  File ""/home/kit/.jaguar/envs/test-mayavi-2/lib/python2.7/site-packages/vtk/wx/wxVTKRenderWindowInteractor.py"", line 381, in OnPaint
    self._Iren.GetRenderWindow().SetSize(self.GetSizeTuple())
AttributeError: 'NoneType' object has no attribute 'SetSize'
```

The following runs integratedtests/mayavi/test_mlab_savefig.py against **this branch** which unveil new errors:

**Linux/OSX + wx + this branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 109, in test_savefig_with_size
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 124, in test_savefig_with_size_and_magnification
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, mag, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 174, in test_savefig_with_size_and_magnification_offscreen
    self.check_image_size(self.filename, size=(262, 434))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (180, 78) != (262, 434)

First differing element 0:
180
262

- (180, 78)
+ (262, 434)

======================================================================
FAIL: test_savefig_with_size_offscreen (test_mlab_savefig.TestMlabSavefigUnitTest)
Test savefig with given size, normal Engine and offscreen
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 156, in test_savefig_with_size_offscreen
    self.check_image_size(self.filename, size=(131, 217))
  File ""test_mlab_savefig.py"", line 82, in check_image_size
    self.assertEqual(image.shape[:2][::-1], size)
AssertionError: Tuples differ: (90, 39) != (131, 217)

First differing element 0:
90
131

- (90, 39)
+ (131, 217)

----------------------------------------------------------------------
Ran 7 tests in 2.673s

FAILED (failures=4)
```

**Linux/OSX + qt4 + this branch**

```
======================================================================
FAIL: test_savefig_with_size (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and a normal Engine
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 109, in test_savefig_with_size
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

======================================================================
FAIL: test_savefig_with_size_and_magnification (test_mlab_savefig.TestMlabSavefigUnitTest)
Test if savefig works with given size and magnification
----------------------------------------------------------------------
Traceback (most recent call last):
  File ""test_mlab_savefig.py"", line 124, in test_savefig_with_size_and_magnification
    self.check_image_no_black_pixel(self.filename)
  File ""test_mlab_savefig.py"", line 72, in check_image_no_black_pixel
    self.fail(message)
AssertionError: The image has black spots

----------------------------------------------------------------------
Ran 7 tests in 2.275s

FAILED (failures=2)
```
",1,7,[]
230,67056226,345,1288547,2016-04-19 17:17:12,2016-04-27 14:15:48,closed,Add VTK 6.3 and VTK 7 to travis ci,"Use VTK official build of vtkPython 6.3 and 7.0.
Currently they are allowed to fail on travis.

For VTK 7.0, get lots of X windows errors there, which might be wx problem.  I set ETS_TOOLKIT=wx for running the integrationtests.  There are some genuine errors highlighting changes to the new pipeline.
",1,11,[]
231,66986433,344,1288547,2016-04-19 09:28:01,2016-04-22 14:40:50,closed,Allow load pylab_luts.pkl to fail,"If for some reasons, unpickling `pylab_luts.pkl` fails (had it failed on Windows 64bit), it should not be fatal: just fewer colormaps available.

Added a small test for this.
",1,8,[]
232,66912535,343,1288547,2016-04-18 20:01:46,2017-08-06 17:22:31,closed,fixes for the tvtk_segmentation.py example,"The first commit here fixes the following error:

```
Traceback (most recent call last):
  File ""examples/mayavi/advanced_visualization/tvtk_segmentation.py"", line 90, in <module>
    median_filter.set_kernel_size(3, 3, 3)
AttributeError: 'ImageMedian3D' object has no attribute 'set_kernel_size'
```

The second avoids the following warnings raised by numpy 1.11

```
examples/mayavi/advanced_visualization/tvtk_segmentation.py:52: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  lower_thr = sorted_data[0.2*l]
examples/mayavi/advanced_visualization/tvtk_segmentation.py:53: VisibleDeprecationWarning: using a non-integer number instead of an integer will result in an error in the future
  upper_thr = sorted_data[0.8*l]
```
",4,2,[]
233,66358157,342,1288547,2016-04-13 17:14:20,2016-04-15 14:31:58,closed,Fix: Nicely load pickled pylab_luts.pkl,"(Update: this PR is mostly a bug fix than an enhancement)
The current pylab_luts.pkl could not be loaded on Windows 64bit + Python 2.7 64bit (tested with both cmd.exe and PowerShell, and with virtualenv)

```
>>> fpath = ""mayavi\\core\\lut\\pylab_luts.pkl""
>>> state = state_pickler.load_state(fpath)
Traceback (most recent call last):
  File ""<stdin>"", line 1, in <module>
  File ""C:\Users\kit\envs\test-mayavi\lib\site-packages\apptools\persistence\state_pickler.py"", line 959, in load_state
    state = StateUnpickler().load_state(f)
  File ""C:\Users\kit\envs\test-mayavi\lib\site-packages\apptools\persistence\state_pickler.py"", line 515, in load_state
    data = pickle.load(file)
  File ""c:\python27\Lib\pickle.py"", line 1384, in load
    return Unpickler(file).load()
  File ""c:\python27\Lib\pickle.py"", line 864, in load
    dispatch[key](self)
  File ""c:\python27\Lib\pickle.py"", line 972, in load_string
    raise ValueError, ""insecure string pickle""
ValueError: insecure string pickle
```

Since `pylab_luts.pkl` is simply a dictionary with numpy arrays, I propose using the standard library `pickle` for this task.

Side issue, I could not see logger.warning message in Mayavi2 while I was testing this PR with a faulty pylab_luts.pkl.  Perhaps the logger is not set up properly or I am doing something stupid :/
",2,3,[]
234,66021778,341,1288547,2016-04-11 16:19:49,2016-04-20 12:32:20,closed,Fix traitsdoc setup and compliance with py3,"Traits properties should show in the API documentation with this PR.  And doc build should work on Python3.

Although previously changes in #293 led to successful doc build, it in fact did not setup sphinx to use `traitsdoc.get_doc_object` and `traitsdoc.SphinxTraitsDoc` (my fault!).  This PR fixes this problem.

Partial fix is made to `compiler_unparse` according changes in the API of `ast`; enough for the current doc build.  In the future we may consider using customised comment syntax for documenting traits (e.g. https://github.com/enthought/trait-documenter) instead of printing the code for the traits definition, therefore removing the need for unparsing AST back to code.

Tested on OS X + Python3 + Sphinx 1.4, and Ubuntu + Python2.7 + Sphinx1.3.5

@itziakos : does this fix #228 too?
",1,6,[]
235,65964385,340,1288547,2016-04-11 09:34:36,2016-04-20 12:33:29,closed,Import and integer division in python3,"Two small fixes in compliance with Python3

(1) Explicit relative import for a test
(2) Integer division may cause error, use `-1` to infer the size of the remaining dimension in numpy.reshape
",1,2,['python3']
236,65341648,335,1288547,2016-04-05 17:17:49,2016-04-20 12:49:00,closed,Fix texture,"Fix #211 
",2,4,[]
237,65168794,334,1288547,2016-04-04 15:55:05,2016-04-20 12:41:59,closed,Fixes Quiver3d Failure with different argument types,"Solves #85
",1,1,[]
238,64960268,332,1288547,2016-04-01 15:17:14,2016-04-20 12:49:53,closed,Fix Text3D in VTK 6.0+,"To see the problem, try the following with VTK 6.0+

```
from mayavi import mlab

mlab.points3d(0, 0, 0, opacity=0.)  # just for attaching the text3d
mlab.text3d(0., 0., 0., ""X"")

```
",0,3,[]
239,64818435,331,1288547,2016-03-31 16:22:01,2016-04-21 14:12:17,closed,Fix savefig size and black image,"Fix https://github.com/simphony/simphony-mayavi/issues/52, fix #257, potentially related to #75

Supersede #316 and #317 (the two issues are highly related that it has become impossible to separate the two)

Upon saving an image (snapshot), a new tvtkRenderWindow is created.  This is motivated by the fact that under Mac OS, vtkCocoaRenderWindow is the render window being used and if the vtkRenderWindow is contained by an interactor, resizing the renderwindow leads to the resulting image to be rendered only within the initial size.  Therefore a new tvtkRenderWindow is needed for saving an image in Mac.

This fix for Mac causes a side effect for Linux which is that when offscreen is off, saving an image will create a new window.  Forcing offscreen to true for the dummy tvtkRenderWindow would enhance the user experience but render the savefig function completely unusable if the machine does not support offscreen.

Tested platforms:
Mac OS 10.11 + wxPython/PyQt + VTK 6.2
Ubuntu 12.02 LTS + VTK 5.10/6.2.0/6.3.0 + wxPython/PyQt
",5,36,[]
240,64764993,330,1288547,2016-03-31 10:09:12,2016-04-20 13:49:35,closed,Fix for exception when modifying extents,"Fixes #37
",5,5,[]
241,64651620,329,1288547,2016-03-30 15:54:16,2016-04-01 10:50:45,closed,Suppresses test for VTK 6.2 (solves appVeyor random failure),"We have occasional appveyor failure which is probably due to the PLY format
still not working.
",5,3,[]
242,64634209,327,1288547,2016-03-30 14:14:30,2016-04-20 12:37:09,closed,Forces pipeline update when LUT changes,"Fixes #262
",3,3,[]
243,64594713,326,1288547,2016-03-30 09:14:32,2016-04-01 10:55:05,closed,Fix for test failure on mayavi -t,"Fixed import routine, and converted relative imports incompatible with the testing strategy.

Fixes #263 
",1,2,[]
244,63922478,324,1288547,2016-03-23 17:36:11,2017-08-06 17:09:24,closed,Refactor QVTKRenderWindowInteractor [WIP],"Attempt to use the vtk.qt4.QVTKRenderWindowInteractor when possible.  It also makes clear the patches we needed.  Some of these patches may be sent upstream to VTK.  However, they are likely to be kept around for sometime unless there are plans for discontinuing supports for older VTK versions.

This would supersede #304 (except for the test case added there).
",2,7,[]
245,63859836,323,1288547,2016-03-23 10:27:33,2016-03-28 13:47:43,closed,Enforce ordering of attribute labels in VTKDataSource.,"Currently, the entries have no guarantee of order, as they come from a dictionary.
We enforce the sorted order for user friendliness and consistency.
",1,1,[]
246,63262796,317,1288547,2016-03-17 17:37:55,2016-03-31 13:06:57,closed,Fix erroneous images when snapshot size is larger than window,"Added tests looking out for black spots in an image that should not have any.
In addition to running the added test cases against the current master branch, one can see the problem on their own machine by doing this:

```
from mayavi import mlab

fig = mlab.figure(size=(90, 130))
mlab.test_contour3d()
# notice that the image size is larger than the window size
mlab.savefig(""saved_file.png"", size=(140, 200), magnification=2)
```

I have tested this branch with a headed machine under xvfb.

Potentially related to #75, effectively undoing #58 

OS: Ubuntu 12.04 LTS 64bit
VTK: 6.2.0
wxPython: 2.8.10
",3,4,[]
247,63259526,316,1288547,2016-03-17 17:16:52,2016-03-31 16:24:13,closed,Fix savefig size,"Two problems that lead to images saved by `mlab.savefig` to have a different size than the one requested.  (Please see the test cases in this PR and run them against the master branch)

(1) When `wx` is used as backend and when `offscreen` is set to `True`, the `pyface.ui.wx.scene.OnSize`  is not called because the window is not lifted.

(2) When the `size` in `mlab.savefig` is given but the `magnification` is ""auto"", the `magnification` is changed and the `size` is also modified to match that.  However, since `magnification` is required by vtk to be an integer, rounding error may cause the `size` to be different from the one requested.
e.g. `mlab.figure(size=(100, 200)); mlab.savefig(""tmp.png"", size=(201, 301))` gives an image of size (201, 300) instead.
",6,17,[]
248,63112007,315,1288547,2016-03-16 18:22:56,2016-03-28 13:33:24,closed,Apply has_attribute to the output in VTKFileReader,"Fixes failing tests in simphony-mayavi due to incorrect application of assign_attribute
to a PolyData dataset.
",1,2,[]
249,62374118,313,1288547,2016-03-10 11:15:16,2016-03-17 04:47:33,closed,Replacing links to code. and svn.enthought.com,"Hunt down links to the code.enthought.com and svn.enthought.com domain.

Some of which are in scripts' docstrings that are invisible on the actual documentation website.

And I don't know what to do with these:

```
./docs/source/mayavi/installation.rst:.. _ETS: http://code.enthought.com/
./docs/source/mayavi/overview.rst:.. _ETS: http://code.enthought.com/projects/tool-suite.php
./examples/mayavi/mlab/chemistry.py:    'http://code.enthought.com/projects/mayavi/data/h2o-elf.cube'
./docs/source/mayavi/auto/chemistry.py:   'http://code.enthought.com/projects/mayavi/data/h2o-elf.cube'
```

Also don't know what to do with these:

```
./docs/API.txt:   https://svn.enthought.com/enthought/wiki/EnthoughtVersionNumbers
./mayavi/scripts/mayavi2.py:Mayavi2 wiki page: http://svn.enthought.com/enthought/wiki/MayaVi
```

I can't guarantee that I have done all of them, but this is a step forward.

@jdmarch can you take a look please?
",6,6,[]
250,61751559,310,1288547,2016-03-04 18:29:31,2016-03-09 13:17:20,closed,Fix Camera off-centered when loading saved visualization,"Fix #283 
After reading the `vtkCamera.cxx` code (especially the `PartialCopy` function here https://github.com/Kitware/VTK/blob/v6.3.0/Rendering/Core/vtkCamera.cxx#L1242) I am convinced that `distance` should be omitted upon restoration.
",2,3,[]
251,61429379,309,1288547,2016-03-02 16:45:06,2016-03-09 13:17:53,closed,Use newer pipeline where possible,"(Giant?) Baby step towards using the new pipeline. This means removing any explicit calls to `vtk_obj.output` (where possible) and instead setting up pipeline connections.  This still needs cleanup but seems to be the bare minimum changes needed for all the tests to pass.  There are some places where the output is explicitly used to get information about the datasets but these could eventually be modified/refactored to use the `vtkInformation` classes.
",3,2,[]
252,61384750,306,1288547,2016-03-02 11:12:17,2016-03-09 12:48:19,closed,Fix mlab.move error,"Fix #292 
`camera.view_plane_normal` is a tuple and so it needs to be converted to an array before being multiplied to -1

@dmsurti, @prabhuramachandran where should I put the tests for this?  NullEngine can't be used because a scene is required.  `integrationtests/mayavi/test_mlab_*`  or create a `test_camera.py` under `mayavi/tests` ?
",3,4,[]
253,61270483,304,1288547,2016-03-01 16:40:56,2016-04-01 10:41:32,closed,SetSize needs to be called as an unbound method (ref: Kitware/VTK),"Fix #302 
The solution is found here: https://github.com/Kitware/VTK/blob/v6.3.0/Wrapping/Python/vtk/qt4/QVTKRenderWindowInteractor.py

Should we refactor the changes we make as an extension such that we can import QVTKRenderWindowInteractor from vtk directly (and then subclass etc)?
",8,4,[]
254,61096263,303,1288547,2016-02-29 15:40:23,2016-03-09 13:10:29,closed,Fix get_engine options agreement,"- If someone switches `offscreen` on, gets an OffScreenEngine created and registered, then switches `offscreen` off again, `get_engine` would still return `OffScreenEngine` if `backend==""auto"".  This doesn't make sense (or should it?).  So here I implemented a fix for this special case.
- Test for `get_engine` is made more robust by using `assertIs` instead of `assertIsInstance` as NullEngine, EnvisageEngine, OffScreenEngine are all subclass of Engine (so only L40 of the master `test_engine_manager.py` is dubious).  But this is a crucial distinction for the new test added in this PR
",4,2,[]
255,61036612,301,1288547,2016-02-29 07:06:25,2016-03-02 15:27:11,closed,Updated docs for 4.4.4,"The docs updated for 4.4.4 release.
",0,1,[]
256,61035462,300,1288547,2016-02-29 06:50:47,2016-03-02 15:26:21,closed,Changes for 4.4.4 release,"1. Bump up the version number.
2. Update the change log.
",1,2,[]
257,60984231,299,1288547,2016-02-28 08:49:11,2016-03-09 13:09:43,closed,Add vtk 7.0 support,"This implements #288 to add support for VTK 7.0.
- [X] Fix custom module support
- [ ]  ~~Fix `vtkSpanSpace.Resolution` default value. Should be `100`.~~ (Haven't seen this again) 
",7,6,[]
258,60839027,298,1288547,2016-02-26 13:05:26,2016-02-27 11:55:30,closed,Fix cutter,"Fixes #164.  There are potentially more pipeline changes to make but will be done in a separate PR.
",1,4,[]
259,60681689,297,1288547,2016-02-25 13:56:07,2016-02-26 17:47:52,closed,Fix QVTKRenderWindowInteractor._get_win_id(),"Under Python 3 and Windows, the conversion str(WId) will return
the representative string of the object instead of the integer id
as string. This fix mirrors the behaviour of VTK's own
QVTKRenderWindowInteractor.

For more information on this bug, see
 http://vtk.1045678.n5.nabble.com/OpenGL-fails-to-initialize-for-Windows-7-VTK-7-0-td5736723.html
",2,1,[]
260,60179236,296,1288547,2016-02-22 14:19:10,2016-02-27 05:37:38,closed,Include OffScreenEngine in get_engine,"This PR is proposing an enhancement so that when the `mlab.options.offscreen` is True and `options.backend` is not ""envisage"" or ""test"", the `mlab.get_engine()` function would return an `OffScreenEngine`.

This will remove the need to switch on `mlab.options.offscreen` before instantiating any `Engine`.

I haven't proceeded with test cases yet.  I would to know whether this is a good idea or not.
",4,5,[]
261,60046062,295,1288547,2016-02-20 11:45:55,2016-02-23 09:00:05,closed,Update docs links to code.enthought.com,"For #256 

@jdmarch can you take a look please?
",4,3,['docs']
262,60045181,294,1288547,2016-02-20 11:02:12,2016-02-27 05:40:47,closed,Update installation guide,"I have added the mention of Qt in the installation guide, added the use of pip, updated links and ETS installation instructions (which I am tempted to remove and leave it the user to follow the link).
I have also updated the requirements and added notes on the latest versions of VTK.

Notes:
1.  I have not checked the Windows and Mac OS Snow Leopard sections
2. ""numpy > 1.1.1"" is taken from PyPI page of mayavi, I have not tested it myself

Related to #290 
@prabhuramachandran, @jdmarch can you take a look please?
",5,4,['docs']
263,59973756,293,1288547,2016-02-19 16:39:07,2016-02-23 19:09:14,closed,Update doc setup,"Previous build of documentation may have relied on cached files.  I need to make these changes in order to build the documentation properly.  
@dmsurti , @prabhuramachandran Can you verify this please?
I am using Sphinx 1.3.5
",2,6,['docs']
264,59716611,291,1288547,2016-02-17 22:06:25,2016-02-24 05:41:42,closed,Allow TVTK to be used without X,"Currently this is not possible since there are imports to traitsui.api.
For example if one is connected to a machine via ssh and no X11
forwarded and simply does `from tvtk.api import tvtk`, the application
will close.  This should allow a user to use TVTK without a UI/X server
just as they would with VTK.
",5,4,[]
265,59660691,290,1288547,2016-02-17 15:33:59,2016-02-27 12:01:46,closed,Update docs to use Qt instead of wx.,"@jdmarch -- could you please review this?  Thanks.
",5,4,[]
266,59389814,289,1288547,2016-02-15 16:59:42,2016-02-17 14:22:58,closed,make sure the shape matches the size of array in `to_array`,"This is for issue #197 
@prabhuramachandran, @dmsurti  can you take a look please?
",5,3,[]
267,58634548,286,1288547,2016-02-08 16:44:41,2016-02-09 09:21:11,closed,Fix to avoid multiple identical keys in keyPressEvent,"In the Qt implementation of tvtk's `QVTKRenderWindowInteractor`, I propose to truncate the key pressed to first character. This has been tested to avoid exceptions thrown by `SetEventInformationFlipY` if slow machine leads to multiple times the same key in a given event.

Fixes https://github.com/enthought/mayavi/issues/281
",2,1,[]
268,58368626,284,1288547,2016-02-04 23:50:52,2016-02-17 14:35:34,closed,make sure that the __file__ points to the srcipt file when running scripts,"I recently faced a problem were running a script from Mayavi2 will mess-up the `__file__` attribute of the script. Using the `__file__` attribute is common for loading data so having the atrribute point to the right path is important.

The change is small and looks harmless, but I am not completely sure. I would also like ideas on how to test this.

@dmsurti  and @prabhuramachandran  please have a look 
",1,1,[]
269,56820327,278,1288547,2016-01-21 22:37:18,2016-01-22 11:04:37,closed,Do not use get-pip or wheels when upgrading pip,,1,1,[]
270,53005966,269,1288547,2015-12-08 16:46:46,2016-01-21 19:34:56,closed,Check for a `find` method of parsed VTK docstring,"The VTK parser method `get_method_signature` now uses `hasattr()` to confirm that the `__doc__` attributes it is inspecting do in fact have valid string methods, prior to calling any of those methods.

This fixes #261 – a bug that, without this change, will persist for me when building mayavi on OS X (10.10 and 10.11) regardless of whether I apply PR #247 (q.v. http://git.io/vRS8E).
",3,1,[]
271,52011908,268,1288547,2015-11-27 16:45:19,2016-01-21 19:32:47,closed,Branch0,,0,4,[]
272,51853287,266,1288547,2015-11-25 22:30:19,2016-01-21 19:33:44,closed,Partial support for python3 sphinx-build,"Fedora recently (and briefly) shifted /usr/bin/sphinx-build to use python3.  mayavi build breaks with:

```
sphinx-build -b html -d build/mayavi/doctrees   source/mayavi build/mayavi/html
Running Sphinx v1.3.1
making output directory...
Exception occurred:
  File ""/usr/lib/python3.5/site-packages/sphinx/application.py"", line 429, in
setup_extension
    mod = __import__(extension, None, None, ['setup'])
  File
""/builddir/build/BUILD/mayavi-4.4.3/docs/source/mayavi/sphinxext/traitsdoc.py"", line
129
    print ""[numpydoc] Phantom importing modules from"", fn, ""...""
                                                    ^
SyntaxError: Missing parentheses in call to 'print'
```

and other similar python3 issues.  This is a partial fix for them.  It's still failing with:

```
Running Sphinx v1.3.1
making output directory...
Extension error:
Could not import extension traitsdoc (exception: No module named 'compiler')
```

But I'm done for now, and Fedora has switched back to python2 for sphinx-build for now.  But it will be updated at some point.
",1,1,[]
273,47588783,255,1288547,2015-10-13 21:08:41,2016-03-09 13:55:30,closed,Bug #163 contour3d() shows only one contour with contours = N,"Fixes #163 
1. When auto contour is True make sure contour filter is getting updated
2. Update contour unit test to check number of contour points before and after auto_contour is True
3. Update contour unit test to check contour values are within min_contour and max_contour values 
",1,8,[]
274,44648954,251,1288547,2015-09-10 10:05:29,2015-09-10 12:59:53,closed,Fixed broken link,"Fixed 404 broken link in the left-hand side menu bar
",1,1,[]
275,44415611,250,1288547,2015-09-08 10:25:10,2016-01-21 07:17:32,closed,Python3 support,"The aim of this PR is to solicit feedback and merge this early for those who want to cut themselves on the bleeding edge.  

This adds experimental Python3 support for Mayavi.  To use it one requires a recent version of apptools and envisage (by recent I mean that these PRs should be merged https://github.com/enthought/apptools/pull/54 and https://github.com/enthought/envisage/pull/61 ).

It requires the master branch of pyface. 

It will require the latest version of VTK from their git repository (https://gitlab.kitware.com/vtk/vtk) and a fresh build of VTK configured for Python3.  I have not bothered with travis CI support at this point due to the complexity of doing that.  These changes pass all current 2.7.x tests on travis so should be safe to merge.
## Status and known issues
- The changes are compatible with Python 2.x and 3.x.  I have tested on 2.7.x and 3.4.x.
- All the tvtk tests pass.
- There are a couple of random failures in the mayavi tests.  These may be version specific issues but need more investigation.
- The integration tests mostly run fine but blocks on exit (with PyQt) so if you run one of them you need to kill it to run the next.  This can be investigated later.
- mlab works quite well.
- The mayavi2 application itself has a few issues that seem pyface related and will be investigated later, notably the persistence of the workbench perspectives are not pickled/unpickled properly..
",20,28,[]
276,44411195,249,1288547,2015-09-08 09:39:37,2016-02-24 12:38:52,closed,Ensure cutter is updated when cut plane is changed.,"Fixes #164.
1. The implicit plane fires `pipeline_changed` which ensures `cutter` is updated.
2. Unit test to test with both structured and unstructured data that cutter output changes when cut plane normal/origin is changed.
3. Integration test.
",1,7,['bug']
277,43889841,247,1288547,2015-09-01 15:29:06,2016-01-22 11:06:15,closed,Update to VTK Version 6.3,"This PR tests Mayavi compatibility with VTK 6.3 official release.
",7,9,['new-vtk-version-compat']
278,43009502,245,1288547,2015-08-21 07:02:18,2015-09-01 14:28:15,closed,Bump up development version after 4.4.3 release,"Bump up development version to 4.4.4.dev0
",1,1,[]
279,42211471,241,1288547,2015-08-12 07:28:52,2015-08-12 12:09:46,closed,Changes for 4.4.3 release,"This is new PR opened as the earlier PR #238 was mistakenly merged and reverted (PR #240). This is same as PR #238.
",2,1,['release-branch']
280,42210197,240,1288547,2015-08-12 07:07:51,2015-08-12 07:16:33,closed,"Revert ""Changes for the 4.4.3 release""","Reverts enthought/mayavi#238
",1,1,[]
281,42100462,239,1288547,2015-08-11 07:36:48,2015-08-12 15:59:33,closed,Updated docs for 4.4.3 release,"The updated docs for the next Mayavi release 4.4.3.
",2,3,['gh-pages']
282,42100266,238,1288547,2015-08-11 07:33:27,2015-08-12 07:03:31,closed,Changes for the 4.4.3 release,"1. Bump up the version number.
2. Update the change log.
",3,2,['release-branch']
283,42002356,237,1288547,2015-08-10 09:39:15,2015-08-11 01:52:49,closed,Remove redefined trait from scene model ,"Based on @prabhuramachandran  comment for PR #231, remove redefined light manager trait from scene model, which is not necessary. This was added when `closed` event was used to remove ref cycles.
",2,1,['refactor']
284,41559943,236,1288547,2015-08-04 11:33:43,2015-08-04 14:10:03,closed,speed-up-wx-travis-ci-build,"Use the python-wxtool package that is now whitelisted for installation
",4,3,[]
285,41120297,235,1288547,2015-07-29 13:04:20,2015-08-10 09:12:41,closed,BUG: Selection of LUT broken with qt backend.,"With the qt backend it is impossible to select the right `lut_mode`.
This fixes the problem and fixes #147.
",1,2,['bug']
286,40700600,231,1288547,2015-07-23 18:07:52,2015-08-06 09:04:04,closed,"Remove ref cycles in MlabSceneModel, Core Scene","This is a follow up to PR #218 for memory leaks.

---

Overall the API is evolving as such: The Scene API has a closed event handler which should be invoked from the client app. When a scene is closed, the engine closed handler is also invoked. Also for example: if an app uses `MlabSceneModel` then setting `closed = True` in the app's appropriate handler (such as when UI is destroyed) should ensure that scene objects are garbage collected.
## Final Update

Added tests for `DecoratedScene, Mayavi UI Scene` and minor refactoring: invoke close() fn for scenes and close engine when it is stopped.
## Update 4

This removes ref cycles in `mayavi.core.Engine` and
1. Scenes it manages
2. Root preferences helper whose `show_helper_nodes` trait referred back to Engine via a `lambda`.

The engine now has a `closed` event handler which is invoked when the scene is closed.
## Update 3:

This removes the ref cycles in `mayavi.core.Scene` and:
1. Mayavi core engine
2. Mouse pick dispatcher which has a `__del__`.

A closed event handler has been added to scene which is also now invoked from MlabSceneModel.
## Update 2:

Refactored the unit test design for garbage collection. There is a base class TestGarbageCollection in `tvtk.tests.common` that has a method `check_object_garbage_collected` which does all the housekeeping. A test method invokes this `check_` method passing a function for object creation and another optional function to handling closing of the object, if any, where the object is the one to be tested for gc.

There are 2 test_garbage_collection.py modules, one each for `tvtk` and `mayavi` packages. These now cover garbage collection of Scene, SceneModel and MlabSceneModel objects.
## Update 1:

This removes cycles between MlabSceneModel and:
1. Mayavi Core Scene
2. Mayavi Core Engine

These cycles are cleared in the `closed` event of the scene model.

A unit test case is added to test the reference cycles.

As MlabSceneModel is a subclass of SceneModel, that has also been tested for reference cycles. SceneModel also has `closed` event handling now.

Minor addition to scene ref cycle test case for testing weakref as well after gc,
",3,21,['bug']
287,40648686,230,1288547,2015-07-23 08:39:54,2015-08-04 12:39:21,closed,Clean up memory leaks implementation in #218,"This is a clean up for PR #218.
1. Remove `psutil` dependency. Moved the `MemoryAssistant` from `tvtk.common` to `integrationtests.common`.
2. Conditional import of `psutil`.
3. Call super `_closed_fired` for `wx Scene` implementation.
",2,4,['refactor']
288,40454663,229,1288547,2015-07-21 13:06:15,2015-07-22 14:38:59,closed,Minor doc update,"This PR updates the documentation in order to address issues #181 and #186.
",2,6,['docs']
289,40229916,223,1288547,2015-07-17 13:18:23,2015-08-04 15:23:15,closed,Fixes #173: Allow long keys when looking up points,"Fixes #173.

The special code generation in wrapping code is modified to allow look up with `long` keys in addition to existing int.

Test case added to test look up with `int`, `long` keys and also `get_point`.

---

Travis may fail for `qt4` with object_cache error, known issue and `wx` for wx src download problems. See PR #221 and #222.
",1,5,['bug']
290,40229292,222,1288547,2015-07-17 13:10:06,2015-07-20 07:05:45,closed,Download the wxPython source from github,"This PR fixes the problems with downloading the wx sources from sourceforge, by using the release files provided in github
",1,5,['bug']
291,40147088,221,1288547,2015-07-16 16:15:09,2015-07-20 09:56:18,closed,Fixes #178: Fix vtk cell insertion,"Fixes #178.

When a cell is inserted in VTK cell array, the number of cells is updated by ensuring `update_traits` is called.

Test added to check the number of cells in empty cell array and adding 2 cells in the cell array.

TVTK Wrapper generator `_write_tvtk_method` refactored to receive `klass` name as parameter, as `klass name` and `method name` are required to ensure `update_traits` call is added only for `cell_array.insert_next_cell`.
",3,5,['bug']
292,40103395,220,1288547,2015-07-16 07:58:13,2015-07-23 02:00:30,closed,Fixes #165: Fix Glyph to handle masking of input points,"This fixes #165. When mask input points are set, the glyph is now connected to the mask points filter.

Test Details: 
- [Added] to check the number of glyph input points when mask points filter random mode is set
- [Added] to check the number of glyph input points when mask points filter random mode is not set
- [Updated] existing test to check the number of glyph input points, without mask filter

For radom mode: see this: http://www.vtk.org/doc/nightly/html/classvtkMaskPoints.html#a21c7c2210111116f4b06ba9f020d0ed0
",1,3,['bug']
293,40015387,218,1288547,2015-07-15 12:08:20,2015-07-20 07:03:33,closed,Remove cycles from tvtk scenes,"This PR updates #212 

In more detail:
- The test for the `TVTKScene` is reworked. 
- A separate tests is provided for the pyface based tvtk `Scene`. This test will use the default ets toolkit and currently will be skipped on `wx` (see #216)
",1,24,[]
294,40001638,217,1288547,2015-07-15 09:07:39,2015-07-15 13:54:20,closed,Fix #213: the VTKFileReader when using standalone output not updated,"Fixes #213.

When using stand alone, the assign attribute filter is not updated which results in file reader output not updated.
1. A test case has been added which test various datasets.
2. This file reader works fine in a pipeline and is tested in integration
   tests.

Please note that if a `*.vtk` file exists without point or cell data, then the assign attribute will throw a harmless warning as such which can be safely ignored:

`vtkAssignAttribute (0x120b38760): Data must be point or cell for vtkDataSet`

This warning results from: https://gitlab.kitware.com/vtk/vtk/blob/master/Filters/Core/vtkAssignAttribute.cxx#L289
",7,5,['bug']
295,39861083,215,1288547,2015-07-13 21:55:06,2017-08-06 17:07:57,closed,Added setting of QVariant for example to work with PyQt4,"Hi Guys,

The qt embedding example with PyQt didn't work for me. Not on my mac, neither on my linux machines. I think it will also hold for others. Apparently, the QVariant also needs to be set before loading the PyQt modules. Couldn't find any other way to let you know, so I added this to the example here so it's easy to change.

kinds regards,

Mike Wilmer
",2,1,[]
296,39452102,212,1288547,2015-07-08 08:22:08,2015-07-20 07:04:24,closed,Fix memory leaks bug - v1,"This is first of a set of fixes to fix memory leaks. The fixes will be rolled out gradually in different milestones.

This removes the reference cycles between Scene, Light Manager, Picker and VTKRenderWindowInteractor. It also invokes closed event handlers when the scene is closed.
",9,17,[]
297,38925966,209,1288547,2015-06-30 21:23:48,2015-07-01 13:28:43,closed,Use travis ci containers,"This PR converted the travis-ci tests to use the new travis-ci containers so that the builds start faster.

In more details:
- Tests are run on both qt and wx
- Coverage is now uploaded onto codecov.io (https://codecov.io/github/enthought/mayavi)
- caching is used to speed up builds

**note**: The integration tests hang with Qt so they are skipped
",2,23,[]
298,38686711,208,1288547,2015-06-26 20:33:02,2015-07-01 07:00:02,closed,Update README.rst,"fixes #185 
",3,7,['docs']
299,38022890,199,1288547,2015-06-18 15:57:49,2015-06-22 12:13:41,closed,Add appveyor CI runs for windows tests,"This PR provides basic CI testing on windows using appveyor:

In more details:
- appveyor is setup to run on commited changes and PRs
- dependencies like numpy are cached 
- vtk 6.2 with python is downloaded from http://www.vtk.org/download/, The python package is installed (hacked) into the system python using the `PYTHONPATH`
- no integration tests are run because the build freezes
- fixed issues with instantiating:
  - vtkHardwareSelection and vtkOpenGLHardwareSelector on 6.2.
  - vtkAxesTransformRepresentation on 5.8.
",5,42,['feature']
300,37913466,198,1288547,2015-06-17 15:27:37,2015-06-24 05:35:44,closed,BUG: Try to fix sdist command (fixes #177),"Have checked this with the `check-manifest` tool to make sure we are not
missing anything.
",3,2,['bug']
301,37547191,196,1288547,2015-06-12 09:49:23,2015-06-12 10:13:31,closed,bump version to 4.4.3.dev0,,1,1,[]
302,37444891,194,1288547,2015-06-11 09:35:17,2015-06-12 03:22:36,closed,Updated docs for Mayavi release 4.4.2,"The updated docs for the next Mayavi release 4.4.2.
",1,1,['docs']
303,37444778,193,1288547,2015-06-11 09:33:56,2015-06-12 03:22:14,closed,Changes for the next Mayavi release 4.4.2,"1. Bump up the version number.
2. Update the change log.
",1,2,['release-branch']
304,37239082,191,1288547,2015-06-09 10:28:52,2015-06-11 08:26:03,closed,Ignore false positives for built in methods/functions when parsing,"This implements support for #190 (and hence #159).
- When generating the TVTK bindings for VTK python wrappings, for VTK version 6.2, due to the API changes, a few additions (example: EventIds in vtkCommand and DesiredOutputPrecision in vtkAlgorithm) are falsely deteced as methods to be parsed. These are ignored when generating the tvtk methods.
- The method signature implementation now checks for VTK version 6.2 and ignores those methods which are not built in functions or methods. The method that writes out the TVTK method then ignores such signatures which are `None`.
- Tested on OS X 10.10: `python setup.py build` with VTK 6.2 egg now runs without errors.
- Tested for backwards compatibility with VTK 6.1 and VTK 5.10.
",8,8,['feature']
305,36295035,184,1288547,2015-05-27 11:47:09,2015-06-11 06:37:03,closed,Bump up development version,"Update the version to 4.4.2.dev0 after 4.4.1 release.
",1,1,[]
306,34635959,175,1288547,2015-05-04 13:11:11,2015-05-06 13:22:01,closed,Updated docs for Mayavi release 4.4.1,"The updated docs for next Mayavi Release 4.4.1.
",0,1,[]
307,34635887,174,1288547,2015-05-04 13:09:53,2015-05-06 13:19:12,closed,Changes for the next Mayavi release 4.4.1,"1. Bump up to version 4.4.1.
2. Document the fixes.
3. Update the copyright year.
",0,3,[]
308,33849101,172,1288547,2015-04-22 11:28:53,2015-04-22 14:55:04,closed,Fix OS X trackpad scrolling bug by throttling wheel events.,"This commit works around a qt bug, affecting scrolling on trackpad on mac.
(https://bugreports.qt-project.org/browse/QTBUG-22269)

QVTKRenderWindowInteractor fails to keep up with the rate at which QWheelEvents come in.
We accumulate them and send them once every 25ms.
",1,1,[]
309,28631776,160,1288547,2015-02-04 11:38:12,2015-05-14 06:41:30,closed,Bump up development version,"Update to development version 4..4.1.
",1,1,[]
310,26575604,157,1288547,2014-12-25 06:52:18,2015-01-14 15:05:52,closed,Updated docs for mayavi 5.0.0 release,"This updates the docs for mayavi 5.0.0 release.
",1,4,[]
311,26575285,156,1288547,2014-12-25 06:34:22,2015-01-14 15:04:17,closed,Changes for the next Mayavi release which uses VTK's new pipeline.,"1. Bump up to version 5.0.0.
2. Document all enhancements and fixes.
3. Add self name as contributor.
",0,4,[]
312,25414017,152,1288547,2014-12-03 12:06:25,2014-12-03 13:58:35,closed,Example mri.py: Corrected name and location of MRbrain.tar.gz,"Hello,

the examples `mri.py` and `tvtk_segmentation.py`
 did not work, because a link was broken and the filenames in the example were not correct. I updated the link to `MRbrain.tar.gz` as well as its reference in the script.

Cheers,
Paul
",1,4,[]
313,25252916,151,1288547,2014-12-01 08:16:02,2014-12-22 18:10:18,closed,VTK Master integration,"This integrates after testing with the VTK master.
1. Volume Mapper, Texture attribute changes.
2. Function in common API to set input data at a port.
3. Examples for stanford repo models (bunny, lucy , dragon)
4. Fixes for integration with GeoCanopy (scalar bar title and dynamic ordering of dimensions)
5. Fix MRI data URL.
",6,8,[]
314,24057915,148,1288547,2014-11-07 15:00:33,2014-11-13 17:22:49,closed,Fix vtk6 integration,"This PR fixes a few issues found after migrating to VTK 6 demand driven pipeline.
1. Fix Connection topology issues in Cutter, Outline Filter and Probe Filter.
2. Fix vtkInformationRequest for data objects failed in flight graph and picker examples. 
3. Fix could not generate normals warning thrown by vtkTubeFilter by using vtkCleanPolyData filter
",2,7,[]
315,21650881,146,1288547,2014-09-23 14:52:28,2014-09-24 08:38:04,closed,Avoid ndarray comparisons with None.,"In future versions of numpy, this will not return `False` as it currently does.

Fixes #144
",4,4,[]
316,19965494,139,1288547,2014-08-19 08:05:44,2014-08-19 08:10:46,closed,A random attempt at fixing a failing test,,0,2,[]
317,19916734,138,1288547,2014-08-18 13:16:49,2014-09-24 09:02:35,closed,BUG: Gracefully handle non-Latin-1 keypresses.,"Gracefully handle some chords (e.g. Alt-T on OS X) that the OS generates
Unicode characters that do not fit into 8-bit `char`s that are expected by VTK.
",12,1,[]
318,18521987,137,1288547,2014-07-17 11:14:00,2014-07-17 13:32:12,closed,Fix TraitError from Threshold._update_ranges.,"Fix for issue #136.
",13,4,[]
319,16298472,133,1288547,2014-05-23 22:48:37,2014-05-28 15:09:48,closed,Update installation documentation links.,"This PR updates some of the links in (mainly) the installation notes. In particular,
1) Links to EPD are now replaced with links to Canopy.
2) Links to `svn.enthought.com` are replaced with something that exists, usually `docs.enthought.com`.
I just removed the references to `svn.enthought.com/enthought/wiki/Install` as there did not seem to be anything to replace this with. I also removed the link to IntelMacPython25 build notes, as this also has no current replacement and is thought to be obsolete.

Please note that I did not try really update the installation notes, this PR just attempts to fix links that are either broken or deprecated, and leaves it at that.

@cgodshall : This should make the changes you desire.
",5,7,[]
320,14966597,131,1288547,2014-04-21 13:16:38,2014-04-21 13:32:45,closed,Upgrading to new pipeline phase 2,"This entails: fixing integration tests and fully moving onto the demand driven pipeline.
",6,1,[]
321,13081295,122,1288547,2014-03-01 08:30:43,2014-03-01 08:30:51,closed,Bump up development version.,,0,1,[]
322,13047794,121,1288547,2014-02-28 11:54:52,2014-03-01 08:24:57,closed,run coverage on travis ci builds and publish results on coveralls,"This PR adds coverage reporting on the travis-ci builds
",12,7,[]
323,12033343,118,1288547,2014-01-30 12:35:47,2014-01-30 12:47:23,closed,Update docs for 4.3.1 release.,,0,1,[]
324,12033286,117,1288547,2014-01-30 12:33:38,2014-01-30 12:40:17,closed,4.3.1 release,,0,3,[]
325,11912643,116,1288547,2014-01-27 18:08:42,2014-01-27 18:33:39,closed,Win32 specific fixes to integration tests.,"Do not show the splash screen as it requires a mouse click to go away.
Also skip the streamline test on windows.
",1,1,[]
326,11882569,115,1288547,2014-01-26 13:28:59,2014-01-27 05:45:29,closed,TEST: Fix integration tests to run with nose.,,0,3,[]
327,11840747,114,1288547,2014-01-24 11:20:58,2014-04-17 16:57:50,closed,Upgrading to new pipeline,"Step 1: Changing the pipeline topology. [IN PROGRESS]

Step 2: Changing the pipeline metadata

Step 3: Update only the algorithms, and not a combination of data objects/algorithms.

Step 4: (VTK 6 only): Subclass only from vtkAlgorithm and use the RequestXXXX api
",70,80,[]
328,11666791,112,1288547,2014-01-20 09:01:06,2014-01-20 10:20:26,closed,Add a test_mesh_mask_custom_colors example.,"This illustrates mlab.mesh with masking and setting up a custom
colormap.
",4,1,[]
329,11647443,111,1288547,2014-01-18 10:57:17,2014-01-18 14:27:37,closed,Fixing tests for VTK-5.6.,,2,3,[]
330,11575538,109,1288547,2014-01-16 12:17:46,2014-01-16 12:27:30,closed,Fix mlab probe data test,"This reduces the precision from 2 decimal places to 1 for the test_probe_data test as in random runs, the test fails due to minor precision error (mismatch = 1.25%).
",1,1,[]
331,11572687,108,1288547,2014-01-16 10:37:24,2014-01-16 11:09:20,closed,Run integration tests,"Many fixes to the integration tests so they can run without user intervention.  Also try to run these from travis-ci.  We use the wx backend though for this.
",4,7,[]
332,11570028,107,1288547,2014-01-16 09:05:32,2014-01-16 10:13:39,closed,Fix the MultiBlockPLOT3DReader for vtk 5,"This fixes the MultiBlockPLOT3DReader issues when introduced in place of the old PLOT3DReader. 

It sets the correct number of outputs which should be the number of blocks in the output.
",1,1,[]
333,11536807,106,1288547,2014-01-15 14:43:48,2014-01-15 14:53:08,closed,Fix mask points,"This had implications in that the mask points filter was complete unusable and would crash the app.  The test_labels integration test was also failing/crashing and is fixed.
",1,2,[]
334,11523045,105,1288547,2014-01-15 04:53:46,2014-01-15 04:57:43,closed,Fix integration tests,"Gradually fixing the integration tests so they at all run without error.  This is the first batch of fixes.
",1,4,[]
335,11480780,104,1288547,2014-01-14 05:02:43,2014-01-14 05:55:02,closed,Travis-CI error fixes.,"This is just a PR to help fix the travis-ci related errors instead of pushing constantly to master!
",1,4,[]
336,11434533,103,1288547,2014-01-12 13:11:19,2014-01-12 13:11:38,closed,Adding travis-ci config file.,,1,1,[]
337,11413485,102,1288547,2014-01-10 19:44:15,2017-08-06 17:06:58,closed,Anti-aliasing for 3D rendering (NOT Ready for Merging),"This PR allows the user to specify the anti-aliasing for 3D rendering in TVTKScene. Inorder to maintain interactivity, anti-aliasing is disabled when the user interacts with the scene and re-enabled once the interaction is finished.

Current State: Works correctly with respect to user interaction.
# Pending :
1. Tests
2. Test if the observers are released properly
3. Code cleanup
",1,2,[]
338,11391126,101,1288547,2014-01-10 06:54:41,2014-01-13 11:05:54,closed,Upgrade vtk 5 10 1 changes,"1. Bump up version to 4.3.1.
2. Update the change log.
",1,5,[]
339,11364405,100,1288547,2014-01-09 15:23:48,2014-01-09 15:24:09,closed,TEST: Add test for imshow which currently fails.,"Requires #96 to be merged for a fix.
",1,1,[]
340,11331948,99,1288547,2014-01-08 17:58:21,2014-01-09 11:43:56,closed,BUG: tvtk_doc barfs on searching for text.,"The tvtk_doc would barf when a user enters a search string.
",0,1,[]
341,11227461,97,1288547,2014-01-04 09:58:55,2014-01-09 15:51:34,closed,Fix mayavi tests after upgrading to vtk 5.10.1 (old pipeline),"1. This fixes the following 2 tests: test_poly_data_reader.py and test_image_data_reader.py as the HeaderSize attribute of vtkImageReader2 was not a LongType in the traits wrapper.
2. Fixing SphereWidget enable/disable which fails test_mlab_integration.py.
3. Upgrade PLOT3DReader to MultiBlockPLOT3DReader. This turns out to be on those examples where even though 5.10.1 has backward compatibility layer, PLOT3DReader fails. 

This PR is now good to review and merge. With this all vtk and mayavi tests pass.
",2,9,[]
342,11072262,96,1288547,2013-12-24 10:38:59,2014-01-09 15:24:34,closed,Catch TraitError when trying to set line_width.,"Trying to run the imshow example from the mayavi documentation a TraitError is thrown trying to set the line_width. This seems to be because Mayavi expects an AttributeError where a TraitError is thrown. This fixes that by also catching TraitErrors. 

``` python
import numpy
from mayavi.mlab import *

def test_imshow():
    """""" Use imshow to visualize a 2D 10x10 random array.
    """"""
    s = numpy.random.random((10,10))
    return imshow(s, colormap='gist_earth')
```
",3,1,[]
343,10894756,95,1288547,2013-12-17 13:48:20,2013-12-22 18:36:36,closed,Upgrade to VTK 5.10.1,"This PR is a WIP.

It fixes the failing tests after upgrading to VTK 5.10.1. 3 tests fail for tvtk and 2 for mayavi.

TVTK Tests
1. test_class_tree 
2. test_tvtk
3. test_vtk_parser

Mayavi Tests
1. test_customize
2. [TO BE FIXED]: test_csv_sniff
",8,10,[]
344,7706133,80,1288547,2013-08-19 19:19:15,2014-01-09 15:08:55,closed,Glyph source bugfix ,"This is a bug fix for a problem with assigning multi-dim arrays to the individual components of the vector data. 
This is because MGlyphSource stores an additional Nx3 array with the vector data and the update handlers were expecting 1-D arrays for the individual vector components. In the process of testing, fixed another inconsistency with the way scalars are treated. 

Note : I am assuming that the original intent is as follows : x,y,z,u,v,w,scalars are all allowed to be multi-dim, while points, vectors are supposed to be 2-d arrays (Nx3). Please correct me if this is not the case.
",0,2,[]
345,7447485,79,1288547,2013-08-07 14:37:36,2013-08-08 06:37:08,closed,Add intereactive superquadrics example,"Issues:
- the shadowing/color is slightly weird. Is there a nicer color scheme?
",1,3,[]
346,6215141,76,1288547,2013-06-10 08:58:52,2013-06-10 09:00:17,closed,Fix #75: Use front buffer if offscreen is False.,"This should fix issue #75.
",0,1,[]
347,6082518,73,1288547,2013-06-03 16:52:52,2013-06-03 18:28:22,closed,Fix TVTK for VTK 6,"See the commit log for details. This fixes the compilation problem for me. Now mayavi can be installed and `mlab` imported. For the rest of issues with VTK 6, see the issue #72.
",3,2,[]
348,6074783,71,1288547,2013-06-03 11:26:08,2013-06-10 08:42:41,closed,ENH: Improve `test_*_anim` functions.,"The `test_*_anim` functions never showed the animations as they did not go
through the UI event loop.  We now use the `animate` decorator to do
this.  The code is refactored a bit to reuse the non anim functions and
then use the anim version to show how the animation is done.  This
nicely shows the animate decorator as well.

Also fix the animate decorator to preserve docstrings and other metadata
by using `decorator` if available or `functools.wraps` otherwise.
",3,1,[]
349,5008103,64,1288547,2013-04-05 19:10:11,2014-01-09 15:14:46,closed,Fix tvtk class browser failure with vtkQt classes,"Fix the following error:
QWidget: Must construct a QApplication before a QPaintDevice
In the VTK class browser when VTK was built with QT/SIP support.
",2,1,[]
350,5008082,63,1288547,2013-04-05 19:09:12,2014-01-10 01:26:17,closed,fix creation of scripts on win32,,1,1,[]
351,4984589,62,1288547,2013-04-04 18:31:52,2013-04-06 17:44:28,closed,FIX: use kwargs for wxpython 2.9 compat,"The order of arguments in the constructor for wxGLCanvas has changed for wxPython 2.9 this fixes it by using keyword arguments. I haven't extensively tested if all the functionality works with wxPython 2.9, but the things I use work.
",3,2,[]
352,4554744,58,1288547,2013-03-11 20:10:46,2013-03-27 10:50:40,closed,mlab.savefig with positive magnification fix,"I tracked down the source of a fairly old bug in mlab.savefig() to some tvtk code which directs the WindowToImageFilter to use the back buffer, causing snapshots with magnification>1 to produce erroneous output.  I don't know why this design choice was made, but I ran the tvtk test suite and found no regressions.
",1,1,[]
353,3505223,57,1288547,2012-12-29 05:16:32,2012-12-29 07:54:15,closed,Correction for qthelp docs creation,"Corrects qthelp docs creation.
",1,1,[]
354,2813484,51,1288547,2012-10-29 22:44:52,2012-10-30 07:25:02,closed,BUG: Qt: fix crashing full-screen-mode.,"Previously, when you click on full-screen and press escape/q/e it would
segfault.  The earlier full screen would also not allow the user
complete interaction with VTK widgets and the like.  This has been fixed
although the behavior of the full-screen is different -- it basically
full-screen's the entire application.  On an mlab window the behaviour
will be almost as before.  This turns out to be quite useful in
practice.
",1,1,[]
355,2811328,50,1288547,2012-10-29 20:12:27,2012-10-29 22:38:45,closed,NEW: Adding a Qt version of the gradient editor.,"This was the last widget that was never ported to Qt.  This
checkin refactors the Gradient editor nicely and we now have both Qt and
wxPython versions.  With this, all of Mayavi's UI should be usable on
Qt.  Finally!
",3,1,[]
356,2495050,49,1288547,2012-09-30 10:09:13,2012-09-30 12:24:07,closed,Update setMargins to setContentsMargins according to the new PyQt API style.,"This patch make sure the examples are updated to the latest PyQt API, changing the old setMargins to the newest stContentsMargins.
",1,1,[]
357,2227633,48,1288547,2012-09-02 20:43:10,2012-09-03 05:33:11,closed,PEP8 on the examples,"PEP8 compliance on the example folder.

Most of these examples fail on my box. I assume it's because I don't have enough RAM.

Thanks,
N
",7,1,[]
358,2225296,47,1288547,2012-09-01 17:18:12,2012-09-02 13:22:50,closed,PEP8 fixes,"Big PR with a lot of PEP8 fixes, and pyflakes fixes.

Thanks,
",0,2,[]
359,2181946,45,1288547,2012-08-28 15:44:47,2012-08-28 20:57:39,closed,mlab.imshow fails with extent keyword argument,"Replacing module.actor.actor with module.actor. Not sure if this will break other things but this changes allows mlab.imshow(img, extent=[-.1, .1, -.1, .1, 0, 0]) to work which did not work previously. Also the integration test cases run fine.
",5,1,[]
360,2109999,42,1288547,2012-08-21 03:58:53,2012-08-21 05:02:39,closed,added extent argument to outline of the first surf,"The current example has bottom part of the outline missing for the first plot.
",2,1,[]
361,1779198,41,1288547,2012-07-12 14:54:28,2012-07-12 14:55:33,closed,"added numpy (as np), mayavi.mlab import statements and changed numpy to ...","Added import statements for numpy and mayavi.mlab so the example works out-of-box
",2,1,[]
362,1776554,40,1288547,2012-07-12 09:25:43,2012-07-12 10:17:24,closed,Flight Graph's csv parsing failed,"Hello,

The flight graph csv' parsing failed on my computed (not sure why), so I changed the format from excel tab to ""normal"" coma delimited csv. I also did some pep8 changes.

Thanks,
Nelle
",3,2,[]
363,1455587,33,1288547,2012-05-30 14:46:21,2012-05-30 17:52:04,closed,Fixes an error when using 'f' to set focal-point in the mayavi gui.,"See: https://github.com/enthought/mayavi/issues/21
",1,1,[]
364,1409295,30,1288547,2012-05-23 08:57:18,2012-05-30 08:31:27,closed,Fix contours argument when creating a contour surface,"This corrects the documentation for the contours argument and allows setting a list of contour values for a contour surface, without having to also set auto_contours to False manually (which nobody would know to do without reading the source code).

This fixes issue #29.
",1,2,[]
365,1129286,26,1288547,2012-04-09 18:21:27,2012-04-11 12:28:28,closed,ENH: Add masking to mesh.,,1,1,[]
366,851714,25,1288547,2012-02-19 16:07:10,2012-02-19 18:15:13,closed,FIX: don't wrap vtkQt classes,"Don't build TVTK classes for vtkQt classes, which currently doesn't work, see 

https://github.com/enthought/mayavi/issues/24

As far as I can tell wrapping vtkQt classes should not be necessary, but I may be wrong.
",1,1,[]
367,798472,23,1288547,2012-02-08 11:54:01,2012-02-25 16:49:22,closed,Passing the single coordinates to the method instead of the tuple.,"mouse_dispatcher calls a generated method, which has two signature: V.pick(float, float, float, Renderer) -> int, and V.pick((float, float, float), Renderer) -> int.

In my system, the second one is never used. Instead the first one is used and an error is thrown, due to the wrong number of args. Therefore, passing the single coordinates fixes the problem.
",3,3,[]
368,511836,18,1288547,2011-11-19 23:03:14,2011-11-21 14:33:23,closed,fix wx keyboard shortcuts,"wx < 2.9.2 prefers CmdDown to check for a modifier key, where as later versions prefer ControlDown.

This fixes a problem with ctrl+click being treated as a right click on OS X.
",1,1,[]
369,126563,5,1288547,2011-04-25 15:34:30,2011-04-25 16:13:42,closed,Fixes for PySide toolkit,"Please read comments at diff page.
",8,2,[]
370,72651,1,1288547,2011-02-13 23:40:07,2011-02-15 06:37:12,closed,Trait view fix,"Fix the trait_view() method which I broke. Now behaves correctly in the default case.
",0,1,[]
