index,id,number,repo_id,created_at,closed_at,state,title,body,total_comments,total_commits,labels
0,683198048,143,54834492,2021-07-04 16:03:30,2021-07-04 16:03:39,closed,Hotfix: remove import of deleted method,Fixes #142.,0,1,[]
1,683063675,141,54834492,2021-07-03 18:47:59,2021-07-03 18:48:14,closed,Download example data from GitHub,,0,1,[]
2,683062148,140,54834492,2021-07-03 18:35:20,2021-07-03 18:35:29,closed,Remove geoplot from tests,"These don't make sense with geoplot gone.﻿
",0,1,[]
3,683061898,139,54834492,2021-07-03 18:33:05,2021-07-03 18:33:11,closed,Update README,"Lint the README.﻿
",0,1,[]
4,683060777,138,54834492,2021-07-03 18:24:30,2021-07-03 18:24:36,closed,Remove Binder materials,Unfortunately I don't really have enough time to put in the maintenance required to keep the Binder quickstart resource in an operable state.,0,1,[]
5,683060126,137,54834492,2021-07-03 18:18:06,2021-07-03 18:21:13,closed,"Lint, removed deprecated stuff",,0,1,[]
6,624262399,132,54834492,2021-04-27 12:28:10,2021-04-27 16:05:07,closed,Correct return-type when inline=False,"The plot functions do not return `matplotlib.figure.Figure` instances but `matplotlib.axis.Axis` instances when `inline=False`. Technically, they can also return `matplotlib.axes._subplots.AxesSubplot` instances when we are dealing with subplots, but I have left this out for clarity and since the subplot class inherits from the axis class, making them behave in the same way essentially. If you prefer, I can clarify this return-type behaviour in the documentation as well.",1,1,[]
7,545975230,125,54834492,2020-12-28 07:39:44,2020-12-28 16:13:38,closed,"docs: fix simple typo, seperate -> separate","There is a small typo in CONTRIBUTING.md.

Should read `separate` rather than `seperate`.


Semi-automated pull request generated by
https://github.com/timgates42/meticulous/blob/master/docs/NOTE.md",0,1,[]
8,525410607,124,54834492,2020-11-23 02:32:55,2020-11-23 17:34:43,closed,feature: simple memory optimization with a numpy parameter,Change to a simple optimization of memory due to the function of np.zeros being standard float64 to float32.,1,1,[]
9,493585909,121,54834492,2020-09-26 14:46:59,2020-09-26 22:13:23,closed,Update Readme.md to Correct a typo in Heat Map,"ORIGINAL:
""Entries marked `<1` or `>-1` are have a correlation that is close""

AFTER CORRECTION:
""Entries marked `<1` or `>-1` have a correlation that is close""",1,1,[]
10,456550848,117,54834492,2020-07-25 02:04:53,2020-07-26 13:01:21,closed,fixed error 116.,,0,1,[]
11,440937586,111,54834492,2020-06-27 17:11:43,2020-09-19 16:55:24,closed,Stop pointing to old version of python since package supports 3.4+,,1,1,[]
12,439582855,110,54834492,2020-06-25 00:12:41,2021-07-03 19:07:18,closed,introduce calculation of missing value patterns,This PR introduces a function to calculate missing patterns as described in https://github.com/ResidentMario/missingno/issues/101.,2,2,[]
13,373187731,98,54834492,2020-02-10 15:10:02,2020-02-10 16:33:40,closed,Add license to setup.py,,0,1,[]
14,342751893,97,54834492,2019-11-19 15:50:50,2019-11-19 18:02:21,closed,Include additional files in sdists,"Include some additional useful files in sdists.  In particular, include the license file, since the terms of the license requires it.  Also include tests, documentation, and files for downloading data if desired.",1,1,[]
15,301094044,94,54834492,2019-07-25 11:08:06,2021-07-03 18:12:45,closed,Introduce orientation to bar plot,"The dendrogram has an option to change the orientation from top-down to left-right. This is convenient when having a large amount of columns. The bar plot misses this option. To make the bar plot effective for large numbers of columns, it should have a similar behaviour. 

This pull requests adds the basic functionality. The `figsize` is not yet adjusted, this should be added.",8,3,[]
16,295817312,92,54834492,2019-07-09 15:48:53,2019-07-09 15:49:04,closed,Pull f-strings from code to maintain py3.4 compatibility.,,0,1,[]
17,295816408,91,54834492,2019-07-09 15:46:44,2019-07-09 15:47:01,closed,Remove deprecated function from README.,,0,1,[]
18,295815003,90,54834492,2019-07-09 15:43:27,2019-07-09 15:43:38,closed,Deprecate the geoplot function.,"This very rarely used functionality is now a `geoplot` (package) recipe. For an example, see the [San Francisco Street Trees example](https://residentmario.github.io/geoplot/gallery/plot_san_francisco_trees.html) in the `geoplot` gallery.",0,1,[]
19,295481983,89,54834492,2019-07-08 20:19:29,2019-07-08 20:19:44,closed,Tweak bar subplot sizing behavior.,,0,1,[]
20,295471143,88,54834492,2019-07-08 19:44:47,2019-07-08 19:45:00,closed,"Add axis param, return axis objects, and deprecate inline","This PR (1) addresses #83 by adding an `ax` argument for use in subplotting and (2) deprecates the `inline` argument, pending removal in the release after the next. `inline` was a poor API decision. It doesn't do much anyway, so I expect that this will result in very little actual code breakage for users.",0,1,[]
21,295369904,87,54834492,2019-07-08 14:46:43,2019-07-08 14:47:00,closed,Implement columnar sorting in bar and heatmap.,"This PR addresses #86 and supersedes #84.

The `sort` parameter performs a row-major sort on the elements of the input `DataFrame` based on the nullity count of the entry. An `""ascending""` sort will sort rows from low to high, whilst a `""descending""` sort will sort rows from high to low.

This is a useful feature of `msno.matrix` because it allows you optionally inject some order into the resultant matrix. However, this does nothing for any of the remaining plot types because every other plot type in `missingno` is row-sort independent. E.g. resorting the data will have no effect on the total null count, which is what `bar` cares about, nor the correlation score, which is what `heatmap` cares about (and so on).

For two of these other plot types (`heatmap` and `bar`), a column-sort makes sense; e.g. it makes sense to sort the *columns* based on how many cumulative null values they have. This PR implements this behavior for the `sort` parameter on these plots, using a `axis={""rows"", ""columns""}` internal argument on `missingno.utils.nullity_sort`.

There is admittedly a little bit of user surprise implicit in the swap of sort direction from one plot to another, but I think it makes sense to implement things this way. It doesn't make sense to change the sort axis in `msno.matrix`, as in #84, because that is much less useful to the user. If you want that, just use `msno.bar` instead.

This PR also removes the `sort` parameter and `nullity_sort` call for the plots for which sorting the `DataFrame` before plotting does not do anything regardless of sort order: `geoplot` and `dendrogram`.",0,1,[]
22,260487055,84,54834492,2019-03-12 18:31:45,2019-07-08 14:47:22,closed,Nullity sort on columns,"this achieves the functionality expected from the function. 

df.count(axis=0) returns counts by columns.",4,2,[]
23,168984833,64,54834492,2018-02-13 23:28:26,2018-02-14 02:47:30,closed,add explicit package names to paper.md,"Nothing more than a suggestion, but makes the citations easier to understand :)",1,1,[]
24,168751616,63,54834492,2018-02-13 04:29:33,2018-02-13 22:40:55,closed,Run the Quick Start/README in Binder,"This PR makes the Quick Start runnable in [Binder](https://mybinder.org/). It adds a notebook version of the example code in README.md, an environment.yml to install its dependencies with conda and a postBuild to pre-install the missingno_data package from Qulit.",1,5,[]
25,127476534,32,54834492,2017-06-26 13:56:55,2017-06-26 18:02:33,closed,Fixes #30 - KeyError for heatmap,"Hi @ResidentMario
I found that issue is relevant to pandas-dev/pandas#14218 so I prepare fix.

Thanks,
Samuel",0,5,[]
26,127431640,31,54834492,2017-06-26 09:33:47,2017-06-26 13:55:01,closed,Fixes #30 - KeyError for heatmap,"Hi @ResidentMario 
I found that issue is relevant to https://github.com/pandas-dev/pandas/issues/14218 so I prepare fix.

Thanks,
Samuel",0,4,[]
27,125194678,29,54834492,2017-06-12 18:01:25,2017-06-12 18:40:16,closed,Fixed improper return in matrix() function when inline=False,This PR addresses issue #27 by changing a line in the definition of `matrix`. ,1,1,[]
28,91874668,17,54834492,2016-11-01 22:16:10,2016-11-01 22:33:13,closed,Fixed incorrect syntax on line 224 which interrupted import,,3,1,[]
29,90844177,16,54834492,2016-10-25 16:30:47,2016-10-25 16:36:32,closed,Geo,,0,15,[]
30,90231765,15,54834492,2016-10-20 16:07:02,2016-10-25 16:09:49,closed,Timestampadd using pandas date_range,"Hey ResidentMario, 

Here is the gist of it: i've added a freq keyword which is by default None and thus defaults to the original two top and bottom row ticks.

If freq is specified (see examples: http://pandas.pydata.org/pandas-docs/stable/timeseries.html#timeseries-offset-aliases) the timestamp will be ordered in that way.

If for some reason the dates cannot be put into the desired frequency, it returns a print statement that tells the user that (could maybe make this more elegant with loggers?).

I've attached some example pngs with 1week 2week 1month and 2month timestamp frequency examples.

Let me know what you think.

![missingnotwomonth](https://cloud.githubusercontent.com/assets/20803912/19567875/9ffa3bae-96ac-11e6-9eb1-41f40ea7c73e.png)
![missingnomonth](https://cloud.githubusercontent.com/assets/20803912/19567877/9ffe90dc-96ac-11e6-9f8e-ce783e559021.png)
![missingnotwoweek](https://cloud.githubusercontent.com/assets/20803912/19567874/9ff91828-96ac-11e6-8165-f42594f28680.png)
![missingnoweek](https://cloud.githubusercontent.com/assets/20803912/19567876/9ffc7518-96ac-11e6-96c0-292c806eb88c.png)
",3,3,[]
31,64516521,1,54834492,2016-03-29 19:03:46,2016-03-29 19:26:44,closed,Fixes typo in README,"The default values for color and fontsize were under the width_ratios explanation.
",0,1,[]
